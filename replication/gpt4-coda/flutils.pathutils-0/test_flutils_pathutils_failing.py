# Automatically generated by Pynguin.
import flutils.pathutils as module_0

def test_case_0():
    try:
        struct_passwd_0 = module_0.get_os_user()
        str_0 = 'i'
        struct_group_0 = module_0.get_os_group(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'Z"4N:;g'
        str_1 = module_0.exists_as(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        struct_passwd_0 = module_0.get_os_user()
        bytes_0 = b'/'
        path_0 = module_0.normalize_path(bytes_0)
        path_1 = module_0.normalize_path(bytes_0)
        generator_0 = module_0.find_paths(bytes_0)
        path_2 = module_0.directory_present(bytes_0)
        module_0.path_absent(bytes_0)
    except BaseException:
        pass

def test_case_3():
    try:
        struct_passwd_0 = module_0.get_os_user()
        int_0 = 384
        struct_group_0 = module_0.get_os_group(int_0)
    except BaseException:
        pass

def test_case_4():
    try:
        int_0 = 4028
        struct_passwd_0 = module_0.get_os_user(int_0)
    except BaseException:
        pass

def test_case_5():
    try:
        struct_passwd_0 = module_0.get_os_user()
        struct_group_0 = module_0.get_os_group()
        int_0 = -11
        struct_group_1 = module_0.get_os_group(int_0)
    except BaseException:
        pass

def test_case_6():
    try:
        bytes_0 = b'~'
        int_0 = 38
        path_0 = module_0.normalize_path(bytes_0)
        path_1 = module_0.directory_present(bytes_0)
        generator_0 = module_0.find_paths(bytes_0)
        module_0.path_absent(bytes_0)
        module_0.chown(bytes_0)
        bool_0 = True
        bool_1 = None
        path_2 = module_0.directory_present(bytes_0, bool_1)
        module_0.chmod(bytes_0, bool_0)
        struct_passwd_0 = module_0.get_os_user(int_0)
        str_0 = 'setup_commands.cfg'
        module_0.chown(bytes_0, str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        struct_passwd_0 = module_0.get_os_user()
        bytes_0 = b'/'
        path_0 = module_0.normalize_path(bytes_0)
        path_1 = module_0.directory_present(bytes_0)
        generator_0 = module_0.find_paths(bytes_0)
        path_2 = module_0.directory_present(bytes_0)
        module_0.path_absent(bytes_0)
    except BaseException:
        pass

def test_case_8():
    try:
        bytes_0 = b'~'
        int_0 = 38
        module_0.chmod(bytes_0, int_0, int_0)
        path_0 = module_0.directory_present(bytes_0)
        generator_0 = module_0.find_paths(bytes_0)
        module_0.path_absent(bytes_0)
        bool_0 = True
        bool_1 = None
        path_1 = module_0.directory_present(bytes_0, bool_1)
        module_0.chmod(bytes_0, bool_0)
        module_0.chown(bytes_0)
        str_0 = '-1'
        module_0.chown(bytes_0, str_0)
        path_2 = module_0.directory_present(bytes_0, int_0)
        module_0.path_absent(bytes_0)
        struct_group_0 = module_0.get_os_group(str_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = '/":;9I/~\x0c'
        path_0 = module_0.directory_present(str_0, str_0, str_0)
    except BaseException:
        pass

def test_case_10():
    try:
        bytes_0 = b'~'
        int_0 = 38
        module_0.chmod(bytes_0, int_0, int_0)
        path_0 = module_0.normalize_path(bytes_0)
        path_1 = module_0.directory_present(bytes_0)
        generator_0 = module_0.find_paths(bytes_0)
        module_0.path_absent(bytes_0)
        module_0.chown(bytes_0)
        bool_0 = True
        bool_1 = None
        path_2 = module_0.directory_present(bytes_0, bool_1)
        module_0.chmod(bytes_0, bool_0)
        struct_passwd_0 = module_0.get_os_user(int_0)
        module_0.chown(bytes_0)
        set_0 = {generator_0, bytes_0}
        module_0.chown(bytes_0, set_0)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = ', is invalid.'
        str_1 = "eZ<3gyrt)D'FmcO$T ["
        str_2 = ''
        dict_0 = {str_0: str_0, str_0: str_0, str_1: str_0, str_2: str_0}
        struct_group_0 = module_0.get_os_group(dict_0)
    except BaseException:
        pass

def test_case_12():
    try:
        bytes_0 = b'~'
        int_0 = 38
        module_0.chmod(bytes_0, int_0, int_0)
        path_0 = module_0.normalize_path(bytes_0)
        path_1 = module_0.directory_present(bytes_0)
        generator_0 = module_0.find_paths(bytes_0)
        module_0.path_absent(bytes_0)
        bool_0 = True
        bool_1 = None
        path_2 = module_0.directory_present(bytes_0, bool_1)
        module_0.chmod(bytes_0, bool_0)
        module_0.chown(bytes_0)
        str_0 = '-1'
        module_0.chown(bytes_0, str_0, str_0)
        path_3 = module_0.directory_present(str_0, int_0)
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = '/*!V>WH j{g_ae(O_v}q'
        generator_0 = module_0.find_paths(str_0)
        struct_passwd_0 = module_0.get_os_user()
        path_0 = module_0.directory_present(str_0)
    except BaseException:
        pass