# Automatically generated by Pynguin.
import pymonet.validation as module_0

def test_case_0():
    pass

def test_case_1():
    bool_0 = None
    float_0 = 2864.054
    validation_0 = module_0.Validation(bool_0, float_0)

def test_case_2():
    tuple_0 = ()
    bytes_0 = b'\x0cL\x1aa\xd4\xe7^+<?\xa8\xaf\xa3"\x96\xaej\xdc\xb5'
    validation_0 = module_0.Validation(tuple_0, bytes_0)
    set_0 = set()
    float_0 = 883.2874
    var_0 = validation_0.is_fail()
    validation_1 = module_0.Validation(set_0, float_0)
    var_1 = validation_1.__eq__(tuple_0)
    var_2 = validation_0.to_box()
    var_3 = validation_0.to_either()
    bool_0 = True
    validation_2 = module_0.Validation(bool_0, bool_0)

def test_case_3():
    bool_0 = True
    list_0 = [bool_0]
    str_0 = '2?e,s_b'
    validation_0 = module_0.Validation(list_0, str_0)
    var_0 = validation_0.__str__()
    validation_1 = module_0.Validation(bool_0, list_0)
    var_1 = validation_1.to_box()
    bool_1 = True
    tuple_0 = (bool_1,)
    str_1 = 'M|k'
    validation_2 = module_0.Validation(tuple_0, str_1)
    var_2 = validation_2.to_maybe()

def test_case_4():
    bytes_0 = b'\xe0\xf2\xc0\x84'
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    validation_0 = module_0.Validation(bytes_0, dict_0)
    var_0 = validation_0.to_maybe()

def test_case_5():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    list_0 = [dict_0]
    bytes_0 = b'\x7f\x19\xa5\xbfc'
    validation_0 = module_0.Validation(list_0, bytes_0)
    var_0 = validation_0.to_box()

def test_case_6():
    str_0 = 'Bl&L$8_wKNOp?'
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_lazy()

def test_case_7():
    float_0 = 2910.566
    set_0 = {float_0}
    bytes_0 = b'\x11S(d%]\xf3\xed$JQ\\\x99`p\x1ev'
    int_0 = -533
    validation_0 = None
    tuple_0 = (bytes_0, int_0, set_0, validation_0)
    validation_1 = module_0.Validation(bytes_0, tuple_0)
    var_0 = validation_1.is_fail()
    int_1 = -1383
    dict_0 = {int_1: set_0, float_0: float_0}
    validation_2 = module_0.Validation(int_1, dict_0)
    var_1 = validation_2.to_box()
    validation_3 = module_0.Validation(float_0, set_0)
    var_2 = validation_3.__eq__(validation_3)
    var_3 = validation_3.to_maybe()
    var_4 = validation_3.__str__()

def test_case_8():
    bytes_0 = b''
    tuple_0 = ()
    bytes_1 = b'\x0cL\x1aa\xd4\xe7^+<?\xa8\xaf\xa3"\x96\xaej\xdc\xb5'
    validation_0 = module_0.Validation(tuple_0, bytes_1)
    set_0 = set()
    float_0 = 883.2874
    var_0 = validation_0.is_fail()
    var_1 = validation_0.to_try()
    validation_1 = module_0.Validation(set_0, float_0)
    var_2 = validation_1.__eq__(tuple_0)
    var_3 = validation_1.to_box()
    var_4 = validation_0.to_box()
    var_5 = validation_0.to_either()
    str_0 = 'W2 tmHGjwCe<N`\r:Ca6'
    validation_2 = module_0.Validation(str_0, bytes_0)
    var_6 = validation_0.to_maybe()
    str_1 = 'n}'
    float_1 = -1012.37
    validation_3 = module_0.Validation(str_1, float_1)
    var_7 = validation_1.to_lazy()
    var_8 = validation_0.to_maybe()
    var_9 = validation_2.__str__()