

# Generated at 2024-03-18 06:57:32.639321
    from pymonet.lazy import Lazy

    # Test success case
    success_validation = Validation.success(10)
    lazy_success = success_validation.to_lazy()
    assert isinstance(lazy_success, Lazy)
    assert lazy_success.eval() == 10

    # Test failure case
    failure_validation = Validation.fail(['error1', 'error2'])
    lazy_failure = failure_validation.to_lazy()
    assert isinstance(lazy_failure, Lazy)
    assert lazy_failure.eval() is None

# Generated at 2024-03-18 06:57:37.565035
    from pymonet.lazy import Lazy

    # Test success case
    success_validation = Validation.success(10)
    lazy_success = success_validation.to_lazy()
    assert isinstance(lazy_success, Lazy)
    assert lazy_success.eval() == 10

    # Test failure case
    failure_validation = Validation.fail(['error1', 'error2'])
    lazy_failure = failure_validation.to_lazy()
    assert isinstance(lazy_failure, Lazy)
    assert lazy_failure.eval() is None

# Generated at 2024-03-18 06:57:41.394380
    # Test successful Validation to Lazy transformation
    success_validation = Validation.success(10)
    lazy_success = success_validation.to_lazy()
    assert lazy_success.run() == 10

    # Test failed Validation to Lazy transformation
    fail_validation = Validation.fail(['error1', 'error2'])
    lazy_fail = fail_validation.to_lazy()
    assert lazy_fail.run() == None

# Generated at 2024-03-18 06:57:45.083318
    from pymonet.lazy import Lazy

    # Test success case
    success_validation = Validation.success(10)
    lazy_success = success_validation.to_lazy()
    assert isinstance(lazy_success, Lazy)
    assert lazy_success.eval() == 10

    # Test failure case
    failure_validation = Validation.fail(['error1', 'error2'])
    lazy_failure = failure_validation.to_lazy()
    assert isinstance(lazy_failure, Lazy)
    assert lazy_failure.eval() is None

# Generated at 2024-03-18 06:57:48.435745
    from pymonet.lazy import Lazy

    # Test success case
    success_validation = Validation.success(10)
    lazy_success = success_validation.to_lazy()
    assert isinstance(lazy_success, Lazy)
    assert lazy_success.eval() == 10

    # Test failure case
    failure_validation = Validation.fail(['error'])
    lazy_failure = failure_validation.to_lazy()
    assert isinstance(lazy_failure, Lazy)
    assert lazy_failure.eval() is None

# Generated at 2024-03-18 06:57:52.056600
    from pymonet.lazy import Lazy

    # Test success case
    success_validation = Validation.success(10)
    lazy_success = success_validation.to_lazy()
    assert isinstance(lazy_success, Lazy)
    assert lazy_success() == 10

    # Test failure case
    failure_validation = Validation.fail(['error1', 'error2'])
    lazy_failure = failure_validation.to_lazy()
    assert isinstance(lazy_failure, Lazy)
    assert lazy_failure() is None

# Generated at 2024-03-18 06:57:55.407363
    # Test success case
    success_validation = Validation.success(10)
    lazy_success = success_validation.to_lazy()
    assert lazy_success.run() == 10

    # Test failure case
    failure_validation = Validation.fail(['error'])
    lazy_failure = failure_validation.to_lazy()
    assert lazy_failure.run() is None

# Generated at 2024-03-18 06:57:59.161169
    # Test successful Validation to Lazy transformation
    success_validation = Validation.success(10)
    lazy_success = success_validation.to_lazy()
    assert lazy_success.run() == 10

    # Test failed Validation to Lazy transformation
    fail_validation = Validation.fail(['error1', 'error2'])
    lazy_fail = fail_validation.to_lazy()
    assert lazy_fail.run() == None

# Generated at 2024-03-18 06:58:03.561201
    from pymonet.lazy import Lazy

    # Test success case
    success_validation = Validation.success(10)
    lazy_success = success_validation.to_lazy()
    assert isinstance(lazy_success, Lazy)
    assert lazy_success.run() == 10

    # Test failure case
    failure_validation = Validation.fail(['error1', 'error2'])
    lazy_failure = failure_validation.to_lazy()
    assert isinstance(lazy_failure, Lazy)
    assert lazy_failure.run() is None

# Generated at 2024-03-18 06:58:07.770491
    from pymonet.lazy import Lazy

    # Test success case
    success_validation = Validation.success(10)
    lazy_success = success_validation.to_lazy()
    assert isinstance(lazy_success, Lazy)
    assert lazy_success.eval() == 10

    # Test failure case
    failure_validation = Validation.fail(['error1', 'error2'])
    lazy_failure = failure_validation.to_lazy()
    assert isinstance(lazy_failure, Lazy)
    assert lazy_failure.eval() is None

# Generated at 2024-03-18 06:58:17.248239
    from pymonet.lazy import Lazy

    # Test success case
    success_validation = Validation.success(10)
    lazy_success = success_validation.to_lazy()
    assert isinstance(lazy_success, Lazy)
    assert lazy_success.eval() == 10

    # Test failure case
    failure_validation = Validation.fail(['error1', 'error2'])
    lazy_failure = failure_validation.to_lazy()
    assert isinstance(lazy_failure, Lazy)
    assert lazy_failure.eval() is None

# Generated at 2024-03-18 06:58:20.963288
    from pymonet.lazy import Lazy

    # Test success case
    success_validation = Validation.success(10)
    lazy_success = success_validation.to_lazy()
    assert isinstance(lazy_success, Lazy)
    assert lazy_success.eval() == 10

    # Test failure case
    failure_validation = Validation.fail(['error1', 'error2'])
    lazy_failure = failure_validation.to_lazy()
    assert isinstance(lazy_failure, Lazy)
    assert lazy_failure.eval() is None

# Generated at 2024-03-18 06:58:24.015495
    from pymonet.lazy import Lazy

    # Test success case
    success_validation = Validation.success(10)
    success_lazy = success_validation.to_lazy()
    assert isinstance(success_lazy, Lazy)
    assert success_lazy.eval() == 10

    # Test failure case
    failure_validation = Validation.fail(['error'])
    failure_lazy = failure_validation.to_lazy()
    assert isinstance(failure_lazy, Lazy)
    assert failure_lazy.eval() is None

# Generated at 2024-03-18 06:58:27.472982
    from pymonet.lazy import Lazy

    # Test success case
    success_validation = Validation.success(10)
    lazy_success = success_validation.to_lazy()
    assert isinstance(lazy_success, Lazy)
    assert lazy_success.eval() == 10

    # Test failure case
    failure_validation = Validation.fail(['error1', 'error2'])
    lazy_failure = failure_validation.to_lazy()
    assert isinstance(lazy_failure, Lazy)
    assert lazy_failure.eval() is None

# Generated at 2024-03-18 06:58:31.111525
    from pymonet.lazy import Lazy

    # Test success case
    success_validation = Validation.success(10)
    lazy_success = success_validation.to_lazy()
    assert isinstance(lazy_success, Lazy)
    assert lazy_success.run() == 10

    # Test failure case
    failure_validation = Validation.fail(['error1', 'error2'])
    lazy_failure = failure_validation.to_lazy()
    assert isinstance(lazy_failure, Lazy)
    assert lazy_failure.run() is None

# Generated at 2024-03-18 06:58:34.514275
    # Test successful Validation to Lazy transformation
    success_validation = Validation.success(10)
    lazy_success = success_validation.to_lazy()
    assert lazy_success.run() == 10

    # Test failed Validation to Lazy transformation
    fail_validation = Validation.fail(['error1', 'error2'])
    lazy_fail = fail_validation.to_lazy()
    assert lazy_fail.run() == None

# Generated at 2024-03-18 06:58:36.893727
    # Arrange
    success_validation = Validation.success(10)
    fail_validation = Validation.fail(['error'])

    # Act
    success_lazy = success_validation.to_lazy()
    fail_lazy = fail_validation.to_lazy()

    # Assert
    assert success_lazy() == 10
    assert fail_lazy() == None

# Generated at 2024-03-18 06:58:39.702136
    from pymonet.lazy import Lazy

    # Test success case
    success_validation = Validation.success(10)
    lazy_success = success_validation.to_lazy()
    assert isinstance(lazy_success, Lazy)
    assert lazy_success.eval() == 10

    # Test failure case
    failure_validation = Validation.fail(['error1', 'error2'])
    lazy_failure = failure_validation.to_lazy()
    assert isinstance(lazy_failure, Lazy)
    assert lazy_failure.eval() is None

# Generated at 2024-03-18 06:58:44.595799
    from pymonet.lazy import Lazy

    # Test success case
    success_validation = Validation.success(10)
    lazy_success = success_validation.to_lazy()
    assert isinstance(lazy_success, Lazy)
    assert lazy_success() == 10

    # Test failure case
    failure_validation = Validation.fail(['error1', 'error2'])
    lazy_failure = failure_validation.to_lazy()
    assert isinstance(lazy_failure, Lazy)
    assert lazy_failure() is None

    print("test_Validation_to_lazy passed")

# Generated at 2024-03-18 06:58:47.680639
    from pymonet.lazy import Lazy

    # Test success case
    validation_success = Validation.success(10)
    lazy_success = validation_success.to_lazy()
    assert isinstance(lazy_success, Lazy)
    assert lazy_success.eval() == 10

    # Test failure case
    validation_failure = Validation.fail(['error1', 'error2'])
    lazy_failure = validation_failure.to_lazy()
    assert isinstance(lazy_failure, Lazy)
    assert lazy_failure.eval() is None

# Generated at 2024-03-18 06:58:59.008994
    from pymonet.lazy import Lazy

    # Test success case
    success_validation = Validation.success(10)
    lazy_success = success_validation.to_lazy()
    assert isinstance(lazy_success, Lazy)
    assert lazy_success.eval() == 10

    # Test failure case
    failure_validation = Validation.fail(['error'])
    lazy_failure = failure_validation.to_lazy()
    assert isinstance(lazy_failure, Lazy)
    assert lazy_failure.eval() is None

# Generated at 2024-03-18 06:59:01.913520
    from pymonet.lazy import Lazy

    # Test success case
    success_validation = Validation.success(10)
    lazy_success = success_validation.to_lazy()
    assert isinstance(lazy_success, Lazy)
    assert lazy_success.eval() == 10

    # Test failure case
    failure_validation = Validation.fail(['error'])
    lazy_failure = failure_validation.to_lazy()
    assert isinstance(lazy_failure, Lazy)
    assert lazy_failure.eval() is None

# Generated at 2024-03-18 06:59:05.131769
    from pymonet.lazy import Lazy

    # Test success case
    success_validation = Validation.success(10)
    lazy_success = success_validation.to_lazy()
    assert isinstance(lazy_success, Lazy)
    assert lazy_success.eval() == 10

    # Test failure case
    failure_validation = Validation.fail(['error1', 'error2'])
    lazy_failure = failure_validation.to_lazy()
    assert isinstance(lazy_failure, Lazy)
    assert lazy_failure.eval() is None

# Generated at 2024-03-18 06:59:08.566531
    from pymonet.lazy import Lazy

    # Test success case
    success_validation = Validation.success(10)
    lazy_success = success_validation.to_lazy()
    assert isinstance(lazy_success, Lazy)
    assert lazy_success.eval() == 10

    # Test failure case
    failure_validation = Validation.fail(['error1', 'error2'])
    lazy_failure = failure_validation.to_lazy()
    assert isinstance(lazy_failure, Lazy)
    assert lazy_failure.eval() is None

# Generated at 2024-03-18 06:59:12.185309
    # Test success case
    success_validation = Validation.success(10)
    lazy_success = success_validation.to_lazy()
    assert lazy_success.run() == 10

    # Test failure case
    failure_validation = Validation.fail(['error1', 'error2'])
    lazy_failure = failure_validation.to_lazy()
    assert lazy_failure.run() is None

# Generated at 2024-03-18 06:59:16.360003
    # Test successful Validation to Lazy transformation
    success_validation = Validation.success(10)
    lazy_success = success_validation.to_lazy()
    assert lazy_success.run() == 10

    # Test failed Validation to Lazy transformation
    fail_validation = Validation.fail(['error1', 'error2'])
    lazy_fail = fail_validation.to_lazy()
    assert lazy_fail.run() is None

# Generated at 2024-03-18 06:59:20.981567
    # Test successful Validation to Lazy transformation
    success_validation = Validation.success(10)
    lazy_success = success_validation.to_lazy()
    assert lazy_success.run() == 10

    # Test failed Validation to Lazy transformation
    fail_validation = Validation.fail(['error1', 'error2'])
    lazy_fail = fail_validation.to_lazy()
    assert lazy_fail.run() == None

# Generated at 2024-03-18 06:59:24.316143
    from pymonet.lazy import Lazy

    # Test success case
    success_validation = Validation.success(10)
    lazy_success = success_validation.to_lazy()
    assert isinstance(lazy_success, Lazy)
    assert lazy_success.eval() == 10

    # Test failure case
    failure_validation = Validation.fail(['error1', 'error2'])
    lazy_failure = failure_validation.to_lazy()
    assert isinstance(lazy_failure, Lazy)
    assert lazy_failure.eval() is None

# Generated at 2024-03-18 06:59:27.789292
    from pymonet.lazy import Lazy

    # Test success case
    success_validation = Validation.success(10)
    lazy_success = success_validation.to_lazy()
    assert isinstance(lazy_success, Lazy)
    assert lazy_success.eval() == 10

    # Test failure case
    failure_validation = Validation.fail(['error1', 'error2'])
    lazy_failure = failure_validation.to_lazy()
    assert isinstance(lazy_failure, Lazy)
    assert lazy_failure.eval() is None

# Generated at 2024-03-18 06:59:30.317541
    from pymonet.lazy import Lazy

    # Test success case
    validation_success = Validation.success(10)
    lazy_success = validation_success.to_lazy()
    assert isinstance(lazy_success, Lazy)
    assert lazy_success.eval() == 10

    # Test failure case
    validation_failure = Validation.fail(['error1', 'error2'])
    lazy_failure = validation_failure.to_lazy()
    assert isinstance(lazy_failure, Lazy)
    assert lazy_failure.eval() is None

# Generated at 2024-03-18 06:59:51.246649
    from pymonet.lazy import Lazy

    # Test success case
    success_validation = Validation.success(10)
    lazy_success = success_validation.to_lazy()
    assert isinstance(lazy_success, Lazy)
    assert lazy_success.eval() == 10

    # Test failure case
    failure_validation = Validation.fail(['error1', 'error2'])
    lazy_failure = failure_validation.to_lazy()
    assert isinstance(lazy_failure, Lazy)
    assert lazy_failure.eval() is None

# Generated at 2024-03-18 06:59:54.569738
    from pymonet.lazy import Lazy

    # Test success case
    success_validation = Validation.success(10)
    success_lazy = success_validation.to_lazy()
    assert isinstance(success_lazy, Lazy)
    assert success_lazy.eval() == 10

    # Test failure case
    failure_validation = Validation.fail(['error1', 'error2'])
    failure_lazy = failure_validation.to_lazy()
    assert isinstance(failure_lazy, Lazy)
    assert failure_lazy.eval() is None

# Generated at 2024-03-18 06:59:57.534953
    # Test successful Validation to Lazy transformation
    success_validation = Validation.success(10)
    lazy_success = success_validation.to_lazy()
    assert lazy_success.run() == 10

    # Test failed Validation to Lazy transformation
    fail_validation = Validation.fail(['error1', 'error2'])
    lazy_fail = fail_validation.to_lazy()
    assert lazy_fail.run() is None

# Generated at 2024-03-18 07:00:01.736248
    # Test successful Validation to Lazy transformation
    success_validation = Validation.success(10)
    lazy_success = success_validation.to_lazy()
    assert lazy_success.run() == 10

    # Test failed Validation to Lazy transformation
    fail_validation = Validation.fail(['error1', 'error2'])
    lazy_fail = fail_validation.to_lazy()
    assert lazy_fail.run() is None

# Generated at 2024-03-18 07:00:04.490390
    from pymonet.lazy import Lazy

    # Test success case
    success_validation = Validation.success(10)
    success_lazy = success_validation.to_lazy()
    assert isinstance(success_lazy, Lazy)
    assert success_lazy.eval() == 10

    # Test failure case
    failure_validation = Validation.fail(['error1', 'error2'])
    failure_lazy = failure_validation.to_lazy()
    assert isinstance(failure_lazy, Lazy)
    assert failure_lazy.eval() is None

# Generated at 2024-03-18 07:00:07.625306
    from pymonet.lazy import Lazy

    # Test success case
    success_validation = Validation.success(10)
    lazy_success = success_validation.to_lazy()
    assert isinstance(lazy_success, Lazy)
    assert lazy_success.eval() == 10

    # Test failure case
    failure_validation = Validation.fail(['error1', 'error2'])
    lazy_failure = failure_validation.to_lazy()
    assert isinstance(lazy_failure, Lazy)
    assert lazy_failure.eval() is None

# Generated at 2024-03-18 07:00:12.443833
    from pymonet.lazy import Lazy

    # Test success case
    success_validation = Validation.success(10)
    success_lazy = success_validation.to_lazy()
    assert isinstance(success_lazy, Lazy)
    assert success_lazy.value() == 10

    # Test failure case
    failure_validation = Validation.fail(['error'])
    failure_lazy = failure_validation.to_lazy()
    assert isinstance(failure_lazy, Lazy)
    assert failure_lazy.value() is None

# Generated at 2024-03-18 07:00:15.266107
    # Test success case
    success_validation = Validation.success(10)
    lazy_success = success_validation.to_lazy()
    assert lazy_success.run() == 10

    # Test failure case
    failure_validation = Validation.fail(['error'])
    lazy_failure = failure_validation.to_lazy()
    assert lazy_failure.run() is None

# Generated at 2024-03-18 07:00:18.133273
    # Test success case
    success_validation = Validation.success(10)
    lazy_success = success_validation.to_lazy()
    assert lazy_success.run() == 10

    # Test failure case
    failure_validation = Validation.fail(['error'])
    lazy_failure = failure_validation.to_lazy()
    assert lazy_failure.run() is None

# Generated at 2024-03-18 07:00:21.556014
    from pymonet.lazy import Lazy

    # Test success case
    success_validation = Validation.success(10)
    lazy_success = success_validation.to_lazy()
    assert isinstance(lazy_success, Lazy)
    assert lazy_success.eval() == 10

    # Test failure case
    failure_validation = Validation.fail(['error1', 'error2'])
    lazy_failure = failure_validation.to_lazy()
    assert isinstance(lazy_failure, Lazy)
    assert lazy_failure.eval() is None

# Generated at 2024-03-18 07:01:01.069760
    # Test success case
    success_validation = Validation.success(10)
    lazy_success = success_validation.to_lazy()
    assert lazy_success.run() == 10

    # Test failure case
    failure_validation = Validation.fail(['error1', 'error2'])
    lazy_failure = failure_validation.to_lazy()
    assert lazy_failure.run() is None

# Generated at 2024-03-18 07:01:06.720141
    from pymonet.lazy import Lazy

    # Test success case
    success_validation = Validation.success(10)
    success_lazy = success_validation.to_lazy()
    assert isinstance(success_lazy, Lazy)
    assert success_lazy.eval() == 10

    # Test failure case
    failure_validation = Validation.fail(['error1', 'error2'])
    failure_lazy = failure_validation.to_lazy()
    assert isinstance(failure_lazy, Lazy)
    assert failure_lazy.eval() is None

# Generated at 2024-03-18 07:01:11.540762
    from pymonet.lazy import Lazy

    # Test success case
    success_validation = Validation.success(10)
    lazy_success = success_validation.to_lazy()
    assert isinstance(lazy_success, Lazy)
    assert lazy_success.eval() == 10

    # Test failure case
    failure_validation = Validation.fail(['error'])
    lazy_failure = failure_validation.to_lazy()
    assert isinstance(lazy_failure, Lazy)
    assert lazy_failure.eval() is None

# Generated at 2024-03-18 07:01:14.979150
    # Test success case
    success_validation = Validation.success(10)
    lazy_success = success_validation.to_lazy()
    assert lazy_success.run() == 10

    # Test failure case
    failure_validation = Validation.fail(['error1', 'error2'])
    lazy_failure = failure_validation.to_lazy()
    assert lazy_failure.run() is None

# Generated at 2024-03-18 07:01:17.994839
    # Test success case
    success_validation = Validation.success(10)
    lazy_success = success_validation.to_lazy()
    assert lazy_success.run() == 10

    # Test failure case
    failure_validation = Validation.fail(['error1', 'error2'])
    lazy_failure = failure_validation.to_lazy()
    assert lazy_failure.run() == None

# Generated at 2024-03-18 07:01:22.200883
    from pymonet.lazy import Lazy

    # Test success case
    success_validation = Validation.success(10)
    lazy_success = success_validation.to_lazy()
    assert isinstance(lazy_success, Lazy)
    assert lazy_success.eval() == 10

    # Test failure case
    failure_validation = Validation.fail(['error'])
    lazy_failure = failure_validation.to_lazy()
    assert isinstance(lazy_failure, Lazy)
    assert lazy_failure.eval() is None

# Generated at 2024-03-18 07:01:25.251313
    # Test successful Validation to Lazy transformation
    success_validation = Validation.success(10)
    lazy_success = success_validation.to_lazy()
    assert lazy_success.run() == 10

    # Test failed Validation to Lazy transformation
    fail_validation = Validation.fail(['error1', 'error2'])
    lazy_fail = fail_validation.to_lazy()
    assert lazy_fail.run() is None

# Generated at 2024-03-18 07:01:29.856467
    # Test successful Validation to Lazy transformation
    success_validation = Validation.success(10)
    lazy_success = success_validation.to_lazy()
    assert lazy_success.run() == 10

    # Test failed Validation to Lazy transformation
    fail_validation = Validation.fail(['error1', 'error2'])
    lazy_fail = fail_validation.to_lazy()
    assert lazy_fail.run() is None

# Generated at 2024-03-18 07:01:32.407445
    from pymonet.lazy import Lazy

    # Test success case
    success_validation = Validation.success(10)
    lazy_success = success_validation.to_lazy()
    assert isinstance(lazy_success, Lazy)
    assert lazy_success.value() == 10

    # Test failure case
    failure_validation = Validation.fail(['error'])
    lazy_failure = failure_validation.to_lazy()
    assert isinstance(lazy_failure, Lazy)
    assert lazy_failure.value() is None

# Generated at 2024-03-18 07:01:36.190823
    # Test successful Validation to Lazy transformation
    success_validation = Validation.success(10)
    lazy_success = success_validation.to_lazy()
    assert lazy_success.run() == 10

    # Test failed Validation to Lazy transformation
    fail_validation = Validation.fail(['error1', 'error2'])
    lazy_fail = fail_validation.to_lazy()
    assert lazy_fail.run() is None

# Generated at 2024-03-18 07:02:50.243710
    from pymonet.lazy import Lazy

    # Test success case
    success_validation = Validation.success(10)
    lazy_success = success_validation.to_lazy()
    assert isinstance(lazy_success, Lazy)
    assert lazy_success.eval() == 10

    # Test failure case
    failure_validation = Validation.fail(['error1', 'error2'])
    lazy_failure = failure_validation.to_lazy()
    assert isinstance(lazy_failure, Lazy)
    assert lazy_failure.eval() is None

# Generated at 2024-03-18 07:02:52.947577
    from pymonet.lazy import Lazy

    # Test success case
    success_validation = Validation.success(10)
    lazy_success = success_validation.to_lazy()
    assert isinstance(lazy_success, Lazy)
    assert lazy_success.eval() == 10

    # Test failure case
    failure_validation = Validation.fail(['error'])
    lazy_failure = failure_validation.to_lazy()
    assert isinstance(lazy_failure, Lazy)
    assert lazy_failure.eval() is None

# Generated at 2024-03-18 07:02:57.943118
    from pymonet.lazy import Lazy

    # Test success case
    success_validation = Validation.success(10)
    lazy_success = success_validation.to_lazy()
    assert isinstance(lazy_success, Lazy)
    assert lazy_success.eval() == 10

    # Test failure case
    failure_validation = Validation.fail(['error1', 'error2'])
    lazy_failure = failure_validation.to_lazy()
    assert isinstance(lazy_failure, Lazy)
    assert lazy_failure.eval() is None

    print("test_Validation_to_lazy passed")

# Generated at 2024-03-18 07:03:03.403468
    from pymonet.lazy import Lazy

    # Test success case
    success_validation = Validation.success(42)
    lazy_success = success_validation.to_lazy()
    assert isinstance(lazy_success, Lazy)
    assert lazy_success.eval() == 42

    # Test failure case
    failure_validation = Validation.fail(['error1', 'error2'])
    lazy_failure = failure_validation.to_lazy()
    assert isinstance(lazy_failure, Lazy)
    assert lazy_failure.eval() is None

# Generated at 2024-03-18 07:03:07.037305
    # Test successful Validation to Lazy transformation
    success_validation = Validation.success(10)
    lazy_success = success_validation.to_lazy()
    assert lazy_success.run() == 10

    # Test failed Validation to Lazy transformation
    fail_validation = Validation.fail(['error1', 'error2'])
    lazy_fail = fail_validation.to_lazy()
    assert lazy_fail.run() is None

# Generated at 2024-03-18 07:03:10.547855
    # Test successful Validation to Lazy transformation
    success_validation = Validation.success(10)
    lazy_success = success_validation.to_lazy()
    assert lazy_success.run() == 10

    # Test failed Validation to Lazy transformation
    fail_validation = Validation.fail(['error1', 'error2'])
    lazy_fail = fail_validation.to_lazy()
    assert lazy_fail.run() is None

# Generated at 2024-03-18 07:03:14.722645
    from pymonet.lazy import Lazy

    # Test success case
    success_validation = Validation.success(10)
    lazy_success = success_validation.to_lazy()
    assert isinstance(lazy_success, Lazy)
    assert lazy_success.eval() == 10

    # Test failure case
    failure_validation = Validation.fail(['error'])
    lazy_failure = failure_validation.to_lazy()
    assert isinstance(lazy_failure, Lazy)
    assert lazy_failure.eval() is None

# Generated at 2024-03-18 07:03:19.923219
    from pymonet.lazy import Lazy

    # Test success case
    success_validation = Validation.success(10)
    lazy_success = success_validation.to_lazy()
    assert isinstance(lazy_success, Lazy)
    assert lazy_success.run() == 10

    # Test failure case
    failure_validation = Validation.fail(['error1', 'error2'])
    lazy_failure = failure_validation.to_lazy()
    assert isinstance(lazy_failure, Lazy)
    assert lazy_failure.run() is None

# Generated at 2024-03-18 07:03:22.906179
    from pymonet.lazy import Lazy

    # Test success case
    success_validation = Validation.success(10)
    lazy_success = success_validation.to_lazy()
    assert isinstance(lazy_success, Lazy)
    assert lazy_success.value() == 10

    # Test failure case
    failure_validation = Validation.fail(['error'])
    lazy_failure = failure_validation.to_lazy()
    assert isinstance(lazy_failure, Lazy)
    assert lazy_failure.value() is None

# Generated at 2024-03-18 07:03:26.418432
    # Test successful Validation to Lazy transformation
    success_validation = Validation.success(10)
    lazy_success = success_validation.to_lazy()
    assert lazy_success.run() == 10

    # Test failed Validation to Lazy transformation
    fail_validation = Validation.fail(['error1', 'error2'])
    lazy_fail = fail_validation.to_lazy()
    assert lazy_fail.run() is None

# Generated at 2024-03-18 07:05:42.953006
    from pymonet.lazy import Lazy

    # Test success case
    success_validation = Validation.success(10)
    lazy_success = success_validation.to_lazy()
    assert isinstance(lazy_success, Lazy)
    assert lazy_success.eval() == 10

    # Test failure case
    failure_validation = Validation.fail(['error'])
    lazy_failure = failure_validation.to_lazy()
    assert isinstance(lazy_failure, Lazy)
    assert lazy_failure.eval() is None

# Generated at 2024-03-18 07:05:46.101711
    # Test successful Validation to Lazy transformation
    success_validation = Validation.success(10)
    lazy_success = success_validation.to_lazy()
    assert lazy_success.run() == 10

    # Test failed Validation to Lazy transformation
    fail_validation = Validation.fail(['error1', 'error2'])
    lazy_fail = fail_validation.to_lazy()
    assert lazy_fail.run() is None

# Generated at 2024-03-18 07:05:49.537344
    from pymonet.lazy import Lazy

    # Test success case
    success_validation = Validation.success(10)
    lazy_success = success_validation.to_lazy()
    assert isinstance(lazy_success, Lazy)
    assert lazy_success.eval() == 10

    # Test failure case
    failure_validation = Validation.fail(['error1', 'error2'])
    lazy_failure = failure_validation.to_lazy()
    assert isinstance(lazy_failure, Lazy)
    assert lazy_failure.eval() is None

# Generated at 2024-03-18 07:05:53.173129
    from pymonet.lazy import Lazy

    # Test success case
    success_validation = Validation.success(10)
    lazy_success = success_validation.to_lazy()
    assert isinstance(lazy_success, Lazy)
    assert lazy_success.eval() == 10

    # Test failure case
    failure_validation = Validation.fail(['error1', 'error2'])
    lazy_failure = failure_validation.to_lazy()
    assert isinstance(lazy_failure, Lazy)
    assert lazy_failure.eval() is None

# Generated at 2024-03-18 07:05:55.953290
    # Test successful Validation to Lazy transformation
    success_validation = Validation.success(10)
    lazy_success = success_validation.to_lazy()
    assert lazy_success.run() == 10

    # Test failed Validation to Lazy transformation
    fail_validation = Validation.fail(['error1', 'error2'])
    lazy_fail = fail_validation.to_lazy()
    assert lazy_fail.run() is None

# Generated at 2024-03-18 07:05:59.024319
    from pymonet.lazy import Lazy

    # Test success case
    success_validation = Validation.success(42)
    lazy_success = success_validation.to_lazy()
    assert isinstance(lazy_success, Lazy)
    assert lazy_success.eval() == 42

    # Test failure case
    failure_validation = Validation.fail(['error'])
    lazy_failure = failure_validation.to_lazy()
    assert isinstance(lazy_failure, Lazy)
    assert lazy_failure.eval() is None

# Generated at 2024-03-18 07:06:02.596910
    from pymonet.lazy import Lazy

    # Test success case
    success_validation = Validation.success(10)
    success_lazy = success_validation.to_lazy()
    assert isinstance(success_lazy, Lazy)
    assert success_lazy.eval() == 10

    # Test failure case
    failure_validation = Validation.fail(['error1', 'error2'])
    failure_lazy = failure_validation.to_lazy()
    assert isinstance(failure_lazy, Lazy)
    assert failure_lazy.eval() is None

# Generated at 2024-03-18 07:06:05.509278
    # Test success case
    success_validation = Validation.success(10)
    lazy_success = success_validation.to_lazy()
    assert lazy_success.run() == 10

    # Test failure case
    failure_validation = Validation.fail(['error'])
    lazy_failure = failure_validation.to_lazy()
    assert lazy_failure.run() is None

# Generated at 2024-03-18 07:06:08.953554
    from pymonet.lazy import Lazy

    # Test success case
    success_validation = Validation.success(10)
    lazy_success = success_validation.to_lazy()
    assert isinstance(lazy_success, Lazy)
    assert lazy_success.eval() == 10

    # Test failure case
    failure_validation = Validation.fail(['error1', 'error2'])
    lazy_failure = failure_validation.to_lazy()
    assert isinstance(lazy_failure, Lazy)
    assert lazy_failure.eval() is None

# Generated at 2024-03-18 07:06:11.967076
    from pymonet.lazy import Lazy

    # Test success case
    success_validation = Validation.success(10)
    lazy_success = success_validation.to_lazy()
    assert isinstance(lazy_success, Lazy)
    assert lazy_success.eval() == 10

    # Test failure case
    failure_validation = Validation.fail(['error'])
    lazy_failure = failure_validation.to_lazy()
    assert isinstance(lazy_failure, Lazy)
    assert lazy_failure.eval() is None