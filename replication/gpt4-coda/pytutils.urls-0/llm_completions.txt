

# Generated at 2024-03-18 07:23:32.030198
    # Test updating existing parameter
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'stuff'}) == 'http://example.com?biz=baz&foo=stuff'
    
    # Test adding new parameter
    assert update_query_params('http://example.com?foo=bar', {'new': 'value'}) == 'http://example.com?foo=bar&new=value'
    
    # Test updating multiple parameters
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'newfoo', 'biz': 'newbiz'}) == 'http://example.com?biz=newbiz&foo=newfoo'
    
    # Test with no parameters to update (should return the same URL)
    assert update_query_params('http://example.com?foo=bar', {}) == 'http://example.com?foo=bar'
    
    # Test with doseq=False
    assert

# Generated at 2024-03-18 07:23:37.163732
    # Test updating existing parameter
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'stuff'}) == 'http://example.com?biz=baz&foo=stuff'

    # Test adding new parameter
    assert update_query_params('http://example.com?foo=bar', {'new': 'value'}) == 'http://example.com?foo=bar&new=value'

    # Test updating multiple parameters
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'newfoo', 'biz': 'newbiz'}) == 'http://example.com?biz=newbiz&foo=newfoo'

    # Test removing a parameter by setting it to None
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': None}) == 'http://example.com?biz=baz'

    # Test with doseq=False
   

# Generated at 2024-03-18 07:23:43.102346
    # Test updating existing parameter
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'stuff'}) == 'http://example.com?biz=baz&foo=stuff'
    
    # Test adding new parameter
    assert update_query_params('http://example.com?foo=bar', {'new': 'value'}) == 'http://example.com?foo=bar&new=value'
    
    # Test updating multiple parameters
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'newfoo', 'biz': 'newbiz'}) == 'http://example.com?biz=newbiz&foo=newfoo'
    
    # Test with no parameters to update (should return the same URL)
    assert update_query_params('http://example.com?foo=bar', {}) == 'http://example.com?foo=bar'
    
    # Test with doseq=False
    assert

# Generated at 2024-03-18 07:23:48.378848
    # Test updating existing parameter
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'stuff'}) == 'http://example.com?biz=baz&foo=stuff'
    
    # Test adding new parameter
    assert update_query_params('http://example.com?foo=bar', {'new': 'value'}) == 'http://example.com?foo=bar&new=value'
    
    # Test updating multiple parameters
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'newfoo', 'biz': 'newbiz'}) == 'http://example.com?biz=newbiz&foo=newfoo'
    
    # Test with doseq=False
    assert update_query_params('http://example.com?foo=bar&foo=baz', {'foo': ['new1', 'new2']}, doseq=False) == 'http://example.com?foo=new1

# Generated at 2024-03-18 07:23:55.005952
    # Test updating existing parameter
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'stuff'}) == 'http://example.com?biz=baz&foo=stuff'
    
    # Test adding new parameter
    assert update_query_params('http://example.com?foo=bar', {'new': 'value'}) == 'http://example.com?foo=bar&new=value'
    
    # Test updating multiple parameters
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'newfoo', 'biz': 'newbiz'}) == 'http://example.com?biz=newbiz&foo=newfoo'
    
    # Test with no parameters to update (should return the same URL)
    assert update_query_params('http://example.com?foo=bar', {}) == 'http://example.com?foo=bar'
    
    # Test with doseq=False
    assert

# Generated at 2024-03-18 07:24:09.346192
    # Test updating existing parameter
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'stuff'}) == 'http://example.com?biz=baz&foo=stuff'
    
    # Test adding new parameter
    assert update_query_params('http://example.com?foo=bar', {'new': 'value'}) == 'http://example.com?foo=bar&new=value'
    
    # Test updating multiple parameters
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'newfoo', 'biz': 'newbiz'}) == 'http://example.com?biz=newbiz&foo=newfoo'
    
    # Test with no parameters to update (should return the same URL)
    assert update_query_params('http://example.com', {}) == 'http://example.com'
    
    # Test with doseq=False, parameters with multiple values should be joined by comma


# Generated at 2024-03-18 07:24:19.719257
    # Test updating existing parameter
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'stuff'}) == 'http://example.com?biz=baz&foo=stuff'
    
    # Test adding new parameter
    assert update_query_params('http://example.com?foo=bar', {'new': 'value'}) == 'http://example.com?foo=bar&new=value'
    
    # Test updating multiple parameters
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'newfoo', 'biz': 'newbiz'}) == 'http://example.com?biz=newbiz&foo=newfoo'
    
    # Test removing a parameter by setting it to None
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': None}) == 'http://example.com?biz=baz'
    
    # Test with do

# Generated at 2024-03-18 07:24:24.902358
    # Test updating existing parameter
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'stuff'}) == 'http://example.com?biz=baz&foo=stuff'

    # Test adding new parameter
    assert update_query_params('http://example.com?foo=bar', {'new': 'value'}) == 'http://example.com?foo=bar&new=value'

    # Test updating and adding parameter
    assert update_query_params('http://example.com?foo=bar', {'foo': 'new', 'another': 'value'}) == 'http://example.com?foo=new&another=value'

    # Test with multiple values for a parameter
    assert update_query_params('http://example.com?foo=bar', {'foo': ['new', 'values']}, doseq=True) == 'http://example.com?foo=new&foo=values'

    # Test without doseq (should join multiple

# Generated at 2024-03-18 07:24:30.747001
    # Test updating existing parameter
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'stuff'}) == 'http://example.com?biz=baz&foo=stuff'

    # Test adding new parameter
    assert update_query_params('http://example.com?foo=bar', {'new': 'value'}) == 'http://example.com?foo=bar&new=value'

    # Test updating and adding parameter
    assert update_query_params('http://example.com?foo=bar', {'foo': 'new', 'another': 'value'}) == 'http://example.com?foo=new&another=value'

    # Test with multiple values for a parameter
    assert update_query_params('http://example.com?foo=bar', {'foo': ['new', 'values']}, doseq=True) == 'http://example.com?foo=new&foo=values'

    # Test without doseq (should join multiple

# Generated at 2024-03-18 07:24:38.393834
    # Test updating existing parameter
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'stuff'}) == 'http://example.com?biz=baz&foo=stuff'
    
    # Test adding new parameter
    assert update_query_params('http://example.com?foo=bar', {'new': 'value'}) == 'http://example.com?foo=bar&new=value'
    
    # Test updating multiple parameters
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'newfoo', 'biz': 'newbiz'}) == 'http://example.com?biz=newbiz&foo=newfoo'
    
    # Test removing a parameter by setting it to None
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': None}) == 'http://example.com?biz=baz'
    
    # Test with do

# Generated at 2024-03-18 07:24:50.863369
    # Test updating existing parameter
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'stuff'}) == 'http://example.com?biz=baz&foo=stuff'

    # Test adding new parameter
    assert update_query_params('http://example.com?foo=bar', {'new': 'value'}) == 'http://example.com?foo=bar&new=value'

    # Test updating multiple parameters
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'newfoo', 'biz': 'newbiz'}) == 'http://example.com?biz=newbiz&foo=newfoo'

    # Test removing a parameter by setting it to None
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': None}) == 'http://example.com?biz=baz'

    # Test with doseq=False
   

# Generated at 2024-03-18 07:24:57.912504
    # Test updating existing parameter
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'stuff'}) == 'http://example.com?biz=baz&foo=stuff'
    
    # Test adding new parameter
    assert update_query_params('http://example.com?foo=bar', {'new': 'value'}) == 'http://example.com?foo=bar&new=value'
    
    # Test updating and adding parameter
    assert update_query_params('http://example.com?foo=bar', {'foo': 'new', 'another': 'value'}) == 'http://example.com?foo=new&another=value'
    
    # Test with multiple values for a parameter
    assert update_query_params('http://example.com?foo=bar&foo=baz', {'foo': ['new1', 'new2']}) == 'http://example.com?foo=new1&foo=new2'
    
    # Test

# Generated at 2024-03-18 07:25:04.124714
    # Test updating existing parameter
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'stuff'}) == 'http://example.com?biz=baz&foo=stuff'
    
    # Test adding new parameter
    assert update_query_params('http://example.com?foo=bar', {'new': 'value'}) == 'http://example.com?foo=bar&new=value'
    
    # Test updating multiple parameters
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'newfoo', 'biz': 'newbiz'}) == 'http://example.com?biz=newbiz&foo=newfoo'
    
    # Test removing a parameter by setting it to None
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': None}) == 'http://example.com?biz=baz'
    
    # Test with do

# Generated at 2024-03-18 07:25:10.321938
    # Test updating existing parameter
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'stuff'}) == 'http://example.com?biz=baz&foo=stuff'
    
    # Test adding new parameter
    assert update_query_params('http://example.com?foo=bar', {'new': 'param'}) == 'http://example.com?foo=bar&new=param'
    
    # Test updating and adding parameter
    assert update_query_params('http://example.com?foo=bar', {'foo': 'newvalue', 'another': 'value'}) == 'http://example.com?foo=newvalue&another=value'
    
    # Test with doseq=False
    assert update_query_params('http://example.com', {'foo': ['bar', 'baz']}, doseq=False) == 'http://example.com?foo=%5B%27bar%27%2C+%27baz%27

# Generated at 2024-03-18 07:25:17.388142
    # Test updating existing parameter
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'stuff'}) == 'http://example.com?biz=baz&foo=stuff'
    
    # Test adding new parameter
    assert update_query_params('http://example.com?foo=bar', {'new': 'value'}) == 'http://example.com?foo=bar&new=value'
    
    # Test updating multiple parameters
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'newfoo', 'biz': 'newbiz'}) == 'http://example.com?biz=newbiz&foo=newfoo'
    
    # Test with no parameters to update (should return the same URL)
    assert update_query_params('http://example.com?foo=bar', {}) == 'http://example.com?foo=bar'
    
    # Test with doseq=False, parameters with

# Generated at 2024-03-18 07:25:23.243825
    # Test updating existing parameter
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'stuff'}) == 'http://example.com?biz=baz&foo=stuff'
    
    # Test adding new parameter
    assert update_query_params('http://example.com?foo=bar', {'new': 'value'}) == 'http://example.com?foo=bar&new=value'
    
    # Test updating multiple parameters
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'newfoo', 'biz': 'newbiz'}) == 'http://example.com?biz=newbiz&foo=newfoo'
    
    # Test removing a parameter by setting it to None
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': None}) == 'http://example.com?biz=baz'
    
    # Test with do

# Generated at 2024-03-18 07:25:29.844050
    # Test updating existing parameter
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'stuff'}) == 'http://example.com?biz=baz&foo=stuff'
    
    # Test adding new parameter
    assert update_query_params('http://example.com?foo=bar', {'new': 'value'}) == 'http://example.com?foo=bar&new=value'
    
    # Test updating multiple parameters
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'newfoo', 'biz': 'newbiz'}) == 'http://example.com?biz=newbiz&foo=newfoo'
    
    # Test with no parameters to update (should return the same URL)
    assert update_query_params('http://example.com?foo=bar', {}) == 'http://example.com?foo=bar'
    
    # Test with doseq=False, parameters with

# Generated at 2024-03-18 07:25:38.306795
    # Test updating existing parameter
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'stuff'}) == 'http://example.com?biz=baz&foo=stuff'
    
    # Test adding new parameter
    assert update_query_params('http://example.com?foo=bar', {'new': 'value'}) == 'http://example.com?foo=bar&new=value'
    
    # Test updating multiple parameters
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'newfoo', 'biz': 'newbiz'}) == 'http://example.com?biz=newbiz&foo=newfoo'
    
    # Test removing a parameter by setting it to None
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': None}) == 'http://example.com?biz=baz'
    
    # Test with do

# Generated at 2024-03-18 07:25:43.983732
    # Test updating existing parameter
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'stuff'}) == 'http://example.com?biz=baz&foo=stuff'
    
    # Test adding new parameter
    assert update_query_params('http://example.com?foo=bar', {'new': 'value'}) == 'http://example.com?foo=bar&new=value'
    
    # Test updating multiple parameters
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'newfoo', 'biz': 'newbiz'}) == 'http://example.com?biz=newbiz&foo=newfoo'
    
    # Test with no parameters to update (should return the same URL)
    assert update_query_params('http://example.com?foo=bar', {}) == 'http://example.com?foo=bar'
    
    # Test with doseq=False
    assert

# Generated at 2024-03-18 07:25:50.892876
    # Test updating existing parameter
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'stuff'}) == 'http://example.com?biz=baz&foo=stuff'

    # Test adding new parameter
    assert update_query_params('http://example.com?foo=bar', {'new': 'value'}) == 'http://example.com?foo=bar&new=value'

    # Test updating multiple parameters
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'newfoo', 'biz': 'newbiz'}) == 'http://example.com?biz=newbiz&foo=newfoo'

    # Test with doseq=False, parameters with multiple values
    assert update_query_params('http://example.com?foo=bar&foo=baz', {'foo': ['new1', 'new2']}, doseq=False) == 'http://example.com?foo

# Generated at 2024-03-18 07:26:04.509044
    # Test updating existing parameter
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'stuff'}) == 'http://example.com?biz=baz&foo=stuff'
    
    # Test adding new parameter
    assert update_query_params('http://example.com?foo=bar', {'new': 'value'}) == 'http://example.com?foo=bar&new=value'
    
    # Test updating multiple parameters
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'newfoo', 'biz': 'newbiz'}) == 'http://example.com?biz=newbiz&foo=newfoo'
    
    # Test removing a parameter by setting it to None
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': None}) == 'http://example.com?biz=baz'
    
    # Test with do

# Generated at 2024-03-18 07:26:16.309404
    # Test updating existing parameter
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'stuff'}) == 'http://example.com?biz=baz&foo=stuff'

    # Test adding new parameter
    assert update_query_params('http://example.com?foo=bar', {'new': 'value'}) == 'http://example.com?foo=bar&new=value'

    # Test updating multiple parameters
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'newfoo', 'biz': 'newbiz'}) == 'http://example.com?biz=newbiz&foo=newfoo'

    # Test removing a parameter by setting it to None
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': None}) == 'http://example.com?biz=baz'

    # Test with doseq=False
   

# Generated at 2024-03-18 07:26:24.967117
    # Test updating existing parameter
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'stuff'}) == 'http://example.com?biz=baz&foo=stuff'
    
    # Test adding new parameter
    assert update_query_params('http://example.com?foo=bar', {'new': 'param'}) == 'http://example.com?foo=bar&new=param'
    
    # Test updating multiple parameters
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'newfoo', 'biz': 'newbiz'}) == 'http://example.com?biz=newbiz&foo=newfoo'
    
    # Test with no parameters to update (should return the same URL)
    assert update_query_params('http://example.com', {}) == 'http://example.com'
    
    # Test with doseq=False
    assert update_query_params('http://example

# Generated at 2024-03-18 07:26:33.634885
    # Test updating existing parameter
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'stuff'}) == 'http://example.com?biz=baz&foo=stuff'
    
    # Test adding new parameter
    assert update_query_params('http://example.com?foo=bar', {'new': 'value'}) == 'http://example.com?foo=bar&new=value'
    
    # Test updating multiple parameters
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'newfoo', 'biz': 'newbiz'}) == 'http://example.com?biz=newbiz&foo=newfoo'
    
    # Test with no parameters to update (should return the same URL)
    assert update_query_params('http://example.com?foo=bar', {}) == 'http://example.com?foo=bar'
    
    # Test with doseq=False
    assert

# Generated at 2024-03-18 07:26:41.240439
    # Test updating existing parameter
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'stuff'}) == 'http://example.com?biz=baz&foo=stuff'

    # Test adding new parameter
    assert update_query_params('http://example.com?foo=bar', {'new': 'value'}) == 'http://example.com?foo=bar&new=value'

    # Test updating and adding parameter
    assert update_query_params('http://example.com?foo=bar', {'foo': 'new', 'another': 'value'}) == 'http://example.com?foo=new&another=value'

    # Test with multiple values for a single parameter
    assert update_query_params('http://example.com?foo=bar', {'foo': ['new', 'values']}, doseq=True) == 'http://example.com?foo=new&foo=values'

    # Test without doseq (should join

# Generated at 2024-03-18 07:26:50.341227
    # Test updating existing parameter
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'stuff'}) == 'http://example.com?biz=baz&foo=stuff'
    
    # Test adding new parameter
    assert update_query_params('http://example.com?foo=bar', {'new': 'value'}) == 'http://example.com?foo=bar&new=value'
    
    # Test with multiple new parameters
    assert update_query_params('http://example.com', {'a': '1', 'b': '2'}) == 'http://example.com?a=1&b=2'
    
    # Test with no parameters in URL and adding parameters
    assert update_query_params('http://example.com', {'foo': 'bar'}) == 'http://example.com?foo=bar'
    
    # Test with empty params
    assert update_query_params('http://example.com?foo=bar',

# Generated at 2024-03-18 07:26:59.766887
    # Test updating existing parameter
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'stuff'}) == 'http://example.com?biz=baz&foo=stuff'
    
    # Test adding new parameter
    assert update_query_params('http://example.com?foo=bar', {'new': 'value'}) == 'http://example.com?foo=bar&new=value'
    
    # Test updating multiple parameters
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'newfoo', 'biz': 'newbiz'}) == 'http://example.com?biz=newbiz&foo=newfoo'
    
    # Test with no parameters to update (should return the same URL)
    assert update_query_params('http://example.com?foo=bar', {}) == 'http://example.com?foo=bar'
    
    # Test with doseq=False, parameters with

# Generated at 2024-03-18 07:27:07.709021
    # Test updating existing parameter
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'stuff'}) == 'http://example.com?biz=baz&foo=stuff'
    
    # Test adding new parameter
    assert update_query_params('http://example.com?foo=bar', {'new': 'value'}) == 'http://example.com?foo=bar&new=value'
    
    # Test updating multiple parameters
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'newfoo', 'biz': 'newbiz'}) == 'http://example.com?biz=newbiz&foo=newfoo'
    
    # Test removing a parameter by setting it to None
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': None}) == 'http://example.com?biz=baz'
    
    # Test with do

# Generated at 2024-03-18 07:27:14.767638
    # Test updating existing parameter
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'stuff'}) == 'http://example.com?biz=baz&foo=stuff'
    
    # Test adding new parameter
    assert update_query_params('http://example.com?foo=bar', {'new': 'value'}) == 'http://example.com?foo=bar&new=value'
    
    # Test updating multiple parameters
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'newfoo', 'biz': 'newbiz'}) == 'http://example.com?biz=newbiz&foo=newfoo'
    
    # Test with no parameters to update (should return the same URL)
    assert update_query_params('http://example.com?foo=bar', {}) == 'http://example.com?foo=bar'
    
    # Test with doseq=False
    assert

# Generated at 2024-03-18 07:27:22.754152
    # Test updating existing parameter
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'stuff'}) == 'http://example.com?biz=baz&foo=stuff'
    
    # Test adding new parameter
    assert update_query_params('http://example.com?foo=bar', {'new': 'value'}) == 'http://example.com?foo=bar&new=value'
    
    # Test updating multiple parameters
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'newfoo', 'biz': 'newbiz'}) == 'http://example.com?biz=newbiz&foo=newfoo'
    
    # Test with no parameters to update (should return the same URL)
    assert update_query_params('http://example.com?foo=bar', {}) == 'http://example.com?foo=bar'
    
    # Test with doseq=False, parameters with

# Generated at 2024-03-18 07:27:45.453217
    # Test updating existing parameter
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'stuff'}) == 'http://example.com?biz=baz&foo=stuff'

    # Test adding new parameter
    assert update_query_params('http://example.com?foo=bar', {'new': 'param'}) == 'http://example.com?foo=bar&new=param'

    # Test updating and adding parameter
    assert update_query_params('http://example.com?foo=bar', {'foo': 'newvalue', 'another': 'value'}) == 'http://example.com?foo=newvalue&another=value'

    # Test with multiple values for a single parameter
    assert update_query_params('http://example.com?foo=bar', {'foo': ['newvalue', 'another']}, doseq=True) == 'http://example.com?foo=newvalue&foo=another'

    # Test with

# Generated at 2024-03-18 07:27:53.213358
    # Test updating existing parameter
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'stuff'}) == 'http://example.com?biz=baz&foo=stuff'
    
    # Test adding new parameter
    assert update_query_params('http://example.com?foo=bar', {'new': 'value'}) == 'http://example.com?foo=bar&new=value'
    
    # Test updating multiple parameters
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'newfoo', 'biz': 'newbiz'}) == 'http://example.com?biz=newbiz&foo=newfoo'
    
    # Test removing a parameter by setting it to None
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': None}) == 'http://example.com?biz=baz'
    
    # Test with do

# Generated at 2024-03-18 07:28:03.748973
    # Test updating existing parameter
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'stuff'}) == 'http://example.com?biz=baz&foo=stuff'
    
    # Test adding new parameter
    assert update_query_params('http://example.com?foo=bar', {'new': 'value'}) == 'http://example.com?foo=bar&new=value'
    
    # Test updating multiple parameters
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'newfoo', 'biz': 'newbiz'}) == 'http://example.com?biz=newbiz&foo=newfoo'
    
    # Test with no parameters to update (should return the same URL)
    assert update_query_params('http://example.com?foo=bar', {}) == 'http://example.com?foo=bar'
    
    # Test with doseq=False
    assert

# Generated at 2024-03-18 07:28:13.739853
    # Test updating existing parameter
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'stuff'}) == 'http://example.com?biz=baz&foo=stuff'
    
    # Test adding new parameter
    assert update_query_params('http://example.com?foo=bar', {'new': 'value'}) == 'http://example.com?foo=bar&new=value'
    
    # Test updating multiple parameters
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'newfoo', 'biz': 'newbiz'}) == 'http://example.com?biz=newbiz&foo=newfoo'
    
    # Test removing a parameter by setting it to None
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': None}) == 'http://example.com?biz=baz'
    
    # Test with do

# Generated at 2024-03-18 07:28:22.154474
    # Test updating existing parameter
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'stuff'}) == 'http://example.com?biz=baz&foo=stuff'
    
    # Test adding new parameter
    assert update_query_params('http://example.com?foo=bar', {'new': 'value'}) == 'http://example.com?foo=bar&new=value'
    
    # Test updating multiple parameters
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'newfoo', 'biz': 'newbiz'}) == 'http://example.com?biz=newbiz&foo=newfoo'
    
    # Test removing a parameter by setting it to None
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': None}) == 'http://example.com?biz=baz'
    
    # Test with do

# Generated at 2024-03-18 07:28:27.617405
    # Test updating existing parameter
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'stuff'}) == 'http://example.com?biz=baz&foo=stuff'
    
    # Test adding new parameter
    assert update_query_params('http://example.com?foo=bar', {'new': 'value'}) == 'http://example.com?foo=bar&new=value'
    
    # Test updating multiple parameters
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'newfoo', 'biz': 'newbiz'}) == 'http://example.com?biz=newbiz&foo=newfoo'
    
    # Test with doseq=False, parameters with multiple values
    assert update_query_params('http://example.com?foo=bar&foo=baz', {'foo': ['new1', 'new2']}, doseq=False) == 'http://example

# Generated at 2024-03-18 07:28:34.596361
    # Test updating existing parameter
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'stuff'}) == 'http://example.com?biz=baz&foo=stuff'
    
    # Test adding new parameter
    assert update_query_params('http://example.com?foo=bar', {'new': 'value'}) == 'http://example.com?foo=bar&new=value'
    
    # Test updating multiple parameters
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'newfoo', 'biz': 'newbiz'}) == 'http://example.com?biz=newbiz&foo=newfoo'
    
    # Test with doseq=False, parameters with multiple values
    assert update_query_params('http://example.com?foo=bar&foo=baz', {'foo': ['new1', 'new2']}, doseq=False) == 'http://example

# Generated at 2024-03-18 07:28:43.307247
    # Test updating existing parameter
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'stuff'}) == 'http://example.com?biz=baz&foo=stuff'
    
    # Test adding new parameter
    assert update_query_params('http://example.com?foo=bar', {'new': 'value'}) == 'http://example.com?foo=bar&new=value'
    
    # Test updating multiple parameters
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'newfoo', 'biz': 'newbiz'}) == 'http://example.com?biz=newbiz&foo=newfoo'
    
    # Test removing a parameter by setting it to None
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': None}) == 'http://example.com?biz=baz'
    
    # Test with do

# Generated at 2024-03-18 07:28:49.584223
    # Test updating existing parameter
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'stuff'}) == 'http://example.com?foo=stuff&biz=baz'
    
    # Test adding a new parameter
    assert update_query_params('http://example.com?foo=bar', {'new': 'value'}) == 'http://example.com?foo=bar&new=value'
    
    # Test updating and adding parameters
    assert update_query_params('http://example.com?foo=bar', {'foo': 'new', 'another': 'value'}) == 'http://example.com?foo=new&another=value'
    
    # Test with multiple values for a single parameter
    assert update_query_params('http://example.com?foo=bar', {'foo': ['new', 'values']}) == 'http://example.com?foo=new&foo=values'
    
    # Test with no query string


# Generated at 2024-03-18 07:28:56.368925
    # Test updating existing parameter
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'stuff'}) == 'http://example.com?biz=baz&foo=stuff'

    # Test adding new parameter
    assert update_query_params('http://example.com?foo=bar', {'new': 'param'}) == 'http://example.com?foo=bar&new=param'

    # Test updating and adding parameter
    assert update_query_params('http://example.com?foo=bar', {'foo': 'newvalue', 'another': 'value'}) == 'http://example.com?foo=newvalue&another=value'

    # Test with multiple values for a single parameter
    assert update_query_params('http://example.com?foo=bar', {'foo': ['newvalue', 'another']}, doseq=True) == 'http://example.com?foo=newvalue&foo=another'

    # Test without

# Generated at 2024-03-18 07:29:37.543342
    # Test updating existing parameter
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'stuff'}) == 'http://example.com?biz=baz&foo=stuff'

    # Test adding new parameter
    assert update_query_params('http://example.com?foo=bar', {'new': 'value'}) == 'http://example.com?foo=bar&new=value'

    # Test updating multiple parameters
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'newfoo', 'biz': 'newbiz'}) == 'http://example.com?biz=newbiz&foo=newfoo'

    # Test removing a parameter by setting it to None
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': None}) == 'http://example.com?biz=baz'

    # Test with doseq=False, parameters

# Generated at 2024-03-18 07:29:43.626126
    # Test updating existing parameter
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'stuff'}) == 'http://example.com?biz=baz&foo=stuff'
    
    # Test adding new parameter
    assert update_query_params('http://example.com?foo=bar', {'new': 'value'}) == 'http://example.com?foo=bar&new=value'
    
    # Test updating multiple parameters
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'newfoo', 'biz': 'newbiz'}) == 'http://example.com?biz=newbiz&foo=newfoo'
    
    # Test with no parameters to update (should return the same URL)
    assert update_query_params('http://example.com?foo=bar', {}) == 'http://example.com?foo=bar'
    
    # Test with doseq=False (parameters with

# Generated at 2024-03-18 07:29:51.234190
    # Test updating existing parameter
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'stuff'}) == 'http://example.com?biz=baz&foo=stuff'
    
    # Test adding new parameter
    assert update_query_params('http://example.com?foo=bar', {'new': 'value'}) == 'http://example.com?foo=bar&new=value'
    
    # Test updating multiple parameters
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'newfoo', 'biz': 'newbiz'}) == 'http://example.com?biz=newbiz&foo=newfoo'
    
    # Test with no parameters to update (should return the same URL)
    assert update_query_params('http://example.com?foo=bar', {}) == 'http://example.com?foo=bar'
    
    # Test with doseq=False, parameters with

# Generated at 2024-03-18 07:29:58.214923
    # Test updating existing parameter
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'stuff'}) == 'http://example.com?biz=baz&foo=stuff'

    # Test adding new parameter
    assert update_query_params('http://example.com?foo=bar', {'new': 'value'}) == 'http://example.com?foo=bar&new=value'

    # Test updating multiple parameters
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'newfoo', 'biz': 'newbiz'}) == 'http://example.com?biz=newbiz&foo=newfoo'

    # Test with no parameters to update (should return the same URL)
    assert update_query_params('http://example.com', {}) == 'http://example.com'

    # Test with doseq=False, parameters with multiple values should be flattened
    assert update_query_params('

# Generated at 2024-03-18 07:30:05.500989
    # Test updating existing parameter
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'stuff'}) == 'http://example.com?biz=baz&foo=stuff'
    
    # Test adding new parameter
    assert update_query_params('http://example.com?foo=bar', {'new': 'value'}) == 'http://example.com?foo=bar&new=value'
    
    # Test updating multiple parameters
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'newfoo', 'biz': 'newbiz'}) == 'http://example.com?biz=newbiz&foo=newfoo'
    
    # Test with no parameters to update (should return the same URL)
    assert update_query_params('http://example.com?foo=bar', {}) == 'http://example.com?foo=bar'
    
    # Test with doseq=False, parameters with

# Generated at 2024-03-18 07:30:15.506600
    # Test updating existing parameter
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'stuff'}) == 'http://example.com?biz=baz&foo=stuff'
    
    # Test adding new parameter
    assert update_query_params('http://example.com?foo=bar', {'new': 'value'}) == 'http://example.com?foo=bar&new=value'
    
    # Test with multiple new parameters
    assert update_query_params('http://example.com', {'a': '1', 'b': '2'}) == 'http://example.com?a=1&b=2'
    
    # Test with no parameters in URL and adding parameters
    assert update_query_params('http://example.com', {'foo': 'bar'}) == 'http://example.com?foo=bar'
    
    # Test with empty params
    assert update_query_params('http://example.com?foo=bar',

# Generated at 2024-03-18 07:30:25.029991
    # Test updating existing parameter
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'stuff'}) == 'http://example.com?biz=baz&foo=stuff'
    
    # Test adding new parameter
    assert update_query_params('http://example.com?foo=bar', {'new': 'value'}) == 'http://example.com?foo=bar&new=value'
    
    # Test updating multiple parameters
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'newfoo', 'biz': 'newbiz'}) == 'http://example.com?biz=newbiz&foo=newfoo'
    
    # Test with no parameters to update (should return the same URL)
    assert update_query_params('http://example.com?foo=bar', {}) == 'http://example.com?foo=bar'
    
    # Test with doseq=False
    assert

# Generated at 2024-03-18 07:30:35.257673
    # Test updating existing parameter
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'stuff'}) == 'http://example.com?biz=baz&foo=stuff'
    
    # Test adding new parameter
    assert update_query_params('http://example.com?foo=bar', {'new': 'value'}) == 'http://example.com?foo=bar&new=value'
    
    # Test updating multiple parameters
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'newfoo', 'biz': 'newbiz'}) == 'http://example.com?biz=newbiz&foo=newfoo'
    
    # Test with no parameters to update (should return the same URL)
    assert update_query_params('http://example.com?foo=bar', {}) == 'http://example.com?foo=bar'
    
    # Test with doseq=False, parameters with

# Generated at 2024-03-18 07:30:46.205078
    # Test updating existing parameter
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'stuff'}) == 'http://example.com?biz=baz&foo=stuff'
    
    # Test adding new parameter
    assert update_query_params('http://example.com?foo=bar', {'new': 'value'}) == 'http://example.com?foo=bar&new=value'
    
    # Test updating multiple parameters
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'newfoo', 'biz': 'newbiz'}) == 'http://example.com?biz=newbiz&foo=newfoo'
    
    # Test with no parameters to update (should return the same URL)
    assert update_query_params('http://example.com?foo=bar', {}) == 'http://example.com?foo=bar'
    
    # Test with doseq=False, parameters with

# Generated at 2024-03-18 07:30:54.053878
    # Test updating existing parameter
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'stuff'}) == 'http://example.com?biz=baz&foo=stuff'
    
    # Test adding new parameter
    assert update_query_params('http://example.com?foo=bar', {'new': 'value'}) == 'http://example.com?foo=bar&new=value'
    
    # Test updating multiple parameters
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'newfoo', 'biz': 'newbiz'}) == 'http://example.com?biz=newbiz&foo=newfoo'
    
    # Test removing a parameter by setting it to None
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': None}) == 'http://example.com?biz=baz'
    
    # Test with do

# Generated at 2024-03-18 07:32:21.284760
    # Test updating existing parameter
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'stuff'}) == 'http://example.com?biz=baz&foo=stuff'
    
    # Test adding new parameter
    assert update_query_params('http://example.com?foo=bar', {'new': 'value'}) == 'http://example.com?foo=bar&new=value'
    
    # Test updating multiple parameters
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'newfoo', 'biz': 'newbiz'}) == 'http://example.com?biz=newbiz&foo=newfoo'
    
    # Test with no parameters to update (should return the same URL)
    assert update_query_params('http://example.com?foo=bar', {}) == 'http://example.com?foo=bar'
    
    # Test with doseq=False, parameters with

# Generated at 2024-03-18 07:32:28.904354
    # Test updating existing parameter
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'stuff'}) == 'http://example.com?biz=baz&foo=stuff'
    
    # Test adding new parameter
    assert update_query_params('http://example.com?foo=bar', {'new': 'value'}) == 'http://example.com?foo=bar&new=value'
    
    # Test updating multiple parameters
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'newfoo', 'biz': 'newbiz'}) == 'http://example.com?biz=newbiz&foo=newfoo'
    
    # Test with no parameters to update (should return the same URL)
    assert update_query_params('http://example.com?foo=bar', {}) == 'http://example.com?foo=bar'
    
    # Test with doseq=False
    assert

# Generated at 2024-03-18 07:32:36.260796
    # Test updating existing parameter
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'stuff'}) == 'http://example.com?biz=baz&foo=stuff'
    
    # Test adding new parameter
    assert update_query_params('http://example.com?foo=bar', {'new': 'value'}) == 'http://example.com?foo=bar&new=value'
    
    # Test updating multiple parameters
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'newfoo', 'biz': 'newbiz'}) == 'http://example.com?biz=newbiz&foo=newfoo'
    
    # Test removing a parameter by setting it to None
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': None}) == 'http://example.com?biz=baz'
    
    # Test with do

# Generated at 2024-03-18 07:32:45.490766
    # Test updating existing parameter
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'stuff'}) == 'http://example.com?biz=baz&foo=stuff'
    
    # Test adding new parameter
    assert update_query_params('http://example.com?foo=bar', {'new': 'value'}) == 'http://example.com?foo=bar&new=value'
    
    # Test updating multiple parameters
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'newfoo', 'biz': 'newbiz'}) == 'http://example.com?biz=newbiz&foo=newfoo'
    
    # Test with no parameters to update (should return the same URL)
    assert update_query_params('http://example.com?foo=bar', {}) == 'http://example.com?foo=bar'
    
    # Test with doseq=False
    assert

# Generated at 2024-03-18 07:32:54.393258
    # Test updating existing parameter
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'stuff'}) == 'http://example.com?biz=baz&foo=stuff'
    
    # Test adding new parameter
    assert update_query_params('http://example.com?foo=bar', {'new': 'value'}) == 'http://example.com?foo=bar&new=value'
    
    # Test updating multiple parameters
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'newfoo', 'biz': 'newbiz'}) == 'http://example.com?biz=newbiz&foo=newfoo'
    
    # Test with no parameters to update (should return the same URL)
    assert update_query_params('http://example.com?foo=bar', {}) == 'http://example.com?foo=bar'
    
    # Test with doseq=False
    assert

# Generated at 2024-03-18 07:33:08.903199
    # Test updating existing parameter
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'stuff'}) == 'http://example.com?biz=baz&foo=stuff'
    
    # Test adding new parameter
    assert update_query_params('http://example.com?foo=bar', {'new': 'value'}) == 'http://example.com?foo=bar&new=value'
    
    # Test updating multiple parameters
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'newfoo', 'biz': 'newbiz'}) == 'http://example.com?biz=newbiz&foo=newfoo'
    
    # Test with no parameters to update (should return the same URL)
    assert update_query_params('http://example.com?foo=bar', {}) == 'http://example.com?foo=bar'
    
    # Test with doseq=False
    assert

# Generated at 2024-03-18 07:33:23.098952
    # Test updating existing parameter
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'stuff'}) == 'http://example.com?biz=baz&foo=stuff'
    
    # Test adding new parameter
    assert update_query_params('http://example.com?foo=bar', {'new': 'value'}) == 'http://example.com?foo=bar&new=value'
    
    # Test updating multiple parameters
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': 'newfoo', 'biz': 'newbiz'}) == 'http://example.com?biz=newbiz&foo=newfoo'
    
    # Test removing a parameter by setting it to None
    assert update_query_params('http://example.com?foo=bar&biz=baz', {'foo': None}) == 'http://example.com?biz=baz'
    
    # Test with do