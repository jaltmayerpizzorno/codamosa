# Automatically generated by Pynguin.
import ansible.module_utils.facts.hardware.sunos as module_0

def test_case_0():
    try:
        str_0 = 'v%(!\x0b\r^a[x'
        sun_o_s_hardware_0 = module_0.SunOSHardware(str_0)
        var_0 = sun_o_s_hardware_0.populate()
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '\n                # fcinfo hba-port  | grep "Port WWN"\n                HBA Port WWN: 10000090fa1658de\n                '
        bool_0 = True
        sun_o_s_hardware_0 = module_0.SunOSHardware(bool_0)
        var_0 = sun_o_s_hardware_0.get_cpu_facts(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = ')L)@fE'
        sun_o_s_hardware_0 = module_0.SunOSHardware(str_0)
        var_0 = sun_o_s_hardware_0.get_memory_facts()
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 't'
        sun_o_s_hardware_0 = module_0.SunOSHardware(str_0)
        var_0 = sun_o_s_hardware_0.get_dmi_facts()
    except BaseException:
        pass

def test_case_4():
    try:
        tuple_0 = ()
        set_0 = {tuple_0, tuple_0, tuple_0}
        sun_o_s_hardware_0 = module_0.SunOSHardware(set_0)
        str_0 = "RXq~\toiPr})']o>E{"
        sun_o_s_hardware_1 = module_0.SunOSHardware(str_0)
        var_0 = sun_o_s_hardware_1.get_device_facts()
    except BaseException:
        pass

def test_case_5():
    try:
        list_0 = []
        sun_o_s_hardware_0 = module_0.SunOSHardware(list_0)
        var_0 = sun_o_s_hardware_0.get_uptime_facts()
    except BaseException:
        pass

def test_case_6():
    try:
        int_0 = False
        list_0 = [int_0, int_0]
        sun_o_s_hardware_0 = module_0.SunOSHardware(list_0)
        sun_o_s_hardware_1 = module_0.SunOSHardware(int_0, sun_o_s_hardware_0)
        var_0 = sun_o_s_hardware_1.get_cpu_facts()
    except BaseException:
        pass