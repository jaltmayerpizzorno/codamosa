

# Generated at 2024-03-18 09:14:09.800111
```python
    ie = HitRecordIE()
    assert ie._VALID_URL == r'https?://(?:www\.)?hitrecord\.org/records/(?P<id>\d+)'
    assert isinstance(ie, InfoExtractor)
```

# Generated at 2024-03-18 09:14:18.918350
```python
    ie = HitRecordIE()
    assert ie.suitable('https://hitrecord.org/records/2954362')
    assert not ie.suitable('http://not-a-valid-url.com')
    test_info = ie.extract('https://hitrecord.org/records/2954362')
    assert test_info['id'] == '2954362'
    assert test_info['title'] == 'A Very Different World (HITRECORD x ACLU)'
    assert 'mp4' in test_info['url']
    assert test_info['duration'] > 0
    assert test_info['timestamp'] > 0
    assert test_info['uploader'] is not None
    assert test_info['uploader_id'] is not None
    assert isinstance(test_info['view_count'], int)
    assert isinstance(test_info['like_count'], int)
    assert isinstance(test_info['comment_count'], int)
    assert isinstance(test_info['tags'], list)
```

# Generated at 2024-03-18 09:14:22.388929
```python
    ie = HitRecordIE()
    assert ie._VALID_URL == r'https?://(?:www\.)?hitrecord\.org/records/(?P<id>\d+)'
    assert isinstance(ie, InfoExtractor)
    assert hasattr(ie, '_real_extract')
```

# Generated at 2024-03-18 09:14:30.201771
```python
    ie = HitRecordIE()

    assert ie._VALID_URL == r'https?://(?:www\.)?hitrecord\.org/records/(?P<id>\d+)'
    assert isinstance(ie, InfoExtractor)

    test_url = 'https://hitrecord.org/records/2954362'
    test_video_id = '2954362'
    extracted_info = ie.extract(test_url)

    assert extracted_info['id'] == test_video_id
    assert extracted_info['title'] == 'A Very Different World (HITRECORD x ACLU)'
    assert 'mp4' in extracted_info['url']
    assert extracted_info['description'] == clean_html('md5:e62defaffab5075a5277736bead95a3d')
    assert extracted_info['duration'] == 139.327
    assert extracted_info['timestamp'] == 1471557582
    assert extracted_info['uploader'] == 'Zuzi

# Generated at 2024-03-18 09:14:38.680943
```python
    ie = HitRecordIE()
    assert ie.suitable('https://hitrecord.org/records/2954362')
    assert not ie.suitable('https://hitrecord.org/projects/1234567')
    assert ie._match_id('https://hitrecord.org/records/2954362') == '2954362'
    info_dict = ie.extract('https://hitrecord.org/records/2954362')
    assert info_dict['id'] == '2954362'
    assert info_dict['ext'] == 'mp4'
    assert 'title' in info_dict
    assert 'description' in info_dict
    assert 'duration' in info_dict
    assert 'timestamp' in info_dict
    assert 'uploader' in info_dict
    assert 'uploader_id' in info_dict
    assert 'view_count' in info_dict
    assert 'like_count' in info_dict
    assert 'comment_count' in info_dict


# Generated at 2024-03-18 09:14:48.434705
```python
    ie = HitRecordIE()
    assert ie._VALID_URL == r'https?://(?:www\.)?hitrecord\.org/records/(?P<id>\d+)'
    assert ie.suitable('https://hitrecord.org/records/2954362') is True
    assert ie.suitable('https://notvalid.com/records/123456') is False

    test_data = ie._TEST
    info_dict = ie._real_extract(test_data['url'])
    for key, value in test_data['info_dict'].items():
        if isinstance(value, type):
            assert isinstance(info_dict[key], value), f"Expected type {value} for field '{key}', but got {type(info_dict[key])}"
        elif isinstance(value, str):
            assert info_dict[key] == value, f"Expected {value} for field '{key}', but got {info_dict[key]}"
        else:
            assert info_dict[key] == value, f

# Generated at 2024-03-18 09:14:56.714037
```python
    ie = HitRecordIE()

    assert ie._VALID_URL == r'https?://(?:www\.)?hitrecord\.org/records/(?P<id>\d+)'
    assert ie.suitable('https://hitrecord.org/records/2954362') is True
    assert ie.suitable('https://notvalid.com/records/123456') is False

    test_data = ie._TEST
    info_dict = ie._real_extract(test_data['url'])

    for key, value in test_data['info_dict'].items():
        if isinstance(value, type):
            assert isinstance(info_dict[key], value), f"Key '{key}' should be of type {value.__name__}"
        elif isinstance(value, str) and value.startswith('md5:'):
            assert hashlib.md5(info_dict[key].encode('utf-8')).hexdigest() == value.split(':')[1]
        else:
            assert info_dict[key] == value, f"M

# Generated at 2024-03-18 09:14:59.938220
```python
    ie = HitRecordIE()
    assert ie._VALID_URL == r'https?://(?:www\.)?hitrecord\.org/records/(?P<id>\d+)'
    assert isinstance(ie, InfoExtractor)
```

# Generated at 2024-03-18 09:15:01.623152
```python
    ie = HitRecordIE()
    assert ie._VALID_URL == r'https?://(?:www\.)?hitrecord\.org/records/(?P<id>\d+)'
    assert isinstance(ie, InfoExtractor)
```

# Generated at 2024-03-18 09:15:03.695178
```python
    ie = HitRecordIE()
    assert ie._VALID_URL == r'https?://(?:www\.)?hitrecord\.org/records/(?P<id>\d+)'
    assert isinstance(ie, InfoExtractor)
```

# Generated at 2024-03-18 09:15:21.732617
```python
    ie = HitRecordIE()
    assert ie._VALID_URL == r'https?://(?:www\.)?hitrecord\.org/records/(?P<id>\d+)'
    assert ie.suitable('https://hitrecord.org/records/2954362') is True
    assert ie.suitable('https://notvalid.com/records/123456') is False
    info_dict = ie._real_extract('https://hitrecord.org/records/2954362')
    test_info = HitRecordIE._TEST['info_dict']
    for key in test_info:
        if isinstance(test_info[key], type):
            assert isinstance(info_dict[key], test_info[key]), f"{key} should be of type {test_info[key].__name__}"
        elif isinstance(test_info[key], str):
            assert info_dict[key] == test_info[key], f"{key} should be '{test_info[key]}'"
        else:
            assert info_dict[key

# Generated at 2024-03-18 09:15:24.252948
```python
    ie = HitRecordIE()
    assert ie._VALID_URL == r'https?://(?:www\.)?hitrecord\.org/records/(?P<id>\d+)'
    assert isinstance(ie, InfoExtractor)
    assert hasattr(ie, '_real_extract')
```

# Generated at 2024-03-18 09:15:27.106432
```python
    ie = HitRecordIE()
    assert ie._VALID_URL == r'https?://(?:www\.)?hitrecord\.org/records/(?P<id>\d+)'
    assert isinstance(ie, InfoExtractor)
```

# Generated at 2024-03-18 09:15:34.896722
```python
    ie = HitRecordIE()

    assert ie._VALID_URL == r'https?://(?:www\.)?hitrecord\.org/records/(?P<id>\d+)'
    assert isinstance(ie, InfoExtractor)

    test_url = 'https://hitrecord.org/records/2954362'
    test_video_id = '2954362'
    extracted_info = ie.extract(test_url)

    assert extracted_info['id'] == test_video_id
    assert extracted_info['title'] == 'A Very Different World (HITRECORD x ACLU)'
    assert 'mp4' in extracted_info['url']
    assert extracted_info['description'] == clean_html('md5:e62defaffab5075a5277736bead95a3d')
    assert extracted_info['duration'] == 139.327
    assert extracted_info['timestamp'] == 1471557582
    assert extracted_info['uploader'] == 'Zuzi

# Generated at 2024-03-18 09:15:45.246532
```python
    ie = HitRecordIE()
    assert ie._VALID_URL == r'https?://(?:www\.)?hitrecord\.org/records/(?P<id>\d+)'
    assert ie.suitable('https://hitrecord.org/records/2954362') is True
    assert ie.suitable('https://notvalid.com/records/123456') is False

    test_info = ie._real_extract('https://hitrecord.org/records/2954362')
    assert test_info['id'] == '2954362'
    assert test_info['ext'] == 'mp4'
    assert 'title' in test_info
    assert 'description' in test_info
    assert isinstance(test_info['duration'], float)
    assert isinstance(test_info['timestamp'], int)
    assert isinstance(test_info['uploader'], compat_str)
    assert isinstance(test_info['uploader_id'], compat_str)
    assert isinstance(test_info['view_count'], int)
   

# Generated at 2024-03-18 09:15:52.531238
```python
    ie = HitRecordIE()

    assert ie._VALID_URL == r'https?://(?:www\.)?hitrecord\.org/records/(?P<id>\d+)'
    assert isinstance(ie, InfoExtractor)

    test_url = 'https://hitrecord.org/records/2954362'
    test_video_id = '2954362'
    extracted_info = ie.extract(test_url)

    assert extracted_info['id'] == test_video_id
    assert extracted_info['title'] == 'A Very Different World (HITRECORD x ACLU)'
    assert 'mp4' in extracted_info['url']
    assert extracted_info['description'] == clean_html('md5:e62defaffab5075a5277736bead95a3d')
    assert extracted_info['duration'] == 139.327
    assert extracted_info['timestamp'] == 1471557582
    assert extracted_info['upload_date'] == '201608

# Generated at 2024-03-18 09:15:59.462693
```python
    ie = HitRecordIE()

    assert ie._VALID_URL == r'https?://(?:www\.)?hitrecord\.org/records/(?P<id>\d+)'
    assert isinstance(ie, InfoExtractor)

    test_url = 'https://hitrecord.org/records/2954362'
    test_video_id = '2954362'
    extracted_info = ie.extract(test_url)

    assert extracted_info['id'] == test_video_id
    assert extracted_info['title'] == 'A Very Different World (HITRECORD x ACLU)'
    assert 'mp4' in extracted_info['url']
    assert extracted_info['description'] == clean_html(video.get('body'))
    assert extracted_info['duration'] == 139.327
    assert extracted_info['timestamp'] == 1471557582
    assert extracted_info['uploader'] == 'Zuzi.C12'
    assert extracted_info['uploader_id'] == '362811'


# Generated at 2024-03-18 09:16:08.642726
```python
    ie = HitRecordIE()
    assert ie._VALID_URL == r'https?://(?:www\.)?hitrecord\.org/records/(?P<id>\d+)'
    assert ie.suitable('https://hitrecord.org/records/2954362') is True
    assert ie.suitable('https://notvalid.com/records/123456') is False
    test_info = ie._real_extract('https://hitrecord.org/records/2954362')
    assert test_info['id'] == '2954362'
    assert test_info['ext'] == 'mp4'
    assert 'title' in test_info
    assert 'description' in test_info
    assert 'duration' in test_info
    assert 'timestamp' in test_info
    assert 'uploader' in test_info
    assert 'uploader_id' in test_info
    assert 'view_count' in test_info
    assert 'like_count' in test

# Generated at 2024-03-18 09:16:20.021974
```python
    ie = HitRecordIE()
    assert ie._VALID_URL == r'https?://(?:www\.)?hitrecord\.org/records/(?P<id>\d+)'
    assert ie.suitable('https://hitrecord.org/records/2954362') is True
    assert ie.suitable('https://notvalid.com/records/123456') is False

    test_info_dict = ie._real_extract('https://hitrecord.org/records/2954362')
    assert test_info_dict.get('id') == '2954362'
    assert test_info_dict.get('ext') == 'mp4'
    assert test_info_dict.get('title') == 'A Very Different World (HITRECORD x ACLU)'
    assert 'description' in test_info_dict
    assert 'duration' in test_info_dict
    assert test_info_dict.get('timestamp') == 1471557582
    assert test_info_dict.get('upload_date

# Generated at 2024-03-18 09:16:23.322533
```python
    ie = HitRecordIE()
    assert ie._VALID_URL == r'https?://(?:www\.)?hitrecord\.org/records/(?P<id>\d+)'
    assert isinstance(ie, InfoExtractor)
```

# Generated at 2024-03-18 09:16:48.117324
```python
    ie = HitRecordIE()
    assert ie._VALID_URL == r'https?://(?:www\.)?hitrecord\.org/records/(?P<id>\d+)'
    assert isinstance(ie, InfoExtractor)
```

# Generated at 2024-03-18 09:16:52.283740
```python
    ie = HitRecordIE()
    assert ie._VALID_URL == r'https?://(?:www\.)?hitrecord\.org/records/(?P<id>\d+)'
    assert isinstance(ie, InfoExtractor)
    assert hasattr(ie, '_real_extract')
```

# Generated at 2024-03-18 09:17:00.626587
```python
    ie = HitRecordIE()

    assert ie._VALID_URL == r'https?://(?:www\.)?hitrecord\.org/records/(?P<id>\d+)'
    assert ie.suitable('https://hitrecord.org/records/2954362') is True
    assert ie.suitable('https://notvalid.com/records/123456') is False

    test_info = ie._real_extract('https://hitrecord.org/records/2954362')
    assert test_info['id'] == '2954362'
    assert test_info['ext'] == 'mp4'
    assert 'title' in test_info
    assert 'description' in test_info
    assert 'duration' in test_info
    assert 'timestamp' in test_info
    assert 'upload_date' in test_info
    assert 'uploader' in test_info
    assert 'uploader_id' in test_info
    assert 'view_count' in test

# Generated at 2024-03-18 09:17:03.596353
```python
    ie = HitRecordIE()
    assert ie._VALID_URL == r'https?://(?:www\.)?hitrecord\.org/records/(?P<id>\d+)'
    assert isinstance(ie, InfoExtractor)
```

# Generated at 2024-03-18 09:17:11.101793
```python
    ie = HitRecordIE()
    assert ie._VALID_URL == r'https?://(?:www\.)?hitrecord\.org/records/(?P<id>\d+)'
    test_url = 'https://hitrecord.org/records/2954362'
    assert ie.suitable(test_url)
    test_result = ie._real_extract(test_url)
    assert test_result['id'] == '2954362'
    assert test_result['ext'] == 'mp4'
    assert test_result['title'] == 'A Very Different World (HITRECORD x ACLU)'
    assert 'description' in test_result
    assert 'duration' in test_result
    assert 'timestamp' in test_result
    assert 'upload_date' in test_result
    assert 'uploader' in test_result
    assert 'uploader_id' in test_result
    assert 'view_count' in test_result
    assert 'like_count' in test_result
    assert

# Generated at 2024-03-18 09:17:18.731796
```python
    ie = HitRecordIE()
    assert ie.suitable('https://hitrecord.org/records/2954362')
    assert not ie.suitable('https://hitrecord.org/projects/2954362')
    assert ie._VALID_URL == r'https?://(?:www\.)?hitrecord\.org/records/(?P<id>\d+)'
    test_dict = ie._TEST
    info_dict = ie.extract_info(test_dict['url'])
    for key in test_dict['info_dict']:
        if isinstance(test_dict['info_dict'][key], type):
            assert isinstance(info_dict[key], test_dict['info_dict'][key])
        else:
            assert info_dict[key] == test_dict['info_dict'][key]
```

# Generated at 2024-03-18 09:17:25.296867
```python
    ie = HitRecordIE()

    assert ie._VALID_URL == r'https?://(?:www\.)?hitrecord\.org/records/(?P<id>\d+)'
    assert isinstance(ie, InfoExtractor)

    test_url = 'https://hitrecord.org/records/2954362'
    test_video_id = '2954362'
    extracted_info = ie.extract(test_url)

    assert extracted_info['id'] == test_video_id
    assert extracted_info['title'] == 'A Very Different World (HITRECORD x ACLU)'
    assert 'mp4' in extracted_info['url']
    assert extracted_info['description'] == clean_html('md5:e62defaffab5075a5277736bead95a3d')
    assert extracted_info['duration'] == 139.327
    assert extracted_info['timestamp'] == 1471557582
    assert extracted_info['uploader'] == 'Zuzi

# Generated at 2024-03-18 09:17:34.941354
```python
    ie = HitRecordIE()
    assert ie.suitable('https://hitrecord.org/records/2954362')
    assert not ie.suitable('https://hitrecord.org/projects/2954362')
    assert ie._match_id('https://hitrecord.org/records/2954362') == '2954362'
    info_dict = ie.extract('https://hitrecord.org/records/2954362')
    test_info = ie._TEST['info_dict']
    for key in test_info:
        if isinstance(test_info[key], type):
            assert isinstance(info_dict[key], test_info[key]), f"{key} should be of type {test_info[key].__name__}"
        elif isinstance(test_info[key], compat_str):
            assert info_dict[key] == test_info[key], f"{key} should be '{test_info[key]}'"
        else:
            assert info_dict[key] == test_info[key], f"{key} should be {

# Generated at 2024-03-18 09:17:42.187524
```python
    ie = HitRecordIE()
    assert ie.suitable('https://hitrecord.org/records/2954362')
    assert not ie.suitable('http://not-a-valid-url.com')
    test_info = ie._real_extract('https://hitrecord.org/records/2954362')
    assert test_info['id'] == '2954362'
    assert test_info['title'] == 'A Very Different World (HITRECORD x ACLU)'
    assert 'description' in test_info
    assert isinstance(test_info['duration'], float)
    assert isinstance(test_info['timestamp'], int)
    assert isinstance(test_info['uploader'], compat_str)
    assert isinstance(test_info['uploader_id'], compat_str)
    assert isinstance(test_info['view_count'], int)
    assert isinstance(test_info['like_count'], int)
    assert isinstance(test_info['comment_count'], int)
    assert isinstance(test_info['tags'], list)
```

# Generated at 2024-03-18 09:17:44.416204
```python
    ie = HitRecordIE()
    assert ie._VALID_URL == r'https?://(?:www\.)?hitrecord\.org/records/(?P<id>\d+)'
    assert isinstance(ie, InfoExtractor)
```

# Generated at 2024-03-18 09:18:37.728209
```python
    ie = HitRecordIE()

    assert ie._VALID_URL == r'https?://(?:www\.)?hitrecord\.org/records/(?P<id>\d+)'
    assert isinstance(ie, InfoExtractor)

    test_url = 'https://hitrecord.org/records/2954362'
    test_video_id = '2954362'
    assert ie.suitable(test_url)
    assert ie._match_id(test_url) == test_video_id

    info_dict = ie.extract(test_url)
    assert info_dict.get('id') == test_video_id
    assert info_dict.get('title') == 'A Very Different World (HITRECORD x ACLU)'
    assert 'mp4' in info_dict.get('url')
    assert info_dict.get('duration') == 139.327
    assert info_dict.get('timestamp') == 1471557582
    assert info_dict.get('uploader') == 'Zuzi.C12'


# Generated at 2024-03-18 09:18:47.417883
```python
    ie = HitRecordIE()
    assert ie._VALID_URL == r'https?://(?:www\.)?hitrecord\.org/records/(?P<id>\d+)'
    assert ie.suitable('https://hitrecord.org/records/2954362') is True
    assert ie.suitable('https://notvalid.com/records/123456') is False

    test_data = ie._TEST
    info_dict = ie.extract_info(test_data['url'])
    for key, value in test_data['info_dict'].items():
        if isinstance(value, type):
            assert isinstance(info_dict[key], value), f"Expected type {value} for field '{key}', but got {type(info_dict[key])}"
        elif isinstance(value, str):
            assert info_dict[key] == value, f"Expected {value} for field '{key}', but got {info_dict[key]}"
        elif key == 'md5':
            assert hashlib.md5(info

# Generated at 2024-03-18 09:18:55.018890
```python
    ie = HitRecordIE()
    assert ie._VALID_URL == r'https?://(?:www\.)?hitrecord\.org/records/(?P<id>\d+)'
    assert ie.suitable('https://hitrecord.org/records/2954362') is True
    assert ie.suitable('https://notvalid.com/records/123456') is False

    test_data = ie._TEST
    info_dict = ie.extract_info(test_data['url'])
    for key, value in test_data['info_dict'].items():
        if isinstance(value, type):
            assert isinstance(info_dict[key], value), f"Expected type {value} for field '{key}', but got {type(info_dict[key])}"
        elif isinstance(value, str):
            assert info_dict[key] == value, f"Expected {value} for field '{key}', but got {info_dict[key]}"
        elif key == 'md5':
            assert hashlib.md5(info

# Generated at 2024-03-18 09:19:00.931449
```python
    ie = HitRecordIE()

    assert ie._VALID_URL == r'https?://(?:www\.)?hitrecord\.org/records/(?P<id>\d+)'
    assert isinstance(ie, InfoExtractor)

    test_url = 'https://hitrecord.org/records/2954362'
    test_video_id = '2954362'

    assert ie.suitable(test_url)
    assert ie._match_id(test_url) == test_video_id

    info_dict = ie.extract(test_url)
    assert info_dict.get('id') == test_video_id
    assert info_dict.get('ext') == 'mp4'
    assert 'title' in info_dict
    assert 'description' in info_dict
    assert 'duration' in info_dict
    assert 'timestamp' in info_dict
    assert 'upload_date' in info_dict
    assert 'uploader' in info_dict
    assert 'uploader_id' in info_dict
    assert

# Generated at 2024-03-18 09:19:02.755386
```python
    ie = HitRecordIE()
    assert ie._VALID_URL == r'https?://(?:www\.)?hitrecord\.org/records/(?P<id>\d+)'
    assert isinstance(ie, InfoExtractor)
```

# Generated at 2024-03-18 09:19:08.137016
```python
    ie = HitRecordIE()

    assert ie._VALID_URL == r'https?://(?:www\.)?hitrecord\.org/records/(?P<id>\d+)'
    assert isinstance(ie, InfoExtractor)

    test_url = 'https://hitrecord.org/records/2954362'
    test_video_id = '2954362'
    extracted_info = ie.extract(test_url)

    assert extracted_info['id'] == test_video_id
    assert extracted_info['title'] == 'A Very Different World (HITRECORD x ACLU)'
    assert 'mp4' in extracted_info['url']
    assert extracted_info['description'] == clean_html('md5:e62defaffab5075a5277736bead95a3d')
    assert extracted_info['duration'] == 139.327
    assert extracted_info['timestamp'] == 1471557582
    assert extracted_info['uploader'] == 'Zuzi

# Generated at 2024-03-18 09:19:10.635294
```python
    ie = HitRecordIE()
    assert ie._VALID_URL == r'https?://(?:www\.)?hitrecord\.org/records/(?P<id>\d+)'
    assert isinstance(ie, InfoExtractor)
```

# Generated at 2024-03-18 09:19:17.010416
```python
    ie = HitRecordIE()
    assert ie._VALID_URL == r'https?://(?:www\.)?hitrecord\.org/records/(?P<id>\d+)'
    assert isinstance(ie, InfoExtractor)
```

# Generated at 2024-03-18 09:19:23.101260
```python
    ie = HitRecordIE()
    assert ie.suitable('https://hitrecord.org/records/2954362')
    assert not ie.suitable('https://hitrecord.org/projects/1234567')
    assert ie._match_id('https://hitrecord.org/records/2954362') == '2954362'
    info_dict = ie.extract('https://hitrecord.org/records/2954362')
    assert info_dict['id'] == '2954362'
    assert info_dict['ext'] == 'mp4'
    assert 'title' in info_dict
    assert 'description' in info_dict
    assert 'duration' in info_dict
    assert 'timestamp' in info_dict
    assert 'uploader' in info_dict
    assert 'uploader_id' in info_dict
    assert 'view_count' in info_dict
    assert 'like_count' in info_dict
    assert 'comment_count' in info_dict


# Generated at 2024-03-18 09:19:24.812199
```python
    ie = HitRecordIE()
    assert ie._VALID_URL == r'https?://(?:www\.)?hitrecord\.org/records/(?P<id>\d+)'
    assert isinstance(ie, InfoExtractor)
```

# Generated at 2024-03-18 09:20:56.276055
```python
    ie = HitRecordIE()
    assert ie._VALID_URL == r'https?://(?:www\.)?hitrecord\.org/records/(?P<id>\d+)'
    assert isinstance(ie, InfoExtractor)
    assert hasattr(ie, '_real_extract')
```

# Generated at 2024-03-18 09:20:58.444763
```python
    ie = HitRecordIE()
    assert ie._VALID_URL == r'https?://(?:www\.)?hitrecord\.org/records/(?P<id>\d+)'
    assert isinstance(ie, InfoExtractor)
```

# Generated at 2024-03-18 09:21:01.558434
```python
    ie = HitRecordIE()
    assert ie._VALID_URL == r'https?://(?:www\.)?hitrecord\.org/records/(?P<id>\d+)'
    assert isinstance(ie, InfoExtractor)
    assert hasattr(ie, '_real_extract')
```

# Generated at 2024-03-18 09:21:13.530300
```python
    ie = HitRecordIE()

    assert ie._VALID_URL == r'https?://(?:www\.)?hitrecord\.org/records/(?P<id>\d+)'
    assert ie.suitable('https://hitrecord.org/records/2954362') is True
    assert ie.suitable('https://notvalid.com/records/123456') is False

    test_data = ie._TEST
    info_dict = ie._real_extract(test_data['url'])

    for key in test_data['info_dict']:
        if isinstance(test_data['info_dict'][key], int):
            assert isinstance(info_dict[key], int)
        elif isinstance(test_data['info_dict'][key], list):
            assert isinstance(info_dict[key], list)
        else:
            assert info_dict[key] == test_data['info_dict'][key]

    print("All tests passed!")
```

# Generated at 2024-03-18 09:21:19.434992
```python
    ie = HitRecordIE()

    assert ie._VALID_URL == r'https?://(?:www\.)?hitrecord\.org/records/(?P<id>\d+)'
    assert isinstance(ie, InfoExtractor)

    test_url = 'https://hitrecord.org/records/2954362'
    test_video_id = '2954362'
    extracted_info = ie.extract(test_url)

    assert extracted_info['id'] == test_video_id
    assert extracted_info['title'] == 'A Very Different World (HITRECORD x ACLU)'
    assert 'mp4' in extracted_info['url']
    assert extracted_info['description'] == clean_html('md5:e62defaffab5075a5277736bead95a3d')
    assert extracted_info['duration'] == 139.327
    assert extracted_info['timestamp'] == 1471557582
    assert extracted_info['upload_date'] == '201608

# Generated at 2024-03-18 09:21:28.113031
```python
    ie = HitRecordIE()

    # Check if the instance is created properly
    assert isinstance(ie, HitRecordIE)

    # Check if the _VALID_URL pattern is correct
    assert hasattr(ie, '_VALID_URL')
    assert ie._VALID_URL == r'https?://(?:www\.)?hitrecord\.org/records/(?P<id>\d+)'

    # Check if the _TEST dictionary is set up correctly
    assert hasattr(ie, '_TEST')
    assert isinstance(ie._TEST, dict)
    assert 'url' in ie._TEST
    assert 'md5' in ie._TEST
    assert 'info_dict' in ie._TEST
    assert ie._TEST['url'] == 'https://hitrecord.org/records/2954362'
    assert ie._TEST['md5'] == 'fe1cdc2023bce0bbb95c39c57426aa71'
    assert isinstance

# Generated at 2024-03-18 09:21:30.565726
```python
    ie = HitRecordIE()
    assert ie._VALID_URL == r'https?://(?:www\.)?hitrecord\.org/records/(?P<id>\d+)'
    assert isinstance(ie, InfoExtractor)
```

# Generated at 2024-03-18 09:21:39.758185
```python
    ie = HitRecordIE()
    assert ie._VALID_URL == r'https?://(?:www\.)?hitrecord\.org/records/(?P<id>\d+)'
    test_url = 'https://hitrecord.org/records/2954362'
    assert ie.suitable(test_url)
    info = ie.extract(test_url)
    assert info['id'] == '2954362'
    assert info['ext'] == 'mp4'
    assert 'A Very Different World (HITRECORD x ACLU)' in info['title']
    assert 'uploader' in info
    assert 'duration' in info
    assert isinstance(info['tags'], list) or info['tags'] is None
    assert isinstance(info['view_count'], int)
    assert isinstance(info['like_count'], int)
    assert isinstance(info['comment_count'], int)
```

# Generated at 2024-03-18 09:21:47.012078
```python
    ie = HitRecordIE()
    assert ie.suitable('https://hitrecord.org/records/2954362')
    assert not ie.suitable('https://hitrecord.org/projects/1234567')
    assert ie._VALID_URL == r'https?://(?:www\.)?hitrecord\.org/records/(?P<id>\d+)'
    test_dict = ie._TEST
    info_dict = ie.extract(test_dict['url'])
    for key in test_dict['info_dict']:
        if isinstance(test_dict['info_dict'][key], int):
            assert isinstance(info_dict[key], int)
        elif isinstance(test_dict['info_dict'][key], list):
            assert isinstance(info_dict[key], list)
        else:
            assert info_dict[key] == test_dict['info_dict'][key]
```

# Generated at 2024-03-18 09:21:49.307009
```python
    ie = HitRecordIE()
    assert ie._VALID_URL == r'https?://(?:www\.)?hitrecord\.org/records/(?P<id>\d+)'
    assert isinstance(ie, InfoExtractor)
```