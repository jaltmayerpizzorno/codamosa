# Automatically generated by Pynguin.
import thonny.roughparse as module_0

def test_case_0():
    pass

def test_case_1():
    float_0 = None
    int_0 = 60
    rough_parser_0 = module_0.RoughParser(float_0, int_0)

def test_case_2():
    str_0 = 'I7+Wg\\n~H71oaRq#\t|St'
    bool_0 = False
    rough_parser_0 = module_0.RoughParser(bool_0, str_0)
    var_0 = rough_parser_0.set_lo(bool_0)

def test_case_3():
    int_0 = 4
    rough_parser_0 = module_0.RoughParser(int_0, int_0)
    str_0 = '    def foo():\n        pass\n'
    var_0 = rough_parser_0.set_str(str_0)
    var_1 = rough_parser_0.get_base_indent_string()

def test_case_4():
    int_0 = 4
    int_1 = 8
    rough_parser_0 = module_0.RoughParser(int_0, int_1)
    str_0 = 'def foo():\n    return 42\n'
    var_0 = rough_parser_0.set_str(str_0)
    var_1 = rough_parser_0.find_good_parse_start()
    var_2 = rough_parser_0.get_continuation_type()

def test_case_5():
    int_0 = -1157
    rough_parser_0 = module_0.RoughParser(int_0, int_0)
    str_0 = ',d\n'
    var_0 = rough_parser_0.set_str(str_0)
    int_1 = 370
    var_1 = rough_parser_0.find_good_parse_start(int_1)
    var_2 = rough_parser_0.get_last_open_bracket_pos()

def test_case_6():
    int_0 = 4
    rough_parser_0 = module_0.RoughParser(int_0, int_0)
    str_0 = '    def foo():\n        pass\n'
    var_0 = rough_parser_0.set_str(str_0)
    var_1 = rough_parser_0.get_base_indent_string()
    var_2 = rough_parser_0.get_base_indent_string()

def test_case_7():
    int_0 = -1156
    rough_parser_0 = module_0.RoughParser(int_0, int_0)
    str_0 = ''
    var_0 = rough_parser_0.set_str(str_0)
    var_1 = rough_parser_0.find_good_parse_start()
    var_2 = rough_parser_0.get_base_indent_string()

def test_case_8():
    int_0 = -1157
    rough_parser_0 = module_0.RoughParser(int_0, int_0)
    str_0 = '2\\,d*f\n'
    var_0 = rough_parser_0.set_str(str_0)
    var_1 = rough_parser_0.is_block_opener()

def test_case_9():
    int_0 = 36
    rough_parser_0 = module_0.RoughParser(int_0, int_0)
    str_0 = '   de foo):\n        pass\n'
    var_0 = rough_parser_0.set_str(str_0)
    var_1 = rough_parser_0.get_base_indent_string()

def test_case_10():
    int_0 = -1708
    rough_parser_0 = module_0.RoughParser(int_0, int_0)
    str_0 = '\\\n'
    var_0 = rough_parser_0.set_str(str_0)
    var_1 = rough_parser_0.get_base_indent_string()