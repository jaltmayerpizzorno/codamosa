# Automatically generated by Pynguin.
import sanic.helpers as module_0
import inspect as module_1

def test_case_0():
    try:
        str_0 = 'RXE\\7C^Y\nv**'
        var_0 = module_0.remove_entity_headers(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = None
        var_0 = module_0.is_entity_header(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        dict_0 = {}
        var_0 = module_0.is_hop_by_hop_header(dict_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bool_0 = False
        var_0 = module_0.import_string(bool_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'vs?y@.eW"?id2VX~W'
        var_0 = module_0.import_string(str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'math.cos'
        var_0 = module_0.import_string(str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'collections.abc'
        str_1 = '@Yjl~nQI>\x0bM\x0csL:B"'
        var_0 = module_0.import_string(str_0, str_1)
        var_1 = module_1.ismodule(var_0)
        str_2 = 'nonexistent.module'
        var_2 = module_0.import_string(str_2)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'content-location'
        var_0 = module_0.is_hop_by_hop_header(str_0)
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
        var_1 = module_0.remove_entity_headers(dict_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = 'content-location'
        int_0 = 303
        var_0 = module_0.has_message_body(int_0)
        var_1 = module_0.is_hop_by_hop_header(str_0)
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
        var_2 = module_0.remove_entity_headers(dict_0)
        var_3 = module_0.remove_entity_headers(dict_0, str_0)
        float_0 = -2800.0754628216746
        set_0 = {float_0}
        bytes_0 = b'r\x89\x11\x85\xec\x19\xcb<\xa8P\xae&\xa4'
        var_4 = module_0.import_string(set_0, bytes_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'content-location'
        int_0 = 304
        var_0 = module_0.has_message_body(int_0)
        var_1 = module_0.is_hop_by_hop_header(str_0)
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
        var_2 = module_0.remove_entity_headers(dict_0)
        var_3 = module_0.import_string(var_0)
    except BaseException:
        pass