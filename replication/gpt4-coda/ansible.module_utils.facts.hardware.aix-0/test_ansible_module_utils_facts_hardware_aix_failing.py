# Automatically generated by Pynguin.
import ansible.module_utils.facts.hardware.aix as module_0

def test_case_0():
    try:
        str_0 = "Ansible's max filter does not support any keyword arguments. You need Jinja2 2.10 or later that provides their version of the filter."
        str_1 = 'gij~bZLToZ'
        a_i_x_hardware_0 = module_0.AIXHardware(str_1)
        dict_0 = {str_0: str_0}
        a_i_x_hardware_1 = module_0.AIXHardware(dict_0)
        var_0 = a_i_x_hardware_1.populate(a_i_x_hardware_0)
    except BaseException:
        pass

def test_case_1():
    try:
        tuple_0 = ()
        a_i_x_hardware_0 = module_0.AIXHardware(tuple_0)
        var_0 = a_i_x_hardware_0.get_cpu_facts()
    except BaseException:
        pass

def test_case_2():
    try:
        int_0 = 72
        a_i_x_hardware_0 = module_0.AIXHardware(int_0)
        var_0 = a_i_x_hardware_0.get_memory_facts()
    except BaseException:
        pass

def test_case_3():
    try:
        int_0 = -2496
        a_i_x_hardware_0 = module_0.AIXHardware(int_0)
        var_0 = a_i_x_hardware_0.get_dmi_facts()
    except BaseException:
        pass

def test_case_4():
    try:
        int_0 = 1298
        a_i_x_hardware_0 = module_0.AIXHardware(int_0)
        a_i_x_hardware_1 = module_0.AIXHardware(a_i_x_hardware_0)
        var_0 = a_i_x_hardware_1.get_vgs_facts()
    except BaseException:
        pass

def test_case_5():
    try:
        tuple_0 = ()
        bytes_0 = b'\x0fx\xb1\xcf\xea\xf8?\xc7trZ\xd6\xbe\x98_\xbe'
        a_i_x_hardware_0 = module_0.AIXHardware(tuple_0, bytes_0)
        var_0 = a_i_x_hardware_0.get_mount_facts()
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'All items completed'
        a_i_x_hardware_0 = module_0.AIXHardware(str_0)
        var_0 = a_i_x_hardware_0.get_device_facts()
    except BaseException:
        pass