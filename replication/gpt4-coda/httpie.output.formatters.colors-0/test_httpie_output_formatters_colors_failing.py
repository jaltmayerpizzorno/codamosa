# Automatically generated by Pynguin.
import httpie.context as module_0
import httpie.output.formatters.colors as module_1

def test_case_0():
    try:
        environment_0 = module_0.Environment()
        color_formatter_0 = module_1.ColorFormatter(environment_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '\n    Translate `max-age` into `expires` for Requests to take it into account.\n\n    HACK/FIXME: <https://github.com/psf/requests/issues/5743>\n\n    '
        simplified_h_t_t_p_lexer_0 = module_1.SimplifiedHTTPLexer()
        int_0 = 3115
        optional_0 = module_1.get_lexer(str_0, simplified_h_t_t_p_lexer_0, int_0)
    except BaseException:
        pass

def test_case_2():
    try:
        solarized256_style_0 = module_1.Solarized256Style()
        str_0 = '\n    Translate `max-age into `expires` for Requests to take it into account.\n\n    HACK/FIXME: <https://github.com/pf/requests/issues/5743>\n\n    '
        optional_0 = module_1.get_lexer(str_0)
        simplified_h_t_t_p_lexer_0 = module_1.SimplifiedHTTPLexer()
        int_0 = -310
        environment_0 = module_0.Environment()
        str_1 = 'format_options'
        str_2 = 'xBEfc9{XhV>\x0cH7Y'
        str_3 = '<}pe!+L#Lr#36l^1;?\\"'
        dict_0 = {str_1: simplified_h_t_t_p_lexer_0, str_1: int_0, str_2: environment_0, str_3: str_2}
        color_formatter_0 = module_1.ColorFormatter(environment_0, dict_0, **dict_0)
        optional_1 = color_formatter_0.get_lexer_for_body(str_0, str_2)
        str_4 = None
        type_0 = color_formatter_0.get_style_class(str_4)
    except BaseException:
        pass

def test_case_3():
    try:
        simplified_h_t_t_p_lexer_0 = module_1.SimplifiedHTTPLexer()
        int_0 = -310
        environment_0 = module_0.Environment()
        str_0 = 'format_options'
        dict_0 = {str_0: simplified_h_t_t_p_lexer_0, str_0: int_0, str_0: environment_0, str_0: str_0}
        list_0 = [str_0, int_0]
        int_1 = 2534
        color_formatter_0 = module_1.ColorFormatter(environment_0, list_0, int_1, **dict_0)
    except BaseException:
        pass

def test_case_4():
    try:
        solarized256_style_0 = module_1.Solarized256Style()
        str_0 = '\n    Translate `max-age` into `expires` fo} Requests to take it into account.\n\n i  HACK/FIXME: <https://github.com/psf/requests/issues/5743>\n\n    '
        optional_0 = module_1.get_lexer(str_0)
        simplified_h_t_t_p_lexer_0 = module_1.SimplifiedHTTPLexer()
        int_0 = -310
        environment_0 = module_0.Environment()
        str_1 = 'format_options'
        str_2 = '2'
        simplified_h_t_t_p_lexer_1 = module_1.SimplifiedHTTPLexer()
        dict_0 = {str_1: simplified_h_t_t_p_lexer_0, str_1: int_0, str_2: environment_0, str_1: str_2}
        str_3 = '\r{SQ}04|'
        color_formatter_0 = module_1.ColorFormatter(environment_0, str_2, **dict_0)
        str_4 = color_formatter_0.format_headers(str_3)
        color_formatter_1 = module_1.ColorFormatter(environment_0, dict_0, **dict_0)
        optional_1 = color_formatter_1.get_lexer_for_body(str_0, str_2)
        list_0 = [str_1, int_0]
        int_1 = 2534
        color_formatter_2 = module_1.ColorFormatter(environment_0, list_0, int_1, **dict_0)
    except BaseException:
        pass