# Automatically generated by Pynguin.
import ansible.plugins.become.sudo as module_0

def test_case_0():
    try:
        tuple_0 = ()
        become_module_0 = module_0.BecomeModule()
        var_0 = become_module_0.build_become_command(tuple_0, tuple_0)
        var_1 = become_module_0.build_become_command(become_module_0, become_module_0)
    except BaseException:
        pass

def test_case_1():
    try:
        become_module_0 = module_0.BecomeModule()
        str_0 = 'become_exe'
        str_1 = 'sudo'
        var_0 = become_module_0.set_option(str_0, str_1)
        str_2 = 'become_flags'
        str_3 = '-H -S -n'
        var_1 = become_module_0.set_option(str_2, str_3)
        str_4 = 'root'
        dict_0 = {}
        var_2 = become_module_0.build_become_command(str_4, dict_0)
    except BaseException:
        pass

def test_case_2():
    try:
        become_module_0 = module_0.BecomeModule()
        str_0 = '/bin/bash'
        str_1 = 'echo hello'
        str_2 = 'become_exe'
        var_0 = become_module_0.set_option(str_2, str_1)
        str_3 = 'become_flags'
        var_1 = become_module_0.set_option(str_3, str_2)
        str_4 = 'become_user'
        str_5 = 'root'
        var_2 = become_module_0.set_option(str_4, str_5)
        str_6 = 'become_pass'
        var_3 = None
        var_4 = become_module_0.set_option(str_6, var_3)
        var_5 = become_module_0.build_become_command(str_1, str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        become_module_0 = module_0.BecomeModule()
        str_0 = '/bin/bash'
        str_1 = 'become_exe'
        str_2 = 'sudo'
        var_0 = become_module_0.set_option(str_1, str_2)
        str_3 = 'become_flags'
        str_4 = '- -S -n'
        var_1 = become_module_0.set_option(str_3, str_4)
        str_5 = 'become_user'
        str_6 = 'become_pass'
        become_module_1 = module_0.BecomeModule()
        var_2 = become_module_0.set_option(str_6, become_module_0)
        var_3 = become_module_0.build_become_command(str_5, str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        become_module_0 = module_0.BecomeModule()
        str_0 = '/bin/bash'
        str_1 = 'echo\rello'
        str_2 = 'become_exe'
        str_3 = None
        var_0 = become_module_0.set_option(str_2, str_3)
        str_4 = 'become_flags'
        var_1 = become_module_0.set_option(str_4, str_1)
        str_5 = 'become_user'
        var_2 = become_module_0.set_option(str_5, str_3)
        str_6 = 'become_pass'
        var_3 = become_module_0.set_option(str_6, str_5)
        var_4 = become_module_0.build_become_command(str_1, str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        become_module_0 = module_0.BecomeModule()
        str_0 = '/bin/bash'
        str_1 = 'echo\rello'
        str_2 = 'become_exe'
        str_3 = 'sudo'
        str_4 = None
        var_0 = become_module_0.set_option(str_2, str_4)
        str_5 = 'become_flags'
        var_1 = become_module_0.set_option(str_5, str_4)
        str_6 = 'become_pass'
        var_2 = become_module_0.set_option(str_6, str_1)
        float_0 = 1.5
        bytes_0 = b't3x\x0f\xf3\xb6I\xc6blP\x85\x99\x97\x11m,+'
        var_3 = become_module_0.set_option(float_0, bytes_0)
        bytes_1 = b'\xc2\x04\xa9w"Tr\xd1p\xe5@\x86\x91^\xdd\x7f\x16\x0b'
        var_4 = become_module_0.set_option(str_0, bytes_1)
        list_0 = [str_3]
        bytes_2 = b'\xdey(\x99\xe6\xd4\xfa9s\x99-\x1a\xe4'
        tuple_0 = (list_0, bytes_2)
        var_5 = become_module_0.build_become_command(tuple_0, tuple_0)
    except BaseException:
        pass