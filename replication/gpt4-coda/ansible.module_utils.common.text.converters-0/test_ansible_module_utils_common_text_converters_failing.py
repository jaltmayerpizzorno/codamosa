# Automatically generated by Pynguin.
import ansible.module_utils.common.text.converters as module_0

def test_case_0():
    try:
        str_0 = 'E\n'
        tuple_0 = None
        dict_0 = {str_0: tuple_0}
        list_0 = [str_0, dict_0]
        int_0 = 2236
        var_0 = module_0.to_bytes(dict_0, list_0, int_0, int_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'q4G[4y]H\rNzB]Gwzz<'
        float_0 = 865.46219
        var_0 = module_0.container_to_bytes(str_0, float_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '`'
        bool_0 = True
        bytes_0 = b'\xbe\x9cv\x0e*7\x92n'
        dict_0 = {str_0: str_0, bool_0: bool_0, bytes_0: str_0, str_0: str_0}
        var_0 = module_0.container_to_bytes(bool_0, dict_0)
        dict_1 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
        int_0 = -2055
        bool_1 = False
        var_1 = module_0.to_text(int_0, bool_1)
        bytes_1 = b'Z\xd8\x12'
        var_2 = module_0.to_text(dict_1, bytes_1, dict_1)
    except BaseException:
        pass

def test_case_3():
    try:
        float_0 = 0.2
        list_0 = [float_0]
        var_0 = module_0.to_text(list_0, float_0)
        str_0 = ''
        list_1 = [list_0]
        var_1 = module_0.container_to_bytes(list_1)
        bytes_0 = None
        set_0 = {str_0, float_0, var_0}
        str_1 = 'aN\tb\x0cTxyaw'
        int_0 = -1571
        var_2 = module_0.to_text(bytes_0, set_0, str_1, int_0)
    except BaseException:
        pass

def test_case_4():
    try:
        float_0 = 0.2
        str_0 = ''
        bytes_0 = None
        set_0 = {str_0, float_0, bytes_0}
        str_1 = 'n:5g{ avFs?Th-'
        int_0 = -1108
        var_0 = module_0.to_text(bytes_0, set_0, str_1, int_0)
    except BaseException:
        pass

def test_case_5():
    try:
        bytes_0 = b''
        list_0 = [bytes_0]
        str_0 = 'EU_nze\td@l&*h'
        str_1 = "Z4T,7c~Be['K\x0bD'lN"
        str_2 = '${Ihsmo#\x0b\r'
        dict_0 = {str_0: list_0, str_1: bytes_0, str_2: list_0}
        var_0 = module_0.to_text(list_0)
        var_1 = module_0.jsonify(list_0, **dict_0)
    except BaseException:
        pass

def test_case_6():
    try:
        bytes_0 = b'\xf5\x1b\xfc/\x98\xe4P6M\xd1\xdd\xd5'
        set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
        var_0 = module_0.jsonify(set_0)
    except BaseException:
        pass