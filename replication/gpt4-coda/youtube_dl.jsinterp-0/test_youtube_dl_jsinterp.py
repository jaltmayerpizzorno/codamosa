# Automatically generated by Pynguin.
import youtube_dl.jsinterp as module_0

def test_case_0():
    str_0 = '\n        function double(x) {\n            return x * 2;\n        }\n        function add(a, b) {\n            return a + b;\n        }\n        function getLength(s) {\n            return s.length;\n        }\n    '
    j_s_interpreter_0 = module_0.JSInterpreter(str_0)

def test_case_1():
    dict_0 = {}
    list_0 = None
    dict_1 = {}
    tuple_0 = (dict_1,)
    j_s_interpreter_0 = module_0.JSInterpreter(dict_0)
    var_0 = j_s_interpreter_0.build_function(list_0, tuple_0)
    j_s_interpreter_1 = module_0.JSInterpreter(dict_0)

def test_case_2():
    str_0 = '\n<DS#>H\nV K'
    j_s_interpreter_0 = module_0.JSInterpreter(str_0)
    list_0 = [str_0]
    j_s_interpreter_1 = module_0.JSInterpreter(j_s_interpreter_0, list_0)

def test_case_3():
    str_0 = ''
    j_s_interpreter_0 = module_0.JSInterpreter(str_0)
    int_0 = 100
    var_0 = j_s_interpreter_0.interpret_expression(str_0, str_0, int_0)
    str_1 = '42'
    var_1 = j_s_interpreter_0.interpret_expression(str_1, var_0, int_0)
    str_2 = '2 + 2'
    var_2 = {}
    var_3 = j_s_interpreter_0.interpret_expression(str_2, var_2, int_0)
    str_3 = '6 - 4'
    var_4 = {}
    var_5 = j_s_interpreter_0.interpret_expression(str_3, var_4, int_0)
    var_6 = {}
    var_7 = j_s_interpreter_0.interpret_expression(str_0, var_6, int_0)
    str_4 = '8 / 2'
    var_8 = {}
    var_9 = j_s_interpreter_0.interpret_expression(str_4, var_8, int_0)

def test_case_4():
    str_0 = '\n    function testAdd(a, b) {\n        return a + b;\n    }\n    function testSubtract(a, b) {\n        return a - b;\n    }\n    var testMultiply = function(a, b) {\n        return a * b;\n    };\n    '
    j_s_interpreter_0 = module_0.JSInterpreter(str_0)
    str_1 = 'testAdd'
    var_0 = j_s_interpreter_0.extract_function(str_1)
    str_2 = 'testSubtract'
    var_1 = j_s_interpreter_0.extract_function(str_2)