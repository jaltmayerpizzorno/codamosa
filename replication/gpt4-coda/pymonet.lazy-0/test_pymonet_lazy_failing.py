# Automatically generated by Pynguin.
import pymonet.lazy as module_0
import builtins as module_1

def test_case_0():
    try:
        float_0 = 2498.487
        lazy_0 = module_0.Lazy(float_0)
        var_0 = lazy_0.to_try()
        float_1 = 322.23379
        dict_0 = {float_1: float_1}
        set_0 = set()
        lazy_1 = module_0.Lazy(set_0)
        str_0 = lazy_1.__str__()
        lazy_2 = module_0.Lazy(dict_0)
        str_1 = 'V$8n]Qgo`&ev{RXT'
        var_1 = lazy_1.map(str_1)
        var_2 = lazy_2.to_box()
    except BaseException:
        pass

def test_case_1():
    try:
        dict_0 = {}
        lazy_0 = module_0.Lazy(dict_0)
        var_0 = lazy_0.to_validation()
    except BaseException:
        pass

def test_case_2():
    try:
        float_0 = -2209.151781
        bool_0 = True
        lazy_0 = module_0.Lazy(bool_0)
        bool_1 = True
        lazy_1 = module_0.Lazy(bool_1)
        var_0 = lazy_1.map(float_0)
        lazy_2 = module_0.Lazy(var_0)
        var_1 = lazy_2.to_validation()
    except BaseException:
        pass

def test_case_3():
    try:
        set_0 = set()
        lazy_0 = module_0.Lazy(set_0)
        list_0 = [lazy_0]
        var_0 = lazy_0.ap(list_0)
        var_1 = lazy_0.to_try()
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = ';u=1TnIE2VN'
        list_0 = []
        bool_0 = False
        dict_0 = {str_0: str_0, str_0: str_0}
        lazy_0 = module_0.Lazy(dict_0)
        var_0 = lazy_0.bind(bool_0)
        lazy_1 = module_0.Lazy(var_0)
        var_1 = lazy_1.to_try(*list_0)
        object_0 = module_1.object(*list_0, **dict_0)
    except BaseException:
        pass

def test_case_5():
    try:
        int_0 = True
        lazy_0 = module_0.Lazy(int_0)
        var_0 = lazy_0.to_box()
    except BaseException:
        pass

def test_case_6():
    try:
        bool_0 = True
        lazy_0 = module_0.Lazy(bool_0)
        var_0 = lazy_0.to_either()
    except BaseException:
        pass

def test_case_7():
    try:
        bool_0 = False
        lazy_0 = module_0.Lazy(bool_0)
        var_0 = lazy_0.to_maybe()
    except BaseException:
        pass