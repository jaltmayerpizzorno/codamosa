

# Generated at 2024-03-18 05:33:57.589867
```python
    assert bump_version('1.2.2') == '1.2.3'
    assert bump_version('1.2.3', position=1) == '1.3'
    assert bump_version('1.3.4', position=0) == '2.0'
    assert bump_version('1.2.3', pre_release='a') == '1.2.4a0'
    assert bump_version('1.2.4a0', pre_release='a') == '1.2.4a1'
    assert bump_version('1.2.4a1', pre_release='b') == '1.2.4b0'
    assert bump_version('1.2.4a1') == '1.2.4'
    assert bump_version('1.2.4b0') == '1.2.4'
    assert bump_version('2.1.3', position

# Generated at 2024-03-18 05:34:03.966865
```python
    # Test major version bump
    assert bump_version('1.2.3', position=0) == '2.0.0'
    # Test minor version bump
    assert bump_version('1.2.3', position=1) == '1.3.0'
    # Test patch version bump
    assert bump_version('1.2.3') == '1.2.4'
    # Test alpha pre-release bump
    assert bump_version('1.2.3', pre_release='a') == '1.2.4a0'
    # Test beta pre-release bump
    assert bump_version('1.2.3', pre_release='b') == '1.2.4b0'
    # Test alpha pre-release increment
    assert bump_version('1.2.3a0', pre_release='a') == '1.2.3a1'
    # Test beta pre-release increment

# Generated at 2024-03-18 05:34:10.437915
```python
    # Test major version bump
    assert bump_version('1.2.3', position=0) == '2.0.0'
    # Test minor version bump
    assert bump_version('1.2.3', position=1) == '1.3.0'
    # Test patch version bump
    assert bump_version('1.2.3') == '1.2.4'
    # Test alpha pre-release bump
    assert bump_version('1.2.3', pre_release='alpha') == '1.2.4a0'
    # Test beta pre-release bump
    assert bump_version('1.2.3', pre_release='beta') == '1.2.4b0'
    # Test alpha pre-release increment
    assert bump_version('1.2.3a0', pre_release='alpha') == '1.2.3a1'
    # Test beta pre-release increment

# Generated at 2024-03-18 05:34:16.796491
```python
    # Test major version bump
    assert bump_version('1.2.3', position=0) == '2.0.0'
    # Test minor version bump
    assert bump_version('1.2.3', position=1) == '1.3.0'
    # Test patch version bump
    assert bump_version('1.2.3') == '1.2.4'
    # Test alpha pre-release bump
    assert bump_version('1.2.3', pre_release='a') == '1.2.4a0'
    # Test beta pre-release bump
    assert bump_version('1.2.3', pre_release='b') == '1.2.4b0'
    # Test alpha pre-release increment
    assert bump_version('1.2.3a0', pre_release='a') == '1.2.3a1'
    # Test beta pre-release increment

# Generated at 2024-03-18 05:34:24.542027
```python
    # Test major version bump
    assert bump_version('1.2.3', position=0) == '2.0.0'
    # Test minor version bump
    assert bump_version('1.2.3', position=1) == '1.3.0'
    # Test patch version bump
    assert bump_version('1.2.3', position=2) == '1.2.4'
    # Test alpha pre-release bump on patch version
    assert bump_version('1.2.3', pre_release='a') == '1.2.4a0'
    # Test alpha pre-release bump on existing alpha pre-release
    assert bump_version('1.2.4a0', pre_release='a') == '1.2.4a1'
    # Test beta pre-release bump on existing alpha pre-release
    assert bump_version('1.2.4a1', pre_release='

# Generated at 2024-03-18 05:34:31.890636
```python
    assert bump_version('1.2.2') == '1.2.3'
    assert bump_version('1.2.3', position=1) == '1.3'
    assert bump_version('1.3.4', position=0) == '2.0'
    assert bump_version('1.2.3', pre_release='a') == '1.2.4a0'
    assert bump_version('1.2.4a0', pre_release='a') == '1.2.4a1'
    assert bump_version('1.2.4a1', pre_release='b') == '1.2.4b0'
    assert bump_version('1.2.4a1') == '1.2.4'
    assert bump_version('1.2.4b0') == '1.2.4'
    assert bump_version('2.1.3', position

# Generated at 2024-03-18 05:34:38.081326
```python
    # Test major version bump
    assert bump_version('1.2.3', position=0) == '2.0.0'
    # Test minor version bump
    assert bump_version('1.2.3', position=1) == '1.3.0'
    # Test patch version bump
    assert bump_version('1.2.3') == '1.2.4'
    # Test alpha pre-release bump
    assert bump_version('1.2.3', pre_release='a') == '1.2.4a0'
    # Test beta pre-release bump
    assert bump_version('1.2.3', pre_release='b') == '1.2.4b0'
    # Test alpha pre-release increment
    assert bump_version('1.2.3a0', pre_release='a') == '1.2.3a1'
    # Test beta pre-release increment

# Generated at 2024-03-18 05:34:43.526455
```python
    # Test major version bump
    assert bump_version('1.2.3', position=0) == '2.0.0'
    # Test minor version bump
    assert bump_version('1.2.3', position=1) == '1.3.0'
    # Test patch version bump
    assert bump_version('1.2.3') == '1.2.4'
    # Test alpha pre-release bump
    assert bump_version('1.2.3', pre_release='a') == '1.2.4a0'
    # Test beta pre-release bump
    assert bump_version('1.2.3', pre_release='b') == '1.2.4b0'
    # Test alpha pre-release increment
    assert bump_version('1.2.3a0', pre_release='a') == '1.2.3a1'
    # Test beta pre-release increment

# Generated at 2024-03-18 05:34:52.809014
```python
    # Test major version bump
    assert bump_version('1.2.3', position=0) == '2.0.0'
    # Test minor version bump
    assert bump_version('1.2.3', position=1) == '1.3.0'
    # Test patch version bump
    assert bump_version('1.2.3') == '1.2.4'
    # Test alpha pre-release bump
    assert bump_version('1.2.3', pre_release='a') == '1.2.4a0'
    # Test beta pre-release bump
    assert bump_version('1.2.3', pre_release='b') == '1.2.4b0'
    # Test alpha pre-release increment
    assert bump_version('1.2.3a0', pre_release='a') == '1.2.3a1'
    # Test beta pre-release increment

# Generated at 2024-03-18 05:35:00.914112
```python
    assert bump_version('1.2.2') == '1.2.3'
    assert bump_version('1.2.3', position=1) == '1.3.0'
    assert bump_version('1.3.4', position=0) == '2.0.0'
    assert bump_version('1.2.3', pre_release='a') == '1.2.4a0'
    assert bump_version('1.2.4a0', pre_release='a') == '1.2.4a1'
    assert bump_version('1.2.4a1', pre_release='b') == '1.2.4b0'
    assert bump_version('1.2.4a1') == '1.2.4'
    assert bump_version('1.2.4b0') == '1.2.4'
    assert bump_version('2.1

# Generated at 2024-03-18 05:35:38.045809
```python
    assert bump_version('1.2.2') == '1.2.3'
    assert bump_version('1.2.3', position=1) == '1.3.0'
    assert bump_version('1.3.4', position=0) == '2.0.0'
    assert bump_version('1.2.3', pre_release='a') == '1.2.4a0'
    assert bump_version('1.2.4a0', pre_release='a') == '1.2.4a1'
    assert bump_version('1.2.4a1', pre_release='b') == '1.2.4b0'
    assert bump_version('1.2.4a1') == '1.2.4'
    assert bump_version('1.2.4b0') == '1.2.4'
    assert bump_version('2.1

# Generated at 2024-03-18 05:35:43.582533
```python
    # Test major version bump
    assert bump_version('1.2.3', position=0) == '2.0.0'
    # Test minor version bump
    assert bump_version('1.2.3', position=1) == '1.3.0'
    # Test patch version bump
    assert bump_version('1.2.3') == '1.2.4'
    # Test alpha pre-release bump
    assert bump_version('1.2.3', pre_release='a') == '1.2.4a0'
    # Test beta pre-release bump
    assert bump_version('1.2.3', pre_release='b') == '1.2.4b0'
    # Test alpha pre-release increment
    assert bump_version('1.2.3a0', pre_release='a') == '1.2.3a1'
    # Test beta pre-release increment

# Generated at 2024-03-18 05:35:50.312669
```python
    # Test major version bump
    assert bump_version('1.2.3', position=0) == '2.0.0'
    # Test minor version bump
    assert bump_version('1.2.3', position=1) == '1.3.0'
    # Test patch version bump
    assert bump_version('1.2.3') == '1.2.4'
    # Test alpha pre-release bump
    assert bump_version('1.2.3', pre_release='a') == '1.2.4a0'
    # Test beta pre-release bump
    assert bump_version('1.2.3', pre_release='b') == '1.2.4b0'
    # Test alpha pre-release increment
    assert bump_version('1.2.3a0', pre_release='a') == '1.2.3a1'
    # Test beta pre-release increment

# Generated at 2024-03-18 05:35:59.279934
```python
    assert bump_version('1.2.2') == '1.2.3'
    assert bump_version('1.2.3', position=1) == '1.3.0'
    assert bump_version('1.3.4', position=0) == '2.0.0'
    assert bump_version('1.2.3', pre_release='a') == '1.2.4a0'
    assert bump_version('1.2.4a0', pre_release='a') == '1.2.4a1'
    assert bump_version('1.2.4a1', pre_release='b') == '1.2.4b0'
    assert bump_version('1.2.4a1') == '1.2.4'
    assert bump_version('1.2.4b0') == '1.2.4'
    assert bump_version('2.1

# Generated at 2024-03-18 05:36:06.811229
```python
    assert bump_version('1.2.2') == '1.2.3'
    assert bump_version('1.2.3', position=1) == '1.3'
    assert bump_version('1.3.4', position=0) == '2.0'
    assert bump_version('1.2.3', pre_release='a') == '1.2.4a0'
    assert bump_version('1.2.4a0', pre_release='a') == '1.2.4a1'
    assert bump_version('1.2.4a1', pre_release='b') == '1.2.4b0'
    assert bump_version('1.2.4a1') == '1.2.4'
    assert bump_version('1.2.4b0') == '1.2.4'
    assert bump_version('2.1.3', position

# Generated at 2024-03-18 05:36:17.474908
```python
    # Test major version bump
    assert bump_version('1.2.3', position=0) == '2.0.0'
    # Test minor version bump
    assert bump_version('1.2.3', position=1) == '1.3.0'
    # Test patch version bump
    assert bump_version('1.2.3', position=2) == '1.2.4'
    # Test alpha pre-release bump on patch version
    assert bump_version('1.2.3', pre_release='a') == '1.2.4a0'
    # Test beta pre-release bump on patch version
    assert bump_version('1.2.3', pre_release='b') == '1.2.4b0'
    # Test alpha pre-release bump on minor version
    assert bump_version('1.2.0', position=1, pre_release='a') == '

# Generated at 2024-03-18 05:36:25.662447
```python
    # Test major version bump
    assert bump_version('1.2.3', position=0) == '2.0.0'
    # Test minor version bump
    assert bump_version('1.2.3', position=1) == '1.3.0'
    # Test patch version bump
    assert bump_version('1.2.3') == '1.2.4'
    # Test alpha pre-release bump
    assert bump_version('1.2.3', pre_release='a') == '1.2.4a0'
    # Test beta pre-release bump
    assert bump_version('1.2.3', pre_release='b') == '1.2.4b0'
    # Test alpha pre-release increment
    assert bump_version('1.2.3a0', pre_release='a') == '1.2.3a1'
    # Test beta pre-release increment

# Generated at 2024-03-18 05:36:31.453519
```python
    # Test major version bump
    assert bump_version('1.2.3', position=0) == '2.0.0'
    # Test minor version bump
    assert bump_version('1.2.3', position=1) == '1.3.0'
    # Test patch version bump
    assert bump_version('1.2.3', position=2) == '1.2.4'
    # Test alpha pre-release bump on patch version
    assert bump_version('1.2.3', pre_release='a') == '1.2.4a0'
    # Test beta pre-release bump on patch version
    assert bump_version('1.2.3', pre_release='b') == '1.2.4b0'
    # Test alpha pre-release bump on minor version
    assert bump_version('1.2.3', position=1, pre_release='a') == '

# Generated at 2024-03-18 05:36:39.012133
```python
    assert bump_version('1.2.2') == '1.2.3'
    assert bump_version('1.2.3', position=1) == '1.3.0'
    assert bump_version('1.3.4', position=0) == '2.0.0'
    assert bump_version('1.2.3', pre_release='a') == '1.2.4a0'
    assert bump_version('1.2.4a0', pre_release='a') == '1.2.4a1'
    assert bump_version('1.2.4a1', pre_release='b') == '1.2.4b0'
    assert bump_version('1.2.4a1') == '1.2.4'
    assert bump_version('1.2.4b0') == '1.2.4'
    assert bump_version('2.1

# Generated at 2024-03-18 05:36:46.935042
```python
    # Test major version bump
    assert bump_version('1.2.3', position=0) == '2.0.0'
    # Test minor version bump
    assert bump_version('1.2.3', position=1) == '1.3.0'
    # Test patch version bump
    assert bump_version('1.2.3', position=2) == '1.2.4'
    # Test alpha pre-release bump on patch version
    assert bump_version('1.2.3', pre_release='a') == '1.2.4a0'
    # Test beta pre-release bump on patch version
    assert bump_version('1.2.3', pre_release='b') == '1.2.4b0'
    # Test alpha pre-release bump on minor version
    assert bump_version('1.2.3', position=1, pre_release='a') == '

# Generated at 2024-03-18 05:37:21.525080
```python
    # Test major version bump
    assert bump_version('1.2.3', position=0) == '2.0.0'
    # Test minor version bump
    assert bump_version('1.2.3', position=1) == '1.3.0'
    # Test patch version bump
    assert bump_version('1.2.3') == '1.2.4'
    # Test alpha pre-release bump
    assert bump_version('1.2.3', pre_release='alpha') == '1.2.4a0'
    # Test beta pre-release bump
    assert bump_version('1.2.3', pre_release='beta') == '1.2.4b0'
    # Test alpha pre-release increment
    assert bump_version('1.2.3a0', pre_release='alpha') == '1.2.3a1'
    # Test beta pre-release increment

# Generated at 2024-03-18 05:37:28.341789
```python
    assert bump_version('1.2.2') == '1.2.3'
    assert bump_version('1.2.3', position=1) == '1.3'
    assert bump_version('1.3.4', position=0) == '2.0'
    assert bump_version('1.2.3', pre_release='a') == '1.2.4a0'
    assert bump_version('1.2.4a0', pre_release='a') == '1.2.4a1'
    assert bump_version('1.2.4a1', pre_release='b') == '1.2.4b0'
    assert bump_version('1.2.4a1') == '1.2.4'
    assert bump_version('1.2.4b0') == '1.2.4'
    assert bump_version('2.1.3', position

# Generated at 2024-03-18 05:37:34.283753
```python
    # Test major version bump
    assert bump_version('1.2.3', position=0) == '2.0.0'
    # Test minor version bump
    assert bump_version('1.2.3', position=1) == '1.3.0'
    # Test patch version bump
    assert bump_version('1.2.3', position=2) == '1.2.4'
    # Test alpha pre-release bump on patch version
    assert bump_version('1.2.3', pre_release='a') == '1.2.4a0'
    # Test beta pre-release bump on patch version
    assert bump_version('1.2.3', pre_release='b') == '1.2.4b0'
    # Test alpha pre-release bump on minor version
    assert bump_version('1.2.3', position=1, pre_release='a') == '

# Generated at 2024-03-18 05:37:39.506215
```python
    # Test major version bump
    assert bump_version('1.2.3', position=0) == '2.0.0'
    # Test minor version bump
    assert bump_version('1.2.3', position=1) == '1.3.0'
    # Test patch version bump
    assert bump_version('1.2.3', position=2) == '1.2.4'
    # Test alpha pre-release bump on patch version
    assert bump_version('1.2.3', pre_release='a') == '1.2.4a0'
    # Test beta pre-release bump on patch version
    assert bump_version('1.2.3', pre_release='b') == '1.2.4b0'
    # Test alpha pre-release bump on minor version
    assert bump_version('1.2.3', position=1, pre_release='a') == '

# Generated at 2024-03-18 05:37:44.522846
```python
    # Test major version bump
    assert bump_version('1.2.3', position=0) == '2.0.0'
    # Test minor version bump
    assert bump_version('1.2.3', position=1) == '1.3.0'
    # Test patch version bump
    assert bump_version('1.2.3', position=2) == '1.2.4'
    # Test alpha pre-release bump
    assert bump_version('1.2.3', pre_release='a') == '1.2.4a0'
    # Test beta pre-release bump
    assert bump_version('1.2.3', pre_release='b') == '1.2.4b0'
    # Test alpha pre-release increment
    assert bump_version('1.2.3a0', pre_release='a') == '1.2.3a1'
    # Test

# Generated at 2024-03-18 05:37:54.812395
```python
    # Test major version bump
    assert bump_version('1.2.3', position=0) == '2.0.0'
    # Test minor version bump
    assert bump_version('1.2.3', position=1) == '1.3.0'
    # Test patch version bump
    assert bump_version('1.2.3') == '1.2.4'
    # Test alpha pre-release bump on patch version
    assert bump_version('1.2.3', pre_release='a') == '1.2.4a0'
    # Test alpha pre-release bump on minor version
    assert bump_version('1.2.0', position=1, pre_release='alpha') == '1.3.0a0'
    # Test beta pre-release bump on patch version
    assert bump_version('1.2.3', pre_release='b') == '1.2.

# Generated at 2024-03-18 05:38:01.462453
```python
    # Test major version bump
    assert bump_version('1.2.3', position=0) == '2.0.0'
    # Test minor version bump
    assert bump_version('1.2.3', position=1) == '1.3.0'
    # Test patch version bump
    assert bump_version('1.2.3') == '1.2.4'
    # Test alpha pre-release bump
    assert bump_version('1.2.3', pre_release='a') == '1.2.4a0'
    # Test beta pre-release bump
    assert bump_version('1.2.3', pre_release='b') == '1.2.4b0'
    # Test alpha pre-release increment
    assert bump_version('1.2.3a0', pre_release='a') == '1.2.3a1'
    # Test beta pre-release increment

# Generated at 2024-03-18 05:38:07.795277
```python
    # Test major version bump
    assert bump_version('1.2.3', position=0) == '2.0.0'
    # Test minor version bump
    assert bump_version('1.2.3', position=1) == '1.3.0'
    # Test patch version bump
    assert bump_version('1.2.3') == '1.2.4'
    # Test alpha pre-release bump on patch version
    assert bump_version('1.2.3', pre_release='a') == '1.2.4a0'
    # Test alpha pre-release bump on existing alpha pre-release
    assert bump_version('1.2.4a0', pre_release='a') == '1.2.4a1'
    # Test beta pre-release bump on existing alpha pre-release
    assert bump_version('1.2.4a1', pre_release='b') == '

# Generated at 2024-03-18 05:38:14.928523
```python
    # Test major version bump
    assert bump_version('1.2.3', position=0) == '2.0.0'
    # Test minor version bump
    assert bump_version('1.2.3', position=1) == '1.3.0'
    # Test patch version bump
    assert bump_version('1.2.3') == '1.2.4'
    # Test alpha pre-release bump
    assert bump_version('1.2.3', pre_release='a') == '1.2.4a0'
    # Test beta pre-release bump
    assert bump_version('1.2.3', pre_release='b') == '1.2.4b0'
    # Test alpha pre-release increment
    assert bump_version('1.2.3a0', pre_release='a') == '1.2.3a1'
    # Test beta pre-release increment

# Generated at 2024-03-18 05:38:20.014968
```python
    # Test major version bump
    assert bump_version('1.2.3', position=0) == '2.0.0'
    # Test minor version bump
    assert bump_version('1.2.3', position=1) == '1.3.0'
    # Test patch version bump
    assert bump_version('1.2.3') == '1.2.4'
    # Test alpha pre-release bump
    assert bump_version('1.2.3', pre_release='a') == '1.2.4a0'
    # Test beta pre-release bump
    assert bump_version('1.2.3', pre_release='b') == '1.2.4b0'
    # Test alpha pre-release increment
    assert bump_version('1.2.3a0', pre_release='a') == '1.2.3a1'
    # Test beta pre-release increment

# Generated at 2024-03-18 05:39:02.094376
```python
    # Test major version bump
    assert bump_version('1.2.3', position=0) == '2.0.0'
    # Test minor version bump
    assert bump_version('1.2.3', position=1) == '1.3.0'
    # Test patch version bump
    assert bump_version('1.2.3') == '1.2.4'
    # Test alpha pre-release bump on patch version
    assert bump_version('1.2.3', pre_release='a') == '1.2.4a0'
    # Test alpha pre-release bump on existing alpha pre-release
    assert bump_version('1.2.4a0', pre_release='a') == '1.2.4a1'
    # Test beta pre-release bump on existing alpha pre-release
    assert bump_version('1.2.4a1', pre_release='b') == '

# Generated at 2024-03-18 05:39:09.244215
```python
    assert bump_version('1.2.2') == '1.2.3'
    assert bump_version('1.2.3', position=1) == '1.3'
    assert bump_version('1.3.4', position=0) == '2.0'
    assert bump_version('1.2.3', pre_release='a') == '1.2.4a0'
    assert bump_version('1.2.4a0', pre_release='a') == '1.2.4a1'
    assert bump_version('1.2.4a1', pre_release='b') == '1.2.4b0'
    assert bump_version('1.2.4a1') == '1.2.4'
    assert bump_version('1.2.4b0') == '1.2.4'
    assert bump_version('2.1.3', position

# Generated at 2024-03-18 05:39:18.129256
```python
    assert bump_version('1.2.2') == '1.2.3'
    assert bump_version('1.2.3', position=1) == '1.3.0'
    assert bump_version('1.3.4', position=0) == '2.0.0'
    assert bump_version('1.2.3', pre_release='a') == '1.2.4a0'
    assert bump_version('1.2.4a0', pre_release='a') == '1.2.4a1'
    assert bump_version('1.2.4a1', pre_release='b') == '1.2.4b0'
    assert bump_version('1.2.4a1') == '1.2.4'
    assert bump_version('1.2.4b0') == '1.2.4'
    assert bump_version('2.1

# Generated at 2024-03-18 05:39:24.089997
```python
    # Test major version bump
    assert bump_version('1.2.3', position=0) == '2.0.0'
    # Test minor version bump
    assert bump_version('1.2.3', position=1) == '1.3.0'
    # Test patch version bump
    assert bump_version('1.2.3') == '1.2.4'
    # Test alpha pre-release bump
    assert bump_version('1.2.3', pre_release='a') == '1.2.4a0'
    # Test beta pre-release bump
    assert bump_version('1.2.3', pre_release='b') == '1.2.4b0'
    # Test alpha pre-release increment
    assert bump_version('1.2.3a0', pre_release='a') == '1.2.3a1'
    # Test beta pre-release increment

# Generated at 2024-03-18 05:39:29.608419
```python
    assert bump_version('1.2.2') == '1.2.3'
    assert bump_version('1.2.3', position=1) == '1.3'
    assert bump_version('1.3.4', position=0) == '2.0'
    assert bump_version('1.2.3', pre_release='a') == '1.2.4a0'
    assert bump_version('1.2.4a0', pre_release='a') == '1.2.4a1'
    assert bump_version('1.2.4a1', pre_release='b') == '1.2.4b0'
    assert bump_version('1.2.4a1') == '1.2.4'
    assert bump_version('1.2.4b0') == '1.2.4'
    assert bump_version('2.1.3', position

# Generated at 2024-03-18 05:39:34.620541
```python
    assert bump_version('1.2.2') == '1.2.3'
    assert bump_version('1.2.3', position=1) == '1.3'
    assert bump_version('1.3.4', position=0) == '2.0'
    assert bump_version('1.2.3', pre_release='a') == '1.2.4a0'
    assert bump_version('1.2.4a0', pre_release='a') == '1.2.4a1'
    assert bump_version('1.2.4a1', pre_release='b') == '1.2.4b0'
    assert bump_version('1.2.4a1') == '1.2.4'
    assert bump_version('1.2.4b0') == '1.2.4'
    assert bump_version('2.1.3', position

# Generated at 2024-03-18 05:39:42.550090
```python
    # Test major version bump
    assert bump_version('1.2.3', position=0) == '2.0.0'
    # Test minor version bump
    assert bump_version('1.2.3', position=1) == '1.3.0'
    # Test patch version bump
    assert bump_version('1.2.3', position=2) == '1.2.4'
    # Test alpha pre-release bump on patch version
    assert bump_version('1.2.3', pre_release='a') == '1.2.4a0'
    # Test beta pre-release bump on patch version
    assert bump_version('1.2.3', pre_release='b') == '1.2.4b0'
    # Test alpha pre-release bump on minor version
    assert bump_version('1.2.3', position=1, pre_release='a') == '

# Generated at 2024-03-18 05:39:49.826711
```python
    # Test major version bump
    assert bump_version('1.2.3', position=0) == '2.0.0'
    # Test minor version bump
    assert bump_version('1.2.3', position=1) == '1.3.0'
    # Test patch version bump
    assert bump_version('1.2.3', position=2) == '1.2.4'
    # Test alpha pre-release bump on patch version
    assert bump_version('1.2.3', pre_release='a') == '1.2.4a0'
    # Test beta pre-release bump on patch version
    assert bump_version('1.2.3', pre_release='b') == '1.2.4b0'
    # Test alpha pre-release bump on minor version
    assert bump_version('1.2.3', position=1, pre_release='a') == '

# Generated at 2024-03-18 05:39:57.285747
```python
    # Test major version bump
    assert bump_version('1.2.3', position=0) == '2.0.0'
    # Test minor version bump
    assert bump_version('1.2.3', position=1) == '1.3.0'
    # Test patch version bump
    assert bump_version('1.2.3', position=2) == '1.2.4'
    # Test alpha pre-release bump
    assert bump_version('1.2.3', pre_release='a') == '1.2.4a0'
    # Test beta pre-release bump
    assert bump_version('1.2.3', pre_release='b') == '1.2.4b0'
    # Test alpha pre-release increment
    assert bump_version('1.2.3a0', pre_release='a') == '1.2.3a1'
    # Test

# Generated at 2024-03-18 05:40:03.565488
```python
    assert bump_version('1.2.2') == '1.2.3'
    assert bump_version('1.2.3', position=1) == '1.3'
    assert bump_version('1.3.4', position=0) == '2.0'
    assert bump_version('1.2.3', pre_release='a') == '1.2.4a0'
    assert bump_version('1.2.4a0', pre_release='a') == '1.2.4a1'
    assert bump_version('1.2.4a1', pre_release='b') == '1.2.4b0'
    assert bump_version('1.2.4a1') == '1.2.4'
    assert bump_version('1.2.4b0') == '1.2.4'
    assert bump_version('2.1.3', position

# Generated at 2024-03-18 05:40:39.548198
```python
    # Test major version bump
    assert bump_version('1.2.3', position=0) == '2.0.0'
    # Test minor version bump
    assert bump_version('1.2.3', position=1) == '1.3.0'
    # Test patch version bump
    assert bump_version('1.2.3', position=2) == '1.2.4'
    # Test alpha pre-release bump on patch version
    assert bump_version('1.2.3', pre_release='a') == '1.2.4a0'
    # Test beta pre-release bump on patch version
    assert bump_version('1.2.3', pre_release='b') == '1.2.4b0'
    # Test alpha pre-release bump on minor version
    assert bump_version('1.2.3', position=1, pre_release='a') == '

# Generated at 2024-03-18 05:40:48.754158
```python
    assert bump_version('1.2.2') == '1.2.3'
    assert bump_version('1.2.3', position=1) == '1.3'
    assert bump_version('1.3.4', position=0) == '2.0'
    assert bump_version('1.2.3', pre_release='a') == '1.2.4a0'
    assert bump_version('1.2.4a0', pre_release='a') == '1.2.4a1'
    assert bump_version('1.2.4a1', pre_release='b') == '1.2.4b0'
    assert bump_version('1.2.4a1') == '1.2.4'
    assert bump_version('1.2.4b0') == '1.2.4'
    assert bump_version('2.1.3', position

# Generated at 2024-03-18 05:40:56.574835
```python
    assert bump_version('1.2.2') == '1.2.3'
    assert bump_version('1.2.3', position=1) == '1.3'
    assert bump_version('1.3.4', position=0) == '2.0'
    assert bump_version('1.2.3', pre_release='a') == '1.2.4a0'
    assert bump_version('1.2.4a0', pre_release='a') == '1.2.4a1'
    assert bump_version('1.2.4a1', pre_release='b') == '1.2.4b0'
    assert bump_version('1.2.4a1') == '1.2.4'
    assert bump_version('1.2.4b0') == '1.2.4'
    assert bump_version('2.1.3', position

# Generated at 2024-03-18 05:41:04.042713
```python
    # Test major version bump
    assert bump_version('1.2.3', position=0) == '2.0.0'
    # Test minor version bump
    assert bump_version('1.2.3', position=1) == '1.3.0'
    # Test patch version bump
    assert bump_version('1.2.3') == '1.2.4'
    # Test alpha pre-release bump on patch version
    assert bump_version('1.2.3', pre_release='a') == '1.2.4a0'
    # Test alpha pre-release bump on existing alpha pre-release
    assert bump_version('1.2.4a0', pre_release='a') == '1.2.4a1'
    # Test beta pre-release bump on existing alpha pre-release
    assert bump_version('1.2.4a1', pre_release='b') == '

# Generated at 2024-03-18 05:41:11.953232
```python
    assert bump_version('1.2.2') == '1.2.3'
    assert bump_version('1.2.3', position=1) == '1.3'
    assert bump_version('1.3.4', position=0) == '2.0'
    assert bump_version('1.2.3', pre_release='a') == '1.2.4a0'
    assert bump_version('1.2.4a0', pre_release='a') == '1.2.4a1'
    assert bump_version('1.2.4a1', pre_release='b') == '1.2.4b0'
    assert bump_version('1.2.4a1') == '1.2.4'
    assert bump_version('1.2.4b0') == '1.2.4'
    assert bump_version('2.1.3', position

# Generated at 2024-03-18 05:41:20.763808
```python
    # Test major version bump
    assert bump_version('1.2.3', position=0) == '2.0.0'
    # Test minor version bump
    assert bump_version('1.2.3', position=1) == '1.3.0'
    # Test patch version bump
    assert bump_version('1.2.3', position=2) == '1.2.4'
    # Test alpha pre-release bump
    assert bump_version('1.2.3', pre_release='a') == '1.2.4a0'
    # Test beta pre-release bump
    assert bump_version('1.2.3', pre_release='b') == '1.2.4b0'
    # Test alpha pre-release increment
    assert bump_version('1.2.3a0', pre_release='a') == '1.2.3a1'
    # Test

# Generated at 2024-03-18 05:41:28.300304
```python
    assert bump_version('1.2.2') == '1.2.3'
    assert bump_version('1.2.3', position=1) == '1.3.0'
    assert bump_version('1.3.4', position=0) == '2.0.0'
    assert bump_version('1.2.3', pre_release='a') == '1.2.4a0'
    assert bump_version('1.2.4a0', pre_release='a') == '1.2.4a1'
    assert bump_version('1.2.4a1', pre_release='b') == '1.2.4b0'
    assert bump_version('1.2.4a1') == '1.2.4'
    assert bump_version('1.2.4b0') == '1.2.4'
    assert bump_version('2.1

# Generated at 2024-03-18 05:41:36.702915
```python
    # Test major version bump
    assert bump_version('1.2.3', position=0) == '2.0.0'
    # Test minor version bump
    assert bump_version('1.2.3', position=1) == '1.3.0'
    # Test patch version bump
    assert bump_version('1.2.3', position=2) == '1.2.4'
    # Test alpha pre-release bump on patch version
    assert bump_version('1.2.3', pre_release='a') == '1.2.4a0'
    # Test beta pre-release bump on patch version
    assert bump_version('1.2.3', pre_release='b') == '1.2.4b0'
    # Test alpha pre-release bump on minor version
    assert bump_version('1.2.3', position=1, pre_release='a') == '

# Generated at 2024-03-18 05:41:43.036556
```python
    # Test major version bump
    assert bump_version('1.2.3', position=0) == '2.0.0'
    # Test minor version bump
    assert bump_version('1.2.3', position=1) == '1.3.0'
    # Test patch version bump
    assert bump_version('1.2.3', position=2) == '1.2.4'
    # Test alpha pre-release bump on patch version
    assert bump_version('1.2.3', pre_release='a') == '1.2.4a0'
    # Test beta pre-release bump on patch version
    assert bump_version('1.2.3', pre_release='b') == '1.2.4b0'
    # Test alpha pre-release bump on minor version
    assert bump_version('1.2.3', position=1, pre_release='a') == '

# Generated at 2024-03-18 05:41:51.944952
```python
    assert bump_version('1.2.2') == '1.2.3'
    assert bump_version('1.2.3', position=1) == '1.3'
    assert bump_version('1.3.4', position=0) == '2.0'
    assert bump_version('1.2.3', pre_release='a') == '1.2.4a0'
    assert bump_version('1.2.4a0', pre_release='a') == '1.2.4a1'
    assert bump_version('1.2.4a1', pre_release='b') == '1.2.4b0'
    assert bump_version('1.2.4a1') == '1.2.4'
    assert bump_version('1.2.4b0') == '1.2.4'
    assert bump_version('2.1.3', position