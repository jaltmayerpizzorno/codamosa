# Automatically generated by Pynguin.
import ansible.parsing.dataloader as module_0

def test_case_0():
    try:
        dict_0 = {}
        bytes_0 = b'N\xddL\x1e_\x92\xd4\x91'
        data_loader_0 = module_0.DataLoader()
        var_0 = data_loader_0.load(dict_0, bytes_0)
    except BaseException:
        pass

def test_case_1():
    try:
        data_loader_0 = module_0.DataLoader()
        str_0 = '/fake/path/to/file'
        var_0 = data_loader_0.load_from_file(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = ' Find out current state '
        int_0 = -1412
        data_loader_0 = module_0.DataLoader()
        list_0 = []
        var_0 = data_loader_0.is_directory(list_0)
        var_1 = data_loader_0.load_from_file(str_0, int_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '+'
        data_loader_0 = module_0.DataLoader()
        var_0 = data_loader_0.list_directory(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        data_loader_0 = module_0.DataLoader()
        data_loader_1 = module_0.DataLoader()
        var_0 = data_loader_1.cleanup_tmp_file(data_loader_0)
        str_0 = 'fXw\x0b!&wh3c8W:m'
        var_1 = data_loader_1.get_basedir()
        var_2 = data_loader_0.set_basedir(str_0)
        tuple_0 = ()
        var_3 = data_loader_1.is_executable(tuple_0)
    except BaseException:
        pass

def test_case_5():
    try:
        data_loader_0 = module_0.DataLoader()
        str_0 = "',((:SgQ!599!."
        var_0 = data_loader_0.path_dwim_relative_stack(str_0, str_0, str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = "h}'K"
        bool_0 = True
        data_loader_0 = module_0.DataLoader()
        var_0 = data_loader_0.path_dwim_relative(data_loader_0, str_0, bool_0)
    except BaseException:
        pass

def test_case_7():
    try:
        data_loader_0 = module_0.DataLoader()
        str_0 = 'mi3b'
        var_0 = data_loader_0.path_dwim_relative_stack(data_loader_0, data_loader_0, str_0)
    except BaseException:
        pass

def test_case_8():
    try:
        data_loader_0 = module_0.DataLoader()
        str_0 = '@|9TZVUZ|'
        var_0 = data_loader_0.get_real_file(str_0)
    except BaseException:
        pass

def test_case_9():
    try:
        data_loader_0 = module_0.DataLoader()
        int_0 = -165
        var_0 = data_loader_0.get_real_file(int_0)
    except BaseException:
        pass

def test_case_10():
    try:
        data_loader_0 = module_0.DataLoader()
        bytes_0 = b'\x80M0P\x97\x9fP'
        var_0 = data_loader_0.path_exists(bytes_0)
        str_0 = ''
        tuple_0 = ()
        var_1 = data_loader_0.load_from_file(str_0, tuple_0)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = '_s6*(.%VKM\rd3'
        bool_0 = True
        float_0 = -3044.95
        dict_0 = {str_0: bool_0, bool_0: str_0, bool_0: str_0, bool_0: float_0}
        data_loader_0 = module_0.DataLoader()
        var_0 = data_loader_0.path_dwim_relative(str_0, str_0, dict_0)
        data_loader_1 = module_0.DataLoader()
        var_1 = data_loader_1.set_basedir(str_0)
        bytes_0 = b'W9}Uk\xad\xfa+\xde\xc5\xc1\x06$C\xdf'
        set_0 = {bytes_0, bytes_0}
        data_loader_2 = module_0.DataLoader()
        var_2 = data_loader_2.set_vault_secrets(set_0)
        bytes_1 = None
        var_3 = data_loader_1.set_basedir(bytes_1)
        data_loader_3 = module_0.DataLoader()
        var_4 = data_loader_3.load(data_loader_2)
    except BaseException:
        pass

def test_case_12():
    try:
        data_loader_0 = module_0.DataLoader()
        set_0 = set()
        str_0 = "_'x?]]"
        bool_0 = False
        var_0 = data_loader_0.path_dwim_relative_stack(set_0, str_0, bool_0)
    except BaseException:
        pass

def test_case_13():
    try:
        int_0 = None
        str_0 = '{0} is not a valid option in include_vars'
        data_loader_0 = module_0.DataLoader()
        var_0 = data_loader_0.get_real_file(int_0, str_0)
    except BaseException:
        pass

def test_case_14():
    try:
        data_loader_0 = module_0.DataLoader()
        str_0 = 'No action selected, at least one of --host, --graph or --list needs to be specified.'
        set_0 = set()
        bytes_0 = b'P\x89\xf1\x16\xc6\xaa\xfb\r\x18\x14Ef\x8f\xc5'
        var_0 = data_loader_0.path_dwim_relative_stack(str_0, set_0, str_0, bytes_0)
    except BaseException:
        pass

def test_case_15():
    try:
        data_loader_0 = module_0.DataLoader()
        var_0 = data_loader_0.get_basedir()
        str_0 = '~:Ej"vIszu7jT0.(='
        var_1 = data_loader_0.get_real_file(str_0)
    except BaseException:
        pass

def test_case_16():
    try:
        data_loader_0 = module_0.DataLoader()
        bytes_0 = b'\x93\x80\xaa`\x8a\xd9b'
        tuple_0 = ()
        list_0 = None
        var_0 = data_loader_0.path_dwim_relative_stack(bytes_0, tuple_0, list_0)
    except BaseException:
        pass

def test_case_17():
    try:
        data_loader_0 = module_0.DataLoader()
        str_0 = '\x0by'
        str_1 = '/kOsE.]Q'
        var_0 = data_loader_0.cleanup_tmp_file(str_0)
        data_loader_1 = module_0.DataLoader()
        var_1 = data_loader_1.get_basedir()
        set_0 = {data_loader_0, str_0}
        var_2 = data_loader_0.path_dwim_relative(str_0, str_1, str_1, set_0)
        bytes_0 = b'\xb1;\xb0\xb8'
        float_0 = 2159.0
        str_2 = 's390x'
        str_3 = "',((:SgQ!599!."
        var_3 = data_loader_1.cleanup_all_tmp_files()
        var_4 = data_loader_0.path_dwim_relative_stack(str_2, float_0, str_3, bytes_0)
    except BaseException:
        pass

def test_case_18():
    try:
        data_loader_0 = module_0.DataLoader()
        dict_0 = {data_loader_0: data_loader_0, data_loader_0: data_loader_0}
        data_loader_1 = module_0.DataLoader()
        list_0 = [dict_0, data_loader_1]
        str_0 = '8'
        float_0 = None
        bytes_0 = b'-\xb4'
        tuple_0 = (list_0, str_0, float_0, bytes_0)
        data_loader_2 = module_0.DataLoader()
        var_0 = data_loader_2.is_file(tuple_0)
        bytes_1 = b'~\x07\x81\xce\xfb\xfa\x93\r\xfb\xads\xdf\x19\xaf'
        var_1 = data_loader_1.path_dwim_relative(dict_0, list_0, bytes_1)
    except BaseException:
        pass

def test_case_19():
    try:
        data_loader_0 = module_0.DataLoader()
        str_0 = ''
        var_0 = data_loader_0.load_from_file(str_0)
    except BaseException:
        pass

def test_case_20():
    try:
        data_loader_0 = module_0.DataLoader()
        str_0 = '/'
        var_0 = data_loader_0.get_real_file(str_0)
    except BaseException:
        pass

def test_case_21():
    try:
        bytes_0 = b'\x0f\xbbv\x92\xdc1Ynt\x9f\xb8~\xa2\xfb^wJ\xa0\xe7'
        set_0 = {bytes_0}
        str_0 = 'D`vP'
        tuple_0 = ()
        tuple_1 = (tuple_0,)
        tuple_2 = (tuple_1,)
        data_loader_0 = module_0.DataLoader()
        var_0 = data_loader_0.find_vars_files(str_0, str_0, tuple_2)
        list_0 = []
        var_1 = data_loader_0.load(set_0, list_0)
    except BaseException:
        pass

def test_case_22():
    try:
        data_loader_0 = module_0.DataLoader()
        str_0 = '\x0by'
        str_1 = '-/kOsE."]Q'
        str_2 = ''
        set_0 = {data_loader_0, str_2}
        var_0 = data_loader_0.path_dwim_relative(str_0, str_1, str_2, set_0)
        float_0 = None
        var_1 = data_loader_0.get_real_file(float_0)
    except BaseException:
        pass

def test_case_23():
    try:
        data_loader_0 = module_0.DataLoader()
        str_0 = '>dGG__#jc|6]\nho/'
        str_1 = '6^!`34s%\\|{2zRBCb'
        set_0 = {data_loader_0, str_1}
        var_0 = data_loader_0.path_dwim_relative(str_0, str_1, str_1, set_0)
        float_0 = None
        bool_0 = True
        tuple_0 = ()
        var_1 = data_loader_0.path_dwim_relative_stack(float_0, bool_0, tuple_0)
    except BaseException:
        pass

def test_case_24():
    try:
        data_loader_0 = module_0.DataLoader()
        str_0 = '/usr/local/share/certs'
        var_0 = data_loader_0.path_dwim_relative_stack(str_0, str_0, str_0)
    except BaseException:
        pass

def test_case_25():
    try:
        dict_0 = {}
        data_loader_0 = module_0.DataLoader()
        var_0 = data_loader_0.is_file(dict_0)
        var_1 = data_loader_0.get_basedir()
        data_loader_1 = module_0.DataLoader()
        str_0 = '@|9w&TZV:Z|'
        str_1 = '>qYt\x0c0]hXoDlAzyaz6'
        str_2 = '\tW&P7j"|Sx^]fl:d\x0b'
        var_2 = data_loader_1.path_dwim_relative(str_0, str_1, str_2)
        set_0 = {data_loader_1, str_0}
        list_0 = [data_loader_1, set_0, set_0]
        bytes_0 = b'\x80M0P\x97\x9fP'
        var_3 = data_loader_1.path_exists(bytes_0)
        str_3 = '~?4mS@!7'
        var_4 = data_loader_1.cleanup_all_tmp_files()
        var_5 = data_loader_1.path_dwim_relative_stack(str_0, list_0, str_3)
    except BaseException:
        pass