# Automatically generated by Pynguin.
import sanic.mixins.routes as module_0

def test_case_0():
    try:
        str_0 = 'Loop can only be retrieved after the app has started running. Not supported with `create_server` function'
        route_mixin_0 = module_0.RouteMixin()
        var_0 = route_mixin_0.static(str_0, str_0, route_mixin_0, route_mixin_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bool_0 = False
        str_0 = "7U3'Rs"
        route_mixin_0 = module_0.RouteMixin()
        var_0 = route_mixin_0.add_route(bool_0, str_0, bool_0, str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bool_0 = False
        list_0 = [bool_0, bool_0]
        route_mixin_0 = module_0.RouteMixin(*list_0)
        str_0 = 'sP2*\x0c4HhAsv"Vj'
        var_0 = route_mixin_0.add_websocket_route(str_0, str_0, str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = ':'
        bool_0 = False
        str_1 = 'vg7A'
        str_2 = 't.u=r\\MFIn~n'
        float_0 = 0.1
        tuple_0 = (bool_0, str_2, float_0)
        route_mixin_0 = module_0.RouteMixin()
        var_0 = route_mixin_0.add_route(tuple_0, str_1, str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        route_mixin_0 = module_0.RouteMixin()
        list_0 = [route_mixin_0]
        route_mixin_1 = module_0.RouteMixin(*list_0)
        str_0 = 'xO+L05*I 82$T'
        var_0 = route_mixin_1.add_websocket_route(str_0, str_0, route_mixin_1)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = '\\vcB:1QvL8T'
        route_mixin_0 = module_0.RouteMixin()
        str_1 = '^\rd@kBwgi:CMV\rbjtLQ'
        int_0 = 639
        var_0 = route_mixin_0.options(str_1, int_0, str_0)
        var_1 = route_mixin_0.get(str_0)
        route_mixin_1 = module_0.RouteMixin()
        var_2 = route_mixin_1.add_route(route_mixin_0, str_0, str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = '*)$8a-C>,=o3'
        route_mixin_0 = module_0.RouteMixin()
        str_1 = ''
        bool_0 = True
        bool_1 = False
        int_0 = 2009
        var_0 = route_mixin_0.put(str_1, bool_0, bool_1, int_0, str_0)
        dict_0 = {}
        str_2 = '_repr_html_'
        var_1 = route_mixin_0.add_route(dict_0, str_2, str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        route_mixin_0 = module_0.RouteMixin()
        int_0 = -265
        str_0 = 'pq{e'
        var_0 = route_mixin_0.add_websocket_route(int_0, str_0, str_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = None
        set_0 = {str_0, str_0, str_0}
        tuple_0 = (str_0, set_0)
        dict_0 = None
        bool_0 = True
        float_0 = -2911.91
        route_mixin_0 = module_0.RouteMixin()
        var_0 = route_mixin_0.static(tuple_0, str_0, dict_0, bool_0, float_0)
    except BaseException:
        pass

def test_case_9():
    try:
        int_0 = 167
        str_0 = 'run_async'
        route_mixin_0 = module_0.RouteMixin()
        var_0 = route_mixin_0.add_route(int_0, str_0, str_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = ';a1GG`0\\no>>.!\rf'
        bool_0 = True
        optional_0 = None
        list_0 = []
        route_mixin_0 = module_0.RouteMixin(*list_0)
        var_0 = route_mixin_0.add_route(str_0, str_0, bool_0, optional_0)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = 'JAKL-tpYyR{s'
        route_mixin_0 = module_0.RouteMixin()
        var_0 = route_mixin_0.get(str_0)
        str_1 = '2c;;~3O vVn'
        var_1 = route_mixin_0.websocket(str_1)
        bool_0 = False
        route_mixin_1 = module_0.RouteMixin()
        str_2 = 'request_max_size'
        var_2 = route_mixin_0.add_route(str_2, str_2, bool_0)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = '$+j/M|%Wl/`\r\\eP\nyeeP'
        bool_0 = True
        dict_0 = {}
        int_0 = 508
        str_1 = "n4:g'96]HK@d)K,B"
        list_0 = [bool_0]
        tuple_0 = (int_0, str_1, list_0)
        route_mixin_0 = module_0.RouteMixin()
        var_0 = route_mixin_0.patch(str_0, str_0, tuple_0, int_0)
        bool_1 = False
        route_mixin_1 = module_0.RouteMixin()
        var_1 = route_mixin_1.post(str_0, str_0, bool_1, str_0)
        float_0 = -1800.42
        route_mixin_2 = module_0.RouteMixin()
        var_2 = route_mixin_2.add_route(dict_0, str_0, float_0, str_0, bool_0)
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = '?9jqU|P:FlfhR'
        str_1 = ''
        bool_0 = False
        bool_1 = False
        str_2 = ''
        str_3 = '{/8'
        dict_0 = {str_0: str_0, str_2: str_2, str_3: str_3}
        route_mixin_0 = module_0.RouteMixin(**dict_0)
        var_0 = route_mixin_0.head(str_1, bool_0, bool_1)
        route_mixin_1 = module_0.RouteMixin()
        bool_2 = False
        bool_3 = True
        var_1 = route_mixin_1.options(str_0, bool_2, str_0, bool_3)
        var_2 = route_mixin_1.delete(str_0, str_0, str_0)
        str_4 = 'Create a new process and a subprocess in it with the same arguments as\n    this one.\n    '
        str_5 = '.Cbp]nW!(Izp'
        list_0 = [str_2, str_4, dict_0]
        bool_4 = False
        route_mixin_2 = module_0.RouteMixin()
        var_3 = route_mixin_2.add_route(str_5, str_5, list_0, bool_4)
    except BaseException:
        pass