# Automatically generated by Pynguin.
import ansible.config.manager as module_0

def test_case_0():
    pass

def test_case_1():
    config_manager_0 = module_0.ConfigManager()
    var_0 = config_manager_0.update_config_data()

def test_case_2():
    config_manager_0 = module_0.ConfigManager()
    str_0 = None
    str_1 = ''
    dict_0 = {str_0: config_manager_0, str_1: config_manager_0}
    bytes_0 = b'\x900\xd3'
    var_0 = module_0.get_ini_config_value(dict_0, bytes_0)
    config_manager_1 = module_0.ConfigManager()
    int_0 = 44
    config_manager_2 = module_0.ConfigManager()
    var_1 = config_manager_2.get_plugin_options(config_manager_1, bytes_0, int_0)
    str_2 = 'n/n'
    var_2 = config_manager_1.get_plugin_options(int_0, str_2)

def test_case_3():
    var_0 = module_0.find_ini_config_file()

def test_case_4():
    str_0 = '/i/XIMTd2?nz4\tZx'
    str_1 = '(u'
    var_0 = module_0.get_ini_config_value(str_0, str_1)
    config_manager_0 = module_0.ConfigManager()
    int_0 = 1375
    var_1 = config_manager_0.get_configuration_definition(int_0)
    float_0 = 1097.841
    str_2 = 'r\x0cZd}K\x0c#%y6e\x0c^'
    var_2 = module_0.resolve_path(str_2)
    var_3 = module_0.find_ini_config_file(float_0)

def test_case_5():
    config_manager_0 = module_0.ConfigManager()
    str_0 = None
    str_1 = ''
    plugin_0 = None
    bytes_0 = b'm\x98\xb5V\xbey\xfac;~\xce\xe6u\xc8'
    var_0 = config_manager_0.get_plugin_options(plugin_0, bytes_0)
    dict_0 = {str_0: config_manager_0, str_1: config_manager_0}
    bytes_1 = b'\x900\xd3'
    var_1 = module_0.get_ini_config_value(dict_0, bytes_1)
    config_manager_1 = module_0.ConfigManager()
    int_0 = 44
    config_manager_2 = module_0.ConfigManager()
    var_2 = config_manager_2.get_plugin_options(config_manager_1, bytes_1, int_0)
    str_2 = 'n/n'
    var_3 = config_manager_1.get_plugin_options(int_0, str_2)

def test_case_6():
    str_0 = 'yes'
    str_1 = 'boolean'
    var_0 = module_0.ensure_type(str_0, str_1)
    str_2 = 'no'
    str_3 = 'bool'
    var_1 = module_0.ensure_type(str_2, str_3)
    str_4 = '42'
    str_5 = 'integer'
    var_2 = module_0.ensure_type(str_4, str_5)
    str_6 = '3.14'
    str_7 = 'float'
    var_3 = module_0.ensure_type(str_6, str_7)
    float_0 = 3.14
    var_4 = module_0.ensure_type(float_0, str_7)
    str_8 = 'a,b,c'
    str_9 = 'list'
    var_5 = module_0.ensure_type(str_8, str_9)
    str_10 = 'a'
    str_11 = 'b'
    str_12 = 'LR'
    str_13 = [str_10, str_11, str_12]
    var_6 = module_0.ensure_type(str_13, str_9)
    str_14 = 'None'
    str_15 = 'none'
    var_7 = module_0.ensure_type(str_14, str_15)