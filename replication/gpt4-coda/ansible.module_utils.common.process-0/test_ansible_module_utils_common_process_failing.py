# Automatically generated by Pynguin.
import ansible.module_utils.common.process as module_0

def test_case_0():
    try:
        str_0 = '='
        var_0 = module_0.get_bin_path(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '6vpBa!])jBKm\tf%'
        var_0 = module_0.get_bin_path(str_0, str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'ls'
        var_0 = module_0.get_bin_path(str_0)
        set_0 = {str_0}
        bytes_0 = b'\x00\xe2\x14\xc9\x96J1'
        var_1 = module_0.get_bin_path(set_0, bytes_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '\n    Uses contextmanager to create and release a file lock based on the\n    given path. This allows us to create locks using `with file_lock()`\n    to prevent deadlocks related to failure to unlock properly.\n    '
        var_0 = module_0.get_bin_path(str_0, str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        dict_0 = {}
        var_0 = module_0.get_bin_path(dict_0, dict_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'ls'
        var_0 = module_0.get_bin_path(str_0)
        dict_0 = {str_0: var_0, var_0: str_0, var_0: var_0, var_0: str_0}
        str_1 = None
        float_0 = 512.0
        bytes_0 = b'\xa6f\xfez\xa2LN?4Y\xcc\xe17\xe9\xc3,\xaa\x8a\xe2\xd5'
        tuple_0 = (str_1, bytes_0)
        tuple_1 = (float_0, bytes_0, tuple_0, float_0)
        dict_1 = {str_1: dict_0, str_0: var_0, str_0: tuple_1}
        bool_0 = True
        var_1 = module_0.get_bin_path(dict_0, dict_1, bool_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = ''
        var_0 = module_0.get_bin_path(str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'mv'
        str_1 = 'nonexistent_executable'
        str_2 = '/proc/cmdline'
        dict_0 = {str_1: str_2, str_1: str_2, str_0: str_0}
        float_0 = 5271.22902
        var_0 = module_0.get_bin_path(str_2, dict_0, float_0)
    except BaseException:
        pass