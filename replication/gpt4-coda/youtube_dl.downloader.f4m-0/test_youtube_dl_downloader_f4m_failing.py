# Automatically generated by Pynguin.
import youtube_dl.downloader.f4m as module_0

def test_case_0():
    try:
        flv_reader_0 = module_0.FlvReader()
        var_0 = flv_reader_0.read_bootstrap_info()
    except BaseException:
        pass

def test_case_1():
    try:
        flv_reader_0 = module_0.FlvReader()
        var_0 = flv_reader_0.read_unsigned_long_long()
    except BaseException:
        pass

def test_case_2():
    try:
        flv_reader_0 = module_0.FlvReader()
        var_0 = flv_reader_0.read_afrt()
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'[\xba\x88@\xedJ\xdf'
        list_0 = [bytes_0]
        flv_reader_0 = module_0.FlvReader(*list_0)
        var_0 = flv_reader_0.read_asrt()
    except BaseException:
        pass

def test_case_4():
    try:
        flv_reader_0 = module_0.FlvReader()
        var_0 = flv_reader_0.read_abst()
    except BaseException:
        pass

def test_case_5():
    try:
        bytes_0 = b't&\x04\xac\xe9\x93\x1e!\xd6\xb0\xcc\xda\x92\xd2\xac'
        var_0 = module_0.read_bootstrap_info(bytes_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'dVgL]5J'
        var_0 = module_0.build_fragments_list(str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = ')lxgGgXw'
        set_0 = {str_0}
        var_0 = module_0.write_unsigned_int(str_0, set_0)
    except BaseException:
        pass

def test_case_8():
    try:
        flv_reader_0 = module_0.FlvReader()
        str_0 = 'Yuj%0}9mn(k'
        var_0 = module_0.write_metadata_tag(flv_reader_0, str_0)
    except BaseException:
        pass

def test_case_9():
    try:
        list_0 = []
        flv_reader_0 = module_0.FlvReader(*list_0)
        var_0 = module_0.write_flv_header(flv_reader_0)
        var_1 = flv_reader_0.read_asrt()
    except BaseException:
        pass

def test_case_10():
    try:
        float_0 = 928.174
        dict_0 = {float_0: float_0}
        var_0 = module_0.get_base_url(dict_0)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = '4!\t-A+)}'
        bytes_0 = b''
        data_truncated_error_0 = module_0.DataTruncatedError()
        str_1 = 'rA47Wf*QF='
        f4m_f_d_0 = module_0.F4mFD(data_truncated_error_0, str_1)
        var_0 = f4m_f_d_0.real_download(str_0, bytes_0)
    except BaseException:
        pass

def test_case_12():
    try:
        bytes_0 = b'-\xc1q\xe2\xb0H\xe6\xc5\x06a\x87\xb6\xe6\x18\x99s\xb2"'
        dict_0 = {bytes_0: bytes_0}
        set_0 = None
        var_0 = module_0.write_metadata_tag(dict_0, set_0)
        list_0 = []
        var_1 = module_0.remove_encrypted_media(list_0)
        var_2 = module_0.read_bootstrap_info(bytes_0)
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = 'segments'
        str_1 = 'fragments'
        bool_0 = False
        str_2 = 'segment_run'
        int_0 = 1
        int_1 = 3
        int_2 = (int_0, int_1)
        int_3 = [int_2]
        int_4 = {str_2: int_3}
        int_5 = [int_4]
        str_3 = 'first'
        str_4 = 'discontinuity_indicator'
        var_0 = None
        var_1 = {str_3: int_0, str_2: int_1, str_2: int_1, str_4: var_0}
        var_2 = {str_3: int_1, str_2: int_1, str_1: int_3, str_4: var_0}
        var_3 = [var_1, var_1, var_2]
        var_4 = {str_1: var_3}
        var_5 = [var_4]
        var_6 = {str_4: bool_0, str_0: int_5, str_1: var_5}
        var_7 = module_0.build_fragments_list(var_6)
    except BaseException:
        pass