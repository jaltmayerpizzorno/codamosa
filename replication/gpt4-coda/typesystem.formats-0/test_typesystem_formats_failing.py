# Automatically generated by Pynguin.
import typesystem.formats as module_0

def test_case_0():
    try:
        time_format_0 = module_0.TimeFormat()
        str_0 = '{<'
        time_0 = time_format_0.validate(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '<TN#( E{#W'
        base_format_0 = module_0.BaseFormat()
        optional_0 = base_format_0.serialize(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '2021-03-14T13:59:30+01:00'
        date_time_format_0 = module_0.DateTimeFormat()
        date_format_0 = module_0.DateFormat()
        bool_0 = date_format_0.is_native_type(date_time_format_0)
        datetime_0 = date_time_format_0.validate(str_0)
        date_format_1 = module_0.DateFormat()
        str_1 = ''
        time_format_0 = module_0.TimeFormat()
        optional_0 = time_format_0.serialize(str_1)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '>_Bj;'
        date_format_0 = module_0.DateFormat()
        date_0 = date_format_0.validate(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        date_format_0 = module_0.DateFormat()
        optional_0 = date_format_0.serialize(date_format_0)
    except BaseException:
        pass

def test_case_5():
    try:
        time_format_0 = module_0.TimeFormat()
        optional_0 = time_format_0.serialize(time_format_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = '2021-03-14T13:59:30+01:00'
        date_time_format_0 = module_0.DateTimeFormat()
        datetime_0 = date_time_format_0.validate(str_0)
        time_format_0 = module_0.TimeFormat()
        bool_0 = None
        optional_0 = time_format_0.serialize(bool_0)
        time_0 = time_format_0.validate(str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        base_format_0 = module_0.BaseFormat()
        date_time_format_0 = module_0.DateTimeFormat()
        bool_0 = date_time_format_0.is_native_type(base_format_0)
        time_format_0 = module_0.TimeFormat()
        str_0 = '{<'
        time_0 = time_format_0.validate(str_0)
    except BaseException:
        pass

def test_case_8():
    try:
        date_time_format_0 = module_0.DateTimeFormat()
        str_0 = '{<'
        datetime_0 = date_time_format_0.validate(str_0)
    except BaseException:
        pass

def test_case_9():
    try:
        date_time_format_0 = module_0.DateTimeFormat()
        optional_0 = date_time_format_0.serialize(date_time_format_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = 'T'
        u_u_i_d_format_0 = module_0.UUIDFormat()
        u_u_i_d_0 = u_u_i_d_format_0.validate(str_0)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = ".*.J8U#nS&\x0c'N F"
        dict_0 = {}
        u_u_i_d_format_0 = module_0.UUIDFormat()
        str_1 = u_u_i_d_format_0.serialize(str_0)
        date_format_0 = module_0.DateFormat(**dict_0)
        date_0 = date_format_0.validate(str_0)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = 'T'
        u_u_i_d_format_0 = module_0.UUIDFormat()
        bool_0 = u_u_i_d_format_0.is_native_type(str_0)
        u_u_i_d_0 = u_u_i_d_format_0.validate(str_0)
    except BaseException:
        pass

def test_case_13():
    try:
        dict_0 = {}
        float_0 = None
        base_format_0 = module_0.BaseFormat(**dict_0)
        var_0 = base_format_0.validate(float_0)
    except BaseException:
        pass

def test_case_14():
    try:
        str_0 = ',wEP"[p7<uoW\\TM'
        time_format_0 = module_0.TimeFormat()
        bool_0 = time_format_0.is_native_type(str_0)
        time_0 = time_format_0.validate(str_0)
    except BaseException:
        pass

def test_case_15():
    try:
        base_format_0 = module_0.BaseFormat()
        str_0 = None
        bool_0 = base_format_0.is_native_type(str_0)
    except BaseException:
        pass

def test_case_16():
    try:
        str_0 = '2021-03-14T13:59:30+01:00'
        date_time_format_0 = module_0.DateTimeFormat()
        datetime_0 = date_time_format_0.validate(str_0)
        time_format_0 = module_0.TimeFormat()
        bool_0 = None
        optional_0 = time_format_0.serialize(bool_0)
        date_format_0 = module_0.DateFormat()
        optional_1 = date_format_0.serialize(optional_0)
        time_0 = time_format_0.validate(str_0)
    except BaseException:
        pass

def test_case_17():
    try:
        str_0 = '2021-03-14T13:59:30+01:00'
        date_time_format_0 = module_0.DateTimeFormat()
        datetime_0 = date_time_format_0.validate(str_0)
        int_0 = 3
        time_format_0 = module_0.TimeFormat()
        bool_0 = None
        optional_0 = date_time_format_0.serialize(bool_0)
        date_format_0 = module_0.DateFormat()
        optional_1 = time_format_0.serialize(int_0)
    except BaseException:
        pass

def test_case_18():
    try:
        date_time_format_0 = module_0.DateTimeFormat()
        str_0 = '2023-03-20T15:30:45Z'
        datetime_0 = date_time_format_0.validate(str_0)
        list_0 = [datetime_0]
        date_time_format_1 = module_0.DateTimeFormat(*list_0)
    except BaseException:
        pass

def test_case_19():
    try:
        date_time_format_0 = module_0.DateTimeFormat()
        str_0 = '2023-03-20T15:30:45Z'
        datetime_0 = date_time_format_0.validate(str_0)
        optional_0 = date_time_format_0.serialize(datetime_0)
        int_0 = 32
        datetime_1 = date_time_format_0.validate(int_0)
    except BaseException:
        pass

def test_case_20():
    try:
        str_0 = '2021-03-14T13:59:30+01:00'
        date_time_format_0 = module_0.DateTimeFormat()
        datetime_0 = date_time_format_0.validate(str_0)
        optional_0 = date_time_format_0.serialize(datetime_0)
        dict_0 = {}
        time_format_0 = module_0.TimeFormat(**dict_0)
        time_0 = time_format_0.validate(str_0)
    except BaseException:
        pass

def test_case_21():
    try:
        str_0 = '2021-03-14T13:59:30+01:00'
        date_time_format_0 = module_0.DateTimeFormat()
        datetime_0 = date_time_format_0.validate(str_0)
        date_format_0 = module_0.DateFormat()
        optional_0 = date_format_0.serialize(datetime_0)
        time_format_0 = module_0.TimeFormat()
        time_0 = time_format_0.validate(str_0)
    except BaseException:
        pass

def test_case_22():
    try:
        str_0 = '2021-0-14T13:59:30+01:00'
        date_time_format_0 = module_0.DateTimeFormat()
        datetime_0 = date_time_format_0.validate(str_0)
    except BaseException:
        pass

def test_case_23():
    try:
        date_time_format_0 = module_0.DateTimeFormat()
        str_0 = '2023-03-20T15:30:45'
        datetime_0 = date_time_format_0.validate(str_0)
        list_0 = [datetime_0]
        date_time_format_1 = module_0.DateTimeFormat(*list_0)
    except BaseException:
        pass