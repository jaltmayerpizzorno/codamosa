# Automatically generated by Pynguin.
import ansible.parsing.yaml.constructor as module_0
import yaml.nodes as module_1

def test_case_0():
    try:
        ansible_constructor_0 = module_0.AnsibleConstructor()
        list_0 = []
        var_0 = ansible_constructor_0.construct_mapping(list_0)
    except BaseException:
        pass

def test_case_1():
    try:
        dict_0 = {}
        ansible_constructor_0 = module_0.AnsibleConstructor()
        var_0 = ansible_constructor_0.construct_yaml_str(dict_0)
    except BaseException:
        pass

def test_case_2():
    try:
        ansible_constructor_0 = module_0.AnsibleConstructor()
        bytes_0 = b'"\x98\xb4'
        float_0 = -2889.3513
        var_0 = ansible_constructor_0.construct_yaml_map(float_0)
        var_1 = ansible_constructor_0.construct_vault_encrypted_unicode(bytes_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bool_0 = True
        ansible_constructor_0 = module_0.AnsibleConstructor()
        var_0 = ansible_constructor_0.construct_yaml_unsafe(bool_0)
    except BaseException:
        pass

def test_case_4():
    try:
        set_0 = set()
        ansible_constructor_0 = module_0.AnsibleConstructor(set_0)
        ansible_constructor_1 = module_0.AnsibleConstructor(ansible_constructor_0)
        float_0 = 3937.295757
        str_0 = "ic3,&'HbR7!rQw;"
        ansible_constructor_2 = module_0.AnsibleConstructor(str_0, ansible_constructor_1)
        var_0 = ansible_constructor_2.construct_yaml_seq(float_0)
        int_0 = 2000
        list_0 = [int_0]
        var_1 = ansible_constructor_2.construct_mapping(list_0)
    except BaseException:
        pass

def test_case_5():
    try:
        bool_0 = False
        ansible_constructor_0 = module_0.AnsibleConstructor()
        ansible_constructor_1 = module_0.AnsibleConstructor(bool_0)
        str_0 = 'CENSORED: content is a no_log parameter'
        mapping_node_0 = module_1.MappingNode(bool_0, str_0, ansible_constructor_1)
        var_0 = ansible_constructor_1.construct_mapping(mapping_node_0)
    except BaseException:
        pass

def test_case_6():
    try:
        ansible_constructor_0 = module_0.AnsibleConstructor()
        str_0 = ''
        int_0 = -749
        tuple_0 = (int_0,)
        mapping_node_0 = module_1.MappingNode(str_0, str_0, tuple_0)
        var_0 = ansible_constructor_0.construct_yaml_map(mapping_node_0)
        var_1 = ansible_constructor_0.construct_yaml_unsafe(mapping_node_0)
    except BaseException:
        pass

def test_case_7():
    try:
        bool_0 = False
        list_0 = [bool_0]
        ansible_constructor_0 = module_0.AnsibleConstructor(list_0)
        ansible_constructor_1 = module_0.AnsibleConstructor()
        var_0 = ansible_constructor_1.construct_yaml_map(ansible_constructor_0)
        str_0 = ''
        float_0 = -3337.552779
        ansible_constructor_2 = module_0.AnsibleConstructor(float_0)
        list_1 = None
        set_0 = {list_1, float_0, var_0}
        mapping_node_0 = module_1.MappingNode(set_0, set_0, str_0)
        var_1 = ansible_constructor_1.construct_yaml_str(mapping_node_0)
    except BaseException:
        pass