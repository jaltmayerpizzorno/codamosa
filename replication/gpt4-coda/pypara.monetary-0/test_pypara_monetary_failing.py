# Automatically generated by Pynguin.
import pypara.monetary as module_0
import pypara.currencies as module_1
import decimal as module_2

def test_case_0():
    try:
        none_money_0 = None
        none_money_1 = module_0.NoneMoney()
        money_0 = none_money_1.round()
        bool_0 = money_0.is_equal(none_money_0)
        bool_1 = money_0.__eq__(none_money_0)
        bool_2 = money_0.__le__(money_0)
        currency_type_0 = module_1.CurrencyType.MONEY
        list_0 = [bool_0, none_money_1, bool_0, currency_type_0]
        str_0 = 'U ?:+2'
        dict_0 = {str_0: list_0, str_0: money_0}
        some_money_0 = module_0.SomeMoney(*list_0, **dict_0)
    except BaseException:
        pass

def test_case_1():
    try:
        none_money_0 = module_0.NoneMoney()
        float_0 = none_money_0.as_float()
    except BaseException:
        pass

def test_case_2():
    try:
        money_0 = None
        none_money_0 = module_0.NoneMoney()
        int_0 = 3
        money_1 = none_money_0.round(int_0)
        bool_0 = none_money_0.lt(money_0)
    except BaseException:
        pass

def test_case_3():
    try:
        none_price_0 = module_0.NonePrice()
        money_0 = module_0.Money()
        money_1 = money_0.__abs__()
        price_0 = none_price_0.positive()
        int_0 = price_0.as_integer()
    except BaseException:
        pass

def test_case_4():
    try:
        none_price_0 = module_0.NonePrice()
        decimal_0 = module_2.Decimal()
        float_0 = -1884.952
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        some_price_0 = module_0.SomePrice(*list_0)
        var_0 = None
        float_1 = some_money_0.as_float()
        price_0 = none_price_0.multiply(var_0)
        currency_0 = None
        price_1 = some_price_0.convert(currency_0)
    except BaseException:
        pass

def test_case_5():
    try:
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.abs()
        decimal_0 = module_2.Decimal()
        float_0 = -1884.952
        list_0 = [float_0, float_0, float_0]
        dict_0 = {}
        some_price_0 = module_0.SomePrice(*list_0)
        bool_0 = some_price_0.gt(price_0)
        price_1 = price_0.with_qty(decimal_0)
        var_0 = None
        price_2 = price_0.__pos__()
        bool_1 = none_price_0.gte(price_1)
        price_3 = price_1.scalar_add(var_0)
        money_0 = none_price_0.times(var_0)
        some_price_1 = module_0.SomePrice(*list_0, **dict_0)
        price_4 = some_price_1.subtract(price_3)
        bool_2 = price_4.__lt__(price_4)
        currency_0 = None
        price_5 = some_price_1.convert(currency_0)
    except BaseException:
        pass

def test_case_6():
    try:
        currency_type_0 = module_1.CurrencyType.METAL
        list_0 = [currency_type_0]
        none_money_0 = module_0.NoneMoney()
        bool_0 = none_money_0.as_boolean()
        decimal_0 = module_2.Decimal(*list_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = "oe'T8\rC*Y%`]\x0clTVlz;"
        str_1 = 'l9^\rU)lTXC8i$,w5<p'
        int_0 = -1281
        currency_type_0 = module_1.CurrencyType.ALTERNATIVE
        decimal_0 = module_2.Decimal()
        currency_0 = module_1.Currency(str_0, str_1, int_0, currency_type_0, decimal_0, int_0)
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.with_ccy(currency_0)
        none_money_1 = module_0.NoneMoney()
        bool_0 = True
        none_money_2 = module_0.NoneMoney()
        money_1 = none_money_2.convert(currency_0, bool_0)
        some_price_0 = module_0.SomePrice()
    except BaseException:
        pass

def test_case_8():
    try:
        none_money_0 = module_0.NoneMoney()
        int_0 = 3
        money_0 = none_money_0.round(int_0)
        bool_0 = True
        money_1 = none_money_0.scalar_add(bool_0)
        list_0 = [none_money_0, none_money_0, none_money_0]
        str_0 = None
        dict_0 = {str_0: money_0, str_0: none_money_0, str_0: int_0}
        none_money_1 = module_0.NoneMoney(*list_0, **dict_0)
    except BaseException:
        pass

def test_case_9():
    try:
        money_0 = None
        none_money_0 = module_0.NoneMoney()
        money_1 = none_money_0.negative()
        bool_0 = none_money_0.lt(money_0)
    except BaseException:
        pass

def test_case_10():
    try:
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.positive()
        price_0 = module_0.Price()
        var_0 = price_0.__round__()
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = '\'G@\'H\x0cKy>Z"C_S+9+fN'
        none_price_0 = module_0.NonePrice()
        str_1 = "ER9_v\n}[\n+6;M;O=t\n'T"
        int_0 = 0
        currency_type_0 = module_1.CurrencyType.METAL
        decimal_0 = module_2.Decimal()
        int_1 = -825
        currency_0 = module_1.Currency(str_0, str_1, int_0, currency_type_0, decimal_0, int_1)
        float_0 = none_price_0.as_float()
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = 'Quantity'
        var_0 = None
        str_1 = 'd%F5!J_tc\x0b9NDz2'
        int_0 = 1730
        currency_type_0 = module_1.CurrencyType.CRYPTO
        decimal_0 = module_2.Decimal()
        int_1 = 3569
        currency_0 = module_1.Currency(str_1, str_1, int_0, currency_type_0, decimal_0, int_1)
        incompatible_currency_error_0 = module_0.IncompatibleCurrencyError(currency_0, currency_0)
        set_0 = None
        dict_0 = {str_0: set_0, set_0: set_0}
        list_0 = []
        none_price_0 = module_0.NonePrice(*list_0)
        price_0 = none_price_0.scalar_subtract(dict_0)
        price_1 = price_0.multiply(incompatible_currency_error_0)
        price_2 = price_1.__truediv__(var_0)
        dict_1 = {str_0: str_0}
        none_money_0 = module_0.NoneMoney(**dict_1)
    except BaseException:
        pass

def test_case_13():
    try:
        list_0 = []
        currency_type_0 = module_1.CurrencyType.ALTERNATIVE
        decimal_0 = module_2.Decimal()
        none_money_0 = module_0.NoneMoney()
        none_money_1 = module_0.NoneMoney()
        none_money_2 = module_0.NoneMoney()
        list_1 = [none_money_1, list_0, currency_type_0]
        some_money_0 = module_0.SomeMoney(*list_1)
        money_0 = some_money_0.negative()
    except BaseException:
        pass

def test_case_14():
    try:
        list_0 = []
        str_0 = "oe'T8\rC*Y%`]\x0clTVlz;"
        str_1 = 'l9^\rU)lTXC8i$,w5<p'
        int_0 = -1281
        list_1 = [str_0, str_1, list_0]
        some_price_0 = module_0.SomePrice(*list_1)
        money_0 = some_price_0.times(int_0)
    except BaseException:
        pass

def test_case_15():
    try:
        float_0 = -1884.952
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.negative()
        dict_0 = {}
        none_money_0 = module_0.NoneMoney(**dict_0)
        money_1 = some_money_0.abs()
        money_2 = money_1.__add__(money_1)
        money_3 = money_1.positive()
        price_0 = module_0.Price()
        var_0 = price_0.__round__()
    except BaseException:
        pass

def test_case_16():
    try:
        bytes_0 = b'\xd8\x9b'
        none_price_0 = module_0.NonePrice()
        str_0 = 'P`V(mH<[5o8['
        int_0 = 3606
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        price_0 = none_price_0.with_qty(decimal_0)
        price_1 = price_0.add(price_0)
        float_0 = -1884.952
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.negative()
        bool_0 = money_0.is_equal(price_1)
        bool_1 = some_money_0.is_equal(bytes_0)
        dict_0 = {}
        bool_2 = none_price_0.lt(price_1)
        none_money_0 = module_0.NoneMoney()
        money_1 = none_money_0.add(money_0)
        none_money_1 = module_0.NoneMoney(**dict_0)
        money_2 = some_money_0.abs()
        bool_3 = money_2.__gt__(money_2)
        money_3 = money_2.__add__(money_2)
        bool_4 = money_2.lte(money_3)
        money_4 = money_2.positive()
        price_2 = module_0.Price()
        price_3 = none_price_0.with_ccy(currency_0)
        currency_type_1 = module_1.CurrencyType.CRYPTO
        bool_5 = money_4.__lt__(money_2)
        bool_6 = none_price_0.gt(price_1)
        date_0 = None
        price_4 = none_price_0.with_dov(date_0)
        str_1 = 'Pakistan Rupee'
        str_2 = 'vcy'
        int_1 = 2049
        currency_1 = module_1.Currency(str_1, str_2, int_0, currency_type_1, decimal_0, int_1)
        money_5 = some_money_0.convert(currency_1, date_0)
    except BaseException:
        pass

def test_case_17():
    try:
        price_0 = None
        none_price_0 = module_0.NonePrice()
        bool_0 = none_price_0.gt(price_0)
        date_0 = None
        price_1 = none_price_0.with_dov(date_0)
        str_0 = 'jI$\te%RWa'
        str_1 = 'q'
        int_0 = 0
        currency_type_0 = module_1.CurrencyType.METAL
        decimal_0 = module_2.Decimal()
        int_1 = -334
        currency_0 = module_1.Currency(str_0, str_1, int_0, currency_type_0, decimal_0, int_1)
        some_price_0 = module_0.SomePrice()
    except BaseException:
        pass

def test_case_18():
    try:
        int_0 = 1525
        str_0 = '\'G@\'H\x0cKy>Z"C_S+9+fN'
        str_1 = 'H5l8z-l=k\x0bX'
        none_price_0 = module_0.NonePrice()
        str_2 = "ER9_v\n}[\n+6;M;O=t\n'T"
        int_1 = 0
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        int_2 = 848
        currency_0 = module_1.Currency(str_0, str_2, int_2, currency_type_0, decimal_0, int_1)
        str_3 = '6^3_@g3'
        int_3 = 408
        currency_1 = module_1.Currency(str_3, str_1, int_0, currency_type_0, decimal_0, int_3)
        money_0 = module_0.Money()
        money_1 = money_0.with_ccy(currency_1)
        money_2 = money_1.with_ccy(currency_0)
    except BaseException:
        pass

def test_case_19():
    try:
        str_0 = None
        str_1 = 'zm4:PZZI)Mmm^5.>b\t6'
        int_0 = -446
        currency_type_0 = module_1.CurrencyType.ALTERNATIVE
        list_0 = []
        decimal_0 = module_2.Decimal(*list_0)
        currency_0 = module_1.Currency(str_0, str_1, int_0, currency_type_0, decimal_0, int_0)
        list_1 = []
        var_0 = None
        money_0 = module_0.Money()
        money_1 = money_0.__mul__(var_0)
        money_2 = money_0.__sub__(money_1)
        some_money_0 = module_0.SomeMoney(*list_1)
    except BaseException:
        pass

def test_case_20():
    try:
        str_0 = '[?Tpg%j$i(14_y:HpCvV'
        str_1 = None
        decimal_0 = None
        str_2 = '|l?>.6'
        list_0 = [decimal_0, str_0, str_1]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.scalar_subtract(str_2)
    except BaseException:
        pass

def test_case_21():
    try:
        str_0 = '\'G@\'H\x0cKy>Z"C_S+9+fN'
        str_1 = 'H5l8z-l=k\x0bX'
        none_price_0 = module_0.NonePrice()
        int_0 = 0
        currency_type_0 = module_1.CurrencyType.METAL
        decimal_0 = module_2.Decimal()
        str_2 = '0vTuc;|5bXZ]#f'
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.multiply(str_2)
        none_money_1 = module_0.NoneMoney()
        money_1 = none_money_1.with_qty(decimal_0)
        bool_0 = money_1.__gt__(money_0)
        int_1 = -806
        currency_0 = module_1.Currency(str_0, str_1, int_0, currency_type_0, decimal_0, int_1)
        none_money_2 = module_0.NoneMoney()
        none_money_3 = module_0.NoneMoney()
        money_2 = none_money_3.subtract(money_0)
        money_3 = money_1.__sub__(money_1)
        money_4 = money_2.round()
        int_2 = none_money_2.as_integer()
    except BaseException:
        pass

def test_case_22():
    try:
        int_0 = 1525
        str_0 = '\'G@\'H\x0cKy>Z"C_S+9+fN'
        none_price_0 = module_0.NonePrice()
        str_1 = "ER9_v\n}[\n+6;M;O=t\n'T"
        int_1 = 0
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        int_2 = 848
        currency_0 = module_1.Currency(str_0, str_1, int_2, currency_type_0, decimal_0, int_1)
        str_2 = '6^3_@g3'
        int_3 = 408
        currency_1 = module_1.Currency(str_2, str_2, int_0, currency_type_0, decimal_0, int_3)
        money_0 = module_0.Money()
        float_0 = -1351.0
        money_1 = money_0.scalar_subtract(float_0)
    except BaseException:
        pass

def test_case_23():
    try:
        int_0 = 1167
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.round(int_0)
        currency_0 = None
        price_1 = none_price_0.convert(currency_0)
        bytes_0 = b'\xe4\xd2\r\x15B\x93\x1f\xaeq\xe0\xede\xa2'
        price_2 = none_price_0.floor_divide(bytes_0)
        var_0 = None
        none_money_0 = module_0.NoneMoney()
        bool_0 = price_0.lt(price_0)
        money_0 = none_money_0.divide(var_0)
        money_1 = money_0.__mul__(var_0)
        money_2 = money_0.__sub__(money_0)
        list_0 = []
        some_money_0 = module_0.SomeMoney(*list_0)
    except BaseException:
        pass

def test_case_24():
    try:
        price_0 = module_0.Price()
        var_0 = price_0.__round__()
    except BaseException:
        pass

def test_case_25():
    try:
        list_0 = []
        str_0 = "oe'T8\rC*Y%`]\x0clTVlz;"
        str_1 = 'l9^\rU)lTXC8i$,w5<p'
        int_0 = -1281
        currency_type_0 = module_1.CurrencyType.ALTERNATIVE
        decimal_0 = module_2.Decimal()
        currency_0 = module_1.Currency(str_0, str_1, int_0, currency_type_0, decimal_0, int_0)
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.with_ccy(currency_0)
        list_1 = [str_1, list_0, str_1]
        some_money_0 = module_0.SomeMoney(*list_1)
        money_1 = some_money_0.positive()
    except BaseException:
        pass

def test_case_26():
    try:
        dict_0 = {}
        money_0 = module_0.Money(**dict_0)
        some_price_0 = None
        money_1 = money_0.scalar_add(some_price_0)
    except BaseException:
        pass

def test_case_27():
    try:
        int_0 = -544
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.round(int_0)
        price_0 = module_0.Price()
        dict_0 = {}
        money_1 = price_0.times(dict_0)
    except BaseException:
        pass

def test_case_28():
    try:
        price_0 = module_0.Price()
        bool_0 = price_0.lte(price_0)
        var_0 = price_0.__round__()
    except BaseException:
        pass

def test_case_29():
    try:
        int_0 = -544
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.round(int_0)
        price_0 = module_0.Price()
        var_0 = None
        money_1 = money_0.multiply(var_0)
        str_0 = '+r=LCD\tK$JN!`('
        int_1 = -1675
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        currency_0 = module_1.Currency(str_0, str_0, int_1, currency_type_0, decimal_0, int_0)
        price_1 = price_0.with_ccy(currency_0)
        bool_0 = price_0.gt(price_0)
        var_1 = price_0.__round__()
    except BaseException:
        pass

def test_case_30():
    try:
        int_0 = -544
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.round(int_0)
        price_0 = module_0.Price()
        var_0 = None
        money_1 = money_0.multiply(var_0)
        str_0 = '+r=LCD\tK$JN!`('
        int_1 = -1675
        currency_type_0 = module_1.CurrencyType.ALTERNATIVE
        decimal_0 = module_2.Decimal()
        currency_0 = module_1.Currency(str_0, str_0, int_1, currency_type_0, decimal_0, int_0)
        price_1 = price_0.floor_divide(var_0)
    except BaseException:
        pass

def test_case_31():
    try:
        price_0 = module_0.Price()
        bool_0 = price_0.__gt__(price_0)
        price_1 = price_0.add(price_0)
    except BaseException:
        pass

def test_case_32():
    try:
        int_0 = -544
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.round(int_0)
        price_0 = module_0.Price()
        var_0 = None
        money_1 = money_0.multiply(var_0)
        str_0 = '+r=LCD\tK$JN!`('
        int_1 = -1675
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        currency_0 = module_1.Currency(str_0, str_0, int_1, currency_type_0, decimal_0, int_0)
        price_1 = price_0.__add__(price_0)
        bool_0 = price_0.gt(price_0)
        var_1 = price_0.__round__()
    except BaseException:
        pass

def test_case_33():
    try:
        int_0 = -550
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.round(int_0)
        price_0 = module_0.Price()
        var_0 = None
        money_1 = money_0.multiply(var_0)
        str_0 = '+r=LCD\tK$JN!`('
        int_1 = -1675
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        currency_0 = module_1.Currency(str_0, str_0, int_1, currency_type_0, decimal_0, int_0)
        price_1 = price_0.__sub__(price_0)
        bool_0 = price_0.gt(price_0)
        var_1 = price_0.__round__()
    except BaseException:
        pass

def test_case_34():
    try:
        int_0 = 1167
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.round(int_0)
        var_0 = price_0.__round__()
        var_1 = None
        none_money_0 = module_0.NoneMoney()
        bool_0 = price_0.lt(price_0)
        money_0 = none_money_0.divide(var_1)
        money_1 = money_0.__mul__(var_1)
        money_2 = money_0.__sub__(money_0)
        list_0 = []
        some_money_0 = module_0.SomeMoney(*list_0)
    except BaseException:
        pass

def test_case_35():
    try:
        int_0 = -550
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.round(int_0)
        price_0 = module_0.Price()
        var_0 = None
        money_1 = money_0.multiply(var_0)
        str_0 = '+r=LCD\tK$JN!`('
        int_1 = -1675
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        currency_0 = module_1.Currency(str_0, str_0, int_1, currency_type_0, decimal_0, int_0)
        price_1 = price_0.__floordiv__(var_0)
        bool_0 = price_0.gt(price_0)
        var_1 = price_0.__round__()
    except BaseException:
        pass

def test_case_36():
    try:
        bytes_0 = b'\xd8\x9b'
        float_0 = -1884.952
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_0 = some_money_0.is_equal(bytes_0)
        price_0 = module_0.Price()
        var_0 = price_0.__round__()
    except BaseException:
        pass

def test_case_37():
    try:
        int_0 = -550
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.round(int_0)
        price_0 = module_0.Price()
        var_0 = None
        money_1 = money_0.multiply(var_0)
        money_2 = money_0.__truediv__(var_0)
        str_0 = '+r=LCD\tK$JN!`('
        bool_0 = price_0.gte(price_0)
        int_1 = -1675
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        currency_0 = module_1.Currency(str_0, str_0, int_1, currency_type_0, decimal_0, int_0)
        price_1 = price_0.__sub__(price_0)
        money_3 = money_1.floor_divide(var_0)
        bool_1 = price_0.gt(price_0)
        var_1 = price_0.__round__()
    except BaseException:
        pass

def test_case_38():
    try:
        bytes_0 = b'\xd8\x9b'
        float_0 = -1884.952
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_0 = some_money_0.is_equal(bytes_0)
        dict_0 = {}
        none_money_0 = module_0.NoneMoney(**dict_0)
        money_0 = some_money_0.abs()
        price_0 = module_0.Price()
        float_1 = price_0.__float__()
        money_1 = money_0.positive()
        price_1 = module_0.Price()
        var_0 = price_1.__round__()
    except BaseException:
        pass

def test_case_39():
    try:
        int_0 = -601
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.round(int_0)
        price_0 = module_0.Price()
        var_0 = None
        money_1 = money_0.multiply(var_0)
        str_0 = '+r=LCD\tK$JN!`('
        int_1 = -1675
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        currency_0 = module_1.Currency(str_0, str_0, int_1, currency_type_0, decimal_0, int_0)
        price_1 = price_0.negative()
    except BaseException:
        pass

def test_case_40():
    try:
        int_0 = -550
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.round(int_0)
        price_0 = module_0.Price()
        var_0 = None
        money_1 = money_0.multiply(var_0)
        money_2 = money_0.__truediv__(var_0)
        str_0 = '+r=LCD\tK$JN!`('
        bool_0 = price_0.gte(price_0)
        bool_1 = price_0.__le__(price_0)
        int_1 = -1675
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        currency_0 = module_1.Currency(str_0, str_0, int_1, currency_type_0, decimal_0, int_0)
        money_3 = money_1.floor_divide(var_0)
        bool_2 = price_0.gt(price_0)
        var_1 = price_0.__round__()
    except BaseException:
        pass

def test_case_41():
    try:
        int_0 = 1167
        none_price_0 = module_0.NonePrice()
        price_0 = None
        price_1 = none_price_0.add(price_0)
        price_2 = none_price_0.round(int_0)
        var_0 = price_2.__round__()
        var_1 = None
        none_money_0 = module_0.NoneMoney()
        bool_0 = price_2.lt(price_2)
        money_0 = none_money_0.divide(var_1)
        money_1 = money_0.__mul__(var_1)
        money_2 = money_0.__sub__(money_0)
        list_0 = []
        some_money_0 = module_0.SomeMoney(*list_0)
    except BaseException:
        pass

def test_case_42():
    try:
        int_0 = -550
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.round(int_0)
        price_0 = module_0.Price()
        var_0 = None
        money_1 = money_0.multiply(var_0)
        money_2 = money_0.__truediv__(var_0)
        str_0 = '+r=LCD\tK$JN!`('
        bool_0 = price_0.gte(price_0)
        int_1 = -1675
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        currency_0 = module_1.Currency(str_0, str_0, int_1, currency_type_0, decimal_0, int_0)
        price_1 = price_0.__sub__(price_0)
        money_3 = money_1.floor_divide(var_0)
        bool_1 = price_0.gt(price_0)
        bool_2 = price_0.__eq__(var_0)
        var_1 = price_0.__round__()
    except BaseException:
        pass

def test_case_43():
    try:
        bytes_0 = b'\xd8\x9b'
        none_price_0 = module_0.NonePrice()
        str_0 = 'P`V(mH<[5o8['
        str_1 = '#P}/'
        int_0 = 3606
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        currency_0 = module_1.Currency(str_0, str_1, int_0, currency_type_0, decimal_0, int_0)
        price_0 = none_price_0.with_ccy(currency_0)
        price_1 = none_price_0.positive()
        float_0 = -1884.952
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_0 = some_money_0.is_equal(bytes_0)
        dict_0 = {}
        none_money_0 = module_0.NoneMoney(**dict_0)
        money_0 = some_money_0.abs()
        bool_1 = money_0.__gt__(money_0)
        money_1 = money_0.__add__(money_0)
        bool_2 = money_0.lte(money_1)
        bool_3 = False
        some_price_0 = module_0.SomePrice(*list_0)
        price_2 = some_price_0.scalar_add(bool_3)
    except BaseException:
        pass

def test_case_44():
    try:
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        float_0 = -1884.952
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        str_0 = ';$y1Z6(~R&\\"7w%hp'
        int_0 = 225
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        money_0 = some_money_0.with_ccy(currency_0)
        money_1 = money_0.round()
        money_2 = money_1.__neg__()
        some_price_0 = module_0.SomePrice(*list_0)
        bool_0 = money_2.__gt__(money_2)
        money_3 = money_1.__add__(money_1)
        bool_1 = money_3.lte(money_3)
        bool_2 = some_price_0.is_equal(bool_1)
        money_4 = money_1.__sub__(money_3)
        bool_3 = money_3.__lt__(money_3)
        bool_4 = some_money_0.lte(money_3)
    except BaseException:
        pass

def test_case_45():
    try:
        bytes_0 = b''
        float_0 = -1884.952
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_0 = some_money_0.is_equal(bytes_0)
        dict_0 = {}
        none_money_0 = module_0.NoneMoney(**dict_0)
        money_0 = module_0.Money(**dict_0)
        money_1 = money_0.__add__(money_0)
        money_2 = money_0.positive()
    except BaseException:
        pass

def test_case_46():
    try:
        bytes_0 = b'\xd8\x9b'
        float_0 = -1884.952
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_0 = some_money_0.is_equal(bytes_0)
        dict_0 = {}
        none_money_0 = module_0.NoneMoney(**dict_0)
        str_0 = None
        currency_type_0 = module_1.CurrencyType.CRYPTO
        decimal_0 = module_2.Decimal(**dict_0)
        int_0 = 1816
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        list_1 = [none_money_0, str_0]
        bool_1 = None
        money_0 = some_money_0.convert(currency_0, list_1, bool_1)
    except BaseException:
        pass

def test_case_47():
    try:
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.abs()
        decimal_0 = module_2.Decimal()
        float_0 = -1884.952
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        dict_0 = {}
        none_money_0 = module_0.NoneMoney(**dict_0)
        bool_0 = price_0.__gt__(price_0)
        price_1 = price_0.with_qty(decimal_0)
        var_0 = None
        price_2 = price_0.scalar_subtract(var_0)
        some_price_0 = module_0.SomePrice(*list_0, **dict_0)
        bool_1 = some_price_0.is_equal(dict_0)
        price_3 = some_price_0.subtract(price_2)
        some_price_1 = module_0.SomePrice(*list_0)
        price_4 = some_price_1.subtract(price_3)
        money_0 = none_money_0.divide(var_0)
        bool_2 = price_3.gte(price_3)
        bool_3 = price_4.gte(price_3)
        price_5 = price_3.__pos__()
        price_6 = some_price_1.add(price_3)
        money_1 = some_money_0.divide(var_0)
    except BaseException:
        pass

def test_case_48():
    try:
        none_price_0 = module_0.NonePrice()
        str_0 = 'P`V(mH<[5o8['
        str_1 = '#P}/'
        int_0 = 3606
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        currency_0 = module_1.Currency(str_0, str_1, int_0, currency_type_0, decimal_0, int_0)
        price_0 = none_price_0.with_qty(decimal_0)
        price_1 = none_price_0.positive()
        float_0 = -1885.3724639334937
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        dict_0 = {}
        price_2 = none_price_0.subtract(price_0)
        none_money_0 = module_0.NoneMoney(**dict_0)
        money_0 = some_money_0.abs()
        var_0 = None
        money_1 = money_0.floor_divide(var_0)
    except BaseException:
        pass

def test_case_49():
    try:
        bytes_0 = b'\xd8\x9b'
        float_0 = -1884.952
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_0 = some_money_0.is_equal(bytes_0)
        dict_0 = {}
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.abs()
        none_money_1 = module_0.NoneMoney(**dict_0)
        str_0 = None
        int_0 = -704
        currency_type_0 = module_1.CurrencyType.CRYPTO
        dict_1 = {}
        decimal_0 = module_2.Decimal(**dict_1)
        int_1 = 1816
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_1)
        money_1 = some_money_0.with_qty(decimal_0)
    except BaseException:
        pass

def test_case_50():
    try:
        bytes_0 = b'\xd8\x9b'
        none_price_0 = module_0.NonePrice()
        str_0 = 'P`V(mH<[5o8['
        str_1 = '#P}/'
        int_0 = 3606
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        currency_0 = module_1.Currency(str_0, str_1, int_0, currency_type_0, decimal_0, int_0)
        price_0 = none_price_0.with_ccy(currency_0)
        price_1 = none_price_0.add(price_0)
        float_0 = -1884.952
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_0 = some_money_0.is_equal(bytes_0)
        dict_0 = {}
        none_money_0 = module_0.NoneMoney(**dict_0)
        money_0 = some_money_0.abs()
        bool_1 = money_0.__gt__(money_0)
        money_1 = money_0.__add__(money_0)
        bool_2 = money_0.lte(money_1)
        money_2 = money_1.__mul__(decimal_0)
    except BaseException:
        pass

def test_case_51():
    try:
        bytes_0 = b'\xd8\x9b'
        float_0 = -1884.952
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_0 = some_money_0.is_equal(bytes_0)
        none_money_0 = module_0.NoneMoney()
        str_0 = None
        currency_type_0 = module_1.CurrencyType.ALTERNATIVE
        dict_0 = {}
        decimal_0 = module_2.Decimal(**dict_0)
        int_0 = 1816
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        money_0 = some_money_0.convert(currency_0)
    except BaseException:
        pass

def test_case_52():
    try:
        bytes_0 = b'\xd8\x9b'
        float_0 = -1884.952
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_0 = some_money_0.is_equal(bytes_0)
        dict_0 = {}
        none_money_0 = module_0.NoneMoney()
        money_0 = some_money_0.abs()
        none_money_1 = module_0.NoneMoney(**dict_0)
        str_0 = None
        currency_type_0 = module_1.CurrencyType.CRYPTO
        dict_1 = {}
        decimal_0 = module_2.Decimal(**dict_1)
        money_1 = money_0.__add__(money_0)
        int_0 = 1816
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        money_2 = money_0.scalar_add(currency_0)
    except BaseException:
        pass

def test_case_53():
    try:
        decimal_0 = module_2.Decimal()
        float_0 = -1884.952
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        dict_0 = {}
        none_money_0 = module_0.NoneMoney(**dict_0)
        money_0 = some_money_0.abs()
        money_1 = money_0.__sub__(money_0)
        price_0 = module_0.Price()
        some_price_0 = module_0.SomePrice(*list_0, **dict_0)
        money_2 = some_money_0.divide(some_money_0)
    except BaseException:
        pass

def test_case_54():
    try:
        bytes_0 = b'\xd8\x9b'
        none_price_0 = module_0.NonePrice()
        str_0 = 'P`V(mH<[5o8['
        str_1 = '#P}/'
        int_0 = 3606
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        currency_0 = module_1.Currency(str_0, str_1, int_0, currency_type_0, decimal_0, int_0)
        price_0 = none_price_0.with_qty(decimal_0)
        float_0 = -1884.952
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_0 = some_money_0.is_equal(bytes_0)
        dict_0 = {}
        none_money_0 = module_0.NoneMoney(**dict_0)
        money_0 = some_money_0.abs()
        bool_1 = money_0.__gt__(money_0)
        money_1 = none_money_0.with_ccy(currency_0)
        bool_2 = money_0.lte(money_1)
        money_2 = none_money_0.subtract(money_1)
        price_1 = module_0.Price()
        price_2 = none_price_0.with_ccy(currency_0)
        int_1 = 1
        currency_type_1 = module_1.CurrencyType.CRYPTO
        int_2 = -3541
        currency_1 = module_1.Currency(str_0, str_0, int_1, currency_type_1, decimal_0, int_2)
        money_3 = some_money_0.convert(currency_0, bool_0)
    except BaseException:
        pass

def test_case_55():
    try:
        bytes_0 = b'\xd8\x9b'
        none_price_0 = module_0.NonePrice()
        str_0 = 'P`V(mH<[5o8['
        str_1 = '#P}/'
        int_0 = 3606
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        currency_0 = module_1.Currency(str_0, str_1, int_0, currency_type_0, decimal_0, int_0)
        price_0 = none_price_0.with_qty(decimal_0)
        price_1 = none_price_0.positive()
        float_0 = -1884.952
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_0 = some_money_0.is_equal(bytes_0)
        dict_0 = {}
        none_money_0 = module_0.NoneMoney(**dict_0)
        money_0 = some_money_0.abs()
        bool_1 = money_0.__gt__(money_0)
        money_1 = money_0.__add__(money_0)
        money_2 = some_money_0.abs()
        bool_2 = money_0.lte(money_2)
        money_3 = money_1.positive()
        price_2 = module_0.Price()
        price_3 = none_price_0.with_ccy(currency_0)
        currency_type_1 = module_1.CurrencyType.CRYPTO
        str_2 = '2{b+d1"Jb#S?= U*'
        int_1 = 3306
        decimal_1 = module_2.Decimal()
        int_2 = 1554
        currency_1 = module_1.Currency(str_1, str_2, int_1, currency_type_1, decimal_1, int_2)
        money_4 = some_money_0.convert(currency_0, price_2)
    except BaseException:
        pass

def test_case_56():
    try:
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.abs()
        float_0 = -1887.1794429865877
        list_0 = [float_0, float_0, float_0]
        dict_0 = {}
        bool_0 = price_0.gte(price_0)
        var_0 = None
        price_1 = price_0.scalar_add(var_0)
        some_price_0 = module_0.SomePrice(*list_0, **dict_0)
        price_2 = some_price_0.subtract(price_1)
        bool_1 = price_2.gte(price_2)
        bool_2 = price_2.__lt__(price_1)
        price_3 = some_price_0.add(price_2)
        currency_0 = None
        date_0 = None
        bool_3 = True
        price_4 = some_price_0.convert(currency_0, date_0, bool_3)
    except BaseException:
        pass

def test_case_57():
    try:
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.negative()
        decimal_0 = module_2.Decimal()
        float_0 = -1884.952
        list_0 = [float_0, float_0, float_0]
        dict_0 = {}
        none_money_0 = module_0.NoneMoney(**dict_0)
        some_price_0 = module_0.SomePrice(*list_0)
        bool_0 = some_price_0.gt(price_0)
        price_1 = price_0.with_qty(decimal_0)
        var_0 = None
        price_2 = price_0.__pos__()
        bool_1 = none_price_0.gte(price_1)
        price_3 = price_1.scalar_add(var_0)
        some_price_1 = module_0.SomePrice(*list_0, **dict_0)
        price_4 = some_price_1.subtract(price_3)
        currency_0 = None
        price_5 = some_price_1.convert(currency_0)
    except BaseException:
        pass

def test_case_58():
    try:
        price_0 = module_0.Price()
        none_price_0 = module_0.NonePrice()
        date_0 = None
        price_1 = price_0.with_dov(date_0)
        price_2 = price_0.abs()
    except BaseException:
        pass

def test_case_59():
    try:
        bytes_0 = b'\xd8\x9b'
        none_price_0 = module_0.NonePrice()
        str_0 = '#P}/'
        int_0 = 3606
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        price_0 = none_price_0.with_qty(decimal_0)
        price_1 = none_price_0.positive()
        float_0 = -1884.952
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_0 = some_money_0.is_equal(bytes_0)
        dict_0 = {}
        none_money_0 = module_0.NoneMoney(**dict_0)
        money_0 = some_money_0.abs()
        bool_1 = money_0.__gt__(money_0)
        none_money_1 = module_0.NoneMoney()
        money_1 = some_money_0.abs()
        bool_2 = money_1.__gt__(money_1)
        list_1 = [str_0, list_0]
        money_2 = price_1.times(list_1)
        bool_3 = money_1.lte(money_2)
        money_3 = money_0.positive()
        price_2 = module_0.Price()
        some_price_0 = module_0.SomePrice(*list_0, **dict_0)
        price_3 = some_price_0.round()
        price_4 = price_1.__add__(price_3)
        price_5 = price_0.abs()
        int_1 = -719
        str_1 = '_<`*DV\t'
        currency_1 = module_1.Currency(str_1, str_0, int_1, currency_type_0, decimal_0, int_0)
        money_4 = some_money_0.convert(currency_0)
    except BaseException:
        pass

def test_case_60():
    try:
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.abs()
        decimal_0 = module_2.Decimal()
        float_0 = -1884.952
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        some_price_0 = module_0.SomePrice(*list_0)
        bool_0 = some_price_0.gt(price_0)
        money_0 = some_money_0.abs()
        bool_1 = money_0.__gt__(money_0)
        none_money_0 = module_0.NoneMoney()
        money_1 = none_money_0.scalar_add(list_0)
        money_2 = money_0.__add__(money_1)
        bool_2 = some_price_0.is_equal(list_0)
        money_3 = money_2.__sub__(money_1)
        bool_3 = money_2.__lt__(money_1)
        price_1 = price_0.with_qty(decimal_0)
        none_price_1 = module_0.NonePrice()
        bool_4 = none_price_1.gte(price_0)
        bool_5 = price_1.gte(price_1)
        str_0 = None
        price_2 = some_price_0.subtract(price_0)
        price_3 = some_price_0.subtract(price_2)
        bool_6 = some_price_0.is_equal(str_0)
        price_4 = price_3.__abs__()
        price_5 = some_price_0.positive()
        bool_7 = price_4.__lt__(price_5)
        price_6 = some_price_0.add(price_2)
        float_1 = money_1.__float__()
    except BaseException:
        pass

def test_case_61():
    try:
        none_price_0 = module_0.NonePrice()
        currency_type_0 = module_1.CurrencyType.METAL
        decimal_0 = module_2.Decimal()
        float_0 = -1884.952
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        str_0 = ';$y1Z6(~R&\\"7w%hp'
        int_0 = 250
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        money_0 = some_money_0.with_ccy(currency_0)
        money_1 = money_0.round()
        money_2 = money_1.__neg__()
        some_price_0 = module_0.SomePrice(*list_0)
        money_3 = some_money_0.abs()
        bool_0 = money_3.__gt__(money_3)
        money_4 = money_3.__add__(money_3)
        bool_1 = money_3.lte(money_4)
        bool_2 = some_price_0.is_equal(bool_1)
        money_5 = money_3.__sub__(money_4)
        bool_3 = some_money_0.lte(money_4)
        float_1 = money_5.__float__()
        currency_1 = None
        price_0 = some_price_0.convert(currency_1, money_4)
    except BaseException:
        pass

def test_case_62():
    try:
        none_price_0 = module_0.NonePrice()
        str_0 = 'P`V(mH<[5o8['
        str_1 = '#P}/'
        int_0 = 3606
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        currency_0 = module_1.Currency(str_0, str_1, int_0, currency_type_0, decimal_0, int_0)
        price_0 = none_price_0.with_qty(decimal_0)
        price_1 = none_price_0.positive()
        float_0 = -1884.952
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        dict_0 = {}
        none_money_0 = module_0.NoneMoney(**dict_0)
        money_0 = some_money_0.abs()
        bool_0 = money_0.__gt__(money_0)
        money_1 = money_0.__add__(money_0)
        money_2 = some_money_0.abs()
        bool_1 = money_0.lte(money_2)
        money_3 = money_1.positive()
        bool_2 = money_1.__lt__(money_2)
        price_2 = module_0.Price()
        money_4 = money_2.positive()
        price_3 = module_0.Price()
        price_4 = none_price_0.with_ccy(currency_0)
        price_5 = price_0.__add__(price_2)
        price_6 = price_3.positive()
    except BaseException:
        pass

def test_case_63():
    try:
        bytes_0 = b'\xd8\x9b'
        none_price_0 = module_0.NonePrice()
        str_0 = "f|'`9\n<f\x0b"
        int_0 = 3606
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        price_0 = none_price_0.with_qty(decimal_0)
        price_1 = price_0.add(price_0)
        float_0 = -1884.952
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.negative()
        bool_0 = money_0.is_equal(price_1)
        bool_1 = some_money_0.is_equal(bytes_0)
        dict_0 = {}
        bool_2 = none_price_0.lt(price_1)
        none_money_0 = module_0.NoneMoney(**dict_0)
        money_1 = money_0.positive()
        price_2 = module_0.Price()
        price_3 = none_price_0.with_ccy(currency_0)
        str_1 = 'Kuwaiti Dinar'
        currency_type_1 = module_1.CurrencyType.CRYPTO
        str_2 = 'Currencies'
        int_1 = 1247
        currency_1 = module_1.Currency(str_1, str_2, int_0, currency_type_1, decimal_0, int_1)
        price_4 = module_0.Price()
        price_5 = none_price_0.subtract(price_4)
        price_6 = price_0.__add__(price_4)
        price_7 = price_4.negative()
    except BaseException:
        pass

def test_case_64():
    try:
        none_price_0 = module_0.NonePrice()
        decimal_0 = module_2.Decimal()
        price_0 = none_price_0.with_qty(decimal_0)
        price_1 = price_0.subtract(price_0)
        float_0 = -1860.0623769615788
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        str_0 = 'KR)e_Z'
        int_0 = None
        some_price_0 = module_0.SomePrice(*list_0)
        price_2 = some_price_0.subtract(price_1)
        currency_type_0 = module_1.CurrencyType.METAL
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        price_3 = some_price_0.add(price_2)
        money_0 = some_money_0.convert(currency_0)
    except BaseException:
        pass

def test_case_65():
    try:
        bytes_0 = b'\xd8\x9b'
        none_price_0 = module_0.NonePrice()
        str_0 = 'P`V(mH<[5o8['
        int_0 = 3606
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        price_0 = none_price_0.with_qty(decimal_0)
        price_1 = price_0.add(price_0)
        float_0 = -1884.952
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.negative()
        bool_0 = money_0.is_equal(price_1)
        bool_1 = some_money_0.is_equal(bytes_0)
        dict_0 = {}
        bool_2 = none_price_0.lt(price_1)
        none_money_0 = module_0.NoneMoney(**dict_0)
        money_1 = some_money_0.abs()
        bool_3 = money_1.__gt__(money_1)
        money_2 = money_1.__add__(money_1)
        bool_4 = money_1.lte(money_2)
        money_3 = money_1.positive()
        price_2 = module_0.Price()
        price_3 = none_price_0.with_ccy(currency_0)
        currency_type_1 = module_1.CurrencyType.CRYPTO
        bool_5 = money_3.__lt__(money_1)
        currency_1 = module_1.Currency(str_0, str_0, int_0, currency_type_1, decimal_0, int_0)
        date_0 = None
        price_4 = none_price_0.with_dov(date_0)
        var_0 = None
        money_4 = price_3.times(var_0)
        money_5 = money_0.subtract(money_4)
        price_5 = module_0.Price()
        money_6 = some_money_0.convert(currency_1)
    except BaseException:
        pass

def test_case_66():
    try:
        none_price_0 = module_0.NonePrice()
        decimal_0 = module_2.Decimal()
        float_0 = -1884.952
        list_0 = [float_0, float_0, float_0]
        dict_0 = {}
        none_money_0 = module_0.NoneMoney(**dict_0)
        var_0 = None
        some_price_0 = module_0.SomePrice(*list_0, **dict_0)
        price_0 = some_price_0.divide(var_0)
    except BaseException:
        pass

def test_case_67():
    try:
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.abs()
        decimal_0 = module_2.Decimal()
        float_0 = -1884.952
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        some_price_0 = module_0.SomePrice(*list_0)
        bool_0 = some_price_0.gt(price_0)
        money_0 = some_money_0.abs()
        bool_1 = money_0.__gt__(money_0)
        money_1 = money_0.__add__(money_0)
        bool_2 = money_0.lte(money_1)
        bool_3 = some_price_0.is_equal(bool_1)
        money_2 = money_1.__sub__(money_1)
        bool_4 = money_1.__lt__(money_0)
        price_1 = price_0.with_qty(decimal_0)
        price_2 = price_0.__pos__()
        bool_5 = none_price_0.gte(price_2)
        bool_6 = price_1.gte(price_2)
        price_3 = some_price_0.subtract(price_0)
        price_4 = some_price_0.subtract(price_3)
        int_0 = some_money_0.as_integer()
        bool_7 = some_price_0.is_equal(price_2)
        price_5 = price_1.__abs__()
        bool_8 = price_4.__lt__(price_3)
        price_6 = some_price_0.add(price_3)
        float_1 = money_2.__float__()
        currency_0 = None
        price_7 = some_price_0.convert(currency_0)
    except BaseException:
        pass

def test_case_68():
    try:
        decimal_0 = module_2.Decimal()
        float_0 = -1884.952
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        dict_0 = {}
        none_money_0 = module_0.NoneMoney(**dict_0)
        money_0 = some_money_0.abs()
        bool_0 = money_0.__gt__(money_0)
        money_1 = money_0.__add__(money_0)
        money_2 = some_money_0.abs()
        bool_1 = money_0.lte(money_2)
        money_3 = money_0.__sub__(money_2)
        bool_2 = money_1.__lt__(money_2)
        price_0 = module_0.Price()
        str_0 = 'Kuwaiti Dinar'
        money_4 = money_2.positive()
        money_5 = money_1.negative()
        int_0 = None
        currency_type_0 = module_1.CurrencyType.CRYPTO
        some_price_0 = module_0.SomePrice(*list_0, **dict_0)
        str_1 = None
        currency_0 = module_1.Currency(str_0, str_1, int_0, currency_type_0, decimal_0, int_0)
        int_1 = price_0.__int__()
        money_6 = some_money_0.convert(currency_0)
    except BaseException:
        pass

def test_case_69():
    try:
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.negative()
        str_0 = 'P`V(mH<[5o8['
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        price_1 = none_price_0.with_qty(decimal_0)
        float_0 = -1884.952
        list_0 = [str_0, currency_type_0, price_1, str_0, price_1]
        price_2 = price_1.scalar_add(list_0)
        list_1 = [float_0, float_0, float_0]
        dict_0 = {}
        price_3 = none_price_0.subtract(price_1)
        none_money_0 = module_0.NoneMoney(**dict_0)
        price_4 = module_0.Price()
        str_1 = 'Kuwaiti Dinar'
        int_0 = None
        currency_type_1 = module_1.CurrencyType.CRYPTO
        some_price_0 = module_0.SomePrice(*list_1, **dict_0)
        price_5 = some_price_0.subtract(price_2)
        str_2 = None
        currency_0 = module_1.Currency(str_1, str_2, int_0, currency_type_1, decimal_0, int_0)
        int_1 = price_4.as_integer()
    except BaseException:
        pass

def test_case_70():
    try:
        decimal_0 = module_2.Decimal()
        float_0 = -1884.952
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        some_price_0 = module_0.SomePrice(*list_0)
        money_0 = some_money_0.abs()
        bool_0 = money_0.__gt__(money_0)
        money_1 = money_0.__add__(money_0)
        bool_1 = money_0.lte(money_1)
        bool_2 = some_price_0.is_equal(bool_1)
        money_2 = money_0.__sub__(money_1)
        bool_3 = money_1.__lt__(money_0)
        bool_4 = money_0.__bool__()
        float_1 = money_2.as_float()
        some_price_1 = module_0.SomePrice(*list_0)
        price_0 = some_price_1.negative()
        bool_5 = some_money_0.gte(money_1)
        int_0 = None
        some_price_2 = module_0.SomePrice(*list_0)
        price_1 = some_price_0.subtract(price_0)
        currency_type_0 = module_1.CurrencyType.METAL
        str_0 = 'Central African CFA Franc BCEAO'
        str_1 = ''
        price_2 = some_price_0.with_qty(decimal_0)
        currency_0 = module_1.Currency(str_0, str_1, int_0, currency_type_0, decimal_0, int_0)
        date_0 = None
        price_3 = some_price_2.add(price_0)
        price_4 = price_1.with_dov(date_0)
        bool_6 = price_3.__le__(price_4)
        money_3 = some_money_0.convert(currency_0)
    except BaseException:
        pass

def test_case_71():
    try:
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.abs()
        decimal_0 = module_2.Decimal()
        float_0 = -1884.952
        list_0 = [float_0, float_0, float_0]
        dict_0 = {}
        price_1 = price_0.with_qty(decimal_0)
        var_0 = None
        price_2 = price_1.scalar_add(var_0)
        some_price_0 = module_0.SomePrice(*list_0, **dict_0)
        price_3 = some_price_0.subtract(price_2)
        bool_0 = price_3.gte(price_1)
        bool_1 = price_3.__lt__(price_3)
        price_4 = price_3.floor_divide(var_0)
    except BaseException:
        pass

def test_case_72():
    try:
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.negative()
        str_0 = 'P`V(mH<[5o8['
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        price_1 = none_price_0.with_qty(decimal_0)
        float_0 = -1884.952
        list_0 = [str_0, currency_type_0, price_1, str_0, price_1]
        price_2 = price_1.scalar_add(list_0)
        list_1 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_1)
        dict_0 = {}
        price_3 = none_price_0.subtract(price_1)
        none_money_0 = module_0.NoneMoney(**dict_0)
        money_0 = some_money_0.abs()
        bool_0 = money_0.__gt__(money_0)
        money_1 = money_0.__add__(money_0)
        money_2 = some_money_0.abs()
        bool_1 = money_0.lte(money_2)
        money_3 = money_0.__sub__(money_2)
        bool_2 = money_1.__lt__(money_2)
        price_4 = module_0.Price()
        money_4 = money_1.negative()
        some_price_0 = module_0.SomePrice(*list_1, **dict_0)
        price_5 = price_4.__abs__()
        bool_3 = price_5.gte(price_2)
    except BaseException:
        pass

def test_case_73():
    try:
        none_price_0 = module_0.NonePrice()
        decimal_0 = module_2.Decimal()
        price_0 = none_price_0.with_qty(decimal_0)
        price_1 = price_0.add(price_0)
        float_0 = -1884.952
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.negative()
        str_0 = 'KR)e_Z'
        money_1 = money_0.negative()
        int_0 = None
        some_price_0 = module_0.SomePrice(*list_0)
        price_2 = some_price_0.subtract(price_1)
        currency_type_0 = module_1.CurrencyType.METAL
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        price_3 = some_price_0.add(price_2)
        bool_0 = price_2.__le__(price_2)
        price_4 = some_price_0.multiply(money_0)
    except BaseException:
        pass

def test_case_74():
    try:
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.negative()
        str_0 = 'P`V(mH<[5o8['
        str_1 = '#P}/'
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        price_1 = none_price_0.with_qty(decimal_0)
        float_0 = -1884.952
        list_0 = [str_0, currency_type_0, price_1, str_0, price_1]
        price_2 = price_1.scalar_add(list_0)
        list_1 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_1)
        price_3 = none_price_0.subtract(price_1)
        money_0 = some_money_0.abs()
        bool_0 = money_0.__gt__(money_0)
        money_1 = money_0.__add__(money_0)
        money_2 = some_money_0.abs()
        bool_1 = money_0.lte(money_2)
        money_3 = money_0.__sub__(money_2)
        str_2 = 's\x0b(&ZAKy-\tD'
        int_0 = 3859
        currency_0 = module_1.Currency(str_2, str_1, int_0, currency_type_0, decimal_0, int_0)
        money_4 = some_money_0.with_ccy(currency_0)
        bool_2 = some_money_0.gte(money_4)
    except BaseException:
        pass

def test_case_75():
    try:
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.positive()
        str_0 = 'P`V(mH<[5o8['
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        price_1 = none_price_0.with_qty(decimal_0)
        float_0 = -1884.952
        list_0 = [str_0, currency_type_0, price_1, str_0, price_1]
        price_2 = price_1.scalar_add(list_0)
        list_1 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_1)
        dict_0 = {}
        price_3 = none_price_0.subtract(price_1)
        none_money_0 = module_0.NoneMoney(**dict_0)
        money_0 = some_money_0.abs()
        bool_0 = money_0.__gt__(money_0)
        money_1 = money_0.__add__(money_0)
        money_2 = some_money_0.abs()
        bool_1 = money_0.lte(money_2)
        money_3 = money_0.__sub__(money_2)
        bool_2 = money_1.__lt__(money_2)
        price_4 = module_0.Price()
        str_1 = 'Kuwaiti Dinar'
        int_0 = None
        float_1 = money_0.as_float()
        some_price_0 = module_0.SomePrice(*list_1, **dict_0)
        price_5 = some_price_0.subtract(price_2)
        money_4 = money_3.subtract(money_0)
        price_6 = module_0.Price()
        bool_3 = money_4.__eq__(money_4)
        str_2 = '\nThis module provides day-count convention definitions and functionlity.\n'
        currency_type_1 = module_1.CurrencyType.METAL
        currency_0 = module_1.Currency(str_2, str_1, int_0, currency_type_1, decimal_0, int_0)
        money_5 = some_money_0.convert(currency_0)
    except BaseException:
        pass

def test_case_76():
    try:
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.negative()
        str_0 = 'P`V(mH<[5o8['
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        decimal_1 = None
        price_1 = none_price_0.with_qty(decimal_1)
        float_0 = -1884.952
        list_0 = [str_0, currency_type_0, price_1, str_0, price_1]
        price_2 = price_1.scalar_add(list_0)
        list_1 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_1)
        dict_0 = {}
        price_3 = none_price_0.subtract(price_1)
        none_money_0 = module_0.NoneMoney(**dict_0)
        money_0 = module_0.Money()
        bool_0 = money_0.__gt__(money_0)
        money_1 = money_0.__add__(money_0)
        money_2 = some_money_0.abs()
        bool_1 = money_0.lte(money_2)
        money_3 = money_0.__sub__(money_2)
        bool_2 = money_1.__lt__(money_2)
        price_4 = module_0.Price()
        float_1 = money_0.as_float()
    except BaseException:
        pass

def test_case_77():
    try:
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.negative()
        str_0 = 'P`V(mH<[5o8['
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        price_1 = none_price_0.with_qty(decimal_0)
        float_0 = -1884.952
        list_0 = [str_0, currency_type_0, price_1, str_0, price_1]
        price_2 = price_1.scalar_add(list_0)
        list_1 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_1)
        dict_0 = {}
        money_0 = module_0.Money(**dict_0)
        money_1 = money_0.__neg__()
        money_2 = some_money_0.positive()
        bool_0 = money_2.__lt__(money_1)
    except BaseException:
        pass

def test_case_78():
    try:
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.abs()
        decimal_0 = module_2.Decimal()
        float_0 = -1884.952
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        dict_0 = {}
        none_money_0 = module_0.NoneMoney(**dict_0)
        money_0 = some_money_0.abs()
        bool_0 = money_0.__gt__(money_0)
        money_1 = money_0.__add__(money_0)
        bool_1 = money_0.lte(money_1)
        money_2 = money_0.__sub__(money_1)
        bool_2 = money_1.__lt__(money_0)
        float_1 = money_2.as_float()
        price_1 = module_0.Price()
        var_0 = None
        price_2 = price_1.scalar_add(var_0)
    except BaseException:
        pass

def test_case_79():
    try:
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.abs()
        decimal_0 = module_2.Decimal()
        float_0 = -1884.952
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.abs()
        bool_0 = money_0.__gt__(money_0)
        money_1 = money_0.__add__(money_0)
        bool_1 = money_0.lte(money_1)
        money_2 = money_0.__sub__(money_1)
        bool_2 = money_1.__lt__(money_0)
        price_1 = price_0.with_qty(decimal_0)
        var_0 = None
        price_2 = price_1.scalar_add(var_0)
        price_3 = price_0.floor_divide(var_0)
        some_price_0 = module_0.SomePrice(*list_0)
        price_4 = some_price_0.scalar_subtract(var_0)
    except BaseException:
        pass

def test_case_80():
    try:
        decimal_0 = module_2.Decimal()
        float_0 = -1884.952
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        some_price_0 = module_0.SomePrice(*list_0)
        money_0 = some_money_0.abs()
        bool_0 = money_0.__gt__(money_0)
        money_1 = money_0.__add__(money_0)
        bool_1 = money_0.lte(money_1)
        bool_2 = some_price_0.is_equal(bool_1)
        money_2 = money_0.__sub__(money_1)
        bool_3 = money_1.__lt__(money_0)
        int_0 = some_price_0.as_integer()
        bool_4 = money_0.__bool__()
        float_1 = money_2.as_float()
        some_price_1 = module_0.SomePrice(*list_0)
        price_0 = some_price_1.negative()
        bool_5 = some_money_0.gte(money_1)
        int_1 = None
        some_price_2 = module_0.SomePrice(*list_0)
        price_1 = some_price_0.subtract(price_0)
        currency_type_0 = module_1.CurrencyType.METAL
        str_0 = 'Central African CFA Franc BCEAO'
        str_1 = ''
        price_2 = some_price_0.with_qty(decimal_0)
        currency_0 = module_1.Currency(str_0, str_1, int_1, currency_type_0, decimal_0, int_1)
        date_0 = None
        price_3 = some_price_2.add(price_0)
        price_4 = price_1.with_dov(date_0)
        bool_6 = price_3.__le__(price_4)
        money_3 = some_money_0.convert(currency_0)
    except BaseException:
        pass

def test_case_81():
    try:
        money_0 = module_0.Money()
        money_1 = money_0.round()
    except BaseException:
        pass

def test_case_82():
    try:
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.abs()
        str_0 = 'Norwegian Krone'
        decimal_0 = module_2.Decimal()
        float_0 = -1884.952
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        dict_0 = {}
        none_money_0 = module_0.NoneMoney(**dict_0)
        money_0 = some_money_0.abs()
        bool_0 = money_0.__gt__(money_0)
        money_1 = money_0.__add__(money_0)
        bool_1 = money_0.lte(money_1)
        money_2 = money_0.__sub__(money_1)
        bool_2 = money_1.__lt__(money_0)
        float_1 = money_2.as_float()
        price_1 = price_0.with_qty(decimal_0)
        var_0 = None
        price_2 = price_1.scalar_add(var_0)
        currency_type_0 = module_1.CurrencyType.CRYPTO
        float_2 = money_0.as_float()
        some_price_0 = module_0.SomePrice(*list_0, **dict_0)
        price_3 = some_price_0.subtract(price_2)
        bool_3 = price_3.gte(price_1)
        date_0 = None
        money_3 = some_money_0.with_dov(date_0)
        bool_4 = price_2.__bool__()
        str_1 = '`&'
        int_0 = -1003
        int_1 = 3775
        currency_0 = module_1.Currency(str_1, str_0, int_0, currency_type_0, decimal_0, int_1)
        price_4 = some_price_0.add(price_3)
        money_4 = some_money_0.convert(currency_0)
    except BaseException:
        pass

def test_case_83():
    try:
        money_0 = module_0.Money()
        var_0 = None
        money_1 = money_0.divide(var_0)
    except BaseException:
        pass

def test_case_84():
    try:
        bytes_0 = b'\xd8\x9b'
        none_price_0 = module_0.NonePrice()
        str_0 = "Zf|'`9\n<f\x0b"
        int_0 = 3606
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        price_0 = none_price_0.with_qty(decimal_0)
        price_1 = price_0.add(price_0)
        float_0 = -1884.952
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.negative()
        bool_0 = money_0.is_equal(price_1)
        bool_1 = some_money_0.is_equal(bytes_0)
        money_1 = money_0.negative()
        some_price_0 = module_0.SomePrice(*list_0)
        price_2 = some_price_0.subtract(price_1)
        bool_2 = price_2.gte(price_0)
        money_2 = some_money_0.with_ccy(currency_0)
        money_3 = money_1.__sub__(money_2)
    except BaseException:
        pass

def test_case_85():
    try:
        bytes_0 = b'\xd8\x9b'
        none_price_0 = module_0.NonePrice()
        str_0 = "Zf|'`9\n<f\x0b"
        int_0 = 3606
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        price_0 = none_price_0.with_qty(decimal_0)
        price_1 = price_0.add(price_0)
        float_0 = -1884.952
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.negative()
        bool_0 = money_0.is_equal(price_1)
        bool_1 = some_money_0.is_equal(bytes_0)
        str_1 = 'KR)e_Z'
        money_1 = money_0.negative()
        some_price_0 = module_0.SomePrice(*list_0)
        price_2 = some_price_0.subtract(price_1)
        currency_type_1 = module_1.CurrencyType.METAL
        currency_1 = module_1.Currency(str_1, str_1, int_0, currency_type_1, decimal_0, int_0)
        price_3 = some_price_0.add(price_1)
        bool_2 = price_2.__le__(price_1)
        money_2 = some_money_0.convert(currency_0, bool_2)
    except BaseException:
        pass

def test_case_86():
    try:
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.abs()
        decimal_0 = module_2.Decimal()
        float_0 = -1884.952
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        dict_0 = {}
        money_0 = some_money_0.abs()
        bool_0 = money_0.__gt__(money_0)
        money_1 = money_0.__add__(money_0)
        money_2 = money_0.__sub__(money_1)
        bool_1 = money_1.__lt__(money_0)
        float_1 = money_2.as_float()
        var_0 = None
        float_2 = money_0.as_float()
        some_price_0 = module_0.SomePrice(*list_0, **dict_0)
        price_1 = some_price_0.subtract(price_0)
        bool_2 = price_0.gte(price_0)
        bool_3 = price_1.__lt__(price_1)
        price_2 = price_0.floor_divide(var_0)
        float_3 = some_price_0.as_float()
        price_3 = some_price_0.divide(var_0)
    except BaseException:
        pass

def test_case_87():
    try:
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.abs()
        decimal_0 = module_2.Decimal()
        float_0 = -1884.952
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        some_price_0 = module_0.SomePrice(*list_0)
        bool_0 = some_price_0.gt(price_0)
        price_1 = price_0.with_qty(decimal_0)
        var_0 = None
        price_2 = price_0.__pos__()
        price_3 = price_1.scalar_add(var_0)
        currency_0 = None
        money_0 = some_money_0.convert(currency_0)
    except BaseException:
        pass

def test_case_88():
    try:
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.positive()
        str_0 = 'P`V(mH<[5o8['
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        float_0 = -1884.952
        list_0 = [str_0, currency_type_0, price_0, str_0, price_0]
        price_1 = price_0.scalar_add(list_0)
        list_1 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_1)
        dict_0 = {}
        price_2 = none_price_0.subtract(price_1)
        none_money_0 = module_0.NoneMoney(**dict_0)
        money_0 = some_money_0.abs()
        bool_0 = money_0.__gt__(money_0)
        money_1 = money_0.__add__(money_0)
        money_2 = some_money_0.abs()
        bool_1 = money_0.lte(money_2)
        money_3 = money_0.__sub__(money_2)
        bool_2 = money_1.__lt__(money_2)
        price_3 = module_0.Price()
        bool_3 = none_money_0.lt(money_0)
        price_4 = price_1.__sub__(price_3)
        float_1 = money_0.as_float()
        some_price_0 = module_0.SomePrice(*list_1, **dict_0)
        price_5 = some_price_0.subtract(price_1)
        price_6 = price_3.__mul__(list_0)
        price_7 = price_6.__mul__(list_0)
    except BaseException:
        pass

def test_case_89():
    try:
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.abs()
        float_0 = -1884.952
        list_0 = [float_0, float_0, float_0]
        dict_0 = {}
        var_0 = None
        price_1 = price_0.scalar_add(var_0)
        some_price_0 = module_0.SomePrice(*list_0, **dict_0)
        price_2 = some_price_0.subtract(price_1)
        bool_0 = price_2.gte(price_2)
        price_3 = some_price_0.subtract(price_1)
        price_4 = some_price_0.subtract(price_2)
        price_5 = price_1.__abs__()
        bool_1 = price_3.__lt__(price_4)
        price_6 = some_price_0.add(price_2)
        currency_0 = None
        price_7 = some_price_0.convert(currency_0, bool_0)
    except BaseException:
        pass

def test_case_90():
    try:
        money_0 = module_0.Money()
        money_1 = money_0.subtract(money_0)
    except BaseException:
        pass

def test_case_91():
    try:
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.abs()
        decimal_0 = module_2.Decimal()
        float_0 = -1884.952
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        dict_0 = {}
        none_money_0 = module_0.NoneMoney(**dict_0)
        some_price_0 = module_0.SomePrice(*list_0)
        bool_0 = some_price_0.gt(price_0)
        money_0 = some_money_0.abs()
        bool_1 = money_0.__gt__(money_0)
        money_1 = money_0.__add__(money_0)
        bool_2 = money_0.lte(money_1)
        bool_3 = some_price_0.is_equal(bool_2)
        money_2 = money_0.__sub__(money_1)
        bool_4 = money_1.__lt__(money_0)
        price_1 = price_0.with_qty(decimal_0)
        price_2 = price_0.__pos__()
        int_0 = -1662
        var_0 = money_2.__round__(int_0)
    except BaseException:
        pass

def test_case_92():
    try:
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.abs()
        decimal_0 = module_2.Decimal()
        float_0 = -1884.952
        price_1 = none_price_0.positive()
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        dict_0 = {}
        some_price_0 = module_0.SomePrice(*list_0)
        some_price_1 = module_0.SomePrice(*list_0, **dict_0)
        bool_0 = some_price_1.gt(price_1)
        money_0 = some_money_0.abs()
        price_2 = price_1.__add__(price_1)
        bool_1 = money_0.__gt__(money_0)
        money_1 = money_0.__add__(money_0)
        bool_2 = money_0.lte(money_0)
        bool_3 = some_price_1.is_equal(some_price_0)
        money_2 = money_0.__sub__(money_0)
        bool_4 = money_0.__lt__(money_2)
        price_3 = price_0.with_qty(decimal_0)
        price_4 = price_1.__pos__()
        bool_5 = none_price_0.gte(price_0)
        bool_6 = price_3.gte(price_3)
        price_5 = some_price_1.subtract(price_0)
        some_price_2 = module_0.SomePrice(*list_0, **dict_0)
        price_6 = some_price_2.subtract(price_3)
        price_7 = price_3.__abs__()
        bool_7 = price_5.__lt__(price_6)
        price_8 = some_price_2.add(price_2)
        float_1 = money_1.__float__()
        currency_0 = None
        price_9 = some_price_0.convert(currency_0)
    except BaseException:
        pass

def test_case_93():
    try:
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.abs()
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        float_0 = -1884.952
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        some_price_0 = module_0.SomePrice(*list_0)
        bool_0 = some_price_0.gt(price_0)
        money_0 = some_money_0.abs()
        bool_1 = money_0.__gt__(money_0)
        money_1 = money_0.__add__(money_0)
        bool_2 = money_0.lte(money_1)
        bool_3 = some_price_0.is_equal(bool_2)
        money_2 = money_1.__neg__()
        bool_4 = money_1.__lt__(money_2)
        price_1 = price_0.negative()
        price_2 = price_0.__pos__()
        bool_5 = none_price_0.gte(price_1)
        bool_6 = price_2.gte(price_0)
        str_0 = None
        price_3 = some_price_0.subtract(price_0)
        bool_7 = price_2.as_boolean()
        str_1 = 'Qhx!9CH*KT]u\nN'
        int_0 = -1352
        int_1 = -120
        currency_0 = module_1.Currency(str_0, str_1, int_0, currency_type_0, decimal_0, int_1)
        price_4 = price_3.with_ccy(currency_0)
        bool_8 = price_4.gte(price_3)
    except BaseException:
        pass

def test_case_94():
    try:
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.abs()
        float_0 = -1884.952
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        dict_0 = {}
        money_0 = some_money_0.abs()
        bool_0 = money_0.__gt__(money_0)
        money_1 = money_0.__add__(money_0)
        bool_1 = money_0.lte(money_1)
        money_2 = money_0.__sub__(money_1)
        bool_2 = money_1.__lt__(money_0)
        float_1 = money_2.as_float()
        var_0 = None
        price_1 = price_0.scalar_add(var_0)
        float_2 = money_0.as_float()
        some_price_0 = module_0.SomePrice(*list_0, **dict_0)
        price_2 = some_price_0.subtract(price_1)
        bool_3 = price_2.gte(price_2)
        price_3 = some_price_0.subtract(price_1)
        price_4 = some_price_0.subtract(price_2)
        price_5 = some_price_0.add(price_4)
        bool_4 = money_0.__ge__(money_2)
        bool_5 = price_2.__lt__(price_1)
        price_6 = some_price_0.add(price_0)
        money_3 = module_0.Money()
        float_3 = money_0.__float__()
        currency_0 = None
        price_7 = some_price_0.convert(currency_0, money_3)
    except BaseException:
        pass

def test_case_95():
    try:
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.abs()
        str_0 = 'i:Gh>\tzI8D*<'
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        float_0 = -1884.952
        list_0 = [float_0, float_0, float_0]
        some_price_0 = module_0.SomePrice(*list_0)
        bool_0 = some_price_0.gt(price_0)
        some_price_1 = module_0.SomePrice(*list_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        int_0 = -596
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        money_0 = module_0.Money()
        money_1 = money_0.convert(currency_0)
    except BaseException:
        pass

def test_case_96():
    try:
        none_price_0 = module_0.NonePrice()
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        float_0 = -1884.952
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        str_0 = '$y1Z6(~R&\\7w%hp'
        str_1 = "h>]EJ}!9KrBk&Q'h\x0c"
        int_0 = 250
        currency_0 = module_1.Currency(str_0, str_1, int_0, currency_type_0, decimal_0, int_0)
        money_0 = some_money_0.with_ccy(currency_0)
        money_1 = money_0.round()
        money_2 = money_1.__neg__()
        some_price_0 = module_0.SomePrice(*list_0)
        money_3 = some_money_0.abs()
        bool_0 = money_3.__gt__(money_3)
        money_4 = money_0.__add__(money_3)
    except BaseException:
        pass

def test_case_97():
    try:
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.abs()
        decimal_0 = module_2.Decimal()
        float_0 = -1884.952
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        some_price_0 = module_0.SomePrice(*list_0)
        bool_0 = some_price_0.gt(price_0)
        price_1 = some_price_0.negative()
        currency_type_0 = module_1.CurrencyType.METAL
        bool_1 = price_1.gte(price_0)
        currency_type_1 = module_1.CurrencyType.CRYPTO
        price_2 = some_price_0.add(price_1)
        price_3 = some_price_0.subtract(price_2)
        str_0 = None
        price_4 = price_1.__abs__()
        bool_2 = price_1.__lt__(price_2)
        str_1 = 'CBu)h2]M*'
        dict_0 = {str_0: str_1, currency_type_1: price_4, currency_type_0: price_3, str_1: price_4}
        none_money_0 = module_0.NoneMoney()
        money_0 = module_0.Money()
        money_1 = money_0.__floordiv__(none_money_0)
        money_2 = money_1.floor_divide(dict_0)
    except BaseException:
        pass

def test_case_98():
    try:
        list_0 = []
        dict_0 = {}
        none_price_0 = module_0.NonePrice(**dict_0)
        list_1 = [none_price_0, dict_0, dict_0]
        some_money_0 = module_0.SomeMoney(*list_1)
        str_0 = 'xI;tl<0ihD"BQ,'
        money_0 = module_0.Money(*list_0)
        bool_0 = money_0.__eq__(some_money_0)
        int_0 = -1885
        currency_type_0 = module_1.CurrencyType.METAL
        decimal_0 = module_2.Decimal()
        int_1 = 22
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_1)
        price_0 = none_price_0.with_ccy(currency_0)
        bool_1 = price_0.is_equal(list_0)
        float_0 = some_money_0.as_float()
    except BaseException:
        pass

def test_case_99():
    try:
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.abs()
        str_0 = 'i:Gh>\tzI8D*<'
        decimal_0 = module_2.Decimal()
        float_0 = -1884.952
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        some_price_0 = module_0.SomePrice(*list_0)
        money_0 = some_money_0.abs()
        bool_0 = money_0.__gt__(money_0)
        money_1 = money_0.__add__(money_0)
        bool_1 = money_0.lte(money_1)
        bool_2 = some_price_0.is_equal(bool_1)
        money_2 = money_0.__sub__(money_1)
        bool_3 = money_1.__lt__(money_0)
        float_1 = money_2.as_float()
        price_1 = some_price_0.abs()
        currency_type_0 = module_1.CurrencyType.METAL
        bool_4 = price_0.gte(price_0)
        price_2 = some_price_0.subtract(price_1)
        price_3 = some_price_0.subtract(price_2)
        price_4 = price_1.__abs__()
        bool_5 = price_2.__lt__(price_1)
        str_1 = 'CBu)h2]M*'
        int_0 = 29
        currency_0 = module_1.Currency(str_0, str_1, int_0, currency_type_0, decimal_0, int_0)
        date_0 = None
        price_5 = some_price_0.add(price_1)
        price_6 = price_2.with_dov(date_0)
        price_7 = price_4.with_ccy(currency_0)
        bool_6 = price_7.__le__(price_6)
    except BaseException:
        pass

def test_case_100():
    try:
        money_0 = module_0.Money()
        money_1 = money_0.negative()
    except BaseException:
        pass

def test_case_101():
    try:
        bytes_0 = b'=\xfaU\xeb\x8a\xc2\xc0'
        money_0 = module_0.Money()
        money_1 = money_0.multiply(bytes_0)
    except BaseException:
        pass