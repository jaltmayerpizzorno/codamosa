# Automatically generated by Pynguin.
import ansible.plugins.inventory.generator as module_0

def test_case_0():
    try:
        complex_0 = None
        inventory_module_0 = module_0.InventoryModule()
        var_0 = inventory_module_0.verify_file(complex_0)
        inventory_module_1 = module_0.InventoryModule()
        str_0 = 'FYK[++[\nANU'
        var_1 = inventory_module_0.template(str_0, str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = -3313
        inventory_module_0 = module_0.InventoryModule()
        bytes_0 = b'(\x87=\xc7}\xc0\xf4u\xb7\x8b\n\x1fHg\xb5\x85\x0c'
        var_0 = inventory_module_0.add_parents(int_0, inventory_module_0, bytes_0, inventory_module_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'Mj.58"H@\rV9{&A'
        str_1 = '(f?KHU\\dwKx\\'
        bool_0 = True
        inventory_module_0 = module_0.InventoryModule()
        var_0 = inventory_module_0.parse(str_0, str_1, bool_0)
    except BaseException:
        pass

def test_case_3():
    try:
        int_0 = None
        dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
        bool_0 = False
        str_0 = 'keep'
        inventory_module_0 = module_0.InventoryModule()
        var_0 = inventory_module_0.parse(dict_0, int_0, bool_0, str_0)
    except BaseException:
        pass