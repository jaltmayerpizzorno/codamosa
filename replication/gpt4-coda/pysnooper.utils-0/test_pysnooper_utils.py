# Automatically generated by Pynguin.
import pysnooper.utils as module_0

def test_case_0():
    str_0 = 'x\nuW-7|HbTeA]:l @\t@v'
    var_0 = module_0.shitcode(str_0)

def test_case_1():
    bytes_0 = b'\xf4\x17\xc6\xa6\x10\x83\x81\rf\xf9\x01\xef\x13#\xa6\xfd'
    var_0 = module_0.get_shortish_repr(bytes_0)

def test_case_2():
    str_0 = '`overwrite=True` can only be used when writing content to file.'
    var_0 = module_0.shitcode(str_0)
    str_1 = '=|o<]{#mp'
    dict_0 = {str_1: str_1, str_1: str_1, str_1: str_1, str_1: str_1}
    int_0 = 1504
    str_2 = '{indent}{timestamp} {thread_info}{event:9} {line_no:4} {source_line}'
    var_1 = module_0.shitcode(str_2)
    var_2 = module_0.truncate(dict_0, int_0)
    bytes_0 = b''
    var_3 = module_0.get_shortish_repr(bytes_0)
    complex_0 = None
    var_4 = module_0.get_repr_function(complex_0, bytes_0)

def test_case_3():
    str_0 = '\x0btMh>t\x0bN~M.1_'
    var_0 = module_0.shitcode(str_0)
    bytes_0 = b'\x91o\xda\x06\xba\xda'
    bool_0 = False
    var_1 = module_0.truncate(bytes_0, bool_0)
    var_2 = module_0.get_shortish_repr(bytes_0)

def test_case_4():
    str_0 = '`overwrite=True` can only be used when writing content to file.'
    var_0 = module_0.shitcode(str_0)
    str_1 = '=|o<]{#mp'
    set_0 = {var_0}
    var_1 = module_0.ensure_tuple(set_0)
    dict_0 = {str_1: str_1, str_1: str_1, str_1: str_1, str_1: str_1}
    int_0 = 1504
    str_2 = '{indent}{timestamp} {thread_info}{event:9} {line_no:4} {source_line}'
    var_2 = module_0.shitcode(str_2)
    var_3 = module_0.truncate(dict_0, int_0)
    bytes_0 = b''
    var_4 = module_0.get_shortish_repr(bytes_0)
    complex_0 = None
    var_5 = module_0.get_repr_function(complex_0, bytes_0)

def test_case_5():
    str_0 = 'x\nuW-7|HbTeA]:l @\t@v'
    var_0 = module_0.shitcode(str_0)
    var_1 = module_0.ensure_tuple(str_0)