# Automatically generated by Pynguin.
import ansible.utils.collection_loader._collection_finder as module_0

def test_case_0():
    pass

def test_case_1():
    ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()

def test_case_2():
    ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
    ansible_path_hook_finder_0 = module_0._AnsiblePathHookFinder(ansible_collection_finder_0, ansible_collection_finder_0)

def test_case_3():
    ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
    str_0 = 'ansible_collections.namespace.collection'
    tuple_0 = ()
    var_0 = ansible_collection_finder_0.find_module(str_0, tuple_0)

def test_case_4():
    ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
    bytes_0 = b"\xf6H0&?\x98\x12\xed'L\xfa'\x10Q\xcc"
    var_0 = ansible_collection_finder_0.set_playbook_paths(bytes_0)

def test_case_5():
    ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
    str_0 = "EcH'c#C"
    var_0 = ansible_collection_finder_0.find_module(str_0)
    var_1 = ansible_collection_finder_0.set_playbook_paths(str_0)

def test_case_6():
    ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
    str_0 = '(Q$w{|6^4h\x0b3AVP\rQ0Xv'
    var_0 = ansible_collection_finder_0.set_playbook_paths(str_0)

def test_case_7():
    ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
    str_0 = '/test/path/ansible_collections'
    ansible_path_hook_finder_0 = module_0._AnsiblePathHookFinder(ansible_collection_finder_0, str_0)
    var_0 = ansible_path_hook_finder_0.find_module(str_0)

def test_case_8():
    ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
    str_0 = 'ansible_collections.some_namespace.some_collection.plugins.modules.non_existin_module'
    bytes_0 = b'?\xa1X>\xb4\x84\xa5\x06\xac&\x7f%'
    list_0 = [str_0, ansible_collection_finder_0, bytes_0, str_0]
    set_0 = {bytes_0, bytes_0}
    tuple_0 = (bytes_0, list_0, str_0, set_0)
    ansible_collection_pkg_loader_base_0 = module_0._AnsibleCollectionPkgLoaderBase(str_0, tuple_0)

def test_case_9():
    str_0 = 'ansible_collections.some_namespace.some_collection.plugins.modules.non_existing_module'
    bytes_0 = b"\xfe\x8c'Z\x89\xb0"
    ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
    list_0 = [str_0, ansible_collection_finder_0, bytes_0, str_0]
    set_0 = set()
    tuple_0 = (bytes_0, list_0, str_0, set_0)
    ansible_collection_pkg_loader_base_0 = module_0._AnsibleCollectionPkgLoaderBase(str_0, tuple_0)
    var_0 = ansible_collection_pkg_loader_base_0.get_source(str_0)

def test_case_10():
    str_0 = 'ansible_collections.some_namespace.some_collection.plugins.modules.non_existing_module'
    bytes_0 = b"\xfe\x8c'Z\x89\xb0"
    ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
    list_0 = [str_0, ansible_collection_finder_0, bytes_0, str_0]
    set_0 = set()
    tuple_0 = (bytes_0, list_0, str_0, set_0)
    ansible_collection_pkg_loader_base_0 = module_0._AnsibleCollectionPkgLoaderBase(str_0, tuple_0)
    var_0 = ansible_collection_pkg_loader_base_0.get_source(str_0)
    var_1 = ansible_collection_finder_0.set_playbook_paths(list_0)
    var_2 = ansible_collection_pkg_loader_base_0.load_module(str_0)

def test_case_11():
    ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
    str_0 = 'ansible_collections.some_namespace.some_collection.plugins.modules.non_existing_module'
    bytes_0 = b"\xfe\x8c'Z\x89\xb0"
    ansible_collection_finder_1 = module_0._AnsibleCollectionFinder()
    list_0 = [str_0, ansible_collection_finder_0, bytes_0, str_0]
    set_0 = set()
    tuple_0 = (bytes_0, list_0, str_0, set_0)
    ansible_collection_pkg_loader_base_0 = module_0._AnsibleCollectionPkgLoaderBase(str_0, tuple_0)
    var_0 = ansible_collection_pkg_loader_base_0.get_source(str_0)
    var_1 = ansible_collection_finder_0.set_playbook_paths(list_0)
    var_2 = ansible_collection_pkg_loader_base_0.load_module(str_0)

def test_case_12():
    str_0 = 'ansible_collections.some_namespace.some_collection.plugins.modules.non_existing_module'
    bytes_0 = b"\xfe\x8c'Z\x89"
    ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
    list_0 = [str_0, ansible_collection_finder_0, bytes_0, str_0]
    set_0 = set()
    tuple_0 = (bytes_0, list_0, str_0, set_0)
    ansible_collection_pkg_loader_base_0 = module_0._AnsibleCollectionPkgLoaderBase(str_0, tuple_0)
    var_0 = ansible_collection_pkg_loader_base_0.get_source(str_0)
    str_1 = '/test/path/ansible_colMections'
    var_1 = ansible_collection_pkg_loader_base_0.get_data(str_1)

def test_case_13():
    ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
    int_0 = 200000
    bytes_0 = b''
    ansible_path_hook_finder_0 = module_0._AnsiblePathHookFinder(int_0, bytes_0)
    str_0 = 'vu3!?TCCe\t\x0c"~ '
    var_0 = ansible_path_hook_finder_0.find_module(str_0)