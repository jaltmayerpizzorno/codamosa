# Automatically generated by Pynguin.
import ansible.plugins.filter.mathstuff as module_0

def test_case_0():
    pass

def test_case_1():
    str_0 = ';'
    str_1 = '/usr/bin/vmstat -v'
    tuple_0 = (str_1,)
    str_2 = '\n        Find system executable in PATH.\n\n        :param arg: The executable to find.\n        :param required: if executable is not found and required is ``True``, fail_json\n        :param opt_dirs: optional list of directories to search in addition to ``PATH``\n        :returns: if found return full path; otherwise return None\n        '
    var_0 = module_0.difference(str_0, tuple_0, str_2)
    dict_0 = {}
    var_1 = module_0.intersect(dict_0, dict_0, dict_0)

def test_case_2():
    bytes_0 = b''
    tuple_0 = (bytes_0,)
    str_0 = None
    list_0 = [tuple_0, bytes_0, str_0]
    str_1 = 'o7\tmmZ'
    str_2 = 'setCacheDir'
    var_0 = module_0.symmetric_difference(list_0, str_1, str_2)

def test_case_3():
    bool_0 = False
    bytes_0 = b'\xff\xf2\xc0\x7fWc\xa5y'
    var_0 = module_0.max(bool_0, bytes_0)

def test_case_4():
    int_0 = 2123
    float_0 = -1869.2
    var_0 = module_0.human_readable(int_0, float_0)

def test_case_5():
    filter_module_0 = module_0.FilterModule()
    dict_0 = {}
    tuple_0 = ()
    var_0 = module_0.rekey_on_member(dict_0, tuple_0)

def test_case_6():
    int_0 = 1
    var_0 = module_0.logarithm(int_0)
    int_1 = 5
    int_2 = 10
    var_1 = module_0.logarithm(int_0, int_2)
    var_2 = module_0.logarithm(int_2, int_2)
    int_3 = 1000
    var_3 = module_0.logarithm(int_3, int_2)
    var_4 = round(var_3, int_1)
    int_4 = 2
    var_5 = module_0.logarithm(int_0, int_4)
    var_6 = module_0.logarithm(int_4, int_4)
    int_5 = 8
    var_7 = module_0.logarithm(int_5, int_4)
    var_8 = round(var_7, int_1)