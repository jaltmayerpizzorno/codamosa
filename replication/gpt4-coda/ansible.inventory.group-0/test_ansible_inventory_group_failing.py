# Automatically generated by Pynguin.
import ansible.inventory.group as module_0

def test_case_0():
    try:
        group_0 = module_0.Group()
        var_0 = group_0.clear_hosts_cache()
        group_1 = module_0.Group()
        var_1 = group_1.__str__()
        group_2 = module_0.Group()
        dict_0 = {}
        var_2 = group_2.remove_host(dict_0)
    except BaseException:
        pass

def test_case_1():
    try:
        group_0 = module_0.Group()
        var_0 = group_0.__getstate__()
        int_0 = None
        var_1 = group_0.get_hosts()
        var_2 = group_0.remove_host(int_0)
    except BaseException:
        pass

def test_case_2():
    try:
        group_0 = module_0.Group()
        dict_0 = None
        var_0 = group_0.__setstate__(dict_0)
    except BaseException:
        pass

def test_case_3():
    try:
        tuple_0 = None
        group_0 = module_0.Group()
        var_0 = group_0.deserialize(tuple_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = ''
        group_0 = module_0.Group(str_0)
        group_1 = module_0.Group()
        var_0 = group_0.add_host(group_0)
    except BaseException:
        pass

def test_case_5():
    try:
        group_0 = module_0.Group()
        var_0 = group_0.remove_host(group_0)
        var_1 = group_0.serialize()
        set_0 = set()
        group_1 = module_0.Group()
        list_0 = [group_0]
        var_2 = group_0.set_priority(list_0)
        var_3 = group_1.deserialize(set_0)
    except BaseException:
        pass

def test_case_6():
    try:
        bytes_0 = b'\x9c\xf4\xabs(3\xe0\x1b\x84e\xc9\x9fu\xc9G\x9d'
        group_0 = module_0.Group()
        group_1 = module_0.Group()
        var_0 = group_1.set_variable(bytes_0, group_0)
        group_2 = module_0.Group()
        var_1 = group_2.get_descendants()
        float_0 = 790.792824
        var_2 = group_2.deserialize(float_0)
    except BaseException:
        pass

def test_case_7():
    try:
        group_0 = module_0.Group()
        var_0 = group_0.serialize()
        int_0 = 621
        dict_0 = {}
        group_1 = module_0.Group()
        var_1 = group_1.set_priority(dict_0)
        list_0 = [int_0, int_0, int_0]
        group_2 = module_0.Group(list_0)
    except BaseException:
        pass

def test_case_8():
    try:
        group_0 = module_0.Group()
        var_0 = group_0.get_name()
        group_1 = module_0.Group()
        var_1 = group_1.get_ancestors()
        group_2 = module_0.Group()
        var_2 = group_1.get_hosts()
        var_3 = group_1.get_hosts()
        var_4 = group_1.__getstate__()
        var_5 = group_2.get_ancestors()
        str_0 = 'Version'
        var_6 = module_0.to_safe_group_name(str_0)
        var_7 = group_2.__getstate__()
        int_0 = None
        var_8 = group_1.get_hosts()
        var_9 = group_1.remove_host(int_0)
    except BaseException:
        pass

def test_case_9():
    try:
        group_0 = module_0.Group()
        var_0 = group_0.get_vars()
        bool_0 = False
        group_1 = module_0.Group(bool_0)
        var_1 = group_1.get_name()
        var_2 = group_0.__repr__()
        var_3 = group_0.serialize()
        var_4 = group_0.get_hosts()
        str_0 = 't<R\\'
        str_1 = 'Npwj9d!MzeW C9pF3f:'
        dict_0 = {str_0: var_2, str_1: var_2}
        var_5 = group_0.deserialize(dict_0)
        group_2 = module_0.Group()
        bytes_0 = b''
        var_6 = group_2.set_priority(bytes_0)
    except BaseException:
        pass

def test_case_10():
    try:
        group_0 = module_0.Group()
        var_0 = group_0.__getstate__()
        var_1 = group_0.clear_hosts_cache()
        var_2 = group_0.clear_hosts_cache()
        group_1 = module_0.Group()
        var_3 = group_0.add_child_group(group_1)
        var_4 = group_0.serialize()
        var_5 = group_1.__getstate__()
        bytes_0 = b'\x14\xc6\x85\xca'
        var_6 = group_1.add_host(bytes_0)
    except BaseException:
        pass

def test_case_11():
    try:
        group_0 = module_0.Group()
        var_0 = group_0.__getstate__()
        var_1 = group_0.clear_hosts_cache()
        var_2 = group_0.clear_hosts_cache()
        var_3 = group_0.__str__()
        group_1 = module_0.Group()
        var_4 = group_0.add_child_group(group_0)
    except BaseException:
        pass

def test_case_12():
    try:
        group_0 = module_0.Group()
        var_0 = group_0.get_vars()
        var_1 = group_0.__repr__()
        var_2 = group_0.get_hosts()
        var_3 = group_0.__str__()
        group_1 = module_0.Group()
        var_4 = group_0.__getstate__()
        var_5 = group_1.clear_hosts_cache()
        var_6 = group_0.__str__()
        str_0 = '(igjenp0u[wn'
        bool_0 = False
        var_7 = module_0.to_safe_group_name(str_0, bool_0)
        group_2 = module_0.Group()
        var_8 = group_1.get_hosts()
        int_0 = -3916
        var_9 = group_0.set_variable(int_0, int_0)
        var_10 = group_1.clear_hosts_cache()
        var_11 = group_1.add_child_group(group_0)
        float_0 = 4060.252224
        var_12 = group_0.set_variable(str_0, float_0)
        var_13 = group_1.serialize()
        var_14 = group_0.clear_hosts_cache()
        var_15 = group_0.get_ancestors()
        var_16 = group_1.__getstate__()
        var_17 = group_0.serialize()
        var_18 = group_2.add_host(group_2)
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = 'nvlid-=rup'
        var_0 = module_0.to_safe_group_name(str_0)
        str_1 = '.Mk{BF(&Vw8Iy'
        bool_0 = True
        var_1 = module_0.to_safe_group_name(str_1, bool_0)
        var_2 = module_0.to_safe_group_name(str_0, bool_0, bool_0)
    except BaseException:
        pass

def test_case_14():
    try:
        group_0 = module_0.Group()
        tuple_0 = ()
        var_0 = group_0.set_priority(tuple_0)
        var_1 = group_0.__repr__()
        var_2 = group_0.get_hosts()
        var_3 = group_0.__str__()
        var_4 = group_0.get_ancestors()
        str_0 = 'B0">Q#W+.'
        var_5 = group_0.set_variable(str_0, group_0)
        var_6 = group_0.__getstate__()
        var_7 = group_0.clear_hosts_cache()
        var_8 = group_0.__str__()
        var_9 = group_0.get_hosts()
        bool_0 = False
        var_10 = module_0.to_safe_group_name(str_0, bool_0)
        group_1 = module_0.Group()
        var_11 = group_0.get_hosts()
        int_0 = -3916
        var_12 = group_0.set_variable(int_0, int_0)
        var_13 = group_1.add_child_group(group_0)
        var_14 = group_0.get_name()
        float_0 = 42.6
        var_15 = group_0.set_variable(bool_0, float_0)
        var_16 = group_0.add_child_group(group_1)
    except BaseException:
        pass

def test_case_15():
    try:
        group_0 = module_0.Group()
        tuple_0 = ()
        var_0 = group_0.set_priority(tuple_0)
        var_1 = group_0.__repr__()
        var_2 = group_0.get_hosts()
        var_3 = group_0.__str__()
        var_4 = group_0.get_ancestors()
        str_0 = 'B0">Q#W+.'
        var_5 = group_0.set_variable(str_0, group_0)
        var_6 = group_0.__getstate__()
        var_7 = group_0.clear_hosts_cache()
        var_8 = group_0.__str__()
        var_9 = group_0.get_hosts()
        bool_0 = False
        var_10 = module_0.to_safe_group_name(str_0, bool_0)
        group_1 = module_0.Group()
        var_11 = group_0.get_hosts()
        var_12 = group_0.get_vars()
        int_0 = -3916
        var_13 = group_0.set_variable(int_0, int_0)
        var_14 = group_1.add_child_group(group_0)
        var_15 = group_0.get_name()
        var_16 = group_1.remove_host(group_0)
        float_0 = 4060.0
        float_1 = 42.6
        var_17 = group_0.set_variable(bool_0, float_1)
        var_18 = group_1.remove_host(group_1)
        var_19 = group_0.set_variable(str_0, float_0)
        var_20 = group_1.get_hosts()
        var_21 = group_1.serialize()
        var_22 = group_0.get_ancestors()
        float_2 = 4031.6125
        bytes_0 = b'v:\xfb'
        var_23 = group_0.set_variable(float_2, bytes_0)
        var_24 = group_0.serialize()
        group_2 = module_0.Group()
        var_25 = group_2.add_host(group_0)
    except BaseException:
        pass

def test_case_16():
    try:
        group_0 = module_0.Group()
        tuple_0 = ()
        var_0 = group_0.set_priority(tuple_0)
        var_1 = group_0.__repr__()
        var_2 = group_0.get_hosts()
        var_3 = group_0.get_ancestors()
        str_0 = ":%m2p)'"
        var_4 = group_0.set_variable(str_0, group_0)
        var_5 = group_0.__getstate__()
        bool_0 = None
        var_6 = group_0.clear_hosts_cache()
        var_7 = group_0.__str__()
        var_8 = module_0.to_safe_group_name(str_0, bool_0)
        group_1 = module_0.Group()
        var_9 = group_1.add_child_group(group_0)
        bytes_0 = b"GMT\xab\xde|\xea\x1a\xd5\x0f!X'\x1c\xbe\x05\xaca\xd1\xb6"
        var_10 = group_0.get_name()
        float_0 = 4060.0
        group_2 = module_0.Group()
        var_11 = group_2.add_child_group(group_1)
        var_12 = group_0.set_variable(str_0, float_0)
        var_13 = group_1.get_hosts()
        var_14 = group_1.serialize()
        var_15 = group_1.get_ancestors()
        var_16 = group_2.get_vars()
        var_17 = group_0.set_variable(float_0, bytes_0)
        var_18 = group_0.serialize()
        group_3 = module_0.Group()
        var_19 = group_3.add_host(group_0)
    except BaseException:
        pass

def test_case_17():
    try:
        group_0 = module_0.Group()
        tuple_0 = ()
        var_0 = group_0.set_priority(tuple_0)
        var_1 = group_0.__repr__()
        var_2 = group_0.get_hosts()
        var_3 = group_0.__str__()
        var_4 = group_0.get_ancestors()
        str_0 = 'B0">Q#W+.'
        var_5 = group_0.set_variable(str_0, group_0)
        var_6 = group_0.__getstate__()
        var_7 = group_0.clear_hosts_cache()
        var_8 = group_0.__str__()
        var_9 = group_0.get_hosts()
        bool_0 = False
        var_10 = module_0.to_safe_group_name(str_0, bool_0)
        group_1 = module_0.Group()
        var_11 = group_0.get_hosts()
        int_0 = -3916
        var_12 = group_0.set_variable(int_0, int_0)
        var_13 = group_1.add_child_group(group_0)
        bytes_0 = b'\xab\x01\x01g\x02\x1b'
        var_14 = group_0.get_name()
        float_0 = 42.6
        var_15 = group_0.set_variable(bool_0, float_0)
        var_16 = group_1.get_vars()
        var_17 = group_0.remove_host(group_1)
        group_2 = module_0.Group()
        var_18 = group_2.add_child_group(group_1)
        var_19 = group_2.get_hosts()
        var_20 = group_1.serialize()
        var_21 = group_0.get_ancestors()
        var_22 = group_0.get_vars()
        var_23 = group_0.set_variable(bytes_0, group_1)
        var_24 = group_2.serialize()
        group_3 = module_0.Group()
        int_1 = -2709
        var_25 = group_0.add_host(int_1)
    except BaseException:
        pass