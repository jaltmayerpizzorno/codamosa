

# Generated at 2024-03-18 09:21:06.755118
```python
    def test_constructor(self):
        # Create an instance of the SafariBaseIE class
        extractor = SafariBaseIE()

        # Check if the _LOGIN_URL is set correctly
        self.assertEqual(extractor._LOGIN_URL, 'https://learning.oreilly.com/accounts/login/')

        # Check if the _NETRC_MACHINE is set correctly
        self.assertEqual(extractor._NETRC_MACHINE, 'safari')

        # Check if the _API_BASE is set correctly
        self.assertEqual(extractor._API_BASE, 'https://learning.oreilly.com/api/v1')

        # Check if the _API_FORMAT is set correctly
        self.assertEqual(extractor._API_FORMAT, 'json')

        # Check if the LOGGED_IN flag is set to False by default
        self.assertFalse(extractor.LOGGED_IN)
```

# Generated at 2024-03-18 09:21:12.325986
```python
    def test_constructor(self):
        ie = SafariApiIE()
        self.assertEqual(ie.IE_NAME, 'safari:api')
        self.assertTrue(re.match(ie._VALID_URL, 'https://www.safaribooksonline.com/api/v1/book/9780133392838/chapter/part00.html'))
        self.assertTrue(re.match(ie._VALID_URL, 'https://www.safaribooksonline.com/api/v1/book/9780134664057/chapter/RHCE_Introduction.html'))
```

# Generated at 2024-03-18 09:21:16.640247
```python
    def test_constructor(self):
        safari_ie = SafariIE()
        self.assertEqual(safari_ie.IE_NAME, 'safari')
        self.assertEqual(safari_ie._PARTNER_ID, '1926081')
        self.assertEqual(safari_ie._UICONF_ID, '29375172')
        self.assertTrue(hasattr(safari_ie, '_real_extract'))
        self.assertTrue(hasattr(safari_ie, '_login'))
        self.assertTrue(hasattr(safari_ie, '_real_initialize'))
```

# Generated at 2024-03-18 09:21:23.653761
```python
    def test_constructor(self):
        # Create an instance of the SafariBaseIE class
        extractor = SafariBaseIE()

        # Check if the _LOGIN_URL is correctly set
        self.assertEqual(extractor._LOGIN_URL, 'https://learning.oreilly.com/accounts/login/')

        # Check if the _NETRC_MACHINE is correctly set
        self.assertEqual(extractor._NETRC_MACHINE, 'safari')

        # Check if the _API_BASE is correctly set
        self.assertEqual(extractor._API_BASE, 'https://learning.oreilly.com/api/v1')

        # Check if the _API_FORMAT is correctly set
        self.assertEqual(extractor._API_FORMAT, 'json')

        # Check if the LOGGED_IN flag is initially set to False
        self.assertFalse(extractor.LOGGED_IN)
```

# Generated at 2024-03-18 09:21:29.833539
```python
    def test_constructor(self):
        safari_ie = SafariIE()
        self.assertEqual(safari_ie.IE_NAME, 'safari')
        self.assertEqual(safari_ie._VALID_URL, r'''(?x)
                        https?://
                            (?:www\.)?(?:safaribooksonline|(?:learning\.)?oreilly)\.com/
                            (?:
                                library/view/[^/]+/(?P<course_id>[^/]+)/(?P<part>[^/?\#&]+)\.html|
                                videos/[^/]+/[^/]+/(?P<reference_id>[^-]+-[^/?\#&]+)
                            )
                    ''')
        self.assertEqual(safari_ie._PARTNER_ID, '1926081')
        self.assertEqual(safari_ie._UICONF_ID, '29375172')
        self.assertFalse(safari_ie.LOGGED_IN)
```

# Generated at 2024-03-18 09:21:37.751715
```python
    def test_constructor(self):
        # Create an instance of the SafariCourseIE class
        ie = SafariCourseIE()

        # Assert that the IE_NAME is set correctly
        self.assertEqual(ie.IE_NAME, 'safari:course')

        # Assert that the _VALID_URL is set correctly
        self.assertEqual(ie._VALID_URL, r'''(?x)
                    https?://
                        (?:
                            (?:www\.)?(?:safaribooksonline|(?:learning\.)?oreilly)\.com/
                            (?:
                                library/view/[^/]+|
                                api/v1/book|
                                videos/[^/]+
                            )|
                            techbus\.safaribooksonline\.com
                        )
                        /(?P<id>[^/]+)
                    ''')

        # Assert that the IE_DESC is set correctly
        self.assertEqual(ie.IE_DESC, 'safaribooksonline

# Generated at 2024-03-18 09:21:47.854320
```python
    def test_constructor(self):
        # Create an instance of the SafariApiIE class
        ie = SafariApiIE()

        # Assert that the IE_NAME is correctly set
        self.assertEqual(ie.IE_NAME, 'safari:api')

        # Assert that the _VALID_URL is correctly set
        self.assertEqual(ie._VALID_URL, r'https?://(?:www\.)?(?:safaribooksonline|(?:learning\.)?oreilly)\.com/api/v1/book/(?P<course_id>[^/]+)/chapter(?:-content)?/(?P<part>[^/?#&]+)\.html')

        # Assert that the _TESTS list is correctly set
        self.assertEqual(len(ie._TESTS), 2)
        self.assertTrue(all('url' in test and 'only_matching' in test for test in ie._TESTS))
```

# Generated at 2024-03-18 09:21:52.340663
```python
    def test_constructor(self):
        ie = SafariApiIE()
        self.assertEqual(ie.IE_NAME, 'safari:api')
        self.assertTrue(re.match(ie._VALID_URL, 'https://www.safaribooksonline.com/api/v1/book/9780133392838/chapter/part00.html'))
        self.assertTrue(re.match(ie._VALID_URL, 'https://www.safaribooksonline.com/api/v1/book/9780134664057/chapter/RHCE_Introduction.html'))
```

# Generated at 2024-03-18 09:22:00.902990
```python
    def test_constructor(self):
        # Create an instance of the SafariBaseIE class
        extractor = SafariBaseIE()

        # Check if the _LOGIN_URL is set correctly
        self.assertEqual(extractor._LOGIN_URL, 'https://learning.oreilly.com/accounts/login/')

        # Check if the _NETRC_MACHINE is set correctly
        self.assertEqual(extractor._NETRC_MACHINE, 'safari')

        # Check if the _API_BASE is set correctly
        self.assertEqual(extractor._API_BASE, 'https://learning.oreilly.com/api/v1')

        # Check if the _API_FORMAT is set correctly
        self.assertEqual(extractor._API_FORMAT, 'json')

        # Check if the LOGGED_IN flag is set to False by default
        self.assertFalse(extractor.LOGGED_IN)
```

# Generated at 2024-03-18 09:22:06.793813
```python
    def test_constructor(self):
        ie = SafariApiIE()
        self.assertEqual(ie.IE_NAME, 'safari:api')
        self.assertTrue(re.match(ie._VALID_URL, 'https://www.safaribooksonline.com/api/v1/book/9780133392838/chapter/part00.html'))
        self.assertTrue(re.match(ie._VALID_URL, 'https://www.safaribooksonline.com/api/v1/book/9780134664057/chapter/RHCE_Introduction.html'))
```