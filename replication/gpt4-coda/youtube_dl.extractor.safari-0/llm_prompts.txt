

---- 2024-03-18 09:20:57.641279
{"model": "gpt-4-1106-preview", "messages": [{"role": "user", "content": "Complete the following unit test function. Only write the completion; do NOT rewrite the function. Do NOT include any comments or description.\n# coding: utf-8\nfrom __future__ import unicode_literals\n\nimport json\nimport re\n\nfrom .common import InfoExtractor\n\nfrom ..compat import (\n    compat_parse_qs,\n    compat_urlparse,\n)\nfrom ..utils import (\n    ExtractorError,\n    update_url_query,\n)\n\n\nclass SafariBaseIE(InfoExtractor):\n    _LOGIN_URL = 'https://learning.oreilly.com/accounts/login/'\n    _NETRC_MACHINE = 'safari'\n\n    _API_BASE = 'https://learning.oreilly.com/api/v1'\n    _API_FORMAT = 'json'\n\n    LOGGED_IN = False\n\n    def _real_initialize(self):\n        self._login()\n\n    def _login(self):\n        username, password = self._get_login_info()\n        if username is None:\n            return\n\n        _, urlh = self._download_webpage_handle(\n            'https://learning.oreilly.com/accounts/login-check/', None,\n            'Downloading login page')\n\n        def is_logged(urlh):\n            return 'learning.oreilly.com/home/' in urlh.geturl()\n\n        if is_logged(urlh):\n            self.LOGGED_IN = True\n            return\n\n        redirect_url = urlh.geturl()\n        parsed_url = compat_urlparse.urlparse(redirect_url)\n        qs = compat_parse_qs(parsed_url.query)\n        next_uri = compat_urlparse.urljoin(\n            'https://api.oreilly.com', qs['next'][0])\n\n        auth, urlh = self._download_json_handle(\n            'https://www.oreilly.com/member/auth/login/', None, 'Logging in',\n            data=json.dumps({\n                'email': username,\n                'password': password,\n                'redirect_uri': next_uri,\n            }).encode(), headers={\n                'Content-Type': 'application/json',\n                'Referer': redirect_url,\n            }, expected_status=400)\n\n        credentials = auth.get('credentials')\n        if (not auth.get('logged_in') and not auth.get('redirect_uri')\n                and credentials):\n            raise ExtractorError(\n                'Unable to login: %s' % credentials, expected=True)\n\n        # oreilly serves two same instances of the following cookies\n        # in Set-Cookie header and expects first one to be actually set\n        for cookie in ('groot_sessionid', 'orm-jwt', 'orm-rt'):\n            self._apply_first_set_cookie_header(urlh, cookie)\n\n        _, urlh = self._download_webpage_handle(\n            auth.get('redirect_uri') or next_uri, None, 'Completing login',)\n\n        if is_logged(urlh):\n            self.LOGGED_IN = True\n            return\n\n        raise ExtractorError('Unable to log in')\n\n\nclass SafariIE(SafariBaseIE):\n    IE_NAME = 'safari'\n    IE_DESC = 'safaribooksonline.com online video'\n    _VALID_URL = r'''(?x)\n                        https?://\n                            (?:www\\.)?(?:safaribooksonline|(?:learning\\.)?oreilly)\\.com/\n                            (?:\n                                library/view/[^/]+/(?P<course_id>[^/]+)/(?P<part>[^/?\\#&]+)\\.html|\n                                videos/[^/]+/[^/]+/(?P<reference_id>[^-]+-[^/?\\#&]+)\n                            )\n                    '''\n\n    _TESTS = [{\n        'url': 'https://www.safaribooksonline.com/library/view/hadoop-fundamentals-livelessons/9780133392838/part00.html',\n        'md5': 'dcc5a425e79f2564148652616af1f2a3',\n        'info_dict': {\n            'id': '0_qbqx90ic',\n            'ext': 'mp4',\n            'title': 'Introduction to Hadoop Fundamentals LiveLessons',\n            'timestamp': 1437758058,\n            'upload_date': '20150724',\n            'uploader_id': 'stork',\n        },\n    }, {\n        # non-digits in course id\n        'url': 'https://www.safaribooksonline.com/library/view/create-a-nodejs/100000006A0210/part00.html',\n        'only_matching': True,\n    }, {\n        'url': 'https://www.safaribooksonline.com/library/view/learning-path-red/9780134664057/RHCE_Introduction.html',\n        'only_matching': True,\n    }, {\n        'url': 'https://www.safaribooksonline.com/videos/python-programming-language/9780134217314/9780134217314-PYMC_13_00',\n        'only_matching': True,\n    }, {\n        'url': 'https://learning.oreilly.com/videos/hadoop-fundamentals-livelessons/9780133392838/9780133392838-00_SeriesIntro',\n        'only_matching': True,\n    }, {\n        'url': 'https://www.oreilly.com/library/view/hadoop-fundamentals-livelessons/9780133392838/00_SeriesIntro.html',\n        'only_matching': True,\n    }]\n\n    _PARTNER_ID = '1926081'\n    _UICONF_ID = '29375172'\n\n    def _real_extract(self, url):\n        mobj = re.match(self._VALID_URL, url)\n\n        reference_id = mobj.group('reference_id')\n        if reference_id:\n            video_id = reference_id\n            partner_id = self._PARTNER_ID\n            ui_id = self._UICONF_ID\n        else:\n            video_id = '%s-%s' % (mobj.group('course_id'), mobj.group('part'))\n\n            webpage, urlh = self._download_webpage_handle(url, video_id)\n\n            mobj = re.match(self._VALID_URL, urlh.geturl())\n            reference_id = mobj.group('reference_id')\n            if not reference_id:\n                reference_id = self._search_regex(\n                    r'data-reference-id=([\"\\'])(?P<id>(?:(?!\\1).)+)\\1',\n                    webpage, 'kaltura reference id', group='id')\n            partner_id = self._search_regex(\n                r'data-partner-id=([\"\\'])(?P<id>(?:(?!\\1).)+)\\1',\n                webpage, 'kaltura widget id', default=self._PARTNER_ID,\n                group='id')\n            ui_id = self._search_regex(\n                r'data-ui-id=([\"\\'])(?P<id>(?:(?!\\1).)+)\\1',\n                webpage, 'kaltura uiconf id', default=self._UICONF_ID,\n                group='id')\n\n        query = {\n            'wid': '_%s' % partner_id,\n            'uiconf_id': ui_id,\n            'flashvars[referenceId]': reference_id,\n        }\n\n        if self.LOGGED_IN:\n            kaltura_session = self._download_json(\n                '%s/player/kaltura_session/?reference_id=%s' % (self._API_BASE, reference_id),\n                video_id, 'Downloading kaltura session JSON',\n                'Unable to download kaltura session JSON', fatal=False,\n                headers={'Accept': 'application/json'})\n            if kaltura_session:\n                session = kaltura_session.get('session')\n                if session:\n                    query['flashvars[ks]'] = session\n\n        return self.url_result(update_url_query(\n            'https://cdnapisec.kaltura.com/html5/html5lib/v2.37.1/mwEmbedFrame.php', query),\n            'Kaltura')\n\n\nclass SafariApiIE(SafariBaseIE):\n    IE_NAME = 'safari:api'\n    _VALID_URL = r'https?://(?:www\\.)?(?:safaribooksonline|(?:learning\\.)?oreilly)\\.com/api/v1/book/(?P<course_id>[^/]+)/chapter(?:-content)?/(?P<part>[^/?#&]+)\\.html'\n\n    _TESTS = [{\n        'url': 'https://www.safaribooksonline.com/api/v1/book/9780133392838/chapter/part00.html',\n        'only_matching': True,\n    }, {\n        'url': 'https://www.safaribooksonline.com/api/v1/book/9780134664057/chapter/RHCE_Introduction.html',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        mobj = re.match(self._VALID_URL, url)\n        part = self._download_json(\n            url, '%s/%s' % (mobj.group('course_id'), mobj.group('part')),\n            'Downloading part JSON')\n        return self.url_result(part['web_url'], SafariIE.ie_key())\n\n\nclass SafariCourseIE(SafariBaseIE):\n    IE_NAME = 'safari:course'\n    IE_DESC = 'safaribooksonline.com online courses'\n\n    _VALID_URL = r'''(?x)\n                    https?://\n                        (?:\n                            (?:www\\.)?(?:safaribooksonline|(?:learning\\.)?oreilly)\\.com/\n                            (?:\n                                library/view/[^/]+|\n                                api/v1/book|\n                                videos/[^/]+\n                            )|\n                            techbus\\.safaribooksonline\\.com\n                        )\n                        /(?P<id>[^/]+)\n                    '''\n\n    _TESTS = [{\n        'url': 'https://www.safaribooksonline.com/library/view/hadoop-fundamentals-livelessons/9780133392838/',\n        'info_dict': {\n            'id': '9780133392838',\n            'title': 'Hadoop Fundamentals LiveLessons',\n        },\n        'playlist_count': 22,\n        'skip': 'Requires safaribooksonline account credentials',\n    }, {\n        'url': 'https://www.safaribooksonline.com/api/v1/book/9781449396459/?override_format=json',\n        'only_matching': True,\n    }, {\n        'url': 'http://techbus.safaribooksonline.com/9780134426365',\n        'only_matching': True,\n    }, {\n        'url': 'https://www.safaribooksonline.com/videos/python-programming-language/9780134217314',\n        'only_matching': True,\n    }, {\n        'url': 'https://learning.oreilly.com/videos/hadoop-fundamentals-livelessons/9780133392838',\n        'only_matching': True,\n    }, {\n        'url': 'https://www.oreilly.com/library/view/hadoop-fundamentals-livelessons/9780133392838/',\n        'only_matching': True,\n    }]\n\n    @classmethod\n    def suitable(cls, url):\n        return (False if SafariIE.suitable(url) or SafariApiIE.suitable(url)\n                else super(SafariCourseIE, cls).suitable(url))\n\n    def _real_extract(self, url):\n        course_id = self._match_id(url)\n\n        course_json = self._download_json(\n            '%s/book/%s/?override_format=%s' % (self._API_BASE, course_id, self._API_FORMAT),\n            course_id, 'Downloading course JSON')\n\n        if 'chapters' not in course_json:\n            raise ExtractorError(\n                'No chapters found for course %s' % course_id, expected=True)\n\n        entries = [\n            self.url_result(chapter, SafariApiIE.ie_key())\n            for chapter in course_json['chapters']]\n\n        course_title = course_json['title']\n\n        return self.playlist_result(entries, course_id, course_title)\n\n# Unit test for constructor of class SafariBaseIE\ndef test_SafariBaseIE():"}], "max_tokens": 200, "temperature": 0.0, "stop": ["\n# Unit test for", "\ndef ", "\nclass "]}

---- 2024-03-18 09:21:06.759381
{"model": "gpt-4-1106-preview", "messages": [{"role": "user", "content": "Complete the following unit test function. Only write the completion; do NOT rewrite the function. Do NOT include any comments or description.\n# coding: utf-8\nfrom __future__ import unicode_literals\n\nimport json\nimport re\n\nfrom .common import InfoExtractor\n\nfrom ..compat import (\n    compat_parse_qs,\n    compat_urlparse,\n)\nfrom ..utils import (\n    ExtractorError,\n    update_url_query,\n)\n\n\nclass SafariBaseIE(InfoExtractor):\n    _LOGIN_URL = 'https://learning.oreilly.com/accounts/login/'\n    _NETRC_MACHINE = 'safari'\n\n    _API_BASE = 'https://learning.oreilly.com/api/v1'\n    _API_FORMAT = 'json'\n\n    LOGGED_IN = False\n\n    def _real_initialize(self):\n        self._login()\n\n    def _login(self):\n        username, password = self._get_login_info()\n        if username is None:\n            return\n\n        _, urlh = self._download_webpage_handle(\n            'https://learning.oreilly.com/accounts/login-check/', None,\n            'Downloading login page')\n\n        def is_logged(urlh):\n            return 'learning.oreilly.com/home/' in urlh.geturl()\n\n        if is_logged(urlh):\n            self.LOGGED_IN = True\n            return\n\n        redirect_url = urlh.geturl()\n        parsed_url = compat_urlparse.urlparse(redirect_url)\n        qs = compat_parse_qs(parsed_url.query)\n        next_uri = compat_urlparse.urljoin(\n            'https://api.oreilly.com', qs['next'][0])\n\n        auth, urlh = self._download_json_handle(\n            'https://www.oreilly.com/member/auth/login/', None, 'Logging in',\n            data=json.dumps({\n                'email': username,\n                'password': password,\n                'redirect_uri': next_uri,\n            }).encode(), headers={\n                'Content-Type': 'application/json',\n                'Referer': redirect_url,\n            }, expected_status=400)\n\n        credentials = auth.get('credentials')\n        if (not auth.get('logged_in') and not auth.get('redirect_uri')\n                and credentials):\n            raise ExtractorError(\n                'Unable to login: %s' % credentials, expected=True)\n\n        # oreilly serves two same instances of the following cookies\n        # in Set-Cookie header and expects first one to be actually set\n        for cookie in ('groot_sessionid', 'orm-jwt', 'orm-rt'):\n            self._apply_first_set_cookie_header(urlh, cookie)\n\n        _, urlh = self._download_webpage_handle(\n            auth.get('redirect_uri') or next_uri, None, 'Completing login',)\n\n        if is_logged(urlh):\n            self.LOGGED_IN = True\n            return\n\n        raise ExtractorError('Unable to log in')\n\n\nclass SafariIE(SafariBaseIE):\n    IE_NAME = 'safari'\n    IE_DESC = 'safaribooksonline.com online video'\n    _VALID_URL = r'''(?x)\n                        https?://\n                            (?:www\\.)?(?:safaribooksonline|(?:learning\\.)?oreilly)\\.com/\n                            (?:\n                                library/view/[^/]+/(?P<course_id>[^/]+)/(?P<part>[^/?\\#&]+)\\.html|\n                                videos/[^/]+/[^/]+/(?P<reference_id>[^-]+-[^/?\\#&]+)\n                            )\n                    '''\n\n    _TESTS = [{\n        'url': 'https://www.safaribooksonline.com/library/view/hadoop-fundamentals-livelessons/9780133392838/part00.html',\n        'md5': 'dcc5a425e79f2564148652616af1f2a3',\n        'info_dict': {\n            'id': '0_qbqx90ic',\n            'ext': 'mp4',\n            'title': 'Introduction to Hadoop Fundamentals LiveLessons',\n            'timestamp': 1437758058,\n            'upload_date': '20150724',\n            'uploader_id': 'stork',\n        },\n    }, {\n        # non-digits in course id\n        'url': 'https://www.safaribooksonline.com/library/view/create-a-nodejs/100000006A0210/part00.html',\n        'only_matching': True,\n    }, {\n        'url': 'https://www.safaribooksonline.com/library/view/learning-path-red/9780134664057/RHCE_Introduction.html',\n        'only_matching': True,\n    }, {\n        'url': 'https://www.safaribooksonline.com/videos/python-programming-language/9780134217314/9780134217314-PYMC_13_00',\n        'only_matching': True,\n    }, {\n        'url': 'https://learning.oreilly.com/videos/hadoop-fundamentals-livelessons/9780133392838/9780133392838-00_SeriesIntro',\n        'only_matching': True,\n    }, {\n        'url': 'https://www.oreilly.com/library/view/hadoop-fundamentals-livelessons/9780133392838/00_SeriesIntro.html',\n        'only_matching': True,\n    }]\n\n    _PARTNER_ID = '1926081'\n    _UICONF_ID = '29375172'\n\n    def _real_extract(self, url):\n        mobj = re.match(self._VALID_URL, url)\n\n        reference_id = mobj.group('reference_id')\n        if reference_id:\n            video_id = reference_id\n            partner_id = self._PARTNER_ID\n            ui_id = self._UICONF_ID\n        else:\n            video_id = '%s-%s' % (mobj.group('course_id'), mobj.group('part'))\n\n            webpage, urlh = self._download_webpage_handle(url, video_id)\n\n            mobj = re.match(self._VALID_URL, urlh.geturl())\n            reference_id = mobj.group('reference_id')\n            if not reference_id:\n                reference_id = self._search_regex(\n                    r'data-reference-id=([\"\\'])(?P<id>(?:(?!\\1).)+)\\1',\n                    webpage, 'kaltura reference id', group='id')\n            partner_id = self._search_regex(\n                r'data-partner-id=([\"\\'])(?P<id>(?:(?!\\1).)+)\\1',\n                webpage, 'kaltura widget id', default=self._PARTNER_ID,\n                group='id')\n            ui_id = self._search_regex(\n                r'data-ui-id=([\"\\'])(?P<id>(?:(?!\\1).)+)\\1',\n                webpage, 'kaltura uiconf id', default=self._UICONF_ID,\n                group='id')\n\n        query = {\n            'wid': '_%s' % partner_id,\n            'uiconf_id': ui_id,\n            'flashvars[referenceId]': reference_id,\n        }\n\n        if self.LOGGED_IN:\n            kaltura_session = self._download_json(\n                '%s/player/kaltura_session/?reference_id=%s' % (self._API_BASE, reference_id),\n                video_id, 'Downloading kaltura session JSON',\n                'Unable to download kaltura session JSON', fatal=False,\n                headers={'Accept': 'application/json'})\n            if kaltura_session:\n                session = kaltura_session.get('session')\n                if session:\n                    query['flashvars[ks]'] = session\n\n        return self.url_result(update_url_query(\n            'https://cdnapisec.kaltura.com/html5/html5lib/v2.37.1/mwEmbedFrame.php', query),\n            'Kaltura')\n\n\nclass SafariApiIE(SafariBaseIE):\n    IE_NAME = 'safari:api'\n    _VALID_URL = r'https?://(?:www\\.)?(?:safaribooksonline|(?:learning\\.)?oreilly)\\.com/api/v1/book/(?P<course_id>[^/]+)/chapter(?:-content)?/(?P<part>[^/?#&]+)\\.html'\n\n    _TESTS = [{\n        'url': 'https://www.safaribooksonline.com/api/v1/book/9780133392838/chapter/part00.html',\n        'only_matching': True,\n    }, {\n        'url': 'https://www.safaribooksonline.com/api/v1/book/9780134664057/chapter/RHCE_Introduction.html',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        mobj = re.match(self._VALID_URL, url)\n        part = self._download_json(\n            url, '%s/%s' % (mobj.group('course_id'), mobj.group('part')),\n            'Downloading part JSON')\n        return self.url_result(part['web_url'], SafariIE.ie_key())\n\n\nclass SafariCourseIE(SafariBaseIE):\n    IE_NAME = 'safari:course'\n    IE_DESC = 'safaribooksonline.com online courses'\n\n    _VALID_URL = r'''(?x)\n                    https?://\n                        (?:\n                            (?:www\\.)?(?:safaribooksonline|(?:learning\\.)?oreilly)\\.com/\n                            (?:\n                                library/view/[^/]+|\n                                api/v1/book|\n                                videos/[^/]+\n                            )|\n                            techbus\\.safaribooksonline\\.com\n                        )\n                        /(?P<id>[^/]+)\n                    '''\n\n    _TESTS = [{\n        'url': 'https://www.safaribooksonline.com/library/view/hadoop-fundamentals-livelessons/9780133392838/',\n        'info_dict': {\n            'id': '9780133392838',\n            'title': 'Hadoop Fundamentals LiveLessons',\n        },\n        'playlist_count': 22,\n        'skip': 'Requires safaribooksonline account credentials',\n    }, {\n        'url': 'https://www.safaribooksonline.com/api/v1/book/9781449396459/?override_format=json',\n        'only_matching': True,\n    }, {\n        'url': 'http://techbus.safaribooksonline.com/9780134426365',\n        'only_matching': True,\n    }, {\n        'url': 'https://www.safaribooksonline.com/videos/python-programming-language/9780134217314',\n        'only_matching': True,\n    }, {\n        'url': 'https://learning.oreilly.com/videos/hadoop-fundamentals-livelessons/9780133392838',\n        'only_matching': True,\n    }, {\n        'url': 'https://www.oreilly.com/library/view/hadoop-fundamentals-livelessons/9780133392838/',\n        'only_matching': True,\n    }]\n\n    @classmethod\n    def suitable(cls, url):\n        return (False if SafariIE.suitable(url) or SafariApiIE.suitable(url)\n                else super(SafariCourseIE, cls).suitable(url))\n\n    def _real_extract(self, url):\n        course_id = self._match_id(url)\n\n        course_json = self._download_json(\n            '%s/book/%s/?override_format=%s' % (self._API_BASE, course_id, self._API_FORMAT),\n            course_id, 'Downloading course JSON')\n\n        if 'chapters' not in course_json:\n            raise ExtractorError(\n                'No chapters found for course %s' % course_id, expected=True)\n\n        entries = [\n            self.url_result(chapter, SafariApiIE.ie_key())\n            for chapter in course_json['chapters']]\n\n        course_title = course_json['title']\n\n        return self.playlist_result(entries, course_id, course_title)\n\n# Unit test for constructor of class SafariApiIE\ndef test_SafariApiIE():"}], "max_tokens": 200, "temperature": 0.0, "stop": ["\n# Unit test for", "\ndef ", "\nclass "]}

---- 2024-03-18 09:21:12.329237
{"model": "gpt-4-1106-preview", "messages": [{"role": "user", "content": "Complete the following unit test function. Only write the completion; do NOT rewrite the function. Do NOT include any comments or description.\n# coding: utf-8\nfrom __future__ import unicode_literals\n\nimport json\nimport re\n\nfrom .common import InfoExtractor\n\nfrom ..compat import (\n    compat_parse_qs,\n    compat_urlparse,\n)\nfrom ..utils import (\n    ExtractorError,\n    update_url_query,\n)\n\n\nclass SafariBaseIE(InfoExtractor):\n    _LOGIN_URL = 'https://learning.oreilly.com/accounts/login/'\n    _NETRC_MACHINE = 'safari'\n\n    _API_BASE = 'https://learning.oreilly.com/api/v1'\n    _API_FORMAT = 'json'\n\n    LOGGED_IN = False\n\n    def _real_initialize(self):\n        self._login()\n\n    def _login(self):\n        username, password = self._get_login_info()\n        if username is None:\n            return\n\n        _, urlh = self._download_webpage_handle(\n            'https://learning.oreilly.com/accounts/login-check/', None,\n            'Downloading login page')\n\n        def is_logged(urlh):\n            return 'learning.oreilly.com/home/' in urlh.geturl()\n\n        if is_logged(urlh):\n            self.LOGGED_IN = True\n            return\n\n        redirect_url = urlh.geturl()\n        parsed_url = compat_urlparse.urlparse(redirect_url)\n        qs = compat_parse_qs(parsed_url.query)\n        next_uri = compat_urlparse.urljoin(\n            'https://api.oreilly.com', qs['next'][0])\n\n        auth, urlh = self._download_json_handle(\n            'https://www.oreilly.com/member/auth/login/', None, 'Logging in',\n            data=json.dumps({\n                'email': username,\n                'password': password,\n                'redirect_uri': next_uri,\n            }).encode(), headers={\n                'Content-Type': 'application/json',\n                'Referer': redirect_url,\n            }, expected_status=400)\n\n        credentials = auth.get('credentials')\n        if (not auth.get('logged_in') and not auth.get('redirect_uri')\n                and credentials):\n            raise ExtractorError(\n                'Unable to login: %s' % credentials, expected=True)\n\n        # oreilly serves two same instances of the following cookies\n        # in Set-Cookie header and expects first one to be actually set\n        for cookie in ('groot_sessionid', 'orm-jwt', 'orm-rt'):\n            self._apply_first_set_cookie_header(urlh, cookie)\n\n        _, urlh = self._download_webpage_handle(\n            auth.get('redirect_uri') or next_uri, None, 'Completing login',)\n\n        if is_logged(urlh):\n            self.LOGGED_IN = True\n            return\n\n        raise ExtractorError('Unable to log in')\n\n\nclass SafariIE(SafariBaseIE):\n    IE_NAME = 'safari'\n    IE_DESC = 'safaribooksonline.com online video'\n    _VALID_URL = r'''(?x)\n                        https?://\n                            (?:www\\.)?(?:safaribooksonline|(?:learning\\.)?oreilly)\\.com/\n                            (?:\n                                library/view/[^/]+/(?P<course_id>[^/]+)/(?P<part>[^/?\\#&]+)\\.html|\n                                videos/[^/]+/[^/]+/(?P<reference_id>[^-]+-[^/?\\#&]+)\n                            )\n                    '''\n\n    _TESTS = [{\n        'url': 'https://www.safaribooksonline.com/library/view/hadoop-fundamentals-livelessons/9780133392838/part00.html',\n        'md5': 'dcc5a425e79f2564148652616af1f2a3',\n        'info_dict': {\n            'id': '0_qbqx90ic',\n            'ext': 'mp4',\n            'title': 'Introduction to Hadoop Fundamentals LiveLessons',\n            'timestamp': 1437758058,\n            'upload_date': '20150724',\n            'uploader_id': 'stork',\n        },\n    }, {\n        # non-digits in course id\n        'url': 'https://www.safaribooksonline.com/library/view/create-a-nodejs/100000006A0210/part00.html',\n        'only_matching': True,\n    }, {\n        'url': 'https://www.safaribooksonline.com/library/view/learning-path-red/9780134664057/RHCE_Introduction.html',\n        'only_matching': True,\n    }, {\n        'url': 'https://www.safaribooksonline.com/videos/python-programming-language/9780134217314/9780134217314-PYMC_13_00',\n        'only_matching': True,\n    }, {\n        'url': 'https://learning.oreilly.com/videos/hadoop-fundamentals-livelessons/9780133392838/9780133392838-00_SeriesIntro',\n        'only_matching': True,\n    }, {\n        'url': 'https://www.oreilly.com/library/view/hadoop-fundamentals-livelessons/9780133392838/00_SeriesIntro.html',\n        'only_matching': True,\n    }]\n\n    _PARTNER_ID = '1926081'\n    _UICONF_ID = '29375172'\n\n    def _real_extract(self, url):\n        mobj = re.match(self._VALID_URL, url)\n\n        reference_id = mobj.group('reference_id')\n        if reference_id:\n            video_id = reference_id\n            partner_id = self._PARTNER_ID\n            ui_id = self._UICONF_ID\n        else:\n            video_id = '%s-%s' % (mobj.group('course_id'), mobj.group('part'))\n\n            webpage, urlh = self._download_webpage_handle(url, video_id)\n\n            mobj = re.match(self._VALID_URL, urlh.geturl())\n            reference_id = mobj.group('reference_id')\n            if not reference_id:\n                reference_id = self._search_regex(\n                    r'data-reference-id=([\"\\'])(?P<id>(?:(?!\\1).)+)\\1',\n                    webpage, 'kaltura reference id', group='id')\n            partner_id = self._search_regex(\n                r'data-partner-id=([\"\\'])(?P<id>(?:(?!\\1).)+)\\1',\n                webpage, 'kaltura widget id', default=self._PARTNER_ID,\n                group='id')\n            ui_id = self._search_regex(\n                r'data-ui-id=([\"\\'])(?P<id>(?:(?!\\1).)+)\\1',\n                webpage, 'kaltura uiconf id', default=self._UICONF_ID,\n                group='id')\n\n        query = {\n            'wid': '_%s' % partner_id,\n            'uiconf_id': ui_id,\n            'flashvars[referenceId]': reference_id,\n        }\n\n        if self.LOGGED_IN:\n            kaltura_session = self._download_json(\n                '%s/player/kaltura_session/?reference_id=%s' % (self._API_BASE, reference_id),\n                video_id, 'Downloading kaltura session JSON',\n                'Unable to download kaltura session JSON', fatal=False,\n                headers={'Accept': 'application/json'})\n            if kaltura_session:\n                session = kaltura_session.get('session')\n                if session:\n                    query['flashvars[ks]'] = session\n\n        return self.url_result(update_url_query(\n            'https://cdnapisec.kaltura.com/html5/html5lib/v2.37.1/mwEmbedFrame.php', query),\n            'Kaltura')\n\n\nclass SafariApiIE(SafariBaseIE):\n    IE_NAME = 'safari:api'\n    _VALID_URL = r'https?://(?:www\\.)?(?:safaribooksonline|(?:learning\\.)?oreilly)\\.com/api/v1/book/(?P<course_id>[^/]+)/chapter(?:-content)?/(?P<part>[^/?#&]+)\\.html'\n\n    _TESTS = [{\n        'url': 'https://www.safaribooksonline.com/api/v1/book/9780133392838/chapter/part00.html',\n        'only_matching': True,\n    }, {\n        'url': 'https://www.safaribooksonline.com/api/v1/book/9780134664057/chapter/RHCE_Introduction.html',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        mobj = re.match(self._VALID_URL, url)\n        part = self._download_json(\n            url, '%s/%s' % (mobj.group('course_id'), mobj.group('part')),\n            'Downloading part JSON')\n        return self.url_result(part['web_url'], SafariIE.ie_key())\n\n\nclass SafariCourseIE(SafariBaseIE):\n    IE_NAME = 'safari:course'\n    IE_DESC = 'safaribooksonline.com online courses'\n\n    _VALID_URL = r'''(?x)\n                    https?://\n                        (?:\n                            (?:www\\.)?(?:safaribooksonline|(?:learning\\.)?oreilly)\\.com/\n                            (?:\n                                library/view/[^/]+|\n                                api/v1/book|\n                                videos/[^/]+\n                            )|\n                            techbus\\.safaribooksonline\\.com\n                        )\n                        /(?P<id>[^/]+)\n                    '''\n\n    _TESTS = [{\n        'url': 'https://www.safaribooksonline.com/library/view/hadoop-fundamentals-livelessons/9780133392838/',\n        'info_dict': {\n            'id': '9780133392838',\n            'title': 'Hadoop Fundamentals LiveLessons',\n        },\n        'playlist_count': 22,\n        'skip': 'Requires safaribooksonline account credentials',\n    }, {\n        'url': 'https://www.safaribooksonline.com/api/v1/book/9781449396459/?override_format=json',\n        'only_matching': True,\n    }, {\n        'url': 'http://techbus.safaribooksonline.com/9780134426365',\n        'only_matching': True,\n    }, {\n        'url': 'https://www.safaribooksonline.com/videos/python-programming-language/9780134217314',\n        'only_matching': True,\n    }, {\n        'url': 'https://learning.oreilly.com/videos/hadoop-fundamentals-livelessons/9780133392838',\n        'only_matching': True,\n    }, {\n        'url': 'https://www.oreilly.com/library/view/hadoop-fundamentals-livelessons/9780133392838/',\n        'only_matching': True,\n    }]\n\n    @classmethod\n    def suitable(cls, url):\n        return (False if SafariIE.suitable(url) or SafariApiIE.suitable(url)\n                else super(SafariCourseIE, cls).suitable(url))\n\n    def _real_extract(self, url):\n        course_id = self._match_id(url)\n\n        course_json = self._download_json(\n            '%s/book/%s/?override_format=%s' % (self._API_BASE, course_id, self._API_FORMAT),\n            course_id, 'Downloading course JSON')\n\n        if 'chapters' not in course_json:\n            raise ExtractorError(\n                'No chapters found for course %s' % course_id, expected=True)\n\n        entries = [\n            self.url_result(chapter, SafariApiIE.ie_key())\n            for chapter in course_json['chapters']]\n\n        course_title = course_json['title']\n\n        return self.playlist_result(entries, course_id, course_title)\n\n# Unit test for constructor of class SafariIE\ndef test_SafariIE():"}], "max_tokens": 200, "temperature": 0.0, "stop": ["\n# Unit test for", "\ndef ", "\nclass "]}

---- 2024-03-18 09:21:16.647062
{"model": "gpt-4-1106-preview", "messages": [{"role": "user", "content": "Complete the following unit test function. Only write the completion; do NOT rewrite the function. Do NOT include any comments or description.\n# coding: utf-8\nfrom __future__ import unicode_literals\n\nimport json\nimport re\n\nfrom .common import InfoExtractor\n\nfrom ..compat import (\n    compat_parse_qs,\n    compat_urlparse,\n)\nfrom ..utils import (\n    ExtractorError,\n    update_url_query,\n)\n\n\nclass SafariBaseIE(InfoExtractor):\n    _LOGIN_URL = 'https://learning.oreilly.com/accounts/login/'\n    _NETRC_MACHINE = 'safari'\n\n    _API_BASE = 'https://learning.oreilly.com/api/v1'\n    _API_FORMAT = 'json'\n\n    LOGGED_IN = False\n\n    def _real_initialize(self):\n        self._login()\n\n    def _login(self):\n        username, password = self._get_login_info()\n        if username is None:\n            return\n\n        _, urlh = self._download_webpage_handle(\n            'https://learning.oreilly.com/accounts/login-check/', None,\n            'Downloading login page')\n\n        def is_logged(urlh):\n            return 'learning.oreilly.com/home/' in urlh.geturl()\n\n        if is_logged(urlh):\n            self.LOGGED_IN = True\n            return\n\n        redirect_url = urlh.geturl()\n        parsed_url = compat_urlparse.urlparse(redirect_url)\n        qs = compat_parse_qs(parsed_url.query)\n        next_uri = compat_urlparse.urljoin(\n            'https://api.oreilly.com', qs['next'][0])\n\n        auth, urlh = self._download_json_handle(\n            'https://www.oreilly.com/member/auth/login/', None, 'Logging in',\n            data=json.dumps({\n                'email': username,\n                'password': password,\n                'redirect_uri': next_uri,\n            }).encode(), headers={\n                'Content-Type': 'application/json',\n                'Referer': redirect_url,\n            }, expected_status=400)\n\n        credentials = auth.get('credentials')\n        if (not auth.get('logged_in') and not auth.get('redirect_uri')\n                and credentials):\n            raise ExtractorError(\n                'Unable to login: %s' % credentials, expected=True)\n\n        # oreilly serves two same instances of the following cookies\n        # in Set-Cookie header and expects first one to be actually set\n        for cookie in ('groot_sessionid', 'orm-jwt', 'orm-rt'):\n            self._apply_first_set_cookie_header(urlh, cookie)\n\n        _, urlh = self._download_webpage_handle(\n            auth.get('redirect_uri') or next_uri, None, 'Completing login',)\n\n        if is_logged(urlh):\n            self.LOGGED_IN = True\n            return\n\n        raise ExtractorError('Unable to log in')\n\n\nclass SafariIE(SafariBaseIE):\n    IE_NAME = 'safari'\n    IE_DESC = 'safaribooksonline.com online video'\n    _VALID_URL = r'''(?x)\n                        https?://\n                            (?:www\\.)?(?:safaribooksonline|(?:learning\\.)?oreilly)\\.com/\n                            (?:\n                                library/view/[^/]+/(?P<course_id>[^/]+)/(?P<part>[^/?\\#&]+)\\.html|\n                                videos/[^/]+/[^/]+/(?P<reference_id>[^-]+-[^/?\\#&]+)\n                            )\n                    '''\n\n    _TESTS = [{\n        'url': 'https://www.safaribooksonline.com/library/view/hadoop-fundamentals-livelessons/9780133392838/part00.html',\n        'md5': 'dcc5a425e79f2564148652616af1f2a3',\n        'info_dict': {\n            'id': '0_qbqx90ic',\n            'ext': 'mp4',\n            'title': 'Introduction to Hadoop Fundamentals LiveLessons',\n            'timestamp': 1437758058,\n            'upload_date': '20150724',\n            'uploader_id': 'stork',\n        },\n    }, {\n        # non-digits in course id\n        'url': 'https://www.safaribooksonline.com/library/view/create-a-nodejs/100000006A0210/part00.html',\n        'only_matching': True,\n    }, {\n        'url': 'https://www.safaribooksonline.com/library/view/learning-path-red/9780134664057/RHCE_Introduction.html',\n        'only_matching': True,\n    }, {\n        'url': 'https://www.safaribooksonline.com/videos/python-programming-language/9780134217314/9780134217314-PYMC_13_00',\n        'only_matching': True,\n    }, {\n        'url': 'https://learning.oreilly.com/videos/hadoop-fundamentals-livelessons/9780133392838/9780133392838-00_SeriesIntro',\n        'only_matching': True,\n    }, {\n        'url': 'https://www.oreilly.com/library/view/hadoop-fundamentals-livelessons/9780133392838/00_SeriesIntro.html',\n        'only_matching': True,\n    }]\n\n    _PARTNER_ID = '1926081'\n    _UICONF_ID = '29375172'\n\n    def _real_extract(self, url):\n        mobj = re.match(self._VALID_URL, url)\n\n        reference_id = mobj.group('reference_id')\n        if reference_id:\n            video_id = reference_id\n            partner_id = self._PARTNER_ID\n            ui_id = self._UICONF_ID\n        else:\n            video_id = '%s-%s' % (mobj.group('course_id'), mobj.group('part'))\n\n            webpage, urlh = self._download_webpage_handle(url, video_id)\n\n            mobj = re.match(self._VALID_URL, urlh.geturl())\n            reference_id = mobj.group('reference_id')\n            if not reference_id:\n                reference_id = self._search_regex(\n                    r'data-reference-id=([\"\\'])(?P<id>(?:(?!\\1).)+)\\1',\n                    webpage, 'kaltura reference id', group='id')\n            partner_id = self._search_regex(\n                r'data-partner-id=([\"\\'])(?P<id>(?:(?!\\1).)+)\\1',\n                webpage, 'kaltura widget id', default=self._PARTNER_ID,\n                group='id')\n            ui_id = self._search_regex(\n                r'data-ui-id=([\"\\'])(?P<id>(?:(?!\\1).)+)\\1',\n                webpage, 'kaltura uiconf id', default=self._UICONF_ID,\n                group='id')\n\n        query = {\n            'wid': '_%s' % partner_id,\n            'uiconf_id': ui_id,\n            'flashvars[referenceId]': reference_id,\n        }\n\n        if self.LOGGED_IN:\n            kaltura_session = self._download_json(\n                '%s/player/kaltura_session/?reference_id=%s' % (self._API_BASE, reference_id),\n                video_id, 'Downloading kaltura session JSON',\n                'Unable to download kaltura session JSON', fatal=False,\n                headers={'Accept': 'application/json'})\n            if kaltura_session:\n                session = kaltura_session.get('session')\n                if session:\n                    query['flashvars[ks]'] = session\n\n        return self.url_result(update_url_query(\n            'https://cdnapisec.kaltura.com/html5/html5lib/v2.37.1/mwEmbedFrame.php', query),\n            'Kaltura')\n\n\nclass SafariApiIE(SafariBaseIE):\n    IE_NAME = 'safari:api'\n    _VALID_URL = r'https?://(?:www\\.)?(?:safaribooksonline|(?:learning\\.)?oreilly)\\.com/api/v1/book/(?P<course_id>[^/]+)/chapter(?:-content)?/(?P<part>[^/?#&]+)\\.html'\n\n    _TESTS = [{\n        'url': 'https://www.safaribooksonline.com/api/v1/book/9780133392838/chapter/part00.html',\n        'only_matching': True,\n    }, {\n        'url': 'https://www.safaribooksonline.com/api/v1/book/9780134664057/chapter/RHCE_Introduction.html',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        mobj = re.match(self._VALID_URL, url)\n        part = self._download_json(\n            url, '%s/%s' % (mobj.group('course_id'), mobj.group('part')),\n            'Downloading part JSON')\n        return self.url_result(part['web_url'], SafariIE.ie_key())\n\n\nclass SafariCourseIE(SafariBaseIE):\n    IE_NAME = 'safari:course'\n    IE_DESC = 'safaribooksonline.com online courses'\n\n    _VALID_URL = r'''(?x)\n                    https?://\n                        (?:\n                            (?:www\\.)?(?:safaribooksonline|(?:learning\\.)?oreilly)\\.com/\n                            (?:\n                                library/view/[^/]+|\n                                api/v1/book|\n                                videos/[^/]+\n                            )|\n                            techbus\\.safaribooksonline\\.com\n                        )\n                        /(?P<id>[^/]+)\n                    '''\n\n    _TESTS = [{\n        'url': 'https://www.safaribooksonline.com/library/view/hadoop-fundamentals-livelessons/9780133392838/',\n        'info_dict': {\n            'id': '9780133392838',\n            'title': 'Hadoop Fundamentals LiveLessons',\n        },\n        'playlist_count': 22,\n        'skip': 'Requires safaribooksonline account credentials',\n    }, {\n        'url': 'https://www.safaribooksonline.com/api/v1/book/9781449396459/?override_format=json',\n        'only_matching': True,\n    }, {\n        'url': 'http://techbus.safaribooksonline.com/9780134426365',\n        'only_matching': True,\n    }, {\n        'url': 'https://www.safaribooksonline.com/videos/python-programming-language/9780134217314',\n        'only_matching': True,\n    }, {\n        'url': 'https://learning.oreilly.com/videos/hadoop-fundamentals-livelessons/9780133392838',\n        'only_matching': True,\n    }, {\n        'url': 'https://www.oreilly.com/library/view/hadoop-fundamentals-livelessons/9780133392838/',\n        'only_matching': True,\n    }]\n\n    @classmethod\n    def suitable(cls, url):\n        return (False if SafariIE.suitable(url) or SafariApiIE.suitable(url)\n                else super(SafariCourseIE, cls).suitable(url))\n\n    def _real_extract(self, url):\n        course_id = self._match_id(url)\n\n        course_json = self._download_json(\n            '%s/book/%s/?override_format=%s' % (self._API_BASE, course_id, self._API_FORMAT),\n            course_id, 'Downloading course JSON')\n\n        if 'chapters' not in course_json:\n            raise ExtractorError(\n                'No chapters found for course %s' % course_id, expected=True)\n\n        entries = [\n            self.url_result(chapter, SafariApiIE.ie_key())\n            for chapter in course_json['chapters']]\n\n        course_title = course_json['title']\n\n        return self.playlist_result(entries, course_id, course_title)\n\n# Unit test for constructor of class SafariBaseIE\ndef test_SafariBaseIE():"}], "max_tokens": 200, "temperature": 0.0, "stop": ["\n# Unit test for", "\ndef ", "\nclass "]}

---- 2024-03-18 09:21:23.661867
{"model": "gpt-4-1106-preview", "messages": [{"role": "user", "content": "Complete the following unit test function. Only write the completion; do NOT rewrite the function. Do NOT include any comments or description.\n# coding: utf-8\nfrom __future__ import unicode_literals\n\nimport json\nimport re\n\nfrom .common import InfoExtractor\n\nfrom ..compat import (\n    compat_parse_qs,\n    compat_urlparse,\n)\nfrom ..utils import (\n    ExtractorError,\n    update_url_query,\n)\n\n\nclass SafariBaseIE(InfoExtractor):\n    _LOGIN_URL = 'https://learning.oreilly.com/accounts/login/'\n    _NETRC_MACHINE = 'safari'\n\n    _API_BASE = 'https://learning.oreilly.com/api/v1'\n    _API_FORMAT = 'json'\n\n    LOGGED_IN = False\n\n    def _real_initialize(self):\n        self._login()\n\n    def _login(self):\n        username, password = self._get_login_info()\n        if username is None:\n            return\n\n        _, urlh = self._download_webpage_handle(\n            'https://learning.oreilly.com/accounts/login-check/', None,\n            'Downloading login page')\n\n        def is_logged(urlh):\n            return 'learning.oreilly.com/home/' in urlh.geturl()\n\n        if is_logged(urlh):\n            self.LOGGED_IN = True\n            return\n\n        redirect_url = urlh.geturl()\n        parsed_url = compat_urlparse.urlparse(redirect_url)\n        qs = compat_parse_qs(parsed_url.query)\n        next_uri = compat_urlparse.urljoin(\n            'https://api.oreilly.com', qs['next'][0])\n\n        auth, urlh = self._download_json_handle(\n            'https://www.oreilly.com/member/auth/login/', None, 'Logging in',\n            data=json.dumps({\n                'email': username,\n                'password': password,\n                'redirect_uri': next_uri,\n            }).encode(), headers={\n                'Content-Type': 'application/json',\n                'Referer': redirect_url,\n            }, expected_status=400)\n\n        credentials = auth.get('credentials')\n        if (not auth.get('logged_in') and not auth.get('redirect_uri')\n                and credentials):\n            raise ExtractorError(\n                'Unable to login: %s' % credentials, expected=True)\n\n        # oreilly serves two same instances of the following cookies\n        # in Set-Cookie header and expects first one to be actually set\n        for cookie in ('groot_sessionid', 'orm-jwt', 'orm-rt'):\n            self._apply_first_set_cookie_header(urlh, cookie)\n\n        _, urlh = self._download_webpage_handle(\n            auth.get('redirect_uri') or next_uri, None, 'Completing login',)\n\n        if is_logged(urlh):\n            self.LOGGED_IN = True\n            return\n\n        raise ExtractorError('Unable to log in')\n\n\nclass SafariIE(SafariBaseIE):\n    IE_NAME = 'safari'\n    IE_DESC = 'safaribooksonline.com online video'\n    _VALID_URL = r'''(?x)\n                        https?://\n                            (?:www\\.)?(?:safaribooksonline|(?:learning\\.)?oreilly)\\.com/\n                            (?:\n                                library/view/[^/]+/(?P<course_id>[^/]+)/(?P<part>[^/?\\#&]+)\\.html|\n                                videos/[^/]+/[^/]+/(?P<reference_id>[^-]+-[^/?\\#&]+)\n                            )\n                    '''\n\n    _TESTS = [{\n        'url': 'https://www.safaribooksonline.com/library/view/hadoop-fundamentals-livelessons/9780133392838/part00.html',\n        'md5': 'dcc5a425e79f2564148652616af1f2a3',\n        'info_dict': {\n            'id': '0_qbqx90ic',\n            'ext': 'mp4',\n            'title': 'Introduction to Hadoop Fundamentals LiveLessons',\n            'timestamp': 1437758058,\n            'upload_date': '20150724',\n            'uploader_id': 'stork',\n        },\n    }, {\n        # non-digits in course id\n        'url': 'https://www.safaribooksonline.com/library/view/create-a-nodejs/100000006A0210/part00.html',\n        'only_matching': True,\n    }, {\n        'url': 'https://www.safaribooksonline.com/library/view/learning-path-red/9780134664057/RHCE_Introduction.html',\n        'only_matching': True,\n    }, {\n        'url': 'https://www.safaribooksonline.com/videos/python-programming-language/9780134217314/9780134217314-PYMC_13_00',\n        'only_matching': True,\n    }, {\n        'url': 'https://learning.oreilly.com/videos/hadoop-fundamentals-livelessons/9780133392838/9780133392838-00_SeriesIntro',\n        'only_matching': True,\n    }, {\n        'url': 'https://www.oreilly.com/library/view/hadoop-fundamentals-livelessons/9780133392838/00_SeriesIntro.html',\n        'only_matching': True,\n    }]\n\n    _PARTNER_ID = '1926081'\n    _UICONF_ID = '29375172'\n\n    def _real_extract(self, url):\n        mobj = re.match(self._VALID_URL, url)\n\n        reference_id = mobj.group('reference_id')\n        if reference_id:\n            video_id = reference_id\n            partner_id = self._PARTNER_ID\n            ui_id = self._UICONF_ID\n        else:\n            video_id = '%s-%s' % (mobj.group('course_id'), mobj.group('part'))\n\n            webpage, urlh = self._download_webpage_handle(url, video_id)\n\n            mobj = re.match(self._VALID_URL, urlh.geturl())\n            reference_id = mobj.group('reference_id')\n            if not reference_id:\n                reference_id = self._search_regex(\n                    r'data-reference-id=([\"\\'])(?P<id>(?:(?!\\1).)+)\\1',\n                    webpage, 'kaltura reference id', group='id')\n            partner_id = self._search_regex(\n                r'data-partner-id=([\"\\'])(?P<id>(?:(?!\\1).)+)\\1',\n                webpage, 'kaltura widget id', default=self._PARTNER_ID,\n                group='id')\n            ui_id = self._search_regex(\n                r'data-ui-id=([\"\\'])(?P<id>(?:(?!\\1).)+)\\1',\n                webpage, 'kaltura uiconf id', default=self._UICONF_ID,\n                group='id')\n\n        query = {\n            'wid': '_%s' % partner_id,\n            'uiconf_id': ui_id,\n            'flashvars[referenceId]': reference_id,\n        }\n\n        if self.LOGGED_IN:\n            kaltura_session = self._download_json(\n                '%s/player/kaltura_session/?reference_id=%s' % (self._API_BASE, reference_id),\n                video_id, 'Downloading kaltura session JSON',\n                'Unable to download kaltura session JSON', fatal=False,\n                headers={'Accept': 'application/json'})\n            if kaltura_session:\n                session = kaltura_session.get('session')\n                if session:\n                    query['flashvars[ks]'] = session\n\n        return self.url_result(update_url_query(\n            'https://cdnapisec.kaltura.com/html5/html5lib/v2.37.1/mwEmbedFrame.php', query),\n            'Kaltura')\n\n\nclass SafariApiIE(SafariBaseIE):\n    IE_NAME = 'safari:api'\n    _VALID_URL = r'https?://(?:www\\.)?(?:safaribooksonline|(?:learning\\.)?oreilly)\\.com/api/v1/book/(?P<course_id>[^/]+)/chapter(?:-content)?/(?P<part>[^/?#&]+)\\.html'\n\n    _TESTS = [{\n        'url': 'https://www.safaribooksonline.com/api/v1/book/9780133392838/chapter/part00.html',\n        'only_matching': True,\n    }, {\n        'url': 'https://www.safaribooksonline.com/api/v1/book/9780134664057/chapter/RHCE_Introduction.html',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        mobj = re.match(self._VALID_URL, url)\n        part = self._download_json(\n            url, '%s/%s' % (mobj.group('course_id'), mobj.group('part')),\n            'Downloading part JSON')\n        return self.url_result(part['web_url'], SafariIE.ie_key())\n\n\nclass SafariCourseIE(SafariBaseIE):\n    IE_NAME = 'safari:course'\n    IE_DESC = 'safaribooksonline.com online courses'\n\n    _VALID_URL = r'''(?x)\n                    https?://\n                        (?:\n                            (?:www\\.)?(?:safaribooksonline|(?:learning\\.)?oreilly)\\.com/\n                            (?:\n                                library/view/[^/]+|\n                                api/v1/book|\n                                videos/[^/]+\n                            )|\n                            techbus\\.safaribooksonline\\.com\n                        )\n                        /(?P<id>[^/]+)\n                    '''\n\n    _TESTS = [{\n        'url': 'https://www.safaribooksonline.com/library/view/hadoop-fundamentals-livelessons/9780133392838/',\n        'info_dict': {\n            'id': '9780133392838',\n            'title': 'Hadoop Fundamentals LiveLessons',\n        },\n        'playlist_count': 22,\n        'skip': 'Requires safaribooksonline account credentials',\n    }, {\n        'url': 'https://www.safaribooksonline.com/api/v1/book/9781449396459/?override_format=json',\n        'only_matching': True,\n    }, {\n        'url': 'http://techbus.safaribooksonline.com/9780134426365',\n        'only_matching': True,\n    }, {\n        'url': 'https://www.safaribooksonline.com/videos/python-programming-language/9780134217314',\n        'only_matching': True,\n    }, {\n        'url': 'https://learning.oreilly.com/videos/hadoop-fundamentals-livelessons/9780133392838',\n        'only_matching': True,\n    }, {\n        'url': 'https://www.oreilly.com/library/view/hadoop-fundamentals-livelessons/9780133392838/',\n        'only_matching': True,\n    }]\n\n    @classmethod\n    def suitable(cls, url):\n        return (False if SafariIE.suitable(url) or SafariApiIE.suitable(url)\n                else super(SafariCourseIE, cls).suitable(url))\n\n    def _real_extract(self, url):\n        course_id = self._match_id(url)\n\n        course_json = self._download_json(\n            '%s/book/%s/?override_format=%s' % (self._API_BASE, course_id, self._API_FORMAT),\n            course_id, 'Downloading course JSON')\n\n        if 'chapters' not in course_json:\n            raise ExtractorError(\n                'No chapters found for course %s' % course_id, expected=True)\n\n        entries = [\n            self.url_result(chapter, SafariApiIE.ie_key())\n            for chapter in course_json['chapters']]\n\n        course_title = course_json['title']\n\n        return self.playlist_result(entries, course_id, course_title)\n\n# Unit test for constructor of class SafariIE\ndef test_SafariIE():"}], "max_tokens": 200, "temperature": 0.0, "stop": ["\n# Unit test for", "\ndef ", "\nclass "]}

---- 2024-03-18 09:21:29.842185
{"model": "gpt-4-1106-preview", "messages": [{"role": "user", "content": "Complete the following unit test function. Only write the completion; do NOT rewrite the function. Do NOT include any comments or description.\n# coding: utf-8\nfrom __future__ import unicode_literals\n\nimport json\nimport re\n\nfrom .common import InfoExtractor\n\nfrom ..compat import (\n    compat_parse_qs,\n    compat_urlparse,\n)\nfrom ..utils import (\n    ExtractorError,\n    update_url_query,\n)\n\n\nclass SafariBaseIE(InfoExtractor):\n    _LOGIN_URL = 'https://learning.oreilly.com/accounts/login/'\n    _NETRC_MACHINE = 'safari'\n\n    _API_BASE = 'https://learning.oreilly.com/api/v1'\n    _API_FORMAT = 'json'\n\n    LOGGED_IN = False\n\n    def _real_initialize(self):\n        self._login()\n\n    def _login(self):\n        username, password = self._get_login_info()\n        if username is None:\n            return\n\n        _, urlh = self._download_webpage_handle(\n            'https://learning.oreilly.com/accounts/login-check/', None,\n            'Downloading login page')\n\n        def is_logged(urlh):\n            return 'learning.oreilly.com/home/' in urlh.geturl()\n\n        if is_logged(urlh):\n            self.LOGGED_IN = True\n            return\n\n        redirect_url = urlh.geturl()\n        parsed_url = compat_urlparse.urlparse(redirect_url)\n        qs = compat_parse_qs(parsed_url.query)\n        next_uri = compat_urlparse.urljoin(\n            'https://api.oreilly.com', qs['next'][0])\n\n        auth, urlh = self._download_json_handle(\n            'https://www.oreilly.com/member/auth/login/', None, 'Logging in',\n            data=json.dumps({\n                'email': username,\n                'password': password,\n                'redirect_uri': next_uri,\n            }).encode(), headers={\n                'Content-Type': 'application/json',\n                'Referer': redirect_url,\n            }, expected_status=400)\n\n        credentials = auth.get('credentials')\n        if (not auth.get('logged_in') and not auth.get('redirect_uri')\n                and credentials):\n            raise ExtractorError(\n                'Unable to login: %s' % credentials, expected=True)\n\n        # oreilly serves two same instances of the following cookies\n        # in Set-Cookie header and expects first one to be actually set\n        for cookie in ('groot_sessionid', 'orm-jwt', 'orm-rt'):\n            self._apply_first_set_cookie_header(urlh, cookie)\n\n        _, urlh = self._download_webpage_handle(\n            auth.get('redirect_uri') or next_uri, None, 'Completing login',)\n\n        if is_logged(urlh):\n            self.LOGGED_IN = True\n            return\n\n        raise ExtractorError('Unable to log in')\n\n\nclass SafariIE(SafariBaseIE):\n    IE_NAME = 'safari'\n    IE_DESC = 'safaribooksonline.com online video'\n    _VALID_URL = r'''(?x)\n                        https?://\n                            (?:www\\.)?(?:safaribooksonline|(?:learning\\.)?oreilly)\\.com/\n                            (?:\n                                library/view/[^/]+/(?P<course_id>[^/]+)/(?P<part>[^/?\\#&]+)\\.html|\n                                videos/[^/]+/[^/]+/(?P<reference_id>[^-]+-[^/?\\#&]+)\n                            )\n                    '''\n\n    _TESTS = [{\n        'url': 'https://www.safaribooksonline.com/library/view/hadoop-fundamentals-livelessons/9780133392838/part00.html',\n        'md5': 'dcc5a425e79f2564148652616af1f2a3',\n        'info_dict': {\n            'id': '0_qbqx90ic',\n            'ext': 'mp4',\n            'title': 'Introduction to Hadoop Fundamentals LiveLessons',\n            'timestamp': 1437758058,\n            'upload_date': '20150724',\n            'uploader_id': 'stork',\n        },\n    }, {\n        # non-digits in course id\n        'url': 'https://www.safaribooksonline.com/library/view/create-a-nodejs/100000006A0210/part00.html',\n        'only_matching': True,\n    }, {\n        'url': 'https://www.safaribooksonline.com/library/view/learning-path-red/9780134664057/RHCE_Introduction.html',\n        'only_matching': True,\n    }, {\n        'url': 'https://www.safaribooksonline.com/videos/python-programming-language/9780134217314/9780134217314-PYMC_13_00',\n        'only_matching': True,\n    }, {\n        'url': 'https://learning.oreilly.com/videos/hadoop-fundamentals-livelessons/9780133392838/9780133392838-00_SeriesIntro',\n        'only_matching': True,\n    }, {\n        'url': 'https://www.oreilly.com/library/view/hadoop-fundamentals-livelessons/9780133392838/00_SeriesIntro.html',\n        'only_matching': True,\n    }]\n\n    _PARTNER_ID = '1926081'\n    _UICONF_ID = '29375172'\n\n    def _real_extract(self, url):\n        mobj = re.match(self._VALID_URL, url)\n\n        reference_id = mobj.group('reference_id')\n        if reference_id:\n            video_id = reference_id\n            partner_id = self._PARTNER_ID\n            ui_id = self._UICONF_ID\n        else:\n            video_id = '%s-%s' % (mobj.group('course_id'), mobj.group('part'))\n\n            webpage, urlh = self._download_webpage_handle(url, video_id)\n\n            mobj = re.match(self._VALID_URL, urlh.geturl())\n            reference_id = mobj.group('reference_id')\n            if not reference_id:\n                reference_id = self._search_regex(\n                    r'data-reference-id=([\"\\'])(?P<id>(?:(?!\\1).)+)\\1',\n                    webpage, 'kaltura reference id', group='id')\n            partner_id = self._search_regex(\n                r'data-partner-id=([\"\\'])(?P<id>(?:(?!\\1).)+)\\1',\n                webpage, 'kaltura widget id', default=self._PARTNER_ID,\n                group='id')\n            ui_id = self._search_regex(\n                r'data-ui-id=([\"\\'])(?P<id>(?:(?!\\1).)+)\\1',\n                webpage, 'kaltura uiconf id', default=self._UICONF_ID,\n                group='id')\n\n        query = {\n            'wid': '_%s' % partner_id,\n            'uiconf_id': ui_id,\n            'flashvars[referenceId]': reference_id,\n        }\n\n        if self.LOGGED_IN:\n            kaltura_session = self._download_json(\n                '%s/player/kaltura_session/?reference_id=%s' % (self._API_BASE, reference_id),\n                video_id, 'Downloading kaltura session JSON',\n                'Unable to download kaltura session JSON', fatal=False,\n                headers={'Accept': 'application/json'})\n            if kaltura_session:\n                session = kaltura_session.get('session')\n                if session:\n                    query['flashvars[ks]'] = session\n\n        return self.url_result(update_url_query(\n            'https://cdnapisec.kaltura.com/html5/html5lib/v2.37.1/mwEmbedFrame.php', query),\n            'Kaltura')\n\n\nclass SafariApiIE(SafariBaseIE):\n    IE_NAME = 'safari:api'\n    _VALID_URL = r'https?://(?:www\\.)?(?:safaribooksonline|(?:learning\\.)?oreilly)\\.com/api/v1/book/(?P<course_id>[^/]+)/chapter(?:-content)?/(?P<part>[^/?#&]+)\\.html'\n\n    _TESTS = [{\n        'url': 'https://www.safaribooksonline.com/api/v1/book/9780133392838/chapter/part00.html',\n        'only_matching': True,\n    }, {\n        'url': 'https://www.safaribooksonline.com/api/v1/book/9780134664057/chapter/RHCE_Introduction.html',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        mobj = re.match(self._VALID_URL, url)\n        part = self._download_json(\n            url, '%s/%s' % (mobj.group('course_id'), mobj.group('part')),\n            'Downloading part JSON')\n        return self.url_result(part['web_url'], SafariIE.ie_key())\n\n\nclass SafariCourseIE(SafariBaseIE):\n    IE_NAME = 'safari:course'\n    IE_DESC = 'safaribooksonline.com online courses'\n\n    _VALID_URL = r'''(?x)\n                    https?://\n                        (?:\n                            (?:www\\.)?(?:safaribooksonline|(?:learning\\.)?oreilly)\\.com/\n                            (?:\n                                library/view/[^/]+|\n                                api/v1/book|\n                                videos/[^/]+\n                            )|\n                            techbus\\.safaribooksonline\\.com\n                        )\n                        /(?P<id>[^/]+)\n                    '''\n\n    _TESTS = [{\n        'url': 'https://www.safaribooksonline.com/library/view/hadoop-fundamentals-livelessons/9780133392838/',\n        'info_dict': {\n            'id': '9780133392838',\n            'title': 'Hadoop Fundamentals LiveLessons',\n        },\n        'playlist_count': 22,\n        'skip': 'Requires safaribooksonline account credentials',\n    }, {\n        'url': 'https://www.safaribooksonline.com/api/v1/book/9781449396459/?override_format=json',\n        'only_matching': True,\n    }, {\n        'url': 'http://techbus.safaribooksonline.com/9780134426365',\n        'only_matching': True,\n    }, {\n        'url': 'https://www.safaribooksonline.com/videos/python-programming-language/9780134217314',\n        'only_matching': True,\n    }, {\n        'url': 'https://learning.oreilly.com/videos/hadoop-fundamentals-livelessons/9780133392838',\n        'only_matching': True,\n    }, {\n        'url': 'https://www.oreilly.com/library/view/hadoop-fundamentals-livelessons/9780133392838/',\n        'only_matching': True,\n    }]\n\n    @classmethod\n    def suitable(cls, url):\n        return (False if SafariIE.suitable(url) or SafariApiIE.suitable(url)\n                else super(SafariCourseIE, cls).suitable(url))\n\n    def _real_extract(self, url):\n        course_id = self._match_id(url)\n\n        course_json = self._download_json(\n            '%s/book/%s/?override_format=%s' % (self._API_BASE, course_id, self._API_FORMAT),\n            course_id, 'Downloading course JSON')\n\n        if 'chapters' not in course_json:\n            raise ExtractorError(\n                'No chapters found for course %s' % course_id, expected=True)\n\n        entries = [\n            self.url_result(chapter, SafariApiIE.ie_key())\n            for chapter in course_json['chapters']]\n\n        course_title = course_json['title']\n\n        return self.playlist_result(entries, course_id, course_title)\n\n# Unit test for constructor of class SafariCourseIE\ndef test_SafariCourseIE():"}], "max_tokens": 200, "temperature": 0.0, "stop": ["\n# Unit test for", "\ndef ", "\nclass "]}

---- 2024-03-18 09:21:37.758355
{"model": "gpt-4-1106-preview", "messages": [{"role": "user", "content": "Complete the following unit test function. Only write the completion; do NOT rewrite the function. Do NOT include any comments or description.\n# coding: utf-8\nfrom __future__ import unicode_literals\n\nimport json\nimport re\n\nfrom .common import InfoExtractor\n\nfrom ..compat import (\n    compat_parse_qs,\n    compat_urlparse,\n)\nfrom ..utils import (\n    ExtractorError,\n    update_url_query,\n)\n\n\nclass SafariBaseIE(InfoExtractor):\n    _LOGIN_URL = 'https://learning.oreilly.com/accounts/login/'\n    _NETRC_MACHINE = 'safari'\n\n    _API_BASE = 'https://learning.oreilly.com/api/v1'\n    _API_FORMAT = 'json'\n\n    LOGGED_IN = False\n\n    def _real_initialize(self):\n        self._login()\n\n    def _login(self):\n        username, password = self._get_login_info()\n        if username is None:\n            return\n\n        _, urlh = self._download_webpage_handle(\n            'https://learning.oreilly.com/accounts/login-check/', None,\n            'Downloading login page')\n\n        def is_logged(urlh):\n            return 'learning.oreilly.com/home/' in urlh.geturl()\n\n        if is_logged(urlh):\n            self.LOGGED_IN = True\n            return\n\n        redirect_url = urlh.geturl()\n        parsed_url = compat_urlparse.urlparse(redirect_url)\n        qs = compat_parse_qs(parsed_url.query)\n        next_uri = compat_urlparse.urljoin(\n            'https://api.oreilly.com', qs['next'][0])\n\n        auth, urlh = self._download_json_handle(\n            'https://www.oreilly.com/member/auth/login/', None, 'Logging in',\n            data=json.dumps({\n                'email': username,\n                'password': password,\n                'redirect_uri': next_uri,\n            }).encode(), headers={\n                'Content-Type': 'application/json',\n                'Referer': redirect_url,\n            }, expected_status=400)\n\n        credentials = auth.get('credentials')\n        if (not auth.get('logged_in') and not auth.get('redirect_uri')\n                and credentials):\n            raise ExtractorError(\n                'Unable to login: %s' % credentials, expected=True)\n\n        # oreilly serves two same instances of the following cookies\n        # in Set-Cookie header and expects first one to be actually set\n        for cookie in ('groot_sessionid', 'orm-jwt', 'orm-rt'):\n            self._apply_first_set_cookie_header(urlh, cookie)\n\n        _, urlh = self._download_webpage_handle(\n            auth.get('redirect_uri') or next_uri, None, 'Completing login',)\n\n        if is_logged(urlh):\n            self.LOGGED_IN = True\n            return\n\n        raise ExtractorError('Unable to log in')\n\n\nclass SafariIE(SafariBaseIE):\n    IE_NAME = 'safari'\n    IE_DESC = 'safaribooksonline.com online video'\n    _VALID_URL = r'''(?x)\n                        https?://\n                            (?:www\\.)?(?:safaribooksonline|(?:learning\\.)?oreilly)\\.com/\n                            (?:\n                                library/view/[^/]+/(?P<course_id>[^/]+)/(?P<part>[^/?\\#&]+)\\.html|\n                                videos/[^/]+/[^/]+/(?P<reference_id>[^-]+-[^/?\\#&]+)\n                            )\n                    '''\n\n    _TESTS = [{\n        'url': 'https://www.safaribooksonline.com/library/view/hadoop-fundamentals-livelessons/9780133392838/part00.html',\n        'md5': 'dcc5a425e79f2564148652616af1f2a3',\n        'info_dict': {\n            'id': '0_qbqx90ic',\n            'ext': 'mp4',\n            'title': 'Introduction to Hadoop Fundamentals LiveLessons',\n            'timestamp': 1437758058,\n            'upload_date': '20150724',\n            'uploader_id': 'stork',\n        },\n    }, {\n        # non-digits in course id\n        'url': 'https://www.safaribooksonline.com/library/view/create-a-nodejs/100000006A0210/part00.html',\n        'only_matching': True,\n    }, {\n        'url': 'https://www.safaribooksonline.com/library/view/learning-path-red/9780134664057/RHCE_Introduction.html',\n        'only_matching': True,\n    }, {\n        'url': 'https://www.safaribooksonline.com/videos/python-programming-language/9780134217314/9780134217314-PYMC_13_00',\n        'only_matching': True,\n    }, {\n        'url': 'https://learning.oreilly.com/videos/hadoop-fundamentals-livelessons/9780133392838/9780133392838-00_SeriesIntro',\n        'only_matching': True,\n    }, {\n        'url': 'https://www.oreilly.com/library/view/hadoop-fundamentals-livelessons/9780133392838/00_SeriesIntro.html',\n        'only_matching': True,\n    }]\n\n    _PARTNER_ID = '1926081'\n    _UICONF_ID = '29375172'\n\n    def _real_extract(self, url):\n        mobj = re.match(self._VALID_URL, url)\n\n        reference_id = mobj.group('reference_id')\n        if reference_id:\n            video_id = reference_id\n            partner_id = self._PARTNER_ID\n            ui_id = self._UICONF_ID\n        else:\n            video_id = '%s-%s' % (mobj.group('course_id'), mobj.group('part'))\n\n            webpage, urlh = self._download_webpage_handle(url, video_id)\n\n            mobj = re.match(self._VALID_URL, urlh.geturl())\n            reference_id = mobj.group('reference_id')\n            if not reference_id:\n                reference_id = self._search_regex(\n                    r'data-reference-id=([\"\\'])(?P<id>(?:(?!\\1).)+)\\1',\n                    webpage, 'kaltura reference id', group='id')\n            partner_id = self._search_regex(\n                r'data-partner-id=([\"\\'])(?P<id>(?:(?!\\1).)+)\\1',\n                webpage, 'kaltura widget id', default=self._PARTNER_ID,\n                group='id')\n            ui_id = self._search_regex(\n                r'data-ui-id=([\"\\'])(?P<id>(?:(?!\\1).)+)\\1',\n                webpage, 'kaltura uiconf id', default=self._UICONF_ID,\n                group='id')\n\n        query = {\n            'wid': '_%s' % partner_id,\n            'uiconf_id': ui_id,\n            'flashvars[referenceId]': reference_id,\n        }\n\n        if self.LOGGED_IN:\n            kaltura_session = self._download_json(\n                '%s/player/kaltura_session/?reference_id=%s' % (self._API_BASE, reference_id),\n                video_id, 'Downloading kaltura session JSON',\n                'Unable to download kaltura session JSON', fatal=False,\n                headers={'Accept': 'application/json'})\n            if kaltura_session:\n                session = kaltura_session.get('session')\n                if session:\n                    query['flashvars[ks]'] = session\n\n        return self.url_result(update_url_query(\n            'https://cdnapisec.kaltura.com/html5/html5lib/v2.37.1/mwEmbedFrame.php', query),\n            'Kaltura')\n\n\nclass SafariApiIE(SafariBaseIE):\n    IE_NAME = 'safari:api'\n    _VALID_URL = r'https?://(?:www\\.)?(?:safaribooksonline|(?:learning\\.)?oreilly)\\.com/api/v1/book/(?P<course_id>[^/]+)/chapter(?:-content)?/(?P<part>[^/?#&]+)\\.html'\n\n    _TESTS = [{\n        'url': 'https://www.safaribooksonline.com/api/v1/book/9780133392838/chapter/part00.html',\n        'only_matching': True,\n    }, {\n        'url': 'https://www.safaribooksonline.com/api/v1/book/9780134664057/chapter/RHCE_Introduction.html',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        mobj = re.match(self._VALID_URL, url)\n        part = self._download_json(\n            url, '%s/%s' % (mobj.group('course_id'), mobj.group('part')),\n            'Downloading part JSON')\n        return self.url_result(part['web_url'], SafariIE.ie_key())\n\n\nclass SafariCourseIE(SafariBaseIE):\n    IE_NAME = 'safari:course'\n    IE_DESC = 'safaribooksonline.com online courses'\n\n    _VALID_URL = r'''(?x)\n                    https?://\n                        (?:\n                            (?:www\\.)?(?:safaribooksonline|(?:learning\\.)?oreilly)\\.com/\n                            (?:\n                                library/view/[^/]+|\n                                api/v1/book|\n                                videos/[^/]+\n                            )|\n                            techbus\\.safaribooksonline\\.com\n                        )\n                        /(?P<id>[^/]+)\n                    '''\n\n    _TESTS = [{\n        'url': 'https://www.safaribooksonline.com/library/view/hadoop-fundamentals-livelessons/9780133392838/',\n        'info_dict': {\n            'id': '9780133392838',\n            'title': 'Hadoop Fundamentals LiveLessons',\n        },\n        'playlist_count': 22,\n        'skip': 'Requires safaribooksonline account credentials',\n    }, {\n        'url': 'https://www.safaribooksonline.com/api/v1/book/9781449396459/?override_format=json',\n        'only_matching': True,\n    }, {\n        'url': 'http://techbus.safaribooksonline.com/9780134426365',\n        'only_matching': True,\n    }, {\n        'url': 'https://www.safaribooksonline.com/videos/python-programming-language/9780134217314',\n        'only_matching': True,\n    }, {\n        'url': 'https://learning.oreilly.com/videos/hadoop-fundamentals-livelessons/9780133392838',\n        'only_matching': True,\n    }, {\n        'url': 'https://www.oreilly.com/library/view/hadoop-fundamentals-livelessons/9780133392838/',\n        'only_matching': True,\n    }]\n\n    @classmethod\n    def suitable(cls, url):\n        return (False if SafariIE.suitable(url) or SafariApiIE.suitable(url)\n                else super(SafariCourseIE, cls).suitable(url))\n\n    def _real_extract(self, url):\n        course_id = self._match_id(url)\n\n        course_json = self._download_json(\n            '%s/book/%s/?override_format=%s' % (self._API_BASE, course_id, self._API_FORMAT),\n            course_id, 'Downloading course JSON')\n\n        if 'chapters' not in course_json:\n            raise ExtractorError(\n                'No chapters found for course %s' % course_id, expected=True)\n\n        entries = [\n            self.url_result(chapter, SafariApiIE.ie_key())\n            for chapter in course_json['chapters']]\n\n        course_title = course_json['title']\n\n        return self.playlist_result(entries, course_id, course_title)\n\n# Unit test for constructor of class SafariApiIE\ndef test_SafariApiIE():"}], "max_tokens": 200, "temperature": 0.0, "stop": ["\n# Unit test for", "\ndef ", "\nclass "]}

---- 2024-03-18 09:21:47.861361
{"model": "gpt-4-1106-preview", "messages": [{"role": "user", "content": "Complete the following unit test function. Only write the completion; do NOT rewrite the function. Do NOT include any comments or description.\n# coding: utf-8\nfrom __future__ import unicode_literals\n\nimport json\nimport re\n\nfrom .common import InfoExtractor\n\nfrom ..compat import (\n    compat_parse_qs,\n    compat_urlparse,\n)\nfrom ..utils import (\n    ExtractorError,\n    update_url_query,\n)\n\n\nclass SafariBaseIE(InfoExtractor):\n    _LOGIN_URL = 'https://learning.oreilly.com/accounts/login/'\n    _NETRC_MACHINE = 'safari'\n\n    _API_BASE = 'https://learning.oreilly.com/api/v1'\n    _API_FORMAT = 'json'\n\n    LOGGED_IN = False\n\n    def _real_initialize(self):\n        self._login()\n\n    def _login(self):\n        username, password = self._get_login_info()\n        if username is None:\n            return\n\n        _, urlh = self._download_webpage_handle(\n            'https://learning.oreilly.com/accounts/login-check/', None,\n            'Downloading login page')\n\n        def is_logged(urlh):\n            return 'learning.oreilly.com/home/' in urlh.geturl()\n\n        if is_logged(urlh):\n            self.LOGGED_IN = True\n            return\n\n        redirect_url = urlh.geturl()\n        parsed_url = compat_urlparse.urlparse(redirect_url)\n        qs = compat_parse_qs(parsed_url.query)\n        next_uri = compat_urlparse.urljoin(\n            'https://api.oreilly.com', qs['next'][0])\n\n        auth, urlh = self._download_json_handle(\n            'https://www.oreilly.com/member/auth/login/', None, 'Logging in',\n            data=json.dumps({\n                'email': username,\n                'password': password,\n                'redirect_uri': next_uri,\n            }).encode(), headers={\n                'Content-Type': 'application/json',\n                'Referer': redirect_url,\n            }, expected_status=400)\n\n        credentials = auth.get('credentials')\n        if (not auth.get('logged_in') and not auth.get('redirect_uri')\n                and credentials):\n            raise ExtractorError(\n                'Unable to login: %s' % credentials, expected=True)\n\n        # oreilly serves two same instances of the following cookies\n        # in Set-Cookie header and expects first one to be actually set\n        for cookie in ('groot_sessionid', 'orm-jwt', 'orm-rt'):\n            self._apply_first_set_cookie_header(urlh, cookie)\n\n        _, urlh = self._download_webpage_handle(\n            auth.get('redirect_uri') or next_uri, None, 'Completing login',)\n\n        if is_logged(urlh):\n            self.LOGGED_IN = True\n            return\n\n        raise ExtractorError('Unable to log in')\n\n\nclass SafariIE(SafariBaseIE):\n    IE_NAME = 'safari'\n    IE_DESC = 'safaribooksonline.com online video'\n    _VALID_URL = r'''(?x)\n                        https?://\n                            (?:www\\.)?(?:safaribooksonline|(?:learning\\.)?oreilly)\\.com/\n                            (?:\n                                library/view/[^/]+/(?P<course_id>[^/]+)/(?P<part>[^/?\\#&]+)\\.html|\n                                videos/[^/]+/[^/]+/(?P<reference_id>[^-]+-[^/?\\#&]+)\n                            )\n                    '''\n\n    _TESTS = [{\n        'url': 'https://www.safaribooksonline.com/library/view/hadoop-fundamentals-livelessons/9780133392838/part00.html',\n        'md5': 'dcc5a425e79f2564148652616af1f2a3',\n        'info_dict': {\n            'id': '0_qbqx90ic',\n            'ext': 'mp4',\n            'title': 'Introduction to Hadoop Fundamentals LiveLessons',\n            'timestamp': 1437758058,\n            'upload_date': '20150724',\n            'uploader_id': 'stork',\n        },\n    }, {\n        # non-digits in course id\n        'url': 'https://www.safaribooksonline.com/library/view/create-a-nodejs/100000006A0210/part00.html',\n        'only_matching': True,\n    }, {\n        'url': 'https://www.safaribooksonline.com/library/view/learning-path-red/9780134664057/RHCE_Introduction.html',\n        'only_matching': True,\n    }, {\n        'url': 'https://www.safaribooksonline.com/videos/python-programming-language/9780134217314/9780134217314-PYMC_13_00',\n        'only_matching': True,\n    }, {\n        'url': 'https://learning.oreilly.com/videos/hadoop-fundamentals-livelessons/9780133392838/9780133392838-00_SeriesIntro',\n        'only_matching': True,\n    }, {\n        'url': 'https://www.oreilly.com/library/view/hadoop-fundamentals-livelessons/9780133392838/00_SeriesIntro.html',\n        'only_matching': True,\n    }]\n\n    _PARTNER_ID = '1926081'\n    _UICONF_ID = '29375172'\n\n    def _real_extract(self, url):\n        mobj = re.match(self._VALID_URL, url)\n\n        reference_id = mobj.group('reference_id')\n        if reference_id:\n            video_id = reference_id\n            partner_id = self._PARTNER_ID\n            ui_id = self._UICONF_ID\n        else:\n            video_id = '%s-%s' % (mobj.group('course_id'), mobj.group('part'))\n\n            webpage, urlh = self._download_webpage_handle(url, video_id)\n\n            mobj = re.match(self._VALID_URL, urlh.geturl())\n            reference_id = mobj.group('reference_id')\n            if not reference_id:\n                reference_id = self._search_regex(\n                    r'data-reference-id=([\"\\'])(?P<id>(?:(?!\\1).)+)\\1',\n                    webpage, 'kaltura reference id', group='id')\n            partner_id = self._search_regex(\n                r'data-partner-id=([\"\\'])(?P<id>(?:(?!\\1).)+)\\1',\n                webpage, 'kaltura widget id', default=self._PARTNER_ID,\n                group='id')\n            ui_id = self._search_regex(\n                r'data-ui-id=([\"\\'])(?P<id>(?:(?!\\1).)+)\\1',\n                webpage, 'kaltura uiconf id', default=self._UICONF_ID,\n                group='id')\n\n        query = {\n            'wid': '_%s' % partner_id,\n            'uiconf_id': ui_id,\n            'flashvars[referenceId]': reference_id,\n        }\n\n        if self.LOGGED_IN:\n            kaltura_session = self._download_json(\n                '%s/player/kaltura_session/?reference_id=%s' % (self._API_BASE, reference_id),\n                video_id, 'Downloading kaltura session JSON',\n                'Unable to download kaltura session JSON', fatal=False,\n                headers={'Accept': 'application/json'})\n            if kaltura_session:\n                session = kaltura_session.get('session')\n                if session:\n                    query['flashvars[ks]'] = session\n\n        return self.url_result(update_url_query(\n            'https://cdnapisec.kaltura.com/html5/html5lib/v2.37.1/mwEmbedFrame.php', query),\n            'Kaltura')\n\n\nclass SafariApiIE(SafariBaseIE):\n    IE_NAME = 'safari:api'\n    _VALID_URL = r'https?://(?:www\\.)?(?:safaribooksonline|(?:learning\\.)?oreilly)\\.com/api/v1/book/(?P<course_id>[^/]+)/chapter(?:-content)?/(?P<part>[^/?#&]+)\\.html'\n\n    _TESTS = [{\n        'url': 'https://www.safaribooksonline.com/api/v1/book/9780133392838/chapter/part00.html',\n        'only_matching': True,\n    }, {\n        'url': 'https://www.safaribooksonline.com/api/v1/book/9780134664057/chapter/RHCE_Introduction.html',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        mobj = re.match(self._VALID_URL, url)\n        part = self._download_json(\n            url, '%s/%s' % (mobj.group('course_id'), mobj.group('part')),\n            'Downloading part JSON')\n        return self.url_result(part['web_url'], SafariIE.ie_key())\n\n\nclass SafariCourseIE(SafariBaseIE):\n    IE_NAME = 'safari:course'\n    IE_DESC = 'safaribooksonline.com online courses'\n\n    _VALID_URL = r'''(?x)\n                    https?://\n                        (?:\n                            (?:www\\.)?(?:safaribooksonline|(?:learning\\.)?oreilly)\\.com/\n                            (?:\n                                library/view/[^/]+|\n                                api/v1/book|\n                                videos/[^/]+\n                            )|\n                            techbus\\.safaribooksonline\\.com\n                        )\n                        /(?P<id>[^/]+)\n                    '''\n\n    _TESTS = [{\n        'url': 'https://www.safaribooksonline.com/library/view/hadoop-fundamentals-livelessons/9780133392838/',\n        'info_dict': {\n            'id': '9780133392838',\n            'title': 'Hadoop Fundamentals LiveLessons',\n        },\n        'playlist_count': 22,\n        'skip': 'Requires safaribooksonline account credentials',\n    }, {\n        'url': 'https://www.safaribooksonline.com/api/v1/book/9781449396459/?override_format=json',\n        'only_matching': True,\n    }, {\n        'url': 'http://techbus.safaribooksonline.com/9780134426365',\n        'only_matching': True,\n    }, {\n        'url': 'https://www.safaribooksonline.com/videos/python-programming-language/9780134217314',\n        'only_matching': True,\n    }, {\n        'url': 'https://learning.oreilly.com/videos/hadoop-fundamentals-livelessons/9780133392838',\n        'only_matching': True,\n    }, {\n        'url': 'https://www.oreilly.com/library/view/hadoop-fundamentals-livelessons/9780133392838/',\n        'only_matching': True,\n    }]\n\n    @classmethod\n    def suitable(cls, url):\n        return (False if SafariIE.suitable(url) or SafariApiIE.suitable(url)\n                else super(SafariCourseIE, cls).suitable(url))\n\n    def _real_extract(self, url):\n        course_id = self._match_id(url)\n\n        course_json = self._download_json(\n            '%s/book/%s/?override_format=%s' % (self._API_BASE, course_id, self._API_FORMAT),\n            course_id, 'Downloading course JSON')\n\n        if 'chapters' not in course_json:\n            raise ExtractorError(\n                'No chapters found for course %s' % course_id, expected=True)\n\n        entries = [\n            self.url_result(chapter, SafariApiIE.ie_key())\n            for chapter in course_json['chapters']]\n\n        course_title = course_json['title']\n\n        return self.playlist_result(entries, course_id, course_title)\n\n# Unit test for constructor of class SafariApiIE\ndef test_SafariApiIE():"}], "max_tokens": 200, "temperature": 0.0, "stop": ["\n# Unit test for", "\ndef ", "\nclass "]}

---- 2024-03-18 09:21:52.342822
{"model": "gpt-4-1106-preview", "messages": [{"role": "user", "content": "Complete the following unit test function. Only write the completion; do NOT rewrite the function. Do NOT include any comments or description.\n# coding: utf-8\nfrom __future__ import unicode_literals\n\nimport json\nimport re\n\nfrom .common import InfoExtractor\n\nfrom ..compat import (\n    compat_parse_qs,\n    compat_urlparse,\n)\nfrom ..utils import (\n    ExtractorError,\n    update_url_query,\n)\n\n\nclass SafariBaseIE(InfoExtractor):\n    _LOGIN_URL = 'https://learning.oreilly.com/accounts/login/'\n    _NETRC_MACHINE = 'safari'\n\n    _API_BASE = 'https://learning.oreilly.com/api/v1'\n    _API_FORMAT = 'json'\n\n    LOGGED_IN = False\n\n    def _real_initialize(self):\n        self._login()\n\n    def _login(self):\n        username, password = self._get_login_info()\n        if username is None:\n            return\n\n        _, urlh = self._download_webpage_handle(\n            'https://learning.oreilly.com/accounts/login-check/', None,\n            'Downloading login page')\n\n        def is_logged(urlh):\n            return 'learning.oreilly.com/home/' in urlh.geturl()\n\n        if is_logged(urlh):\n            self.LOGGED_IN = True\n            return\n\n        redirect_url = urlh.geturl()\n        parsed_url = compat_urlparse.urlparse(redirect_url)\n        qs = compat_parse_qs(parsed_url.query)\n        next_uri = compat_urlparse.urljoin(\n            'https://api.oreilly.com', qs['next'][0])\n\n        auth, urlh = self._download_json_handle(\n            'https://www.oreilly.com/member/auth/login/', None, 'Logging in',\n            data=json.dumps({\n                'email': username,\n                'password': password,\n                'redirect_uri': next_uri,\n            }).encode(), headers={\n                'Content-Type': 'application/json',\n                'Referer': redirect_url,\n            }, expected_status=400)\n\n        credentials = auth.get('credentials')\n        if (not auth.get('logged_in') and not auth.get('redirect_uri')\n                and credentials):\n            raise ExtractorError(\n                'Unable to login: %s' % credentials, expected=True)\n\n        # oreilly serves two same instances of the following cookies\n        # in Set-Cookie header and expects first one to be actually set\n        for cookie in ('groot_sessionid', 'orm-jwt', 'orm-rt'):\n            self._apply_first_set_cookie_header(urlh, cookie)\n\n        _, urlh = self._download_webpage_handle(\n            auth.get('redirect_uri') or next_uri, None, 'Completing login',)\n\n        if is_logged(urlh):\n            self.LOGGED_IN = True\n            return\n\n        raise ExtractorError('Unable to log in')\n\n\nclass SafariIE(SafariBaseIE):\n    IE_NAME = 'safari'\n    IE_DESC = 'safaribooksonline.com online video'\n    _VALID_URL = r'''(?x)\n                        https?://\n                            (?:www\\.)?(?:safaribooksonline|(?:learning\\.)?oreilly)\\.com/\n                            (?:\n                                library/view/[^/]+/(?P<course_id>[^/]+)/(?P<part>[^/?\\#&]+)\\.html|\n                                videos/[^/]+/[^/]+/(?P<reference_id>[^-]+-[^/?\\#&]+)\n                            )\n                    '''\n\n    _TESTS = [{\n        'url': 'https://www.safaribooksonline.com/library/view/hadoop-fundamentals-livelessons/9780133392838/part00.html',\n        'md5': 'dcc5a425e79f2564148652616af1f2a3',\n        'info_dict': {\n            'id': '0_qbqx90ic',\n            'ext': 'mp4',\n            'title': 'Introduction to Hadoop Fundamentals LiveLessons',\n            'timestamp': 1437758058,\n            'upload_date': '20150724',\n            'uploader_id': 'stork',\n        },\n    }, {\n        # non-digits in course id\n        'url': 'https://www.safaribooksonline.com/library/view/create-a-nodejs/100000006A0210/part00.html',\n        'only_matching': True,\n    }, {\n        'url': 'https://www.safaribooksonline.com/library/view/learning-path-red/9780134664057/RHCE_Introduction.html',\n        'only_matching': True,\n    }, {\n        'url': 'https://www.safaribooksonline.com/videos/python-programming-language/9780134217314/9780134217314-PYMC_13_00',\n        'only_matching': True,\n    }, {\n        'url': 'https://learning.oreilly.com/videos/hadoop-fundamentals-livelessons/9780133392838/9780133392838-00_SeriesIntro',\n        'only_matching': True,\n    }, {\n        'url': 'https://www.oreilly.com/library/view/hadoop-fundamentals-livelessons/9780133392838/00_SeriesIntro.html',\n        'only_matching': True,\n    }]\n\n    _PARTNER_ID = '1926081'\n    _UICONF_ID = '29375172'\n\n    def _real_extract(self, url):\n        mobj = re.match(self._VALID_URL, url)\n\n        reference_id = mobj.group('reference_id')\n        if reference_id:\n            video_id = reference_id\n            partner_id = self._PARTNER_ID\n            ui_id = self._UICONF_ID\n        else:\n            video_id = '%s-%s' % (mobj.group('course_id'), mobj.group('part'))\n\n            webpage, urlh = self._download_webpage_handle(url, video_id)\n\n            mobj = re.match(self._VALID_URL, urlh.geturl())\n            reference_id = mobj.group('reference_id')\n            if not reference_id:\n                reference_id = self._search_regex(\n                    r'data-reference-id=([\"\\'])(?P<id>(?:(?!\\1).)+)\\1',\n                    webpage, 'kaltura reference id', group='id')\n            partner_id = self._search_regex(\n                r'data-partner-id=([\"\\'])(?P<id>(?:(?!\\1).)+)\\1',\n                webpage, 'kaltura widget id', default=self._PARTNER_ID,\n                group='id')\n            ui_id = self._search_regex(\n                r'data-ui-id=([\"\\'])(?P<id>(?:(?!\\1).)+)\\1',\n                webpage, 'kaltura uiconf id', default=self._UICONF_ID,\n                group='id')\n\n        query = {\n            'wid': '_%s' % partner_id,\n            'uiconf_id': ui_id,\n            'flashvars[referenceId]': reference_id,\n        }\n\n        if self.LOGGED_IN:\n            kaltura_session = self._download_json(\n                '%s/player/kaltura_session/?reference_id=%s' % (self._API_BASE, reference_id),\n                video_id, 'Downloading kaltura session JSON',\n                'Unable to download kaltura session JSON', fatal=False,\n                headers={'Accept': 'application/json'})\n            if kaltura_session:\n                session = kaltura_session.get('session')\n                if session:\n                    query['flashvars[ks]'] = session\n\n        return self.url_result(update_url_query(\n            'https://cdnapisec.kaltura.com/html5/html5lib/v2.37.1/mwEmbedFrame.php', query),\n            'Kaltura')\n\n\nclass SafariApiIE(SafariBaseIE):\n    IE_NAME = 'safari:api'\n    _VALID_URL = r'https?://(?:www\\.)?(?:safaribooksonline|(?:learning\\.)?oreilly)\\.com/api/v1/book/(?P<course_id>[^/]+)/chapter(?:-content)?/(?P<part>[^/?#&]+)\\.html'\n\n    _TESTS = [{\n        'url': 'https://www.safaribooksonline.com/api/v1/book/9780133392838/chapter/part00.html',\n        'only_matching': True,\n    }, {\n        'url': 'https://www.safaribooksonline.com/api/v1/book/9780134664057/chapter/RHCE_Introduction.html',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        mobj = re.match(self._VALID_URL, url)\n        part = self._download_json(\n            url, '%s/%s' % (mobj.group('course_id'), mobj.group('part')),\n            'Downloading part JSON')\n        return self.url_result(part['web_url'], SafariIE.ie_key())\n\n\nclass SafariCourseIE(SafariBaseIE):\n    IE_NAME = 'safari:course'\n    IE_DESC = 'safaribooksonline.com online courses'\n\n    _VALID_URL = r'''(?x)\n                    https?://\n                        (?:\n                            (?:www\\.)?(?:safaribooksonline|(?:learning\\.)?oreilly)\\.com/\n                            (?:\n                                library/view/[^/]+|\n                                api/v1/book|\n                                videos/[^/]+\n                            )|\n                            techbus\\.safaribooksonline\\.com\n                        )\n                        /(?P<id>[^/]+)\n                    '''\n\n    _TESTS = [{\n        'url': 'https://www.safaribooksonline.com/library/view/hadoop-fundamentals-livelessons/9780133392838/',\n        'info_dict': {\n            'id': '9780133392838',\n            'title': 'Hadoop Fundamentals LiveLessons',\n        },\n        'playlist_count': 22,\n        'skip': 'Requires safaribooksonline account credentials',\n    }, {\n        'url': 'https://www.safaribooksonline.com/api/v1/book/9781449396459/?override_format=json',\n        'only_matching': True,\n    }, {\n        'url': 'http://techbus.safaribooksonline.com/9780134426365',\n        'only_matching': True,\n    }, {\n        'url': 'https://www.safaribooksonline.com/videos/python-programming-language/9780134217314',\n        'only_matching': True,\n    }, {\n        'url': 'https://learning.oreilly.com/videos/hadoop-fundamentals-livelessons/9780133392838',\n        'only_matching': True,\n    }, {\n        'url': 'https://www.oreilly.com/library/view/hadoop-fundamentals-livelessons/9780133392838/',\n        'only_matching': True,\n    }]\n\n    @classmethod\n    def suitable(cls, url):\n        return (False if SafariIE.suitable(url) or SafariApiIE.suitable(url)\n                else super(SafariCourseIE, cls).suitable(url))\n\n    def _real_extract(self, url):\n        course_id = self._match_id(url)\n\n        course_json = self._download_json(\n            '%s/book/%s/?override_format=%s' % (self._API_BASE, course_id, self._API_FORMAT),\n            course_id, 'Downloading course JSON')\n\n        if 'chapters' not in course_json:\n            raise ExtractorError(\n                'No chapters found for course %s' % course_id, expected=True)\n\n        entries = [\n            self.url_result(chapter, SafariApiIE.ie_key())\n            for chapter in course_json['chapters']]\n\n        course_title = course_json['title']\n\n        return self.playlist_result(entries, course_id, course_title)\n\n# Unit test for constructor of class SafariBaseIE\ndef test_SafariBaseIE():"}], "max_tokens": 200, "temperature": 0.0, "stop": ["\n# Unit test for", "\ndef ", "\nclass "]}

---- 2024-03-18 09:22:00.909974
{"model": "gpt-4-1106-preview", "messages": [{"role": "user", "content": "Complete the following unit test function. Only write the completion; do NOT rewrite the function. Do NOT include any comments or description.\n# coding: utf-8\nfrom __future__ import unicode_literals\n\nimport json\nimport re\n\nfrom .common import InfoExtractor\n\nfrom ..compat import (\n    compat_parse_qs,\n    compat_urlparse,\n)\nfrom ..utils import (\n    ExtractorError,\n    update_url_query,\n)\n\n\nclass SafariBaseIE(InfoExtractor):\n    _LOGIN_URL = 'https://learning.oreilly.com/accounts/login/'\n    _NETRC_MACHINE = 'safari'\n\n    _API_BASE = 'https://learning.oreilly.com/api/v1'\n    _API_FORMAT = 'json'\n\n    LOGGED_IN = False\n\n    def _real_initialize(self):\n        self._login()\n\n    def _login(self):\n        username, password = self._get_login_info()\n        if username is None:\n            return\n\n        _, urlh = self._download_webpage_handle(\n            'https://learning.oreilly.com/accounts/login-check/', None,\n            'Downloading login page')\n\n        def is_logged(urlh):\n            return 'learning.oreilly.com/home/' in urlh.geturl()\n\n        if is_logged(urlh):\n            self.LOGGED_IN = True\n            return\n\n        redirect_url = urlh.geturl()\n        parsed_url = compat_urlparse.urlparse(redirect_url)\n        qs = compat_parse_qs(parsed_url.query)\n        next_uri = compat_urlparse.urljoin(\n            'https://api.oreilly.com', qs['next'][0])\n\n        auth, urlh = self._download_json_handle(\n            'https://www.oreilly.com/member/auth/login/', None, 'Logging in',\n            data=json.dumps({\n                'email': username,\n                'password': password,\n                'redirect_uri': next_uri,\n            }).encode(), headers={\n                'Content-Type': 'application/json',\n                'Referer': redirect_url,\n            }, expected_status=400)\n\n        credentials = auth.get('credentials')\n        if (not auth.get('logged_in') and not auth.get('redirect_uri')\n                and credentials):\n            raise ExtractorError(\n                'Unable to login: %s' % credentials, expected=True)\n\n        # oreilly serves two same instances of the following cookies\n        # in Set-Cookie header and expects first one to be actually set\n        for cookie in ('groot_sessionid', 'orm-jwt', 'orm-rt'):\n            self._apply_first_set_cookie_header(urlh, cookie)\n\n        _, urlh = self._download_webpage_handle(\n            auth.get('redirect_uri') or next_uri, None, 'Completing login',)\n\n        if is_logged(urlh):\n            self.LOGGED_IN = True\n            return\n\n        raise ExtractorError('Unable to log in')\n\n\nclass SafariIE(SafariBaseIE):\n    IE_NAME = 'safari'\n    IE_DESC = 'safaribooksonline.com online video'\n    _VALID_URL = r'''(?x)\n                        https?://\n                            (?:www\\.)?(?:safaribooksonline|(?:learning\\.)?oreilly)\\.com/\n                            (?:\n                                library/view/[^/]+/(?P<course_id>[^/]+)/(?P<part>[^/?\\#&]+)\\.html|\n                                videos/[^/]+/[^/]+/(?P<reference_id>[^-]+-[^/?\\#&]+)\n                            )\n                    '''\n\n    _TESTS = [{\n        'url': 'https://www.safaribooksonline.com/library/view/hadoop-fundamentals-livelessons/9780133392838/part00.html',\n        'md5': 'dcc5a425e79f2564148652616af1f2a3',\n        'info_dict': {\n            'id': '0_qbqx90ic',\n            'ext': 'mp4',\n            'title': 'Introduction to Hadoop Fundamentals LiveLessons',\n            'timestamp': 1437758058,\n            'upload_date': '20150724',\n            'uploader_id': 'stork',\n        },\n    }, {\n        # non-digits in course id\n        'url': 'https://www.safaribooksonline.com/library/view/create-a-nodejs/100000006A0210/part00.html',\n        'only_matching': True,\n    }, {\n        'url': 'https://www.safaribooksonline.com/library/view/learning-path-red/9780134664057/RHCE_Introduction.html',\n        'only_matching': True,\n    }, {\n        'url': 'https://www.safaribooksonline.com/videos/python-programming-language/9780134217314/9780134217314-PYMC_13_00',\n        'only_matching': True,\n    }, {\n        'url': 'https://learning.oreilly.com/videos/hadoop-fundamentals-livelessons/9780133392838/9780133392838-00_SeriesIntro',\n        'only_matching': True,\n    }, {\n        'url': 'https://www.oreilly.com/library/view/hadoop-fundamentals-livelessons/9780133392838/00_SeriesIntro.html',\n        'only_matching': True,\n    }]\n\n    _PARTNER_ID = '1926081'\n    _UICONF_ID = '29375172'\n\n    def _real_extract(self, url):\n        mobj = re.match(self._VALID_URL, url)\n\n        reference_id = mobj.group('reference_id')\n        if reference_id:\n            video_id = reference_id\n            partner_id = self._PARTNER_ID\n            ui_id = self._UICONF_ID\n        else:\n            video_id = '%s-%s' % (mobj.group('course_id'), mobj.group('part'))\n\n            webpage, urlh = self._download_webpage_handle(url, video_id)\n\n            mobj = re.match(self._VALID_URL, urlh.geturl())\n            reference_id = mobj.group('reference_id')\n            if not reference_id:\n                reference_id = self._search_regex(\n                    r'data-reference-id=([\"\\'])(?P<id>(?:(?!\\1).)+)\\1',\n                    webpage, 'kaltura reference id', group='id')\n            partner_id = self._search_regex(\n                r'data-partner-id=([\"\\'])(?P<id>(?:(?!\\1).)+)\\1',\n                webpage, 'kaltura widget id', default=self._PARTNER_ID,\n                group='id')\n            ui_id = self._search_regex(\n                r'data-ui-id=([\"\\'])(?P<id>(?:(?!\\1).)+)\\1',\n                webpage, 'kaltura uiconf id', default=self._UICONF_ID,\n                group='id')\n\n        query = {\n            'wid': '_%s' % partner_id,\n            'uiconf_id': ui_id,\n            'flashvars[referenceId]': reference_id,\n        }\n\n        if self.LOGGED_IN:\n            kaltura_session = self._download_json(\n                '%s/player/kaltura_session/?reference_id=%s' % (self._API_BASE, reference_id),\n                video_id, 'Downloading kaltura session JSON',\n                'Unable to download kaltura session JSON', fatal=False,\n                headers={'Accept': 'application/json'})\n            if kaltura_session:\n                session = kaltura_session.get('session')\n                if session:\n                    query['flashvars[ks]'] = session\n\n        return self.url_result(update_url_query(\n            'https://cdnapisec.kaltura.com/html5/html5lib/v2.37.1/mwEmbedFrame.php', query),\n            'Kaltura')\n\n\nclass SafariApiIE(SafariBaseIE):\n    IE_NAME = 'safari:api'\n    _VALID_URL = r'https?://(?:www\\.)?(?:safaribooksonline|(?:learning\\.)?oreilly)\\.com/api/v1/book/(?P<course_id>[^/]+)/chapter(?:-content)?/(?P<part>[^/?#&]+)\\.html'\n\n    _TESTS = [{\n        'url': 'https://www.safaribooksonline.com/api/v1/book/9780133392838/chapter/part00.html',\n        'only_matching': True,\n    }, {\n        'url': 'https://www.safaribooksonline.com/api/v1/book/9780134664057/chapter/RHCE_Introduction.html',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        mobj = re.match(self._VALID_URL, url)\n        part = self._download_json(\n            url, '%s/%s' % (mobj.group('course_id'), mobj.group('part')),\n            'Downloading part JSON')\n        return self.url_result(part['web_url'], SafariIE.ie_key())\n\n\nclass SafariCourseIE(SafariBaseIE):\n    IE_NAME = 'safari:course'\n    IE_DESC = 'safaribooksonline.com online courses'\n\n    _VALID_URL = r'''(?x)\n                    https?://\n                        (?:\n                            (?:www\\.)?(?:safaribooksonline|(?:learning\\.)?oreilly)\\.com/\n                            (?:\n                                library/view/[^/]+|\n                                api/v1/book|\n                                videos/[^/]+\n                            )|\n                            techbus\\.safaribooksonline\\.com\n                        )\n                        /(?P<id>[^/]+)\n                    '''\n\n    _TESTS = [{\n        'url': 'https://www.safaribooksonline.com/library/view/hadoop-fundamentals-livelessons/9780133392838/',\n        'info_dict': {\n            'id': '9780133392838',\n            'title': 'Hadoop Fundamentals LiveLessons',\n        },\n        'playlist_count': 22,\n        'skip': 'Requires safaribooksonline account credentials',\n    }, {\n        'url': 'https://www.safaribooksonline.com/api/v1/book/9781449396459/?override_format=json',\n        'only_matching': True,\n    }, {\n        'url': 'http://techbus.safaribooksonline.com/9780134426365',\n        'only_matching': True,\n    }, {\n        'url': 'https://www.safaribooksonline.com/videos/python-programming-language/9780134217314',\n        'only_matching': True,\n    }, {\n        'url': 'https://learning.oreilly.com/videos/hadoop-fundamentals-livelessons/9780133392838',\n        'only_matching': True,\n    }, {\n        'url': 'https://www.oreilly.com/library/view/hadoop-fundamentals-livelessons/9780133392838/',\n        'only_matching': True,\n    }]\n\n    @classmethod\n    def suitable(cls, url):\n        return (False if SafariIE.suitable(url) or SafariApiIE.suitable(url)\n                else super(SafariCourseIE, cls).suitable(url))\n\n    def _real_extract(self, url):\n        course_id = self._match_id(url)\n\n        course_json = self._download_json(\n            '%s/book/%s/?override_format=%s' % (self._API_BASE, course_id, self._API_FORMAT),\n            course_id, 'Downloading course JSON')\n\n        if 'chapters' not in course_json:\n            raise ExtractorError(\n                'No chapters found for course %s' % course_id, expected=True)\n\n        entries = [\n            self.url_result(chapter, SafariApiIE.ie_key())\n            for chapter in course_json['chapters']]\n\n        course_title = course_json['title']\n\n        return self.playlist_result(entries, course_id, course_title)\n\n# Unit test for constructor of class SafariApiIE\ndef test_SafariApiIE():"}], "max_tokens": 200, "temperature": 0.0, "stop": ["\n# Unit test for", "\ndef ", "\nclass "]}