# Automatically generated by Pynguin.
import httpie.cli.dicts as module_0
import requests_toolbelt.multipart.encoder as module_1
import httpie.uploads as module_2

def test_case_0():
    pass

def test_case_1():
    iterable_0 = None
    multipart_request_data_dict_0 = module_0.MultipartRequestDataDict()
    multipart_encoder_0 = module_1.MultipartEncoder(multipart_request_data_dict_0)
    chunked_upload_stream_0 = module_2.ChunkedUploadStream(iterable_0, multipart_encoder_0)

def test_case_2():
    list_0 = []
    multipart_encoder_0 = module_1.MultipartEncoder(list_0)
    str_0 = 'ht#:\x0bt0'
    multipart_request_data_dict_0 = module_0.MultipartRequestDataDict()
    int_0 = 985
    var_0 = module_2.prepare_request_body(multipart_encoder_0, multipart_request_data_dict_0, str_0, int_0)

def test_case_3():
    str_0 = 'italic'
    callable_0 = None
    var_0 = module_2.prepare_request_body(str_0, callable_0)

def test_case_4():
    list_0 = []
    multipart_encoder_0 = module_1.MultipartEncoder(list_0)
    float_0 = None
    var_0 = module_2.prepare_request_body(multipart_encoder_0, float_0)

def test_case_5():
    multipart_request_data_dict_0 = module_0.MultipartRequestDataDict()
    str_0 = '`a UZ<S1)\\58"$C3v~0'
    tuple_0 = module_2.get_multipart_data_and_content_type(multipart_request_data_dict_0, str_0, str_0)

def test_case_6():
    multipart_request_data_dict_0 = module_0.MultipartRequestDataDict()
    tuple_0 = module_2.get_multipart_data_and_content_type(multipart_request_data_dict_0)