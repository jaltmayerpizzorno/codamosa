# Automatically generated by Pynguin.
import ansible.cli.arguments.option_helpers as module_0
import argparse as module_1

def test_case_0():
    try:
        float_0 = -443.9
        bytes_0 = None
        bytes_1 = b'\x17\x18Hdy\xd5Cg\xefB\x05.\xd5I\xe4'
        tuple_0 = (bytes_0, bytes_1)
        bool_0 = True
        bool_1 = False
        ansible_version_0 = module_0.AnsibleVersion(tuple_0, float_0, bool_0, tuple_0, bool_1)
        int_0 = -2623
        ansible_version_1 = module_0.AnsibleVersion(ansible_version_0, int_0, tuple_0)
        bytes_2 = b'\xdc\xae\xfe\x19\x10'
        bool_2 = True
        str_0 = 'ftdgN`SaCH8z<`'
        unrecognized_argument_0 = module_0.UnrecognizedArgument(ansible_version_0, bytes_2, bool_2, str_0)
        ansible_version_2 = module_0.AnsibleVersion(ansible_version_1, ansible_version_0, unrecognized_argument_0)
        unrecognized_argument_1 = module_0.UnrecognizedArgument(float_0, tuple_0, ansible_version_2)
        int_1 = 2663
        sorting_help_formatter_0 = module_0.SortingHelpFormatter(int_1)
        var_0 = sorting_help_formatter_0.add_arguments(unrecognized_argument_1)
    except BaseException:
        pass

def test_case_1():
    try:
        set_0 = None
        bool_0 = False
        str_0 = 'i1J<8l%&UA97&(GF{|'
        str_1 = 'x'
        var_0 = module_0.create_base_parser(str_0, str_1)
        sorting_help_formatter_0 = module_0.SortingHelpFormatter(set_0, bool_0)
        str_2 = '\x0c(L.?0cb6~yK,rW'
        int_0 = -2028
        float_0 = 0.0
        list_0 = []
        var_1 = sorting_help_formatter_0.add_arguments(list_0)
        ansible_version_0 = None
        str_3 = 'X2yD2w=okQ F_\x0benF\x0c'
        bytes_0 = b'\x84\t1\xbe\x80k\xe5D/\xe6\xc9\xf8\xb0%(\x08\xc8'
        set_1 = {str_2, str_3, sorting_help_formatter_0, float_0}
        int_1 = 9
        unrecognized_argument_0 = module_0.UnrecognizedArgument(set_1, set_0, int_1)
        unrecognized_argument_1 = module_0.UnrecognizedArgument(sorting_help_formatter_0, set_0, unrecognized_argument_0)
        prepend_list_action_0 = module_0.PrependListAction(ansible_version_0, str_3, bytes_0, int_0, unrecognized_argument_1)
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b'\x023\xa2Z\x08\xf5]7e\x82\x13K.'
        float_0 = 0.5
        list_0 = []
        str_0 = 'gpgkey'
        float_1 = None
        argument_parser_0 = module_1.ArgumentParser(list_0, str_0, float_1)
        var_0 = module_0.add_output_options(argument_parser_0)
        unrecognized_argument_0 = module_0.UnrecognizedArgument(bytes_0, float_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bool_0 = True
        prepend_list_action_0 = None
        bytes_0 = b'\x99\xe4+\xdc\xc9\xc2'
        unrecognized_argument_0 = module_0.UnrecognizedArgument(bool_0, prepend_list_action_0, bytes_0)
        dict_0 = {}
        int_0 = 2121
        var_0 = unrecognized_argument_0.__call__(dict_0, int_0, bool_0)
    except BaseException:
        pass

def test_case_4():
    try:
        list_0 = []
        bool_0 = True
        unrecognized_argument_0 = None
        str_0 = 'tT"'
        prepend_list_action_0 = module_0.PrependListAction(list_0, unrecognized_argument_0, list_0, bool_0, str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        dict_0 = {}
        var_0 = module_0.maybe_unfrack_path(dict_0)
    except BaseException:
        pass

def test_case_6():
    try:
        float_0 = 10.1
        str_0 = 'k%\x0c\\8'
        var_0 = module_0.create_base_parser(float_0, str_0)
        var_1 = module_0.add_connect_options(float_0)
    except BaseException:
        pass

def test_case_7():
    try:
        tuple_0 = ()
        var_0 = module_0.add_verbosity_options(tuple_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = '[\nTa*QJ(QSRqnFy!L'
        list_0 = [str_0, str_0, str_0, str_0]
        bytes_0 = b'\xa7\x0f#\xb7\xa2\xddjny\x977\xd5&\xee\xd5\xb9'
        float_0 = 2457.9
        set_0 = {float_0, bytes_0}
        ansible_version_0 = module_0.AnsibleVersion(list_0, bytes_0, set_0, list_0)
        var_0 = module_0.add_async_options(ansible_version_0)
    except BaseException:
        pass

def test_case_9():
    try:
        tuple_0 = None
        var_0 = module_0.add_basedir_options(tuple_0)
    except BaseException:
        pass

def test_case_10():
    try:
        int_0 = None
        bool_0 = False
        bytes_0 = b'k\xbd\xfa\x97\xa4\x14\xdc\x05\xe9\xa5\xf5\x00\x16\xa1\xc2\xe8\xa8#|'
        prepend_list_action_0 = module_0.PrependListAction(int_0, bool_0, bytes_0)
        var_0 = module_0.version()
        prepend_list_action_1 = None
        ansible_version_0 = module_0.AnsibleVersion(prepend_list_action_1, prepend_list_action_1, bytes_0)
        set_0 = None
        str_0 = "3G\n<'YJbGO7Q"
        float_0 = -1803.493850007276
        prepend_list_action_2 = module_0.PrependListAction(set_0, str_0, float_0)
        dict_0 = None
        sorting_help_formatter_0 = module_0.SortingHelpFormatter(dict_0)
        var_1 = module_0.add_fork_options(sorting_help_formatter_0)
    except BaseException:
        pass

def test_case_11():
    try:
        bytes_0 = b'Lq.\xda\xdfK\xcc\xe6'
        list_0 = []
        prepend_list_action_0 = module_0.PrependListAction(bytes_0, list_0)
        var_0 = module_0.add_inventory_options(prepend_list_action_0)
    except BaseException:
        pass

def test_case_12():
    try:
        int_0 = 1201
        var_0 = module_0.add_meta_options(int_0)
    except BaseException:
        pass

def test_case_13():
    try:
        dict_0 = {}
        var_0 = module_0.add_runas_options(dict_0)
    except BaseException:
        pass

def test_case_14():
    try:
        bytes_0 = b''
        var_0 = module_0.add_runas_prompt_options(bytes_0)
    except BaseException:
        pass

def test_case_15():
    try:
        str_0 = 'm;MG'
        var_0 = module_0.add_runtask_options(str_0)
    except BaseException:
        pass

def test_case_16():
    try:
        str_0 = "'Zyr:bI:p1!`*I"
        var_0 = module_0.add_tasknoplay_options(str_0)
    except BaseException:
        pass

def test_case_17():
    try:
        bool_0 = True
        var_0 = module_0.add_subset_options(bool_0)
    except BaseException:
        pass

def test_case_18():
    try:
        bytes_0 = b'\xc0\xdc_V\x9c'
        var_0 = module_0.add_vault_options(bytes_0)
    except BaseException:
        pass

def test_case_19():
    try:
        bool_0 = False
        set_0 = {bool_0, bool_0, bool_0}
        ansible_version_0 = module_0.AnsibleVersion(bool_0, set_0)
        dict_0 = {ansible_version_0: ansible_version_0}
        sorting_help_formatter_0 = module_0.SortingHelpFormatter(dict_0)
        var_0 = module_0.add_output_options(sorting_help_formatter_0)
    except BaseException:
        pass

def test_case_20():
    try:
        str_0 = "F\x0bx$2Z!h]N'."
        bool_0 = True
        bytes_0 = b':+\x8e\xfa\xcf\x03(\xb5+\xcf\xe9Z\xc5\xdbM'
        var_0 = module_0.version()
        prepend_list_action_0 = None
        ansible_version_0 = module_0.AnsibleVersion(prepend_list_action_0, prepend_list_action_0, bytes_0)
        set_0 = None
        dict_0 = {str_0: prepend_list_action_0, ansible_version_0: prepend_list_action_0, ansible_version_0: bool_0, bytes_0: prepend_list_action_0}
        list_0 = []
        str_1 = "3G\n<'YJbGO7Q"
        float_0 = -1803.493850007276
        prepend_list_action_1 = module_0.PrependListAction(set_0, str_1, float_0)
        var_1 = prepend_list_action_1.__call__(dict_0, dict_0, list_0, dict_0)
    except BaseException:
        pass

def test_case_21():
    try:
        str_0 = 'BlHF:;B'
        str_1 = 'E)COM&?'
        tuple_0 = (str_0, str_1)
        var_0 = module_0.add_module_options(tuple_0)
    except BaseException:
        pass

def test_case_22():
    try:
        tuple_0 = ()
        sorting_help_formatter_0 = module_0.SortingHelpFormatter(tuple_0)
        var_0 = module_0.add_subset_options(sorting_help_formatter_0)
    except BaseException:
        pass

def test_case_23():
    try:
        int_0 = None
        bool_0 = True
        bytes_0 = b':+\x8e\xfa\xcf\x03(\xb5+\xcf\xe9Z\xc5\xdbM'
        prepend_list_action_0 = module_0.PrependListAction(int_0, bool_0, bytes_0)
        var_0 = module_0.version()
        prepend_list_action_1 = None
        ansible_version_0 = module_0.AnsibleVersion(prepend_list_action_1, prepend_list_action_1, bytes_0)
        str_0 = 'FN-LR'
        str_1 = '\n(\n\\QHG;QR3yTH\nq]s_)'
        bool_1 = False
        tuple_0 = ()
        set_0 = set()
        prepend_list_action_2 = module_0.PrependListAction(str_0, str_1, bool_1, tuple_0, bool_1, tuple_0, set_0, ansible_version_0)
    except BaseException:
        pass

def test_case_24():
    try:
        str_0 = "F\x0bx$2Z!h]N'."
        int_0 = None
        bool_0 = True
        bytes_0 = b':+\x8e\xfa\xcf\x03(\xb5+\xcf\xe9Z\xc5\xdbM'
        prepend_list_action_0 = module_0.PrependListAction(int_0, bool_0, bytes_0)
        var_0 = module_0.version()
        prepend_list_action_1 = None
        ansible_version_0 = module_0.AnsibleVersion(prepend_list_action_1, prepend_list_action_1, bytes_0)
        set_0 = None
        dict_0 = {str_0: prepend_list_action_0, ansible_version_0: prepend_list_action_1, ansible_version_0: bool_0, bytes_0: prepend_list_action_1}
        float_0 = -1803.493850007276
        prepend_list_action_2 = module_0.PrependListAction(set_0, str_0, float_0)
        sorting_help_formatter_0 = module_0.SortingHelpFormatter(dict_0)
        var_1 = module_0.add_module_options(sorting_help_formatter_0)
    except BaseException:
        pass

def test_case_25():
    try:
        int_0 = 2581
        bytes_0 = b'\xb7\xe9\x18\xdf\x9a\xfa\x1a\xb1}\xe2\x13'
        bool_0 = True
        list_0 = [int_0, bool_0]
        str_0 = 'X\x0cvr?\r\x0b+9w'
        ansible_version_0 = module_0.AnsibleVersion(bool_0, list_0, str_0)
        float_0 = 34.2828
        tuple_0 = (int_0, bytes_0, ansible_version_0, float_0)
        var_0 = module_0.add_runas_prompt_options(tuple_0, ansible_version_0)
    except BaseException:
        pass

def test_case_26():
    try:
        str_0 = "F\x0bx$2Z!]N'!"
        int_0 = None
        bool_0 = False
        bytes_0 = b':+\x8e\xfa\xcf\x03(\xb5+\xcf\xe9Z\xc5\xdbM'
        prepend_list_action_0 = module_0.PrependListAction(int_0, bool_0, bytes_0)
        var_0 = module_0.version()
        prepend_list_action_1 = None
        ansible_version_0 = module_0.AnsibleVersion(prepend_list_action_1, prepend_list_action_1, bytes_0)
        sorting_help_formatter_0 = module_0.SortingHelpFormatter(str_0)
        var_1 = module_0.add_basedir_options(sorting_help_formatter_0)
    except BaseException:
        pass

def test_case_27():
    try:
        str_0 = "F\x0bx$2Z!h]N'."
        var_0 = module_0.version()
        prepend_list_action_0 = None
        set_0 = None
        str_1 = "3G\n<'YJbGO7Q"
        float_0 = -1803.493850007276
        prepend_list_action_1 = module_0.PrependListAction(set_0, str_1, float_0)
        bytes_0 = b'G\x17\xdfn1\x04F\xa9\xb1\x83^\xc8` \x8f\xf1\xfeez'
        sorting_help_formatter_0 = module_0.SortingHelpFormatter(bytes_0)
        dict_0 = None
        list_0 = [dict_0]
        argument_parser_0 = module_1.ArgumentParser(sorting_help_formatter_0, prepend_list_action_0, list_0)
        str_2 = 'No matching task "%s" found. Note: --start-at-task can only follow static includes.'
        str_3 = 'JHuq<9/DX|lHB'
        int_0 = 1620
        dict_1 = {str_1: prepend_list_action_0, str_2: str_0, str_3: int_0}
        var_1 = prepend_list_action_1.__call__(str_0, argument_parser_0, dict_1)
        var_2 = module_0.add_runas_options(str_0)
    except BaseException:
        pass

def test_case_28():
    try:
        str_0 = "F\x0bx$2Z!h]N'."
        int_0 = None
        bool_0 = True
        bytes_0 = b'\xb2\xa5\x87\xdc\xb157\xeej<t0\xcb46\xdf\xd9\xdb\xb0\xb3'
        prepend_list_action_0 = module_0.PrependListAction(int_0, bool_0, bytes_0)
        var_0 = module_0.version()
        prepend_list_action_1 = None
        ansible_version_0 = module_0.AnsibleVersion(prepend_list_action_1, prepend_list_action_1, bytes_0)
        set_0 = None
        float_0 = -1803.493850007276
        prepend_list_action_2 = module_0.PrependListAction(set_0, str_0, float_0)
        bytes_1 = b'G\x17\xdfn1\x04F\xa9\xb1\x83^\xc8` \x8f\xf1\xfeez'
        sorting_help_formatter_0 = module_0.SortingHelpFormatter(bytes_1)
        dict_0 = None
        var_1 = module_0.create_base_parser(float_0, bytes_1)
        list_0 = [dict_0]
        argument_parser_0 = module_1.ArgumentParser(sorting_help_formatter_0, prepend_list_action_1, list_0)
        str_1 = 'No matching task "%s" found. Note: --start-at-task can only follow static includes.'
        str_2 = 'JHuq<9/DX|lHB'
        int_1 = 1620
        var_2 = module_0.add_vault_options(argument_parser_0)
        dict_1 = {str_1: prepend_list_action_1, str_1: str_0, str_2: int_1}
        var_3 = prepend_list_action_2.__call__(str_0, argument_parser_0, dict_1)
        prepend_list_action_3 = module_0.PrependListAction(set_0, bool_0, argument_parser_0, bytes_0)
    except BaseException:
        pass

def test_case_29():
    try:
        str_0 = "F\x0bx$2Z!h]N'."
        int_0 = None
        bool_0 = True
        bytes_0 = b':+\x8e\xfa\xcf\x03(\xb5+\xcf\xe9Z\xc5\xdbM'
        prepend_list_action_0 = module_0.PrependListAction(int_0, bool_0, bytes_0)
        var_0 = module_0.version()
        prepend_list_action_1 = None
        ansible_version_0 = module_0.AnsibleVersion(prepend_list_action_1, prepend_list_action_1, bytes_0)
        int_1 = 24
        argument_parser_0 = module_1.ArgumentParser(int_1)
        float_0 = -1034.08656
        float_1 = -653.3432
        unrecognized_argument_0 = module_0.UnrecognizedArgument(argument_parser_0, str_0, float_0, ansible_version_0, int_0, float_1)
        set_0 = {ansible_version_0}
        argument_parser_1 = module_1.ArgumentParser(unrecognized_argument_0, set_0)
        var_1 = module_0.add_meta_options(argument_parser_1)
        set_1 = None
        str_1 = "3G\n<'YJbGO7Q"
        float_2 = -1803.493850007276
        prepend_list_action_2 = module_0.PrependListAction(set_1, str_1, float_2)
        var_2 = module_0.add_runas_options(str_0)
    except BaseException:
        pass

def test_case_30():
    try:
        str_0 = "F\x0bx$2Z!h]N'."
        int_0 = None
        var_0 = module_0.version()
        prepend_list_action_0 = None
        dict_0 = {}
        bool_0 = False
        list_0 = None
        dict_1 = {}
        sorting_help_formatter_0 = module_0.SortingHelpFormatter(dict_1)
        float_0 = -280.984
        tuple_0 = (str_0, dict_1, float_0)
        str_1 = ':'
        ansible_version_0 = module_0.AnsibleVersion(sorting_help_formatter_0, list_0, tuple_0, str_1, dict_1)
        sorting_help_formatter_1 = module_0.SortingHelpFormatter(ansible_version_0)
        tuple_1 = (dict_0, bool_0, list_0, sorting_help_formatter_1)
        bytes_0 = None
        tuple_2 = (prepend_list_action_0, dict_0, bytes_0)
        argument_parser_0 = module_1.ArgumentParser(tuple_1, tuple_2, int_0)
        var_1 = module_0.add_subset_options(argument_parser_0)
        bool_1 = False
        var_2 = module_0.add_tasknoplay_options(bool_1)
    except BaseException:
        pass

def test_case_31():
    try:
        str_0 = "F\x0bx$2Z!h]N'."
        int_0 = None
        bool_0 = False
        bytes_0 = b'\xb2\xa5\x87\xdc\xb157\xeej<t0\xcb46\xdf\xd9\xdb\xb0\xb3'
        complex_0 = None
        sorting_help_formatter_0 = module_0.SortingHelpFormatter(complex_0)
        prepend_list_action_0 = module_0.PrependListAction(int_0, bool_0, bytes_0)
        var_0 = module_0.version()
        prepend_list_action_1 = None
        ansible_version_0 = module_0.AnsibleVersion(prepend_list_action_1, prepend_list_action_1, bytes_0)
        set_0 = None
        float_0 = -1803.493850007276
        prepend_list_action_2 = module_0.PrependListAction(set_0, str_0, float_0)
        bytes_1 = b'G\x17\xdfn1\x04F\xa9\xb1\x83^\xc8` \x8f\xf1\xfeez'
        sorting_help_formatter_1 = module_0.SortingHelpFormatter(bytes_1)
        dict_0 = None
        float_1 = 1639.0
        var_1 = module_0.create_base_parser(float_1, bytes_1)
        list_0 = [dict_0]
        argument_parser_0 = module_1.ArgumentParser(sorting_help_formatter_1, prepend_list_action_1, list_0)
        str_1 = 'No matching task "%s" found. Note: --start-at-task can only follow static includes.'
        str_2 = 'JHuq<9/DX|lHB'
        int_1 = 1620
        var_2 = module_0.add_vault_options(argument_parser_0)
        dict_1 = {str_1: prepend_list_action_1, str_1: str_0, str_2: int_1}
        var_3 = prepend_list_action_2.__call__(str_0, argument_parser_0, dict_1)
        bytes_2 = b'\xe4\x02w\x92\xf7\x9f\xb9\xd9\x10z<I'
        unrecognized_argument_0 = module_0.UnrecognizedArgument(bytes_2, dict_0, ansible_version_0)
        var_4 = prepend_list_action_2.__call__(list_0, argument_parser_0, str_2)
        prepend_list_action_3 = module_0.PrependListAction(sorting_help_formatter_0, argument_parser_0, set_0, sorting_help_formatter_0)
    except BaseException:
        pass

def test_case_32():
    try:
        str_0 = 'D&IY0:'
        sorting_help_formatter_0 = module_0.SortingHelpFormatter(str_0)
        var_0 = module_0.add_runtask_options(sorting_help_formatter_0)
    except BaseException:
        pass

def test_case_33():
    try:
        bytes_0 = b'\xb2\xa5\x87\xdc\xb157\xeej<t0\xcb46\xdf\xd9\xdb\xb0\xb3'
        complex_0 = None
        sorting_help_formatter_0 = module_0.SortingHelpFormatter(complex_0)
        var_0 = module_0.version()
        prepend_list_action_0 = None
        ansible_version_0 = module_0.AnsibleVersion(prepend_list_action_0, prepend_list_action_0, bytes_0)
        var_1 = module_0.add_tasknoplay_options(sorting_help_formatter_0)
    except BaseException:
        pass