# Automatically generated by Pynguin.
import dataclasses_json.undefined as module_0

def test_case_0():
    try:
        str_0 = 'qxf+qE`'
        set_0 = {str_0}
        dict_0 = {}
        raise_undefined_parameters_0 = module_0._RaiseUndefinedParameters()
        dict_1 = raise_undefined_parameters_0.handle_from_dict(set_0, dict_0)
    except BaseException:
        pass

def test_case_1():
    try:
        ignore_undefined_parameters_0 = module_0._IgnoreUndefinedParameters()
        str_0 = '\n--#q9l&de)'
        str_1 = 'mNWH47'
        undefined_0 = module_0.Undefined.EXCLUDE
        dict_0 = {str_1: ignore_undefined_parameters_0, str_0: undefined_0}
        dict_1 = ignore_undefined_parameters_0.handle_from_dict(str_0, dict_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '_bH|O<'
        dict_0 = {str_0: str_0, str_0: str_0}
        catch_all_undefined_parameters_0 = module_0._CatchAllUndefinedParameters()
        dict_1 = catch_all_undefined_parameters_0.handle_from_dict(str_0, dict_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b"pc$\xa6\xae\xe0\xa5B\xaa\xbb5\xb5\x04J\xd7\x14\x9f\xe6'"
        str_0 = '\n            Raises exception because this class should not be inherited.\n            This class is helper only.\n            '
        list_0 = [bytes_0, bytes_0, bytes_0, str_0]
        dict_0 = {}
        dict_1 = {}
        catch_all_undefined_parameters_0 = module_0._CatchAllUndefinedParameters(**dict_1)
        dict_2 = catch_all_undefined_parameters_0.handle_to_dict(list_0, dict_0)
    except BaseException:
        pass

def test_case_4():
    try:
        catch_all_undefined_parameters_0 = module_0._CatchAllUndefinedParameters()
        dict_0 = {}
        dict_1 = catch_all_undefined_parameters_0.handle_dump(dict_0)
    except BaseException:
        pass

def test_case_5():
    try:
        dict_0 = {}
        raise_undefined_parameters_0 = module_0._RaiseUndefinedParameters(**dict_0)
        undefined_0 = module_0.Undefined.INCLUDE
        catch_all_undefined_parameters_0 = module_0._CatchAllUndefinedParameters(**dict_0)
        callable_0 = catch_all_undefined_parameters_0.create_init(undefined_0)
        list_0 = [catch_all_undefined_parameters_0]
        catch_all_undefined_parameters_1 = module_0._CatchAllUndefinedParameters(*list_0, **dict_0)
    except BaseException:
        pass