# Automatically generated by Pynguin.
import ansible.modules.iptables as module_0

def test_case_0():
    pass

def test_case_1():
    int_0 = None
    str_0 = '/pro?Y"modules'
    var_0 = module_0.append_tcp_flags(int_0, str_0, str_0)

def test_case_2():
    int_0 = None
    str_0 = 'hoOl\n2\t+Yb\t&gmV'
    var_0 = module_0.append_tcp_flags(int_0, str_0, str_0)

def test_case_3():
    float_0 = -1914.055
    int_0 = 739
    bool_0 = False
    str_0 = 'z'
    var_0 = module_0.append_match_flag(float_0, int_0, bool_0, str_0)

def test_case_4():
    str_0 = '1gt:n'
    list_0 = []
    int_0 = 3957
    var_0 = module_0.append_match(str_0, list_0, list_0)
    tuple_0 = (int_0,)
    var_1 = module_0.append_match_flag(str_0, str_0, int_0, tuple_0)

def test_case_5():
    int_0 = -720
    dict_0 = {int_0: int_0, int_0: int_0}
    var_0 = module_0.main()
    var_1 = module_0.append_jump(int_0, dict_0, int_0)
    list_0 = []
    var_2 = module_0.construct_rule(list_0)

def test_case_6():
    str_0 = '&\nSN3?UI2'
    set_0 = set()
    str_1 = 'k76@6n"40{/fH2Q ht'
    var_0 = module_0.append_tcp_flags(str_0, set_0, str_1)

def test_case_7():
    str_0 = 'CNh:GYS]*'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    int_0 = None
    float_0 = 974.7854914745731
    tuple_0 = (dict_0, int_0, float_0)
    list_0 = [int_0, int_0, str_0]
    str_1 = '4DO+:FaE~3XS!(<s6'
    var_0 = module_0.append_param(list_0, str_1, tuple_0, tuple_0)

def test_case_8():
    str_0 = 'z,_\x0c~Imw1R/CA\tJ'
    str_1 = 'mwRub'
    bool_0 = False
    list_0 = []
    list_1 = [list_0, str_1, bool_0, bool_0]
    set_0 = set()
    tuple_0 = (list_1, list_0, set_0)
    var_0 = module_0.append_tcp_flags(bool_0, tuple_0, set_0)
    str_2 = '*|w~0yTg5\re)MSd{~[8M'
    var_1 = module_0.append_match(str_2, list_0, list_0)
    set_1 = None
    set_2 = {set_1, str_0, str_1, str_1}
    dict_0 = {}
    var_2 = module_0.append_tcp_flags(set_2, dict_0, dict_0)
    float_0 = -4725.4915
    complex_0 = None
    tuple_1 = (complex_0,)
    bytes_0 = b'\x8c\xa1>\xfd\xf0K\xf5'
    var_3 = module_0.append_param(tuple_1, tuple_1, float_0, bytes_0)