# Automatically generated by Pynguin.
import youtube_dl.downloader.common as module_0

def test_case_0():
    try:
        dict_0 = None
        bytes_0 = b'\xed\xd8c\xf9\xd5\x0e\x08\xad`\x82\x06\xb0\x9aa\x8a\xc3m\xb8'
        str_0 = '[9월 모의고사 해설강의][수학_김상희] 수학 A형 16~20번'
        file_downloader_0 = module_0.FileDownloader(bytes_0, str_0)
        str_1 = 'w<)~H,C}-'
        list_0 = None
        var_0 = file_downloader_0.calc_percent(str_1, list_0)
        var_1 = file_downloader_0.report_destination(dict_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bool_0 = False
        str_0 = None
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: bool_0}
        file_downloader_0 = module_0.FileDownloader(dict_0, dict_0)
        var_0 = file_downloader_0.format_percent(file_downloader_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b'\x8e\x92\xe4o\xe7\xf1I\xf4\xbdA\x9b\xd2\xee\xdb"}b6\xae'
        bool_0 = False
        dict_0 = {bytes_0: bool_0}
        int_0 = 731
        set_0 = set()
        bytes_1 = b'\xdb\xc2F64\xd2\xec\x9a\xd63\xc6'
        file_downloader_0 = module_0.FileDownloader(bytes_1, dict_0)
        var_0 = file_downloader_0.calc_eta(bool_0, dict_0, int_0, set_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b''
        file_downloader_0 = module_0.FileDownloader(bytes_0, bytes_0)
        list_0 = [bytes_0, file_downloader_0]
        var_0 = file_downloader_0.format_retries(list_0)
    except BaseException:
        pass

def test_case_4():
    try:
        int_0 = 657
        bytes_0 = b'\x93\x97\x89\x8a'
        file_downloader_0 = module_0.FileDownloader(int_0, bytes_0)
        var_0 = file_downloader_0.report_file_already_downloaded(int_0)
    except BaseException:
        pass

def test_case_5():
    try:
        int_0 = -2958
        bytes_0 = b'\x12V\xd4\xe2=\xc0zr'
        int_1 = 1424246400
        list_0 = [int_0, bytes_0, int_1, int_0]
        str_0 = '[<T$KkZP<G9;I4\x0bw:y'
        tuple_0 = (list_0,)
        str_1 = ' |41\x0b3'
        list_1 = [bytes_0, int_0, bytes_0, str_0]
        file_downloader_0 = module_0.FileDownloader(str_1, list_1)
        var_0 = file_downloader_0.to_stderr(tuple_0)
    except BaseException:
        pass

def test_case_6():
    try:
        float_0 = -0.37867350187837423
        str_0 = 'Qr!/s0,q;\x0cAHG*W;'
        file_downloader_0 = module_0.FileDownloader(float_0, str_0)
        var_0 = file_downloader_0.undo_temp_name(str_0)
        bool_0 = True
        var_1 = file_downloader_0.calc_speed(bool_0, bool_0, float_0)
        list_0 = []
        str_1 = None
        var_2 = file_downloader_0.try_utime(list_0, str_1)
        dict_0 = {float_0: var_1, str_0: bool_0, float_0: var_2}
        var_3 = file_downloader_0.to_console_title(dict_0)
    except BaseException:
        pass

def test_case_7():
    try:
        set_0 = set()
        bool_0 = True
        file_downloader_0 = module_0.FileDownloader(set_0, bool_0)
        var_0 = file_downloader_0.trouble()
    except BaseException:
        pass

def test_case_8():
    try:
        bytes_0 = b'\xaa'
        list_0 = [bytes_0]
        dict_0 = {bytes_0: list_0, bytes_0: list_0}
        list_1 = [bytes_0, dict_0, list_0, list_0]
        file_downloader_0 = None
        list_2 = [file_downloader_0, file_downloader_0, file_downloader_0, file_downloader_0]
        float_0 = 1167.96
        tuple_0 = (file_downloader_0, list_2, list_2, float_0)
        dict_1 = {}
        file_downloader_1 = module_0.FileDownloader(tuple_0, dict_1)
        var_0 = file_downloader_1.report_warning(*list_1)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'Al03v$X'
        dict_0 = {}
        list_0 = [dict_0]
        file_downloader_0 = module_0.FileDownloader(str_0, list_0)
        var_0 = file_downloader_0.report_error()
    except BaseException:
        pass

def test_case_10():
    try:
        dict_0 = None
        bytes_0 = b'\xed\xd8c\xf9\xd5\x0e\x08\xad`\x82\x06\xb0\x9aa\x8a\xc3m\xb8'
        str_0 = '[9월 모의고사 해설강의][수학_김상희] 수학 A형 16~20번'
        file_downloader_0 = module_0.FileDownloader(bytes_0, str_0)
        var_0 = file_downloader_0.report_destination(dict_0)
    except BaseException:
        pass

def test_case_11():
    try:
        list_0 = None
        str_0 = 'R:~:o|AqoqZK0H0C@\th'
        set_0 = {str_0, str_0, str_0}
        list_1 = []
        file_downloader_0 = module_0.FileDownloader(set_0, list_1)
        var_0 = file_downloader_0.report_progress(list_0)
    except BaseException:
        pass

def test_case_12():
    try:
        float_0 = -2399.6
        list_0 = [float_0]
        file_downloader_0 = module_0.FileDownloader(float_0, list_0)
        str_0 = "[+%E_'7\x0b8"
        var_0 = file_downloader_0.report_resuming_byte(str_0)
    except BaseException:
        pass

def test_case_13():
    try:
        dict_0 = {}
        list_0 = [dict_0, dict_0, dict_0]
        str_0 = 'AiT8n~49$"CRE!'
        bytes_0 = b'fg\x9a!ai\xd1\x83'
        float_0 = -2836.637647
        list_1 = [bytes_0, bytes_0, float_0, float_0]
        file_downloader_0 = module_0.FileDownloader(list_1, float_0)
        var_0 = file_downloader_0.report_retry(dict_0, list_0, str_0)
    except BaseException:
        pass

def test_case_14():
    try:
        bool_0 = True
        str_0 = None
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: bool_0}
        file_downloader_0 = module_0.FileDownloader(dict_0, dict_0)
        var_0 = file_downloader_0.download(str_0, bool_0)
    except BaseException:
        pass

def test_case_15():
    try:
        bool_0 = True
        str_0 = None
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: bool_0}
        file_downloader_0 = module_0.FileDownloader(dict_0, dict_0)
        str_1 = '\n.\rh;V}&r#42 >Aw%>'
        var_0 = file_downloader_0.download(str_1, bool_0)
    except BaseException:
        pass

def test_case_16():
    try:
        str_0 = None
        list_0 = []
        file_downloader_0 = module_0.FileDownloader(str_0, list_0)
        list_1 = [file_downloader_0, str_0]
        dict_0 = {}
        tuple_0 = (dict_0,)
        file_downloader_1 = module_0.FileDownloader(tuple_0, dict_0)
        var_0 = file_downloader_1.format_speed(list_1)
    except BaseException:
        pass

def test_case_17():
    try:
        str_0 = 'effective_video'
        bool_0 = True
        str_1 = 'qYBwY'
        dict_0 = {bool_0: str_0, str_0: bool_0}
        file_downloader_0 = module_0.FileDownloader(str_1, dict_0)
        var_0 = file_downloader_0.report_unable_to_resume()
    except BaseException:
        pass

def test_case_18():
    try:
        bool_0 = None
        list_0 = [bool_0, bool_0]
        str_0 = '\x0cLP]UE\\42D\x0cwO}^XOV*V'
        int_0 = 1442
        list_1 = [int_0, int_0, int_0, int_0]
        dict_0 = {}
        file_downloader_0 = module_0.FileDownloader(list_1, dict_0)
        var_0 = file_downloader_0.try_rename(list_0, str_0)
    except BaseException:
        pass

def test_case_19():
    try:
        dict_0 = {}
        str_0 = 'as'
        file_downloader_0 = module_0.FileDownloader(str_0, dict_0)
        var_0 = file_downloader_0.temp_name(str_0)
        bool_0 = None
        var_1 = file_downloader_0.slow_down(bool_0, str_0, bool_0)
        var_2 = file_downloader_0.try_utime(str_0, str_0)
        list_0 = None
        var_3 = file_downloader_0.format_speed(list_0)
        str_1 = ''
        var_4 = file_downloader_0.download(str_1, str_0)
    except BaseException:
        pass

def test_case_20():
    try:
        bool_0 = True
        str_0 = None
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: bool_0}
        int_0 = 2380
        file_downloader_0 = module_0.FileDownloader(int_0, dict_0)
        float_0 = 1838.0
        set_0 = None
        float_1 = 823.421
        float_2 = -1138.85362
        complex_0 = None
        tuple_0 = (float_1, dict_0, float_2, complex_0)
        var_0 = file_downloader_0.calc_eta(float_0, set_0, tuple_0, dict_0)
    except BaseException:
        pass

def test_case_21():
    try:
        float_0 = -0.37867350187837423
        str_0 = 'Qr!/s0,q;\x0cAHG*W'
        file_downloader_0 = module_0.FileDownloader(float_0, str_0)
        var_0 = file_downloader_0.undo_temp_name(str_0)
        bool_0 = True
        var_1 = file_downloader_0.calc_speed(bool_0, bool_0, float_0)
        list_0 = []
        str_1 = None
        var_2 = file_downloader_0.try_utime(list_0, str_1)
        list_1 = [bool_0, str_0]
        var_3 = file_downloader_0.try_utime(list_1, float_0)
    except BaseException:
        pass

def test_case_22():
    try:
        bool_0 = True
        str_0 = None
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: bool_0}
        int_0 = 2380
        file_downloader_0 = module_0.FileDownloader(int_0, dict_0)
        float_0 = 1838.0
        set_0 = None
        float_1 = 823.421
        float_2 = -1138.85362
        list_0 = [str_0, float_1]
        bytes_0 = b''
        str_1 = 'Aabj'
        var_0 = file_downloader_0.calc_eta(list_0, bytes_0, set_0, str_1)
        complex_0 = None
        tuple_0 = (float_1, dict_0, float_2, complex_0)
        var_1 = file_downloader_0.calc_eta(float_0, set_0, tuple_0, dict_0)
    except BaseException:
        pass

def test_case_23():
    try:
        bool_0 = True
        str_0 = None
        dict_0 = {str_0: str_0, str_0: bool_0, str_0: str_0, str_0: bool_0, str_0: str_0}
        file_downloader_0 = module_0.FileDownloader(dict_0, dict_0)
        bool_1 = False
        dict_1 = {bool_1: str_0}
        list_0 = []
        var_0 = file_downloader_0.calc_eta(bool_0, bool_0, dict_1, list_0)
        int_0 = 780
        var_1 = file_downloader_0.format_seconds(int_0)
        int_1 = -2212
        var_2 = file_downloader_0.format_retries(int_1)
        str_1 = ''
        list_1 = [var_1, str_0, int_1, str_1]
        str_2 = "Post Processing exception.\n\n    This exception may be raised by PostProcessor's .run() method to\n    indicate an error in the postprocessing task.\n    "
        var_3 = file_downloader_0.download(list_1, str_2)
    except BaseException:
        pass

def test_case_24():
    try:
        int_0 = 2366
        bytes_0 = b'\xfd\x0f\xe5\x94%\xb8H\x1fj\xbfY\xd0\xb9V\xf6)\xac\xeaR'
        file_downloader_0 = module_0.FileDownloader(bytes_0, int_0)
        str_0 = "q5AX+[Mn_`ZZCY^zTFA'"
        var_0 = file_downloader_0.undo_temp_name(str_0)
        str_1 = '7\x0c?"\x0cz'
        var_1 = file_downloader_0.try_utime(str_0, str_1)
        int_1 = 3667
        var_2 = file_downloader_0.format_seconds(int_1)
        bytes_1 = None
        var_3 = file_downloader_0.format_percent(bytes_1)
        str_2 = ':Bw{/0:)i'
        var_4 = file_downloader_0.ytdl_filename(str_2)
        var_5 = file_downloader_0.to_screen()
    except BaseException:
        pass

def test_case_25():
    try:
        bool_0 = True
        str_0 = None
        dict_0 = {str_0: str_0, str_0: bool_0, str_0: str_0, str_0: bool_0, str_0: str_0}
        file_downloader_0 = module_0.FileDownloader(dict_0, dict_0)
        int_0 = 1472756695
        var_0 = file_downloader_0.format_seconds(int_0)
        bool_1 = False
        var_1 = file_downloader_0.download(bool_0, bool_1)
    except BaseException:
        pass

def test_case_26():
    try:
        int_0 = 657
        int_1 = 166
        str_0 = 'Organic mattresses used to clean waste water'
        float_0 = 308.067
        dict_0 = {int_1: str_0, int_1: int_0}
        set_0 = set()
        file_downloader_0 = module_0.FileDownloader(dict_0, set_0)
        var_0 = file_downloader_0.format_retries(float_0)
        str_1 = 'Vw3A;'
        var_1 = file_downloader_0.try_rename(str_0, str_1)
    except BaseException:
        pass

def test_case_27():
    try:
        var_0 = None
        file_downloader_0 = module_0.FileDownloader(var_0, var_0)
        str_0 = 'status'
        str_1 = 'finished'
        int_0 = 1
        var_1 = {str_0: str_1, str_1: int_0, str_1: int_0}
        var_2 = file_downloader_0.report_progress(var_1)
    except BaseException:
        pass

def test_case_28():
    try:
        float_0 = 0.267788310757347
        str_0 = 'gjkj%E(e%['
        file_downloader_0 = module_0.FileDownloader(float_0, str_0)
        bool_0 = False
        var_0 = file_downloader_0.best_block_size(bool_0, bool_0)
        dict_0 = {}
        var_1 = file_downloader_0.temp_name(dict_0)
    except BaseException:
        pass

def test_case_29():
    try:
        var_0 = None
        file_downloader_0 = module_0.FileDownloader(var_0, var_0)
        str_0 = 'status'
        str_1 = 'inished'
        int_0 = 25
        var_1 = {file_downloader_0: int_0, str_1: str_0, var_0: str_1, var_0: str_1, str_0: str_1, var_0: str_1, str_1: int_0}
        var_2 = file_downloader_0.report_progress(var_1)
    except BaseException:
        pass

def test_case_30():
    try:
        float_0 = 0.267788310757347
        str_0 = 'Qr!/0,q;\x0cAHG*W'
        file_downloader_0 = module_0.FileDownloader(float_0, str_0)
        var_0 = file_downloader_0.undo_temp_name(str_0)
        bool_0 = True
        var_1 = file_downloader_0.best_block_size(bool_0, bool_0)
        dict_0 = {}
        var_2 = file_downloader_0.temp_name(dict_0)
    except BaseException:
        pass

def test_case_31():
    try:
        float_0 = 0.0
        str_0 = "'r!/s0'9;\x0cAHG*W"
        file_downloader_0 = module_0.FileDownloader(float_0, str_0)
        var_0 = file_downloader_0.undo_temp_name(str_0)
        bool_0 = True
        var_1 = file_downloader_0.calc_speed(bool_0, bool_0, float_0)
        tuple_0 = ()
        list_0 = [bool_0, float_0, tuple_0, str_0]
        str_1 = None
        var_2 = file_downloader_0.try_utime(list_0, str_1)
        bytes_0 = b'!\xe5\x7f)P>\x97'
        var_3 = file_downloader_0.add_progress_hook(float_0)
        var_4 = file_downloader_0.report_file_already_downloaded(bytes_0)
    except BaseException:
        pass