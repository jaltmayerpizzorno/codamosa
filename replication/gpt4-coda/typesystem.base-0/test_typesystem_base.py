# Automatically generated by Pynguin.
import typesystem.base as module_0

def test_case_0():
    validation_result_0 = module_0.ValidationResult()
    bool_0 = validation_result_0.__bool__()

def test_case_1():
    int_0 = 5
    position_0 = module_0.Position(int_0, int_0, int_0)

def test_case_2():
    int_0 = 1
    position_0 = module_0.Position(int_0, int_0, int_0)
    bool_0 = position_0.__eq__(position_0)

def test_case_3():
    str_0 = 'WG(+2:,%s\x0cF~Gne-'
    str_1 = 'y'
    message_0 = module_0.Message(text=str_1)
    base_error_0 = module_0.BaseError(text=str_0, key=str_0)
    iterator_0 = base_error_0.__iter__()

def test_case_4():
    str_0 = None
    message_0 = module_0.Message(text=str_0)

def test_case_5():
    str_0 = '~/a>0N%'
    message_0 = module_0.Message(text=str_0, code=str_0)
    bool_0 = message_0.__eq__(message_0)

def test_case_6():
    str_0 = '0icY.4vAPD\x0c8BY'
    base_error_0 = module_0.BaseError(text=str_0)
    str_1 = base_error_0.__str__()
    bool_0 = base_error_0.__eq__(str_0)
    int_0 = base_error_0.__hash__()

def test_case_7():
    none_type_0 = None
    int_0 = -976
    int_1 = 308
    int_2 = -27
    position_0 = module_0.Position(int_0, int_1, int_2)
    validation_result_0 = module_0.ValidationResult(value=none_type_0)
    bool_0 = validation_result_0.__bool__()
    str_0 = validation_result_0.__repr__()
    message_0 = module_0.Message(text=str_0, key=str_0, start_position=position_0)
    iterator_0 = validation_result_0.__iter__()
    str_1 = message_0.__repr__()
    str_2 = message_0.__repr__()
    bool_1 = message_0.__eq__(message_0)
    message_1 = module_0.Message(text=str_0, code=str_1, key=int_1)

def test_case_8():
    str_0 = '0icY.4vAPD\x0c8BY'
    base_error_0 = module_0.BaseError(text=str_0)
    str_1 = base_error_0.__str__()
    bool_0 = base_error_0.__eq__(str_0)
    bool_1 = base_error_0.__eq__(str_0)
    list_0 = base_error_0.messages()
    base_error_1 = module_0.BaseError(messages=list_0)
    iterator_0 = base_error_0.__iter__()

def test_case_9():
    str_0 = "'1%tHh>#"
    none_type_0 = None
    validation_result_0 = module_0.ValidationResult(value=none_type_0)
    int_0 = -14
    base_error_0 = module_0.BaseError(text=str_0)
    iterator_0 = base_error_0.__iter__()
    iterator_1 = validation_result_0.__iter__()
    list_0 = base_error_0.messages(add_prefix=int_0)
    bool_0 = validation_result_0.__bool__()
    validation_result_1 = module_0.ValidationResult(value=iterator_0)
    parse_error_0 = module_0.ParseError(text=str_0)
    str_1 = base_error_0.__repr__()
    iterator_2 = validation_result_1.__iter__()

def test_case_10():
    validation_result_0 = module_0.ValidationResult()
    dict_0 = {validation_result_0: validation_result_0, validation_result_0: validation_result_0, validation_result_0: validation_result_0}
    str_0 = validation_result_0.__repr__()
    str_1 = None
    str_2 = '\x0cCfrbMcu'
    int_0 = 4
    int_1 = 5
    position_0 = module_0.Position(int_0, int_0, int_1)
    message_0 = module_0.Message(text=str_1, code=str_0, index=str_2, start_position=position_0, end_position=position_0)
    list_0 = [message_0]
    base_error_0 = module_0.BaseError(messages=list_0)
    int_2 = base_error_0.__len__()
    str_3 = None
    parse_error_0 = module_0.ParseError(text=dict_0, code=str_3)
    validation_result_1 = module_0.ValidationResult()
    bool_0 = validation_result_1.__bool__()

def test_case_11():
    str_0 = '0icY.4vAPD\x0c8BY'
    optional_0 = None
    optional_1 = None
    base_error_0 = module_0.BaseError(text=str_0)
    bool_0 = base_error_0.__eq__(str_0)
    bool_1 = base_error_0.__eq__(str_0)
    message_0 = module_0.Message(text=str_0, index=optional_0, end_position=optional_1)

def test_case_12():
    float_0 = 1242.65
    validation_result_0 = module_0.ValidationResult(value=float_0)
    str_0 = validation_result_0.__repr__()

def test_case_13():
    str_0 = '~/a>0N%'
    int_0 = 1821
    int_1 = -177
    position_0 = module_0.Position(int_0, int_1, int_0)
    list_0 = [int_0]
    message_0 = module_0.Message(text=str_0, code=str_0, index=list_0)
    int_2 = message_0.__hash__()
    message_1 = module_0.Message(text=str_0, end_position=position_0)
    message_2 = module_0.Message(text=str_0, code=str_0)
    bool_0 = message_2.__eq__(message_2)

def test_case_14():
    str_0 = '0icY.4vAPD\x0c8BY'
    base_error_0 = module_0.BaseError(text=str_0)
    bool_0 = base_error_0.__eq__(str_0)
    str_1 = base_error_0.__repr__()
    int_0 = base_error_0.__hash__()
    int_1 = base_error_0.__hash__()

def test_case_15():
    str_0 = "'1%tHh>#"
    message_0 = module_0.Message(text=str_0, code=str_0, key=str_0)
    str_1 = message_0.__repr__()
    none_type_0 = None
    base_error_0 = module_0.BaseError(text=str_0)
    str_2 = base_error_0.__repr__()
    list_0 = base_error_0.messages()
    validation_result_0 = module_0.ValidationResult(value=none_type_0)
    int_0 = -8
    int_1 = base_error_0.__len__()
    int_2 = base_error_0.__hash__()
    int_3 = -742
    int_4 = 326
    bool_0 = validation_result_0.__bool__()
    position_0 = module_0.Position(int_0, int_3, int_4)
    message_1 = module_0.Message(text=str_0, key=str_0, start_position=position_0)
    base_error_1 = module_0.BaseError(text=str_0)
    iterator_0 = base_error_1.__iter__()
    iterator_1 = validation_result_0.__iter__()
    str_3 = message_1.__repr__()
    list_1 = base_error_0.messages(add_prefix=int_0)
    str_4 = message_1.__repr__()
    int_5 = message_1.__hash__()
    bool_1 = base_error_1.__eq__(str_4)
    list_2 = [message_1, message_1, message_1, message_1]
    validation_result_1 = module_0.ValidationResult()
    str_5 = validation_result_1.__repr__()
    base_error_2 = module_0.BaseError(messages=list_2)
    str_6 = base_error_2.__repr__()
    iterator_2 = validation_result_1.__iter__()

def test_case_16():
    str_0 = 'This is an error message.'
    base_error_0 = module_0.BaseError(text=str_0)
    var_0 = str(base_error_0)
    str_1 = 'first_error'
    message_0 = module_0.Message(text=str_0, code=str_1)
    str_2 = 'Second error message.'
    str_3 = 'second_error'
    str_4 = 'second'
    message_1 = module_0.Message(text=str_2, code=str_3, key=str_4)
    message_2 = [message_0, message_1]
    base_error_1 = module_0.BaseError(messages=message_2)
    var_1 = str(base_error_1)
    str_5 = 'Error with index.'
    str_6 = 'error_key'
    base_error_2 = module_0.BaseError(text=str_5, key=str_6)
    var_2 = str(base_error_2)

def test_case_17():
    str_0 = 'Valid data'
    validation_result_0 = module_0.ValidationResult(value=str_0)
    var_0 = iter(validation_result_0)
    var_1 = next(var_0)
    var_2 = next(var_0)

def test_case_18():
    str_0 = "'1%tHh>#"
    none_type_0 = None
    int_0 = -976
    int_1 = 308
    int_2 = -27
    position_0 = module_0.Position(int_0, int_1, int_2)
    validation_error_0 = module_0.ValidationError(text=str_0, key=str_0, position=position_0)
    base_error_0 = module_0.BaseError(text=str_0)
    str_1 = base_error_0.__repr__()
    list_0 = base_error_0.messages()
    validation_result_0 = module_0.ValidationResult(value=none_type_0)
    int_3 = -8
    int_4 = base_error_0.__len__()
    int_5 = base_error_0.__hash__()
    str_2 = base_error_0.__str__()
    int_6 = -742
    int_7 = 326
    bool_0 = validation_result_0.__bool__()
    str_3 = validation_result_0.__repr__()
    position_1 = module_0.Position(int_3, int_6, int_7)
    message_0 = module_0.Message(text=str_0, key=str_0, start_position=position_1)
    base_error_1 = module_0.BaseError(text=str_0)
    int_8 = message_0.__hash__()
    iterator_0 = base_error_1.__iter__()
    iterator_1 = validation_result_0.__iter__()
    str_4 = message_0.__repr__()
    list_1 = base_error_0.messages(add_prefix=int_3)
    str_5 = message_0.__repr__()
    bool_1 = base_error_1.__eq__(str_5)
    int_9 = None
    base_error_2 = module_0.BaseError(key=int_9, messages=list_0)
    bool_2 = message_0.__eq__(message_0)
    message_1 = module_0.Message(text=str_0, code=str_4, key=int_8)
    str_6 = base_error_1.__repr__()
    message_2 = module_0.Message(text=str_0, key=int_1, position=position_1)
    bool_3 = message_1.__eq__(message_2)
    iterator_2 = validation_result_0.__iter__()

def test_case_19():
    str_0 = '1%tH>'
    int_0 = -2463
    int_1 = -3098
    int_2 = 2457
    position_0 = module_0.Position(int_0, int_1, int_2)
    message_0 = module_0.Message(text=str_0, code=str_0, start_position=position_0)
    str_1 = 'lA'
    list_0 = [str_1, str_1, str_1]
    int_3 = 1
    int_4 = 0
    int_5 = -3628
    position_1 = module_0.Position(int_3, int_4, int_5)
    message_1 = module_0.Message(text=str_1, index=list_0, start_position=position_1)
    bool_0 = message_1.__eq__(message_0)