# Automatically generated by Pynguin.
import ansible.module_utils.facts.hardware.openbsd as module_0

def test_case_0():
    try:
        open_b_s_d_hardware_collector_0 = module_0.OpenBSDHardwareCollector()
        bytes_0 = None
        open_b_s_d_hardware_collector_1 = module_0.OpenBSDHardwareCollector()
        open_b_s_d_hardware_0 = module_0.OpenBSDHardware(bytes_0)
        var_0 = open_b_s_d_hardware_0.populate(open_b_s_d_hardware_collector_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'ra@qlQN"7LFz&Z!{89Y'
        open_b_s_d_hardware_0 = module_0.OpenBSDHardware(str_0)
        var_0 = open_b_s_d_hardware_0.get_memory_facts()
    except BaseException:
        pass

def test_case_2():
    try:
        float_0 = -4370.0
        set_0 = {float_0}
        open_b_s_d_hardware_collector_0 = module_0.OpenBSDHardwareCollector(float_0, set_0)
        open_b_s_d_hardware_0 = module_0.OpenBSDHardware(open_b_s_d_hardware_collector_0)
        var_0 = open_b_s_d_hardware_0.get_uptime_facts()
    except BaseException:
        pass

def test_case_3():
    try:
        dict_0 = {}
        tuple_0 = (dict_0,)
        open_b_s_d_hardware_0 = module_0.OpenBSDHardware(tuple_0)
        var_0 = open_b_s_d_hardware_0.get_processor_facts()
    except BaseException:
        pass

def test_case_4():
    try:
        open_b_s_d_hardware_collector_0 = module_0.OpenBSDHardwareCollector()
        open_b_s_d_hardware_0 = module_0.OpenBSDHardware(open_b_s_d_hardware_collector_0)
        open_b_s_d_hardware_1 = module_0.OpenBSDHardware(open_b_s_d_hardware_0)
        var_0 = open_b_s_d_hardware_1.get_device_facts()
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'hBV 5liw>'
        open_b_s_d_hardware_0 = module_0.OpenBSDHardware(str_0)
        var_0 = open_b_s_d_hardware_0.get_dmi_facts()
    except BaseException:
        pass