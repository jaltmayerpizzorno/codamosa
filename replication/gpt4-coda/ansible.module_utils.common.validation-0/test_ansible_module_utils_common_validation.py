# Automatically generated by Pynguin.
import ansible.module_utils.common.validation as module_0

def test_case_0():
    pass

def test_case_1():
    str_0 = 'uB=QSU=Z<d3^OL5"TRS'
    var_0 = module_0.check_mutually_exclusive(str_0, str_0)

def test_case_2():
    str_0 = 'rj-,snV!4~6q96>7T'
    var_0 = module_0.safe_eval(str_0)

def test_case_3():
    bytes_0 = b'\xdb/\x9c\xecy^\x99\xa5K\xf3\xf1\x8c9\xf7\x06\x11m'
    var_0 = module_0.safe_eval(bytes_0)

def test_case_4():
    dict_0 = {}
    str_0 = 'daily'
    var_0 = module_0.check_required_one_of(dict_0, str_0)
    tuple_0 = ()
    float_0 = 1076.44907
    var_1 = module_0.check_required_if(tuple_0, float_0)

def test_case_5():
    str_0 = ']L3KWmZ7u\t'
    var_0 = module_0.check_required_together(str_0, str_0)

def test_case_6():
    float_0 = 1489.59724
    var_0 = module_0.check_missing_parameters(float_0)

def test_case_7():
    int_0 = -1641
    var_0 = module_0.check_type_str(int_0)

def test_case_8():
    str_0 = 'RGWY,5&.Ud+\x0b&y'
    var_0 = module_0.check_type_path(str_0)

def test_case_9():
    str_0 = 'ydL'
    var_0 = module_0.check_type_list(str_0)
    bool_0 = True
    var_1 = module_0.safe_eval(bool_0)

def test_case_10():
    str_0 = 'u-=QSU=Z<)B^OL5"QRS'
    var_0 = module_0.check_type_dict(str_0)

def test_case_11():
    float_0 = 1210.2
    var_0 = module_0.check_type_float(float_0)

def test_case_12():
    int_0 = -1641
    var_0 = module_0.check_type_raw(int_0)

def test_case_13():
    float_0 = 3325.135782
    var_0 = module_0.check_type_bits(float_0)

def test_case_14():
    str_0 = 'confirm\x0c '
    var_0 = module_0.check_type_path(str_0)
    bytes_0 = b'\xadu\xcd\xed\xad\xfa\x10\xe3\xfbM\x1b\x81yz'
    var_1 = module_0.check_type_jsonarg(bytes_0)

def test_case_15():
    str_0 = '_hHM"\x0c^DT&\rkv\'c44'
    list_0 = [str_0, str_0, str_0, str_0]
    str_1 = '('
    int_0 = None
    tuple_0 = (str_0, list_0, str_1, int_0)
    var_0 = module_0.check_mutually_exclusive(tuple_0, str_1)

def test_case_16():
    str_0 = 'mGROmOzN57&6\x0b\r\r8'
    float_0 = 0.1
    var_0 = module_0.check_type_path(float_0)
    set_0 = {str_0}
    tuple_0 = ()
    var_1 = module_0.check_required_together(set_0, tuple_0)

def test_case_17():
    bool_0 = False
    var_0 = module_0.check_type_int(bool_0)

def test_case_18():
    int_0 = 14
    var_0 = module_0.check_type_float(int_0)
    complex_0 = None
    var_1 = module_0.check_required_by(complex_0, complex_0)

def test_case_19():
    str_0 = '0bDFo&iki8w\\ZMH\r'
    set_0 = {str_0, str_0, str_0, str_0, str_0}
    str_1 = ''
    var_0 = module_0.check_missing_parameters(set_0, str_1)
    float_0 = None
    tuple_0 = ()
    bytes_0 = b'mu$\x8cA'
    var_1 = module_0.check_mutually_exclusive(float_0, tuple_0, bytes_0)

def test_case_20():
    bool_0 = False
    bytes_0 = None
    var_0 = module_0.check_required_one_of(bytes_0, bool_0)
    list_0 = []
    var_1 = module_0.check_missing_parameters(list_0)

def test_case_21():
    bool_0 = False
    bytes_0 = b'd\xd0\xac\xad\x1fDCv7>\xca\xaa\x17\xd6'
    list_0 = []
    complex_0 = None
    dict_0 = {bool_0: bool_0, bool_0: list_0, complex_0: list_0, bytes_0: bytes_0}
    var_0 = module_0.check_required_by(dict_0, list_0)

def test_case_22():
    str_0 = 'IL3KWmZ7u\t'
    var_0 = module_0.check_required_together(str_0, str_0)
    tuple_0 = None
    bytes_0 = b']'
    var_1 = module_0.check_required_if(tuple_0, bytes_0)

def test_case_23():
    tuple_0 = ()
    float_0 = 1076.44907
    var_0 = module_0.check_required_if(tuple_0, float_0)

def test_case_24():
    str_0 = 'Mtest'
    bool_0 = None
    var_0 = module_0.check_required_one_of(bool_0, str_0)
    str_1 = {str_0: str_0}
    var_1 = module_0.check_required_by(str_1, str_1)
    list_0 = [bool_0]
    var_2 = module_0.check_required_one_of(list_0, list_0)

def test_case_25():
    bool_0 = False
    int_0 = 12
    var_0 = module_0.check_type_float(int_0)
    bytes_0 = b'd\xd0\xac\xad\x1fDCv7>\xca\xd9\xaa\x17\xd6'
    list_0 = []
    complex_0 = None
    dict_0 = {bytes_0: complex_0}
    var_1 = module_0.check_type_dict(dict_0)
    dict_1 = {bool_0: bool_0, bool_0: list_0, complex_0: list_0, bytes_0: bytes_0}
    var_2 = module_0.check_required_by(dict_1, list_0)
    var_3 = module_0.check_type_bool(bool_0)

def test_case_26():
    str_0 = ''
    var_0 = module_0.check_missing_parameters(str_0, str_0)

def test_case_27():
    bool_0 = False
    dict_0 = {}
    var_0 = module_0.check_required_by(dict_0, bool_0)
    var_1 = module_0.check_type_dict(dict_0)

def test_case_28():
    bool_0 = False
    dict_0 = {}
    var_0 = module_0.check_required_by(dict_0, bool_0)

def test_case_29():
    str_0 = '(1, 2, 3)'
    var_0 = module_0.safe_eval(str_0)
    str_1 = "os.path.join('a', 'b')"
    var_1 = module_0.safe_eval(str_1)

def test_case_30():
    str_0 = '\t\\=jXEhkZiK"y0@1w\t3u'
    var_0 = module_0.check_type_dict(str_0)

def test_case_31():
    str_0 = "os.path.join('a', 'b')"
    var_0 = module_0.safe_eval(str_0)

def test_case_32():
    str_0 = '(1, 2, 3)'
    var_0 = module_0.safe_eval(str_0)
    var_1 = module_0.safe_eval(str_0)
    str_1 = 'import os'
    var_2 = module_0.safe_eval(str_1)

def test_case_33():
    str_0 = 'Mtest'
    str_1 = {str_0: str_0}
    var_0 = module_0.check_required_by(str_1, str_1)

def test_case_34():
    str_0 = "{'key': 'value'}"
    var_0 = module_0.check_type_dict(str_0)
    var_1 = module_0.safe_eval(str_0)
    str_1 = "os.path.join('a', 'b')"
    var_2 = module_0.safe_eval(str_1)

def test_case_35():
    str_0 = 'VERSFO>_ID=\\"(.*E,"'
    var_0 = module_0.check_type_dict(str_0)
    str_1 = '[1, Lw 3]'
    str_2 = '(1, 2 3)'
    var_1 = module_0.safe_eval(str_2)
    str_3 = None
    var_2 = module_0.safe_eval(str_3)
    str_4 = "os.path.join('a', 'b')"
    var_3 = module_0.safe_eval(str_4)
    str_5 = 'import os'
    float_0 = None
    bytes_0 = b'M\x86\xd5\xd7\xad=WV\x8e\xe6\x04k'
    dict_0 = {str_1: str_2, str_1: var_1, str_1: bytes_0, str_4: str_4}
    tuple_0 = (bytes_0, dict_0)
    var_4 = module_0.check_required_by(float_0, tuple_0)
    var_5 = module_0.safe_eval(str_5)

def test_case_36():
    str_0 = 'VERSFO>_ID=\\I"(.*E,"'
    var_0 = module_0.check_type_dict(str_0)
    str_1 = '(1, 2 3)'
    var_1 = module_0.safe_eval(str_1)
    str_2 = "os.path.join('a', 'b')"
    var_2 = module_0.safe_eval(str_2)
    str_3 = 'import os'
    int_0 = 11
    var_3 = module_0.check_type_int(int_0)
    dict_0 = {}
    int_1 = -1809
    var_4 = module_0.check_required_one_of(dict_0, int_1)
    float_0 = None
    tuple_0 = None
    var_5 = module_0.check_type_raw(tuple_0)
    bytes_0 = None
    tuple_1 = None
    var_6 = module_0.check_mutually_exclusive(bytes_0, tuple_1)
    tuple_2 = (bytes_0, dict_0)
    var_7 = module_0.check_required_by(float_0, tuple_2)
    var_8 = module_0.safe_eval(str_3)