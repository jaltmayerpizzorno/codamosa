

# Generated at 2024-03-18 07:21:19.563684
    py_info = PyInfo()

    assert py_info.PY2 == (sys.version_info[0] == 2)
    assert py_info.PY3 == (sys.version_info[0] == 3)

    if py_info.PY3:
        assert py_info.string_types == (str,)
        assert py_info.text_type == str
        assert py_info.binary_type == bytes
        assert py_info.integer_types == (int,)
        assert py_info.class_types == (type,)
        assert py_info.maxsize == sys.maxsize
    else:
        assert py_info.string_types == (basestring,)
        assert py_info.text_type == unicode
        assert py_info.binary_type == str
        assert py_info.integer_types == (int, long)
        assert py_info.class_types == (type, types.ClassType)

        if sys.platform.startswith("java"):
            assert py_info.maxsize == int((1 << 31) - 1)
        else:
           

# Generated at 2024-03-18 07:21:26.345609
    py_info = PyInfo()

    assert py_info.PY2 == (sys.version_info[0] == 2)
    assert py_info.PY3 == (sys.version_info[0] == 3)

    if py_info.PY3:
        assert py_info.string_types == (str,)
        assert py_info.text_type == str
        assert py_info.binary_type == bytes
        assert py_info.integer_types == (int,)
        assert py_info.class_types == (type,)
        assert py_info.maxsize == sys.maxsize
    else:
        assert py_info.string_types == (basestring,)
        assert py_info.text_type == unicode
        assert py_info.binary_type == str
        assert py_info.integer_types == (int, long)
        assert py_info.class_types == (type, types.ClassType)

        if sys.platform.startswith("java"):
            assert py_info.maxsize == int((1 << 31) - 1)
        else:
           

# Generated at 2024-03-18 07:21:32.691207
    py_info = PyInfo()

    assert py_info.PY2 == (sys.version_info[0] == 2)
    assert py_info.PY3 == (sys.version_info[0] == 3)

    if py_info.PY3:
        assert py_info.string_types == (str,)
        assert py_info.text_type == str
        assert py_info.binary_type == bytes
        assert py_info.integer_types == (int,)
        assert py_info.class_types == (type,)
        assert py_info.maxsize == sys.maxsize
    else:
        assert py_info.string_types == (basestring,)
        assert py_info.text_type == unicode
        assert py_info.binary_type == str
        assert py_info.integer_types == (int, long)
        assert py_info.class_types == (type, types.ClassType)

        if sys.platform.startswith("java"):
            assert py_info.maxsize == int((1 << 31) - 1)
        else:
           

# Generated at 2024-03-18 07:21:38.659785
    py_info = PyInfo()

    assert py_info.PY2 == (sys.version_info[0] == 2)
    assert py_info.PY3 == (sys.version_info[0] == 3)

    if py_info.PY3:
        assert py_info.string_types == (str,)
        assert py_info.text_type == str
        assert py_info.binary_type == bytes
        assert py_info.integer_types == (int,)
        assert py_info.class_types == (type,)
        assert py_info.maxsize == sys.maxsize
    else:
        assert py_info.string_types == (basestring,)
        assert py_info.text_type == unicode
        assert py_info.binary_type == str
        assert py_info.integer_types == (int, long)
        assert py_info.class_types == (type, types.ClassType)

        if sys.platform.startswith("java"):
            assert py_info.maxsize == int((1 << 31) - 1)
        else:
           

# Generated at 2024-03-18 07:21:44.120466
    py_info = PyInfo()

    assert py_info.PY2 == (sys.version_info[0] == 2)
    assert py_info.PY3 == (sys.version_info[0] == 3)

    if py_info.PY3:
        assert py_info.string_types == (str,)
        assert py_info.text_type == str
        assert py_info.binary_type == bytes
        assert py_info.integer_types == (int,)
        assert py_info.class_types == (type,)
        assert py_info.maxsize == sys.maxsize
    else:
        assert py_info.string_types == (basestring,)
        assert py_info.text_type == unicode
        assert py_info.binary_type == str
        assert py_info.integer_types == (int, long)
        assert py_info.class_types == (type, types.ClassType)

        if sys.platform.startswith("java"):
            assert py_info.maxsize == int((1 << 31) - 1)
        else:
           

# Generated at 2024-03-18 07:21:50.397135
    py_info = PyInfo()

    assert py_info.PY2 == (sys.version_info[0] == 2)
    assert py_info.PY3 == (sys.version_info[0] == 3)

    if py_info.PY3:
        assert py_info.string_types == (str,)
        assert py_info.text_type == str
        assert py_info.binary_type == bytes
        assert py_info.integer_types == (int,)
        assert py_info.class_types == (type,)
        assert py_info.maxsize == sys.maxsize
    else:
        assert py_info.string_types == (basestring,)
        assert py_info.text_type == unicode
        assert py_info.binary_type == str
        assert py_info.integer_types == (int, long)
        assert py_info.class_types == (type, types.ClassType)

        if sys.platform.startswith("java"):
            assert py_info.maxsize == int((1 << 31) - 1)
        else:
           

# Generated at 2024-03-18 07:22:01.519355
    py_info = PyInfo()

    assert py_info.PY2 == (sys.version_info[0] == 2)
    assert py_info.PY3 == (sys.version_info[0] == 3)

    if py_info.PY3:
        assert py_info.string_types == (str,)
        assert py_info.text_type == str
        assert py_info.binary_type == bytes
        assert py_info.integer_types == (int,)
        assert py_info.class_types == (type,)
        assert py_info.maxsize == sys.maxsize
    else:
        assert py_info.string_types == (basestring,)
        assert py_info.text_type == unicode
        assert py_info.binary_type == str
        assert py_info.integer_types == (int, long)
        assert py_info.class_types == (type, types.ClassType)

        if sys.platform.startswith("java"):
            assert py_info.maxsize == int((1 << 31) - 1)
        else:
           

# Generated at 2024-03-18 07:22:08.217579
    py_info = PyInfo()

    assert py_info.PY2 == (sys.version_info[0] == 2)
    assert py_info.PY3 == (sys.version_info[0] == 3)

    if py_info.PY3:
        assert py_info.string_types == (str,)
        assert py_info.text_type == str
        assert py_info.binary_type == bytes
        assert py_info.integer_types == (int,)
        assert py_info.class_types == (type,)
        assert py_info.maxsize == sys.maxsize
    else:
        assert py_info.string_types == (basestring,)
        assert py_info.text_type == unicode
        assert py_info.binary_type == str
        assert py_info.integer_types == (int, long)
        assert py_info.class_types == (type, types.ClassType)

        if sys.platform.startswith("java"):
            assert py_info.maxsize == int((1 << 31) - 1)
        else:
           

# Generated at 2024-03-18 07:22:16.980892
    py_info = PyInfo()

    assert py_info.PY2 == (sys.version_info[0] == 2)
    assert py_info.PY3 == (sys.version_info[0] == 3)

    if py_info.PY3:
        assert py_info.string_types == (str,)
        assert py_info.text_type == str
        assert py_info.binary_type == bytes
        assert py_info.integer_types == (int,)
        assert py_info.class_types == (type,)
        assert py_info.maxsize == sys.maxsize
    else:
        assert py_info.string_types == (basestring,)
        assert py_info.text_type == unicode
        assert py_info.binary_type == str
        assert py_info.integer_types == (int, long)
        assert py_info.class_types == (type, types.ClassType)

        if sys.platform.startswith("java"):
            assert py_info.maxsize == int((1 << 31) - 1)
        else:
           

# Generated at 2024-03-18 07:22:24.874724
    py_info = PyInfo()

    assert py_info.PY2 == (sys.version_info[0] == 2)
    assert py_info.PY3 == (sys.version_info[0] == 3)

    if py_info.PY3:
        assert py_info.string_types == (str,)
        assert py_info.text_type == str
        assert py_info.binary_type == bytes
        assert py_info.integer_types == (int,)
        assert py_info.class_types == (type,)
        assert py_info.maxsize == sys.maxsize
    else:
        assert py_info.string_types == (basestring,)
        assert py_info.text_type == unicode
        assert py_info.binary_type == str
        assert py_info.integer_types == (int, long)
        assert py_info.class_types == (type, types.ClassType)

        if sys.platform.startswith("java"):
            assert py_info.maxsize == int((1 << 31) - 1)
        else:
           

# Generated at 2024-03-18 07:22:40.478131
    py_info = PyInfo()

    assert py_info.PY2 == (sys.version_info[0] == 2)
    assert py_info.PY3 == (sys.version_info[0] == 3)

    if py_info.PY3:
        assert py_info.string_types == (str,)
        assert py_info.text_type == str
        assert py_info.binary_type == bytes
        assert py_info.integer_types == (int,)
        assert py_info.class_types == (type,)
        assert py_info.maxsize == sys.maxsize
    else:
        assert py_info.string_types == (basestring,)
        assert py_info.text_type == unicode
        assert py_info.binary_type == str
        assert py_info.integer_types == (int, long)
        assert py_info.class_types == (type, types.ClassType)

        if sys.platform.startswith("java"):
            assert py_info.maxsize == int((1 << 31) - 1)
        else:
           

# Generated at 2024-03-18 07:22:47.420427
    py_info = PyInfo()

    assert py_info.PY2 == (sys.version_info[0] == 2)
    assert py_info.PY3 == (sys.version_info[0] == 3)

    if py_info.PY3:
        assert py_info.string_types == (str,)
        assert py_info.text_type == str
        assert py_info.binary_type == bytes
        assert py_info.integer_types == (int,)
        assert py_info.class_types == (type,)
        assert py_info.maxsize == sys.maxsize
    else:
        assert py_info.string_types == (basestring,)
        assert py_info.text_type == unicode
        assert py_info.binary_type == str
        assert py_info.integer_types == (int, long)
        assert py_info.class_types == (type, types.ClassType)

        if sys.platform.startswith("java"):
            assert py_info.maxsize == int((1 << 31) - 1)
        else:
           

# Generated at 2024-03-18 07:22:53.923357
    py_info = PyInfo()

    assert py_info.PY2 == (sys.version_info[0] == 2)
    assert py_info.PY3 == (sys.version_info[0] == 3)

    if py_info.PY3:
        assert py_info.string_types == (str,)
        assert py_info.text_type == str
        assert py_info.binary_type == bytes
        assert py_info.integer_types == (int,)
        assert py_info.class_types == (type,)
        assert py_info.maxsize == sys.maxsize
    else:
        assert py_info.string_types == (basestring,)
        assert py_info.text_type == unicode
        assert py_info.binary_type == str
        assert py_info.integer_types == (int, long)
        assert py_info.class_types == (type, types.ClassType)

        if sys.platform.startswith("java"):
            assert py_info.maxsize == int((1 << 31) - 1)
        else:
           

# Generated at 2024-03-18 07:23:00.166927
    py_info = PyInfo()

    assert py_info.PY2 == (sys.version_info[0] == 2)
    assert py_info.PY3 == (sys.version_info[0] == 3)

    if py_info.PY3:
        assert py_info.string_types == (str,)
        assert py_info.text_type is str
        assert py_info.binary_type is bytes
        assert py_info.integer_types == (int,)
        assert py_info.class_types == (type,)
    else:
        assert py_info.string_types == (basestring,)
        assert py_info.text_type is unicode
        assert py_info.binary_type is str
        assert py_info.integer_types == (int, long)
        assert py_info.class_types == (type, types.ClassType)

    if sys.platform.startswith("java"):
        assert py_info.maxsize == int((1 << 31) - 1)
    else:
        if sys.maxsize > 2**32:
           

# Generated at 2024-03-18 07:23:08.164052
    py_info = PyInfo()

    assert py_info.PY2 == (sys.version_info[0] == 2)
    assert py_info.PY3 == (sys.version_info[0] == 3)

    if py_info.PY3:
        assert py_info.string_types == (str,)
        assert py_info.text_type == str
        assert py_info.binary_type == bytes
        assert py_info.integer_types == (int,)
        assert py_info.class_types == (type,)
        assert py_info.maxsize == sys.maxsize
    else:
        assert py_info.string_types == (basestring,)
        assert py_info.text_type == unicode
        assert py_info.binary_type == str
        assert py_info.integer_types == (int, long)
        assert py_info.class_types == (type, types.ClassType)

        if sys.platform.startswith("java"):
            assert py_info.maxsize == int((1 << 31) - 1)
        else:
           

# Generated at 2024-03-18 07:23:14.630315
    py_info = PyInfo()

    assert py_info.PY2 == (sys.version_info[0] == 2)
    assert py_info.PY3 == (sys.version_info[0] == 3)

    if py_info.PY3:
        assert py_info.string_types == (str,)
        assert py_info.text_type is str
        assert py_info.binary_type is bytes
        assert py_info.integer_types == (int,)
        assert py_info.class_types == (type,)
        assert py_info.maxsize == sys.maxsize
    else:
        assert py_info.string_types == (basestring,)
        assert py_info.text_type is unicode
        assert py_info.binary_type is str
        assert py_info.integer_types == (int, long)
        assert py_info.class_types == (type, types.ClassType)

        if sys.platform.startswith("java"):
            assert py_info.maxsize == int((1 << 31) - 1)
        else:
           

# Generated at 2024-03-18 07:23:22.025919
    py_info = PyInfo()

    assert py_info.PY2 == (sys.version_info[0] == 2)
    assert py_info.PY3 == (sys.version_info[0] == 3)

    if py_info.PY3:
        assert py_info.string_types == (str,)
        assert py_info.text_type == str
        assert py_info.binary_type == bytes
        assert py_info.integer_types == (int,)
        assert py_info.class_types == (type,)
    else:
        assert py_info.string_types == (basestring,)
        assert py_info.text_type == unicode
        assert py_info.binary_type == str
        assert py_info.integer_types == (int, long)
        assert py_info.class_types == (type, types.ClassType)

    if sys.platform.startswith("java"):
        assert py_info.maxsize == int((1 << 31) - 1)
    else:
        if sys.maxsize > 2**32:
           

# Generated at 2024-03-18 07:23:28.203537
    py_info = PyInfo()

    assert py_info.PY2 == (sys.version_info[0] == 2)
    assert py_info.PY3 == (sys.version_info[0] == 3)

    if py_info.PY3:
        assert py_info.string_types == (str,)
        assert py_info.text_type is str
        assert py_info.binary_type is bytes
        assert py_info.integer_types == (int,)
        assert py_info.class_types == (type,)
        assert py_info.maxsize == sys.maxsize
    else:
        assert py_info.string_types == (basestring,)
        assert py_info.text_type is unicode
        assert py_info.binary_type is str
        assert py_info.integer_types == (int, long)
        assert py_info.class_types == (type, types.ClassType)

        if sys.platform.startswith("java"):
            assert py_info.maxsize == int((1 << 31) - 1)
        else:
           

# Generated at 2024-03-18 07:23:36.655024
    py_info = PyInfo()

    assert py_info.PY2 == (sys.version_info[0] == 2)
    assert py_info.PY3 == (sys.version_info[0] == 3)

    if py_info.PY3:
        assert py_info.string_types == (str,)
        assert py_info.text_type == str
        assert py_info.binary_type == bytes
        assert py_info.integer_types == (int,)
        assert py_info.class_types == (type,)
        assert py_info.maxsize == sys.maxsize
    else:
        assert py_info.string_types == (basestring,)
        assert py_info.text_type == unicode
        assert py_info.binary_type == str
        assert py_info.integer_types == (int, long)
        assert py_info.class_types == (type, types.ClassType)

        if sys.platform.startswith("java"):
            assert py_info.maxsize == int((1 << 31) - 1)
        else:
           

# Generated at 2024-03-18 07:23:44.515171
    py_info = PyInfo()

    assert py_info.PY2 == (sys.version_info[0] == 2)
    assert py_info.PY3 == (sys.version_info[0] == 3)

    if py_info.PY3:
        assert py_info.string_types == (str,)
        assert py_info.text_type == str
        assert py_info.binary_type == bytes
        assert py_info.integer_types == (int,)
        assert py_info.class_types == (type,)
        assert py_info.maxsize == sys.maxsize
    else:
        assert py_info.string_types == (basestring,)
        assert py_info.text_type == unicode
        assert py_info.binary_type == str
        assert py_info.integer_types == (int, long)
        assert py_info.class_types == (type, types.ClassType)

        if sys.platform.startswith("java"):
            assert py_info.maxsize == int((1 << 31) - 1)
        else:
           

# Generated at 2024-03-18 07:24:02.386633
    py_info = PyInfo()

    assert py_info.PY2 == (sys.version_info[0] == 2)
    assert py_info.PY3 == (sys.version_info[0] == 3)

    if py_info.PY3:
        assert py_info.string_types == (str,)
        assert py_info.text_type == str
        assert py_info.binary_type == bytes
        assert py_info.integer_types == (int,)
        assert py_info.class_types == (type,)
        assert py_info.maxsize == sys.maxsize
    else:
        assert py_info.string_types == (basestring,)
        assert py_info.text_type == unicode
        assert py_info.binary_type == str
        assert py_info.integer_types == (int, long)
        assert py_info.class_types == (type, types.ClassType)

        if sys.platform.startswith("java"):
            assert py_info.maxsize == int((1 << 31) - 1)
        else:
           

# Generated at 2024-03-18 07:24:08.867453
    py_info = PyInfo()

    assert py_info.PY2 == (sys.version_info[0] == 2)
    assert py_info.PY3 == (sys.version_info[0] == 3)

    if py_info.PY3:
        assert py_info.string_types == (str,)
        assert py_info.text_type is str
        assert py_info.binary_type is bytes
        assert py_info.integer_types == (int,)
        assert py_info.class_types == (type,)
    else:
        assert py_info.string_types == (basestring,)
        assert py_info.text_type is unicode
        assert py_info.binary_type is str
        assert py_info.integer_types == (int, long)
        assert py_info.class_types == (type, types.ClassType)

    if sys.platform.startswith("java"):
        assert py_info.maxsize == int((1 << 31) - 1)
    else:
        if sys.maxsize > 2**32:
           

# Generated at 2024-03-18 07:24:16.755814
    py_info = PyInfo()

    assert py_info.PY2 == (sys.version_info[0] == 2)
    assert py_info.PY3 == (sys.version_info[0] == 3)

    if py_info.PY3:
        assert py_info.string_types == (str,)
        assert py_info.text_type == str
        assert py_info.binary_type == bytes
        assert py_info.integer_types == (int,)
        assert py_info.class_types == (type,)
        assert py_info.maxsize == sys.maxsize
    else:
        assert py_info.string_types == (basestring,)
        assert py_info.text_type == unicode
        assert py_info.binary_type == str
        assert py_info.integer_types == (int, long)
        assert py_info.class_types == (type, types.ClassType)

        if sys.platform.startswith("java"):
            assert py_info.maxsize == int((1 << 31) - 1)
        else:
           

# Generated at 2024-03-18 07:24:25.984419
    py_info = PyInfo()

    assert py_info.PY2 == (sys.version_info[0] == 2)
    assert py_info.PY3 == (sys.version_info[0] == 3)

    if py_info.PY3:
        assert py_info.string_types == (str,)
        assert py_info.text_type == str
        assert py_info.binary_type == bytes
        assert py_info.integer_types == (int,)
        assert py_info.class_types == (type,)
        assert py_info.maxsize == sys.maxsize
    else:
        assert py_info.string_types == (basestring,)
        assert py_info.text_type == unicode
        assert py_info.binary_type == str
        assert py_info.integer_types == (int, long)
        assert py_info.class_types == (type, types.ClassType)

        if sys.platform.startswith("java"):
            assert py_info.maxsize == int((1 << 31) - 1)
        else:
           

# Generated at 2024-03-18 07:24:32.627915
    py_info = PyInfo()

    assert py_info.PY2 == (sys.version_info[0] == 2)
    assert py_info.PY3 == (sys.version_info[0] == 3)

    if py_info.PY3:
        assert py_info.string_types == (str,)
        assert py_info.text_type == str
        assert py_info.binary_type == bytes
        assert py_info.integer_types == (int,)
        assert py_info.class_types == (type,)
        assert py_info.maxsize == sys.maxsize
    else:
        assert py_info.string_types == (basestring,)
        assert py_info.text_type == unicode
        assert py_info.binary_type == str
        assert py_info.integer_types == (int, long)
        assert py_info.class_types == (type, types.ClassType)

        if sys.platform.startswith("java"):
            assert py_info.maxsize == int((1 << 31) - 1)
        else:
           

# Generated at 2024-03-18 07:24:42.604638
    py_info = PyInfo()

    assert py_info.PY2 == (sys.version_info[0] == 2)
    assert py_info.PY3 == (sys.version_info[0] == 3)

    if py_info.PY3:
        assert py_info.string_types == (str,)
        assert py_info.text_type == str
        assert py_info.binary_type == bytes
        assert py_info.integer_types == (int,)
        assert py_info.class_types == (type,)
        assert py_info.maxsize == sys.maxsize
    else:
        assert py_info.string_types == (basestring,)
        assert py_info.text_type == unicode
        assert py_info.binary_type == str
        assert py_info.integer_types == (int, long)
        assert py_info.class_types == (type, types.ClassType)

        if sys.platform.startswith("java"):
            assert py_info.maxsize == int((1 << 31) - 1)
        else:
           

# Generated at 2024-03-18 07:24:51.098717
    py_info = PyInfo()

    assert py_info.PY2 == (sys.version_info[0] == 2)
    assert py_info.PY3 == (sys.version_info[0] == 3)

    if py_info.PY3:
        assert py_info.string_types == (str,)
        assert py_info.text_type == str
        assert py_info.binary_type == bytes
        assert py_info.integer_types == (int,)
        assert py_info.class_types == (type,)
        assert py_info.maxsize == sys.maxsize
    else:
        assert py_info.string_types == (basestring,)
        assert py_info.text_type == unicode
        assert py_info.binary_type == str
        assert py_info.integer_types == (int, long)
        assert py_info.class_types == (type, types.ClassType)

        if sys.platform.startswith("java"):
            assert py_info.maxsize == int((1 << 31) - 1)
        else:
           

# Generated at 2024-03-18 07:24:57.294109
    py_info = PyInfo()

    assert py_info.PY2 == (sys.version_info[0] == 2)
    assert py_info.PY3 == (sys.version_info[0] == 3)

    if py_info.PY3:
        assert py_info.string_types == (str,)
        assert py_info.text_type == str
        assert py_info.binary_type == bytes
        assert py_info.integer_types == (int,)
        assert py_info.class_types == (type,)
        assert py_info.maxsize == sys.maxsize
    else:
        assert py_info.string_types == (basestring,)
        assert py_info.text_type == unicode
        assert py_info.binary_type == str
        assert py_info.integer_types == (int, long)
        assert py_info.class_types == (type, types.ClassType)

        if sys.platform.startswith("java"):
            assert py_info.maxsize == int((1 << 31) - 1)
        else:
           

# Generated at 2024-03-18 07:25:04.163517
    py_info = PyInfo()

    assert py_info.PY2 == (sys.version_info[0] == 2)
    assert py_info.PY3 == (sys.version_info[0] == 3)

    if py_info.PY3:
        assert py_info.string_types == (str,)
        assert py_info.text_type == str
        assert py_info.binary_type == bytes
        assert py_info.integer_types == (int,)
        assert py_info.class_types == (type,)
        assert py_info.maxsize == sys.maxsize
    else:
        assert py_info.string_types == (basestring,)
        assert py_info.text_type == unicode
        assert py_info.binary_type == str
        assert py_info.integer_types == (int, long)
        assert py_info.class_types == (type, types.ClassType)

        if sys.platform.startswith("java"):
            assert py_info.maxsize == int((1 << 31) - 1)
        else:
           

# Generated at 2024-03-18 07:25:12.108355
    py_info = PyInfo()

    assert py_info.PY2 == (sys.version_info[0] == 2)
    assert py_info.PY3 == (sys.version_info[0] == 3)

    if py_info.PY3:
        assert py_info.string_types == (str,)
        assert py_info.text_type == str
        assert py_info.binary_type == bytes
        assert py_info.integer_types == (int,)
        assert py_info.class_types == (type,)
    else:
        assert py_info.string_types == (basestring,)
        assert py_info.text_type == unicode
        assert py_info.binary_type == str
        assert py_info.integer_types == (int, long)
        assert py_info.class_types == (type, types.ClassType)

    if sys.platform.startswith("java"):
        assert py_info.maxsize == int((1 << 31) - 1)
    else:
        if sys.maxsize > 2**32:
           

# Generated at 2024-03-18 07:25:42.350951
    py_info = PyInfo()

    assert py_info.PY2 == (sys.version_info[0] == 2)
    assert py_info.PY3 == (sys.version_info[0] == 3)

    if py_info.PY3:
        assert py_info.string_types == (str,)
        assert py_info.text_type == str
        assert py_info.binary_type == bytes
        assert py_info.integer_types == (int,)
        assert py_info.class_types == (type,)
        assert py_info.maxsize == sys.maxsize
    else:
        assert py_info.string_types == (basestring,)
        assert py_info.text_type == unicode
        assert py_info.binary_type == str
        assert py_info.integer_types == (int, long)
        assert py_info.class_types == (type, types.ClassType)

        if sys.platform.startswith("java"):
            assert py_info.maxsize == int((1 << 31) - 1)
        else:
           

# Generated at 2024-03-18 07:25:48.333990
    py_info = PyInfo()

    assert py_info.PY2 == (sys.version_info[0] == 2)
    assert py_info.PY3 == (sys.version_info[0] == 3)

    if py_info.PY3:
        assert py_info.string_types == (str,)
        assert py_info.text_type == str
        assert py_info.binary_type == bytes
        assert py_info.integer_types == (int,)
        assert py_info.class_types == (type,)
        assert py_info.maxsize == sys.maxsize
    else:
        assert py_info.string_types == (basestring,)
        assert py_info.text_type == unicode
        assert py_info.binary_type == str
        assert py_info.integer_types == (int, long)
        assert py_info.class_types == (type, types.ClassType)

        if sys.platform.startswith("java"):
            assert py_info.maxsize == int((1 << 31) - 1)
        else:
           

# Generated at 2024-03-18 07:25:53.968033
    py_info = PyInfo()

    assert py_info.PY2 == (sys.version_info[0] == 2)
    assert py_info.PY3 == (sys.version_info[0] == 3)

    if py_info.PY3:
        assert py_info.string_types == (str,)
        assert py_info.text_type == str
        assert py_info.binary_type == bytes
        assert py_info.integer_types == (int,)
        assert py_info.class_types == (type,)
        assert py_info.maxsize == sys.maxsize
    else:
        assert py_info.string_types == (basestring,)
        assert py_info.text_type == unicode
        assert py_info.binary_type == str
        assert py_info.integer_types == (int, long)
        assert py_info.class_types == (type, types.ClassType)

        if sys.platform.startswith("java"):
            assert py_info.maxsize == int((1 << 31) - 1)
        else:
           

# Generated at 2024-03-18 07:25:59.689405
    py_info = PyInfo()

    assert py_info.PY2 == (sys.version_info[0] == 2)
    assert py_info.PY3 == (sys.version_info[0] == 3)

    if py_info.PY3:
        assert py_info.string_types == (str,)
        assert py_info.text_type is str
        assert py_info.binary_type is bytes
        assert py_info.integer_types == (int,)
        assert py_info.class_types == (type,)
    else:
        assert py_info.string_types == (basestring,)
        assert py_info.text_type is unicode
        assert py_info.binary_type is str
        assert py_info.integer_types == (int, long)
        assert py_info.class_types == (type, types.ClassType)

    if sys.platform.startswith("java"):
        assert py_info.maxsize == int((1 << 31) - 1)
    else:
        if sys.maxsize > 2**32:
           

# Generated at 2024-03-18 07:26:08.047695
    py_info = PyInfo()

    assert py_info.PY2 == (sys.version_info[0] == 2)
    assert py_info.PY3 == (sys.version_info[0] == 3)

    if py_info.PY3:
        assert py_info.string_types == (str,)
        assert py_info.text_type is str
        assert py_info.binary_type is bytes
        assert py_info.integer_types == (int,)
        assert py_info.class_types == (type,)
    else:
        assert py_info.string_types == (basestring,)
        assert py_info.text_type is unicode
        assert py_info.binary_type is str
        assert py_info.integer_types == (int, long)
        assert py_info.class_types == (type, types.ClassType)

    if sys.platform.startswith("java"):
        assert py_info.maxsize == int((1 << 31) - 1)
    else:
        if sys.maxsize > 2**32:
           

# Generated at 2024-03-18 07:26:14.407106
    py_info = PyInfo()

    assert py_info.PY2 == (sys.version_info[0] == 2)
    assert py_info.PY3 == (sys.version_info[0] == 3)

    if py_info.PY3:
        assert py_info.string_types == (str,)
        assert py_info.text_type == str
        assert py_info.binary_type == bytes
        assert py_info.integer_types == (int,)
        assert py_info.class_types == (type,)
        assert py_info.maxsize == sys.maxsize
    else:
        assert py_info.string_types == (basestring,)
        assert py_info.text_type == unicode
        assert py_info.binary_type == str
        assert py_info.integer_types == (int, long)
        assert py_info.class_types == (type, types.ClassType)

        if sys.platform.startswith("java"):
            assert py_info.maxsize == int((1 << 31) - 1)
        else:
           

# Generated at 2024-03-18 07:26:23.037561
    py_info = PyInfo()

    assert py_info.PY2 == (sys.version_info[0] == 2)
    assert py_info.PY3 == (sys.version_info[0] == 3)

    if py_info.PY3:
        assert py_info.string_types == (str,)
        assert py_info.text_type is str
        assert py_info.binary_type is bytes
        assert py_info.integer_types == (int,)
        assert py_info.class_types == (type,)
    else:
        assert py_info.string_types == (basestring,)
        assert py_info.text_type is unicode
        assert py_info.binary_type is str
        assert py_info.integer_types == (int, long)
        assert py_info.class_types == (type, types.ClassType)

    if sys.platform.startswith("java"):
        assert py_info.maxsize == int((1 << 31) - 1)
    else:
        if sys.maxsize > 2**32:
           

# Generated at 2024-03-18 07:26:31.201160
    py_info = PyInfo()

    assert py_info.PY2 == (sys.version_info[0] == 2)
    assert py_info.PY3 == (sys.version_info[0] == 3)

    if py_info.PY3:
        assert py_info.string_types == (str,)
        assert py_info.text_type == str
        assert py_info.binary_type == bytes
        assert py_info.integer_types == (int,)
        assert py_info.class_types == (type,)
        assert py_info.maxsize == sys.maxsize
    else:
        assert py_info.string_types == (basestring,)
        assert py_info.text_type == unicode
        assert py_info.binary_type == str
        assert py_info.integer_types == (int, long)
        assert py_info.class_types == (type, types.ClassType)

        if sys.platform.startswith("java"):
            assert py_info.maxsize == int((1 << 31) - 1)
        else:
           

# Generated at 2024-03-18 07:26:42.013537
    py_info = PyInfo()

    assert py_info.PY2 == (sys.version_info[0] == 2)
    assert py_info.PY3 == (sys.version_info[0] == 3)

    if py_info.PY3:
        assert py_info.string_types == (str,)
        assert py_info.text_type is str
        assert py_info.binary_type is bytes
        assert py_info.integer_types == (int,)
        assert py_info.class_types == (type,)
        assert py_info.maxsize == sys.maxsize
    else:
        assert py_info.string_types == (basestring,)
        assert py_info.text_type is unicode
        assert py_info.binary_type is str
        assert py_info.integer_types == (int, long)
        assert py_info.class_types == (type, types.ClassType)

        if sys.platform.startswith("java"):
            assert py_info.maxsize == int((1 << 31) - 1)
        else:
           

# Generated at 2024-03-18 07:26:50.095734
    py_info = PyInfo()

    assert py_info.PY2 == (sys.version_info[0] == 2)
    assert py_info.PY3 == (sys.version_info[0] == 3)

    if py_info.PY3:
        assert py_info.string_types == (str,)
        assert py_info.text_type is str
        assert py_info.binary_type is bytes
        assert py_info.integer_types == (int,)
        assert py_info.class_types == (type,)
    else:
        assert py_info.string_types == (basestring,)
        assert py_info.text_type is unicode
        assert py_info.binary_type is str
        assert py_info.integer_types == (int, long)
        assert py_info.class_types == (type, types.ClassType)

    if sys.platform.startswith("java"):
        assert py_info.maxsize == int((1 << 31) - 1)
    else:
        if sys.maxsize > 2**32:
           

# Generated at 2024-03-18 07:27:45.035049
    py_info = PyInfo()

    assert py_info.PY2 == (sys.version_info[0] == 2)
    assert py_info.PY3 == (sys.version_info[0] == 3)

    if py_info.PY3:
        assert py_info.string_types == (str,)
        assert py_info.text_type == str
        assert py_info.binary_type == bytes
        assert py_info.integer_types == (int,)
        assert py_info.class_types == (type,)
        assert py_info.maxsize == sys.maxsize
    else:
        assert py_info.string_types == (basestring,)
        assert py_info.text_type == unicode
        assert py_info.binary_type == str
        assert py_info.integer_types == (int, long)
        assert py_info.class_types == (type, types.ClassType)

        if sys.platform.startswith("java"):
            assert py_info.maxsize == int((1 << 31) - 1)
        else:
           

# Generated at 2024-03-18 07:27:53.724863
    py_info = PyInfo()

    assert py_info.PY2 == (sys.version_info[0] == 2)
    assert py_info.PY3 == (sys.version_info[0] == 3)

    if py_info.PY3:
        assert py_info.string_types == (str,)
        assert py_info.text_type is str
        assert py_info.binary_type is bytes
        assert py_info.integer_types == (int,)
        assert py_info.class_types == (type,)
        assert py_info.maxsize == sys.maxsize
    else:
        assert py_info.string_types == (basestring,)
        assert py_info.text_type is unicode
        assert py_info.binary_type is str
        assert py_info.integer_types == (int, long)
        assert py_info.class_types == (type, types.ClassType)

        if sys.platform.startswith("java"):
            assert py_info.maxsize == int((1 << 31) - 1)
        else:
           

# Generated at 2024-03-18 07:28:00.317659
    py_info = PyInfo()

    assert py_info.PY2 == (sys.version_info[0] == 2)
    assert py_info.PY3 == (sys.version_info[0] == 3)

    if py_info.PY3:
        assert py_info.string_types == (str,)
        assert py_info.text_type == str
        assert py_info.binary_type == bytes
        assert py_info.integer_types == (int,)
        assert py_info.class_types == (type,)
        assert py_info.maxsize == sys.maxsize
    else:
        assert py_info.string_types == (basestring,)
        assert py_info.text_type == unicode
        assert py_info.binary_type == str
        assert py_info.integer_types == (int, long)
        assert py_info.class_types == (type, types.ClassType)

        if sys.platform.startswith("java"):
            assert py_info.maxsize == int((1 << 31) - 1)
        else:
           

# Generated at 2024-03-18 07:28:08.124946
    py_info = PyInfo()

    assert py_info.PY2 == (sys.version_info[0] == 2)
    assert py_info.PY3 == (sys.version_info[0] == 3)

    if py_info.PY3:
        assert py_info.string_types == (str,)
        assert py_info.text_type == str
        assert py_info.binary_type == bytes
        assert py_info.integer_types == (int,)
        assert py_info.class_types == (type,)
        assert py_info.maxsize == sys.maxsize
    else:
        assert py_info.string_types == (basestring,)
        assert py_info.text_type == unicode
        assert py_info.binary_type == str
        assert py_info.integer_types == (int, long)
        assert py_info.class_types == (type, types.ClassType)

        if sys.platform.startswith("java"):
            assert py_info.maxsize == int((1 << 31) - 1)
        else:
           

# Generated at 2024-03-18 07:28:17.908656
    py_info = PyInfo()

    assert py_info.PY2 == (sys.version_info[0] == 2)
    assert py_info.PY3 == (sys.version_info[0] == 3)

    if py_info.PY3:
        assert py_info.string_types == (str,)
        assert py_info.text_type is str
        assert py_info.binary_type is bytes
        assert py_info.integer_types == (int,)
        assert py_info.class_types == (type,)
        assert py_info.maxsize == sys.maxsize
    else:
        assert py_info.string_types == (basestring,)
        assert py_info.text_type is unicode
        assert py_info.binary_type is str
        assert py_info.integer_types == (int, long)
        assert py_info.class_types == (type, types.ClassType)

        if sys.platform.startswith("java"):
            assert py_info.maxsize == int((1 << 31) - 1)
        else:
           

# Generated at 2024-03-18 07:28:26.589930
    py_info = PyInfo()

    assert py_info.PY2 == (sys.version_info[0] == 2)
    assert py_info.PY3 == (sys.version_info[0] == 3)

    if py_info.PY3:
        assert py_info.string_types == (str,)
        assert py_info.text_type is str
        assert py_info.binary_type is bytes
        assert py_info.integer_types == (int,)
        assert py_info.class_types == (type,)
        assert py_info.maxsize == sys.maxsize
    else:
        assert py_info.string_types == (basestring,)
        assert py_info.text_type is unicode
        assert py_info.binary_type is str
        assert py_info.integer_types == (int, long)
        assert py_info.class_types == (type, types.ClassType)

        if sys.platform.startswith("java"):
            assert py_info.maxsize == int((1 << 31) - 1)
        else:
           

# Generated at 2024-03-18 07:28:33.395371
    py_info = PyInfo()

    assert py_info.PY2 == (sys.version_info[0] == 2)
    assert py_info.PY3 == (sys.version_info[0] == 3)

    if py_info.PY3:
        assert py_info.string_types == (str,)
        assert py_info.text_type == str
        assert py_info.binary_type == bytes
        assert py_info.integer_types == (int,)
        assert py_info.class_types == (type,)
        assert py_info.maxsize == sys.maxsize
    else:
        assert py_info.string_types == (basestring,)
        assert py_info.text_type == unicode
        assert py_info.binary_type == str
        assert py_info.integer_types == (int, long)
        assert py_info.class_types == (type, types.ClassType)

        if sys.platform.startswith("java"):
            assert py_info.maxsize == int((1 << 31) - 1)
        else:
           

# Generated at 2024-03-18 07:28:44.225962
    py_info = PyInfo()

    assert py_info.PY2 == (sys.version_info[0] == 2)
    assert py_info.PY3 == (sys.version_info[0] == 3)

    if py_info.PY3:
        assert py_info.string_types == (str,)
        assert py_info.text_type == str
        assert py_info.binary_type == bytes
        assert py_info.integer_types == (int,)
        assert py_info.class_types == (type,)
        assert py_info.maxsize == sys.maxsize
    else:
        assert py_info.string_types == (basestring,)
        assert py_info.text_type == unicode
        assert py_info.binary_type == str
        assert py_info.integer_types == (int, long)
        assert py_info.class_types == (type, types.ClassType)

        if sys.platform.startswith("java"):
            assert py_info.maxsize == int((1 << 31) - 1)
        else:
           

# Generated at 2024-03-18 07:28:51.885653
    py_info = PyInfo()

    assert py_info.PY2 == (sys.version_info[0] == 2)
    assert py_info.PY3 == (sys.version_info[0] == 3)

    if py_info.PY3:
        assert py_info.string_types == (str,)
        assert py_info.text_type is str
        assert py_info.binary_type is bytes
        assert py_info.integer_types == (int,)
        assert py_info.class_types == (type,)
    else:
        assert py_info.string_types == (basestring,)
        assert py_info.text_type is unicode
        assert py_info.binary_type is str
        assert py_info.integer_types == (int, long)
        assert py_info.class_types == (type, types.ClassType)

    if sys.platform.startswith("java"):
        assert py_info.maxsize == int((1 << 31) - 1)
    else:
        if sys.maxsize > 2**32:
           

# Generated at 2024-03-18 07:29:04.441052
    py_info = PyInfo()

    assert py_info.PY2 == (sys.version_info[0] == 2)
    assert py_info.PY3 == (sys.version_info[0] == 3)

    if py_info.PY3:
        assert py_info.string_types == (str,)
        assert py_info.text_type == str
        assert py_info.binary_type == bytes
        assert py_info.integer_types == (int,)
        assert py_info.class_types == (type,)
        assert py_info.maxsize == sys.maxsize
    else:
        assert py_info.string_types == (basestring,)
        assert py_info.text_type == unicode
        assert py_info.binary_type == str
        assert py_info.integer_types == (int, long)
        assert py_info.class_types == (type, types.ClassType)

        if sys.platform.startswith("java"):
            assert py_info.maxsize == int((1 << 31) - 1)
        else:
           

# Generated at 2024-03-18 07:30:47.020521
    py_info = PyInfo()

    assert py_info.PY2 == (sys.version_info[0] == 2)
    assert py_info.PY3 == (sys.version_info[0] == 3)

    if py_info.PY3:
        assert py_info.string_types == (str,)
        assert py_info.text_type == str
        assert py_info.binary_type == bytes
        assert py_info.integer_types == (int,)
        assert py_info.class_types == (type,)
        assert py_info.maxsize == sys.maxsize
    else:
        assert py_info.string_types == (basestring,)
        assert py_info.text_type == unicode
        assert py_info.binary_type == str
        assert py_info.integer_types == (int, long)
        assert py_info.class_types == (type, types.ClassType)

        if sys.platform.startswith("java"):
            assert py_info.maxsize == int((1 << 31) - 1)
        else:
           

# Generated at 2024-03-18 07:30:55.165855
    py_info = PyInfo()

    assert py_info.PY2 == (sys.version_info[0] == 2)
    assert py_info.PY3 == (sys.version_info[0] == 3)

    if py_info.PY3:
        assert py_info.string_types == (str,)
        assert py_info.text_type == str
        assert py_info.binary_type == bytes
        assert py_info.integer_types == (int,)
        assert py_info.class_types == (type,)
        assert py_info.maxsize == sys.maxsize
    else:
        assert py_info.string_types == (basestring,)
        assert py_info.text_type == unicode
        assert py_info.binary_type == str
        assert py_info.integer_types == (int, long)
        assert py_info.class_types == (type, types.ClassType)

        if sys.platform.startswith("java"):
            assert py_info.maxsize == int((1 << 31) - 1)
        else:
           

# Generated at 2024-03-18 07:31:02.697602
    py_info = PyInfo()

    assert py_info.PY2 == (sys.version_info[0] == 2)
    assert py_info.PY3 == (sys.version_info[0] == 3)

    if py_info.PY3:
        assert py_info.string_types == (str,)
        assert py_info.text_type == str
        assert py_info.binary_type == bytes
        assert py_info.integer_types == (int,)
        assert py_info.class_types == (type,)
        assert py_info.maxsize == sys.maxsize
    else:
        assert py_info.string_types == (basestring,)
        assert py_info.text_type == unicode
        assert py_info.binary_type == str
        assert py_info.integer_types == (int, long)
        assert py_info.class_types == (type, types.ClassType)

        if sys.platform.startswith("java"):
            assert py_info.maxsize == int((1 << 31) - 1)
        else:
           

# Generated at 2024-03-18 07:31:12.797350
    py_info = PyInfo()

    assert py_info.PY2 == (sys.version_info[0] == 2)
    assert py_info.PY3 == (sys.version_info[0] == 3)

    if py_info.PY3:
        assert py_info.string_types == (str,)
        assert py_info.text_type == str
        assert py_info.binary_type == bytes
        assert py_info.integer_types == (int,)
        assert py_info.class_types == (type,)
        assert py_info.maxsize == sys.maxsize
    else:
        assert py_info.string_types == (basestring,)
        assert py_info.text_type == unicode
        assert py_info.binary_type == str
        assert py_info.integer_types == (int, long)
        assert py_info.class_types == (type, types.ClassType)

        if sys.platform.startswith("java"):
            assert py_info.maxsize == int((1 << 31) - 1)
        else:
           