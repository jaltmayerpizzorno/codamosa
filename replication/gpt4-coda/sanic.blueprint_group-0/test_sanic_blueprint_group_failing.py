# Automatically generated by Pynguin.
import sanic.blueprint_group as module_0
import sanic.blueprints as module_1

def test_case_0():
    try:
        blueprint_group_0 = module_0.BlueprintGroup()
        list_0 = [blueprint_group_0, blueprint_group_0, blueprint_group_0, blueprint_group_0]
        str_0 = '}f.i9|/o'
        dict_0 = {str_0: list_0}
        var_0 = blueprint_group_0.middleware(*list_0, **dict_0)
        float_0 = 2991.145
        int_0 = -3017
        blueprint_group_1 = module_0.BlueprintGroup(int_0)
        var_1 = blueprint_group_1.__getitem__(float_0)
    except BaseException:
        pass

def test_case_1():
    try:
        blueprint_group_0 = module_0.BlueprintGroup()
        int_0 = blueprint_group_0.__len__()
        var_0 = blueprint_group_0.middleware()
        str_0 = '<`[HH3Y'
        blueprint_0 = module_1.Blueprint(str_0)
        blueprint_group_0.insert(int_0, blueprint_0)
        var_1 = blueprint_group_0.__iter__()
        str_1 = 'GBEfw$7{H\x0c'
        dict_0 = {str_1: blueprint_group_0, str_0: str_0}
        blueprint_group_0.__setitem__(str_0, dict_0)
    except BaseException:
        pass

def test_case_2():
    try:
        dict_0 = None
        blueprint_group_0 = module_0.BlueprintGroup()
        dict_1 = {blueprint_group_0: blueprint_group_0}
        blueprint_group_1 = module_0.BlueprintGroup(dict_1)
        blueprint_group_1.__delitem__(dict_0)
    except BaseException:
        pass

def test_case_3():
    try:
        int_0 = 2650
        str_0 = 'W;;*0z/\r,b/]r` .'
        blueprint_0 = module_1.Blueprint(str_0)
        bytes_0 = b'v'
        blueprint_group_0 = module_0.BlueprintGroup(bytes_0)
        blueprint_group_0.insert(int_0, blueprint_0)
    except BaseException:
        pass

def test_case_4():
    try:
        int_0 = 504
        str_0 = 'exception'
        blueprint_0 = module_1.Blueprint(str_0, str_0, int_0)
        str_1 = '!XV[!'
        str_2 = 'b'
        dict_0 = {str_1: str_1, str_2: str_2}
        blueprint_group_0 = module_0.BlueprintGroup(dict_0)
        blueprint_group_0.insert(int_0, blueprint_0)
    except BaseException:
        pass