# Automatically generated by Pynguin.
import argparse as module_0
import httpie.client as module_1
import pathlib as module_2
import httpie.cli.dicts as module_3

def test_case_0():
    try:
        namespace_0 = module_0.Namespace()
        dict_0 = {}
        var_0 = module_1.dump_request(dict_0)
        str_0 = 'index'
        str_1 = "Tokenize the raw arg string\n\n        There are only two token types - strings and escaped characters:\n\n        >>> KeyValueArgType('=').tokenize(r'foo\\=bar\\\\baz')\n        ['foo', Escaped('='), 'bar', Escaped('\\\\'), 'baz']\n\n        "
        dict_1 = {str_1: var_0, str_0: namespace_0}
        path_0 = module_2.Path(**dict_1)
        iterable_0 = module_1.collect_messages(namespace_0, path_0, dict_0)
        request_headers_dict_0 = module_3.RequestHeadersDict(iterable_0)
    except BaseException:
        pass

def test_case_1():
    try:
        namespace_0 = module_0.Namespace()
        request_headers_dict_0 = module_1.make_default_headers(namespace_0)
    except BaseException:
        pass

def test_case_2():
    try:
        namespace_0 = module_0.Namespace()
        dict_0 = module_1.make_send_kwargs(namespace_0)
    except BaseException:
        pass

def test_case_3():
    try:
        namespace_0 = module_0.Namespace()
        dict_0 = module_1.make_send_kwargs_mergeable_from_env(namespace_0)
    except BaseException:
        pass

def test_case_4():
    try:
        request_headers_dict_0 = module_3.RequestHeadersDict()
        request_headers_dict_1 = module_1.finalize_headers(request_headers_dict_0)
        namespace_0 = module_0.Namespace()
        bool_0 = True
        session_0 = module_1.build_requests_session(bool_0)
        dict_0 = module_1.make_request_kwargs(namespace_0, request_headers_dict_0, session_0)
    except BaseException:
        pass

def test_case_5():
    try:
        bool_0 = False
        dict_0 = {bool_0: bool_0}
        session_0 = module_1.build_requests_session(bool_0, dict_0)
    except BaseException:
        pass

def test_case_6():
    try:
        dict_0 = None
        str_0 = '{-Orp8D;b2Eg'
        str_1 = '(.*?)( *)(:)( *)(.+)'
        bool_0 = True
        session_0 = module_1.build_requests_session(bool_0)
        str_2 = 'W.l8V\x0cv0tYPT+'
        dict_1 = {str_0: dict_0, str_1: str_1, str_2: dict_0}
        request_headers_dict_0 = module_3.RequestHeadersDict(**dict_1)
        request_headers_dict_1 = module_1.finalize_headers(request_headers_dict_0)
        request_headers_dict_2 = module_1.finalize_headers(request_headers_dict_1)
        str_3 = 'W'
        session_1 = module_1.build_requests_session(bool_0, str_3)
    except BaseException:
        pass