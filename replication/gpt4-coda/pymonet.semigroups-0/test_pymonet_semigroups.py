# Automatically generated by Pynguin.
import pymonet.semigroups as module_0

def test_case_0():
    bool_0 = True
    all_0 = module_0.All(bool_0)

def test_case_1():
    str_0 = 'MK7D\n\x0bp6DXo>&'
    min_0 = module_0.Min(str_0)
    all_0 = module_0.All(min_0)
    bool_0 = True
    all_1 = module_0.All(bool_0)
    all_2 = all_1.concat(all_0)
    str_1 = all_2.__str__()

def test_case_2():
    bool_0 = True
    map_0 = module_0.Map(bool_0)
    float_0 = None
    sum_0 = module_0.Sum(float_0)
    all_0 = module_0.All(sum_0)
    one_0 = module_0.One(map_0)
    var_0 = one_0.concat(all_0)

def test_case_3():
    list_0 = []
    first_0 = module_0.First(list_0)
    str_0 = first_0.__str__()

def test_case_4():
    dict_0 = {}
    str_0 = 'SVsAV6A'
    sum_0 = module_0.Sum(str_0)
    first_0 = module_0.First(sum_0)
    var_0 = first_0.concat(dict_0)
    bytes_0 = b'\xd8\xbfy\xe56'
    semigroup_0 = module_0.Semigroup(bytes_0)
    first_1 = module_0.First(semigroup_0)
    str_1 = first_1.__str__()

def test_case_5():
    str_0 = 'uK4c%=3y'
    max_0 = module_0.Max(str_0)
    str_1 = max_0.__str__()

def test_case_6():
    int_0 = -1326
    min_0 = module_0.Min(int_0)
    str_0 = min_0.__str__()

def test_case_7():
    dict_0 = {}
    sum_0 = module_0.Sum(dict_0)
    last_0 = module_0.Last(sum_0)
    str_0 = last_0.__str__()
    all_0 = None
    all_1 = module_0.All(all_0)
    str_1 = '}/r%@:qy\tz)=gVjvq'
    min_0 = module_0.Min(str_1)
    map_0 = module_0.Map(min_0)
    first_0 = module_0.First(map_0)
    first_1 = module_0.First(min_0)
    one_0 = module_0.One(all_0)
    semigroup_0 = module_0.Semigroup(first_1)
    var_0 = one_0.concat(semigroup_0)
    bool_0 = True
    max_0 = module_0.Max(bool_0)
    max_1 = module_0.Max(max_0)
    str_2 = max_1.__str__()
    max_2 = module_0.Max(max_0)

def test_case_8():
    complex_0 = None
    dict_0 = {complex_0: complex_0, complex_0: complex_0, complex_0: complex_0}
    map_0 = module_0.Map(dict_0)
    str_0 = 'im'
    first_0 = module_0.First(str_0)
    last_0 = module_0.Last(first_0)
    all_0 = module_0.All(last_0)
    all_1 = all_0.concat(all_0)
    set_0 = set()
    first_1 = module_0.First(set_0)
    last_1 = module_0.Last(map_0)
    float_0 = -650.5657
    all_2 = module_0.All(float_0)
    str_1 = last_0.__str__()
    sum_0 = module_0.Sum(first_1)
    str_2 = '#x89{!&$ /Q}pd='
    all_3 = module_0.All(str_2)
    str_3 = all_1.__str__()
    int_0 = -214
    first_2 = module_0.First(int_0)
    str_4 = first_1.__str__()
    float_1 = -1373.593838
    min_0 = module_0.Min(float_1)
    var_0 = min_0.concat(min_0)
    bool_0 = True
    max_0 = module_0.Max(bool_0)

def test_case_9():
    str_0 = 'a'
    str_1 = 'b'
    str_2 = 'c'
    int_0 = 1
    sum_0 = module_0.Sum(int_0)
    int_1 = 2
    max_0 = module_0.Max(int_1)
    int_2 = 5
    min_0 = module_0.Min(int_2)
    var_0 = {str_0: sum_0, str_1: max_0, str_2: min_0}
    map_0 = module_0.Map(var_0)
    sum_1 = module_0.Sum(int_2)
    max_1 = module_0.Max(int_0)
    int_3 = 4
    min_1 = module_0.Min(int_3)
    var_1 = {str_0: sum_1, str_1: max_1, str_2: min_1}
    map_1 = module_0.Map(var_1)
    var_2 = map_0.concat(map_1)
    max_2 = module_0.Max(int_1)
    min_2 = module_0.Min(int_3)