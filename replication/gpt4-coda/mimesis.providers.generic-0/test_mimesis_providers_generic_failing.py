# Automatically generated by Pynguin.
import mimesis.providers.generic as module_0

def test_case_0():
    try:
        generic_0 = module_0.Generic()
        str_0 = 'W%NHBl|rrs[Z~8B\n"A'
        any_0 = generic_0.__getattr__(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        generic_0 = module_0.Generic()
        generic_0.add_provider(generic_0)
    except BaseException:
        pass

def test_case_2():
    try:
        dict_0 = {}
        generic_0 = module_0.Generic(**dict_0)
        generic_0.add_providers()
        generic_0.add_provider(generic_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'\x8e#\x89Z\xe6\x17/\xcb\x1bBfm\xb38k\x0c7'
        float_0 = 3804.15801
        set_0 = {bytes_0, float_0}
        float_1 = 2035.0
        type_0 = None
        list_0 = [float_0, set_0, float_1, type_0]
        generic_0 = module_0.Generic()
        generic_0.add_providers(*list_0)
    except BaseException:
        pass