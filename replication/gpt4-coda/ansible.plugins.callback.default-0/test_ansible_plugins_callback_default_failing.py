# Automatically generated by Pynguin.
import ansible.plugins.callback.default as module_0

def test_case_0():
    try:
        callback_module_0 = module_0.CallbackModule()
        float_0 = 0.0001
        list_0 = [callback_module_0, callback_module_0, float_0, callback_module_0]
        str_0 = 'chgrp failed'
        callback_module_1 = module_0.CallbackModule()
        var_0 = callback_module_1.v2_runner_on_failed(list_0, str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        callback_module_0 = module_0.CallbackModule()
        bytes_0 = b'\xed\xd3&y\xd0\xa3j'
        var_0 = callback_module_0.v2_runner_on_ok(bytes_0)
    except BaseException:
        pass

def test_case_2():
    try:
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_no_hosts_matched()
        float_0 = 0.2
        tuple_0 = (float_0,)
        callback_module_1 = module_0.CallbackModule()
        set_0 = {tuple_0, var_0, tuple_0, callback_module_0}
        var_1 = callback_module_1.v2_runner_on_skipped(set_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = ''
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_on_unreachable(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        bool_0 = True
        callback_module_0 = module_0.CallbackModule()
        str_0 = 'b]s\r;h'
        var_0 = callback_module_0.v2_playbook_on_notify(bool_0, str_0)
        callback_module_1 = module_0.CallbackModule()
        var_1 = callback_module_0.v2_playbook_on_no_hosts_remaining()
        list_0 = [callback_module_0, var_0, var_0, var_0, var_0, callback_module_1]
        var_2 = callback_module_1.v2_playbook_on_handler_task_start(list_0)
    except BaseException:
        pass

def test_case_5():
    try:
        float_0 = 20.2
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_notify(float_0, float_0)
        str_0 = '@='
        bytes_0 = b'\xc2\x15\xc5\xd0\x80&%\xe0\xaf\x98~\xc7\r'
        var_1 = callback_module_0.v2_playbook_on_task_start(str_0, bytes_0)
    except BaseException:
        pass

def test_case_6():
    try:
        float_0 = 2186.0107
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_cleanup_task_start(float_0)
    except BaseException:
        pass

def test_case_7():
    try:
        int_0 = 0
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_handler_task_start(int_0)
    except BaseException:
        pass

def test_case_8():
    try:
        callback_module_0 = module_0.CallbackModule()
        bool_0 = True
        float_0 = 321.0
        var_0 = callback_module_0.v2_runner_on_start(bool_0, float_0)
    except BaseException:
        pass

def test_case_9():
    try:
        callback_module_0 = module_0.CallbackModule()
        callback_module_1 = module_0.CallbackModule()
        var_0 = callback_module_1.v2_playbook_on_play_start(callback_module_0)
    except BaseException:
        pass

def test_case_10():
    try:
        int_0 = -920
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_on_file_diff(int_0)
    except BaseException:
        pass

def test_case_11():
    try:
        float_0 = -1721.545673
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_item_on_failed(float_0)
    except BaseException:
        pass

def test_case_12():
    try:
        float_0 = 100.0
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_item_on_skipped(float_0)
    except BaseException:
        pass

def test_case_13():
    try:
        float_0 = -631.0
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_include(float_0)
    except BaseException:
        pass

def test_case_14():
    try:
        bool_0 = False
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_stats(bool_0)
    except BaseException:
        pass

def test_case_15():
    try:
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_start(callback_module_0)
    except BaseException:
        pass

def test_case_16():
    try:
        callback_module_0 = module_0.CallbackModule()
        set_0 = {callback_module_0, callback_module_0, callback_module_0}
        var_0 = callback_module_0.v2_runner_retry(set_0)
    except BaseException:
        pass

def test_case_17():
    try:
        int_0 = None
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_on_async_poll(int_0)
    except BaseException:
        pass

def test_case_18():
    try:
        float_0 = 1401.4278
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_on_async_failed(float_0)
    except BaseException:
        pass

def test_case_19():
    try:
        bool_0 = True
        bytes_0 = b'\x8d\xd8\xaa?\x1b0'
        str_0 = 'Group {0} upgraded.'
        dict_0 = {bytes_0: bytes_0, bool_0: bytes_0, bool_0: str_0, bool_0: bool_0}
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_on_async_ok(dict_0)
    except BaseException:
        pass

def test_case_20():
    try:
        int_0 = 1620
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_item_on_ok(int_0)
    except BaseException:
        pass

def test_case_21():
    try:
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.set_options()
    except BaseException:
        pass