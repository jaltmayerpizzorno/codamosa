# Automatically generated by Pynguin.
import ansible.playbook.block as module_0
import ansible.playbook.role as module_1

def test_case_0():
    pass

def test_case_1():
    block_0 = module_0.Block()

def test_case_2():
    bool_0 = False
    int_0 = 0
    bool_1 = False
    dict_0 = {int_0: int_0, int_0: int_0, int_0: bool_1}
    set_0 = {bool_1}
    block_0 = module_0.Block(int_0, dict_0, set_0, set_0, dict_0)
    var_0 = block_0.preprocess_data(bool_0)

def test_case_3():
    bool_0 = True
    block_0 = module_0.Block(bool_0)
    var_0 = block_0.__repr__()

def test_case_4():
    block_0 = module_0.Block()
    bool_0 = True
    var_0 = block_0.set_loader(bool_0)
    var_1 = block_0.get_first_parent_include()
    var_2 = block_0.all_parents_static()
    var_3 = block_0.all_parents_static()
    var_4 = block_0.get_vars()

def test_case_5():
    float_0 = 1.5
    float_1 = -1505.749284
    float_2 = -1154.119
    dict_0 = {float_1: float_1, float_0: float_2, float_1: float_1}
    bool_0 = False
    block_0 = module_0.Block(bool_0)
    var_0 = block_0.preprocess_data(dict_0)
    block_1 = module_0.Block(float_1)

def test_case_6():
    block_0 = None
    block_1 = module_0.Block()
    var_0 = block_1.preprocess_data(block_0)

def test_case_7():
    block_0 = module_0.Block()
    var_0 = block_0.copy()

def test_case_8():
    block_0 = module_0.Block()
    var_0 = block_0.serialize()

def test_case_9():
    tuple_0 = ()
    role_0 = module_1.Role()
    block_0 = module_0.Block(tuple_0, tuple_0, role_0)
    var_0 = block_0.copy()

def test_case_10():
    block_0 = module_0.Block()
    float_0 = -1154.1
    var_0 = block_0.set_loader(float_0)

def test_case_11():
    bool_0 = True
    block_0 = module_0.Block(bool_0)
    var_0 = block_0.copy()

def test_case_12():
    bool_0 = False
    int_0 = 1000000000012
    block_0 = module_0.Block(bool_0, bool_0, int_0)
    var_0 = block_0.filter_tagged_tasks(int_0)

def test_case_13():
    set_0 = None
    block_0 = module_0.Block()
    var_0 = block_0.filter_tagged_tasks(set_0)

def test_case_14():
    block_0 = module_0.Block()
    var_0 = block_0.has_tasks()

def test_case_15():
    tuple_0 = ()
    bytes_0 = b'3\xa3\x94\xbb\x0by#E\x8bh\x01\x90t'
    tuple_1 = ()
    block_0 = module_0.Block(tuple_1)
    var_0 = block_0.get_include_params()
    block_1 = module_0.Block(bytes_0)
    block_2 = module_0.Block(tuple_0, block_1)
    var_1 = block_1.all_parents_static()
    int_0 = 3027
    block_3 = module_0.Block(int_0, tuple_0)
    var_2 = block_3.get_dep_chain()
    var_3 = block_2.get_dep_chain()

def test_case_16():
    block_0 = module_0.Block()
    var_0 = block_0.all_parents_static()
    str_0 = '=: '
    str_1 = 'Hr\t.G\t^(-\rCg]\x0ch'
    block_1 = module_0.Block(str_0, str_0, str_1)
    var_1 = block_1.__repr__()

def test_case_17():
    block_0 = module_0.Block()
    var_0 = block_0.get_first_parent_include()

def test_case_18():
    str_0 = '\n        Writes initial data to the stdin filehandle of the subprocess and closes\n        it. (The handle must be closed; otherwise, for example, "sftp -b -" will\n        just hang forever waiting for more commands.)\n        '
    dict_0 = {}
    block_0 = module_0.Block(dict_0)
    bytes_0 = b'_-\xf8\x98\x84gq\xdf\x1e'
    block_1 = module_0.Block(block_0, bytes_0)
    var_0 = block_1.copy(str_0)

def test_case_19():
    str_0 = '0242ac11-0005-a8e5-de26-000000004367'
    int_0 = 1171
    tuple_0 = (str_0, int_0)
    dict_0 = {}
    block_0 = module_0.Block(tuple_0)
    var_0 = block_0.filter_tagged_tasks(str_0)
    list_0 = [int_0, block_0, int_0, var_0, block_0, block_0, dict_0, int_0, block_0, int_0]
    block_1 = module_0.Block(list_0, dict_0, block_0)
    set_0 = {tuple_0, str_0}
    var_1 = block_1.copy(set_0)
    var_2 = block_0.has_tasks()
    var_3 = block_0.set_loader(dict_0)
    var_4 = block_0.get_dep_chain()
    block_2 = module_0.Block(str_0, var_0, var_0, block_1)
    var_5 = block_2.all_parents_static()
    var_6 = block_2.preprocess_data(str_0)
    block_3 = module_0.Block(tuple_0)
    var_7 = block_2.copy()

def test_case_20():
    list_0 = []
    str_0 = None
    int_0 = 4555
    set_0 = set()
    bool_0 = False
    str_1 = '0242ac11-0005-a8e5-de26-0000000003c3'
    block_0 = module_0.Block(set_0, bool_0, str_1)
    var_0 = block_0.load(list_0, str_0, int_0)
    block_1 = module_0.Block()
    var_1 = block_1.all_parents_static()
    var_2 = block_1.get_dep_chain()

def test_case_21():
    str_0 = 'C x@%M'
    int_0 = -5159
    tuple_0 = (str_0, int_0)
    dict_0 = {}
    block_0 = module_0.Block(tuple_0)
    var_0 = block_0.filter_tagged_tasks(str_0)
    list_0 = [int_0, block_0, block_0, block_0, dict_0, int_0, int_0]
    block_1 = module_0.Block(list_0, dict_0, block_0)
    set_0 = {tuple_0, str_0}
    var_1 = block_1.copy(set_0)
    var_2 = block_0.has_tasks()
    var_3 = block_1.set_loader(set_0)
    var_4 = block_0.get_dep_chain()
    var_5 = block_0.preprocess_data(int_0)

def test_case_22():
    block_0 = module_0.Block()
    str_0 = 'name'
    str_1 = 'dep_chain'
    str_2 = 'role'
    str_3 = 'parent_type'
    str_4 = 'parent'
    str_5 = 'dep1'
    str_6 = 'dep2'
    str_7 = [str_5, str_6]
    str_8 = 'vars'
    str_9 = 'test_role'
    str_10 = 'role_var'
    str_11 = 'value'
    str_12 = {str_10: str_11}
    str_13 = {str_0: str_9, str_8: str_12}
    str_14 = 'Block'
    str_15 = 'parent_block'
    str_16 = {str_0: str_15}
    str_17 = {str_0: str_5, str_1: str_7, str_2: str_13, str_3: str_14, str_4: str_16}
    var_0 = block_0.deserialize(str_17)
    var_1 = block_0._parent

def test_case_23():
    str_0 = 'C x@%M'
    int_0 = -5159
    tuple_0 = (str_0, int_0)
    dict_0 = {}
    block_0 = module_0.Block(tuple_0)
    var_0 = block_0.filter_tagged_tasks(str_0)
    list_0 = [int_0, block_0, int_0, var_0, block_0, block_0, dict_0, int_0, block_0, int_0]
    block_1 = module_0.Block(list_0, dict_0, block_0)
    set_0 = {tuple_0, str_0}
    var_1 = block_1.copy(set_0)
    var_2 = block_0.has_tasks()
    var_3 = block_0.set_loader(dict_0)
    var_4 = block_0.get_dep_chain()
    block_2 = module_0.Block(var_0, block_1)
    var_5 = block_2.all_parents_static()
    str_1 = '4'
    var_6 = block_1.set_loader(str_1)
    var_7 = block_2.serialize()

def test_case_24():
    bytes_0 = None
    tuple_0 = ()
    str_0 = ''
    float_0 = 2726.3911
    tuple_1 = (tuple_0, str_0)
    bool_0 = True
    block_0 = module_0.Block(bool_0)
    var_0 = block_0.get_first_parent_include()
    list_0 = [tuple_1]
    dict_0 = {bytes_0: tuple_0, tuple_1: tuple_0, str_0: float_0, str_0: tuple_0}
    block_1 = module_0.Block(list_0, dict_0, list_0)
    block_2 = module_0.Block(bytes_0, str_0)
    var_1 = block_2.filter_tagged_tasks(tuple_1)
    str_1 = ''
    var_2 = block_2.preprocess_data(str_1)
    block_3 = module_0.Block(block_2, str_1, var_1, tuple_0)
    var_3 = block_3.serialize()
    str_2 = "rXG*'|H-]Ykv1|d"
    var_4 = block_3.set_loader(str_2)
    var_5 = block_3.is_block(dict_0)
    bool_1 = False
    var_6 = block_2.get_dep_chain()
    dict_1 = {bool_1: bool_1, bool_1: bool_1}
    var_7 = block_2.all_parents_static()
    block_4 = module_0.Block(block_2)
    float_1 = 1259.1
    var_8 = block_4.preprocess_data(list_0)
    var_9 = block_2.set_loader(float_1)
    var_10 = block_2.serialize()
    bytes_1 = b'\x04\xbd\x05\x83\xf9\xc2\xfa\x1c\xf8'
    block_5 = module_0.Block(dict_1, str_0, bytes_1)
    var_11 = block_5.__repr__()
    var_12 = block_5.copy(str_2)
    var_13 = block_3.has_tasks()
    var_14 = block_2.get_dep_chain()
    var_15 = block_5.deserialize(var_8)