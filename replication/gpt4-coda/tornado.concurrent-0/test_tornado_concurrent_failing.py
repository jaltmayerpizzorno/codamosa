# Automatically generated by Pynguin.
import tornado.concurrent as module_0
import _asyncio as module_1
import concurrent.futures._base as module_2

def test_case_0():
    try:
        set_0 = None
        dummy_executor_0 = module_0.DummyExecutor()
        str_0 = ".()'rEeB\tu~mX+$"
        future_0 = dummy_executor_0.submit(str_0)
        dummy_executor_0.shutdown()
        list_0 = []
        list_1 = [list_0, str_0, list_0, set_0]
        future_1 = dummy_executor_0.submit(set_0, *list_1)
        future_2 = module_1.Future()
    except BaseException:
        pass

def test_case_1():
    try:
        bool_0 = None
        int_0 = 362
        list_0 = [bool_0, int_0, bool_0]
        dummy_executor_0 = module_0.DummyExecutor()
        future_0 = dummy_executor_0.submit(bool_0, *list_0)
        optional_0 = None
        return_value_ignored_error_0 = None
        none_type_0 = None
        tuple_0 = (optional_0, return_value_ignored_error_0, none_type_0)
        module_0.future_set_exc_info(future_0, tuple_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '@GJE.kj-$'
        dummy_executor_0 = module_0.DummyExecutor()
        future_0 = dummy_executor_0.submit(str_0)
        list_0 = [str_0]
        dict_0 = {}
        callable_0 = module_0.run_on_executor(*list_0, **dict_0)
        module_0.future_add_done_callback(future_0, callable_0)
    except BaseException:
        pass

def test_case_3():
    try:
        future_0 = None
        module_0.chain_future(future_0, future_0)
    except BaseException:
        pass

def test_case_4():
    try:
        future_0 = module_2.Future()
        callable_0 = None
        module_0.future_add_done_callback(future_0, callable_0)
        str_0 = 't?<S=W{ WG\x0c\rkbj@\x0bh"'
        list_0 = []
        future_1 = module_2.Future()
        str_1 = '=\\_t*3YAkUz'
        str_2 = '!Zjn#l2ON'
        dict_0 = {str_1: str_0, str_2: list_0, str_0: str_1}
        callable_1 = module_0.run_on_executor(**dict_0)
        optional_0 = None
        tuple_0 = (dict_0, callable_1, optional_0)
        module_0.future_set_exc_info(future_1, tuple_0)
        callable_2 = module_0.run_on_executor()
        float_0 = 1526.86665
        dummy_executor_0 = module_0.DummyExecutor(*list_0)
        dummy_executor_0.shutdown()
        dummy_executor_1 = module_0.DummyExecutor()
        future_2 = dummy_executor_1.submit(float_0)
        var_0 = None
        module_0.future_set_result_unless_cancelled(future_2, var_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = '@GJE.kj-$'
        dummy_executor_0 = module_0.DummyExecutor()
        future_0 = dummy_executor_0.submit(str_0)
        list_0 = [str_0]
        int_0 = 4249
        dict_0 = {str_0: int_0}
        callable_0 = module_0.run_on_executor(*list_0, **dict_0)
    except BaseException:
        pass

def test_case_6():
    try:
        future_0 = None
        list_0 = [future_0, future_0]
        dict_0 = {}
        callable_0 = module_0.run_on_executor(*list_0, **dict_0)
    except BaseException:
        pass