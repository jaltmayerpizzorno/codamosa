# Automatically generated by Pynguin.
import youtube_dl.downloader.ism as module_0

def test_case_0():
    try:
        bool_0 = False
        dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
        bool_1 = None
        var_0 = module_0.box(dict_0, bool_1)
    except BaseException:
        pass

def test_case_1():
    try:
        float_0 = 1937.6
        bytes_0 = b'\xb3Z\x850\xd8'
        float_1 = 1715.0
        str_0 = 're:https?://.*\\.(?:jpg|png)'
        var_0 = module_0.full_box(float_0, bytes_0, float_1, str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'https://www.pornhubpremium.com/view_video.php?viewkey=ph5f75b0f4b18e3'
        int_0 = -1925
        var_0 = module_0.write_piff_header(str_0, int_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'\x06*A#4\xb0\xab\xa89\xe8\x01Fe\x92q\xbe'
        set_0 = None
        var_0 = module_0.extract_box_data(bytes_0, set_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'o'
        dict_0 = {str_0: str_0}
        var_0 = module_0.extract_box_data(str_0, dict_0)
    except BaseException:
        pass

def test_case_5():
    try:
        bool_0 = True
        dict_0 = {bool_0: bool_0, bool_0: bool_0}
        ism_f_d_0 = module_0.IsmFD(bool_0, dict_0)
        var_0 = ism_f_d_0.real_download(dict_0, ism_f_d_0)
    except BaseException:
        pass

def test_case_6():
    try:
        bytes_0 = b''
        bytes_1 = b'test'
        bytes_2 = b'innerdata'
        var_0 = module_0.box(bytes_1, bytes_2)
        var_1 = bytes_0 + var_0
        bytes_3 = b'skip'
        bytes_4 = b'shouldbeskipped'
        var_2 = module_0.box(bytes_3, bytes_4)
        var_3 = var_1 + var_2
        bytes_5 = b'deep'
        bytes_6 = b'nested'
        bytes_7 = b'nesteddata'
        var_4 = module_0.box(bytes_6, bytes_7)
        var_5 = module_0.box(bytes_5, var_4)
        var_6 = var_3 + var_5
        bytes_8 = [bytes_1]
        var_7 = module_0.extract_box_data(var_6, bytes_8)
        bytes_9 = [bytes_5, bytes_6]
        var_8 = module_0.extract_box_data(var_6, bytes_9)
    except BaseException:
        pass