# Automatically generated by Pynguin.
import ansible.utils.vars as module_0

def test_case_0():
    try:
        bool_0 = True
        var_0 = module_0.combine_vars(bool_0, bool_0)
    except BaseException:
        pass

def test_case_1():
    try:
        set_0 = set()
        float_0 = 0.001
        var_0 = module_0.combine_vars(set_0, set_0, float_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bool_0 = True
        str_0 = ''
        var_0 = module_0.merge_hash(bool_0, str_0, str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'G\xe0\x98Dm\xa5'
        var_0 = module_0.get_unique_id()
        str_0 = 'q'
        set_0 = set()
        int_0 = -1251
        var_1 = module_0.load_options_vars(int_0)
        tuple_0 = (set_0,)
        var_2 = module_0._isidentifier_PY3(tuple_0)
        set_1 = {bytes_0, str_0}
        var_3 = module_0.load_extra_vars(set_1)
        var_4 = module_0._isidentifier_PY3(str_0)
        complex_0 = None
        str_1 = 'ilnya<G\n'
        list_0 = [complex_0, str_1, set_1]
        str_2 = 'Ru+TIMZu$(P\\|_Ky7}$f'
        var_5 = module_0.merge_hash(complex_0, complex_0, list_0, str_2)
    except BaseException:
        pass

def test_case_4():
    try:
        bytes_0 = b'G\xe0\x98Dm\xa5'
        var_0 = module_0.get_unique_id()
        str_0 = 'q'
        set_0 = set()
        int_0 = -1251
        var_1 = module_0.load_options_vars(int_0)
        tuple_0 = (set_0,)
        var_2 = module_0._isidentifier_PY3(tuple_0)
        set_1 = {bytes_0, str_0}
        var_3 = module_0.load_extra_vars(set_1)
        var_4 = module_0._isidentifier_PY3(str_0)
        dict_0 = {var_0: tuple_0, bytes_0: set_0}
        bool_0 = True
        var_5 = module_0.merge_hash(dict_0, set_1, bool_0)
    except BaseException:
        pass

def test_case_5():
    try:
        tuple_0 = ()
        set_0 = {tuple_0, tuple_0, tuple_0}
        bool_0 = False
        str_0 = ''
        var_0 = module_0.combine_vars(set_0, bool_0, str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'a'
        var_0 = module_0.get_unique_id()
        str_1 = 'b'
        var_1 = module_0._isidentifier_PY3(str_0)
        int_0 = 2
        var_2 = module_0.get_unique_id()
        float_0 = 1970.6422
        bytes_0 = b'Vr\x8d\xab\xf9'
        dict_0 = {float_0: bytes_0, bytes_0: bytes_0, str_1: int_0}
        var_3 = module_0.combine_vars(dict_0, dict_0)
        var_4 = module_0.load_options_vars(bytes_0)
        float_1 = 0.0
        var_5 = module_0.load_extra_vars(float_1)
        str_2 = 'y'
        var_6 = module_0.load_extra_vars(str_2)
        bool_0 = True
        set_0 = {float_1, float_1, var_0, int_0}
        var_7 = module_0.merge_hash(set_0, bool_0)
    except BaseException:
        pass