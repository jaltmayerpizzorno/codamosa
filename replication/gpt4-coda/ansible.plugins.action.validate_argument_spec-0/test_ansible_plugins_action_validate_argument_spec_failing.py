# Automatically generated by Pynguin.
import ansible.plugins.action.validate_argument_spec as module_0

def test_case_0():
    try:
        float_0 = 1112.0
        bool_0 = False
        dict_0 = {float_0: bool_0}
        dict_1 = {bool_0: bool_0}
        int_0 = -1158
        int_1 = -1841
        list_0 = [float_0]
        str_0 = "dqM'OHM!];h/`\x0b"
        bytes_0 = b'w\x83;\x82)\x0f<\xf4B\xff\xdd\xb7'
        action_module_0 = module_0.ActionModule(bool_0, int_0, int_1, list_0, str_0, bytes_0)
        var_0 = action_module_0.get_args_from_task_vars(dict_0, dict_1)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'tK$xIj]'
        bytes_0 = b'\xb2r\x9c\x93\x1d\xb6\x8a\xe1\xb4\x19e\x0b\x01N\xbfl'
        bytes_1 = b'\xc7\xcf\xbe\x82Qb'
        int_0 = -98
        bytes_2 = b'\x0f\x06\xef\x08\x15\xaf\xf8\x962f\x01\x88\xbd\x8a'
        dict_0 = {bytes_1: bytes_0, int_0: int_0, str_0: int_0, bytes_1: str_0}
        dict_1 = {bytes_1: bytes_1, bytes_2: dict_0}
        tuple_0 = (int_0, bytes_0, bytes_2, dict_1)
        set_0 = {bytes_1, bytes_1, bytes_1}
        action_module_0 = module_0.ActionModule(str_0, bytes_0, bytes_1, tuple_0, set_0, int_0)
        var_0 = action_module_0.run()
    except BaseException:
        pass

def test_case_2():
    try:
        float_0 = 2913.7
        set_0 = None
        list_0 = [set_0, float_0, set_0, float_0]
        list_1 = [float_0, set_0, list_0]
        bytes_0 = b'F\xc7\x04\xd7\xf4\x01;\x95|\xad!'
        str_0 = 'm~ofJG;.'
        tuple_0 = ()
        bool_0 = True
        str_1 = 'activating'
        int_0 = 3031
        str_2 = 'uxUvALwwM7{pJ\n=y0\x0c'
        action_module_0 = module_0.ActionModule(str_0, tuple_0, bool_0, str_1, int_0, str_2)
        action_module_1 = module_0.ActionModule(float_0, set_0, list_1, bytes_0, action_module_0, float_0)
        float_1 = None
        set_1 = set()
        int_1 = 4702
        str_3 = 'na(aI>11$iK(=@9V/q<\r'
        action_module_2 = module_0.ActionModule(float_1, set_1, action_module_1, int_1, action_module_0, str_3)
        var_0 = action_module_2.run(bool_0, list_0)
    except BaseException:
        pass

def test_case_3():
    try:
        float_0 = 1112.0
        bool_0 = False
        dict_0 = {bool_0: bool_0}
        bool_1 = False
        int_0 = -1158
        int_1 = -1841
        list_0 = [float_0]
        str_0 = "dqM'OHM!];h/`\x0b"
        bytes_0 = b'w\x83;\x82)\x0f<\xf4B\xff\xdd\xb7'
        action_module_0 = module_0.ActionModule(bool_1, int_0, int_1, list_0, str_0, bytes_0)
        var_0 = action_module_0.get_args_from_task_vars(dict_0, dict_0)
    except BaseException:
        pass