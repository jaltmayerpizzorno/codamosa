# Automatically generated by Pynguin.
import cookiecutter.replay as module_0

def test_case_0():
    try:
        str_0 = 's8@'
        var_0 = module_0.load(str_0, str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'drq|L%|jk0.zL:7jlU'
        list_0 = [str_0, str_0]
        tuple_0 = ()
        var_0 = module_0.dump(str_0, list_0, tuple_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b"'\xd3\x15\x10\xf3\x83.%*\xa2-\t~\x87?\xea\xcf"
        str_0 = 'aJ"_4M%Rx|sCq|d.J]'
        float_0 = 912.06
        var_0 = module_0.dump(bytes_0, str_0, float_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bool_0 = True
        var_0 = module_0.load(bool_0, bool_0)
    except BaseException:
        pass

def test_case_4():
    try:
        bytes_0 = b''
        str_0 = '3ySmjA'
        list_0 = []
        var_0 = module_0.dump(bytes_0, str_0, list_0)
    except BaseException:
        pass

def test_case_5():
    try:
        bytes_0 = None
        set_0 = {bytes_0}
        str_0 = 'cookiecutter.json'
        var_0 = module_0.load(set_0, str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        bytes_0 = b'\xfe\x85\xe31+\xa9C#\xe2\xd6\x19'
        str_0 = '\\?h\x0cb'
        dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, str_0: bytes_0}
        var_0 = module_0.dump(bytes_0, str_0, dict_0)
    except BaseException:
        pass