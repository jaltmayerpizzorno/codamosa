# Automatically generated by Pynguin.
import ansible.inventory.data as module_0
import ansible.inventory.host as module_1

def test_case_0():
    try:
        inventory_data_0 = module_0.InventoryData()
        float_0 = -175.43021
        bytes_0 = b'\x82h'
        var_0 = inventory_data_0.remove_group(bytes_0)
        var_1 = inventory_data_0.deserialize(float_0)
    except BaseException:
        pass

def test_case_1():
    try:
        inventory_data_0 = module_0.InventoryData()
        var_0 = inventory_data_0.get_groups_dict()
        inventory_data_1 = module_0.InventoryData()
        int_0 = -3214
        float_0 = 824.651012
        var_1 = inventory_data_0.remove_group(float_0)
        var_2 = inventory_data_0.add_group(int_0)
    except BaseException:
        pass

def test_case_2():
    try:
        inventory_data_0 = module_0.InventoryData()
        var_0 = inventory_data_0.serialize()
        var_1 = inventory_data_0.get_host(inventory_data_0)
        bytes_0 = None
        var_2 = inventory_data_0.add_group(bytes_0)
    except BaseException:
        pass

def test_case_3():
    try:
        inventory_data_0 = module_0.InventoryData()
        str_0 = 'testgroup1'
        var_0 = inventory_data_0.add_group(str_0)
        str_1 = 'testgroup2'
        var_1 = inventory_data_0.add_group(str_1)
        str_2 = 'pJ'
        var_2 = inventory_data_0.add_host(str_2, str_0)
        var_3 = inventory_data_0.serialize()
        var_4 = inventory_data_0.remove_group(str_0)
        int_0 = 1
        host_0 = module_1.Host(int_0)
        var_5 = inventory_data_0.add_host(host_0)
    except BaseException:
        pass

def test_case_4():
    try:
        inventory_data_0 = module_0.InventoryData()
        str_0 = 'test_group'
        var_0 = inventory_data_0.add_group(str_0)
        str_1 = 'test_host'
        var_1 = inventory_data_0.add_host(str_1, str_0)
        var_2 = inventory_data_0.remove_host(str_1)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'tDGj\x0bMcMTZMn&D_X'
        inventory_data_0 = module_0.InventoryData()
        var_0 = inventory_data_0.remove_group(str_0)
        bytes_0 = None
        bool_0 = True
        bool_1 = True
        var_1 = inventory_data_0.set_variable(bytes_0, bool_0, bool_1)
    except BaseException:
        pass

def test_case_6():
    try:
        inventory_data_0 = module_0.InventoryData()
        str_0 = 'test_group'
        str_1 = 'test_host'
        var_0 = inventory_data_0.add_host(str_1)
        var_1 = inventory_data_0.add_child(str_0, str_1)
    except BaseException:
        pass

def test_case_7():
    try:
        inventory_data_0 = module_0.InventoryData()
        float_0 = -36.102477
        var_0 = inventory_data_0.get_groups_dict()
        var_1 = inventory_data_0.get_groups_dict()
        var_2 = inventory_data_0.deserialize(float_0)
    except BaseException:
        pass

def test_case_8():
    try:
        inventory_data_0 = module_0.InventoryData()
        var_0 = inventory_data_0.get_groups_dict()
        bytes_0 = b''
        var_1 = inventory_data_0.add_host(bytes_0)
    except BaseException:
        pass

def test_case_9():
    try:
        inventory_data_0 = module_0.InventoryData()
        str_0 = 'group1'
        var_0 = inventory_data_0.add_group(str_0)
        var_1 = inventory_data_0.add_group(str_0)
        str_1 = 'host1'
        var_2 = inventory_data_0.add_host(str_1, str_0)
        str_2 = 'host2'
        var_3 = inventory_data_0.add_host(str_2, str_1)
    except BaseException:
        pass

def test_case_10():
    try:
        inventory_data_0 = module_0.InventoryData()
        str_0 = 'test_group'
        var_0 = inventory_data_0.add_group(str_0)
        var_1 = inventory_data_0.add_host(str_0)
        var_2 = inventory_data_0.add_child(str_0, str_0)
    except BaseException:
        pass

def test_case_11():
    try:
        inventory_data_0 = module_0.InventoryData()
        str_0 = 'test_group'
        var_0 = inventory_data_0.add_group(str_0)
        str_1 = 'test_hot'
        var_1 = inventory_data_0.add_host(str_1)
        var_2 = inventory_data_0.add_child(str_0, str_1)
        str_2 = 'child_group'
        var_3 = inventory_data_0.add_group(str_2)
        str_3 = None
        var_4 = inventory_data_0.add_child(str_0, str_3)
    except BaseException:
        pass