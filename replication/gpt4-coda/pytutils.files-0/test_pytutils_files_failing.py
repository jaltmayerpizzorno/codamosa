# Automatically generated by Pynguin.
import pytutils.files as module_0

def test_case_0():
    try:
        set_0 = set()
        tuple_0 = None
        var_0 = module_0.burp(set_0, tuple_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '8nQu{@iRb&a.'
        float_0 = -593.0
        var_0 = module_0.burp(str_0, float_0)
    except BaseException:
        pass

def test_case_2():
    try:
        float_0 = 2555.6275
        float_1 = -2715.18722
        tuple_0 = None
        bool_0 = True
        str_0 = '>'
        dict_0 = {}
        var_0 = module_0.islurp(bool_0, str_0, dict_0)
        var_1 = module_0.islurp(tuple_0, float_1)
        str_1 = '.id}@#cA$]*n[}'
        var_2 = module_0.islurp(float_1, str_1)
        set_0 = {float_0, float_0}
        int_0 = -1355
        str_2 = '\n    Lazy/Cached class property.\n    '
        list_0 = [float_1, int_0, float_0]
        bytes_0 = b'\xb9\xd89\x9b\xb8\xf7\x89\xa9f\xcf\xb9\x89\xb7>'
        var_3 = module_0.burp(str_2, list_0, tuple_0, bytes_0, set_0, tuple_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'r'
        bool_0 = True
        bool_1 = True
        list_0 = [str_0, str_0, bool_0]
        str_1 = None
        var_0 = module_0.burp(str_0, bool_1, str_0, list_0, str_1)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = '-'
        bool_0 = False
        var_0 = module_0.burp(str_0, bool_0)
    except BaseException:
        pass

def test_case_5():
    try:
        list_0 = None
        str_0 = '-'
        var_0 = module_0.burp(str_0, str_0, list_0, list_0)
    except BaseException:
        pass