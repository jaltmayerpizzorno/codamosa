# Automatically generated by Pynguin.
import ansible.utils.collection_loader._collection_finder as module_0

def test_case_0():
    try:
        str_0 = 'ansible_collections.test_namespace.test_collection'
        ansible_collection_pkg_loader_0 = module_0._AnsibleCollectionPkgLoader(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'r:\\+W#$SH{\r."S'
        ansible_collection_pkg_loader_base_0 = module_0._AnsibleCollectionPkgLoaderBase(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '29ex:0ev'
        ansible_collection_root_pkg_loader_0 = module_0._AnsibleCollectionRootPkgLoader(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = ']4!T|a'
        ansible_collection_loader_0 = module_0._AnsibleCollectionLoader(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'ansible.builtin.some_module'
        ansible_internal_redirect_loader_0 = module_0._AnsibleInternalRedirectLoader(str_0, str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'namespace.collection'
        ansible_collection_ref_0 = module_0.AnsibleCollectionRef(str_0, str_0, str_0, str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'suKio.subdir'
        str_1 = 'mymodule'
        str_2 = 'modules'
        ansible_collection_ref_0 = module_0.AnsibleCollectionRef(str_0, str_0, str_1, str_2)
        var_0 = None
        ansible_collection_ref_1 = module_0.AnsibleCollectionRef(str_2, var_0, str_1, str_2)
    except BaseException:
        pass

def test_case_7():
    try:
        bool_0 = False
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder(bool_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = 'namespace.collection'
        str_1 = 'subdir1.subdir2'
        str_2 = 'mymodule'
        str_3 = 'modules'
        ansible_collection_ref_0 = module_0.AnsibleCollectionRef(str_0, str_1, str_2, str_3)
        ansible_collection_pkg_loader_0 = None
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder(ansible_collection_pkg_loader_0)
        ansible_collection_n_s_pkg_loader_0 = module_0._AnsibleCollectionNSPkgLoader(str_0, ansible_collection_finder_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'a4sible.builtin.sXme_module'
        ansible_internal_redirect_loader_0 = module_0._AnsibleInternalRedirectLoader(str_0, str_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = 'ansible.builtin.some_module'
        var_0 = []
        float_0 = 1267.9806
        ansible_collection_pkg_loader_base_0 = None
        ansible_path_hook_finder_0 = module_0._AnsiblePathHookFinder(float_0, ansible_collection_pkg_loader_base_0)
        var_1 = ansible_path_hook_finder_0.__repr__()
        ansible_internal_redirect_loader_0 = module_0._AnsibleInternalRedirectLoader(str_0, var_0)
    except BaseException:
        pass

def test_case_11():
    try:
        int_0 = 0
        bytes_0 = b'\xccI\xbe\xe3\xfa\xd7\xf9\xc6\xcf\x89`\xc8\xaa\xecq%\xef\x91\xdat'
        int_1 = None
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder(bytes_0, int_1)
        ansible_collection_pkg_loader_0 = module_0._AnsibleCollectionPkgLoader(int_0)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = 'namespace.collection'
        str_1 = 'modules'
        ansible_collection_ref_0 = module_0.AnsibleCollectionRef(str_0, str_1, str_0, str_1)
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
        bytes_0 = b'\x8d\x9cY&C\xb1\xa2\xec\x00\xfd\xfef{\n}\x0e\n6'
        var_0 = ansible_collection_finder_0.set_playbook_paths(bytes_0)
        tuple_0 = None
        ansible_collection_finder_1 = module_0._AnsibleCollectionFinder(tuple_0)
        float_0 = -908.976
        ansible_collection_root_pkg_loader_0 = module_0._AnsibleCollectionRootPkgLoader(float_0)
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = 'namespace.collection'
        str_1 = 'subdi#1.subdir2'
        str_2 = 'mymodule'
        str_3 = 'modules'
        ansible_collection_ref_0 = module_0.AnsibleCollectionRef(str_0, str_1, str_2, str_3)
    except BaseException:
        pass

def test_case_14():
    try:
        str_0 = 'ansible_collections.test_namespacetest_collection'
        ansible_collection_pkg_loader_0 = module_0._AnsibleCollectionPkgLoader(str_0)
    except BaseException:
        pass

def test_case_15():
    try:
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
        str_0 = 'Famespare.collection'
        str_1 = 'modules'
        ansible_collection_ref_0 = module_0.AnsibleCollectionRef(str_0, str_1, str_0, str_1)
        int_0 = 0
        var_0 = ansible_collection_ref_0.legacy_plugin_dir_to_plugin_type(int_0)
    except BaseException:
        pass

def test_case_16():
    try:
        str_0 = 'FAmespace.collection'
        str_1 = 'modules'
        ansible_collection_ref_0 = module_0.AnsibleCollectionRef(str_0, str_1, str_0, str_1)
        list_0 = [str_0, ansible_collection_ref_0]
        dict_0 = None
        var_0 = ansible_collection_ref_0.from_fqcr(list_0, dict_0)
    except BaseException:
        pass

def test_case_17():
    try:
        str_0 = 'namespace.collection'
        str_1 = 'modules'
        ansible_collection_ref_0 = module_0.AnsibleCollectionRef(str_0, str_1, str_0, str_1)
        bool_0 = True
        var_0 = ansible_collection_ref_0.is_valid_collection_name(bool_0)
        var_1 = ansible_collection_ref_0.is_valid_fqcr(ansible_collection_ref_0, ansible_collection_ref_0)
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
        tuple_0 = ()
        var_2 = ansible_collection_ref_0.try_parse_fqcr(ansible_collection_finder_0, tuple_0)
        dict_0 = None
        var_3 = ansible_collection_finder_0.set_playbook_paths(dict_0)
    except BaseException:
        pass