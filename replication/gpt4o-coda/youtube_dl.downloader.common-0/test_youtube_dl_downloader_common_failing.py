# Automatically generated by Pynguin.
import youtube_dl.downloader.common as module_0

def test_case_0():
    try:
        bytes_0 = b'\xee5\n\xff\xad'
        str_0 = 'h>K\\\nj1h391U[.M$'
        tuple_0 = ()
        str_1 = 'NOT-USED'
        str_2 = 'gb041m/'
        dict_0 = {}
        file_downloader_0 = module_0.FileDownloader(str_2, dict_0)
        var_0 = file_downloader_0.calc_eta(bytes_0, str_0, tuple_0, str_1)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'omy5p,xuj53'
        float_0 = 317.98
        bytes_0 = b'\xc1z\xba\xe4\\\x9b+\x07\xdf\x83O\xea\xa29L\x18\xd9\xe9\xce'
        str_1 = '}lnpyPy;'
        int_0 = -2149
        set_0 = {float_0, bytes_0, str_0}
        file_downloader_0 = module_0.FileDownloader(bytes_0, set_0)
        var_0 = file_downloader_0.calc_speed(str_1, int_0, float_0)
    except BaseException:
        pass

def test_case_2():
    try:
        int_0 = None
        str_0 = '+?VF+j\rD=u.7\x0cdS~'
        dict_0 = {}
        file_downloader_0 = module_0.FileDownloader(int_0, dict_0)
        var_0 = file_downloader_0.parse_bytes(str_0)
        str_1 = "Js'0/Y2U:.Z0i3@'M9S"
        var_1 = file_downloader_0.temp_name(str_1)
        int_1 = 1569
        var_2 = file_downloader_0.format_eta(int_1)
        set_0 = {int_1, int_1, int_0, int_1}
        var_3 = file_downloader_0.format_speed(set_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'itemSecionRenderer'
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
        file_downloader_0 = module_0.FileDownloader(str_0, dict_0)
        bool_0 = True
        float_0 = -1133.458471
        var_0 = file_downloader_0.best_block_size(bool_0, float_0)
    except BaseException:
        pass

def test_case_4():
    try:
        dict_0 = {}
        file_downloader_0 = module_0.FileDownloader(dict_0, dict_0)
        int_0 = 993
        var_0 = file_downloader_0.report_file_already_downloaded(int_0)
    except BaseException:
        pass

def test_case_5():
    try:
        bool_0 = True
        list_0 = [bool_0]
        str_0 = 'tK@\\VaP+.0|~D&`4ZScJ'
        list_1 = [str_0, list_0, str_0, list_0]
        str_1 = '|<.^:Tj\\=%'
        str_2 = '_^MuA:$|+A4_!,Z=Ug'
        tuple_0 = (str_2,)
        file_downloader_0 = module_0.FileDownloader(str_1, tuple_0)
        var_0 = file_downloader_0.try_utime(str_0, list_1)
        int_0 = -1687
        str_3 = '*la $/@Pkr2\t'
        set_0 = {str_3, int_0}
        tuple_1 = (int_0, str_3, set_0)
        list_2 = []
        file_downloader_1 = module_0.FileDownloader(list_2, tuple_1)
        var_1 = file_downloader_1.to_stderr(set_0)
    except BaseException:
        pass

def test_case_6():
    try:
        bytes_0 = b'\x8c\xee\x85u\t\xc3'
        list_0 = []
        file_downloader_0 = module_0.FileDownloader(bytes_0, list_0)
        float_0 = 2807.938
        var_0 = file_downloader_0.format_seconds(float_0)
        file_downloader_1 = None
        var_1 = file_downloader_0.to_console_title(file_downloader_1)
    except BaseException:
        pass

def test_case_7():
    try:
        bytes_0 = b'!Qk\xf5\x8f\x00i\x9d0?\x0bU\xff\xee\x7f\xf7\xd1'
        list_0 = []
        int_0 = -3512
        str_0 = 'J}ne,_QcD;fma'
        tuple_0 = (bytes_0, list_0, int_0, str_0)
        file_downloader_0 = module_0.FileDownloader(tuple_0, list_0)
        var_0 = file_downloader_0.trouble()
    except BaseException:
        pass

def test_case_8():
    try:
        bytes_0 = b'\x8c\xee\x85u\t\xc3'
        list_0 = []
        file_downloader_0 = module_0.FileDownloader(bytes_0, list_0)
        float_0 = 2807.938
        var_0 = file_downloader_0.format_seconds(float_0)
        var_1 = file_downloader_0.report_warning()
    except BaseException:
        pass

def test_case_9():
    try:
        dict_0 = {}
        file_downloader_0 = module_0.FileDownloader(dict_0, dict_0)
        var_0 = file_downloader_0.temp_name(dict_0)
    except BaseException:
        pass

def test_case_10():
    try:
        dict_0 = {}
        int_0 = 464
        tuple_0 = (int_0,)
        str_0 = 'c#'
        dict_1 = {str_0: tuple_0, str_0: int_0}
        tuple_1 = (tuple_0, dict_1)
        file_downloader_0 = module_0.FileDownloader(tuple_0, tuple_1)
        var_0 = file_downloader_0.report_destination(dict_0)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = 'qNJV'
        bool_0 = False
        tuple_0 = ()
        file_downloader_0 = module_0.FileDownloader(bool_0, tuple_0)
        var_0 = file_downloader_0.report_progress(str_0)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = 'itemSecionRenderer'
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
        file_downloader_0 = module_0.FileDownloader(str_0, dict_0)
        bool_0 = True
        float_0 = 4763.74359
        var_0 = file_downloader_0.best_block_size(bool_0, float_0)
        bool_1 = True
        var_1 = file_downloader_0.report_resuming_byte(bool_1)
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = "#6(Gi1A<+b;6'2}"
        str_1 = '^8%,"\x0c=rpK+Sr^U!vN,'
        dict_0 = {str_0: str_0, str_1: str_0, str_0: str_1, str_0: str_1}
        float_0 = 3564.79
        file_downloader_0 = module_0.FileDownloader(dict_0, float_0)
        var_0 = file_downloader_0.report_unable_to_resume()
    except BaseException:
        pass

def test_case_14():
    try:
        str_0 = '{ r#o]@=@\r#O3!fnhhY'
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
        file_downloader_0 = module_0.FileDownloader(str_0, dict_0)
        var_0 = file_downloader_0.download(dict_0, file_downloader_0)
    except BaseException:
        pass

def test_case_15():
    try:
        str_0 = 'itemSecionRenderer'
        dict_0 = {str_0: str_0}
        file_downloader_0 = module_0.FileDownloader(str_0, dict_0)
        var_0 = file_downloader_0.download(str_0, str_0)
    except BaseException:
        pass

def test_case_16():
    try:
        int_0 = 3032
        set_0 = {int_0, int_0}
        int_1 = 1282
        tuple_0 = None
        tuple_1 = (set_0, int_1, tuple_0)
        list_0 = [tuple_1]
        float_0 = 1164.141327596813
        str_0 = 'nYZ6\t>@'
        str_1 = '-'
        tuple_2 = (list_0, float_0, str_0, str_1)
        file_downloader_0 = module_0.FileDownloader(tuple_2, str_0)
        str_2 = "]'eD[3dN a~$\tLJ"
        var_0 = file_downloader_0.format_percent(int_1)
        bool_0 = False
        file_downloader_1 = module_0.FileDownloader(str_2, bool_0)
        var_1 = file_downloader_1.try_utime(file_downloader_0, list_0)
    except BaseException:
        pass

def test_case_17():
    try:
        int_0 = None
        bool_0 = False
        float_0 = -1751.6031271866411
        file_downloader_0 = module_0.FileDownloader(bool_0, float_0)
        var_0 = file_downloader_0.format_percent(int_0)
        str_0 = 'QGFWTz@i^<ja+f7P6'
        bool_1 = False
        file_downloader_1 = module_0.FileDownloader(bool_1, bool_1)
        set_0 = {file_downloader_1, bool_1}
        list_0 = [set_0, set_0, file_downloader_1]
        str_1 = 'wXIvrh)fkdX\r'
        file_downloader_2 = module_0.FileDownloader(list_0, str_1)
        var_1 = file_downloader_2.format_eta(str_0)
    except BaseException:
        pass

def test_case_18():
    try:
        bytes_0 = b't'
        float_0 = -761.0
        bytes_1 = b'\xa4'
        str_0 = 'b+8)&'
        dict_0 = {str_0: bytes_1}
        file_downloader_0 = module_0.FileDownloader(bytes_1, dict_0)
        var_0 = file_downloader_0.calc_percent(bytes_0, float_0)
    except BaseException:
        pass

def test_case_19():
    try:
        str_0 = 'itemSectionRenderer'
        str_1 = 'GW -'
        dict_0 = {str_0: str_1, str_0: str_0, str_0: str_0}
        file_downloader_0 = module_0.FileDownloader(str_0, dict_0)
        var_0 = file_downloader_0.temp_name(str_1)
        float_0 = -1677.313
        var_1 = file_downloader_0.ytdl_filename(float_0)
    except BaseException:
        pass

def test_case_20():
    try:
        complex_0 = None
        str_0 = '7Hn;s:.cdD%SD\x0ben$'
        str_1 = 'd!o*@\rN/Q'
        file_downloader_0 = module_0.FileDownloader(str_1, str_0)
        var_0 = file_downloader_0.try_rename(complex_0, str_0)
    except BaseException:
        pass

def test_case_21():
    try:
        str_0 = 'Q3EoD+z*b'
        tuple_0 = ()
        dict_0 = {str_0: tuple_0}
        file_downloader_0 = module_0.FileDownloader(tuple_0, dict_0)
        bool_0 = True
        str_1 = ')|<|KRf\x0bqk'
        var_0 = file_downloader_0.report_retry(bool_0, str_0, str_1)
    except BaseException:
        pass

def test_case_22():
    try:
        str_0 = 'X/J6ak2FB'
        list_0 = [str_0, str_0, str_0]
        str_1 = 'https://www.safaribooksonline.com/api/v1/book/9781449396459/?override_format=json'
        set_0 = {str_1}
        file_downloader_0 = module_0.FileDownloader(str_1, set_0)
        dict_0 = {}
        str_2 = 'Tb<*#x\\W9:G%o(s'
        dict_1 = {str_1: set_0, str_2: str_2}
        file_downloader_1 = module_0.FileDownloader(dict_1, list_0)
        var_0 = file_downloader_1.report_error(**dict_0)
    except BaseException:
        pass

def test_case_23():
    try:
        int_0 = 2668
        list_0 = [int_0, int_0, int_0]
        float_0 = 3352.0
        list_1 = [list_0]
        str_0 = 'http://www.lemonde.fr/les-decodeurs/article/2016/10/18/tout-comprendre-du-ceta-le-petit-cousin-du-traite-transatlantique_5015920_4355770.html'
        str_1 = ''
        str_2 = 'ex/6"zI'
        dict_0 = {str_0: int_0, str_1: list_0, str_0: int_0, str_2: str_1}
        bool_0 = True
        file_downloader_0 = module_0.FileDownloader(dict_0, bool_0)
        var_0 = file_downloader_0.calc_eta(float_0, int_0, list_1, float_0)
        file_downloader_1 = module_0.FileDownloader(int_0, list_0)
        var_1 = file_downloader_1.report_unable_to_resume()
    except BaseException:
        pass

def test_case_24():
    try:
        float_0 = 1430311380.0
        bool_0 = False
        int_0 = 0
        bytes_0 = b'\'V\xa76\x9am/\xaf\xca\xed\x8a\xba\x88\n\xd4\x82k"'
        list_0 = [bytes_0]
        int_1 = -70
        file_downloader_0 = module_0.FileDownloader(list_0, int_1)
        var_0 = file_downloader_0.calc_speed(float_0, bool_0, int_0)
        var_1 = file_downloader_0.report_unable_to_resume()
    except BaseException:
        pass

def test_case_25():
    try:
        bool_0 = True
        list_0 = []
        str_0 = 'tK@\\VaP+.0|~D&`4ZScJ'
        list_1 = [str_0, list_0, str_0, list_0]
        str_1 = '|<.^:Tj\\=%'
        tuple_0 = (str_1,)
        file_downloader_0 = module_0.FileDownloader(str_1, tuple_0)
        var_0 = file_downloader_0.try_utime(str_0, list_1)
        bool_1 = True
        file_downloader_1 = module_0.FileDownloader(bool_0, bool_1)
        float_0 = -1e309
        dict_0 = {bool_0: str_1, bool_0: bool_0, file_downloader_1: bool_0}
        var_1 = file_downloader_1.calc_eta(float_0, bool_1, bool_0, dict_0)
    except BaseException:
        pass

def test_case_26():
    try:
        int_0 = 2668
        list_0 = [int_0, int_0, int_0]
        float_0 = 0.001
        list_1 = [list_0]
        str_0 = 'http://www.lemonde.fr/les-decodeurs/article/2016/10/18/tout-comprendre-du-ceta-le-petit-cousin-du-traite-transatlantique_5015920_4355770.html'
        str_1 = ''
        str_2 = 'x/6"zI'
        dict_0 = {str_0: int_0, str_1: list_0, str_0: int_0, str_2: str_1}
        bool_0 = True
        file_downloader_0 = module_0.FileDownloader(dict_0, bool_0)
        var_0 = file_downloader_0.calc_eta(float_0, int_0, list_1, float_0)
    except BaseException:
        pass

def test_case_27():
    try:
        int_0 = 2459
        int_1 = -199
        str_0 = '!y'
        file_downloader_0 = module_0.FileDownloader(int_1, str_0)
        var_0 = file_downloader_0.format_eta(int_0)
        str_1 = "@O3>P!'u2s(ixKT"
        int_2 = None
        complex_0 = None
        list_0 = [complex_0]
        dict_0 = {}
        file_downloader_1 = module_0.FileDownloader(dict_0, dict_0)
        var_1 = file_downloader_1.calc_eta(str_1, int_2, complex_0, list_0)
        str_2 = 'G}"Wu'
        var_2 = file_downloader_1.temp_name(str_2)
        float_0 = 246.58
        var_3 = file_downloader_0.report_progress(float_0)
    except BaseException:
        pass

def test_case_28():
    try:
        int_0 = None
        str_0 = 'B5[?aE:/|$\tFuh~'
        dict_0 = {}
        file_downloader_0 = module_0.FileDownloader(int_0, dict_0)
        var_0 = file_downloader_0.parse_bytes(str_0)
        int_1 = 1614
        bool_0 = None
        list_0 = [str_0, bool_0, dict_0, int_1]
        tuple_0 = (list_0, file_downloader_0, int_0)
        var_1 = file_downloader_0.try_utime(tuple_0, int_0)
        var_2 = file_downloader_0.undo_temp_name(str_0)
        float_0 = -2003.5175789605373
        set_0 = {file_downloader_0}
        tuple_1 = (bool_0, tuple_0, float_0, set_0)
        var_3 = file_downloader_0.slow_down(int_1, str_0, tuple_1)
        var_4 = file_downloader_0.report_file_already_downloaded(tuple_1)
    except BaseException:
        pass

def test_case_29():
    try:
        int_0 = 1938
        str_0 = 'a'
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
        file_downloader_0 = module_0.FileDownloader(str_0, dict_0)
        var_0 = file_downloader_0.temp_name(str_0)
        var_1 = file_downloader_0.try_rename(str_0, str_0)
        list_0 = [dict_0]
        var_2 = file_downloader_0.slow_down(list_0, int_0, list_0)
        str_1 = '8?%ab+;mH[k:8t'
        var_3 = file_downloader_0.try_utime(int_0, str_1)
    except BaseException:
        pass

def test_case_30():
    try:
        str_0 = 'Tele-Media Company'
        bool_0 = True
        tuple_0 = None
        dict_0 = {str_0: str_0, tuple_0: str_0}
        float_0 = -1489.7
        str_1 = None
        dict_1 = {str_0: dict_0, str_0: bool_0, str_0: dict_0, str_1: str_0}
        float_1 = -1863.63
        str_2 = None
        bool_1 = True
        file_downloader_0 = module_0.FileDownloader(dict_1, bool_1)
        var_0 = file_downloader_0.format_eta(str_2)
        file_downloader_1 = module_0.FileDownloader(dict_1, float_1)
        var_1 = file_downloader_1.format_percent(float_0)
        file_downloader_2 = module_0.FileDownloader(str_0, dict_0)
        var_2 = file_downloader_2.parse_bytes(bool_0)
    except BaseException:
        pass

def test_case_31():
    try:
        str_0 = 'itemSectionRenderer'
        str_1 = 'ac'
        dict_0 = {str_0: str_1, str_0: str_0, str_0: str_0}
        file_downloader_0 = module_0.FileDownloader(str_0, dict_0)
        var_0 = file_downloader_0.temp_name(str_1)
        str_2 = None
        var_1 = file_downloader_0.try_rename(str_2, str_2)
        list_0 = [dict_0]
        int_0 = -2201
        var_2 = file_downloader_0.slow_down(list_0, int_0, list_0)
        bytes_0 = None
        bool_0 = False
        var_3 = file_downloader_0.calc_eta(int_0, bytes_0, bool_0, bool_0)
        set_0 = set()
        var_4 = file_downloader_0.real_download(set_0, int_0)
    except BaseException:
        pass

def test_case_32():
    try:
        str_0 = 'itemSectonRenerer'
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
        file_downloader_0 = module_0.FileDownloader(str_0, dict_0)
        var_0 = file_downloader_0.temp_name(str_0)
        int_0 = 4525
        bool_0 = False
        var_1 = file_downloader_0.calc_speed(bool_0, int_0, file_downloader_0)
    except BaseException:
        pass

def test_case_33():
    try:
        str_0 = 'itemSecionRenderer'
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
        file_downloader_0 = module_0.FileDownloader(str_0, dict_0)
        bool_0 = True
        float_0 = 4763.74359
        var_0 = file_downloader_0.best_block_size(bool_0, float_0)
    except BaseException:
        pass

def test_case_34():
    try:
        str_0 = 'itemSecionRenderer'
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
        file_downloader_0 = module_0.FileDownloader(str_0, dict_0)
        bool_0 = False
        float_0 = 4763.74359
        var_0 = file_downloader_0.best_block_size(bool_0, float_0)
    except BaseException:
        pass

def test_case_35():
    try:
        int_0 = None
        str_0 = 'Di}z'
        dict_0 = {}
        str_1 = ')\x0bvb'
        set_0 = {int_0, int_0}
        file_downloader_0 = module_0.FileDownloader(set_0, set_0)
        var_0 = file_downloader_0.undo_temp_name(str_1)
        file_downloader_1 = module_0.FileDownloader(int_0, dict_0)
        var_1 = file_downloader_1.parse_bytes(str_0)
        tuple_0 = (int_0,)
        float_0 = -1972.4596950531486
        set_1 = {file_downloader_1}
        list_0 = [file_downloader_1, float_0, set_1, int_0, file_downloader_1, tuple_0]
        float_1 = 484.6022000061581
        var_2 = file_downloader_1.slow_down(list_0, tuple_0, float_1)
        str_2 = "u_Ebvr18ZF#.F '+=dy6"
        var_3 = file_downloader_1.try_utime(str_2, file_downloader_1)
        str_3 = '1044982'
        var_4 = file_downloader_0.parse_bytes(str_3)
        var_5 = file_downloader_1.temp_name(file_downloader_1)
    except BaseException:
        pass

def test_case_36():
    try:
        int_0 = None
        dict_0 = {}
        file_downloader_0 = module_0.FileDownloader(int_0, dict_0)
        str_0 = '?QMNMMpm'
        var_0 = file_downloader_0.try_utime(str_0, file_downloader_0)
        str_1 = '.'
        var_1 = file_downloader_0.temp_name(str_1)
        var_2 = file_downloader_0.download(str_1, dict_0)
    except BaseException:
        pass

def test_case_37():
    try:
        str_0 = 'eS\tIv7^gd:Ho'
        str_1 = ':-dVA$[I'
        str_2 = 'pol'
        bool_0 = False
        str_3 = 'a\x0bn!C\r4#'
        set_0 = {str_0, str_2}
        file_downloader_0 = module_0.FileDownloader(str_3, set_0)
        var_0 = file_downloader_0.format_eta(bool_0)
        int_0 = -672
        bool_1 = False
        list_0 = [str_0]
        file_downloader_1 = module_0.FileDownloader(bool_1, list_0)
        dict_0 = {str_1: int_0}
        str_4 = '\tvV'
        file_downloader_2 = module_0.FileDownloader(dict_0, str_4)
        var_1 = file_downloader_2.add_progress_hook(file_downloader_1)
        file_downloader_3 = module_0.FileDownloader(str_2, int_0)
        var_2 = file_downloader_3.try_rename(str_0, str_1)
    except BaseException:
        pass