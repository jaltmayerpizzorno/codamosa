# Automatically generated by Pynguin.
import pysnooper.utils as module_0

def test_case_0():
    try:
        writable_stream_0 = module_0.WritableStream()
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = b'\x8cu\xb3+'
        var_0 = module_0.shitcode(bytes_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b"z'\xf14\xbc\xce\xe4,\xa2\xe5#\x91"
        var_0 = module_0.normalize_repr(bytes_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '$KW[_9P'
        var_0 = module_0.get_shortish_repr(str_0)
        bytes_0 = b'\xb7\xe6@\x0b*n\xb8\xb0\x0e\xc6 4|\xde;=\xefSu^'
        dict_0 = None
        var_1 = module_0.truncate(bytes_0, dict_0)
        bytes_1 = b'\xc9\xe0-D\x87\x04\x16G\xfe\xbc\x18\xb2\n\x9b0'
        list_0 = [var_0, bytes_1, str_0]
        var_2 = module_0.get_repr_function(bytes_1, list_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'kT r4\t~'
        str_1 = None
        dict_0 = {str_1: str_1, str_0: str_1}
        var_0 = module_0.get_shortish_repr(dict_0)
        var_1 = module_0.shitcode(str_0)
        list_0 = [var_1, var_1]
        bool_0 = True
        var_2 = module_0.truncate(list_0, bool_0)
        int_0 = -804
        tuple_0 = (dict_0,)
        var_3 = module_0.get_shortish_repr(int_0, tuple_0)
    except BaseException:
        pass

def test_case_5():
    try:
        bytes_0 = b'\xf2\xb9zn\xc5\xed\x1a\x9e\x9a\xd3\xefk9\xd3\x07fj'
        list_0 = [bytes_0, bytes_0]
        var_0 = module_0.ensure_tuple(list_0)
        var_1 = module_0.normalize_repr(bytes_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'PYSNOOPER_DISABLED'
        var_0 = module_0.ensure_tuple(str_0)
        str_1 = 'l+.u=$\\/'
        var_1 = module_0.get_shortish_repr(str_1)
        bytes_0 = b'\xc9\xe0-D\x87\x04\x16G\xfe\xbc\x18\xb2\n\x9b0'
        list_0 = [var_1, bytes_0, str_1]
        var_2 = module_0.get_repr_function(bytes_0, list_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'kT r4\t~'
        var_0 = module_0.shitcode(str_0)
        bytes_0 = b'a\xa6\xad\x1f\x92\xc5m\xa9\xaa\xa7\xa4\xb0U'
        var_1 = module_0.get_repr_function(bytes_0, bytes_0)
    except BaseException:
        pass

def test_case_8():
    try:
        int_0 = -1409
        int_1 = None
        var_0 = module_0.ensure_tuple(int_1)
        list_0 = [int_0, int_0, int_0, var_0]
        str_0 = 's$'
        dict_0 = {str_0: int_1}
        writable_stream_0 = module_0.WritableStream(*list_0, **dict_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'Hello, World!'
        bytes_0 = b')\xc8'
        list_0 = [bytes_0]
        var_0 = module_0.get_shortish_repr(bytes_0, list_0, str_0)
    except BaseException:
        pass