# Automatically generated by Pynguin.
import ansible.module_utils.common.parameters as module_0

def test_case_0():
    try:
        int_0 = 1032
        str_0 = 'k=>(<8v]d$g'
        dict_0 = {str_0: str_0}
        set_0 = {str_0, str_0, str_0}
        tuple_0 = (int_0, int_0, dict_0, set_0)
        var_0 = module_0.sanitize_keys(tuple_0, dict_0, set_0)
        var_1 = module_0.env_fallback()
    except BaseException:
        pass

def test_case_1():
    try:
        var_0 = module_0.env_fallback()
    except BaseException:
        pass

def test_case_2():
    try:
        tuple_0 = ()
        list_0 = [tuple_0]
        var_0 = module_0.env_fallback(*list_0)
    except BaseException:
        pass

def test_case_3():
    try:
        float_0 = 652.6291
        dict_0 = {float_0: float_0, float_0: float_0, float_0: float_0}
        str_0 = '\tV%I}s=/\x0cm='
        str_1 = '\raI5SsD;3[Tv*V'
        str_2 = None
        dict_1 = {str_0: float_0, str_1: float_0, str_2: str_1, str_1: dict_0}
        var_0 = module_0.set_fallbacks(dict_0, dict_1)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'Z\x0crBa@i'
        bool_0 = False
        var_0 = module_0.sanitize_keys(str_0, bool_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = '--transient'
        list_0 = [str_0, str_0, str_0]
        dict_0 = {str_0: list_0, str_0: list_0}
        var_0 = module_0.env_fallback(*list_0, **dict_0)
    except BaseException:
        pass