# Automatically generated by Pynguin.
import ansible.module_utils.common.parameters as module_0

def test_case_0():
    pass

def test_case_1():
    dict_0 = None
    str_0 = ': Uid differs$'
    var_0 = module_0.remove_values(dict_0, str_0)

def test_case_2():
    bytes_0 = b''
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    list_1 = [bytes_0, bytes_0, bytes_0, bytes_0]
    var_0 = module_0.remove_values(list_0, list_1)

def test_case_3():
    str_0 = '/sys/devices/virtual/dmi/id/chassis_version'
    var_0 = module_0.remove_values(str_0, str_0)

def test_case_4():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    var_0 = module_0.remove_values(bool_0, dict_0)

def test_case_5():
    bool_0 = False
    dict_0 = {bool_0: bool_0}
    list_0 = [dict_0, dict_0, bool_0, dict_0]
    str_0 = "2}RAhK/JnXC3[5tF'1"
    bytes_0 = b'\xed\xbd|\x0f`B\x8a\xeb\x0b/d\x0c0\x05\x0c\x1e\xefc\xc7'
    float_0 = -2513.5
    tuple_0 = (list_0, str_0, bytes_0, float_0)
    var_0 = module_0.remove_values(tuple_0, list_0)

def test_case_6():
    str_0 = '}>&lYMlJNS5+j6a:'
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.remove_values(dict_0, str_0)

def test_case_7():
    str_0 = 'secret'
    str_1 = {str_0}
    var_0 = module_0.remove_values(str_0, str_1)

def test_case_8():
    set_0 = set()
    var_0 = module_0.remove_values(set_0, set_0)

def test_case_9():
    bytes_0 = None
    set_0 = {bytes_0}
    list_0 = [set_0, set_0, bytes_0]
    var_0 = module_0.sanitize_keys(list_0, set_0)

def test_case_10():
    str_0 = 'replace_chars and replacement_chars must both be strings'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.sanitize_keys(dict_0, str_0)

def test_case_11():
    bool_0 = False
    set_0 = {bool_0, bool_0}
    var_0 = module_0.sanitize_keys(bool_0, set_0)

def test_case_12():
    str_0 = ']mY~#}'
    set_0 = {str_0, str_0, str_0, str_0}
    var_0 = module_0.sanitize_keys(str_0, set_0)

def test_case_13():
    str_0 = '&|=l'
    set_0 = {str_0, str_0}
    list_0 = []
    var_0 = module_0.sanitize_keys(set_0, list_0)

def test_case_14():
    float_0 = 713.2923
    list_0 = []
    var_0 = module_0.remove_values(float_0, list_0)

def test_case_15():
    bytes_0 = b'\x9f \xcfW1\xbe\x8d\x8f\x87\xbf1\x9b$?\xb4\xb8R\xd3\x80O'
    str_0 = None
    str_1 = '[(0r6'
    dict_0 = {str_0: bytes_0, str_1: str_1}
    list_0 = [bytes_0, dict_0, bytes_0, str_0]
    set_0 = set()
    var_0 = module_0.remove_values(list_0, set_0)

def test_case_16():
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0}
    var_0 = module_0.remove_values(set_0, set_0)

def test_case_17():
    str_0 = 'UTH;'
    str_1 = 'b!e^\x0b0c)G4D}*\x0bO"&Dt'
    dict_0 = {str_1: str_1, str_1: str_1, str_1: str_1, str_1: str_1}
    tuple_0 = ()
    int_0 = 1631
    str_2 = 'PLJ.:Z}'
    tuple_1 = ()
    dict_1 = {int_0: tuple_0, str_2: str_0, int_0: tuple_1}
    dict_2 = {str_0: dict_0, str_0: dict_1}
    var_0 = module_0.set_fallbacks(dict_2, tuple_1)

def test_case_18():
    bytes_0 = b'\xc2\xba\xba\xf8\x11\n\x06(\xd6'
    str_0 = 'Zq7)"m)Wr=T-hp0K<:D'
    str_1 = '(RyrB@'
    dict_0 = {str_0: str_0, str_1: str_0, str_1: str_1, str_1: str_1}
    var_0 = module_0.remove_values(bytes_0, dict_0)

def test_case_19():
    str_0 = '^}E5eb0O.lBUy:<:C'
    str_1 = 'g:MZqM*\x0bR@n?_\x0bq'
    bool_0 = True
    bytes_0 = b'\xa2\xcc\xd5 \xae(\xf1\xe6t\xbf\xd3<\xa2\xa8\xc0'
    str_2 = 'L{dR(Fqp'
    var_0 = module_0.remove_values(bytes_0, str_2)
    str_3 = 'UTu;'
    float_0 = 0.0001
    str_4 = 'q}:4`-[bYl9u'
    var_1 = module_0.sanitize_keys(bool_0, str_3, float_0)
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_0}
    tuple_0 = ()
    int_0 = 1631
    set_0 = set()
    list_0 = []
    var_2 = module_0.sanitize_keys(bool_0, set_0, list_0)
    list_1 = [tuple_0, int_0, int_0]
    set_1 = {str_0, str_1, float_0}
    var_3 = module_0.sanitize_keys(set_1, tuple_0)
    var_4 = module_0.remove_values(set_1, str_1)
    tuple_1 = ()
    str_5 = ''
    dict_1 = {str_4: var_3}
    str_6 = '5uZ'
    dict_2 = {str_5: dict_1, str_3: str_5, str_6: dict_0}
    list_2 = [tuple_1, dict_0, dict_2]
    var_5 = module_0.remove_values(str_4, list_2)
    var_6 = module_0.sanitize_keys(list_2, list_1)
    dict_3 = {}
    tuple_2 = ()
    var_7 = module_0.remove_values(dict_1, tuple_2)
    dict_4 = {str_1: dict_0, str_3: dict_3}
    var_8 = module_0.set_fallbacks(dict_4, dict_4)