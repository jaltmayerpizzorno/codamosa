

# Generated at 2024-06-04 20:46:09.320393
```python
    value = {
        ScalarToken("key1", 0, 3, "key1"): ScalarToken("value1", 5, 10, "value1"),
        ScalarToken("key2", 12, 15, "key2"): ScalarToken("value2", 17, 22, "value2"),
    }
    token = DictToken(value, 0, 22, "key1: value1\nkey2: value2")
    assert token._value == value
    assert token._start_index == 0
    assert token._end_index == 22
    assert token._content == "key1: value1\nkey2: value2"
    assert token._child_keys["key1"] == ScalarToken("key1", 0, 3, "key1")
    assert token._child_tokens["key1"] == ScalarToken("value1", 5, 10, "value

# Generated at 2024-06-04 20:46:13.380798
```python
    key1 = ScalarToken("key1", 0, 3, "key1: value1")
    value1 = ScalarToken("value1", 6, 11, "key1: value1")
    key2 = ScalarToken("key2", 13, 16, "key2: value2")
    value2 = ScalarToken("value2", 19, 24, "key2: value2")
    dict_value = {key1: value1, key2: value2}
    dict_token = DictToken(dict_value, 0, 24, "key1: value1\nkey2: value2")

    assert dict_token._value == dict_value
    assert dict_token._start_index == 0
    assert dict_token._end_index == 24
    assert dict_token._content == "key1: value1\nkey2: value2"
    assert dict_token._child_keys ==

# Generated at 2024-06-04 20:46:17.780527
```python
    key1 = ScalarToken("key1", 0, 3, "key1: value1")
    value1 = ScalarToken("value1", 6, 11, "key1: value1")
    key2 = ScalarToken("key2", 13, 16, "key2: value2")
    value2 = ScalarToken("value2", 19, 24, "key2: value2")
    dict_value = {key1: value1, key2: value2}
    dict_token = DictToken(dict_value, 0, 24, "key1: value1\nkey2: value2")

    assert dict_token._value == dict_value
    assert dict_token._start_index == 0
    assert dict_token._end_index == 24
    assert dict_token._content == "key1: value1\nkey2: value2"
    assert dict_token._child_keys ==

# Generated at 2024-06-04 20:46:22.333287
```python
    key1 = ScalarToken("key1", 0, 3, "key1: value1")
    value1 = ScalarToken("value1", 6, 11, "key1: value1")
    key2 = ScalarToken("key2", 13, 16, "key2: value2")
    value2 = ScalarToken("value2", 19, 24, "key2: value2")
    dict_value = {key1: value1, key2: value2}
    dict_token = DictToken(dict_value, 0, 24, "key1: value1\nkey2: value2")

    assert dict_token._value == dict_value
    assert dict_token._start_index == 0
    assert dict_token._end_index == 24
    assert dict_token._content == "key1: value1\nkey2: value2"
    assert dict_token._child_keys ==

# Generated at 2024-06-04 20:46:26.295734
```python
    key1 = ScalarToken("key1", 0, 3, "key1: value1")
    value1 = ScalarToken("value1", 6, 11, "key1: value1")
    key2 = ScalarToken("key2", 13, 16, "key2: value2")
    value2 = ScalarToken("value2", 19, 24, "key2: value2")
    dict_value = {key1: value1, key2: value2}
    dict_token = DictToken(dict_value, 0, 24, "key1: value1\nkey2: value2")

    assert dict_token._value == dict_value
    assert dict_token._start_index == 0
    assert dict_token._end_index == 24
    assert dict_token._content == "key1: value1\nkey2: value2"
    assert dict_token._child_keys ==

# Generated at 2024-06-04 20:46:29.872044
```python
    key1 = ScalarToken("key1", 0, 3, "key1: value1")
    value1 = ScalarToken("value1", 6, 11, "key1: value1")
    key2 = ScalarToken("key2", 13, 16, "key2: value2")
    value2 = ScalarToken("value2", 19, 24, "key2: value2")
    dict_value = {key1: value1, key2: value2}
    dict_token = DictToken(dict_value, 0, 24, "key1: value1\nkey2: value2")

    assert dict_token._value == dict_value
    assert dict_token._start_index == 0
    assert dict_token._end_index == 24
    assert dict_token._content == "key1: value1\nkey2: value2"
    assert dict_token._child_keys ==

# Generated at 2024-06-04 20:46:33.323812
```python
    token1 = ScalarToken(value=123, start_index=0, end_index=2, content="123")
    token2 = ScalarToken(value=123, start_index=0, end_index=2, content="123")
    token3 = ScalarToken(value=456, start_index=0, end_index=2, content="456")
    token4 = ScalarToken(value=123, start_index=0, end_index=3, content="1234")

    assert token1 == token2, "Tokens with same value and indices should be equal"
    assert token1 != token3, "Tokens with different values should not be equal"
    assert token1 != token4, "Tokens with different end indices should not be equal"
```

# Generated at 2024-06-04 20:46:35.934847
```python
    token1 = ScalarToken(value=123, start_index=0, end_index=2, content="123")
    token2 = ScalarToken(value=123, start_index=0, end_index=2, content="123")
    token3 = ScalarToken(value=456, start_index=0, end_index=2, content="456")
    token4 = ScalarToken(value=123, start_index=0, end_index=3, content="1234")

    assert token1 == token2
    assert token1 != token3
    assert token1 != token4
```

# Generated at 2024-06-04 20:46:39.805171
```python
    key1 = ScalarToken("key1", 0, 3, "key1: value1")
    value1 = ScalarToken("value1", 6, 11, "key1: value1")
    key2 = ScalarToken("key2", 13, 16, "key2: value2")
    value2 = ScalarToken("value2", 19, 24, "key2: value2")
    dict_value = {key1: value1, key2: value2}
    dict_token = DictToken(dict_value, 0, 24, "key1: value1\nkey2: value2")

    assert dict_token._value == dict_value
    assert dict_token._start_index == 0
    assert dict_token._end_index == 24
    assert dict_token._content == "key1: value1\nkey2: value2"
    assert dict_token._child_keys ==

# Generated at 2024-06-04 20:46:42.700279
```python
    token1 = ScalarToken(value=123, start_index=0, end_index=2, content="123")
    token2 = ScalarToken(value=123, start_index=0, end_index=2, content="123")
    token3 = ScalarToken(value=456, start_index=0, end_index=2, content="456")
    token4 = ScalarToken(value=123, start_index=0, end_index=3, content="1234")

    assert token1 == token2, "Tokens with same value and indices should be equal"
    assert token1 != token3, "Tokens with different values should not be equal"
    assert token1 != token4, "Tokens with different end indices should not be equal"
```

# Generated at 2024-06-04 20:47:02.398836
```python
    token1 = ScalarToken(value=123, start_index=0, end_index=2, content="123")
    token2 = ScalarToken(value=123, start_index=0, end_index=2, content="123")
    token3 = ScalarToken(value=456, start_index=0, end_index=2, content="456")
    token4 = ScalarToken(value=123, start_index=0, end_index=3, content="1234")

    assert token1 == token2
    assert token1 != token3
    assert token1 != token4
```

# Generated at 2024-06-04 20:47:05.140792
```python
    token1 = ScalarToken(value=123, start_index=0, end_index=2, content="123")
    token2 = ScalarToken(value=123, start_index=0, end_index=2, content="123")
    token3 = ScalarToken(value=456, start_index=0, end_index=2, content="456")
    token4 = ScalarToken(value=123, start_index=0, end_index=3, content="1234")

    assert token1 == token2
    assert token1 != token3
    assert token1 != token4
```

# Generated at 2024-06-04 20:47:09.654859
```python
    key1 = ScalarToken("key1", 0, 3, "key1: value1")
    value1 = ScalarToken("value1", 6, 11, "key1: value1")
    key2 = ScalarToken("key2", 13, 16, "key2: value2")
    value2 = ScalarToken("value2", 19, 24, "key2: value2")
    dict_value = {key1: value1, key2: value2}
    dict_token = DictToken(dict_value, 0, 24, "key1: value1\nkey2: value2")

    assert dict_token._value == dict_value
    assert dict_token._start_index == 0
    assert dict_token._end_index == 24
    assert dict_token._content == "key1: value1\nkey2: value2"
    assert dict_token._child_keys ==

# Generated at 2024-06-04 20:47:13.106346
```python
    token1 = ScalarToken(value=123, start_index=0, end_index=2, content="123")
    token2 = ScalarToken(value=123, start_index=0, end_index=2, content="123")
    token3 = ScalarToken(value=456, start_index=0, end_index=2, content="456")
    token4 = ScalarToken(value=123, start_index=0, end_index=3, content="1234")

    assert token1 == token2, "Tokens with same value and indices should be equal"
    assert token1 != token3, "Tokens with different values should not be equal"
    assert token1 != token4, "Tokens with different end indices should not be equal"
```

# Generated at 2024-06-04 20:47:17.194997
```python
    key1 = ScalarToken("key1", 0, 3, "key1: value1")
    value1 = ScalarToken("value1", 6, 11, "key1: value1")
    key2 = ScalarToken("key2", 13, 16, "key2: value2")
    value2 = ScalarToken("value2", 19, 24, "key2: value2")
    dict_value = {key1: value1, key2: value2}
    dict_token = DictToken(dict_value, 0, 24, "key1: value1\nkey2: value2")

    assert dict_token._value == dict_value
    assert dict_token._start_index == 0
    assert dict_token._end_index == 24
    assert dict_token._content == "key1: value1\nkey2: value2"
    assert dict_token._child_keys ==

# Generated at 2024-06-04 20:47:20.812051
```python
    key1 = ScalarToken("key1", 0, 3, "key1: value1")
    value1 = ScalarToken("value1", 6, 11, "key1: value1")
    key2 = ScalarToken("key2", 13, 16, "key2: value2")
    value2 = ScalarToken("value2", 19, 24, "key2: value2")
    dict_value = {key1: value1, key2: value2}
    dict_token = DictToken(dict_value, 0, 24, "key1: value1\nkey2: value2")

    assert dict_token._value == dict_value
    assert dict_token._start_index == 0
    assert dict_token._end_index == 24
    assert dict_token._content == "key1: value1\nkey2: value2"
    assert dict_token._child_keys ==

# Generated at 2024-06-04 20:47:23.860521
```python
    token1 = ScalarToken(value=123, start_index=0, end_index=2, content="123")
    token2 = ScalarToken(value=123, start_index=0, end_index=2, content="123")
    token3 = ScalarToken(value=456, start_index=0, end_index=2, content="456")
    token4 = ScalarToken(value=123, start_index=0, end_index=3, content="1234")

    assert token1 == token2
    assert token1 != token3
    assert token1 != token4
```

# Generated at 2024-06-04 20:47:27.026758
```python
    token1 = ScalarToken(value=123, start_index=0, end_index=2, content="123")
    token2 = ScalarToken(value=123, start_index=0, end_index=2, content="123")
    token3 = ScalarToken(value=456, start_index=0, end_index=2, content="456")
    token4 = ScalarToken(value=123, start_index=0, end_index=3, content="1234")

    assert token1 == token2, "Tokens with same value and indices should be equal"
    assert token1 != token3, "Tokens with different values should not be equal"
    assert token1 != token4, "Tokens with different end indices should not be equal"
```

# Generated at 2024-06-04 20:47:29.639503
```python
    token1 = ScalarToken(value=123, start_index=0, end_index=2, content="123")
    token2 = ScalarToken(value=123, start_index=0, end_index=2, content="123")
    token3 = ScalarToken(value=456, start_index=0, end_index=2, content="456")
    token4 = ScalarToken(value=123, start_index=0, end_index=3, content="1234")

    assert token1 == token2
    assert token1 != token3
    assert token1 != token4
```

# Generated at 2024-06-04 20:47:32.882626
```python
    token1 = ScalarToken(value=123, start_index=0, end_index=2, content="123")
    token2 = ScalarToken(value=123, start_index=0, end_index=2, content="123")
    token3 = ScalarToken(value=456, start_index=0, end_index=2, content="456")
    token4 = ScalarToken(value=123, start_index=0, end_index=3, content="1234")

    assert token1 == token2, "Tokens with same value and indices should be equal"
    assert token1 != token3, "Tokens with different values should not be equal"
    assert token1 != token4, "Tokens with different end indices should not be equal"
```

# Generated at 2024-06-04 20:47:54.129308
```python
    token1 = ScalarToken(value=123, start_index=0, end_index=2, content="123")
    token2 = ScalarToken(value=123, start_index=0, end_index=2, content="123")
    token3 = ScalarToken(value=456, start_index=0, end_index=2, content="456")
    token4 = ScalarToken(value=123, start_index=0, end_index=3, content="1234")

    assert token1 == token2
    assert token1 != token3
    assert token1 != token4
```

# Generated at 2024-06-04 20:47:57.222926
```python
    token1 = ScalarToken(value=123, start_index=0, end_index=2, content="123")
    token2 = ScalarToken(value=123, start_index=0, end_index=2, content="123")
    token3 = ScalarToken(value=456, start_index=0, end_index=2, content="456")
    token4 = ScalarToken(value=123, start_index=0, end_index=3, content="1234")

    assert token1 == token2
    assert token1 != token3
    assert token1 != token4
```

# Generated at 2024-06-04 20:48:01.953539
```python
    key1 = ScalarToken("key1", 0, 3, "key1: value1")
    value1 = ScalarToken("value1", 6, 11, "key1: value1")
    key2 = ScalarToken("key2", 13, 16, "key2: value2")
    value2 = ScalarToken("value2", 19, 24, "key2: value2")
    dict_value = {key1: value1, key2: value2}
    dict_token = DictToken(dict_value, 0, 24, "key1: value1\nkey2: value2")

    assert dict_token._value == dict_value
    assert dict_token._start_index == 0
    assert dict_token._end_index == 24
    assert dict_token._content == "key1: value1\nkey2: value2"
    assert dict_token._child_keys ==

# Generated at 2024-06-04 20:48:05.628200
```python
    key1 = ScalarToken("key1", 0, 3, "key1: value1")
    value1 = ScalarToken("value1", 6, 11, "key1: value1")
    key2 = ScalarToken("key2", 13, 16, "key2: value2")
    value2 = ScalarToken("value2", 19, 24, "key2: value2")
    dict_value = {key1: value1, key2: value2}
    dict_token = DictToken(dict_value, 0, 24, "key1: value1\nkey2: value2")

    assert dict_token._value == dict_value
    assert dict_token._start_index == 0
    assert dict_token._end_index == 24
    assert dict_token._content == "key1: value1\nkey2: value2"
    assert dict_token._child_keys ==

# Generated at 2024-06-04 20:48:08.700130
```python
    token1 = ScalarToken(value=123, start_index=0, end_index=2, content="123")
    token2 = ScalarToken(value=123, start_index=0, end_index=2, content="123")
    token3 = ScalarToken(value=456, start_index=0, end_index=2, content="456")
    token4 = ScalarToken(value=123, start_index=0, end_index=3, content="1234")

    assert token1 == token2
    assert token1 != token3
    assert token1 != token4
```

# Generated at 2024-06-04 20:48:12.106945
```python
    token1 = ScalarToken(value=123, start_index=0, end_index=2, content="123")
    token2 = ScalarToken(value=123, start_index=0, end_index=2, content="123")
    token3 = ScalarToken(value=456, start_index=0, end_index=2, content="456")
    token4 = ScalarToken(value=123, start_index=0, end_index=3, content="1234")

    assert token1 == token2  # Tokens with same value and indices should be equal
    assert token1 != token3  # Tokens with different values should not be equal
    assert token1 != token4  # Tokens with different end indices should not be equal
```

# Generated at 2024-06-04 20:48:18.210509
```python
    key1 = ScalarToken("key1", 0, 3, "key1: value1")
    value1 = ScalarToken("value1", 6, 11, "key1: value1")
    key2 = ScalarToken("key2", 13, 16, "key2: value2")
    value2 = ScalarToken("value2", 19, 24, "key2: value2")
    dict_value = {key1: value1, key2: value2}
    dict_token = DictToken(dict_value, 0, 24, "key1: value1\nkey2: value2")

    assert dict_token._value == dict_value
    assert dict_token._start_index == 0
    assert dict_token._end_index == 24
    assert dict_token._content == "key1: value1\nkey2: value2"
    assert dict_token._child_keys ==

# Generated at 2024-06-04 20:48:20.828600
```python
    token1 = ScalarToken(value=123, start_index=0, end_index=2, content="123")
    token2 = ScalarToken(value=123, start_index=0, end_index=2, content="123")
    token3 = ScalarToken(value=456, start_index=0, end_index=2, content="456")
    token4 = ScalarToken(value=123, start_index=0, end_index=3, content="1234")

    assert token1 == token2
    assert token1 != token3
    assert token1 != token4
```

# Generated at 2024-06-04 20:48:24.492052
```python
    key1 = ScalarToken("key1", 0, 3, "key1: value1")
    value1 = ScalarToken("value1", 6, 11, "key1: value1")
    key2 = ScalarToken("key2", 13, 16, "key2: value2")
    value2 = ScalarToken("value2", 19, 24, "key2: value2")
    dict_value = {key1: value1, key2: value2}
    dict_token = DictToken(dict_value, 0, 24, "key1: value1\nkey2: value2")

    assert dict_token._value == dict_value
    assert dict_token._start_index == 0
    assert dict_token._end_index == 24
    assert dict_token._content == "key1: value1\nkey2: value2"
    assert dict_token._child_keys ==

# Generated at 2024-06-04 20:48:26.842131
```python
    token1 = ScalarToken(value=123, start_index=0, end_index=2, content="123")
    token2 = ScalarToken(value=123, start_index=0, end_index=2, content="123")
    token3 = ScalarToken(value=456, start_index=0, end_index=2, content="456")
    token4 = ScalarToken(value=123, start_index=0, end_index=3, content="1234")

    assert token1 == token2
    assert token1 != token3
    assert token1 != token4
```

# Generated at 2024-06-04 20:49:26.490122
```python
    key1 = ScalarToken("key1", 0, 3, "key1: value1")
    value1 = ScalarToken("value1", 6, 11, "key1: value1")
    key2 = ScalarToken("key2", 13, 16, "key2: value2")
    value2 = ScalarToken("value2", 19, 24, "key2: value2")
    dict_value = {key1: value1, key2: value2}
    dict_token = DictToken(dict_value, 0, 24, "key1: value1\nkey2: value2")

    assert dict_token._value == dict_value
    assert dict_token._start_index == 0
    assert dict_token._end_index == 24
    assert dict_token._content == "key1: value1\nkey2: value2"
    assert dict_token._child_keys ==

# Generated at 2024-06-04 20:49:31.023511
```python
    key1 = ScalarToken("key1", 0, 3, "key1: value1")
    value1 = ScalarToken("value1", 6, 11, "key1: value1")
    key2 = ScalarToken("key2", 13, 16, "key2: value2")
    value2 = ScalarToken("value2", 19, 24, "key2: value2")
    dict_value = {key1: value1, key2: value2}
    dict_token = DictToken(dict_value, 0, 24, "key1: value1\nkey2: value2")

    assert dict_token._value == dict_value
    assert dict_token._start_index == 0
    assert dict_token._end_index == 24
    assert dict_token._content == "key1: value1\nkey2: value2"
    assert dict_token._child_keys ==

# Generated at 2024-06-04 20:49:35.005875
```python
    key1 = ScalarToken("key1", 0, 3, "key1: value1")
    value1 = ScalarToken("value1", 6, 11, "key1: value1")
    key2 = ScalarToken("key2", 13, 16, "key2: value2")
    value2 = ScalarToken("value2", 19, 24, "key2: value2")
    dict_value = {key1: value1, key2: value2}
    dict_token = DictToken(dict_value, 0, 24, "key1: value1\nkey2: value2")

    assert dict_token._value == dict_value
    assert dict_token._start_index == 0
    assert dict_token._end_index == 24
    assert dict_token._content == "key1: value1\nkey2: value2"
    assert dict_token._child_keys ==

# Generated at 2024-06-04 20:49:39.293698
```python
    key1 = ScalarToken("key1", 0, 3, "key1: value1")
    value1 = ScalarToken("value1", 6, 11, "key1: value1")
    key2 = ScalarToken("key2", 13, 16, "key2: value2")
    value2 = ScalarToken("value2", 19, 24, "key2: value2")
    dict_value = {key1: value1, key2: value2}
    dict_token = DictToken(dict_value, 0, 24, "key1: value1\nkey2: value2")

    assert dict_token._value == dict_value
    assert dict_token._start_index == 0
    assert dict_token._end_index == 24
    assert dict_token._content == "key1: value1\nkey2: value2"
    assert dict_token._child_keys ==

# Generated at 2024-06-04 20:49:43.123327
```python
    key1 = ScalarToken("key1", 0, 3, "key1: value1")
    value1 = ScalarToken("value1", 6, 11, "key1: value1")
    key2 = ScalarToken("key2", 13, 16, "key2: value2")
    value2 = ScalarToken("value2", 19, 24, "key2: value2")
    dict_value = {key1: value1, key2: value2}
    dict_token = DictToken(dict_value, 0, 24, "key1: value1\nkey2: value2")

    assert dict_token._value == dict_value
    assert dict_token._start_index == 0
    assert dict_token._end_index == 24
    assert dict_token._content == "key1: value1\nkey2: value2"
    assert dict_token._child_keys ==

# Generated at 2024-06-04 20:49:46.882695
```python
    key1 = ScalarToken("key1", 0, 3, "key1: value1")
    value1 = ScalarToken("value1", 6, 11, "key1: value1")
    key2 = ScalarToken("key2", 13, 16, "key2: value2")
    value2 = ScalarToken("value2", 19, 24, "key2: value2")
    dict_value = {key1: value1, key2: value2}
    dict_token = DictToken(dict_value, 0, 24, "key1: value1\nkey2: value2")

    assert dict_token._value == dict_value
    assert dict_token._start_index == 0
    assert dict_token._end_index == 24
    assert dict_token._content == "key1: value1\nkey2: value2"
    assert dict_token._child_keys ==

# Generated at 2024-06-04 20:49:50.488282
```python
    key1 = ScalarToken("key1", 0, 3, "key1: value1")
    value1 = ScalarToken("value1", 6, 11, "key1: value1")
    key2 = ScalarToken("key2", 13, 16, "key2: value2")
    value2 = ScalarToken("value2", 19, 24, "key2: value2")
    dict_value = {key1: value1, key2: value2}
    dict_token = DictToken(dict_value, 0, 24, "key1: value1\nkey2: value2")

    assert dict_token._value == dict_value
    assert dict_token._start_index == 0
    assert dict_token._end_index == 24
    assert dict_token._content == "key1: value1\nkey2: value2"
    assert dict_token._child_keys ==

# Generated at 2024-06-04 20:49:56.604854
```python
    key1 = ScalarToken("key1", 0, 3, "key1: value1")
    value1 = ScalarToken("value1", 6, 11, "key1: value1")
    key2 = ScalarToken("key2", 13, 16, "key2: value2")
    value2 = ScalarToken("value2", 19, 24, "key2: value2")
    dict_value = {key1: value1, key2: value2}
    dict_token = DictToken(dict_value, 0, 24, "key1: value1\nkey2: value2")

    assert dict_token._value == dict_value
    assert dict_token._start_index == 0
    assert dict_token._end_index == 24
    assert dict_token._content == "key1: value1\nkey2: value2"
    assert dict_token._child_keys ==

# Generated at 2024-06-04 20:50:01.230667
```python
    key1 = ScalarToken("key1", 0, 3, "key1: value1")
    value1 = ScalarToken("value1", 6, 11, "key1: value1")
    key2 = ScalarToken("key2", 13, 16, "key2: value2")
    value2 = ScalarToken("value2", 19, 24, "key2: value2")
    dict_value = {key1: value1, key2: value2}
    dict_token = DictToken(dict_value, 0, 24, "key1: value1\nkey2: value2")

    assert dict_token._value == dict_value
    assert dict_token._start_index == 0
    assert dict_token._end_index == 24
    assert dict_token._content == "key1: value1\nkey2: value2"
    assert dict_token._child_keys ==

# Generated at 2024-06-04 20:50:05.061348
```python
    key1 = ScalarToken("key1", 0, 3, "key1: value1")
    value1 = ScalarToken("value1", 6, 11, "key1: value1")
    key2 = ScalarToken("key2", 13, 16, "key2: value2")
    value2 = ScalarToken("value2", 19, 24, "key2: value2")
    dict_value = {key1: value1, key2: value2}
    dict_token = DictToken(dict_value, 0, 24, "key1: value1\nkey2: value2")

    assert dict_token._value == dict_value
    assert dict_token._start_index == 0
    assert dict_token._end_index == 24
    assert dict_token._content == "key1: value1\nkey2: value2"
    assert dict_token._child_keys ==

# Generated at 2024-06-04 20:51:09.864830
```python
    key1 = ScalarToken("key1", 0, 3, "key1: value1")
    value1 = ScalarToken("value1", 6, 11, "key1: value1")
    key2 = ScalarToken("key2", 13, 16, "key2: value2")
    value2 = ScalarToken("value2", 19, 24, "key2: value2")
    dict_value = {key1: value1, key2: value2}
    dict_token = DictToken(dict_value, 0, 24, "key1: value1\nkey2: value2")

    assert dict_token._value == dict_value
    assert dict_token._start_index == 0
    assert dict_token._end_index == 24
    assert dict_token._content == "key1: value1\nkey2: value2"
    assert dict_token._child_keys ==

# Generated at 2024-06-04 20:51:14.233890
```python
    key1 = ScalarToken("key1", 0, 3, "key1: value1")
    value1 = ScalarToken("value1", 6, 11, "key1: value1")
    key2 = ScalarToken("key2", 13, 16, "key2: value2")
    value2 = ScalarToken("value2", 19, 24, "key2: value2")
    dict_value = {key1: value1, key2: value2}
    dict_token = DictToken(dict_value, 0, 24, "key1: value1\nkey2: value2")

    assert dict_token._value == dict_value
    assert dict_token._start_index == 0
    assert dict_token._end_index == 24
    assert dict_token._content == "key1: value1\nkey2: value2"
    assert dict_token._child_keys ==

# Generated at 2024-06-04 20:51:18.411397
```python
    key1 = ScalarToken("key1", 0, 3, "key1: value1")
    value1 = ScalarToken("value1", 6, 11, "key1: value1")
    key2 = ScalarToken("key2", 13, 16, "key2: value2")
    value2 = ScalarToken("value2", 19, 24, "key2: value2")
    dict_value = {key1: value1, key2: value2}
    dict_token = DictToken(dict_value, 0, 24, "key1: value1\nkey2: value2")

    assert dict_token._value == dict_value
    assert dict_token._start_index == 0
    assert dict_token._end_index == 24
    assert dict_token._content == "key1: value1\nkey2: value2"
    assert dict_token._child_keys ==

# Generated at 2024-06-04 20:51:24.555121
```python
    key1 = ScalarToken("key1", 0, 3, "key1: value1")
    value1 = ScalarToken("value1", 6, 11, "key1: value1")
    key2 = ScalarToken("key2", 13, 16, "key2: value2")
    value2 = ScalarToken("value2", 19, 24, "key2: value2")
    dict_value = {key1: value1, key2: value2}
    dict_token = DictToken(dict_value, 0, 24, "key1: value1\nkey2: value2")

    assert dict_token._value == dict_value
    assert dict_token._start_index == 0
    assert dict_token._end_index == 24
    assert dict_token._content == "key1: value1\nkey2: value2"
    assert dict_token._child_keys ==

# Generated at 2024-06-04 20:51:30.635510
```python
    key1 = ScalarToken("key1", 0, 3, "key1: value1")
    value1 = ScalarToken("value1", 6, 11, "key1: value1")
    key2 = ScalarToken("key2", 13, 16, "key2: value2")
    value2 = ScalarToken("value2", 19, 24, "key2: value2")
    dict_value = {key1: value1, key2: value2}
    dict_token = DictToken(dict_value, 0, 24, "key1: value1\nkey2: value2")

    assert dict_token._value == dict_value
    assert dict_token._start_index == 0
    assert dict_token._end_index == 24
    assert dict_token._content == "key1: value1\nkey2: value2"
    assert dict_token._child_keys ==

# Generated at 2024-06-04 20:51:34.994801
```python
    key1 = ScalarToken("key1", 0, 3, "key1: value1")
    value1 = ScalarToken("value1", 6, 11, "key1: value1")
    key2 = ScalarToken("key2", 13, 16, "key2: value2")
    value2 = ScalarToken("value2", 19, 24, "key2: value2")
    dict_value = {key1: value1, key2: value2}
    dict_token = DictToken(dict_value, 0, 24, "key1: value1\nkey2: value2")

    assert dict_token._value == dict_value
    assert dict_token._start_index == 0
    assert dict_token._end_index == 24
    assert dict_token._content == "key1: value1\nkey2: value2"
    assert dict_token._child_keys ==

# Generated at 2024-06-04 20:51:41.763707
```python
    key1 = ScalarToken("key1", 0, 3, "key1: value1")
    value1 = ScalarToken("value1", 6, 11, "key1: value1")
    key2 = ScalarToken("key2", 13, 16, "key2: value2")
    value2 = ScalarToken("value2", 19, 24, "key2: value2")
    dict_value = {key1: value1, key2: value2}
    dict_token = DictToken(dict_value, 0, 24, "key1: value1\nkey2: value2")

    assert dict_token._value == dict_value
    assert dict_token._start_index == 0
    assert dict_token._end_index == 24
    assert dict_token._content == "key1: value1\nkey2: value2"
    assert dict_token._child_keys ==

# Generated at 2024-06-04 20:51:46.500415
```python
    key1 = ScalarToken("key1", 0, 3, "key1: value1")
    value1 = ScalarToken("value1", 6, 11, "key1: value1")
    key2 = ScalarToken("key2", 13, 16, "key2: value2")
    value2 = ScalarToken("value2", 19, 24, "key2: value2")
    dict_value = {key1: value1, key2: value2}
    dict_token = DictToken(dict_value, 0, 24, "key1: value1\nkey2: value2")

    assert dict_token._value == dict_value
    assert dict_token._start_index == 0
    assert dict_token._end_index == 24
    assert dict_token._content == "key1: value1\nkey2: value2"
    assert dict_token._child_keys ==

# Generated at 2024-06-04 20:51:50.808811
```python
    key1 = ScalarToken("key1", 0, 3, "key1: value1")
    value1 = ScalarToken("value1", 6, 11, "key1: value1")
    key2 = ScalarToken("key2", 13, 16, "key2: value2")
    value2 = ScalarToken("value2", 19, 24, "key2: value2")
    dict_value = {key1: value1, key2: value2}
    dict_token = DictToken(dict_value, 0, 24, "key1: value1\nkey2: value2")

    assert dict_token._value == dict_value
    assert dict_token._start_index == 0
    assert dict_token._end_index == 24
    assert dict_token._content == "key1: value1\nkey2: value2"
    assert dict_token._child_keys ==

# Generated at 2024-06-04 20:51:55.568090
```python
    key1 = ScalarToken("key1", 0, 3, "key1: value1")
    value1 = ScalarToken("value1", 6, 11, "key1: value1")
    key2 = ScalarToken("key2", 13, 16, "key2: value2")
    value2 = ScalarToken("value2", 19, 24, "key2: value2")
    dict_value = {key1: value1, key2: value2}
    dict_token = DictToken(dict_value, 0, 24, "key1: value1\nkey2: value2")

    assert dict_token._value == dict_value
    assert dict_token._start_index == 0
    assert dict_token._end_index == 24
    assert dict_token._content == "key1: value1\nkey2: value2"
    assert dict_token._child_keys ==

# Generated at 2024-06-04 20:54:12.314262
```python
    key1 = ScalarToken("key1", 0, 3, "key1: value1")
    value1 = ScalarToken("value1", 6, 11, "key1: value1")
    key2 = ScalarToken("key2", 13, 16, "key2: value2")
    value2 = ScalarToken("value2", 19, 24, "key2: value2")
    dict_value = {key1: value1, key2: value2}
    dict_token = DictToken(dict_value, 0, 24, "key1: value1\nkey2: value2")

    assert dict_token._value == dict_value
    assert dict_token._start_index == 0
    assert dict_token._end_index == 24
    assert dict_token._content == "key1: value1\nkey2: value2"
    assert dict_token._child_keys ==

# Generated at 2024-06-04 20:54:16.344925
```python
    key1 = ScalarToken("key1", 0, 3, "key1: value1")
    value1 = ScalarToken("value1", 6, 11, "key1: value1")
    key2 = ScalarToken("key2", 13, 16, "key2: value2")
    value2 = ScalarToken("value2", 19, 24, "key2: value2")
    dict_value = {key1: value1, key2: value2}
    dict_token = DictToken(dict_value, 0, 24, "key1: value1\nkey2: value2")

    assert dict_token._value == dict_value
    assert dict_token._start_index == 0
    assert dict_token._end_index == 24
    assert dict_token._content == "key1: value1\nkey2: value2"
    assert dict_token._child_keys ==

# Generated at 2024-06-04 20:54:19.805966
```python
    key1 = ScalarToken("key1", 0, 3, "key1: value1")
    value1 = ScalarToken("value1", 6, 11, "key1: value1")
    key2 = ScalarToken("key2", 13, 16, "key2: value2")
    value2 = ScalarToken("value2", 19, 24, "key2: value2")
    dict_value = {key1: value1, key2: value2}
    dict_token = DictToken(dict_value, 0, 24, "key1: value1\nkey2: value2")

    assert dict_token._value == dict_value
    assert dict_token._start_index == 0
    assert dict_token._end_index == 24
    assert dict_token._content == "key1: value1\nkey2: value2"
    assert dict_token._child_keys ==

# Generated at 2024-06-04 20:54:22.878381
```python
    key1 = ScalarToken("key1", 0, 3, "key1: value1")
    value1 = ScalarToken("value1", 6, 11, "key1: value1")
    key2 = ScalarToken("key2", 13, 16, "key2: value2")
    value2 = ScalarToken("value2", 19, 24, "key2: value2")
    dict_value = {key1: value1, key2: value2}
    dict_token = DictToken(dict_value, 0, 24, "key1: value1\nkey2: value2")

    assert dict_token._value == dict_value
    assert dict_token._start_index == 0
    assert dict_token._end_index == 24
    assert dict_token._content == "key1: value1\nkey2: value2"
    assert dict_token._child_keys ==

# Generated at 2024-06-04 20:54:27.896059
```python
    key1 = ScalarToken("key1", 0, 3, "key1: value1")
    value1 = ScalarToken("value1", 6, 11, "key1: value1")
    key2 = ScalarToken("key2", 13, 16, "key2: value2")
    value2 = ScalarToken("value2", 19, 24, "key2: value2")
    dict_value = {key1: value1, key2: value2}
    dict_token = DictToken(dict_value, 0, 24, "key1: value1\nkey2: value2")

    assert dict_token._value == dict_value
    assert dict_token._start_index == 0
    assert dict_token._end_index == 24
    assert dict_token._content == "key1: value1\nkey2: value2"
    assert dict_token._child_keys ==

# Generated at 2024-06-04 20:54:32.021953
```python
    key1 = ScalarToken("key1", 0, 3, "key1: value1")
    value1 = ScalarToken("value1", 6, 11, "key1: value1")
    key2 = ScalarToken("key2", 13, 16, "key2: value2")
    value2 = ScalarToken("value2", 19, 24, "key2: value2")
    dict_value = {key1: value1, key2: value2}
    dict_token = DictToken(dict_value, 0, 24, "key1: value1\nkey2: value2")

    assert dict_token._value == dict_value
    assert dict_token._start_index == 0
    assert dict_token._end_index == 24
    assert dict_token._content == "key1: value1\nkey2: value2"
    assert dict_token._child_keys ==

# Generated at 2024-06-04 20:54:35.559372
```python
    key1 = ScalarToken("key1", 0, 3, "key1: value1")
    value1 = ScalarToken("value1", 6, 11, "key1: value1")
    key2 = ScalarToken("key2", 13, 16, "key2: value2")
    value2 = ScalarToken("value2", 19, 24, "key2: value2")
    dict_value = {key1: value1, key2: value2}
    dict_token = DictToken(dict_value, 0, 24, "key1: value1\nkey2: value2")

    assert dict_token._value == dict_value
    assert dict_token._start_index == 0
    assert dict_token._end_index == 24
    assert dict_token._content == "key1: value1\nkey2: value2"
    assert dict_token._child_keys ==

# Generated at 2024-06-04 20:54:40.737992
```python
    key1 = ScalarToken("key1", 0, 3, "key1: value1")
    value1 = ScalarToken("value1", 6, 11, "key1: value1")
    key2 = ScalarToken("key2", 13, 16, "key2: value2")
    value2 = ScalarToken("value2", 19, 24, "key2: value2")
    dict_value = {key1: value1, key2: value2}
    dict_token = DictToken(dict_value, 0, 24, "key1: value1\nkey2: value2")

    assert dict_token._value == dict_value
    assert dict_token._start_index == 0
    assert dict_token._end_index == 24
    assert dict_token._content == "key1: value1\nkey2: value2"
    assert dict_token._child_keys ==

# Generated at 2024-06-04 20:54:44.373049
```python
    key1 = ScalarToken("key1", 0, 3, "key1: value1")
    value1 = ScalarToken("value1", 6, 11, "key1: value1")
    key2 = ScalarToken("key2", 13, 16, "key2: value2")
    value2 = ScalarToken("value2", 19, 24, "key2: value2")
    dict_value = {key1: value1, key2: value2}
    dict_token = DictToken(dict_value, 0, 24, "key1: value1\nkey2: value2")

    assert dict_token._value == dict_value
    assert dict_token._start_index == 0
    assert dict_token._end_index == 24
    assert dict_token._content == "key1: value1\nkey2: value2"
    assert dict_token._child_keys ==

# Generated at 2024-06-04 20:54:48.193498
```python
    key1 = ScalarToken("key1", 0, 3, "key1: value1")
    value1 = ScalarToken("value1", 6, 11, "key1: value1")
    key2 = ScalarToken("key2", 13, 16, "key2: value2")
    value2 = ScalarToken("value2", 19, 24, "key2: value2")
    dict_value = {key1: value1, key2: value2}
    dict_token = DictToken(dict_value, 0, 24, "key1: value1\nkey2: value2")

    assert dict_token._value == dict_value
    assert dict_token._start_index == 0
    assert dict_token._end_index == 24
    assert dict_token._content == "key1: value1\nkey2: value2"
    assert dict_token._child_keys ==