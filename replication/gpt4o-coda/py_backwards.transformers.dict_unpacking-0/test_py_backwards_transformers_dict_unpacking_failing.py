# Automatically generated by Pynguin.
import py_backwards.transformers.dict_unpacking as module_0
import typed_ast._ast3 as module_1

def test_case_0():
    try:
        dict_unpacking_transformer_0 = module_0.DictUnpackingTransformer()
    except BaseException:
        pass

def test_case_1():
    try:
        module_x_var_0 = module_1.Module()
        a_s_t_0 = module_1.AST()
        dict_unpacking_transformer_0 = module_0.DictUnpackingTransformer(a_s_t_0)
        module_x_var_1 = dict_unpacking_transformer_0.visit_Module(module_x_var_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '7)\t/wR5,G!'
        dict_0 = {str_0: str_0, str_0: str_0}
        dict_1 = module_1.Dict(**dict_0)
        a_s_t_0 = module_1.AST()
        dict_unpacking_transformer_0 = module_0.DictUnpackingTransformer(a_s_t_0)
        var_0 = dict_unpacking_transformer_0.visit_Dict(dict_1)
    except BaseException:
        pass

def test_case_3():
    try:
        list_0 = []
        list_1 = [list_0]
        a_s_t_0 = module_1.AST()
        dict_unpacking_transformer_0 = module_0.DictUnpackingTransformer(a_s_t_0)
        dict_0 = module_1.Dict(*list_1)
        a_s_t_1 = module_1.AST()
        dict_unpacking_transformer_1 = module_0.DictUnpackingTransformer(a_s_t_1)
        dict_1 = {}
        module_x_var_0 = module_1.Module(*list_1, **dict_1)
        module_x_var_1 = dict_unpacking_transformer_1.visit_Module(module_x_var_0)
        module_x_var_2 = dict_unpacking_transformer_0.visit_Module(module_x_var_1)
        var_0 = dict_unpacking_transformer_1.visit_Dict(dict_0)
        module_x_var_3 = module_1.Module()
        dict_unpacking_transformer_2 = module_0.DictUnpackingTransformer(a_s_t_1)
        module_x_var_4 = dict_unpacking_transformer_2.visit_Module(module_x_var_3)
    except BaseException:
        pass