

# Generated at 2024-05-31 08:15:27.663331
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="foo {{ bar }}"') == ['a=b', 'c="foo {{ bar }}"']
    assert split_args('a=b c="foo {# bar #}"') == ['a=b', 'c="foo {# bar #}"']
    assert split_args('a=b c="foo {% bar %}"') == ['a=b', 'c="foo {% bar %}"']
    assert split_args('a=b c="foo \\"bar\\""') == ['a=b', 'c="foo \\"bar\\""']
    assert split_args('a=b c="foo\nbar"') == ['

# Generated at 2024-05-31 08:15:29.649130
```python
    assert is_quoted('"hello"') == True
    assert is_quoted("'hello'") == True
    assert is_quoted('hello') == False
    assert is_quoted('"hello') == False
    assert is_quoted('hello"') == False
    assert is_quoted("'hello") == False
    assert is_quoted("hello'") == False
    assert is_quoted('') == False
```

# Generated at 2024-05-31 08:15:32.153811
```python
    assert is_quoted('"hello"') == True
    assert is_quoted("'hello'") == True
    assert is_quoted('hello') == False
    assert is_quoted('"hello') == False
    assert is_quoted('hello"') == False
    assert is_quoted("'hello") == False
    assert is_quoted("hello'") == False
    assert is_quoted('') == False
```

# Generated at 2024-05-31 08:15:35.620071
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="foo {{ bar }}"') == ['a=b', 'c="foo {{ bar }}"']
    assert split_args('a=b c="foo {# bar #}"') == ['a=b', 'c="foo {# bar #}"']
    assert split_args('a=b c="foo {% bar %}"') == ['a=b', 'c="foo {% bar %}"']
    assert split_args('a=b c="foo \\"bar\\""') == ['a=b', 'c="foo \\"bar\\""']
    assert split_args('a=b c="foo\nbar"') == ['

# Generated at 2024-05-31 08:15:41.095377
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="{{ foo }}"') == ['a=b', 'c="{{ foo }}"']
    assert split_args('a=b c="{% if foo %}bar{% endif %}"') == ['a=b', 'c="{% if foo %}bar{% endif %}"']
    assert split_args('a=b c="{# comment #}bar"') == ['a=b', 'c="{# comment #}bar"']
    assert split_args('a=b c="foo\nbar"') == ['a=b', 'c="foo\nbar"']
    assert split_args('a=b c="foo\\ bar"')

# Generated at 2024-05-31 08:15:44.551980
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="foo {{ bar }}"') == ['a=b', 'c="foo {{ bar }}"']
    assert split_args('a=b c="foo {% if bar %}baz{% endif %}"') == ['a=b', 'c="foo {% if bar %}baz{% endif %}"']
    assert split_args('a=b c="foo {# comment #} bar"') == ['a=b', 'c="foo {# comment #} bar"']
    assert split_args('a=b c="foo \\"bar\\""') == ['a=b', 'c="foo \\"bar\\""']


# Generated at 2024-05-31 08:15:48.868225
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="foo {{ bar }}"') == ['a=b', 'c="foo {{ bar }}"']
    assert split_args('a=b c="foo {% if bar %} baz {% endif %}"') == ['a=b', 'c="foo {% if bar %} baz {% endif %}"']
    assert split_args('a=b c="foo {# comment #} bar"') == ['a=b', 'c="foo {# comment #} bar"']
    assert split_args('a=b c="foo \\"bar\\""') == ['a=b', 'c="foo \\"bar\\""']


# Generated at 2024-05-31 08:15:54.441412
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="{{ foo }}"') == ['a=b', 'c="{{ foo }}"']
    assert split_args('a=b c="{% if foo %}bar{% endif %}"') == ['a=b', 'c="{% if foo %}bar{% endif %}"']
    assert split_args('a=b c="{# comment #}bar"') == ['a=b', 'c="{# comment #}bar"']
    assert split_args('a=b c="foo\nbar"') == ['a=b', 'c="foo\nbar"']
    assert split_args('a=b c="foo\\ bar"')

# Generated at 2024-05-31 08:15:56.748504
```python
    assert unquote('"hello"') == 'hello'
    assert unquote("'hello'") == 'hello'
    assert unquote('hello') == 'hello'
    assert unquote('"hello') == '"hello'
    assert unquote('hello"') == 'hello"'
    assert unquote("'hello") == "'hello"
    assert unquote("hello'") == "hello'"
    assert unquote('""') == ''
    assert unquote("''") == ''
    assert unquote('') == ''
```

# Generated at 2024-05-31 08:15:58.458937
```python
    assert is_quoted('"hello"') == True
    assert is_quoted("'hello'") == True
    assert is_quoted('hello') == False
    assert is_quoted('"hello') == False
    assert is_quoted('hello"') == False
    assert is_quoted("'hello") == False
    assert is_quoted("hello'") == False
    assert is_quoted('') == False
```

# Generated at 2024-05-31 08:16:18.421451
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="{{ foo }}"') == ['a=b', 'c="{{ foo }}"']
    assert split_args('a=b c="{% if foo %}bar{% endif %}"') == ['a=b', 'c="{% if foo %}bar{% endif %}"']
    assert split_args('a=b c="{# comment #}bar"') == ['a=b', 'c="{# comment #}bar"']
    assert split_args('a=b c="foo\nbar"') == ['a=b', 'c="foo\nbar"']
    assert split_args('a=b c="foo\\nbar"

# Generated at 2024-05-31 08:16:23.706037
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="{{ foo }}"') == ['a=b', 'c="{{ foo }}"']
    assert split_args('a=b c="{% if foo %}bar{% endif %}"') == ['a=b', 'c="{% if foo %}bar{% endif %}"']
    assert split_args('a=b c="{# comment #}bar"') == ['a=b', 'c="{# comment #}bar"']
    assert split_args('a=b c="foo \\"bar\\""') == ['a=b', 'c="foo \\"bar\\""']
    assert split_args('a=b c="foo

# Generated at 2024-05-31 08:16:28.326109
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="{{ foo }}"') == ['a=b', 'c="{{ foo }}"']
    assert split_args('a=b c="{% if foo %}bar{% endif %}"') == ['a=b', 'c="{% if foo %}bar{% endif %}"']
    assert split_args('a=b c="{# comment #}bar"') == ['a=b', 'c="{# comment #}bar"']
    assert split_args('a=b c="foo\nbar"') == ['a=b', 'c="foo\nbar"']
    assert split_args('a=b c="foo\\ bar"')

# Generated at 2024-05-31 08:16:31.642675
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="{{ foo }}"') == ['a=b', 'c="{{ foo }}"']
    assert split_args('a=b c="{% if foo %}bar{% endif %}"') == ['a=b', 'c="{% if foo %}bar{% endif %}"']
    assert split_args('a=b c="{# comment #}bar"') == ['a=b', 'c="{# comment #}bar"']
    assert split_args('a=b c="foo\nbar"') == ['a=b', 'c="foo\nbar"']
    assert split_args('a=b c="foo\\ bar"')

# Generated at 2024-05-31 08:16:33.989503
```python
    assert is_quoted('"hello"') == True
    assert is_quoted("'hello'") == True
    assert is_quoted('hello') == False
    assert is_quoted('"hello') == False
    assert is_quoted('hello"') == False
    assert is_quoted("'hello") == False
    assert is_quoted("hello'") == False
    assert is_quoted('') == False
```

# Generated at 2024-05-31 08:16:37.771394
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="{{ foo }}"') == ['a=b', 'c="{{ foo }}"']
    assert split_args('a=b c="{% if foo %}bar{% endif %}"') == ['a=b', 'c="{% if foo %}bar{% endif %}"']
    assert split_args('a=b c="{# comment #}bar"') == ['a=b', 'c="{# comment #}bar"']
    assert split_args('a=b c="foo\nbar"') == ['a=b', 'c="foo\nbar"']
    assert split_args('a=b c="foo\\ bar"')

# Generated at 2024-05-31 08:16:43.662922
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="{{ foo }}"') == ['a=b', 'c="{{ foo }}"']
    assert split_args('a=b c="{% if foo %}bar{% endif %}"') == ['a=b', 'c="{% if foo %}bar{% endif %}"']
    assert split_args('a=b c="{# comment #}bar"') == ['a=b', 'c="{# comment #}bar"']
    assert split_args('a=b c="foo\nbar"') == ['a=b', 'c="foo\nbar"']
    assert split_args('a=b c="foo\\ bar"')

# Generated at 2024-05-31 08:16:48.040013
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="{{ foo }}"') == ['a=b', 'c="{{ foo }}"']
    assert split_args('a=b c="{% if foo %}bar{% endif %}"') == ['a=b', 'c="{% if foo %}bar{% endif %}"']
    assert split_args('a=b c="{# comment #}bar"') == ['a=b', 'c="{# comment #}bar"']
    assert split_args('a=b c="foo\nbar"') == ['a=b', 'c="foo\nbar"']
    assert split_args('a=b c="foo\\ bar"')

# Generated at 2024-05-31 08:16:52.196971
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="foo {{ bar }}"') == ['a=b', 'c="foo {{ bar }}"']
    assert split_args('a=b c="foo {% if bar %}baz{% endif %}"') == ['a=b', 'c="foo {% if bar %}baz{% endif %}"']
    assert split_args('a=b c="foo {# comment #} bar"') == ['a=b', 'c="foo {# comment #} bar"']
    assert split_args('a=b c="foo \\"bar\\""') == ['a=b', 'c="foo \\"bar\\""']


# Generated at 2024-05-31 08:16:56.834634
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="foo {{ bar }}"') == ['a=b', 'c="foo {{ bar }}"']
    assert split_args('a=b c="foo {% if bar %} baz {% endif %}"') == ['a=b', 'c="foo {% if bar %} baz {% endif %}"']
    assert split_args('a=b c="foo {# comment #} bar"') == ['a=b', 'c="foo {# comment #} bar"']
    assert split_args('a=b c="foo \\\nbar"') == ['a=b', 'c="foo bar"']
    assert split

# Generated at 2024-05-31 08:17:12.268711
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="{{ foo }}"') == ['a=b', 'c="{{ foo }}"']
    assert split_args('a=b c="{% if foo %}bar{% endif %}"') == ['a=b', 'c="{% if foo %}bar{% endif %}"']
    assert split_args('a=b c="{# comment #}bar"') == ['a=b', 'c="{# comment #}bar"']
    assert split_args('a=b c="foo \\"bar\\""') == ['a=b', 'c="foo \\"bar\\""']
    assert split_args('a=b c="foo

# Generated at 2024-05-31 08:17:17.215842
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="foo {{ bar }}"') == ['a=b', 'c="foo {{ bar }}"']
    assert split_args('a=b c="foo {% if bar %}baz{% endif %}"') == ['a=b', 'c="foo {% if bar %}baz{% endif %}"']
    assert split_args('a=b c="foo {# comment #} bar"') == ['a=b', 'c="foo {# comment #} bar"']
    assert split_args('a=b c="foo \\"bar\\""') == ['a=b', 'c="foo \\"bar\\""']


# Generated at 2024-05-31 08:17:20.781326
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="{{ foo }}"') == ['a=b', 'c="{{ foo }}"']
    assert split_args('a=b c="{% if foo %}bar{% endif %}"') == ['a=b', 'c="{% if foo %}bar{% endif %}"']
    assert split_args('a=b c="{# comment #}bar"') == ['a=b', 'c="{# comment #}bar"']
    assert split_args('a=b c="foo\nbar"') == ['a=b', 'c="foo\nbar"']
    assert split_args('a=b c="foo\\ bar"')

# Generated at 2024-05-31 08:17:25.066236
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="{{ foo }}"') == ['a=b', 'c="{{ foo }}"']
    assert split_args('a=b c="{% if foo %}bar{% endif %}"') == ['a=b', 'c="{% if foo %}bar{% endif %}"']
    assert split_args('a=b c="{# comment #}bar"') == ['a=b', 'c="{# comment #}bar"']
    assert split_args('a=b c="foo\nbar"') == ['a=b', 'c="foo\nbar"']
    assert split_args('a=b c="foo\\ bar"')

# Generated at 2024-05-31 08:17:30.364643
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="{{ foo }}"') == ['a=b', 'c="{{ foo }}"']
    assert split_args('a=b c="{% if foo %}bar{% endif %}"') == ['a=b', 'c="{% if foo %}bar{% endif %}"']
    assert split_args('a=b c="{# comment #}bar"') == ['a=b', 'c="{# comment #}bar"']
    assert split_args('a=b c="foo \\"bar\\""') == ['a=b', 'c="foo \\"bar\\""']
    assert split_args('a=b c="foo

# Generated at 2024-05-31 08:17:35.485767
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="foo {{ bar }}"') == ['a=b', 'c="foo {{ bar }}"']
    assert split_args('a=b c="foo {% if bar %} baz {% endif %}"') == ['a=b', 'c="foo {% if bar %} baz {% endif %}"']
    assert split_args('a=b c="foo {# comment #} bar"') == ['a=b', 'c="foo {# comment #} bar"']
    assert split_args('a=b c="foo \\"bar\\""') == ['a=b', 'c="foo \\"bar\\""']


# Generated at 2024-05-31 08:17:39.413254
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="{{ foo }}"') == ['a=b', 'c="{{ foo }}"']
    assert split_args('a=b c="{% if foo %}bar{% endif %}"') == ['a=b', 'c="{% if foo %}bar{% endif %}"']
    assert split_args('a=b c="{# comment #}bar"') == ['a=b', 'c="{# comment #}bar"']
    assert split_args('a=b c="foo\nbar"') == ['a=b', 'c="foo\nbar"']
    assert split_args('a=b c="foo\\ bar"')

# Generated at 2024-05-31 08:17:44.033934
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="{{ foo }}"') == ['a=b', 'c="{{ foo }}"']
    assert split_args('a=b c="{% if foo %}bar{% endif %}"') == ['a=b', 'c="{% if foo %}bar{% endif %}"']
    assert split_args('a=b c="{# comment #}bar"') == ['a=b', 'c="{# comment #}bar"']
    assert split_args('a=b c="foo\nbar"') == ['a=b', 'c="foo\nbar"']
    assert split_args('a=b c="foo\\ bar"')

# Generated at 2024-05-31 08:17:45.830500
```python
    assert is_quoted('"hello"') == True
    assert is_quoted("'hello'") == True
    assert is_quoted('hello') == False
    assert is_quoted('"hello') == False
    assert is_quoted('hello"') == False
    assert is_quoted("'hello") == False
    assert is_quoted("hello'") == False
    assert is_quoted('') == False
```

# Generated at 2024-05-31 08:17:47.947343
```python
    assert is_quoted('"hello"') == True
    assert is_quoted("'hello'") == True
    assert is_quoted('hello') == False
    assert is_quoted('"hello') == False
    assert is_quoted('hello"') == False
    assert is_quoted("'hello") == False
    assert is_quoted('hello\'') == False
    assert is_quoted('') == False
```

# Generated at 2024-05-31 08:18:09.153168
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="{{ foo }}"') == ['a=b', 'c="{{ foo }}"']
    assert split_args('a=b c="{% if foo %}bar{% endif %}"') == ['a=b', 'c="{% if foo %}bar{% endif %}"']
    assert split_args('a=b c="{# comment #}bar"') == ['a=b', 'c="{# comment #}bar"']
    assert split_args('a=b c="foo\nbar"') == ['a=b', 'c="foo\nbar"']
    assert split_args('a=b c="foo\\ bar"')

# Generated at 2024-05-31 08:18:13.197123
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="{{ foo }}"') == ['a=b', 'c="{{ foo }}"']
    assert split_args('a=b c="{% if foo %}bar{% endif %}"') == ['a=b', 'c="{% if foo %}bar{% endif %}"']
    assert split_args('a=b c="{# comment #}bar"') == ['a=b', 'c="{# comment #}bar"']
    assert split_args('a=b c="foo\nbar"') == ['a=b', 'c="foo\nbar"']
    assert split_args('a=b c="foo\\ bar"')

# Generated at 2024-05-31 08:18:18.637550
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="{{ foo }}"') == ['a=b', 'c="{{ foo }}"']
    assert split_args('a=b c="{% if foo %}bar{% endif %}"') == ['a=b', 'c="{% if foo %}bar{% endif %}"']
    assert split_args('a=b c="{# comment #}bar"') == ['a=b', 'c="{# comment #}bar"']
    assert split_args('a=b c="foo\nbar"') == ['a=b', 'c="foo\nbar"']
    assert split_args('a=b c="foo\\ bar"')

# Generated at 2024-05-31 08:18:22.107185
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="{{ foo }}"') == ['a=b', 'c="{{ foo }}"']
    assert split_args('a=b c="{% if foo %}bar{% endif %}"') == ['a=b', 'c="{% if foo %}bar{% endif %}"']
    assert split_args('a=b c="{# comment #}bar"') == ['a=b', 'c="{# comment #}bar"']
    assert split_args('a=b c="foo\nbar"') == ['a=b', 'c="foo\nbar"']
    assert split_args('a=b c="foo\\ bar"')

# Generated at 2024-05-31 08:18:26.305619
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="{{ foo }}"') == ['a=b', 'c="{{ foo }}"']
    assert split_args('a=b c="{% if foo %}bar{% endif %}"') == ['a=b', 'c="{% if foo %}bar{% endif %}"']
    assert split_args('a=b c="{# comment #}bar"') == ['a=b', 'c="{# comment #}bar"']
    assert split_args('a=b c="foo \\"bar\\""') == ['a=b', 'c="foo \\"bar\\""']
    assert split_args('a=b c="foo

# Generated at 2024-05-31 08:18:31.374125
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="{{ foo }}"') == ['a=b', 'c="{{ foo }}"']
    assert split_args('a=b c="{% if foo %}bar{% endif %}"') == ['a=b', 'c="{% if foo %}bar{% endif %}"']
    assert split_args('a=b c="{# comment #}bar"') == ['a=b', 'c="{# comment #}bar"']
    assert split_args('a=b c="foo\nbar"') == ['a=b', 'c="foo\nbar"']
    assert split_args('a=b c="foo\\ bar"')

# Generated at 2024-05-31 08:18:37.338339
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="foo {{ bar }}"') == ['a=b', 'c="foo {{ bar }}"']
    assert split_args('a=b c="foo {# bar #}"') == ['a=b', 'c="foo {# bar #}"']
    assert split_args('a=b c="foo {% bar %}"') == ['a=b', 'c="foo {% bar %}"']
    assert split_args('a=b c="foo \\"bar\\""') == ['a=b', 'c="foo \\"bar\\""']
    assert split_args('a=b c="foo \\\\ bar"')

# Generated at 2024-05-31 08:18:41.219468
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="{{ foo }}"') == ['a=b', 'c="{{ foo }}"']
    assert split_args('a=b c="{% if foo %}bar{% endif %}"') == ['a=b', 'c="{% if foo %}bar{% endif %}"']
    assert split_args('a=b c="{# comment #}bar"') == ['a=b', 'c="{# comment #}bar"']
    assert split_args('a=b c="foo\nbar"') == ['a=b', 'c="foo\nbar"']
    assert split_args('a=b c="foo\\ bar"')

# Generated at 2024-05-31 08:18:45.037472
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="foo {{ bar }}"') == ['a=b', 'c="foo {{ bar }}"']
    assert split_args('a=b c="foo {% if bar %} baz {% endif %}"') == ['a=b', 'c="foo {% if bar %} baz {% endif %}"']
    assert split_args('a=b c="foo {# comment #} bar"') == ['a=b', 'c="foo {# comment #} bar"']
    assert split_args('a=b c="foo \\\nbar"') == ['a=b', 'c="foo bar"']
    assert split

# Generated at 2024-05-31 08:18:48.934104
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="{{ foo }}"') == ['a=b', 'c="{{ foo }}"']
    assert split_args('a=b c="{% if foo %}bar{% endif %}"') == ['a=b', 'c="{% if foo %}bar{% endif %}"']
    assert split_args('a=b c="{# comment #}bar"') == ['a=b', 'c="{# comment #}bar"']
    assert split_args('a=b c="foo\nbar"') == ['a=b', 'c="foo\nbar"']
    assert split_args('a=b c="foo\\ bar"')

# Generated at 2024-05-31 08:19:04.701812
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="{{ foo }}"') == ['a=b', 'c="{{ foo }}"']
    assert split_args('a=b c="{% if foo %}bar{% endif %}"') == ['a=b', 'c="{% if foo %}bar{% endif %}"']
    assert split_args('a=b c="{# comment #}bar"') == ['a=b', 'c="{# comment #}bar"']
    assert split_args('a=b c="foo\nbar"') == ['a=b', 'c="foo\nbar"']
    assert split_args('a=b c="foo\\ bar"')

# Generated at 2024-05-31 08:19:09.781503
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="{{ foo }}"') == ['a=b', 'c="{{ foo }}"']
    assert split_args('a=b c="{% if foo %}bar{% endif %}"') == ['a=b', 'c="{% if foo %}bar{% endif %}"']
    assert split_args('a=b c="{# comment #}bar"') == ['a=b', 'c="{# comment #}bar"']
    assert split_args('a=b c="foo\nbar"') == ['a=b', 'c="foo\nbar"']
    assert split_args('a=b c="foo\\ bar"')

# Generated at 2024-05-31 08:19:14.792965
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="foo {{ bar }}"') == ['a=b', 'c="foo {{ bar }}"']
    assert split_args('a=b c="foo {# bar #}"') == ['a=b', 'c="foo {# bar #}"']
    assert split_args('a=b c="foo {% bar %}"') == ['a=b', 'c="foo {% bar %}"']
    assert split_args('a=b c="foo \\"bar\\""') == ['a=b', 'c="foo \\"bar\\""']
    assert split_args('a=b c="foo \\\nbar"')

# Generated at 2024-05-31 08:19:21.602013
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="foo {{ bar }}"') == ['a=b', 'c="foo {{ bar }}"']
    assert split_args('a=b c="foo {% if bar %} baz {% endif %}"') == ['a=b', 'c="foo {% if bar %} baz {% endif %}"']
    assert split_args('a=b c="foo {# comment #} bar"') == ['a=b', 'c="foo {# comment #} bar"']
    assert split_args('a=b c="foo \\"bar\\""') == ['a=b', 'c="foo \\"bar\\""']


# Generated at 2024-05-31 08:19:25.583126
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="foo {{ bar }}"') == ['a=b', 'c="foo {{ bar }}"']
    assert split_args('a=b c="foo {% if bar %} baz {% endif %}"') == ['a=b', 'c="foo {% if bar %} baz {% endif %}"']
    assert split_args('a=b c="foo {# comment #} bar"') == ['a=b', 'c="foo {# comment #} bar"']
    assert split_args('a=b c="foo \\"bar\\""') == ['a=b', 'c="foo \\"bar\\""']


# Generated at 2024-05-31 08:19:30.094323
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="foo {{ bar }}"') == ['a=b', 'c="foo {{ bar }}"']
    assert split_args('a=b c="foo {% if bar %} baz {% endif %}"') == ['a=b', 'c="foo {% if bar %} baz {% endif %}"']
    assert split_args('a=b c="foo {# comment #} bar"') == ['a=b', 'c="foo {# comment #} bar"']
    assert split_args('a=b c="foo \\"bar\\""') == ['a=b', 'c="foo \\"bar\\""']


# Generated at 2024-05-31 08:19:33.661323
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="{{ foo }}"') == ['a=b', 'c="{{ foo }}"']
    assert split_args('a=b c="{% if foo %}bar{% endif %}"') == ['a=b', 'c="{% if foo %}bar{% endif %}"']
    assert split_args('a=b c="{# comment #}bar"') == ['a=b', 'c="{# comment #}bar"']
    assert split_args('a=b c="foo\nbar"') == ['a=b', 'c="foo\nbar"']
    assert split_args('a=b c="foo\\ bar"')

# Generated at 2024-05-31 08:19:38.027291
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="{{ foo }}"') == ['a=b', 'c="{{ foo }}"']
    assert split_args('a=b c="{% if foo %}bar{% endif %}"') == ['a=b', 'c="{% if foo %}bar{% endif %}"']
    assert split_args('a=b c="{# comment #}bar"') == ['a=b', 'c="{# comment #}bar"']
    assert split_args('a=b c="foo\nbar"') == ['a=b', 'c="foo\nbar"']
    assert split_args('a=b c="foo\\ bar"')

# Generated at 2024-05-31 08:19:41.625340
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="{{ foo }}"') == ['a=b', 'c="{{ foo }}"']
    assert split_args('a=b c="{% if foo %}bar{% endif %}"') == ['a=b', 'c="{% if foo %}bar{% endif %}"']
    assert split_args('a=b c="{# comment #}bar"') == ['a=b', 'c="{# comment #}bar"']
    assert split_args('a=b c="foo \\"bar\\""') == ['a=b', 'c="foo \\"bar\\""']
    assert split_args('a=b c="foo

# Generated at 2024-05-31 08:19:45.568258
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="foo {{ bar }}"') == ['a=b', 'c="foo {{ bar }}"']
    assert split_args('a=b c="foo {% if bar %}baz{% endif %}"') == ['a=b', 'c="foo {% if bar %}baz{% endif %}"']
    assert split_args('a=b c="foo {# comment #} bar"') == ['a=b', 'c="foo {# comment #} bar"']
    assert split_args('a=b c="foo \\"bar\\""') == ['a=b', 'c="foo \\"bar\\""']


# Generated at 2024-05-31 08:20:03.170465
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="foo {{ bar }}"') == ['a=b', 'c="foo {{ bar }}"']
    assert split_args('a=b c="foo {% if bar %} baz {% endif %}"') == ['a=b', 'c="foo {% if bar %} baz {% endif %}"']
    assert split_args('a=b c="foo {# comment #} bar"') == ['a=b', 'c="foo {# comment #} bar"']
    assert split_args('a=b c="foo \\"bar\\""') == ['a=b', 'c="foo \\"bar\\""']


# Generated at 2024-05-31 08:20:11.421926
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="{{ foo }}"') == ['a=b', 'c="{{ foo }}"']
    assert split_args('a=b c="{% if foo %}bar{% endif %}"') == ['a=b', 'c="{% if foo %}bar{% endif %}"']
    assert split_args('a=b c="{# comment #}bar"') == ['a=b', 'c="{# comment #}bar"']
    assert split_args('a=b c="foo\nbar"') == ['a=b', 'c="foo\nbar"']
    assert split_args('a=b c="foo\\ bar"')

# Generated at 2024-05-31 08:20:15.495002
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="{{ foo }}"') == ['a=b', 'c="{{ foo }}"']
    assert split_args('a=b c="{% if foo %}bar{% endif %}"') == ['a=b', 'c="{% if foo %}bar{% endif %}"']
    assert split_args('a=b c="{# comment #}bar"') == ['a=b', 'c="{# comment #}bar"']
    assert split_args('a=b c="foo\nbar"') == ['a=b', 'c="foo\nbar"']
    assert split_args('a=b c="foo\\ bar"')

# Generated at 2024-05-31 08:20:19.199732
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="foo {{ bar }}"') == ['a=b', 'c="foo {{ bar }}"']
    assert split_args('a=b c="foo {# bar #}"') == ['a=b', 'c="foo {# bar #}"']
    assert split_args('a=b c="foo {% bar %}"') == ['a=b', 'c="foo {% bar %}"']
    assert split_args('a=b c="foo \\"bar\\""') == ['a=b', 'c="foo \\"bar\\""']
    assert split_args('a=b c="foo\nbar"') == ['

# Generated at 2024-05-31 08:20:22.758070
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="{{ foo }}"') == ['a=b', 'c="{{ foo }}"']
    assert split_args('a=b c="{% if foo %}bar{% endif %}"') == ['a=b', 'c="{% if foo %}bar{% endif %}"']
    assert split_args('a=b c="{# comment #}bar"') == ['a=b', 'c="{# comment #}bar"']
    assert split_args('a=b c="foo \\"bar\\""') == ['a=b', 'c="foo \\"bar\\""']
    assert split_args('a=b c="foo

# Generated at 2024-05-31 08:20:26.735934
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="{{ foo }}"') == ['a=b', 'c="{{ foo }}"']
    assert split_args('a=b c="{% if foo %}bar{% endif %}"') == ['a=b', 'c="{% if foo %}bar{% endif %}"']
    assert split_args('a=b c="{# comment #}bar"') == ['a=b', 'c="{# comment #}bar"']
    assert split_args('a=b c="foo \\"bar\\""') == ['a=b', 'c="foo \\"bar\\""']
    assert split_args('a=b c="foo

# Generated at 2024-05-31 08:20:30.377070
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="foo {{ bar }}"') == ['a=b', 'c="foo {{ bar }}"']
    assert split_args('a=b c="foo {% if bar %}baz{% endif %}"') == ['a=b', 'c="foo {% if bar %}baz{% endif %}"']
    assert split_args('a=b c="foo {# comment #} bar"') == ['a=b', 'c="foo {# comment #} bar"']
    assert split_args('a=b c="foo \\"bar\\""') == ['a=b', 'c="foo \\"bar\\""']


# Generated at 2024-05-31 08:20:34.077982
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="{{ foo }}"') == ['a=b', 'c="{{ foo }}"']
    assert split_args('a=b c="{% if foo %}bar{% endif %}"') == ['a=b', 'c="{% if foo %}bar{% endif %}"']
    assert split_args('a=b c="{# comment #}bar"') == ['a=b', 'c="{# comment #}bar"']
    assert split_args('a=b c="foo\nbar"') == ['a=b', 'c="foo\nbar"']
    assert split_args('a=b c="foo\\nbar"

# Generated at 2024-05-31 08:20:38.237649
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="{{ foo }}"') == ['a=b', 'c="{{ foo }}"']
    assert split_args('a=b c="{% if foo %}bar{% endif %}"') == ['a=b', 'c="{% if foo %}bar{% endif %}"']
    assert split_args('a=b c="{# comment #}bar"') == ['a=b', 'c="{# comment #}bar"']
    assert split_args('a=b c="foo\nbar"') == ['a=b', 'c="foo\nbar"']
    assert split_args('a=b c="foo\\ bar"')

# Generated at 2024-05-31 08:20:42.536766
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="foo {{ bar }}"') == ['a=b', 'c="foo {{ bar }}"']
    assert split_args('a=b c="foo {% if bar %}baz{% endif %}"') == ['a=b', 'c="foo {% if bar %}baz{% endif %}"']
    assert split_args('a=b c="foo {# comment #} bar"') == ['a=b', 'c="foo {# comment #} bar"']
    assert split_args('a=b c="foo \\"bar\\""') == ['a=b', 'c="foo \\"bar\\""']


# Generated at 2024-05-31 08:21:00.301838
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="{{ foo }}"') == ['a=b', 'c="{{ foo }}"']
    assert split_args('a=b c="{% if foo %}bar{% endif %}"') == ['a=b', 'c="{% if foo %}bar{% endif %}"']
    assert split_args('a=b c="{# comment #}bar"') == ['a=b', 'c="{# comment #}bar"']
    assert split_args('a=b c="foo\nbar"') == ['a=b', 'c="foo\nbar"']
    assert split_args('a=b c="foo\\ bar"')

# Generated at 2024-05-31 08:21:04.660988
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="{{ foo }}"') == ['a=b', 'c="{{ foo }}"']
    assert split_args('a=b c="{% if foo %}bar{% endif %}"') == ['a=b', 'c="{% if foo %}bar{% endif %}"']
    assert split_args('a=b c="{# comment #}bar"') == ['a=b', 'c="{# comment #}bar"']
    assert split_args('a=b c="foo\nbar"') == ['a=b', 'c="foo\nbar"']
    assert split_args('a=b c="foo\\nbar"

# Generated at 2024-05-31 08:21:08.426517
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="{{ foo }}"') == ['a=b', 'c="{{ foo }}"']
    assert split_args('a=b c="{% if foo %}bar{% endif %}"') == ['a=b', 'c="{% if foo %}bar{% endif %}"']
    assert split_args('a=b c="{# comment #}bar"') == ['a=b', 'c="{# comment #}bar"']
    assert split_args('a=b c="foo\nbar"') == ['a=b', 'c="foo\nbar"']
    assert split_args('a=b c="foo\\ bar"')

# Generated at 2024-05-31 08:21:14.477600
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="foo {{ bar }}"') == ['a=b', 'c="foo {{ bar }}"']
    assert split_args('a=b c="foo {# bar #}"') == ['a=b', 'c="foo {# bar #}"']
    assert split_args('a=b c="foo {% bar %}"') == ['a=b', 'c="foo {% bar %}"']
    assert split_args('a=b c="foo \\"bar\\""') == ['a=b', 'c="foo \\"bar\\""']
    assert split_args('a=b c="foo \\\'bar\\\'

# Generated at 2024-05-31 08:21:19.021592
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="{{ foo }}"') == ['a=b', 'c="{{ foo }}"']
    assert split_args('a=b c="{% if foo %}bar{% endif %}"') == ['a=b', 'c="{% if foo %}bar{% endif %}"']
    assert split_args('a=b c="{# comment #}bar"') == ['a=b', 'c="{# comment #}bar"']
    assert split_args('a=b c="foo\nbar"') == ['a=b', 'c="foo\nbar"']
    assert split_args('a=b c="foo\\ bar"')

# Generated at 2024-05-31 08:21:23.394297
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="{{ foo }}"') == ['a=b', 'c="{{ foo }}"']
    assert split_args('a=b c="{% if foo %}bar{% endif %}"') == ['a=b', 'c="{% if foo %}bar{% endif %}"']
    assert split_args('a=b c="{# comment #}bar"') == ['a=b', 'c="{# comment #}bar"']
    assert split_args('a=b c="foo\nbar"') == ['a=b', 'c="foo\nbar"']
    assert split_args('a=b c="foo\\ bar"')

# Generated at 2024-05-31 08:21:29.360212
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="foo {{ bar }}"') == ['a=b', 'c="foo {{ bar }}"']
    assert split_args('a=b c="foo {# bar #}"') == ['a=b', 'c="foo {# bar #}"']
    assert split_args('a=b c="foo {% bar %}"') == ['a=b', 'c="foo {% bar %}"']
    assert split_args('a=b c="foo \\"bar\\""') == ['a=b', 'c="foo \\"bar\\""']
    assert split_args('a=b c="foo \\\nbar"')

# Generated at 2024-05-31 08:21:34.416460
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="{{ foo }}"') == ['a=b', 'c="{{ foo }}"']
    assert split_args('a=b c="{% if foo %}bar{% endif %}"') == ['a=b', 'c="{% if foo %}bar{% endif %}"']
    assert split_args('a=b c="{# comment #}bar"') == ['a=b', 'c="{# comment #}bar"']
    assert split_args('a=b c="foo \\"bar\\""') == ['a=b', 'c="foo \\"bar\\""']
    assert split_args('a=b c="foo

# Generated at 2024-05-31 08:21:38.976969
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="{{ foo }}"') == ['a=b', 'c="{{ foo }}"']
    assert split_args('a=b c="{% if foo %}bar{% endif %}"') == ['a=b', 'c="{% if foo %}bar{% endif %}"']
    assert split_args('a=b c="{# comment #}bar"') == ['a=b', 'c="{# comment #}bar"']
    assert split_args('a=b c="foo\nbar"') == ['a=b', 'c="foo\nbar"']
    assert split_args('a=b c="foo\\ bar"')

# Generated at 2024-05-31 08:21:43.222714
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="foo {{ bar }}"') == ['a=b', 'c="foo {{ bar }}"']
    assert split_args('a=b c="foo {# bar #}"') == ['a=b', 'c="foo {# bar #}"']
    assert split_args('a=b c="foo {% bar %}"') == ['a=b', 'c="foo {% bar %}"']
    assert split_args('a=b c="foo \\"bar\\""') == ['a=b', 'c="foo \\"bar\\""']
    assert split_args('a=b c="foo \\\\ bar"')

# Generated at 2024-05-31 08:22:00.974542
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="foo {{ bar }}"') == ['a=b', 'c="foo {{ bar }}"']
    assert split_args('a=b c="foo {# bar #}"') == ['a=b', 'c="foo {# bar #}"']
    assert split_args('a=b c="foo {% bar %}"') == ['a=b', 'c="foo {% bar %}"']
    assert split_args('a=b c="foo \\"bar\\""') == ['a=b', 'c="foo \\"bar\\""']
    assert split_args('a=b c="foo\nbar"') == ['

# Generated at 2024-05-31 08:22:05.278618
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="{{ foo }}"') == ['a=b', 'c="{{ foo }}"']
    assert split_args('a=b c="{% if foo %}bar{% endif %}"') == ['a=b', 'c="{% if foo %}bar{% endif %}"']
    assert split_args('a=b c="{# comment #}bar"') == ['a=b', 'c="{# comment #}bar"']
    assert split_args('a=b c="foo\nbar"') == ['a=b', 'c="foo\nbar"']
    assert split_args('a=b c="foo\\ bar"')

# Generated at 2024-05-31 08:22:09.726164
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="{{ foo }}"') == ['a=b', 'c="{{ foo }}"']
    assert split_args('a=b c="{% if foo %}bar{% endif %}"') == ['a=b', 'c="{% if foo %}bar{% endif %}"']
    assert split_args('a=b c="{# comment #}bar"') == ['a=b', 'c="{# comment #}bar"']
    assert split_args('a=b c="foo \\"bar\\""') == ['a=b', 'c="foo \\"bar\\""']
    assert split_args('a=b c="foo

# Generated at 2024-05-31 08:22:14.989616
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="{{ foo }}"') == ['a=b', 'c="{{ foo }}"']
    assert split_args('a=b c="{% if foo %}bar{% endif %}"') == ['a=b', 'c="{% if foo %}bar{% endif %}"']
    assert split_args('a=b c="{# comment #}bar"') == ['a=b', 'c="{# comment #}bar"']
    assert split_args('a=b c="foo\nbar"') == ['a=b', 'c="foo\nbar"']
    assert split_args('a=b c="foo\\nbar"

# Generated at 2024-05-31 08:22:19.853214
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="{{ foo }}"') == ['a=b', 'c="{{ foo }}"']
    assert split_args('a=b c="{% if foo %}bar{% endif %}"') == ['a=b', 'c="{% if foo %}bar{% endif %}"']
    assert split_args('a=b c="{# comment #}bar"') == ['a=b', 'c="{# comment #}bar"']
    assert split_args('a=b c="foo\nbar"') == ['a=b', 'c="foo\nbar"']
    assert split_args('a=b c="foo\\ bar"')

# Generated at 2024-05-31 08:22:24.961187
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="foo {{ bar }}"') == ['a=b', 'c="foo {{ bar }}"']
    assert split_args('a=b c="foo {% if bar %}baz{% endif %}"') == ['a=b', 'c="foo {% if bar %}baz{% endif %}"']
    assert split_args('a=b c="foo {# comment #} bar"') == ['a=b', 'c="foo {# comment #} bar"']
    assert split_args('a=b c="foo \\"bar\\""') == ['a=b', 'c="foo \\"bar\\""']


# Generated at 2024-05-31 08:22:31.013076
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="foo {{ bar }}"') == ['a=b', 'c="foo {{ bar }}"']
    assert split_args('a=b c="foo {% if bar %}baz{% endif %}"') == ['a=b', 'c="foo {% if bar %}baz{% endif %}"']
    assert split_args('a=b c="foo {# comment #} bar"') == ['a=b', 'c="foo {# comment #} bar"']
    assert split_args('a=b c="foo \\"bar\\""') == ['a=b', 'c="foo \\"bar\\""']


# Generated at 2024-05-31 08:22:35.075431
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="foo {{ bar }}"') == ['a=b', 'c="foo {{ bar }}"']
    assert split_args('a=b c="foo {# bar #}"') == ['a=b', 'c="foo {# bar #}"']
    assert split_args('a=b c="foo {% bar %}"') == ['a=b', 'c="foo {% bar %}"']
    assert split_args('a=b c="foo \\"bar\\""') == ['a=b', 'c="foo \\"bar\\""']
    assert split_args('a=b c="foo \\\nbar"')

# Generated at 2024-05-31 08:22:38.818296
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="{{ foo }}"') == ['a=b', 'c="{{ foo }}"']
    assert split_args('a=b c="{% if foo %}bar{% endif %}"') == ['a=b', 'c="{% if foo %}bar{% endif %}"']
    assert split_args('a=b c="{# comment #}bar"') == ['a=b', 'c="{# comment #}bar"']
    assert split_args('a=b c="foo\nbar"') == ['a=b', 'c="foo\nbar"']
    assert split_args('a=b c="foo\\ bar"')

# Generated at 2024-05-31 08:22:44.251960
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="{{ foo }}"') == ['a=b', 'c="{{ foo }}"']
    assert split_args('a=b c="{% if foo %}bar{% endif %}"') == ['a=b', 'c="{% if foo %}bar{% endif %}"']
    assert split_args('a=b c="{# comment #}bar"') == ['a=b', 'c="{# comment #}bar"']
    assert split_args('a=b c="foo\nbar"') == ['a=b', 'c="foo\nbar"']
    assert split_args('a=b c="foo\\ bar"')

# Generated at 2024-05-31 08:23:04.534434
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="{{ foo }}"') == ['a=b', 'c="{{ foo }}"']
    assert split_args('a=b c="{% if foo %}bar{% endif %}"') == ['a=b', 'c="{% if foo %}bar{% endif %}"']
    assert split_args('a=b c="{# comment #}bar"') == ['a=b', 'c="{# comment #}bar"']
    assert split_args('a=b c="foo\nbar"') == ['a=b', 'c="foo\nbar"']
    assert split_args('a=b c="foo\\ bar"')

# Generated at 2024-05-31 08:23:09.041245
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="{{ foo }}"') == ['a=b', 'c="{{ foo }}"']
    assert split_args('a=b c="{% if foo %}bar{% endif %}"') == ['a=b', 'c="{% if foo %}bar{% endif %}"']
    assert split_args('a=b c="{# comment #}bar"') == ['a=b', 'c="{# comment #}bar"']
    assert split_args('a=b c="foo\nbar"') == ['a=b', 'c="foo\nbar"']
    assert split_args('a=b c="foo\\ bar"')

# Generated at 2024-05-31 08:23:13.245152
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="{{ foo }}"') == ['a=b', 'c="{{ foo }}"']
    assert split_args('a=b c="{% if foo %}bar{% endif %}"') == ['a=b', 'c="{% if foo %}bar{% endif %}"']
    assert split_args('a=b c="{# comment #}bar"') == ['a=b', 'c="{# comment #}bar"']
    assert split_args('a=b c="foo\nbar"') == ['a=b', 'c="foo\nbar"']
    assert split_args('a=b c="foo\\ bar"')

# Generated at 2024-05-31 08:23:16.813205
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="{{ foo }}"') == ['a=b', 'c="{{ foo }}"']
    assert split_args('a=b c="{% if foo %}bar{% endif %}"') == ['a=b', 'c="{% if foo %}bar{% endif %}"']
    assert split_args('a=b c="{# comment #}bar"') == ['a=b', 'c="{# comment #}bar"']
    assert split_args('a=b c="foo\nbar"') == ['a=b', 'c="foo\nbar"']
    assert split_args('a=b c="foo\\ bar"')

# Generated at 2024-05-31 08:23:20.679646
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="foo {{ bar }}"') == ['a=b', 'c="foo {{ bar }}"']
    assert split_args('a=b c="foo {% if bar %} baz {% endif %}"') == ['a=b', 'c="foo {% if bar %} baz {% endif %}"']
    assert split_args('a=b c="foo {# comment #} bar"') == ['a=b', 'c="foo {# comment #} bar"']
    assert split_args('a=b c="foo \\\nbar"') == ['a=b', 'c="foo bar"']
    assert split

# Generated at 2024-05-31 08:23:24.614792
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="{{ foo }}"') == ['a=b', 'c="{{ foo }}"']
    assert split_args('a=b c="{% if foo %}bar{% endif %}"') == ['a=b', 'c="{% if foo %}bar{% endif %}"']
    assert split_args('a=b c="{# comment #}bar"') == ['a=b', 'c="{# comment #}bar"']
    assert split_args('a=b c="foo \\"bar\\""') == ['a=b', 'c="foo \\"bar\\""']
    assert split_args('a=b c="foo

# Generated at 2024-05-31 08:23:28.385676
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="foo {{ bar }}"') == ['a=b', 'c="foo {{ bar }}"']
    assert split_args('a=b c="foo {% if bar %}baz{% endif %}"') == ['a=b', 'c="foo {% if bar %}baz{% endif %}"']
    assert split_args('a=b c="foo {# comment #} bar"') == ['a=b', 'c="foo {# comment #} bar"']
    assert split_args('a=b c="foo \\"bar\\""') == ['a=b', 'c="foo \\"bar\\""']


# Generated at 2024-05-31 08:23:32.766161
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="{{ foo }}"') == ['a=b', 'c="{{ foo }}"']
    assert split_args('a=b c="{% if foo %}bar{% endif %}"') == ['a=b', 'c="{% if foo %}bar{% endif %}"']
    assert split_args('a=b c="{# comment #}bar"') == ['a=b', 'c="{# comment #}bar"']
    assert split_args('a=b c="foo\nbar"') == ['a=b', 'c="foo\nbar"']
    assert split_args('a=b c="foo\\ bar"')

# Generated at 2024-05-31 08:23:36.374026
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="foo {{ bar }}"') == ['a=b', 'c="foo {{ bar }}"']
    assert split_args('a=b c="foo {# bar #}"') == ['a=b', 'c="foo {# bar #}"']
    assert split_args('a=b c="foo {% bar %}"') == ['a=b', 'c="foo {% bar %}"']
    assert split_args('a=b c="foo \\"bar\\""') == ['a=b', 'c="foo \\"bar\\""']
    assert split_args('a=b c="foo\nbar"') == ['

# Generated at 2024-05-31 08:23:41.334955
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="{{ foo }}"') == ['a=b', 'c="{{ foo }}"']
    assert split_args('a=b c="{% if foo %}bar{% endif %}"') == ['a=b', 'c="{% if foo %}bar{% endif %}"']
    assert split_args('a=b c="{# comment #}bar"') == ['a=b', 'c="{# comment #}bar"']
    assert split_args('a=b c="foo\nbar"') == ['a=b', 'c="foo\nbar"']
    assert split_args('a=b c="foo\\ bar"')

# Generated at 2024-05-31 08:23:58.808933
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="{{ foo }}"') == ['a=b', 'c="{{ foo }}"']
    assert split_args('a=b c="{% if foo %}bar{% endif %}"') == ['a=b', 'c="{% if foo %}bar{% endif %}"']
    assert split_args('a=b c="{# comment #}bar"') == ['a=b', 'c="{# comment #}bar"']
    assert split_args('a=b c="foo\nbar"') == ['a=b', 'c="foo\nbar"']
    assert split_args('a=b c="foo\\ bar"')

# Generated at 2024-05-31 08:24:03.147547
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="foo {{ bar }}"') == ['a=b', 'c="foo {{ bar }}"']
    assert split_args('a=b c="foo {% if bar %}baz{% endif %}"') == ['a=b', 'c="foo {% if bar %}baz{% endif %}"']
    assert split_args('a=b c="foo {# comment #} bar"') == ['a=b', 'c="foo {# comment #} bar"']
    assert split_args('a=b c="foo \\"bar\\""') == ['a=b', 'c="foo \\"bar\\""']


# Generated at 2024-05-31 08:24:07.310258
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="foo {{ bar }}"') == ['a=b', 'c="foo {{ bar }}"']
    assert split_args('a=b c="foo {% if bar %} baz {% endif %}"') == ['a=b', 'c="foo {% if bar %} baz {% endif %}"']
    assert split_args('a=b c="foo {# comment #} bar"') == ['a=b', 'c="foo {# comment #} bar"']
    assert split_args('a=b c="foo \\"bar\\""') == ['a=b', 'c="foo \\"bar\\""']


# Generated at 2024-05-31 08:24:11.867514
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="foo {{ bar }}"') == ['a=b', 'c="foo {{ bar }}"']
    assert split_args('a=b c="foo {# bar #}"') == ['a=b', 'c="foo {# bar #}"']
    assert split_args('a=b c="foo {% bar %}"') == ['a=b', 'c="foo {% bar %}"']
    assert split_args('a=b c="foo \\"bar\\""') == ['a=b', 'c="foo \\"bar\\""']
    assert split_args('a=b c="foo \\\\ bar"')

# Generated at 2024-05-31 08:24:16.237443
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="{{ foo }}"') == ['a=b', 'c="{{ foo }}"']
    assert split_args('a=b c="{% if foo %}bar{% endif %}"') == ['a=b', 'c="{% if foo %}bar{% endif %}"']
    assert split_args('a=b c="{# comment #}bar"') == ['a=b', 'c="{# comment #}bar"']
    assert split_args('a=b c="foo\nbar"') == ['a=b', 'c="foo\nbar"']
    assert split_args('a=b c="foo\\ bar"')

# Generated at 2024-05-31 08:24:19.813660
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="{{ foo }}"') == ['a=b', 'c="{{ foo }}"']
    assert split_args('a=b c="{% if foo %}bar{% endif %}"') == ['a=b', 'c="{% if foo %}bar{% endif %}"']
    assert split_args('a=b c="{# comment #}bar"') == ['a=b', 'c="{# comment #}bar"']
    assert split_args('a=b c="foo\nbar"') == ['a=b', 'c="foo\nbar"']
    assert split_args('a=b c="foo\\ bar"')

# Generated at 2024-05-31 08:24:24.068659
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="{{ foo }}"') == ['a=b', 'c="{{ foo }}"']
    assert split_args('a=b c="{% if foo %}bar{% endif %}"') == ['a=b', 'c="{% if foo %}bar{% endif %}"']
    assert split_args('a=b c="{# comment #}bar"') == ['a=b', 'c="{# comment #}bar"']
    assert split_args('a=b c="foo\nbar"') == ['a=b', 'c="foo\nbar"']
    assert split_args('a=b c="foo\\nbar"

# Generated at 2024-05-31 08:24:28.282497
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="foo {{ bar }}"') == ['a=b', 'c="foo {{ bar }}"']
    assert split_args('a=b c="foo {% if bar %} baz {% endif %}"') == ['a=b', 'c="foo {% if bar %} baz {% endif %}"']
    assert split_args('a=b c="foo {# comment #} bar"') == ['a=b', 'c="foo {# comment #} bar"']
    assert split_args('a=b c="foo \\"bar\\""') == ['a=b', 'c="foo \\"bar\\""']


# Generated at 2024-05-31 08:24:32.328130
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="{{ foo }}"') == ['a=b', 'c="{{ foo }}"']
    assert split_args('a=b c="{% if foo %}bar{% endif %}"') == ['a=b', 'c="{% if foo %}bar{% endif %}"']
    assert split_args('a=b c="{# comment #}bar"') == ['a=b', 'c="{# comment #}bar"']
    assert split_args('a=b c="foo\nbar"') == ['a=b', 'c="foo\nbar"']
    assert split_args('a=b c="foo\\ bar"')

# Generated at 2024-05-31 08:24:37.277227
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="{{ foo }}"') == ['a=b', 'c="{{ foo }}"']
    assert split_args('a=b c="{% if foo %}bar{% endif %}"') == ['a=b', 'c="{% if foo %}bar{% endif %}"']
    assert split_args('a=b c="{# comment #}bar"') == ['a=b', 'c="{# comment #}bar"']
    assert split_args('a=b c="foo \\"bar\\""') == ['a=b', 'c="foo \\"bar\\""']
    assert split_args('a=b c="foo

# Generated at 2024-05-31 08:24:54.683562
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="{{ foo }}"') == ['a=b', 'c="{{ foo }}"']
    assert split_args('a=b c="{% if foo %}bar{% endif %}"') == ['a=b', 'c="{% if foo %}bar{% endif %}"']
    assert split_args('a=b c="{# comment #}bar"') == ['a=b', 'c="{# comment #}bar"']
    assert split_args('a=b c="foo\nbar"') == ['a=b', 'c="foo\nbar"']
    assert split_args('a=b c="foo\\ bar"')

# Generated at 2024-05-31 08:24:59.022182
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="{{ foo }}"') == ['a=b', 'c="{{ foo }}"']
    assert split_args('a=b c="{% if foo %}bar{% endif %}"') == ['a=b', 'c="{% if foo %}bar{% endif %}"']
    assert split_args('a=b c="{# comment #}bar"') == ['a=b', 'c="{# comment #}bar"']
    assert split_args('a=b c="foo\nbar"') == ['a=b', 'c="foo\nbar"']
    assert split_args('a=b c="foo\\nbar"

# Generated at 2024-05-31 08:25:03.165382
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="{{ foo }}"') == ['a=b', 'c="{{ foo }}"']
    assert split_args('a=b c="{% if foo %}bar{% endif %}"') == ['a=b', 'c="{% if foo %}bar{% endif %}"']
    assert split_args('a=b c="{# comment #}bar"') == ['a=b', 'c="{# comment #}bar"']
    assert split_args('a=b c="foo\nbar"') == ['a=b', 'c="foo\nbar"']
    assert split_args('a=b c="foo\\ bar"')

# Generated at 2024-05-31 08:25:07.457939
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="{{ foo }}"') == ['a=b', 'c="{{ foo }}"']
    assert split_args('a=b c="{% if foo %}bar{% endif %}"') == ['a=b', 'c="{% if foo %}bar{% endif %}"']
    assert split_args('a=b c="{# comment #}bar"') == ['a=b', 'c="{# comment #}bar"']
    assert split_args('a=b c="foo\nbar"') == ['a=b', 'c="foo\nbar"']
    assert split_args('a=b c="foo\\ bar"')

# Generated at 2024-05-31 08:25:11.444638
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="{{ foo }}"') == ['a=b', 'c="{{ foo }}"']
    assert split_args('a=b c="{% if foo %}bar{% endif %}"') == ['a=b', 'c="{% if foo %}bar{% endif %}"']
    assert split_args('a=b c="{# comment #}bar"') == ['a=b', 'c="{# comment #}bar"']
    assert split_args('a=b c="foo\nbar"') == ['a=b', 'c="foo\nbar"']
    assert split_args('a=b c="foo\\nbar"

# Generated at 2024-05-31 08:25:15.306633
```python
    assert split_args('a=b c="foo bar"') == ['a=b', 'c="foo bar"']
    assert split_args('a=b c="foo bar" d=\'baz qux\'') == ['a=b', 'c="foo bar"', "d='baz qux'"]
    assert split_args('a=b c="{{ foo }}"') == ['a=b', 'c="{{ foo }}"']
    assert split_args('a=b c="{% if foo %}bar{% endif %}"') == ['a=b', 'c="{% if foo %}bar{% endif %}"']
    assert split_args('a=b c="{# comment #}bar"') == ['a=b', 'c="{# comment #}bar"']
    assert split_args('a=b c="foo \\"bar\\""') == ['a=b', 'c="foo \\"bar\\""']
    assert split_args('a=b c="foo