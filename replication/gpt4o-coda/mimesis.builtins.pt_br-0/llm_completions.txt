

# Generated at 2024-06-02 18:21:35.010397
```python
    provider = BrazilSpecProvider()
    cnpj_with_mask = provider.cnpj(with_mask=True)
    cnpj_without_mask = provider.cnpj(with_mask=False)

    # Check if the CNPJ with mask has the correct format
    assert len(cnpj_with_mask) == 18
    assert cnpj_with_mask[2] == '.'
    assert cnpj_with_mask[6] == '.'
    assert cnpj_with_mask[10] == '/'
    assert cnpj_with_mask[15] == '-'

    # Check if the CNPJ without mask has the correct length
    assert len(cnpj_without_mask) == 14

    # Check if the CNPJ with mask contains only digits and mask characters
    assert all(c.isdigit() or c in '.-/' for c in cnpj_with_mask)

    # Check if the CNPJ without mask contains only digits
    assert cnpj_without_mask.isdigit()
```

# Generated at 2024-06-02 18:21:36.827007
```python
    provider = BrazilSpecProvider()
    cnpj = provider.cnpj(with_mask=True)
    assert len(cnpj) == 18
    assert cnpj[2] == '.'
    assert cnpj[6] == '.'
    assert cnpj[10] == '/'
    assert cnpj[15] == '-'

    cnpj_unmasked = provider.cnpj(with_mask=False)
    assert len(cnpj_unmasked) == 14
    assert cnpj_unmasked.isdigit()
```

# Generated at 2024-06-02 18:21:39.503653
```python
    provider = BrazilSpecProvider()

    # Test CPF with mask
    cpf_with_mask = provider.cpf(with_mask=True)
    assert len(cpf_with_mask) == 14
    assert cpf_with_mask[3] == '.'
    assert cpf_with_mask[7] == '.'
    assert cpf_with_mask[11] == '-'

    # Test CPF without mask
    cpf_without_mask = provider.cpf(with_mask=False)
    assert len(cpf_without_mask) == 11
    assert cpf_without_mask.isdigit()
```

# Generated at 2024-06-02 18:21:41.475010
```python
    provider = BrazilSpecProvider()
    cnpj_with_mask = provider.cnpj(with_mask=True)
    cnpj_without_mask = provider.cnpj(with_mask=False)

    assert isinstance(cnpj_with_mask, str)
    assert isinstance(cnpj_without_mask, str)
    assert len(cnpj_with_mask) == 18
    assert len(cnpj_without_mask) == 14
    assert cnpj_with_mask[2] == '.'
    assert cnpj_with_mask[6] == '.'
    assert cnpj_with_mask[10] == '/'
    assert cnpj_with_mask[15] == '-'
```

# Generated at 2024-06-02 18:21:43.552312
```python
    provider = BrazilSpecProvider()

    # Test CPF with mask
    cpf_with_mask = provider.cpf(with_mask=True)
    assert len(cpf_with_mask) == 14
    assert cpf_with_mask[3] == '.'
    assert cpf_with_mask[7] == '.'
    assert cpf_with_mask[11] == '-'

    # Test CPF without mask
    cpf_without_mask = provider.cpf(with_mask=False)
    assert len(cpf_without_mask) == 11
    assert cpf_without_mask.isdigit()
```

# Generated at 2024-06-02 18:21:45.787147
```python
    provider = BrazilSpecProvider()
    cnpj_with_mask = provider.cnpj(with_mask=True)
    cnpj_without_mask = provider.cnpj(with_mask=False)

    assert isinstance(cnpj_with_mask, str)
    assert isinstance(cnpj_without_mask, str)
    assert len(cnpj_with_mask) == 18  # Format: ##.###.###/####-##
    assert len(cnpj_without_mask) == 14  # Format: ############
    assert cnpj_with_mask[2] == '.' and cnpj_with_mask[6] == '.' and cnpj_with_mask[10] == '/' and cnpj_with_mask[15] == '-'
    assert cnpj_without_mask.isdigit()
```

# Generated at 2024-06-02 18:21:47.969586
```python
    provider = BrazilSpecProvider()

    # Test CPF with mask
    cpf_with_mask = provider.cpf(with_mask=True)
    assert len(cpf_with_mask) == 14
    assert cpf_with_mask[3] == '.'
    assert cpf_with_mask[7] == '.'
    assert cpf_with_mask[11] == '-'

    # Test CPF without mask
    cpf_without_mask = provider.cpf(with_mask=False)
    assert len(cpf_without_mask) == 11
    assert cpf_without_mask.isdigit()
```

# Generated at 2024-06-02 18:21:49.914180
```python
    provider = BrazilSpecProvider()
    
    # Test CPF with mask
    cpf_with_mask = provider.cpf(with_mask=True)
    assert len(cpf_with_mask) == 14
    assert cpf_with_mask[3] == '.'
    assert cpf_with_mask[7] == '.'
    assert cpf_with_mask[11] == '-'
    
    # Test CPF without mask
    cpf_without_mask = provider.cpf(with_mask=False)
    assert len(cpf_without_mask) == 11
    assert cpf_without_mask.isdigit()
```

# Generated at 2024-06-02 18:21:51.770976
```python
    provider = BrazilSpecProvider()

    # Test CPF with mask
    cpf_with_mask = provider.cpf(with_mask=True)
    assert len(cpf_with_mask) == 14
    assert cpf_with_mask[3] == '.'
    assert cpf_with_mask[7] == '.'
    assert cpf_with_mask[11] == '-'

    # Test CPF without mask
    cpf_without_mask = provider.cpf(with_mask=False)
    assert len(cpf_without_mask) == 11
    assert cpf_without_mask.isdigit()
```

# Generated at 2024-06-02 18:21:53.886432
```python
    provider = BrazilSpecProvider()

    # Test CPF with mask
    cpf_with_mask = provider.cpf(with_mask=True)
    assert len(cpf_with_mask) == 14
    assert cpf_with_mask[3] == '.'
    assert cpf_with_mask[7] == '.'
    assert cpf_with_mask[11] == '-'

    # Test CPF without mask
    cpf_without_mask = provider.cpf(with_mask=False)
    assert len(cpf_without_mask) == 11
    assert cpf_without_mask.isdigit()
```

# Generated at 2024-06-02 18:22:30.622596
```python
    provider = BrazilSpecProvider()
    
    # Test CPF with mask
    cpf_with_mask = provider.cpf(with_mask=True)
    assert len(cpf_with_mask) == 14
    assert cpf_with_mask[3] == '.'
    assert cpf_with_mask[7] == '.'
    assert cpf_with_mask[11] == '-'
    
    # Test CPF without mask
    cpf_without_mask = provider.cpf(with_mask=False)
    assert len(cpf_without_mask) == 11
    assert cpf_without_mask.isdigit()
```

# Generated at 2024-06-02 18:22:32.968193
```python
    provider = BrazilSpecProvider()

    # Test CPF with mask
    cpf_with_mask = provider.cpf(with_mask=True)
    assert len(cpf_with_mask) == 14
    assert cpf_with_mask[3] == '.'
    assert cpf_with_mask[7] == '.'
    assert cpf_with_mask[11] == '-'

    # Test CPF without mask
    cpf_without_mask = provider.cpf(with_mask=False)
    assert len(cpf_without_mask) == 11
    assert '.' not in cpf_without_mask
    assert '-' not in cpf_without_mask
```

# Generated at 2024-06-02 18:22:35.201312
```python
    provider = BrazilSpecProvider()
    
    # Test CNPJ with mask
    cnpj_with_mask = provider.cnpj(with_mask=True)
    assert len(cnpj_with_mask) == 18
    assert cnpj_with_mask[2] == '.'
    assert cnpj_with_mask[6] == '.'
    assert cnpj_with_mask[10] == '/'
    assert cnpj_with_mask[15] == '-'
    
    # Test CNPJ without mask
    cnpj_without_mask = provider.cnpj(with_mask=False)
    assert len(cnpj_without_mask) == 14
    assert cnpj_without_mask.isdigit()
```

# Generated at 2024-06-02 18:22:37.492792
```python
    provider = BrazilSpecProvider()
    cnpj_with_mask = provider.cnpj(with_mask=True)
    cnpj_without_mask = provider.cnpj(with_mask=False)

    assert isinstance(cnpj_with_mask, str)
    assert isinstance(cnpj_without_mask, str)
    assert len(cnpj_with_mask) == 18  # Format: ##.###.###/####-##
    assert len(cnpj_without_mask) == 14  # Format: ############
    assert cnpj_with_mask[2] == '.' and cnpj_with_mask[6] == '.' and cnpj_with_mask[10] == '/' and cnpj_with_mask[15] == '-'
    assert cnpj_without_mask.isdigit()
```

# Generated at 2024-06-02 18:22:39.742008
```python
    provider = BrazilSpecProvider()
    cnpj_with_mask = provider.cnpj(with_mask=True)
    cnpj_without_mask = provider.cnpj(with_mask=False)

    assert isinstance(cnpj_with_mask, str)
    assert isinstance(cnpj_without_mask, str)
    assert len(cnpj_with_mask) == 18  # Format: ##.###.###/####-##
    assert len(cnpj_without_mask) == 14  # Format: ############
    assert cnpj_with_mask[2] == '.' and cnpj_with_mask[6] == '.' and cnpj_with_mask[10] == '/' and cnpj_with_mask[15] == '-'
    assert cnpj_without_mask.isdigit()
```

# Generated at 2024-06-02 18:22:41.465148
```python
    provider = BrazilSpecProvider()
    
    # Test CPF with mask
    cpf_with_mask = provider.cpf(with_mask=True)
    assert len(cpf_with_mask) == 14
    assert cpf_with_mask[3] == '.'
    assert cpf_with_mask[7] == '.'
    assert cpf_with_mask[11] == '-'
    
    # Test CPF without mask
    cpf_without_mask = provider.cpf(with_mask=False)
    assert len(cpf_without_mask) == 11
    assert cpf_without_mask.isdigit()
```

# Generated at 2024-06-02 18:22:43.351850
```python
    provider = BrazilSpecProvider()
    cpf_with_mask = provider.cpf(with_mask=True)
    cpf_without_mask = provider.cpf(with_mask=False)

    assert isinstance(cpf_with_mask, str)
    assert isinstance(cpf_without_mask, str)
    assert len(cpf_with_mask) == 14
    assert len(cpf_without_mask) == 11
    assert cpf_with_mask[3] == '.'
    assert cpf_with_mask[7] == '.'
    assert cpf_with_mask[11] == '-'
    assert cpf_without_mask.isdigit()
```

# Generated at 2024-06-02 18:22:45.545582
```python
    provider = BrazilSpecProvider()
    cnpj_with_mask = provider.cnpj(with_mask=True)
    cnpj_without_mask = provider.cnpj(with_mask=False)

    assert len(cnpj_with_mask) == 18
    assert len(cnpj_without_mask) == 14

    assert cnpj_with_mask[2] == '.'
    assert cnpj_with_mask[6] == '.'
    assert cnpj_with_mask[10] == '/'
    assert cnpj_with_mask[15] == '-'

    assert cnpj_without_mask.isdigit()
```

# Generated at 2024-06-02 18:22:47.880283
```python
    provider = BrazilSpecProvider()
    cnpj = provider.cnpj(with_mask=True)
    assert len(cnpj) == 18
    assert cnpj[2] == '.'
    assert cnpj[6] == '.'
    assert cnpj[10] == '/'
    assert cnpj[15] == '-'

    cnpj_unmasked = provider.cnpj(with_mask=False)
    assert len(cnpj_unmasked) == 14
    assert cnpj_unmasked.isdigit()
```

# Generated at 2024-06-02 18:22:50.362507
```python
    provider = BrazilSpecProvider()

    # Test CPF with mask
    cpf_with_mask = provider.cpf(with_mask=True)
    assert len(cpf_with_mask) == 14
    assert cpf_with_mask[3] == '.'
    assert cpf_with_mask[7] == '.'
    assert cpf_with_mask[11] == '-'

    # Test CPF without mask
    cpf_without_mask = provider.cpf(with_mask=False)
    assert len(cpf_without_mask) == 11
    assert cpf_without_mask.isdigit()
```

# Generated at 2024-06-02 18:23:27.555800
```python
    provider = BrazilSpecProvider()
    cnpj_with_mask = provider.cnpj(with_mask=True)
    cnpj_without_mask = provider.cnpj(with_mask=False)

    assert isinstance(cnpj_with_mask, str)
    assert isinstance(cnpj_without_mask, str)
    assert len(cnpj_with_mask) == 18
    assert len(cnpj_without_mask) == 14
    assert cnpj_with_mask[2] == '.'
    assert cnpj_with_mask[6] == '.'
    assert cnpj_with_mask[10] == '/'
    assert cnpj_with_mask[15] == '-'
```

# Generated at 2024-06-02 18:23:29.734183
```python
    provider = BrazilSpecProvider()

    # Test CPF with mask
    cpf_with_mask = provider.cpf(with_mask=True)
    assert len(cpf_with_mask) == 14
    assert cpf_with_mask[3] == '.'
    assert cpf_with_mask[7] == '.'
    assert cpf_with_mask[11] == '-'

    # Test CPF without mask
    cpf_without_mask = provider.cpf(with_mask=False)
    assert len(cpf_without_mask) == 11
    assert cpf_without_mask.isdigit()
```

# Generated at 2024-06-02 18:23:31.913939
```python
    provider = BrazilSpecProvider()
    cnpj_with_mask = provider.cnpj(with_mask=True)
    cnpj_without_mask = provider.cnpj(with_mask=False)

    assert isinstance(cnpj_with_mask, str)
    assert isinstance(cnpj_without_mask, str)
    assert len(cnpj_with_mask) == 18
    assert len(cnpj_without_mask) == 14
    assert cnpj_with_mask[2] == '.'
    assert cnpj_with_mask[6] == '.'
    assert cnpj_with_mask[10] == '/'
    assert cnpj_with_mask[15] == '-'
```

# Generated at 2024-06-02 18:23:34.314975
```python
    provider = BrazilSpecProvider()
    cnpj_with_mask = provider.cnpj(with_mask=True)
    cnpj_without_mask = provider.cnpj(with_mask=False)

    assert isinstance(cnpj_with_mask, str)
    assert isinstance(cnpj_without_mask, str)
    assert len(cnpj_with_mask) == 18
    assert len(cnpj_without_mask) == 14
    assert cnpj_with_mask[2] == '.'
    assert cnpj_with_mask[6] == '.'
    assert cnpj_with_mask[10] == '/'
    assert cnpj_with_mask[15] == '-'
```

# Generated at 2024-06-02 18:23:36.203247
```python
    provider = BrazilSpecProvider()
    cnpj_with_mask = provider.cnpj(with_mask=True)
    cnpj_without_mask = provider.cnpj(with_mask=False)

    assert isinstance(cnpj_with_mask, str)
    assert isinstance(cnpj_without_mask, str)
    assert len(cnpj_with_mask) == 18
    assert len(cnpj_without_mask) == 14
    assert cnpj_with_mask[2] == '.'
    assert cnpj_with_mask[6] == '.'
    assert cnpj_with_mask[10] == '/'
    assert cnpj_with_mask[15] == '-'
```

# Generated at 2024-06-02 18:23:38.452804
```python
    provider = BrazilSpecProvider()
    
    # Test CPF with mask
    cpf_with_mask = provider.cpf(with_mask=True)
    assert len(cpf_with_mask) == 14
    assert cpf_with_mask[3] == '.'
    assert cpf_with_mask[7] == '.'
    assert cpf_with_mask[11] == '-'
    
    # Test CPF without mask
    cpf_without_mask = provider.cpf(with_mask=False)
    assert len(cpf_without_mask) == 11
    assert cpf_without_mask.isdigit()
```

# Generated at 2024-06-02 18:23:40.211063
```python
    provider = BrazilSpecProvider()
    
    # Test CPF with mask
    cpf_with_mask = provider.cpf(with_mask=True)
    assert len(cpf_with_mask) == 14
    assert cpf_with_mask[3] == '.'
    assert cpf_with_mask[7] == '.'
    assert cpf_with_mask[11] == '-'
    
    # Test CPF without mask
    cpf_without_mask = provider.cpf(with_mask=False)
    assert len(cpf_without_mask) == 11
    assert cpf_without_mask.isdigit()
```

# Generated at 2024-06-02 18:23:41.882255
```python
    provider = BrazilSpecProvider()

    # Test CPF with mask
    cpf_with_mask = provider.cpf(with_mask=True)
    assert len(cpf_with_mask) == 14
    assert cpf_with_mask[3] == '.'
    assert cpf_with_mask[7] == '.'
    assert cpf_with_mask[11] == '-'

    # Test CPF without mask
    cpf_without_mask = provider.cpf(with_mask=False)
    assert len(cpf_without_mask) == 11
    assert cpf_without_mask.isdigit()
```

# Generated at 2024-06-02 18:23:43.599847
```python
    provider = BrazilSpecProvider()
    
    # Test CPF with mask
    cpf_with_mask = provider.cpf(with_mask=True)
    assert len(cpf_with_mask) == 14
    assert cpf_with_mask[3] == '.'
    assert cpf_with_mask[7] == '.'
    assert cpf_with_mask[11] == '-'
    
    # Test CPF without mask
    cpf_without_mask = provider.cpf(with_mask=False)
    assert len(cpf_without_mask) == 11
    assert cpf_without_mask.isdigit()
```

# Generated at 2024-06-02 18:23:45.326730
```python
    provider = BrazilSpecProvider()

    # Test CPF with mask
    cpf_with_mask = provider.cpf(with_mask=True)
    assert len(cpf_with_mask) == 14
    assert cpf_with_mask[3] == '.'
    assert cpf_with_mask[7] == '.'
    assert cpf_with_mask[11] == '-'

    # Test CPF without mask
    cpf_without_mask = provider.cpf(with_mask=False)
    assert len(cpf_without_mask) == 11
    assert cpf_without_mask.isdigit()
```

# Generated at 2024-06-02 18:24:57.797464
```python
    provider = BrazilSpecProvider()

    # Test CPF with mask
    cpf_with_mask = provider.cpf(with_mask=True)
    assert len(cpf_with_mask) == 14
    assert cpf_with_mask[3] == '.'
    assert cpf_with_mask[7] == '.'
    assert cpf_with_mask[11] == '-'

    # Test CPF without mask
    cpf_without_mask = provider.cpf(with_mask=False)
    assert len(cpf_without_mask) == 11
    assert cpf_without_mask.isdigit()
```

# Generated at 2024-06-02 18:25:00.369981
```python
    provider = BrazilSpecProvider()

    # Test CPF with mask
    cpf_with_mask = provider.cpf(with_mask=True)
    assert len(cpf_with_mask) == 14
    assert cpf_with_mask[3] == '.'
    assert cpf_with_mask[7] == '.'
    assert cpf_with_mask[11] == '-'

    # Test CPF without mask
    cpf_without_mask = provider.cpf(with_mask=False)
    assert len(cpf_without_mask) == 11
    assert cpf_without_mask.isdigit()
```

# Generated at 2024-06-02 18:25:02.424545
```python
    provider = BrazilSpecProvider()
    
    # Test CPF with mask
    cpf_with_mask = provider.cpf(with_mask=True)
    assert len(cpf_with_mask) == 14
    assert cpf_with_mask[3] == '.'
    assert cpf_with_mask[7] == '.'
    assert cpf_with_mask[11] == '-'
    
    # Test CPF without mask
    cpf_without_mask = provider.cpf(with_mask=False)
    assert len(cpf_without_mask) == 11
    assert cpf_without_mask.isdigit()
```

# Generated at 2024-06-02 18:25:04.295408
```python
    provider = BrazilSpecProvider()
    
    # Test CPF with mask
    cpf_with_mask = provider.cpf(with_mask=True)
    assert len(cpf_with_mask) == 14
    assert cpf_with_mask[3] == '.'
    assert cpf_with_mask[7] == '.'
    assert cpf_with_mask[11] == '-'
    
    # Test CPF without mask
    cpf_without_mask = provider.cpf(with_mask=False)
    assert len(cpf_without_mask) == 11
    assert cpf_without_mask.isdigit()
```

# Generated at 2024-06-02 18:25:09.075386
```python
    provider = BrazilSpecProvider()
    cnpj_with_mask = provider.cnpj(with_mask=True)
    cnpj_without_mask = provider.cnpj(with_mask=False)

    assert isinstance(cnpj_with_mask, str)
    assert isinstance(cnpj_without_mask, str)
    assert len(cnpj_with_mask) == 18  # Format: ##.###.###/####-##
    assert len(cnpj_without_mask) == 14  # Format: ############
    assert cnpj_with_mask[2] == '.' and cnpj_with_mask[6] == '.' and cnpj_with_mask[10] == '/' and cnpj_with_mask[15] == '-'
    assert cnpj_without_mask.isdigit()
```

# Generated at 2024-06-02 18:25:11.456758
```python
    provider = BrazilSpecProvider()

    # Test CPF with mask
    cpf_with_mask = provider.cpf(with_mask=True)
    assert len(cpf_with_mask) == 14
    assert cpf_with_mask[3] == '.'
    assert cpf_with_mask[7] == '.'
    assert cpf_with_mask[11] == '-'

    # Test CPF without mask
    cpf_without_mask = provider.cpf(with_mask=False)
    assert len(cpf_without_mask) == 11
    assert cpf_without_mask.isdigit()
```

# Generated at 2024-06-02 18:25:13.805850
```python
    provider = BrazilSpecProvider()

    # Test CPF with mask
    cpf_with_mask = provider.cpf(with_mask=True)
    assert len(cpf_with_mask) == 14
    assert cpf_with_mask[3] == '.'
    assert cpf_with_mask[7] == '.'
    assert cpf_with_mask[11] == '-'

    # Test CPF without mask
    cpf_without_mask = provider.cpf(with_mask=False)
    assert len(cpf_without_mask) == 11
    assert cpf_without_mask.isdigit()
```

# Generated at 2024-06-02 18:25:15.913406
```python
    provider = BrazilSpecProvider()

    # Test CPF with mask
    cpf_with_mask = provider.cpf(with_mask=True)
    assert len(cpf_with_mask) == 14
    assert cpf_with_mask[3] == '.'
    assert cpf_with_mask[7] == '.'
    assert cpf_with_mask[11] == '-'

    # Test CPF without mask
    cpf_without_mask = provider.cpf(with_mask=False)
    assert len(cpf_without_mask) == 11
    assert cpf_without_mask.isdigit()
```

# Generated at 2024-06-02 18:25:18.095026
```python
    provider = BrazilSpecProvider()

    # Test CPF with mask
    cpf_with_mask = provider.cpf(with_mask=True)
    assert len(cpf_with_mask) == 14
    assert cpf_with_mask[3] == '.'
    assert cpf_with_mask[7] == '.'
    assert cpf_with_mask[11] == '-'

    # Test CPF without mask
    cpf_without_mask = provider.cpf(with_mask=False)
    assert len(cpf_without_mask) == 11
    assert '.' not in cpf_without_mask
    assert '-' not in cpf_without_mask
```

# Generated at 2024-06-02 18:25:20.228580
```python
    provider = BrazilSpecProvider()
    cnpj_with_mask = provider.cnpj(with_mask=True)
    cnpj_without_mask = provider.cnpj(with_mask=False)

    assert isinstance(cnpj_with_mask, str)
    assert isinstance(cnpj_without_mask, str)
    assert len(cnpj_with_mask) == 18
    assert len(cnpj_without_mask) == 14
    assert cnpj_with_mask[2] == '.'
    assert cnpj_with_mask[6] == '.'
    assert cnpj_with_mask[10] == '/'
    assert cnpj_with_mask[15] == '-'
```

# Generated at 2024-06-02 18:27:41.323905
```python
    provider = BrazilSpecProvider()
    
    # Test CPF with mask
    cpf_with_mask = provider.cpf(with_mask=True)
    assert len(cpf_with_mask) == 14
    assert cpf_with_mask[3] == '.'
    assert cpf_with_mask[7] == '.'
    assert cpf_with_mask[11] == '-'
    
    # Test CPF without mask
    cpf_without_mask = provider.cpf(with_mask=False)
    assert len(cpf_without_mask) == 11
    assert cpf_without_mask.isdigit()
```

# Generated at 2024-06-02 18:27:43.510740
```python
    provider = BrazilSpecProvider()

    # Test CPF with mask
    cpf_with_mask = provider.cpf(with_mask=True)
    assert len(cpf_with_mask) == 14
    assert cpf_with_mask[3] == '.'
    assert cpf_with_mask[7] == '.'
    assert cpf_with_mask[11] == '-'

    # Test CPF without mask
    cpf_without_mask = provider.cpf(with_mask=False)
    assert len(cpf_without_mask) == 11
    assert cpf_without_mask.isdigit()
```

# Generated at 2024-06-02 18:27:46.221812
```python
    provider = BrazilSpecProvider()
    cnpj_with_mask = provider.cnpj(with_mask=True)
    cnpj_without_mask = provider.cnpj(with_mask=False)

    assert isinstance(cnpj_with_mask, str)
    assert isinstance(cnpj_without_mask, str)
    assert len(cnpj_with_mask) == 18  # Format: ##.###.###/####-##
    assert len(cnpj_without_mask) == 14  # Format: ##############
    assert cnpj_with_mask[2] == '.' and cnpj_with_mask[6] == '.' and cnpj_with_mask[10] == '/' and cnpj_with_mask[15] == '-'
    assert cnpj_without_mask.isdigit()
```

# Generated at 2024-06-02 18:27:48.119566
```python
    provider = BrazilSpecProvider()
    
    # Test CPF with mask
    cpf_with_mask = provider.cpf(with_mask=True)
    assert len(cpf_with_mask) == 14
    assert cpf_with_mask[3] == '.'
    assert cpf_with_mask[7] == '.'
    assert cpf_with_mask[11] == '-'
    
    # Test CPF without mask
    cpf_without_mask = provider.cpf(with_mask=False)
    assert len(cpf_without_mask) == 11
    assert cpf_without_mask.isdigit()
```

# Generated at 2024-06-02 18:27:50.207294
```python
    provider = BrazilSpecProvider()

    # Test CPF with mask
    cpf_with_mask = provider.cpf(with_mask=True)
    assert len(cpf_with_mask) == 14
    assert cpf_with_mask[3] == '.'
    assert cpf_with_mask[7] == '.'
    assert cpf_with_mask[11] == '-'

    # Test CPF without mask
    cpf_without_mask = provider.cpf(with_mask=False)
    assert len(cpf_without_mask) == 11
    assert cpf_without_mask.isdigit()
```

# Generated at 2024-06-02 18:27:51.906353
```python
    provider = BrazilSpecProvider()
    cnpj_with_mask = provider.cnpj(with_mask=True)
    cnpj_without_mask = provider.cnpj(with_mask=False)

    assert len(cnpj_with_mask) == 18
    assert cnpj_with_mask[2] == '.'
    assert cnpj_with_mask[6] == '.'
    assert cnpj_with_mask[10] == '/'
    assert cnpj_with_mask[15] == '-'

    assert len(cnpj_without_mask) == 14
    assert cnpj_without_mask.isdigit()
```

# Generated at 2024-06-02 18:27:54.362255
```python
    provider = BrazilSpecProvider()
    cnpj_with_mask = provider.cnpj(with_mask=True)
    cnpj_without_mask = provider.cnpj(with_mask=False)

    assert isinstance(cnpj_with_mask, str)
    assert isinstance(cnpj_without_mask, str)
    assert len(cnpj_with_mask) == 18  # Format: ##.###.###/####-##
    assert len(cnpj_without_mask) == 14  # Format: ############
    assert cnpj_with_mask[2] == '.' and cnpj_with_mask[6] == '.' and cnpj_with_mask[10] == '/' and cnpj_with_mask[15] == '-'
    assert cnpj_without_mask.isdigit()
```

# Generated at 2024-06-02 18:27:57.038776
```python
    provider = BrazilSpecProvider()
    cnpj_with_mask = provider.cnpj(with_mask=True)
    cnpj_without_mask = provider.cnpj(with_mask=False)

    assert isinstance(cnpj_with_mask, str)
    assert isinstance(cnpj_without_mask, str)
    assert len(cnpj_with_mask) == 18  # Format: ##.###.###/####-##
    assert len(cnpj_without_mask) == 14  # Format: ############

    # Check if the masked CNPJ follows the correct pattern
    import re
    pattern = re.compile(r'\d{2}\.\d{3}\.\d{3}/\d{4}-\d{2}')
    assert pattern.match(cnpj_with_mask)
```

# Generated at 2024-06-02 18:27:59.450617
```python
    provider = BrazilSpecProvider()

    # Test CPF with mask
    cpf_with_mask = provider.cpf(with_mask=True)
    assert len(cpf_with_mask) == 14
    assert cpf_with_mask[3] == '.'
    assert cpf_with_mask[7] == '.'
    assert cpf_with_mask[11] == '-'

    # Test CPF without mask
    cpf_without_mask = provider.cpf(with_mask=False)
    assert len(cpf_without_mask) == 11
    assert cpf_without_mask.isdigit()
```

# Generated at 2024-06-02 18:28:01.811821
```python
    provider = BrazilSpecProvider()
    
    # Test CPF with mask
    cpf_with_mask = provider.cpf(with_mask=True)
    assert len(cpf_with_mask) == 14
    assert cpf_with_mask[3] == '.'
    assert cpf_with_mask[7] == '.'
    assert cpf_with_mask[11] == '-'
    
    # Test CPF without mask
    cpf_without_mask = provider.cpf(with_mask=False)
    assert len(cpf_without_mask) == 11
    assert cpf_without_mask.isdigit()
```