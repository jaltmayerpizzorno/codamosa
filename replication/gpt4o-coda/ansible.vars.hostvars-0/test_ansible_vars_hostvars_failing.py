# Automatically generated by Pynguin.
import ansible.vars.hostvars as module_0

def test_case_0():
    try:
        float_0 = 613.864759
        host_vars_vars_0 = None
        set_0 = {float_0, float_0, float_0, host_vars_vars_0}
        str_0 = 'script'
        int_0 = 999
        host_vars_0 = module_0.HostVars(set_0, str_0, int_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = b'\x17\xc2\rB\x92\xc7\x02\xa0\xf4j\x95='
        bytes_1 = None
        host_vars_vars_0 = module_0.HostVarsVars(bytes_0, bytes_1)
        bool_0 = True
        var_0 = host_vars_vars_0.__getitem__(bool_0)
        var_1 = host_vars_vars_0.__repr__()
        var_2 = host_vars_vars_0.__getitem__(bytes_1)
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b'G\x1fz\xf1o\xe9\xf6\xeb\xc5b'
        list_0 = [bytes_0]
        str_0 = ''
        list_1 = [list_0]
        dict_0 = {bytes_0: list_1}
        host_vars_vars_0 = module_0.HostVarsVars(str_0, dict_0)
        var_0 = host_vars_vars_0.__len__()
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'G\x1fz\xf1o\xe9\xf6\xeb\xc5b'
        int_0 = -1906
        dict_0 = {int_0: bytes_0}
        host_vars_vars_0 = module_0.HostVarsVars(int_0, dict_0)
        str_0 = '~$\x0bLK!{G'
        host_vars_vars_1 = module_0.HostVarsVars(host_vars_vars_0, str_0)
        bytes_1 = b'\xfe\x9f\xeaM|\xd5\x8c\xdd\xf0\xe4'
        host_vars_0 = module_0.HostVars(int_0, host_vars_vars_1, bytes_1)
        var_0 = host_vars_0.raw_get(host_vars_vars_0)
    except BaseException:
        pass

def test_case_4():
    try:
        bytes_0 = b'\xc3\xa0_\xa2>H\xbc\x0fb\xaa\xe1\xeej\x825F\x1a\xcf'
        int_0 = -2440
        float_0 = None
        int_1 = None
        list_0 = [int_0, bytes_0, int_0]
        host_vars_vars_0 = module_0.HostVarsVars(list_0, list_0)
        dict_0 = {bytes_0: int_0, bytes_0: host_vars_vars_0, int_1: bytes_0}
        int_2 = 840
        bytes_1 = b'\x12\xca\xc7@$+\xeb\xc1\x98\xa1\xe3\xa4'
        str_0 = 'kE\ncgUqh+'
        host_vars_vars_1 = module_0.HostVarsVars(bytes_1, str_0)
        bool_0 = True
        set_0 = {bool_0, bool_0, float_0, int_2}
        host_vars_0 = module_0.HostVars(int_2, host_vars_vars_1, set_0)
        var_0 = host_vars_0.set_nonpersistent_facts(host_vars_vars_0, dict_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'c3B)x{uBb*V1E.d9'
        int_0 = 964
        float_0 = 1011.5022
        bytes_0 = b'\x94X\x08'
        str_1 = 'iGZw}b%Z"tLL\x0cj]'
        bool_0 = True
        dict_0 = {bytes_0: str_0, float_0: bytes_0}
        bytes_1 = b'\xd7Q\xdb\x98\xc1\x8fJ\xd6aGK\x89\xd4\xda\xe9oc\xe8\x8e'
        float_1 = 398.6
        host_vars_vars_0 = module_0.HostVarsVars(bytes_1, float_1)
        host_vars_vars_1 = module_0.HostVarsVars(dict_0, host_vars_vars_0)
        set_0 = {bool_0}
        var_0 = host_vars_vars_1.__len__()
        host_vars_0 = module_0.HostVars(bool_0, host_vars_vars_1, set_0)
        var_1 = host_vars_0.set_host_facts(str_1, int_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'oL<+\x0bs'
        dict_0 = {str_0: str_0}
        list_0 = None
        float_0 = -2116.856
        host_vars_vars_0 = module_0.HostVarsVars(float_0, list_0)
        host_vars_0 = module_0.HostVars(list_0, host_vars_vars_0, dict_0)
        int_0 = -103
        var_0 = host_vars_0.__getitem__(int_0)
    except BaseException:
        pass

def test_case_7():
    try:
        tuple_0 = ()
        set_0 = None
        str_0 = "}02QA*Ma'@I#2"
        dict_0 = {}
        host_vars_vars_0 = module_0.HostVarsVars(set_0, dict_0)
        dict_1 = {tuple_0: set_0, set_0: host_vars_vars_0}
        float_0 = None
        tuple_1 = (dict_1, float_0)
        list_0 = [float_0]
        host_vars_vars_1 = module_0.HostVarsVars(tuple_1, list_0)
        list_1 = [tuple_0, str_0]
        bytes_0 = b'M\xe9\xc8&\xbe\x18\x9c\x95\xa0\xf3\x8c\xcdy\xa5m=\x9aa\xba\x91'
        host_vars_vars_2 = module_0.HostVarsVars(list_1, bytes_0)
        str_1 = 'sha1'
        bool_0 = True
        host_vars_vars_3 = module_0.HostVarsVars(str_1, bool_0)
        host_vars_0 = module_0.HostVars(host_vars_vars_2, host_vars_vars_0, tuple_1)
        int_0 = 1284
        var_0 = host_vars_0.__deepcopy__(int_0)
        var_1 = host_vars_0.__setstate__(dict_1)
        var_2 = host_vars_0.__repr__()
    except BaseException:
        pass

def test_case_8():
    try:
        int_0 = -7748
        list_0 = [int_0, int_0, int_0, int_0]
        dict_0 = {}
        bool_0 = False
        bytes_0 = b'\xdb\nw\xc3\xc9|\xf7\x00>'
        int_1 = 1108
        host_vars_vars_0 = module_0.HostVarsVars(bytes_0, int_1)
        host_vars_0 = module_0.HostVars(bool_0, host_vars_vars_0, host_vars_vars_0)
        var_0 = host_vars_0.set_host_variable(list_0, dict_0, list_0)
    except BaseException:
        pass

def test_case_9():
    try:
        bytes_0 = b'G\x1fz\xf1o\xe9\xf6\xeb\xc5b'
        int_0 = -1906
        dict_0 = {int_0: bytes_0}
        host_vars_vars_0 = module_0.HostVarsVars(int_0, dict_0)
        str_0 = '~$\x0bLK!{G'
        host_vars_vars_1 = module_0.HostVarsVars(host_vars_vars_0, str_0)
        bytes_1 = b'\xfe\x9f\xeaM|\xd5\x8c\xdd\xf0\xe4'
        host_vars_0 = module_0.HostVars(int_0, host_vars_vars_1, bytes_1)
        var_0 = host_vars_0.__len__()
    except BaseException:
        pass

def test_case_10():
    try:
        bytes_0 = b'x9\x86A\x0fiX\x81c4\xc5?'
        complex_0 = None
        tuple_0 = (bytes_0, complex_0)
        dict_0 = None
        float_0 = 0.5
        list_0 = [bytes_0, float_0, tuple_0]
        int_0 = 80
        int_1 = -116
        tuple_1 = (int_1,)
        host_vars_vars_0 = module_0.HostVarsVars(int_0, tuple_1)
        str_0 = 'C5M\x0c<uZ2V$'
        host_vars_0 = module_0.HostVars(list_0, host_vars_vars_0, str_0)
        var_0 = host_vars_0.__contains__(dict_0)
    except BaseException:
        pass

def test_case_11():
    try:
        bytes_0 = b'\x00\x0f\xab'
        str_0 = 'A malformed list of role dependencies was encountered.'
        bool_0 = False
        list_0 = [bytes_0, bytes_0, bytes_0, str_0]
        host_vars_vars_0 = module_0.HostVarsVars(bool_0, list_0)
        bytes_1 = b'\x16#\x88\xf1\xd4\xa6H\x9f\xfa\n\x0b\xf2\x12'
        host_vars_0 = module_0.HostVars(host_vars_vars_0, host_vars_vars_0, bytes_1)
        var_0 = host_vars_0.set_variable_manager(str_0)
    except BaseException:
        pass

def test_case_12():
    try:
        tuple_0 = ()
        set_0 = None
        str_0 = "}02QA*Ma'@I#2"
        dict_0 = {}
        host_vars_vars_0 = module_0.HostVarsVars(set_0, dict_0)
        dict_1 = {tuple_0: set_0, set_0: host_vars_vars_0}
        float_0 = None
        tuple_1 = (dict_1, float_0)
        list_0 = [float_0]
        host_vars_vars_1 = module_0.HostVarsVars(tuple_1, list_0)
        list_1 = [tuple_0, str_0]
        bytes_0 = b'M\xe9\xc8\xbe\x18\x9c\x95\xa0\xf3\xcdy\xa5m=\x9aa\xba\x91'
        host_vars_vars_2 = module_0.HostVarsVars(list_1, bytes_0)
        str_1 = 'sha1'
        bool_0 = False
        host_vars_vars_3 = module_0.HostVarsVars(str_1, bool_0)
        host_vars_0 = module_0.HostVars(host_vars_vars_2, host_vars_vars_0, tuple_1)
        var_0 = host_vars_0.__deepcopy__(list_0)
        var_1 = host_vars_0.__setstate__(host_vars_vars_2)
    except BaseException:
        pass

def test_case_13():
    try:
        tuple_0 = ()
        set_0 = None
        str_0 = "}02QA*Ma'@I#2"
        dict_0 = {}
        host_vars_vars_0 = module_0.HostVarsVars(set_0, dict_0)
        var_0 = host_vars_vars_0.__repr__()
        dict_1 = {tuple_0: set_0, set_0: host_vars_vars_0}
        float_0 = None
        tuple_1 = (dict_1, float_0)
        list_0 = [set_0]
        host_vars_vars_1 = module_0.HostVarsVars(tuple_1, list_0)
        list_1 = [tuple_0, str_0]
        bytes_0 = b'M\xe9\xc8&\xbe\x18\x9c\x95\xa0\xf3\x8c\xcdy\xa5m=\x9aa\xba\x91'
        host_vars_vars_2 = module_0.HostVarsVars(list_1, bytes_0)
        str_1 = 'sha1'
        bool_0 = True
        host_vars_vars_3 = module_0.HostVarsVars(str_1, bool_0)
        host_vars_0 = module_0.HostVars(host_vars_vars_2, host_vars_vars_0, tuple_1)
        var_1 = host_vars_0.__deepcopy__(bool_0)
        var_2 = host_vars_0.__setstate__(host_vars_0)
    except BaseException:
        pass

def test_case_14():
    try:
        float_0 = -2076.26
        dict_0 = {float_0: float_0}
        host_vars_vars_0 = module_0.HostVarsVars(float_0, dict_0)
        tuple_0 = ()
        set_0 = None
        str_0 = "}02QA*Ma'@I#2"
        dict_1 = {}
        host_vars_vars_1 = module_0.HostVarsVars(set_0, dict_1)
        var_0 = host_vars_vars_1.__repr__()
        dict_2 = {tuple_0: set_0, set_0: host_vars_vars_1}
        float_1 = None
        tuple_1 = (dict_2, float_1)
        list_0 = [float_1]
        host_vars_vars_2 = module_0.HostVarsVars(tuple_1, list_0)
        list_1 = [tuple_0, str_0]
        bytes_0 = b'M\xe9\xc8&\xbe\x18\x9c\x95\xa0\xf3\x8c\xcdy\xa5m=\x9aa\xba\x91'
        host_vars_vars_3 = module_0.HostVarsVars(list_1, bytes_0)
        str_1 = 'sha1'
        bool_0 = True
        host_vars_vars_4 = module_0.HostVarsVars(str_1, bool_0)
        bool_1 = False
        host_vars_vars_5 = module_0.HostVarsVars(float_1, float_1)
        float_2 = -3113.6
        host_vars_0 = module_0.HostVars(bool_1, host_vars_vars_5, float_2)
        int_0 = 1292
        str_2 = '?iOQ`S4.'
        var_1 = host_vars_0.__deepcopy__(str_2)
        var_2 = host_vars_0.__setstate__(dict_1)
        var_3 = host_vars_vars_2.__contains__(int_0)
        var_4 = host_vars_0.__repr__()
    except BaseException:
        pass

def test_case_15():
    try:
        float_0 = -2076.26
        dict_0 = {float_0: float_0}
        host_vars_vars_0 = module_0.HostVarsVars(float_0, dict_0)
        tuple_0 = ()
        set_0 = None
        str_0 = "}02QA*Ma'@I#2"
        dict_1 = {}
        host_vars_vars_1 = module_0.HostVarsVars(set_0, dict_1)
        var_0 = host_vars_vars_1.__repr__()
        dict_2 = {tuple_0: set_0, set_0: host_vars_vars_1}
        float_1 = None
        tuple_1 = (dict_2, float_1)
        list_0 = [float_1]
        host_vars_vars_2 = module_0.HostVarsVars(tuple_1, list_0)
        list_1 = [tuple_0, str_0]
        bytes_0 = b'M\xe9\xc8&\xbe\x18\x9c\x95\xa0\xf3\x8c\xcdy\xa5m=\x9aa\xba\x91'
        host_vars_vars_3 = module_0.HostVarsVars(list_1, bytes_0)
        str_1 = 'sha1'
        bool_0 = False
        host_vars_vars_4 = module_0.HostVarsVars(str_1, bool_0)
        host_vars_0 = module_0.HostVars(host_vars_vars_3, host_vars_vars_1, tuple_1)
        int_0 = 1292
        var_1 = host_vars_0.__deepcopy__(int_0)
        var_2 = host_vars_0.__setstate__(dict_2)
        var_3 = host_vars_vars_3.__contains__(host_vars_vars_2)
        host_vars_vars_5 = module_0.HostVarsVars(dict_0, host_vars_vars_2)
        var_4 = host_vars_vars_2.__contains__(host_vars_vars_5)
    except BaseException:
        pass