

# Generated at 2024-05-31 02:15:02.742705
```python
    class MockModule:
        def __init__(self, params):
            self.params = params

    module = MockModule(params={
        'gather_subset': ['all'],
        'gather_timeout': 10,
        'filter': '*'
    })

    facts = ansible_facts(module)
    assert isinstance(facts, dict)
    assert 'default_ipv4' in facts
```

# Generated at 2024-05-31 02:15:04.952998
```python
    class MockModule:
        def __init__(self, params):
            self.params = params

    module = MockModule({
        'gather_subset': ['all'],
        'gather_timeout': 10,
        'filter': '*'
    })

    facts = ansible_facts(module)
    assert isinstance(facts, dict)
    assert 'default_ipv4' in facts
    assert 'ansible_all_ipv4_addresses' in facts
```

# Generated at 2024-05-31 02:15:07.243809
```python
    class MockModule:
        def __init__(self, params):
            self.params = params

    module = MockModule(params={
        'gather_subset': ['all'],
        'gather_timeout': 10,
        'filter': '*'
    })

    facts = ansible_facts(module)
    assert isinstance(facts, dict)
    assert 'default_ipv4' in facts
    assert 'ansible_all_ipv4_addresses' in facts
```

# Generated at 2024-05-31 02:15:08.570175

    class MockModule:
        def __init__(self, params):
            self.params = params

    mock_params = {'gather_subset': ['all']}
    mock_module = MockModule(mock_params)
    result = get_all_facts(mock_module)
    assert isinstance(result, dict)
    assert 'default_ipv4' in result

# Generated at 2024-05-31 02:15:10.514466
```python
    class MockModule:
        def __init__(self, params):
            self.params = params

    module = MockModule({
        'gather_subset': ['all'],
        'gather_timeout': 10,
        'filter': '*'
    })

    facts = ansible_facts(module)
    assert isinstance(facts, dict)
    assert 'default_ipv4' in facts
    assert 'ansible_all_ipv4_addresses' in facts
```

# Generated at 2024-05-31 02:15:12.769053
```python
    class MockModule:
        def __init__(self, params):
            self.params = params

    module = MockModule({
        'gather_subset': ['all'],
        'gather_timeout': 10,
        'filter': '*'
    })

    facts = ansible_facts(module)
    assert isinstance(facts, dict)
    assert 'default_ipv4' in facts
    assert 'ansible_all_ipv4_addresses' in facts
```

# Generated at 2024-05-31 02:15:14.671758
```python
    class MockModule:
        def __init__(self, params):
            self.params = params

    module = MockModule(params={
        'gather_subset': ['all'],
        'gather_timeout': 10,
        'filter': '*'
    })

    facts = ansible_facts(module)
    assert isinstance(facts, dict)
    assert 'default_ipv4' in facts
```

# Generated at 2024-05-31 02:15:17.035324
```python
    class MockModule:
        def __init__(self, params):
            self.params = params

    module = MockModule({
        'gather_subset': ['all'],
        'gather_timeout': 10,
        'filter': '*'
    })

    facts = ansible_facts(module)
    assert isinstance(facts, dict)
    assert 'default_ipv4' in facts
```

# Generated at 2024-05-31 02:15:21.395438
```python
    class MockModule:
        def __init__(self, params):
            self.params = params

    mock_params = {
        'gather_subset': ['all'],
        'gather_timeout': 10,
        'filter': '*'
    }
    mock_module = MockModule(mock_params)

    facts = get_all_facts(mock_module)

    assert isinstance(facts, dict)
    assert 'default_ipv4' in facts
```

# Generated at 2024-05-31 02:15:23.309011
```python
    class MockModule:
        def __init__(self, params):
            self.params = params

    module = MockModule({
        'gather_subset': ['all'],
        'gather_timeout': 10,
        'filter': '*'
    })

    facts = ansible_facts(module)
    assert isinstance(facts, dict)
    assert 'default_ipv4' in facts
    assert 'ansible_all_ipv4_addresses' in facts
```

# Generated at 2024-05-31 02:15:32.155803
```python
    class MockModule:
        def __init__(self, params):
            self.params = params

    module = MockModule({
        'gather_subset': ['all'],
        'gather_timeout': 10,
        'filter': '*'
    })

    facts = ansible_facts(module)
    assert isinstance(facts, dict)
    assert 'default_ipv4' in facts
    assert 'distribution' in facts
```

# Generated at 2024-05-31 02:15:35.357882
```python
    class MockModule:
        def __init__(self, params):
            self.params = params

    module = MockModule({
        'gather_subset': ['all'],
        'gather_timeout': 10,
        'filter': '*'
    })

    facts = ansible_facts(module)
    assert isinstance(facts, dict)
    assert 'default_ipv4' in facts
    assert 'ansible_all_ipv4_addresses' in facts
```

# Generated at 2024-05-31 02:15:37.137673
```python
    class MockModule:
        def __init__(self, params):
            self.params = params

    module = MockModule({
        'gather_subset': ['all'],
        'gather_timeout': 10,
        'filter': '*'
    })

    facts = ansible_facts(module)
    assert isinstance(facts, dict)
    assert 'default_ipv4' in facts
    assert 'ansible_all_ipv4_addresses' in facts
```

# Generated at 2024-05-31 02:15:38.859266
```python
    class MockModule:
        def __init__(self, params):
            self.params = params

    mock_params = {'gather_subset': ['all']}
    mock_module = MockModule(mock_params)

    result = get_all_facts(mock_module)
    assert isinstance(result, dict)
    assert 'default_ipv4' in result
```

# Generated at 2024-05-31 02:15:42.464957
```python
    class MockModule:
        def __init__(self, params):
            self.params = params

    module = MockModule({
        'gather_subset': ['all'],
        'gather_timeout': 10,
        'filter': '*'
    })

    facts = ansible_facts(module)
    assert isinstance(facts, dict)
    assert 'default_ipv4' in facts
    assert 'ansible_all_ipv4_addresses' in facts
```

# Generated at 2024-05-31 02:15:44.480705
```python
    class MockModule:
        def __init__(self, params):
            self.params = params

    module = MockModule({
        'gather_subset': ['all'],
        'gather_timeout': 10,
        'filter': '*'
    })

    facts = ansible_facts(module)
    assert isinstance(facts, dict)
    assert 'default_ipv4' in facts
    assert 'ansible_all_ipv4_addresses' in facts
```

# Generated at 2024-05-31 02:15:49.779658
```python
    class MockModule:
        def __init__(self, params):
            self.params = params

    module = MockModule({
        'gather_subset': ['all'],
        'gather_timeout': 10,
        'filter': '*'
    })

    facts = ansible_facts(module)
    assert isinstance(facts, dict)
    assert 'default_ipv4' in facts
    assert 'ansible_all_ipv4_addresses' in facts
```

# Generated at 2024-05-31 02:15:51.168382
```python
    class MockModule:
        def __init__(self, params):
            self.params = params

    module = MockModule(params={'gather_subset': ['all']})
    facts = get_all_facts(module)
    assert isinstance(facts, dict)
    assert 'default_ipv4' in facts
```

# Generated at 2024-05-31 02:15:52.931194
```python
    class MockModule:
        def __init__(self, params):
            self.params = params

    mock_params = {'gather_subset': ['all']}
    mock_module = MockModule(mock_params)

    result = get_all_facts(mock_module)
    assert isinstance(result, dict)
    assert 'default_ipv4' in result
```

# Generated at 2024-05-31 02:15:54.462926
```python
    class MockModule:
        def __init__(self, params):
            self.params = params

    module = MockModule({
        'gather_subset': ['all'],
        'gather_timeout': 10,
        'filter': '*'
    })

    facts = ansible_facts(module)
    assert isinstance(facts, dict)
    assert 'default_ipv4' in facts
    assert 'distribution' in facts
```