

# Generated at 2024-06-04 21:36:42.038987
```python
    ydl = None  # Mock or create a suitable object for ydl
    params = {
        'fragment_retries': 3,
        'skip_unavailable_fragments': True,
        'keep_fragments': False,
    }
    fragment_fd = FragmentFD(ydl, params)
    
    assert fragment_fd.ydl == ydl
    assert fragment_fd.params == params
    assert fragment_fd.params['fragment_retries'] == 3
    assert fragment_fd.params['skip_unavailable_fragments'] == True
    assert fragment_fd.params['keep_fragments'] == False
```

# Generated at 2024-06-04 21:36:44.594810
```python
    ydl = None  # Mock or create a suitable object for ydl if necessary
    params = {
        'continuedl': True,
        'quiet': True,
        'noprogress': True,
        'ratelimit': None,
        'retries': 0,
        'nopart': False,
        'test': False,
    }
    downloader = HttpQuietDownloader(ydl, params)
    assert downloader.ydl == ydl
    assert downloader.params == params
```

# Generated at 2024-06-04 21:36:48.664996
```python
    ydl = None  # Mock or create a suitable object for ydl if necessary
    params = {
        'continuedl': True,
        'quiet': True,
        'noprogress': True,
        'ratelimit': None,
        'retries': 0,
        'nopart': False,
        'test': False,
    }
    downloader = HttpQuietDownloader(ydl, params)
    assert downloader.ydl == ydl
    assert downloader.params == params
    assert downloader.params['continuedl'] is True
    assert downloader.params['quiet'] is True
    assert downloader.params['noprogress'] is True
    assert downloader.params['ratelimit'] is None
    assert downloader.params['retries'] == 0
    assert downloader.params['nopart'] is False
    assert downloader.params['test'] is False
```

# Generated at 2024-06-04 21:36:51.388879
```python
    ydl = None  # Mock or create a suitable object for ydl
    params = {
        'fragment_retries': 3,
        'skip_unavailable_fragments': True,
        'keep_fragments': False,
    }
    fragment_fd = FragmentFD(ydl, params)
    
    assert fragment_fd.ydl == ydl
    assert fragment_fd.params == params
    assert fragment_fd.params['fragment_retries'] == 3
    assert fragment_fd.params['skip_unavailable_fragments'] == True
    assert fragment_fd.params['keep_fragments'] == False
```

# Generated at 2024-06-04 21:36:56.183012
```python
    ydl = None  # Mock or create a suitable object for ydl if necessary
    params = {
        'continuedl': True,
        'quiet': True,
        'noprogress': True,
        'ratelimit': None,
        'retries': 0,
        'nopart': False,
        'test': False,
    }
    downloader = HttpQuietDownloader(ydl, params)
    assert downloader.ydl == ydl
    assert downloader.params == params
    assert downloader.params['continuedl'] is True
    assert downloader.params['quiet'] is True
    assert downloader.params['noprogress'] is True
    assert downloader.params['ratelimit'] is None
    assert downloader.params['retries'] == 0
    assert downloader.params['nopart'] is False
    assert downloader.params['test'] is False
```

# Generated at 2024-06-04 21:36:58.184895
```python
    ydl = None  # Mock or create a suitable object for ydl
    params = {
        'ratelimit': None,
        'retries': 10,
        'nopart': False,
        'test': False,
        'updatetime': True,
        'keep_fragments': False,
    }
    fragment_fd = FragmentFD(ydl, params)
    assert fragment_fd.ydl == ydl
    assert fragment_fd.params == params
```

# Generated at 2024-06-04 21:37:02.052888
```python
    ydl = None  # Mock or create a suitable object for ydl if necessary
    params = {
        'continuedl': True,
        'quiet': True,
        'noprogress': True,
        'ratelimit': None,
        'retries': 0,
        'nopart': False,
        'test': False,
    }
    downloader = HttpQuietDownloader(ydl, params)
    assert downloader.ydl == ydl
    assert downloader.params == params
    assert downloader.params['continuedl'] is True
    assert downloader.params['quiet'] is True
    assert downloader.params['noprogress'] is True
    assert downloader.params['ratelimit'] is None
    assert downloader.params['retries'] == 0
    assert downloader.params['nopart'] is False
    assert downloader.params['test'] is False
```

# Generated at 2024-06-04 21:37:04.051162
```python
    ydl = None  # Mock or create a suitable object for ydl
    params = {
        'ratelimit': None,
        'retries': 10,
        'nopart': False,
        'test': False,
        'keep_fragments': False,
    }
    fragment_fd = FragmentFD(ydl, params)
    assert fragment_fd.ydl == ydl
    assert fragment_fd.params == params
```

# Generated at 2024-06-04 21:37:06.838665
```python
    ydl = None  # Mock or create a suitable object for ydl
    params = {
        'ratelimit': None,
        'retries': 10,
        'nopart': False,
        'test': False,
        'keep_fragments': False,
    }
    fragment_fd = FragmentFD(ydl, params)
    assert fragment_fd.ydl == ydl
    assert fragment_fd.params == params
```

# Generated at 2024-06-04 21:37:08.904526
```python
    ydl = None  # Mock or create a suitable object for ydl
    params = {
        'ratelimit': None,
        'retries': 10,
        'nopart': False,
        'test': False,
        'keep_fragments': False,
        'updatetime': True,
    }
    fragment_fd = FragmentFD(ydl, params)
    assert fragment_fd.ydl == ydl
    assert fragment_fd.params == params
```

# Generated at 2024-06-04 21:37:33.773358
```python
    ydl = None  # Mock or create a suitable object for ydl if necessary
    params = {
        'continuedl': True,
        'quiet': True,
        'noprogress': True,
        'ratelimit': None,
        'retries': 0,
        'nopart': False,
        'test': False,
    }
    downloader = HttpQuietDownloader(ydl, params)
    assert downloader.ydl == ydl
    assert downloader.params == params
    assert downloader.params['continuedl'] is True
    assert downloader.params['quiet'] is True
    assert downloader.params['noprogress'] is True
    assert downloader.params['ratelimit'] is None
    assert downloader.params['retries'] == 0
    assert downloader.params['nopart'] is False
    assert downloader.params['test'] is False
```

# Generated at 2024-06-04 21:37:36.568697
```python
    ydl = None  # Mock or create a suitable object for ydl if necessary
    params = {
        'continuedl': True,
        'quiet': True,
        'noprogress': True,
        'ratelimit': None,
        'retries': 0,
        'nopart': False,
        'test': False,
    }
    downloader = HttpQuietDownloader(ydl, params)
    assert downloader.ydl == ydl
    assert downloader.params == params
```

# Generated at 2024-06-04 21:37:39.246346
```python
    ydl = None  # Mock or create a suitable object for ydl if necessary
    params = {
        'continuedl': True,
        'quiet': True,
        'noprogress': True,
        'ratelimit': None,
        'retries': 0,
        'nopart': False,
        'test': False,
    }
    downloader = HttpQuietDownloader(ydl, params)
    assert downloader.ydl == ydl
    assert downloader.params == params
```

# Generated at 2024-06-04 21:37:45.317475
```python
    ydl = None  # Mock or create a suitable object for ydl if necessary
    params = {
        'continuedl': True,
        'quiet': True,
        'noprogress': True,
        'ratelimit': None,
        'retries': 0,
        'nopart': False,
        'test': False,
    }
    downloader = HttpQuietDownloader(ydl, params)
    assert downloader.ydl == ydl
    assert downloader.params == params
    assert downloader.params['continuedl'] is True
    assert downloader.params['quiet'] is True
    assert downloader.params['noprogress'] is True
    assert downloader.params['ratelimit'] is None
    assert downloader.params['retries'] == 0
    assert downloader.params['nopart'] is False
    assert downloader.params['test'] is False
```

# Generated at 2024-06-04 21:37:50.387880
```python
    ydl = None  # Mock or create a suitable object for ydl
    params = {
        'ratelimit': None,
        'retries': 10,
        'nopart': False,
        'test': False,
        'updatetime': True,
        'keep_fragments': False,
    }
    fragment_fd = FragmentFD(ydl, params)
    assert fragment_fd.ydl == ydl
    assert fragment_fd.params == params
```

# Generated at 2024-06-04 21:37:54.068590
```python
    ydl = None  # Mock or create a suitable object for ydl if necessary
    params = {
        'continuedl': True,
        'quiet': True,
        'noprogress': True,
        'ratelimit': None,
        'retries': 0,
        'nopart': False,
        'test': False,
    }
    downloader = HttpQuietDownloader(ydl, params)
    assert downloader.ydl == ydl
    assert downloader.params == params
```

# Generated at 2024-06-04 21:37:59.324401
```python
    ydl = None  # Mock or create a suitable object for ydl
    params = {
        'fragment_retries': 3,
        'skip_unavailable_fragments': True,
        'keep_fragments': False,
    }
    fragment_fd = FragmentFD(ydl, params)
    
    assert fragment_fd.ydl == ydl
    assert fragment_fd.params == params
    assert fragment_fd.params['fragment_retries'] == 3
    assert fragment_fd.params['skip_unavailable_fragments'] == True
    assert fragment_fd.params['keep_fragments'] == False
```

# Generated at 2024-06-04 21:38:02.129820
```python
    ydl = None  # Mock or create a suitable object for ydl
    params = {
        'ratelimit': None,
        'retries': 10,
        'nopart': False,
        'test': False,
        'updatetime': True,
        'keep_fragments': False,
    }
    fragment_fd = FragmentFD(ydl, params)
    assert fragment_fd.ydl == ydl
    assert fragment_fd.params == params
```

# Generated at 2024-06-04 21:38:04.328944
```python
    ydl = None  # Mock or create a suitable object for ydl
    params = {
        'ratelimit': None,
        'retries': 10,
        'nopart': False,
        'test': False,
        'updatetime': True,
        'keep_fragments': False,
    }
    fragment_fd = FragmentFD(ydl, params)
    assert fragment_fd.ydl == ydl
    assert fragment_fd.params == params
```

# Generated at 2024-06-04 21:38:07.390122
```python
    ydl = None  # Mock or create a suitable object for ydl
    params = {
        'fragment_retries': 3,
        'skip_unavailable_fragments': True,
        'keep_fragments': False,
    }
    fragment_fd = FragmentFD(ydl, params)
    assert fragment_fd.ydl == ydl
    assert fragment_fd.params == params
    assert fragment_fd.params['fragment_retries'] == 3
    assert fragment_fd.params['skip_unavailable_fragments'] is True
    assert fragment_fd.params['keep_fragments'] is False
```

# Generated at 2024-06-04 21:38:51.652133
```python
    ydl = None  # Mock or create a suitable object for ydl
    params = {
        'continuedl': True,
        'quiet': True,
        'noprogress': True,
        'ratelimit': None,
        'retries': 0,
        'nopart': False,
        'test': False,
    }
    downloader = HttpQuietDownloader(ydl, params)
    assert downloader.ydl == ydl
    assert downloader.params == params
```

# Generated at 2024-06-04 21:38:56.417458
```python
    ydl = None  # Mock or create a suitable object for ydl if necessary
    params = {
        'continuedl': True,
        'quiet': True,
        'noprogress': True,
        'ratelimit': None,
        'retries': 0,
        'nopart': False,
        'test': False,
    }
    downloader = HttpQuietDownloader(ydl, params)
    assert downloader.ydl == ydl
    assert downloader.params == params
    assert downloader.params['continuedl'] is True
    assert downloader.params['quiet'] is True
    assert downloader.params['noprogress'] is True
    assert downloader.params['ratelimit'] is None
    assert downloader.params['retries'] == 0
    assert downloader.params['nopart'] is False
    assert downloader.params['test'] is False
```

# Generated at 2024-06-04 21:39:00.131753
```python
    ydl = None  # Mock or create a suitable object for ydl if necessary
    params = {
        'continuedl': True,
        'quiet': True,
        'noprogress': True,
        'ratelimit': None,
        'retries': 0,
        'nopart': False,
        'test': False,
    }
    downloader = HttpQuietDownloader(ydl, params)
    assert downloader.ydl == ydl
    assert downloader.params == params
    assert downloader.params['continuedl'] is True
    assert downloader.params['quiet'] is True
    assert downloader.params['noprogress'] is True
    assert downloader.params['ratelimit'] is None
    assert downloader.params['retries'] == 0
    assert downloader.params['nopart'] is False
    assert downloader.params['test'] is False
```

# Generated at 2024-06-04 21:39:03.089659
```python
    ydl = None  # Mock or create a suitable object for ydl
    params = {
        'fragment_retries': 3,
        'skip_unavailable_fragments': True,
        'keep_fragments': False,
    }
    fragment_fd = FragmentFD(ydl, params)
    assert fragment_fd.params['fragment_retries'] == 3
    assert fragment_fd.params['skip_unavailable_fragments'] is True
    assert fragment_fd.params['keep_fragments'] is False
```

# Generated at 2024-06-04 21:39:05.435085
```python
    ydl = None  # Mock or create a suitable object for ydl
    params = {
        'fragment_retries': 3,
        'skip_unavailable_fragments': True,
        'keep_fragments': False,
    }
    fragment_fd = FragmentFD(ydl, params)
    assert fragment_fd.params['fragment_retries'] == 3
    assert fragment_fd.params['skip_unavailable_fragments'] is True
    assert fragment_fd.params['keep_fragments'] is False
```

# Generated at 2024-06-04 21:39:08.813290
```python
    ydl = None  # Mock or create a suitable object for ydl
    params = {
        'continuedl': True,
        'quiet': True,
        'noprogress': True,
        'ratelimit': None,
        'retries': 0,
        'nopart': False,
        'test': False,
    }
    downloader = HttpQuietDownloader(ydl, params)
    assert downloader.ydl == ydl
    assert downloader.params == params
```

# Generated at 2024-06-04 21:39:13.311912
```python
    ydl = None  # Mock or create a suitable object for ydl if necessary
    params = {
        'continuedl': True,
        'quiet': True,
        'noprogress': True,
        'ratelimit': None,
        'retries': 0,
        'nopart': False,
        'test': False,
    }
    downloader = HttpQuietDownloader(ydl, params)
    assert downloader.ydl == ydl
    assert downloader.params == params
    assert downloader.params['continuedl'] is True
    assert downloader.params['quiet'] is True
    assert downloader.params['noprogress'] is True
    assert downloader.params['ratelimit'] is None
    assert downloader.params['retries'] == 0
    assert downloader.params['nopart'] is False
    assert downloader.params['test'] is False
```

# Generated at 2024-06-04 21:39:15.935283
```python
    ydl = None  # Mock or create a suitable object for ydl
    params = {
        'fragment_retries': 3,
        'skip_unavailable_fragments': True,
        'keep_fragments': False,
    }
    fragment_fd = FragmentFD(ydl, params)
    assert fragment_fd.params['fragment_retries'] == 3
    assert fragment_fd.params['skip_unavailable_fragments'] is True
    assert fragment_fd.params['keep_fragments'] is False
```

# Generated at 2024-06-04 21:39:20.496572
```python
    ydl = None  # Mock or create a suitable object for ydl if necessary
    params = {
        'continuedl': True,
        'quiet': True,
        'noprogress': True,
        'ratelimit': None,
        'retries': 0,
        'nopart': False,
        'test': False,
    }
    downloader = HttpQuietDownloader(ydl, params)
    assert downloader.ydl == ydl
    assert downloader.params == params
    assert downloader.params['continuedl'] is True
    assert downloader.params['quiet'] is True
    assert downloader.params['noprogress'] is True
    assert downloader.params['ratelimit'] is None
    assert downloader.params['retries'] == 0
    assert downloader.params['nopart'] is False
    assert downloader.params['test'] is False
```

# Generated at 2024-06-04 21:39:24.183665
```python
    ydl = None  # Mock or create a suitable object for ydl if necessary
    params = {
        'continuedl': True,
        'quiet': True,
        'noprogress': True,
        'ratelimit': None,
        'retries': 0,
        'nopart': False,
        'test': False,
    }
    downloader = HttpQuietDownloader(ydl, params)
    assert downloader.ydl == ydl
    assert downloader.params == params
    assert downloader.params['continuedl'] is True
    assert downloader.params['quiet'] is True
    assert downloader.params['noprogress'] is True
    assert downloader.params['ratelimit'] is None
    assert downloader.params['retries'] == 0
    assert downloader.params['nopart'] is False
    assert downloader.params['test'] is False
```

# Generated at 2024-06-04 21:40:45.023976
```python
    ydl = None  # Mock or create a suitable object for ydl if necessary
    params = {
        'continuedl': True,
        'quiet': True,
        'noprogress': True,
        'ratelimit': None,
        'retries': 0,
        'nopart': False,
        'test': False,
    }
    downloader = HttpQuietDownloader(ydl, params)
    assert downloader.ydl == ydl
    assert downloader.params == params
    assert downloader.params['continuedl'] is True
    assert downloader.params['quiet'] is True
    assert downloader.params['noprogress'] is True
    assert downloader.params['ratelimit'] is None
    assert downloader.params['retries'] == 0
    assert downloader.params['nopart'] is False
    assert downloader.params['test'] is False
```

# Generated at 2024-06-04 21:40:47.143851
```python
    ydl = None  # Mock or create a suitable object for ydl
    params = {
        'continuedl': True,
        'quiet': True,
        'noprogress': True,
        'ratelimit': None,
        'retries': 0,
        'nopart': False,
        'test': False,
    }
    downloader = HttpQuietDownloader(ydl, params)
    assert downloader.ydl == ydl
    assert downloader.params == params
```

# Generated at 2024-06-04 21:40:49.856333
```python
    ydl = None  # Mock or create a suitable object for ydl
    params = {
        'fragment_retries': 3,
        'skip_unavailable_fragments': True,
        'keep_fragments': False,
    }
    fragment_fd = FragmentFD(ydl, params)
    
    assert fragment_fd.ydl == ydl
    assert fragment_fd.params == params
    assert fragment_fd.params['fragment_retries'] == 3
    assert fragment_fd.params['skip_unavailable_fragments'] is True
    assert fragment_fd.params['keep_fragments'] is False
```

# Generated at 2024-06-04 21:40:52.176876
```python
    ydl = None  # Mock or create a suitable object for ydl
    params = {
        'continuedl': True,
        'quiet': True,
        'noprogress': True,
        'ratelimit': None,
        'retries': 0,
        'nopart': False,
        'test': False,
    }
    downloader = HttpQuietDownloader(ydl, params)
    assert downloader.ydl == ydl
    assert downloader.params == params
```

# Generated at 2024-06-04 21:40:56.476266
```python
    ydl = None  # Mock or create a suitable object for ydl
    params = {
        'ratelimit': None,
        'retries': 10,
        'nopart': False,
        'test': False,
        'keep_fragments': False,
        'updatetime': True,
    }
    fragment_fd = FragmentFD(ydl, params)
    assert fragment_fd.ydl == ydl
    assert fragment_fd.params == params
```

# Generated at 2024-06-04 21:40:58.591782
```python
    ydl = None  # Mock or create a suitable object for ydl if necessary
    params = {
        'continuedl': True,
        'quiet': True,
        'noprogress': True,
        'ratelimit': None,
        'retries': 0,
        'nopart': False,
        'test': False,
    }
    downloader = HttpQuietDownloader(ydl, params)
    assert downloader.ydl == ydl
    assert downloader.params == params
```

# Generated at 2024-06-04 21:41:00.623316
```python
    ydl = None  # Mock or create a suitable object for ydl
    params = {
        'fragment_retries': 3,
        'skip_unavailable_fragments': True,
        'keep_fragments': False,
    }
    fragment_fd = FragmentFD(ydl, params)
    assert fragment_fd.params['fragment_retries'] == 3
    assert fragment_fd.params['skip_unavailable_fragments'] is True
    assert fragment_fd.params['keep_fragments'] is False
```

# Generated at 2024-06-04 21:41:02.584559
```python
    ydl = None  # Mock or create a suitable object for ydl
    params = {
        'ratelimit': None,
        'retries': 10,
        'nopart': False,
        'test': False,
        'keep_fragments': False,
    }
    fragment_fd = FragmentFD(ydl, params)
    assert fragment_fd.ydl == ydl
    assert fragment_fd.params == params
```

# Generated at 2024-06-04 21:41:05.463049
```python
    ydl = None  # Mock or create a suitable object for ydl if necessary
    params = {
        'continuedl': True,
        'quiet': True,
        'noprogress': True,
        'ratelimit': None,
        'retries': 0,
        'nopart': False,
        'test': False,
    }
    downloader = HttpQuietDownloader(ydl, params)
    assert downloader.ydl == ydl
    assert downloader.params == params
    assert downloader.params['continuedl'] is True
    assert downloader.params['quiet'] is True
    assert downloader.params['noprogress'] is True
    assert downloader.params['ratelimit'] is None
    assert downloader.params['retries'] == 0
    assert downloader.params['nopart'] is False
    assert downloader.params['test'] is False
```

# Generated at 2024-06-04 21:41:07.511429
```python
    ydl = None  # Mock or create a suitable object for ydl if necessary
    params = {
        'continuedl': True,
        'quiet': True,
        'noprogress': True,
        'ratelimit': None,
        'retries': 0,
        'nopart': False,
        'test': False,
    }
    downloader = HttpQuietDownloader(ydl, params)
    assert downloader.ydl == ydl
    assert downloader.params == params
```

# Generated at 2024-06-04 21:43:44.340976
```python
    ydl = None  # Mock or create a suitable object for ydl
    params = {
        'ratelimit': None,
        'retries': 10,
        'nopart': False,
        'test': False,
        'updatetime': True,
        'keep_fragments': False,
    }
    fragment_fd = FragmentFD(ydl, params)
    assert fragment_fd.ydl == ydl
    assert fragment_fd.params == params
```

# Generated at 2024-06-04 21:43:47.430387
```python
    ydl = None  # Mock or create a suitable object for ydl
    params = {
        'fragment_retries': 3,
        'skip_unavailable_fragments': True,
        'keep_fragments': False,
    }
    fragment_fd = FragmentFD(ydl, params)
    assert fragment_fd.params['fragment_retries'] == 3
    assert fragment_fd.params['skip_unavailable_fragments'] is True
    assert fragment_fd.params['keep_fragments'] is False
```

# Generated at 2024-06-04 21:43:49.767441
```python
    ydl = None  # Mock or create a suitable object for ydl
    params = {
        'ratelimit': None,
        'retries': 10,
        'nopart': False,
        'test': False,
        'keep_fragments': False,
        'updatetime': True,
    }
    fragment_fd = FragmentFD(ydl, params)
    assert fragment_fd.ydl == ydl
    assert fragment_fd.params == params
```

# Generated at 2024-06-04 21:43:52.448805
```python
    ydl = None  # Mock or create a suitable object for ydl
    params = {
        'fragment_retries': 3,
        'skip_unavailable_fragments': True,
        'keep_fragments': False,
    }
    fragment_fd = FragmentFD(ydl, params)
    
    assert fragment_fd.ydl == ydl
    assert fragment_fd.params == params
    assert fragment_fd.params['fragment_retries'] == 3
    assert fragment_fd.params['skip_unavailable_fragments'] is True
    assert fragment_fd.params['keep_fragments'] is False
```

# Generated at 2024-06-04 21:43:55.006529
```python
    ydl = None  # Mock or create a suitable object for ydl if necessary
    params = {
        'fragment_retries': 3,
        'skip_unavailable_fragments': True,
        'keep_fragments': False,
    }
    fragment_fd = FragmentFD(ydl, params)
    
    assert fragment_fd.ydl == ydl
    assert fragment_fd.params == params
    assert fragment_fd.params['fragment_retries'] == 3
    assert fragment_fd.params['skip_unavailable_fragments'] == True
    assert fragment_fd.params['keep_fragments'] == False
```

# Generated at 2024-06-04 21:43:57.560720
```python
    ydl = None  # Mock or create a suitable object for ydl
    params = {
        'continuedl': True,
        'quiet': True,
        'noprogress': True,
        'ratelimit': None,
        'retries': 0,
        'nopart': False,
        'test': False,
    }
    downloader = HttpQuietDownloader(ydl, params)
    assert downloader.ydl == ydl
    assert downloader.params == params
```

# Generated at 2024-06-04 21:44:00.700461
```python
    ydl = None  # Mock or create a suitable object for ydl
    params = {
        'ratelimit': None,
        'retries': 10,
        'nopart': False,
        'test': False,
        'updatetime': True,
        'keep_fragments': False,
    }
    fragment_fd = FragmentFD(ydl, params)
    assert fragment_fd.ydl == ydl
    assert fragment_fd.params == params
    assert fragment_fd.params['ratelimit'] is None
    assert fragment_fd.params['retries'] == 10
    assert fragment_fd.params['nopart'] is False
    assert fragment_fd.params['test'] is False
    assert fragment_fd.params['updatetime'] is True
    assert fragment_fd.params['keep_fragments'] is False
```

# Generated at 2024-06-04 21:44:02.932293
```python
    ydl = None  # Mock or create a suitable object for ydl if necessary
    params = {
        'continuedl': True,
        'quiet': True,
        'noprogress': True,
        'ratelimit': None,
        'retries': 0,
        'nopart': False,
        'test': False,
    }
    downloader = HttpQuietDownloader(ydl, params)
    assert downloader.ydl == ydl
    assert downloader.params == params
```

# Generated at 2024-06-04 21:44:07.184534
```python
    ydl = None  # Mock or create a suitable object for ydl
    params = {
        'ratelimit': None,
        'retries': 10,
        'nopart': False,
        'test': False,
        'updatetime': True,
        'keep_fragments': False,
    }
    fragment_fd = FragmentFD(ydl, params)
    assert fragment_fd.ydl == ydl
    assert fragment_fd.params == params
```

# Generated at 2024-06-04 21:44:10.968971
```python
    ydl = None  # Mock or create a suitable object for ydl
    params = {
        'ratelimit': None,
        'retries': 10,
        'nopart': False,
        'test': False,
        'updatetime': True,
        'keep_fragments': False,
    }
    fragment_fd = FragmentFD(ydl, params)
    assert fragment_fd.ydl == ydl
    assert fragment_fd.params == params
```