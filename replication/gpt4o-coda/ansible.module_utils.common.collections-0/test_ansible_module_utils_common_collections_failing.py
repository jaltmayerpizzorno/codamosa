# Automatically generated by Pynguin.
import ansible.module_utils.common.collections as module_0

def test_case_0():
    try:
        immutable_dict_0 = module_0.ImmutableDict()
        bool_0 = False
        var_0 = immutable_dict_0.__getitem__(bool_0)
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = 2161
        var_0 = module_0.is_string(int_0)
        immutable_dict_0 = module_0.ImmutableDict()
        var_1 = immutable_dict_0.__len__()
        var_2 = module_0.count(int_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bool_0 = False
        set_0 = {bool_0}
        immutable_dict_0 = module_0.ImmutableDict()
        var_0 = immutable_dict_0.union(set_0)
    except BaseException:
        pass

def test_case_3():
    try:
        float_0 = -2983.7
        var_0 = module_0.count(float_0)
    except BaseException:
        pass

def test_case_4():
    try:
        int_0 = -1072
        str_0 = 'qxbM6#I85u1w'
        str_1 = ''
        dict_0 = {str_1: str_0}
        immutable_dict_0 = module_0.ImmutableDict(**dict_0)
        var_0 = module_0.count(immutable_dict_0)
        immutable_dict_1 = module_0.ImmutableDict(**dict_0)
        list_0 = [int_0, str_0]
        immutable_dict_2 = module_0.ImmutableDict(*list_0)
    except BaseException:
        pass

def test_case_5():
    try:
        immutable_dict_0 = module_0.ImmutableDict()
        var_0 = immutable_dict_0.__hash__()
        dict_0 = {}
        var_1 = immutable_dict_0.__eq__(dict_0)
        var_2 = module_0.is_string(immutable_dict_0)
        var_3 = immutable_dict_0.__hash__()
        var_4 = immutable_dict_0.__repr__()
        var_5 = immutable_dict_0.difference(immutable_dict_0)
        int_0 = 8865596023373060803
        var_6 = immutable_dict_0.__eq__(int_0)
        var_7 = immutable_dict_0.__hash__()
        var_8 = immutable_dict_0.__repr__()
        var_9 = immutable_dict_0.__iter__()
        bool_0 = True
        set_0 = {bool_0, bool_0, bool_0, bool_0}
        var_10 = module_0.count(set_0)
        var_11 = immutable_dict_0.__len__()
        str_0 = '2'
        var_12 = module_0.is_sequence(dict_0, int_0)
        var_13 = module_0.count(str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'Failed to get permanent hostname rc=%d, out=%s, err=%s'
        bool_0 = False
        dict_0 = {bool_0: bool_0, str_0: str_0, str_0: str_0}
        dict_1 = {str_0: str_0}
        immutable_dict_0 = module_0.ImmutableDict(**dict_1)
        var_0 = immutable_dict_0.difference(dict_0)
        var_1 = module_0.count(bool_0)
    except BaseException:
        pass

def test_case_7():
    try:
        immutable_dict_0 = module_0.ImmutableDict()
        var_0 = immutable_dict_0.__hash__()
        bytes_0 = b'\x02\xc5\x16*\xc3\xc9^\x97!0\xc2\x03#'
        var_1 = module_0.is_string(bytes_0)
        dict_0 = {}
        var_2 = immutable_dict_0.__eq__(dict_0)
        var_3 = module_0.is_string(immutable_dict_0)
        bool_0 = False
        tuple_0 = (bool_0,)
        str_0 = '`Lw^~C[{'
        var_4 = module_0.is_sequence(str_0)
        var_5 = immutable_dict_0.__iter__()
        var_6 = module_0.is_iterable(immutable_dict_0)
        var_7 = immutable_dict_0.difference(immutable_dict_0)
        bool_1 = False
        int_0 = 8865596023373060803
        var_8 = immutable_dict_0.__eq__(int_0)
        var_9 = immutable_dict_0.__hash__()
        var_10 = module_0.is_sequence(tuple_0, bool_1)
        var_11 = immutable_dict_0.__repr__()
        bool_2 = True
        set_0 = {bool_2, bool_2, bool_2, bool_2}
        var_12 = immutable_dict_0.union(immutable_dict_0)
        var_13 = module_0.count(set_0)
        var_14 = immutable_dict_0.__len__()
        var_15 = immutable_dict_0.__repr__()
        immutable_dict_1 = module_0.ImmutableDict()
        bool_3 = False
        var_16 = module_0.count(bool_3)
    except BaseException:
        pass

def test_case_8():
    try:
        bytes_0 = b'\xa4\xc8\x01\xa9%='
        immutable_dict_0 = module_0.ImmutableDict()
        list_0 = [immutable_dict_0, bytes_0]
        var_0 = module_0.is_iterable(bytes_0, list_0)
        immutable_dict_1 = module_0.ImmutableDict()
        var_1 = immutable_dict_1.__hash__()
        dict_0 = {}
        var_2 = immutable_dict_1.__eq__(dict_0)
        var_3 = module_0.is_string(immutable_dict_1)
        bool_0 = False
        tuple_0 = (bool_0,)
        var_4 = module_0.is_iterable(immutable_dict_1)
        var_5 = immutable_dict_1.difference(immutable_dict_1)
        int_0 = 8865596023373060803
        var_6 = immutable_dict_1.__eq__(int_0)
        var_7 = immutable_dict_1.__hash__()
        var_8 = module_0.is_sequence(tuple_0, bool_0)
        var_9 = immutable_dict_1.__repr__()
        bool_1 = True
        set_0 = {bool_1, bool_1, bool_1, bool_1}
        var_10 = module_0.count(set_0)
        var_11 = immutable_dict_1.__len__()
        list_1 = None
        var_12 = module_0.is_iterable(list_1)
        var_13 = immutable_dict_1.__repr__()
        immutable_dict_2 = module_0.ImmutableDict()
        var_14 = module_0.count(bool_1)
    except BaseException:
        pass