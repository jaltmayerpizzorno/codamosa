# Automatically generated by Pynguin.
import ansible.module_utils.facts.network.sunos as module_0

def test_case_0():
    try:
        str_0 = 'e;D2Az_It!'
        int_0 = -485
        str_1 = 'l44bj"(<.p'
        sun_o_s_network_0 = module_0.SunOSNetwork(int_0, str_1)
        var_0 = sun_o_s_network_0.get_interfaces_info(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bool_0 = False
        sun_o_s_network_0 = module_0.SunOSNetwork(bool_0)
        sun_o_s_network_1 = module_0.SunOSNetwork(sun_o_s_network_0)
        str_0 = 'K#5'
        tuple_0 = (str_0,)
        list_0 = [sun_o_s_network_1, tuple_0]
        sun_o_s_network_2 = module_0.SunOSNetwork(list_0)
        sun_o_s_network_3 = module_0.SunOSNetwork(tuple_0)
        set_0 = {sun_o_s_network_2}
        sun_o_s_network_collector_0 = module_0.SunOSNetworkCollector(set_0)
        bool_1 = True
        sun_o_s_network_collector_1 = module_0.SunOSNetworkCollector(sun_o_s_network_collector_0, bool_1)
        str_1 = '&j)4'
        int_0 = -2632
        str_2 = '\\1A2M(Nqk)4$"aj'
        var_0 = sun_o_s_network_0.parse_interface_line(str_1, int_0, str_2)
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b'\xd2\xbc\x86s\xf9so*\xf8\x9f\xd8\n\xa9'
        sun_o_s_network_0 = module_0.SunOSNetwork(bytes_0)
        int_0 = 962
        float_0 = 150.38
        set_0 = set()
        var_0 = sun_o_s_network_0.parse_ether_line(int_0, float_0, set_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '7(Kmo:hsqh)e@\x0c'
        sun_o_s_network_collector_0 = None
        str_1 = '+z:!%'
        bool_0 = False
        dict_0 = {}
        str_2 = 'UFLZ]X:[X9XV%n'
        sun_o_s_network_0 = module_0.SunOSNetwork(dict_0, str_2)
        str_3 = '=Bd'
        set_0 = {str_2, str_3, str_3}
        tuple_0 = (sun_o_s_network_0, str_3, set_0)
        list_0 = [tuple_0]
        sun_o_s_network_1 = module_0.SunOSNetwork(bool_0, list_0)
        var_0 = sun_o_s_network_1.parse_ether_line(str_0, sun_o_s_network_collector_0, str_1)
    except BaseException:
        pass