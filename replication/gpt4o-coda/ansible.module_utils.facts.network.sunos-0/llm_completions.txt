

# Generated at 2024-05-31 04:23:00.159629
```python
    sunos_network = SunOSNetwork(module=None)
    ifconfig_output = """
    lo0: flags=2001000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv4> mtu 8232 index 1
            inet 127.0.0.1 netmask ff000000
    lo0: flags=2002000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv6> mtu 8252 index 1
            inet6 ::1/128
    net0: flags=1000843<UP,BROADCAST,RUNNING,MULTICAST,IPv4> mtu 1500 index 2
            inet 192.168.1.10 netmask ffffff00 broadcast 192.168.1.255
            ether 0:14:4f:ab:cd:ef
    net0: flags=20002000843<

# Generated at 2024-05-31 04:23:01.225869
```python
    collector = SunOSNetworkCollector()
    assert isinstance(collector, SunOSNetworkCollector)
    assert collector._platform == 'SunOS'
    assert collector._fact_class == SunOSNetwork
```

# Generated at 2024-05-31 04:23:04.723664
```python
    sunos_network = SunOSNetwork(module=None)
    ifconfig_output = """
    lo0: flags=2001000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv4> mtu 8232 index 1
        inet 127.0.0.1 netmask ff000000
    lo0: flags=2002000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv6> mtu 8252 index 1
        inet6 ::1/128
    net0: flags=1000843<UP,BROADCAST,RUNNING,MULTICAST,IPv4> mtu 1500 index 2
        inet 192.168.1.10 netmask ffffff00 broadcast 192.168.1.255
        ether 0:14:4f:ab:cd:ef
    net0: flags=20002000843<

# Generated at 2024-05-31 04:23:05.774709
```python
    collector = SunOSNetworkCollector()
    assert isinstance(collector, SunOSNetworkCollector)
    assert collector._platform == 'SunOS'
    assert collector._fact_class == SunOSNetwork
```

# Generated at 2024-05-31 04:23:06.722057
```python
    collector = SunOSNetworkCollector()
    assert isinstance(collector, SunOSNetworkCollector)
    assert collector._platform == 'SunOS'
    assert collector._fact_class == SunOSNetwork
```

# Generated at 2024-05-31 04:23:10.287865
```python
    sunos_network = SunOSNetwork(module=None)
    ifconfig_output = """
    lo0: flags=2001000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv4> mtu 8232 index 1
            inet 127.0.0.1 netmask ff000000
    lo0: flags=2002000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv6> mtu 8252 index 1
            inet6 ::1/128
    net0: flags=1000843<UP,BROADCAST,RUNNING,MULTICAST,IPv4> mtu 1500 index 2
            inet 192.168.1.10 netmask ffffff00 broadcast 192.168.1.255
            ether 0:1:2:d:e:f
    net0: flags=2000843<UP,BROADCAST,R

# Generated at 2024-05-31 04:23:14.076050
```python
    module = type('obj', (object,), {'run_command': lambda self, x: (0, 'lo0: flags=2001000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv4> mtu 8232\nlo0: flags=2001000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv6> mtu 8252\n', '')})
    sunos_network = SunOSNetwork(module)
    interfaces, ips = sunos_network.get_interfaces_info('/sbin/ifconfig')
    
    assert 'lo0' in interfaces
    assert 'ipv4' in interfaces['lo0']
    assert 'ipv6' in interfaces['lo0']
    assert interfaces['lo0']['ipv4'][0]['mtu'] == '8232'
    assert interfaces['lo0']['ipv6'][0]['mtu'] == '8252'
    assert interfaces['lo0']['

# Generated at 2024-05-31 04:23:17.405866
```python
    sunos_network = SunOSNetwork(module=None)
    ifconfig_output = """
    lo0: flags=2001000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv4> mtu 8232 index 1
            inet 127.0.0.1 netmask ff000000
    lo0: flags=2002000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv6> mtu 8252 index 1
            inet6 ::1/128
    net0: flags=1000843<UP,BROADCAST,RUNNING,MULTICAST,IPv4> mtu 1500 index 2
            inet 192.168.1.10 netmask ffffff00 broadcast 192.168.1.255
            ether 0:1:2:d:e:f
    net0: flags=2000843<UP,BROADCAST,R

# Generated at 2024-05-31 04:23:20.827991
```python
    module = type('obj', (object,), {'run_command': lambda self, x: (0, 'lo0: flags=2001000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv4> mtu 8232\nlo0: flags=2001000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv6> mtu 8252\n', '')})
    sunos_network = SunOSNetwork(module)
    interfaces, ips = sunos_network.get_interfaces_info('/sbin/ifconfig')
    
    assert 'lo0' in interfaces
    assert 'ipv4' in interfaces['lo0']
    assert 'ipv6' in interfaces['lo0']
    assert interfaces['lo0']['ipv4'][0]['flags'] == '2001000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv4>'
    assert interfaces['lo0']['ipv4'][

# Generated at 2024-05-31 04:23:21.749910
```python
    collector = SunOSNetworkCollector()
    assert isinstance(collector, SunOSNetworkCollector)
    assert collector._platform == 'SunOS'
    assert collector._fact_class == SunOSNetwork
```

# Generated at 2024-05-31 04:23:39.478771
```python
    module = type('obj', (object,), {'run_command': lambda self, x: (0, 'lo0: flags=2001000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv4> mtu 8232\nlo0: flags=2001000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv6> mtu 8252\n', '')})
    sunos_network = SunOSNetwork(module)
    interfaces, ips = sunos_network.get_interfaces_info('/sbin/ifconfig')
    
    assert 'lo0' in interfaces
    assert 'ipv4' in interfaces['lo0']
    assert 'ipv6' in interfaces['lo0']
    assert interfaces['lo0']['ipv4'][0]['mtu'] == '8232'
    assert interfaces['lo0']['ipv6'][0]['mtu'] == '8252'
    assert interfaces['lo0']['

# Generated at 2024-05-31 04:23:40.536862
```python
    collector = SunOSNetworkCollector()
    assert isinstance(collector, SunOSNetworkCollector)
    assert collector._platform == 'SunOS'
    assert collector._fact_class == SunOSNetwork
```

# Generated at 2024-05-31 04:23:41.774871
```python
    collector = SunOSNetworkCollector()
    assert isinstance(collector, SunOSNetworkCollector)
    assert collector._platform == 'SunOS'
    assert collector._fact_class == SunOSNetwork
```

# Generated at 2024-05-31 04:23:43.981650
```python
    collector = SunOSNetworkCollector()
    assert isinstance(collector, SunOSNetworkCollector)
    assert collector._platform == 'SunOS'
    assert collector._fact_class == SunOSNetwork
```

# Generated at 2024-05-31 04:23:45.069216
```python
    collector = SunOSNetworkCollector()
    assert isinstance(collector, SunOSNetworkCollector)
    assert collector._platform == 'SunOS'
    assert collector._fact_class == SunOSNetwork
```

# Generated at 2024-05-31 04:23:48.270477
```python
    module = type('obj', (object,), {'run_command': lambda self, x: (0, 'lo0: flags=2001000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv4> mtu 8232\nlo0: flags=2001000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv6> mtu 8252\n', '')})
    sunos_network = SunOSNetwork(module)
    interfaces, ips = sunos_network.get_interfaces_info('/sbin/ifconfig')
    
    assert 'lo0' in interfaces
    assert 'ipv4' in interfaces['lo0']
    assert 'ipv6' in interfaces['lo0']
    assert interfaces['lo0']['ipv4'][0]['flags'] == '2001000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv4>'
    assert interfaces['lo0']['ipv4'][

# Generated at 2024-05-31 04:23:49.573679
```python
    collector = SunOSNetworkCollector()
    assert isinstance(collector, SunOSNetworkCollector)
    assert collector._platform == 'SunOS'
    assert collector._fact_class == SunOSNetwork
```

# Generated at 2024-05-31 04:23:50.616869
```python
    collector = SunOSNetworkCollector()
    assert isinstance(collector, SunOSNetworkCollector)
    assert collector._platform == 'SunOS'
    assert collector._fact_class == SunOSNetwork
```

# Generated at 2024-05-31 04:23:53.666164
```python
    sunos_network = SunOSNetwork(module=None)
    ifconfig_output = """
    lo0: flags=2001000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv4> mtu 8232 index 1
            inet 127.0.0.1 netmask ff000000
    lo0: flags=2002000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv6> mtu 8252 index 1
            inet6 ::1/128
    net0: flags=1000843<UP,BROADCAST,RUNNING,MULTICAST,IPv4> mtu 1500 index 2
            inet 192.168.1.10 netmask ffffff00 broadcast 192.168.1.255
            ether 0:14:4f:ab:cd:ef
    net0: flags=20002000843<

# Generated at 2024-05-31 04:23:56.749981
```python
    module = type('obj', (object,), {'run_command': lambda self, x: (0, 'lo0: flags=2001000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv4> mtu 8232\nlo0: flags=2001000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv6> mtu 8252\n', '')})
    sunos_network = SunOSNetwork(module)
    interfaces, ips = sunos_network.get_interfaces_info('/sbin/ifconfig')
    
    assert 'lo0' in interfaces
    assert 'ipv4' in interfaces['lo0']
    assert 'ipv6' in interfaces['lo0']
    assert interfaces['lo0']['ipv4'][0]['mtu'] == '8232'
    assert interfaces['lo0']['ipv6'][0]['mtu'] == '8252'
    assert interfaces['lo0']['

# Generated at 2024-05-31 04:24:25.088872
```python
    collector = SunOSNetworkCollector()
    assert isinstance(collector, SunOSNetworkCollector)
    assert collector._platform == 'SunOS'
    assert collector._fact_class == SunOSNetwork
```

# Generated at 2024-05-31 04:24:28.538394
```python
    sunos_network = SunOSNetwork(module=None)
    ifconfig_output = """
    lo0: flags=2001000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv4> mtu 8232 index 1
            inet 127.0.0.1 netmask ff000000
    lo0: flags=2002000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv6> mtu 8252 index 1
            inet6 ::1/128
    net0: flags=1000843<UP,BROADCAST,RUNNING,MULTICAST,IPv4> mtu 1500 index 2
            inet 192.168.1.10 netmask ffffff00 broadcast 192.168.1.255
            ether 0:1:2:d:e:f
    net0: flags=20002000843<UP,BROADCAST

# Generated at 2024-05-31 04:24:29.595510
```python
    collector = SunOSNetworkCollector()
    assert isinstance(collector, SunOSNetworkCollector)
    assert collector._platform == 'SunOS'
    assert collector._fact_class == SunOSNetwork
```

# Generated at 2024-05-31 04:24:30.606027
```python
    collector = SunOSNetworkCollector()
    assert isinstance(collector, SunOSNetworkCollector)
    assert collector._platform == 'SunOS'
    assert collector._fact_class == SunOSNetwork
```

# Generated at 2024-05-31 04:24:34.111260
```python
    sunos_network = SunOSNetwork()
    interfaces = {}
    current_if = {}

    # Test case 1: New interface
    words = ['net0:', 'flags=1000843<UP,BROADCAST,RUNNING,MULTICAST,IPv4>', 'mtu', '1500']
    result = sunos_network.parse_interface_line(words, current_if, interfaces)
    assert result['device'] == 'net0'
    assert result['ipv4'][0]['flags'] == '1000843<UP,BROADCAST,RUNNING,MULTICAST,IPv4>'
    assert result['ipv4'][0]['mtu'] == '1500'
    assert result['type'] == 'unknown'
    assert result['macaddress'] == 'unknown'

    # Test case 2: Existing interface with IPv6
    words = ['net0:', 'flags=1000843<UP,BROADCAST,RUNNING,M

# Generated at 2024-05-31 04:24:36.956032
```python
    sunos_network = SunOSNetwork()
    interfaces = {}
    current_if = {}

    # Test case 1: New interface
    words = ['net0:', 'flags=1000843<UP,BROADCAST,RUNNING,MULTICAST,IPv4>', 'mtu', '1500']
    result = sunos_network.parse_interface_line(words, current_if, interfaces)
    assert result['device'] == 'net0'
    assert result['ipv4'][0]['flags'] == '1000843<UP,BROADCAST,RUNNING,MULTICAST,IPv4>'
    assert result['ipv4'][0]['mtu'] == '1500'
    assert result['type'] == 'unknown'
    assert result['macaddress'] == 'unknown'

    # Test case 2: Existing interface with IPv6
    words = ['net0:', 'flags=1000843<UP,BROADCAST,RUNNING,M

# Generated at 2024-05-31 04:24:39.967828
```python
    sunos_network = SunOSNetwork(module=None)
    ifconfig_output = """
lo0: flags=2001000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv4> mtu 8232 index 1
        inet 127.0.0.1 netmask ff000000
lo0: flags=2002000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv6> mtu 8252 index 1
        inet6 ::1/128
e1000g0: flags=1000843<UP,BROADCAST,RUNNING,MULTICAST,IPv4> mtu 1500 index 2
        inet 192.168.1.100 netmask ffffff00 broadcast 192.168.1.255
        ether 0:14:4f:ab:cd:ef
e1000g0: flags=2000843

# Generated at 2024-05-31 04:24:41.083644
```python
    collector = SunOSNetworkCollector()
    assert isinstance(collector, SunOSNetworkCollector)
    assert collector._platform == 'SunOS'
    assert collector._fact_class == SunOSNetwork
```

# Generated at 2024-05-31 04:24:42.275540
```python
    collector = SunOSNetworkCollector()
    assert isinstance(collector, SunOSNetworkCollector)
    assert collector._platform == 'SunOS'
    assert collector._fact_class == SunOSNetwork
```

# Generated at 2024-05-31 04:24:43.608074
```python
    collector = SunOSNetworkCollector()
    assert isinstance(collector, SunOSNetworkCollector)
    assert collector._platform == 'SunOS'
    assert collector._fact_class == SunOSNetwork
```

# Generated at 2024-05-31 04:25:13.002141
```python
    module = type('obj', (object,), {'run_command': lambda self, x: (0, 'lo0: flags=2001000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv4> mtu 8232\nlo0: flags=2001000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv6> mtu 8252\n', '')})
    sunos_network = SunOSNetwork(module)
    interfaces, ips = sunos_network.get_interfaces_info('/sbin/ifconfig')
    
    expected_interfaces = {
        'lo0': {
            'device': 'lo0',
            'ipv4': [{'flags': '2001000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv4>', 'mtu': '8232'}],
            'ipv6': [{'flags': '2001000849<UP,LOOPBACK,RUNNING

# Generated at 2024-05-31 04:25:14.329759
```python
    collector = SunOSNetworkCollector()
    assert isinstance(collector, SunOSNetworkCollector)
    assert collector._platform == 'SunOS'
    assert collector._fact_class == SunOSNetwork
```

# Generated at 2024-05-31 04:25:17.159052
```python
    module = type('obj', (object,), {'run_command': lambda self, x: (0, 'lo0: flags=2001000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv4> mtu 8232\nlo0: flags=2001000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv6> mtu 8252\n', '')})
    sunos_network = SunOSNetwork(module)
    interfaces, ips = sunos_network.get_interfaces_info('/sbin/ifconfig')
    
    assert 'lo0' in interfaces
    assert 'ipv4' in interfaces['lo0']
    assert 'ipv6' in interfaces['lo0']
    assert interfaces['lo0']['ipv4'][0]['mtu'] == '8232'
    assert interfaces['lo0']['ipv6'][0]['mtu'] == '8252'
    assert interfaces['lo0']['

# Generated at 2024-05-31 04:25:18.224744
```python
    collector = SunOSNetworkCollector()
    assert isinstance(collector, SunOSNetworkCollector)
    assert collector._platform == 'SunOS'
    assert collector._fact_class == SunOSNetwork
```

# Generated at 2024-05-31 04:25:20.594064
```python
    sunos_network = SunOSNetwork()
    interfaces = {}
    current_if = {}

    # Test case 1: New interface
    words = ['net0:', 'flags=1000843<UP,BROADCAST,RUNNING,MULTICAST,IPv4>', 'mtu', '1500']
    result = sunos_network.parse_interface_line(words, current_if, interfaces)
    assert result['device'] == 'net0'
    assert result['ipv4'][0]['flags'] == '1000843<UP,BROADCAST,RUNNING,MULTICAST,IPv4>'
    assert result['ipv4'][0]['mtu'] == '1500'
    assert result['type'] == 'unknown'
    assert result['macaddress'] == 'unknown'

    # Test case 2: Existing interface with IPv6
    words = ['net0:', 'flags=1000843<UP,BROADCAST,RUNNING,M

# Generated at 2024-05-31 04:25:24.509980
```python
    module = type('obj', (object,), {'run_command': lambda self, x: (0, 'lo0: flags=2001000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv4> mtu 8232\nlo0: flags=2001000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv6> mtu 8252\n', '')})
    sunos_network = SunOSNetwork(module)
    interfaces, ips = sunos_network.get_interfaces_info('/sbin/ifconfig')
    
    assert 'lo0' in interfaces
    assert 'ipv4' in interfaces['lo0']
    assert 'ipv6' in interfaces['lo0']
    assert interfaces['lo0']['ipv4'][0]['mtu'] == '8232'
    assert interfaces['lo0']['ipv6'][0]['mtu'] == '8252'
    assert interfaces['lo0']['

# Generated at 2024-05-31 04:25:25.825206
```python
    collector = SunOSNetworkCollector()
    assert isinstance(collector, SunOSNetworkCollector)
    assert collector._platform == 'SunOS'
    assert collector._fact_class == SunOSNetwork
```

# Generated at 2024-05-31 04:25:27.092791
```python
    collector = SunOSNetworkCollector()
    assert isinstance(collector, SunOSNetworkCollector)
    assert collector._platform == 'SunOS'
    assert collector._fact_class == SunOSNetwork
```

# Generated at 2024-05-31 04:25:30.887808
```python
    module = type('obj', (object,), {'run_command': lambda self, x: (0, 'lo0: flags=2001000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv4> mtu 8232\nlo0: flags=2001000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv6> mtu 8252\n', '')})
    sunos_network = SunOSNetwork(module)
    interfaces, ips = sunos_network.get_interfaces_info('/sbin/ifconfig')
    
    assert 'lo0' in interfaces
    assert 'ipv4' in interfaces['lo0']
    assert 'ipv6' in interfaces['lo0']
    assert interfaces['lo0']['ipv4'][0]['flags'] == '2001000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv4>'
    assert interfaces['lo0']['ipv4'][

# Generated at 2024-05-31 04:25:32.350831
```python
    collector = SunOSNetworkCollector()
    assert isinstance(collector, SunOSNetworkCollector)
    assert collector._platform == 'SunOS'
    assert collector._fact_class == SunOSNetwork
```

# Generated at 2024-05-31 04:26:18.922716
```python
    collector = SunOSNetworkCollector()
    assert isinstance(collector, SunOSNetworkCollector)
    assert collector._platform == 'SunOS'
    assert collector._fact_class == SunOSNetwork
```

# Generated at 2024-05-31 04:26:19.909953
```python
    collector = SunOSNetworkCollector()
    assert isinstance(collector, SunOSNetworkCollector)
    assert collector._platform == 'SunOS'
    assert collector._fact_class == SunOSNetwork
```

# Generated at 2024-05-31 04:26:23.875829
```python
    module = type('obj', (object,), {'run_command': lambda self, x: (0, 'lo0: flags=2001000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv4> mtu 8232\nlo0: flags=2001000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv6> mtu 8252\n', '')})
    sunos_network = SunOSNetwork(module)
    interfaces, ips = sunos_network.get_interfaces_info('/sbin/ifconfig')
    
    assert 'lo0' in interfaces
    assert 'ipv4' in interfaces['lo0']
    assert 'ipv6' in interfaces['lo0']
    assert interfaces['lo0']['ipv4'][0]['mtu'] == '8232'
    assert interfaces['lo0']['ipv6'][0]['mtu'] == '8252'
    assert interfaces['lo0']['

# Generated at 2024-05-31 04:26:27.084307
```python
    module = type('obj', (object,), {'run_command': lambda self, x: (0, 'lo0: flags=2001000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv4> mtu 8232\nlo0: flags=2001000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv6> mtu 8252\n', '')})
    sunos_network = SunOSNetwork(module)
    interfaces, ips = sunos_network.get_interfaces_info('/sbin/ifconfig')
    
    assert 'lo0' in interfaces
    assert 'ipv4' in interfaces['lo0']
    assert 'ipv6' in interfaces['lo0']
    assert interfaces['lo0']['ipv4'][0]['mtu'] == '8232'
    assert interfaces['lo0']['ipv6'][0]['mtu'] == '8252'
    assert interfaces['lo0']['

# Generated at 2024-05-31 04:26:28.121437
```python
    collector = SunOSNetworkCollector()
    assert isinstance(collector, SunOSNetworkCollector)
    assert collector._platform == 'SunOS'
    assert collector._fact_class == SunOSNetwork
```

# Generated at 2024-05-31 04:26:29.242886
```python
    collector = SunOSNetworkCollector()
    assert isinstance(collector, SunOSNetworkCollector)
    assert collector._platform == 'SunOS'
    assert collector._fact_class == SunOSNetwork
```

# Generated at 2024-05-31 04:26:30.231764
```python
    collector = SunOSNetworkCollector()
    assert isinstance(collector, SunOSNetworkCollector)
    assert collector._platform == 'SunOS'
    assert collector._fact_class == SunOSNetwork
```

# Generated at 2024-05-31 04:26:31.218022
```python
    collector = SunOSNetworkCollector()
    assert isinstance(collector, SunOSNetworkCollector)
    assert collector._platform == 'SunOS'
    assert collector._fact_class == SunOSNetwork
```

# Generated at 2024-05-31 04:26:35.779533
```python
    module = type('obj', (object,), {'run_command': lambda self, x: (0, 'lo0: flags=2001000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv4> mtu 8232\nlo0: flags=2001000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv6> mtu 8252\n', '')})
    sunos_network = SunOSNetwork(module)
    interfaces, ips = sunos_network.get_interfaces_info('/sbin/ifconfig')
    
    assert 'lo0' in interfaces
    assert 'ipv4' in interfaces['lo0']
    assert 'ipv6' in interfaces['lo0']
    assert interfaces['lo0']['ipv4'][0]['mtu'] == '8232'
    assert interfaces['lo0']['ipv6'][0]['mtu'] == '8252'
    assert interfaces['lo0']['

# Generated at 2024-05-31 04:26:38.486257
```python
    module = type('obj', (object,), {'run_command': lambda self, x: (0, 'lo0: flags=2001000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv4> mtu 8232\nlo0: flags=2001000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv6> mtu 8252\n', '')})
    sunos_network = SunOSNetwork(module)
    interfaces, ips = sunos_network.get_interfaces_info('/sbin/ifconfig')
    
    assert 'lo0' in interfaces
    assert 'ipv4' in interfaces['lo0']
    assert 'ipv6' in interfaces['lo0']
    assert interfaces['lo0']['ipv4'][0]['mtu'] == '8232'
    assert interfaces['lo0']['ipv6'][0]['mtu'] == '8252'
    assert interfaces['lo0']['

# Generated at 2024-05-31 04:27:53.671656
```python
    collector = SunOSNetworkCollector()
    assert isinstance(collector, SunOSNetworkCollector)
    assert collector._platform == 'SunOS'
    assert collector._fact_class == SunOSNetwork
```

# Generated at 2024-05-31 04:27:57.302666
```python
    module = type('obj', (object,), {'run_command': lambda self, x: (0, 'lo0: flags=2001000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv6> mtu 8252\nlo0: flags=2001000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv4> mtu 8252\nlo0: inet 127.0.0.1 netmask ff000000\nlo0: inet6 ::1/128\n', '')})
    sunos_network = SunOSNetwork(module)
    interfaces, ips = sunos_network.get_interfaces_info('/sbin/ifconfig')
    
    assert 'lo0' in interfaces
    assert interfaces['lo0']['device'] == 'lo0'
    assert interfaces['lo0']['type'] == 'loopback'
    assert len(interfaces['lo0']['ipv4']) == 1

# Generated at 2024-05-31 04:28:00.435581
```python
    module = type('obj', (object,), {'run_command': lambda self, x: (0, 'lo0: flags=2001000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv4> mtu 8232\nlo0: flags=2001000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv6> mtu 8252\n', '')})
    sunos_network = SunOSNetwork(module)
    interfaces, ips = sunos_network.get_interfaces_info('/sbin/ifconfig')
    
    assert 'lo0' in interfaces
    assert 'ipv4' in interfaces['lo0']
    assert 'ipv6' in interfaces['lo0']
    assert interfaces['lo0']['ipv4'][0]['mtu'] == '8232'
    assert interfaces['lo0']['ipv6'][0]['mtu'] == '8252'
    assert interfaces['lo0']['

# Generated at 2024-05-31 04:28:04.681520
```python
    module = type('obj', (object,), {'run_command': lambda self, x: (0, 'lo0: flags=2001000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv4> mtu 8232\nlo0: flags=2001000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv6> mtu 8252\n', '')})
    sunos_network = SunOSNetwork(module)
    interfaces, ips = sunos_network.get_interfaces_info('/sbin/ifconfig')
    
    assert 'lo0' in interfaces
    assert 'ipv4' in interfaces['lo0']
    assert 'ipv6' in interfaces['lo0']
    assert interfaces['lo0']['ipv4'][0]['mtu'] == '8232'
    assert interfaces['lo0']['ipv6'][0]['mtu'] == '8252'
    assert interfaces['lo0']['

# Generated at 2024-05-31 04:28:10.983805
```python
    sunos_network = SunOSNetwork()
    interfaces = {}
    current_if = {}

    # Test case 1: New interface
    words = ['net0:', 'flags=1000843<UP,BROADCAST,RUNNING,MULTICAST,IPv4>', 'mtu', '1500']
    result = sunos_network.parse_interface_line(words, current_if, interfaces)
    assert result['device'] == 'net0'
    assert result['ipv4'][0]['flags'] == '1000843<UP,BROADCAST,RUNNING,MULTICAST,IPv4>'
    assert result['ipv4'][0]['mtu'] == '1500'
    assert result['type'] == 'unknown'
    assert result['macaddress'] == 'unknown'

    # Test case 2: Existing interface with IPv6
    interfaces = {'net0': result}
    words = ['net0:', 'flags=1000843

# Generated at 2024-05-31 04:28:13.894567
```python
    module = type('obj', (object,), {'run_command': lambda self, x: (0, 'lo0: flags=2001000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv4> mtu 8232\nlo0: flags=2001000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv6> mtu 8252\n', '')})
    sunos_network = SunOSNetwork(module)
    interfaces, ips = sunos_network.get_interfaces_info('/sbin/ifconfig')
    
    assert 'lo0' in interfaces
    assert 'ipv4' in interfaces['lo0']
    assert 'ipv6' in interfaces['lo0']
    assert interfaces['lo0']['ipv4'][0]['mtu'] == '8232'
    assert interfaces['lo0']['ipv6'][0]['mtu'] == '8252'
    assert interfaces['lo0']['

# Generated at 2024-05-31 04:28:16.816699
```python
    sunos_network = SunOSNetwork(module=None)
    ifconfig_output = """
lo0: flags=2001000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv4> mtu 8232 index 1
        inet 127.0.0.1 netmask ff000000
lo0: flags=2002000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv6> mtu 8252 index 1
        inet6 ::1/128
e1000g0: flags=1000843<UP,BROADCAST,RUNNING,MULTICAST,IPv4> mtu 1500 index 2
        inet 192.168.1.10 netmask ffffff00 broadcast 192.168.1.255
        ether 0:14:4f:ab:cd:ef
e1000g0: flags=2000843

# Generated at 2024-05-31 04:28:20.168816
```python
    module = type('obj', (object,), {'run_command': lambda self, x: (0, 'lo0: flags=2001000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv4> mtu 8232\nlo0: flags=2001000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv6> mtu 8252\n', '')})
    sunos_network = SunOSNetwork(module)
    interfaces, ips = sunos_network.get_interfaces_info('/sbin/ifconfig')
    
    assert 'lo0' in interfaces
    assert 'ipv4' in interfaces['lo0']
    assert 'ipv6' in interfaces['lo0']
    assert interfaces['lo0']['ipv4'][0]['mtu'] == '8232'
    assert interfaces['lo0']['ipv6'][0]['mtu'] == '8252'
    assert interfaces['lo0']['

# Generated at 2024-05-31 04:28:23.654069
```python
    sunos_network = SunOSNetwork(module=None)
    ifconfig_output = """
    lo0: flags=2001000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv4> mtu 8232 index 1
            inet 127.0.0.1 netmask ff000000
    lo0: flags=2002000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv6> mtu 8252 index 1
            inet6 ::1/128
    net0: flags=1000843<UP,BROADCAST,RUNNING,MULTICAST,IPv4> mtu 1500 index 2
            inet 192.168.1.10 netmask ffffff00 broadcast 192.168.1.255
            ether 0:14:4f:ab:cd:ef
    net0: flags=20002000843<

# Generated at 2024-05-31 04:28:24.782350
```python
    collector = SunOSNetworkCollector()
    assert isinstance(collector, SunOSNetworkCollector)
    assert collector._platform == 'SunOS'
    assert collector._fact_class == SunOSNetwork
```

# Generated at 2024-05-31 04:31:03.069385
```python
    module = type('obj', (object,), {'run_command': lambda self, x: (0, 'lo0: flags=2001000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv6> mtu 8252\nlo0: flags=2001000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv4> mtu 8252\n', '')})
    sunos_network = SunOSNetwork(module)
    interfaces, ips = sunos_network.get_interfaces_info('/sbin/ifconfig')
    
    assert 'lo0' in interfaces
    assert 'ipv4' in interfaces['lo0']
    assert 'ipv6' in interfaces['lo0']
    assert interfaces['lo0']['ipv4'][0]['flags'] == '2001000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv4>'
    assert interfaces['lo0']['ipv6'][

# Generated at 2024-05-31 04:31:06.970886
```python
    sunos_network = SunOSNetwork(module=None)
    ifconfig_output = """
    lo0: flags=2001000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv4> mtu 8232 index 1
            inet 127.0.0.1 netmask ff000000
    lo0: flags=2002000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv6> mtu 8252 index 1
            inet6 ::1/128
    net0: flags=1000843<UP,BROADCAST,RUNNING,MULTICAST,IPv4> mtu 1500 index 2
            inet 192.168.1.10 netmask ffffff00 broadcast 192.168.1.255
            ether 0:14:4f:ab:cd:ef
    net0: flags=20002000843<

# Generated at 2024-05-31 04:31:09.712795
```python
    module = type('obj', (object,), {'run_command': lambda self, x: (0, 'lo0: flags=2001000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv4> mtu 8232\nlo0: flags=2001000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv6> mtu 8252\n', '')})
    sunos_network = SunOSNetwork(module)
    interfaces, ips = sunos_network.get_interfaces_info('/sbin/ifconfig')
    
    assert 'lo0' in interfaces
    assert 'ipv4' in interfaces['lo0']
    assert 'ipv6' in interfaces['lo0']
    assert interfaces['lo0']['ipv4'][0]['mtu'] == '8232'
    assert interfaces['lo0']['ipv6'][0]['mtu'] == '8252'
    assert interfaces['lo0']['

# Generated at 2024-05-31 04:31:12.528489
```python
    module = type('obj', (object,), {'run_command': lambda self, x: (0, 'lo0: flags=2001000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv4> mtu 8232\nlo0: flags=2001000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv6> mtu 8252\n', '')})
    sunos_network = SunOSNetwork(module)
    interfaces, ips = sunos_network.get_interfaces_info('/sbin/ifconfig')
    
    assert 'lo0' in interfaces
    assert 'ipv4' in interfaces['lo0']
    assert 'ipv6' in interfaces['lo0']
    assert interfaces['lo0']['ipv4'][0]['flags'] == '2001000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv4>'
    assert interfaces['lo0']['ipv4'][

# Generated at 2024-05-31 04:31:13.484049
```python
    collector = SunOSNetworkCollector()
    assert isinstance(collector, SunOSNetworkCollector)
    assert collector._platform == 'SunOS'
    assert collector._fact_class == SunOSNetwork
```

# Generated at 2024-05-31 04:31:16.794626
```python
    sunos_network = SunOSNetwork(module=None)
    ifconfig_output = """
    lo0: flags=2001000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv4> mtu 8232 index 1
        inet 127.0.0.1 netmask ff000000
    lo0: flags=2002000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv6> mtu 8252 index 1
        inet6 ::1/128
    net0: flags=1000843<UP,BROADCAST,RUNNING,MULTICAST,IPv4> mtu 1500 index 2
        inet 192.168.1.10 netmask ffffff00 broadcast 192.168.1.255
        ether 0:1:2:d:e:f
    net0: flags=2000843<UP,BROADCAST,R

# Generated at 2024-05-31 04:31:20.017431
```python
    module = type('obj', (object,), {'run_command': lambda self, x: (0, 'lo0: flags=2001000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv4> mtu 8232\nlo0: flags=2001000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv6> mtu 8252\n', '')})
    sunos_network = SunOSNetwork(module)
    interfaces, ips = sunos_network.get_interfaces_info('/sbin/ifconfig')
    
    assert 'lo0' in interfaces
    assert 'ipv4' in interfaces['lo0']
    assert 'ipv6' in interfaces['lo0']
    assert interfaces['lo0']['ipv4'][0]['mtu'] == '8232'
    assert interfaces['lo0']['ipv6'][0]['mtu'] == '8252'
    assert 'all_ipv4_addresses

# Generated at 2024-05-31 04:31:21.119419
```python
    collector = SunOSNetworkCollector()
    assert isinstance(collector, SunOSNetworkCollector)
    assert collector._platform == 'SunOS'
    assert collector._fact_class == SunOSNetwork
```

# Generated at 2024-05-31 04:31:22.124828
```python
    collector = SunOSNetworkCollector()
    assert isinstance(collector, SunOSNetworkCollector)
    assert collector._platform == 'SunOS'
    assert collector._fact_class == SunOSNetwork
```

# Generated at 2024-05-31 04:31:25.572924
```python
    sunos_network = SunOSNetwork(module=None)
    ifconfig_output = """
    lo0: flags=2001000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv4> mtu 8232 index 1
            inet 127.0.0.1 netmask ff000000
    lo0: flags=2002000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv6> mtu 8252 index 1
            inet6 ::1/128
    net0: flags=1000843<UP,BROADCAST,RUNNING,MULTICAST,IPv4> mtu 1500 index 2
            inet 192.168.1.10 netmask ffffff00 broadcast 192.168.1.255
            ether 0:14:4f:ab:cd:ef
    net0: flags=20002000843<