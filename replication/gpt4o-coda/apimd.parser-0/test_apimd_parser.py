# Automatically generated by Pynguin.
import ast as module_0
import apimd.parser as module_1

def test_case_0():
    pass

def test_case_1():
    str_0 = 'plb/Ink.o6c'
    bool_0 = False
    bool_1 = True
    list_0 = [str_0]
    constant_0 = module_0.Constant(*list_0)
    str_1 = None
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_1: str_1}
    resolver_0 = module_1.Resolver(str_0, dict_0, str_0)
    a_s_t_0 = resolver_0.visit_Constant(constant_0)
    str_2 = '\\4'
    dict_1 = {str_2: str_2, str_2: str_2, str_2: str_2}
    parser_0 = module_1.Parser(bool_0, bool_1, dict_1)

def test_case_2():
    str_0 = 'output to a specific directory'
    str_1 = module_1.parent(str_0)

def test_case_3():
    str_0 = 's8bQ0D\x0bO1{%vpICme'
    bool_0 = module_1.is_magic(str_0)

def test_case_4():
    str_0 = '~!2\x0b\tN'
    bool_0 = module_1.is_public_family(str_0)

def test_case_5():
    parser_0 = module_1.Parser()
    str_0 = 'dcC4kv_2*sJSK6'
    parser_0.parse(str_0, str_0)

def test_case_6():
    str_0 = 'Constants'
    str_1 = module_1.doctest(str_0)
    str_2 = module_1.code(str_1)

def test_case_7():
    str_0 = 'o]pr \tS"B6 XgHn'
    str_1 = module_1.doctest(str_0)

def test_case_8():
    parser_0 = module_1.Parser()

def test_case_9():
    parser_0 = module_1.Parser()
    str_0 = 'lxXzh\nYY3TR9{ZD/fT@'
    import_from_0 = module_0.ImportFrom()
    parser_0.imports(str_0, import_from_0)

def test_case_10():
    parser_0 = module_1.Parser()
    str_0 = 'lxXzh\nYY3TR9{ZD/fT@'
    import_from_0 = module_0.ImportFrom()
    list_0 = [str_0, import_from_0, str_0]
    ann_assign_0 = module_0.AnnAssign(*list_0)
    parser_0.globals(str_0, ann_assign_0)

def test_case_11():
    parser_0 = module_1.Parser()
    str_0 = 'dcC4kv_2*sJSK6'
    list_0 = []
    stmt_0 = None
    list_1 = [stmt_0, stmt_0, stmt_0]
    parser_0.class_api(str_0, str_0, list_0, list_1)

def test_case_12():
    str_0 = 'E/'
    expr_0 = module_0.expr()
    list_0 = [expr_0, expr_0]
    resolver_0 = None
    int_0 = None
    dict_0 = None
    dict_1 = {str_0: str_0, str_0: str_0, str_0: str_0}
    parser_0 = module_1.Parser(int_0, dict_0, dict_1)
    list_1 = [resolver_0, list_0, parser_0]
    bool_0 = True
    str_1 = 'qE3?zsf"'
    set_0 = {str_1, str_1, str_1, str_1}
    dict_2 = {str_1: set_0, str_1: set_0, str_1: set_0, str_1: set_0}
    parser_1 = module_1.Parser(bool_0, dict_0, dict_2, dict_1, dict_1)
    parser_1.class_api(str_0, str_0, list_0, list_1)
    bool_1 = module_1.is_public_family(str_0)

def test_case_13():
    parser_0 = module_1.Parser()
    str_0 = 'dcC4kv_2*sJSK6'
    expr_0 = module_0.expr()
    str_1 = parser_0.resolve(str_0, expr_0)
    parser_0.parse(str_0, str_0)
    str_2 = parser_0.compile()

def test_case_14():
    parser_0 = module_1.Parser()
    str_0 = 'k}`P`QKQ@'
    module_x_var_0 = None
    parser_0.load_docstring(str_0, module_x_var_0)

def test_case_15():
    parser_0 = module_1.Parser()
    str_0 = parser_0.compile()

def test_case_16():
    parser_0 = module_1.Parser()
    str_0 = 'dcC4kv_2*sJSK6'
    str_1 = module_1.esc_underscore(str_0)
    ann_assign_0 = module_0.AnnAssign()
    bool_0 = False
    str_2 = ''
    int_0 = -2868
    str_3 = 'm\r>fGi'
    int_1 = 330
    dict_0 = {str_2: int_0, str_3: int_1}
    str_4 = 'eX!k>,*pBh\\/o'
    str_5 = '>qjlPar\n+I-Q)'
    str_6 = None
    dict_1 = {str_4: str_3, str_4: str_5, str_6: str_2, str_4: str_1}
    parser_1 = module_1.Parser(bool_0, dict_0, dict_1, dict_1)
    str_7 = parser_1.compile()

def test_case_17():
    parser_0 = module_1.Parser()
    module_x_var_0 = None
    list_0 = [module_x_var_0]
    name_0 = module_0.Name(*list_0)
    str_0 = '20Ge@9qR]d 1?1'
    dict_0 = {}
    resolver_0 = module_1.Resolver(str_0, dict_0, str_0)
    a_s_t_0 = resolver_0.visit_Name(name_0)
    str_1 = '(QSc[4kv_2*sJK6'
    list_1 = []
    stmt_0 = None
    list_2 = [stmt_0, stmt_0, stmt_0, stmt_0, stmt_0]
    parser_0.class_api(str_1, str_1, list_1, list_2)

def test_case_18():
    str_0 = 'y0$Kcr"'
    assign_0 = None
    bool_0 = True
    str_1 = 'rh\x0b[\r\t'
    dict_0 = {}
    str_2 = '\nR\ry)U^rb6o1#p&v;Mhu'
    dict_1 = {str_1: str_2, str_1: str_0, str_0: str_0, str_2: str_0}
    parser_0 = module_1.Parser(bool_0, dict_0, dict_1)
    parser_0.globals(str_0, assign_0)

def test_case_19():
    dict_0 = None
    list_0 = [dict_0]
    subscript_0 = module_0.Subscript(*list_0)
    str_0 = '.'
    dict_1 = {}
    resolver_0 = module_1.Resolver(str_0, dict_1, str_0)
    a_s_t_0 = resolver_0.visit_Subscript(subscript_0)

def test_case_20():
    str_0 = 'D-'
    bool_0 = module_1.is_public_family(str_0)

def test_case_21():
    str_0 = 'Create API doc for only functions and classes.\n        Where `name` is the full name.\n        '
    str_1 = module_1.esc_underscore(str_0)
    parser_0 = module_1.Parser()
    str_2 = 'lxXzh\nYY3TR9{ZD/fT@'
    import_from_0 = module_0.ImportFrom()
    list_0 = [import_from_0, str_2, import_from_0]
    ann_assign_0 = module_0.AnnAssign(*list_0)
    str_3 = parser_0.compile()

def test_case_22():
    expr_0 = module_0.expr()
    str_0 = module_1.const_type(expr_0)

def test_case_23():
    parser_0 = module_1.Parser()
    import_from_0 = module_0.ImportFrom()
    list_0 = [import_from_0]
    ann_assign_0 = module_0.AnnAssign(*list_0)
    attribute_0 = module_0.Attribute(*list_0)
    str_0 = '4o5N.hpv\x0b`uR"9*'
    dict_0 = {str_0: str_0, str_0: str_0}
    resolver_0 = module_1.Resolver(str_0, dict_0, str_0)
    a_s_t_0 = resolver_0.visit_Attribute(attribute_0)
    str_1 = 'jCynw^N:JTCTKG'
    parser_0.imports(str_1, import_from_0)

def test_case_24():
    str_0 = None
    str_1 = '<}A30\r'
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_0}
    str_2 = 'qE3?zs3"f"'
    str_3 = 'BG9[ws?\n(9O%'
    set_0 = {str_2, str_2, str_2, str_3}
    dict_1 = {str_2: set_0, str_2: set_0, str_3: set_0, str_2: set_0}
    expr_0 = module_0.expr()
    str_4 = module_1.const_type(expr_0)
    str_5 = '\n\\wPMqOWw'
    list_0 = [dict_1, dict_0, expr_0]
    assign_0 = module_0.Assign(*list_0)
    parser_0 = module_1.Parser(dict_0, dict_0, dict_0)
    parser_0.globals(str_5, assign_0)

def test_case_25():
    expr_0 = module_0.expr()
    str_0 = module_1.const_type(expr_0)
    dict_0 = {}
    parser_0 = module_1.Parser(dict_0, dict_0)
    var_0 = parser_0.__post_init__()
    parser_1 = module_1.Parser(dict_0)
    parser_1.parse(str_0, str_0)

def test_case_26():
    str_0 = 'C'
    str_1 = 'E/'
    expr_0 = module_0.expr()
    list_0 = [expr_0, expr_0]
    resolver_0 = None
    int_0 = None
    dict_0 = None
    str_2 = None
    str_3 = ''
    str_4 = module_1.esc_underscore(str_3)
    str_5 = '<&A30!'
    dict_1 = {str_1: str_1, str_2: str_0, str_5: str_0}
    parser_0 = module_1.Parser(int_0, dict_0, dict_1)
    list_1 = [resolver_0, list_0, parser_0]
    bool_0 = False
    dict_2 = {}
    str_6 = 'qE3?zsf"'
    str_7 = 'BG9[ws?\n(9O%'
    set_0 = {str_6, str_6, str_6, str_7}
    str_8 = '_*v|AJx_'
    bool_1 = module_1.is_public_family(str_8)
    str_9 = '"+'
    dict_3 = {str_6: set_0, str_6: set_0, str_7: set_0, str_9: set_0}
    parser_1 = module_1.Parser(bool_0, dict_2, dict_3, dict_1, dict_1)
    parser_1.class_api(str_0, str_1, list_0, list_1)
    str_10 = module_1.const_type(expr_0)
    str_11 = '\n\\wPMqO\\w'
    list_2 = [dict_3, dict_1, expr_0]
    str_12 = module_1.doctest(str_11)
    assign_0 = module_0.Assign(*list_2)
    assign_1 = module_0.Assign()
    str_13 = module_1.doctest(str_4)
    str_14 = parser_0.compile()

def test_case_27():
    bool_0 = True
    str_0 = None
    str_1 = 'd'
    str_2 = '=H'
    bool_1 = module_1.is_public_family(str_2)
    list_0 = [str_1]
    assign_0 = module_0.Assign(*list_0)
    str_3 = '8:*cd;6w.T'
    str_4 = '&V'
    dict_0 = {str_0: str_0, str_3: str_3, str_3: str_4}
    str_5 = 'v)?7\n(Q!7'
    dict_1 = {str_3: str_3, str_3: str_5}
    parser_0 = module_1.Parser(bool_0, dict_0, dict_1)
    parser_0.globals(str_1, assign_0)
    str_6 = parser_0.compile()

def test_case_28():
    str_0 = '24'
    dict_0 = {}
    import_0 = module_0.Import(**dict_0)
    list_0 = [import_0, dict_0]
    import_from_0 = module_0.ImportFrom(*list_0)
    str_1 = '$='
    str_2 = 'u\t{oKxk3'
    dict_1 = {str_0: str_0, str_0: str_0, str_1: str_0, str_1: str_2}
    parser_0 = module_1.Parser(dict_1, dict_1)
    parser_0.imports(str_0, import_from_0)
    set_0 = {str_0, str_0, str_0}
    dict_2 = {str_0: set_0, str_0: set_0}
    dict_3 = {}
    parser_1 = module_1.Parser(dict_2, dict_3)
    parser_2 = module_1.Parser(dict_2, dict_3)
    ann_assign_0 = module_0.AnnAssign(*list_0, **dict_0)
    parser_1.globals(str_0, ann_assign_0)

def test_case_29():
    parser_0 = module_1.Parser()
    str_0 = 'dcC4kv_2*sJSK6'
    parser_0.parse(str_0, str_0)
    module_x_var_0 = None
    parser_0.load_docstring(str_0, module_x_var_0)

def test_case_30():
    parser_0 = module_1.Parser()
    str_0 = 'dcC4kv_2*sJSK6'
    parser_0.parse(str_0, str_0)
    str_1 = '!\tFOGv: owO;'
    module_x_var_0 = None
    parser_0.load_docstring(str_1, module_x_var_0)
    str_2 = parser_0.compile()