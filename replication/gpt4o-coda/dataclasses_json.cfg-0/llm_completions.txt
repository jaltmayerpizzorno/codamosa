

# Generated at 2024-06-01 17:28:57.660641
```python
    assert Exclude.ALWAYS(None) == True
    assert Exclude.ALWAYS(123) == True
    assert Exclude.ALWAYS("test") == True
```

# Generated at 2024-06-01 17:28:58.569987
```python
    assert Exclude.NEVER("any_value") is False
```

# Generated at 2024-06-01 17:28:59.560484
```python
    assert Exclude.ALWAYS(None) == True
    assert Exclude.ALWAYS(123) == True
    assert Exclude.ALWAYS("test") == True
```

# Generated at 2024-06-01 17:29:00.440622
```python
    assert Exclude.ALWAYS(None) == True
    assert Exclude.ALWAYS(123) == True
    assert Exclude.ALWAYS("test") == True
```

# Generated at 2024-06-01 17:29:03.964594
```python
    metadata = {'existing_key': 'existing_value'}
    encoder = lambda x: f"encoded_{x}"
    decoder = lambda x: f"decoded_{x}"
    mm_field = MarshmallowField()
    letter_case = lambda x: x.upper()
    undefined = 'RAISE'
    field_name = 'test_field'
    exclude = Exclude.ALWAYS

    result = config(metadata, encoder=encoder, decoder=decoder, mm_field=mm_field, letter_case=letter_case, undefined=undefined, field_name=field_name, exclude=exclude)

    assert 'dataclasses_json' in result
    lib_metadata = result['dataclasses_json']

    assert lib_metadata['encoder'] == encoder
    assert lib_metadata['decoder'] == decoder
    assert lib_metadata['mm_field'] == mm_field
    assert lib_metadata['letter_case']('dummy') == 'TEST_FIELD'
    assert lib_metadata['undefined'] == Undefined.RAISE


# Generated at 2024-06-01 17:29:04.834408
```python
    assert Exclude.ALWAYS(None) == True
    assert Exclude.ALWAYS(123) == True
    assert Exclude.ALWAYS("test") == True
```

# Generated at 2024-06-01 17:29:08.061139
```python
    metadata = {'existing_key': 'existing_value'}
    encoder = lambda x: f"encoded_{x}"
    decoder = lambda x: f"decoded_{x}"
    mm_field = MarshmallowField()
    letter_case = lambda x: x.upper()
    undefined = 'RAISE'
    field_name = 'test_field'
    exclude = Exclude.ALWAYS

    result = config(metadata, encoder=encoder, decoder=decoder, mm_field=mm_field, letter_case=letter_case, undefined=undefined, field_name=field_name, exclude=exclude)

    assert 'dataclasses_json' in result
    lib_metadata = result['dataclasses_json']

    assert lib_metadata['encoder'] == encoder
    assert lib_metadata['decoder'] == decoder
    assert lib_metadata['mm_field'] == mm_field
    assert lib_metadata['letter_case']('dummy') == 'TEST_FIELD'
    assert lib_metadata['undefined'] == Undefined.RAISE


# Generated at 2024-06-01 17:29:09.115311
```python
    assert Exclude.ALWAYS(None) == True
    assert Exclude.ALWAYS(123) == True
    assert Exclude.ALWAYS("test") == True
```

# Generated at 2024-06-01 17:29:09.736326
```python
    assert Exclude.NEVER("any_value") == False
```

# Generated at 2024-06-01 17:29:10.702793
```python
    assert Exclude.ALWAYS(None) == True
    assert Exclude.ALWAYS(123) == True
    assert Exclude.ALWAYS("test") == True
```

# Generated at 2024-06-01 17:29:13.760969
```python
    assert Exclude.ALWAYS(None) == True
    assert Exclude.ALWAYS(123) == True
    assert Exclude.ALWAYS("test") == True
```

# Generated at 2024-06-01 17:29:14.442882
```python
    assert Exclude.NEVER("any_value") is False
```

# Generated at 2024-06-01 17:29:15.064881
```python
    assert Exclude.NEVER("any_value") is False
```

# Generated at 2024-06-01 17:29:15.989721
```python
    assert Exclude.ALWAYS(None) == True
    assert Exclude.ALWAYS(123) == True
    assert Exclude.ALWAYS("test") == True
```

# Generated at 2024-06-01 17:29:16.814325
```python
    assert Exclude.ALWAYS(None) == True
    assert Exclude.ALWAYS(123) == True
    assert Exclude.ALWAYS("test") == True
```

# Generated at 2024-06-01 17:29:17.479793
```python
    assert Exclude.NEVER("any_value") == False
```

# Generated at 2024-06-01 17:29:18.063432
```python
    assert Exclude.NEVER("any_value") is False
```

# Generated at 2024-06-01 17:29:20.990525
```python
    metadata = {'existing_key': 'existing_value'}
    encoder = lambda x: f"encoded_{x}"
    decoder = lambda x: f"decoded_{x}"
    mm_field = MarshmallowField()
    letter_case = lambda x: x.upper()
    undefined = 'RAISE'
    field_name = 'test_field'
    exclude = Exclude.ALWAYS

    result = config(metadata, encoder=encoder, decoder=decoder, mm_field=mm_field, letter_case=letter_case, undefined=undefined, field_name=field_name, exclude=exclude)

    assert 'dataclasses_json' in result
    lib_metadata = result['dataclasses_json']

    assert lib_metadata['encoder'] == encoder
    assert lib_metadata['decoder'] == decoder
    assert lib_metadata['mm_field'] == mm_field
    assert lib_metadata['letter_case']('dummy') == 'TEST_FIELD'
    assert lib_metadata['undefined'] == Undefined.RAISE


# Generated at 2024-06-01 17:29:21.725259
```python
    assert Exclude.NEVER("any_value") == False
```

# Generated at 2024-06-01 17:29:22.356410
```python
    assert Exclude.NEVER("any_value") == False
```

# Generated at 2024-06-01 17:29:25.533255
```python
    assert Exclude.ALWAYS(None) == True
    assert Exclude.ALWAYS(123) == True
    assert Exclude.ALWAYS("test") == True
```

# Generated at 2024-06-01 17:29:26.445405
```python
    assert Exclude.ALWAYS(None) == True
    assert Exclude.ALWAYS(123) == True
    assert Exclude.ALWAYS("test") == True
```

# Generated at 2024-06-01 17:29:27.546390
```python
    assert Exclude.ALWAYS(None) == True
    assert Exclude.ALWAYS(123) == True
    assert Exclude.ALWAYS("test") == True
```

# Generated at 2024-06-01 17:29:28.413366
```python
    assert Exclude.ALWAYS(None) == True
    assert Exclude.ALWAYS(123) == True
    assert Exclude.ALWAYS("test") == True
```

# Generated at 2024-06-01 17:29:31.334319
```python
    metadata = {'existing_key': 'existing_value'}
    encoder = lambda x: f"encoded_{x}"
    decoder = lambda x: f"decoded_{x}"
    mm_field = MarshmallowField()
    letter_case = lambda x: x.upper()
    undefined = 'RAISE'
    field_name = 'test_field'
    exclude = Exclude.ALWAYS

    result = config(metadata, encoder=encoder, decoder=decoder, mm_field=mm_field, letter_case=letter_case, undefined=undefined, field_name=field_name, exclude=exclude)

    assert 'dataclasses_json' in result
    lib_metadata = result['dataclasses_json']

    assert lib_metadata['encoder'] == encoder
    assert lib_metadata['decoder'] == decoder
    assert lib_metadata['mm_field'] == mm_field
    assert lib_metadata['letter_case']('test') == 'TEST_FIELD'
    assert lib_metadata['undefined'] == Undefined.RAISE


# Generated at 2024-06-01 17:29:34.071120
```python
    metadata = {'existing_key': 'existing_value'}
    encoder = lambda x: f"encoded_{x}"
    decoder = lambda x: f"decoded_{x}"
    mm_field = MarshmallowField()
    letter_case = lambda x: x.upper()
    undefined = 'RAISE'
    field_name = 'test_field'
    exclude = Exclude.ALWAYS

    result = config(metadata, encoder=encoder, decoder=decoder, mm_field=mm_field, letter_case=letter_case, undefined=undefined, field_name=field_name, exclude=exclude)

    assert 'dataclasses_json' in result
    lib_metadata = result['dataclasses_json']

    assert lib_metadata['encoder'] == encoder
    assert lib_metadata['decoder'] == decoder
    assert lib_metadata['mm_field'] == mm_field
    assert lib_metadata['letter_case']('dummy') == 'TEST_FIELD'
    assert lib_metadata['undefined'] == Undefined.RAISE


# Generated at 2024-06-01 17:29:34.926945
```python
    assert Exclude.ALWAYS(None) == True
    assert Exclude.ALWAYS(123) == True
    assert Exclude.ALWAYS("test") == True
```

# Generated at 2024-06-01 17:29:35.537675
```python
    assert Exclude.NEVER("any_value") == False
```

# Generated at 2024-06-01 17:29:36.227030
```python
    assert Exclude.NEVER("any_value") == False
```

# Generated at 2024-06-01 17:29:36.811848
```python
    assert Exclude.NEVER("any_value") is False
```

# Generated at 2024-06-01 17:29:42.473152
```python
    metadata = {'existing_key': 'existing_value'}
    encoder = lambda x: f"encoded_{x}"
    decoder = lambda x: f"decoded_{x}"
    mm_field = MarshmallowField()
    letter_case = str.upper
    undefined = 'RAISE'
    field_name = 'test_field'
    exclude = Exclude.ALWAYS

    result = config(metadata, encoder=encoder, decoder=decoder, mm_field=mm_field, 
                    letter_case=letter_case, undefined=undefined, field_name=field_name, 
                    exclude=exclude)

    assert 'dataclasses_json' in result
    lib_metadata = result['dataclasses_json']

    assert lib_metadata['encoder'] == encoder
    assert lib_metadata['decoder'] == decoder
    assert lib_metadata['mm_field'] == mm_field
    assert lib_metadata['letter_case']('test') == 'TEST_FIELD'
    assert lib_metadata['undefined'] == Undefined.RAISE

# Generated at 2024-06-01 17:29:43.317102
```python
    assert Exclude.ALWAYS(None) == True
    assert Exclude.ALWAYS(123) == True
    assert Exclude.ALWAYS("test") == True
```

# Generated at 2024-06-01 17:29:43.965845
```python
    assert Exclude.NEVER("any_value") == False
```

# Generated at 2024-06-01 17:29:44.638605
```python
    assert Exclude.NEVER("any_value") == False
```

# Generated at 2024-06-01 17:29:45.495590
```python
    assert Exclude.NEVER("any_value") is False
```

# Generated at 2024-06-01 17:29:46.299894
```python
    assert Exclude.ALWAYS(None) == True
    assert Exclude.ALWAYS(123) == True
    assert Exclude.ALWAYS("test") == True
```

# Generated at 2024-06-01 17:29:47.243001
```python
    assert Exclude.ALWAYS(None) == True
    assert Exclude.ALWAYS(123) == True
    assert Exclude.ALWAYS("test") == True
```

# Generated at 2024-06-01 17:29:48.262925
```python
    assert Exclude.ALWAYS(None) == True
    assert Exclude.ALWAYS(123) == True
    assert Exclude.ALWAYS("test") == True
```

# Generated at 2024-06-01 17:29:49.447895
```python
    assert Exclude.ALWAYS(None) == True
    assert Exclude.ALWAYS(123) == True
    assert Exclude.ALWAYS("test") == True
```

# Generated at 2024-06-01 17:29:50.288976
```python
    assert Exclude.NEVER("any_value") == False
```

# Generated at 2024-06-01 17:29:53.264191
```python
    assert Exclude.ALWAYS(None) == True
    assert Exclude.ALWAYS(123) == True
    assert Exclude.ALWAYS("test") == True
```

# Generated at 2024-06-01 17:29:54.138791
```python
    assert Exclude.ALWAYS(None) == True
    assert Exclude.ALWAYS(123) == True
    assert Exclude.ALWAYS("test") == True
```

# Generated at 2024-06-01 17:29:55.109614
```python
    assert Exclude.ALWAYS(None) == True
    assert Exclude.ALWAYS(123) == True
    assert Exclude.ALWAYS("test") == True
```

# Generated at 2024-06-01 17:29:56.026315
```python
    assert Exclude.ALWAYS(None) == True
    assert Exclude.ALWAYS(123) == True
    assert Exclude.ALWAYS("test") == True
```

# Generated at 2024-06-01 17:29:56.999974
```python
    assert Exclude.ALWAYS(None) == True
    assert Exclude.ALWAYS(123) == True
    assert Exclude.ALWAYS("test") == True
```

# Generated at 2024-06-01 17:29:57.890015
```python
    assert Exclude.ALWAYS(None) == True
    assert Exclude.ALWAYS(123) == True
    assert Exclude.ALWAYS("test") == True
```

# Generated at 2024-06-01 17:29:58.649963
```python
    assert Exclude.NEVER("any_value") == False
```

# Generated at 2024-06-01 17:30:01.789770
```python
    metadata = {'existing_key': 'existing_value'}
    encoder = lambda x: f"encoded_{x}"
    decoder = lambda x: f"decoded_{x}"
    mm_field = MarshmallowField()
    letter_case = lambda x: x.upper()
    undefined = 'RAISE'
    field_name = 'test_field'
    exclude = lambda x, y: x == 'exclude_me'

    result = config(metadata, encoder=encoder, decoder=decoder, mm_field=mm_field, letter_case=letter_case, undefined=undefined, field_name=field_name, exclude=exclude)

    assert 'dataclasses_json' in result
    lib_metadata = result['dataclasses_json']

    assert lib_metadata['encoder'] == encoder
    assert lib_metadata['decoder'] == decoder
    assert lib_metadata['mm_field'] == mm_field
    assert lib_metadata['letter_case']('dummy') == 'TEST_FIELD'
    assert lib_metadata['undefined']

# Generated at 2024-06-01 17:30:02.467834
```python
    assert Exclude.NEVER("any_value") == False
```

# Generated at 2024-06-01 17:30:03.673143
```python
    assert Exclude.ALWAYS(None) == True
    assert Exclude.ALWAYS(123) == True
    assert Exclude.ALWAYS("test") == True
```

# Generated at 2024-06-01 17:30:08.620167
```python
    assert Exclude.NEVER("any_value") == False
```

# Generated at 2024-06-01 17:30:09.270336
```python
    assert Exclude.ALWAYS("any_value") == True
```

# Generated at 2024-06-01 17:30:09.998258
```python
    assert Exclude.NEVER("any_value") is False
```

# Generated at 2024-06-01 17:30:10.665771
```python
    assert Exclude.NEVER("any_value") is False
```

# Generated at 2024-06-01 17:30:11.767196
```python
    assert Exclude.ALWAYS(None) == True
    assert Exclude.ALWAYS(123) == True
    assert Exclude.ALWAYS("test") == True
```

# Generated at 2024-06-01 17:30:12.404955
```python
    assert Exclude.NEVER("any_value") == False
```

# Generated at 2024-06-01 17:30:13.012107
```python
    assert Exclude.NEVER("any_value") == False
```

# Generated at 2024-06-01 17:30:13.625882
```python
    assert Exclude.NEVER("any_value") == False
```

# Generated at 2024-06-01 17:30:14.284342
```python
    assert Exclude.ALWAYS("any_value") == True
```

# Generated at 2024-06-01 17:30:15.392235
```python
    assert Exclude.ALWAYS(None) is True
    assert Exclude.ALWAYS(123) is True
    assert Exclude.ALWAYS("test") is True
```

# Generated at 2024-06-01 17:30:20.435154
```python
    assert Exclude.ALWAYS(None) == True
    assert Exclude.ALWAYS(123) == True
    assert Exclude.ALWAYS("test") == True
```

# Generated at 2024-06-01 17:30:21.190541
```python
    assert Exclude.NEVER("any_value") == False
```

# Generated at 2024-06-01 17:30:21.868013
```python
    assert Exclude.NEVER("any_value") is False
```

# Generated at 2024-06-01 17:30:22.798230
```python
    assert Exclude.ALWAYS(None) == True
    assert Exclude.ALWAYS(123) == True
    assert Exclude.ALWAYS("test") == True
```

# Generated at 2024-06-01 17:30:23.457925
```python
    assert Exclude.ALWAYS("any_value") == True
```

# Generated at 2024-06-01 17:30:24.058556
```python
    assert Exclude.ALWAYS("any_value") == True
```

# Generated at 2024-06-01 17:30:25.506875
```python
    assert Exclude.ALWAYS(None) == True
    assert Exclude.ALWAYS(123) == True
    assert Exclude.ALWAYS("test") == True
```

# Generated at 2024-06-01 17:30:26.114386
```python
    assert Exclude.NEVER("any_value") == False
```

# Generated at 2024-06-01 17:30:29.162777
```python
    metadata = {'existing_key': 'existing_value'}
    encoder = lambda x: f"encoded_{x}"
    decoder = lambda x: f"decoded_{x}"
    mm_field = MarshmallowField()
    letter_case = lambda x: x.upper()
    undefined = 'RAISE'
    field_name = 'test_field'
    exclude = Exclude.ALWAYS

    result = config(metadata, encoder=encoder, decoder=decoder, mm_field=mm_field, letter_case=letter_case, undefined=undefined, field_name=field_name, exclude=exclude)

    assert 'dataclasses_json' in result
    lib_metadata = result['dataclasses_json']

    assert lib_metadata['encoder'] == encoder
    assert lib_metadata['decoder'] == decoder
    assert lib_metadata['mm_field'] == mm_field
    assert lib_metadata['letter_case']('dummy') == 'TEST_FIELD'
    assert lib_metadata['undefined'] == Undefined.RAISE


# Generated at 2024-06-01 17:30:29.918590
```python
    assert Exclude.NEVER("any_value") == False
```

# Generated at 2024-06-01 17:30:35.318762
```python
    assert Exclude.NEVER("any_value") == False
```

# Generated at 2024-06-01 17:30:38.429085
```python
    # Test with no parameters
    assert config() == {'dataclasses_json': {}}

    # Test with encoder
    encoder = lambda x: x
    assert config(encoder=encoder) == {'dataclasses_json': {'encoder': encoder}}

    # Test with decoder
    decoder = lambda x: x
    assert config(decoder=decoder) == {'dataclasses_json': {'decoder': decoder}}

    # Test with mm_field
    mm_field = MarshmallowField()
    assert config(mm_field=mm_field) == {'dataclasses_json': {'mm_field': mm_field}}

    # Test with letter_case
    letter_case = lambda x: x.upper()
    assert config(letter_case=letter_case) == {'dataclasses_json': {'letter_case': letter_case}}

    # Test with undefined as string
    assert config(undefined='EXCLUDE') == {'dataclasses_json': {'undefined': Undefined.EXCLUDE}}

    # Test with undefined as Undefined

# Generated at 2024-06-01 17:30:39.395534
```python
    assert Exclude.ALWAYS(None) is True
    assert Exclude.ALWAYS(123) is True
    assert Exclude.ALWAYS("test") is True
```

# Generated at 2024-06-01 17:30:39.968746
```python
    assert Exclude.NEVER("any_value") is False
```

# Generated at 2024-06-01 17:30:43.071637
```python
    metadata = {'existing_key': 'existing_value'}
    encoder = lambda x: f"encoded_{x}"
    decoder = lambda x: f"decoded_{x}"
    mm_field = MarshmallowField()
    letter_case = lambda x: x.upper()
    undefined = 'RAISE'
    field_name = 'test_field'
    exclude = lambda x, y: x == 'exclude_this'

    result = config(metadata, encoder=encoder, decoder=decoder, mm_field=mm_field, letter_case=letter_case, undefined=undefined, field_name=field_name, exclude=exclude)

    assert 'dataclasses_json' in result
    lib_metadata = result['dataclasses_json']

    assert lib_metadata['encoder'] == encoder
    assert lib_metadata['decoder'] == decoder
    assert lib_metadata['mm_field'] == mm_field
    assert lib_metadata['letter_case']('dummy') == 'TEST_FIELD'
    assert lib_metadata['undefined']

# Generated at 2024-06-01 17:30:43.676873
```python
    assert Exclude.NEVER("any_value") is False
```

# Generated at 2024-06-01 17:30:44.802590
```python
    assert Exclude.ALWAYS(None) == True
    assert Exclude.ALWAYS(123) == True
    assert Exclude.ALWAYS("test") == True
```

# Generated at 2024-06-01 17:30:47.820962
```python
    metadata = {'existing_key': 'existing_value'}
    encoder = lambda x: f"encoded_{x}"
    decoder = lambda x: f"decoded_{x}"
    mm_field = MarshmallowField()
    letter_case = lambda x: x.upper()
    undefined = 'RAISE'
    field_name = 'test_field'
    exclude = lambda x, y: x == 'exclude_me'

    result = config(metadata, encoder=encoder, decoder=decoder, mm_field=mm_field, letter_case=letter_case, undefined=undefined, field_name=field_name, exclude=exclude)

    assert 'dataclasses_json' in result
    lib_metadata = result['dataclasses_json']

    assert lib_metadata['encoder'] == encoder
    assert lib_metadata['decoder'] == decoder
    assert lib_metadata['mm_field'] == mm_field
    assert lib_metadata['letter_case']('dummy') == 'TEST_FIELD'
    assert lib_metadata['undefined']

# Generated at 2024-06-01 17:30:48.400936
```python
    assert Exclude.NEVER("any_value") == False
```

# Generated at 2024-06-01 17:30:49.065768
```python
    assert Exclude.NEVER("any_value") == False
```

# Generated at 2024-06-01 17:30:55.339349
```python
    assert Exclude.NEVER("any_value") == False
```

# Generated at 2024-06-01 17:30:56.018755
```python
    assert Exclude.NEVER("any_value") == False
```

# Generated at 2024-06-01 17:30:56.776096
```python
    assert Exclude.ALWAYS("any_value") == True
```

# Generated at 2024-06-01 17:30:57.392771
```python
    assert Exclude.NEVER("any_value") == False
```

# Generated at 2024-06-01 17:30:58.348284
```python
    assert Exclude.ALWAYS(None) == True
    assert Exclude.ALWAYS(123) == True
    assert Exclude.ALWAYS("test") == True
```

# Generated at 2024-06-01 17:30:59.397804
```python
    assert Exclude.ALWAYS(None) == True
    assert Exclude.ALWAYS(123) == True
    assert Exclude.ALWAYS("test") == True
```

# Generated at 2024-06-01 17:31:00.094262
```python
    assert Exclude.NEVER("any_value") == False
```

# Generated at 2024-06-01 17:31:01.035388
```python
    assert Exclude.ALWAYS(None) == True
    assert Exclude.ALWAYS(123) == True
    assert Exclude.ALWAYS("test") == True
```

# Generated at 2024-06-01 17:31:01.722595
```python
    assert Exclude.NEVER("any_value") == False
```

# Generated at 2024-06-01 17:31:02.373809
```python
    assert Exclude.ALWAYS("any_value") is True
```

# Generated at 2024-06-01 17:31:14.762340
```python
    assert Exclude.NEVER("any_value") == False
```

# Generated at 2024-06-01 17:31:15.383503
```python
    assert Exclude.NEVER("any_value") == False
```

# Generated at 2024-06-01 17:31:16.010009
```python
    assert Exclude.NEVER("any_value") is False
```

# Generated at 2024-06-01 17:31:16.715570
```python
    assert Exclude.NEVER("any_value") == False
```

# Generated at 2024-06-01 17:31:17.616278
```python
    assert Exclude.ALWAYS(None) == True
    assert Exclude.ALWAYS(123) == True
    assert Exclude.ALWAYS("test") == True
```

# Generated at 2024-06-01 17:31:18.713360
```python
    assert Exclude.ALWAYS(None) == True
    assert Exclude.ALWAYS(123) == True
    assert Exclude.ALWAYS("test") == True
```

# Generated at 2024-06-01 17:31:19.337355
```python
    assert Exclude.ALWAYS("any_value") == True
```

# Generated at 2024-06-01 17:31:20.378732
```python
    assert Exclude.ALWAYS(None) == True
    assert Exclude.ALWAYS(123) == True
    assert Exclude.ALWAYS("test") == True
```

# Generated at 2024-06-01 17:31:21.668375
```python
    assert Exclude.ALWAYS(None) is True
    assert Exclude.ALWAYS(123) is True
    assert Exclude.ALWAYS("test") is True
```

# Generated at 2024-06-01 17:31:22.363710
```python
    assert Exclude.NEVER("any_value") == False
```

# Generated at 2024-06-01 17:31:45.692772
```python
    assert Exclude.ALWAYS("any_value") is True
```

# Generated at 2024-06-01 17:31:48.455596
```python
    metadata = {'existing_key': 'existing_value'}
    encoder = lambda x: f"encoded_{x}"
    decoder = lambda x: f"decoded_{x}"
    mm_field = MarshmallowField()
    letter_case = lambda x: x.upper()
    undefined = 'RAISE'
    field_name = 'test_field'
    exclude = Exclude.ALWAYS

    result = config(metadata, encoder=encoder, decoder=decoder, mm_field=mm_field, letter_case=letter_case, undefined=undefined, field_name=field_name, exclude=exclude)

    assert 'dataclasses_json' in result
    lib_metadata = result['dataclasses_json']

    assert lib_metadata['encoder'] == encoder
    assert lib_metadata['decoder'] == decoder
    assert lib_metadata['mm_field'] == mm_field
    assert lib_metadata['letter_case']('dummy') == 'TEST_FIELD'
    assert lib_metadata['undefined'] == Undefined.RAISE


# Generated at 2024-06-01 17:31:49.142322
```python
    assert Exclude.NEVER("any_value") == False
```

# Generated at 2024-06-01 17:31:53.592533
```python
    metadata = {'existing_key': 'existing_value'}
    encoder = lambda x: f"encoded_{x}"
    decoder = lambda x: f"decoded_{x}"
    mm_field = MarshmallowField()
    letter_case = lambda x: x.upper()
    undefined = 'RAISE'
    field_name = 'test_field'
    exclude = Exclude.ALWAYS

    result = config(metadata, encoder=encoder, decoder=decoder, mm_field=mm_field, letter_case=letter_case, undefined=undefined, field_name=field_name, exclude=exclude)

    assert 'dataclasses_json' in result
    lib_metadata = result['dataclasses_json']

    assert lib_metadata['encoder'] == encoder
    assert lib_metadata['decoder'] == decoder
    assert lib_metadata['mm_field'] == mm_field
    assert lib_metadata['letter_case']('dummy') == 'TEST_FIELD'
    assert lib_metadata['undefined'] == Undefined.RAISE


# Generated at 2024-06-01 17:31:54.193152
```python
    assert Exclude.NEVER("any_value") == False
```

# Generated at 2024-06-01 17:31:56.913795
```python
    # Test with no parameters
    assert config() == {'dataclasses_json': {}}

    # Test with encoder
    encoder = lambda x: x
    assert config(encoder=encoder) == {'dataclasses_json': {'encoder': encoder}}

    # Test with decoder
    decoder = lambda x: x
    assert config(decoder=decoder) == {'dataclasses_json': {'decoder': decoder}}

    # Test with mm_field
    mm_field = MarshmallowField()
    assert config(mm_field=mm_field) == {'dataclasses_json': {'mm_field': mm_field}}

    # Test with letter_case
    letter_case = lambda x: x.upper()
    assert config(letter_case=letter_case) == {'dataclasses_json': {'letter_case': letter_case}}

    # Test with undefined as string
    assert config(undefined='RAISE') == {'dataclasses_json': {'undefined': Undefined.RAISE}}

    # Test with undefined as

# Generated at 2024-06-01 17:31:57.614073
```python
    assert Exclude.ALWAYS("any_value") == True
```

# Generated at 2024-06-01 17:31:58.475522
```python
    assert Exclude.ALWAYS(None) == True
    assert Exclude.ALWAYS(123) == True
    assert Exclude.ALWAYS("test") == True
```

# Generated at 2024-06-01 17:32:00.968364
```python
    assert Exclude.ALWAYS(None) == True
    assert Exclude.ALWAYS(123) == True
    assert Exclude.ALWAYS("test") == True
```

# Generated at 2024-06-01 17:32:01.598391
```python
    assert Exclude.NEVER("any_value") is False
```

# Generated at 2024-06-01 17:32:48.974508
```python
    assert Exclude.NEVER("any_value") == False
```

# Generated at 2024-06-01 17:32:52.556611
```python
    assert Exclude.ALWAYS(None) == True
    assert Exclude.ALWAYS(123) == True
    assert Exclude.ALWAYS("test") == True
```

# Generated at 2024-06-01 17:32:53.630868
```python
    assert Exclude.ALWAYS(None) == True
    assert Exclude.ALWAYS(123) == True
    assert Exclude.ALWAYS("test") == True
```

# Generated at 2024-06-01 17:32:54.315559
```python
    assert Exclude.NEVER("any_value") == False
```

# Generated at 2024-06-01 17:32:54.950487
```python
    assert Exclude.NEVER("any_value") == False
```

# Generated at 2024-06-01 17:32:55.671714
```python
    assert Exclude.ALWAYS("any_value") == True
```

# Generated at 2024-06-01 17:32:57.119943
```python
    assert Exclude.ALWAYS(None) == True
    assert Exclude.ALWAYS(123) == True
    assert Exclude.ALWAYS("test") == True
```

# Generated at 2024-06-01 17:32:58.073568
```python
    assert Exclude.ALWAYS(None) == True
    assert Exclude.ALWAYS(123) == True
    assert Exclude.ALWAYS("test") == True
```

# Generated at 2024-06-01 17:32:59.207158
```python
    assert Exclude.ALWAYS(None) == True
    assert Exclude.ALWAYS(123) == True
    assert Exclude.ALWAYS("test") == True
```

# Generated at 2024-06-01 17:32:59.972256
```python
    assert Exclude.NEVER("any_value") == False
```

# Generated at 2024-06-01 17:34:31.012214
```python
    assert Exclude.NEVER("any_value") == False
```

# Generated at 2024-06-01 17:34:31.607933
```python
    assert Exclude.NEVER("any_value") is False
```

# Generated at 2024-06-01 17:34:32.195728
```python
    assert Exclude.ALWAYS("any_value") is True
```

# Generated at 2024-06-01 17:34:33.083532
```python
    assert Exclude.ALWAYS(None) == True
    assert Exclude.ALWAYS(123) == True
    assert Exclude.ALWAYS("test") == True
```

# Generated at 2024-06-01 17:34:33.994569
```python
    assert Exclude.ALWAYS(None) == True
    assert Exclude.ALWAYS(123) == True
    assert Exclude.ALWAYS("test") == True
```

# Generated at 2024-06-01 17:34:34.613421
```python
    assert Exclude.NEVER("any_value") == False
```

# Generated at 2024-06-01 17:34:35.325882
```python
    assert Exclude.ALWAYS("any_value") == True
```

# Generated at 2024-06-01 17:34:36.133449
```python
    assert Exclude.NEVER("any_value") == False
```

# Generated at 2024-06-01 17:34:37.152078
```python
    assert Exclude.ALWAYS(None) == True
    assert Exclude.ALWAYS(123) == True
    assert Exclude.ALWAYS("test") == True
```

# Generated at 2024-06-01 17:34:37.964731
```python
    assert Exclude.ALWAYS("any_value") == True
```

# Generated at 2024-06-01 17:37:41.495937
```python
    assert Exclude.NEVER("any_value") is False
```

# Generated at 2024-06-01 17:37:42.486142
```python
    assert Exclude.ALWAYS(None) == True
    assert Exclude.ALWAYS(123) == True
    assert Exclude.ALWAYS("test") == True
```

# Generated at 2024-06-01 17:37:43.225402
```python
    assert Exclude.NEVER("any_value") == False
```

# Generated at 2024-06-01 17:37:43.792084
```python
    assert Exclude.NEVER("any_value") == False
```

# Generated at 2024-06-01 17:37:44.643184
```python
    assert Exclude.ALWAYS("any_value") == True
```

# Generated at 2024-06-01 17:37:45.297177
```python
    assert Exclude.NEVER("any_value") == False
```

# Generated at 2024-06-01 17:37:45.932616
```python
    assert Exclude.NEVER("any_value") == False
```

# Generated at 2024-06-01 17:37:46.657549
```python
    assert Exclude.NEVER("any_value") == False
```

# Generated at 2024-06-01 17:37:47.280613
```python
    assert Exclude.NEVER("any_value") == False
```

# Generated at 2024-06-01 17:37:49.129773
```python
    assert Exclude.NEVER("any_value") is False
```