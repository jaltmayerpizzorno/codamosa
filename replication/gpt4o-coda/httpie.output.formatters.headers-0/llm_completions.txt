

# Generated at 2024-06-02 16:24:12.586078
```python
    formatter = HeadersFormatter(format_options={'headers': {'sort': True}})
    input_headers = "HTTP/1.1 200 OK\r\nContent-Type: text/html\r\nX-Custom-Header: value\r\nAccept: */*\r\n"
    expected_output = "HTTP/1.1 200 OK\r\nAccept: */*\r\nContent-Type: text/html\r\nX-Custom-Header: value\r\n"
    assert formatter.format_headers(input_headers) == expected_output

    input_headers = "HTTP/1.1 200 OK\r\nB-Header: value\r\nA-Header: value\r\n"
    expected_output = "HTTP/1.1 200 OK\r\nA-Header: value\r\nB-Header: value\r\n"
    assert formatter.format_headers(input_headers) == expected_output

    input_headers = "HTTP/1.1 200 OK\r\nX-Header: value\r\n

# Generated at 2024-06-02 16:24:13.587816
```python
    formatter = HeadersFormatter(headers={'sort': True})
    assert formatter.enabled is True

    formatter = HeadersFormatter(headers={'sort': False})
    assert formatter.enabled is False
```

# Generated at 2024-06-02 16:24:16.474917
```python
    formatter = HeadersFormatter(format_options={'headers': {'sort': True}})
    input_headers = "HTTP/1.1 200 OK\r\nContent-Type: text/html\r\nX-Custom-Header: value\r\nAccept: */*\r\n"
    expected_output = "HTTP/1.1 200 OK\r\nAccept: */*\r\nContent-Type: text/html\r\nX-Custom-Header: value\r\n"
    assert formatter.format_headers(input_headers) == expected_output

    input_headers = "HTTP/1.1 200 OK\r\nB-Header: value\r\nA-Header: value\r\n"
    expected_output = "HTTP/1.1 200 OK\r\nA-Header: value\r\nB-Header: value\r\n"
    assert formatter.format_headers(input_headers) == expected_output

    input_headers = "HTTP/1.1 200 OK\r\nX-Header: value\r\n

# Generated at 2024-06-02 16:24:18.190332
```python
    formatter = HeadersFormatter(format_options={'headers': {'sort': True}})
    input_headers = "HTTP/1.1 200 OK\r\nX-Z: value3\r\nX-A: value1\r\nX-B: value2\r\n"
    expected_output = "HTTP/1.1 200 OK\r\nX-A: value1\r\nX-B: value2\r\nX-Z: value3\r\n"
    assert formatter.format_headers(input_headers) == expected_output
```

# Generated at 2024-06-02 16:24:25.728051
```python
    formatter = HeadersFormatter(format_options={'headers': {'sort': True}})
    input_headers = "HTTP/1.1 200 OK\r\nX-Zeta: zeta\r\nX-Alpha: alpha\r\nX-Beta: beta\r\n"
    expected_output = "HTTP/1.1 200 OK\r\nX-Alpha: alpha\r\nX-Beta: beta\r\nX-Zeta: zeta\r\n"
    assert formatter.format_headers(input_headers) == expected_output

    input_headers = "HTTP/1.1 200 OK\r\nX-Beta: beta\r\nX-Alpha: alpha\r\nX-Beta: beta2\r\n"
    expected_output = "HTTP/1.1 200 OK\r\nX-Alpha: alpha\r\nX-Beta: beta\r\nX-Beta: beta2\r\n"
    assert formatter.format_headers(input_headers) == expected_output

    input_headers = "HTTP

# Generated at 2024-06-02 16:24:30.553578
```python
    formatter = HeadersFormatter(format_options={'headers': {'sort': True}})
    input_headers = (
        "HTTP/1.1 200 OK\r\n"
        "Content-Type: text/html\r\n"
        "X-Custom-Header: value1\r\n"
        "X-Custom-Header: value2\r\n"
        "Content-Length: 1234\r\n"
    )
    expected_output = (
        "HTTP/1.1 200 OK\r\n"
        "Content-Length: 1234\r\n"
        "Content-Type: text/html\r\n"
        "X-Custom-Header: value1\r\n"
        "X-Custom-Header: value2\r\n"
    )
    assert formatter.format_headers(input_headers) == expected_output
```

# Generated at 2024-06-02 16:24:34.038772
```python
    formatter = HeadersFormatter(headers={'sort': True})
    input_headers = "HTTP/1.1 200 OK\r\nContent-Type: text/html\r\nX-Custom-Header: value\r\nAccept: */*\r\n"
    expected_output = "HTTP/1.1 200 OK\r\nAccept: */*\r\nContent-Type: text/html\r\nX-Custom-Header: value\r\n"
    assert formatter.format_headers(input_headers) == expected_output

    input_headers = "HTTP/1.1 200 OK\r\nB-Header: value\r\nA-Header: value\r\n"
    expected_output = "HTTP/1.1 200 OK\r\nA-Header: value\r\nB-Header: value\r\n"
    assert formatter.format_headers(input_headers) == expected_output

    input_headers = "HTTP/1.1 200 OK\r\nX-Header: value\r\nX-Header:

# Generated at 2024-06-02 16:24:36.660890
```python
    formatter = HeadersFormatter(headers={'sort': True})
    assert formatter.enabled is True

    formatter = HeadersFormatter(headers={'sort': False})
    assert formatter.enabled is False
```

# Generated at 2024-06-02 16:24:40.149610
```python
    formatter = HeadersFormatter(format_options={'headers': {'sort': True}})
    input_headers = "HTTP/1.1 200 OK\r\nContent-Type: text/html\r\nX-Custom-Header: value\r\nAccept: */*\r\n"
    expected_output = "HTTP/1.1 200 OK\r\nAccept: */*\r\nContent-Type: text/html\r\nX-Custom-Header: value\r\n"
    assert formatter.format_headers(input_headers) == expected_output

    input_headers = "HTTP/1.1 200 OK\r\nB-Header: value\r\nA-Header: value\r\n"
    expected_output = "HTTP/1.1 200 OK\r\nA-Header: value\r\nB-Header: value\r\n"
    assert formatter.format_headers(input_headers) == expected_output

    input_headers = "HTTP/1.1 200 OK\r\nX-Header: value\r\n

# Generated at 2024-06-02 16:24:43.711124
```python
    formatter = HeadersFormatter(format_options={'headers': {'sort': True}})
    input_headers = "HTTP/1.1 200 OK\r\nX-Zeta: value3\r\nX-Alpha: value1\r\nX-Beta: value2\r\n"
    expected_output = "HTTP/1.1 200 OK\r\nX-Alpha: value1\r\nX-Beta: value2\r\nX-Zeta: value3\r\n"
    assert formatter.format_headers(input_headers) == expected_output

    input_headers = "HTTP/1.1 200 OK\r\nX-Beta: value2\r\nX-Alpha: value1\r\nX-Beta: value3\r\n"
    expected_output = "HTTP/1.1 200 OK\r\nX-Alpha: value1\r\nX-Beta: value2\r\nX-Beta: value3\r\n"
    assert formatter.format_headers(input_headers) == expected

# Generated at 2024-06-02 16:24:49.405173
```python
    formatter = HeadersFormatter(headers={'sort': True})
    assert formatter.enabled is True

    formatter = HeadersFormatter(headers={'sort': False})
    assert formatter.enabled is False
```

# Generated at 2024-06-02 16:24:52.496169
```python
    formatter = HeadersFormatter(format_options={'headers': {'sort': True}})
    input_headers = "HTTP/1.1 200 OK\r\nContent-Type: text/html\r\nX-Custom-Header: value\r\nAccept: */*\r\n"
    expected_output = "HTTP/1.1 200 OK\r\nAccept: */*\r\nContent-Type: text/html\r\nX-Custom-Header: value\r\n"
    assert formatter.format_headers(input_headers) == expected_output

    input_headers = "HTTP/1.1 200 OK\r\nB-Header: value\r\nA-Header: value\r\n"
    expected_output = "HTTP/1.1 200 OK\r\nA-Header: value\r\nB-Header: value\r\n"
    assert formatter.format_headers(input_headers) == expected_output

    input_headers = "HTTP/1.1 200 OK\r\nX-Header: value\r\n

# Generated at 2024-06-02 16:24:53.579587
```python
    formatter = HeadersFormatter(headers={'sort': True})
    assert formatter.enabled is True

    formatter = HeadersFormatter(headers={'sort': False})
    assert formatter.enabled is False
```

# Generated at 2024-06-02 16:24:57.017526
```python
    formatter = HeadersFormatter(format_options={'headers': {'sort': True}})
    input_headers = (
        "HTTP/1.1 200 OK\r\n"
        "Content-Type: text/html\r\n"
        "X-Custom-Header: value1\r\n"
        "Content-Length: 1234\r\n"
        "X-Custom-Header: value2\r\n"
    )
    expected_output = (
        "HTTP/1.1 200 OK\r\n"
        "Content-Length: 1234\r\n"
        "Content-Type: text/html\r\n"
        "X-Custom-Header: value1\r\n"
        "X-Custom-Header: value2\r\n"
    )
    assert formatter.format_headers(input_headers) == expected_output
```

# Generated at 2024-06-02 16:24:58.263019
```python
    formatter = HeadersFormatter(headers={'sort': True})
    assert formatter.enabled is True

    formatter = HeadersFormatter(headers={'sort': False})
    assert formatter.enabled is False
```

# Generated at 2024-06-02 16:24:59.147321
def test_HeadersFormatter():
    formatter = HeadersFormatter(headers={'sort': True})
    assert formatter.enabled == True

    formatter = HeadersFormatter(headers={'sort': False})
    assert formatter.enabled == False

# Generated at 2024-06-02 16:25:00.447798
def test_HeadersFormatter():
    formatter = HeadersFormatter(headers={'sort': True})
    assert formatter.enabled == True

    formatter = HeadersFormatter(headers={'sort': False})
    assert formatter.enabled == False

# Generated at 2024-06-02 16:25:03.413155
```python
    formatter = HeadersFormatter(format_options={'headers': {'sort': True}})
    input_headers = (
        "HTTP/1.1 200 OK\r\n"
        "Content-Type: text/html\r\n"
        "X-Custom-Header: value1\r\n"
        "X-Custom-Header: value2\r\n"
        "Content-Length: 1234\r\n"
    )
    expected_output = (
        "HTTP/1.1 200 OK\r\n"
        "Content-Length: 1234\r\n"
        "Content-Type: text/html\r\n"
        "X-Custom-Header: value1\r\n"
        "X-Custom-Header: value2\r\n"
    )
    assert formatter.format_headers(input_headers) == expected_output
```

# Generated at 2024-06-02 16:25:04.449534
def test_HeadersFormatter():
    formatter = HeadersFormatter(headers={'sort': True})
    assert formatter.enabled == True

    formatter = HeadersFormatter(headers={'sort': False})
    assert formatter.enabled == False

# Generated at 2024-06-02 16:25:08.217412
```python
    formatter = HeadersFormatter(format_options={'headers': {'sort': True}})
    input_headers = (
        "HTTP/1.1 200 OK\r\n"
        "Content-Type: text/html\r\n"
        "X-Custom-Header: value1\r\n"
        "X-Custom-Header: value2\r\n"
        "Content-Length: 1234\r\n"
    )
    expected_output = (
        "HTTP/1.1 200 OK\r\n"
        "Content-Length: 1234\r\n"
        "Content-Type: text/html\r\n"
        "X-Custom-Header: value1\r\n"
        "X-Custom-Header: value2\r\n"
    )
    assert formatter.format_headers(input_headers) == expected_output
```

# Generated at 2024-06-02 16:25:20.340180
```python
    formatter = HeadersFormatter(format_options={'headers': {'sort': True}})
    input_headers = (
        "HTTP/1.1 200 OK\r\n"
        "Content-Type: text/html\r\n"
        "X-Custom-Header: value1\r\n"
        "Accept: */*\r\n"
        "X-Custom-Header: value2\r\n"
    )
    expected_output = (
        "HTTP/1.1 200 OK\r\n"
        "Accept: */*\r\n"
        "Content-Type: text/html\r\n"
        "X-Custom-Header: value1\r\n"
        "X-Custom-Header: value2\r\n"
    )
    assert formatter.format_headers(input_headers) == expected_output
```

# Generated at 2024-06-02 16:25:21.533152
```python
    formatter = HeadersFormatter(headers={'sort': True})
    assert formatter.enabled is True

    formatter = HeadersFormatter(headers={'sort': False})
    assert formatter.enabled is False
```

# Generated at 2024-06-02 16:25:25.539266
```python
    formatter = HeadersFormatter(format_options={'headers': {'sort': True}})
    input_headers = "HTTP/1.1 200 OK\r\nX-Zeta: zeta\r\nX-Alpha: alpha\r\nX-Beta: beta\r\n"
    expected_output = "HTTP/1.1 200 OK\r\nX-Alpha: alpha\r\nX-Beta: beta\r\nX-Zeta: zeta\r\n"
    assert formatter.format_headers(input_headers) == expected_output

    input_headers = "HTTP/1.1 200 OK\r\nX-Beta: beta\r\nX-Alpha: alpha\r\nX-Beta: beta2\r\n"
    expected_output = "HTTP/1.1 200 OK\r\nX-Alpha: alpha\r\nX-Beta: beta\r\nX-Beta: beta2\r\n"
    assert formatter.format_headers(input_headers) == expected_output

    input_headers = "HTTP

# Generated at 2024-06-02 16:25:29.009324
```python
    formatter = HeadersFormatter(format_options={'headers': {'sort': True}})
    input_headers = "HTTP/1.1 200 OK\r\nContent-Type: text/html\r\nX-Custom-Header: value\r\nAccept: */*\r\n"
    expected_output = "HTTP/1.1 200 OK\r\nAccept: */*\r\nContent-Type: text/html\r\nX-Custom-Header: value\r\n"
    assert formatter.format_headers(input_headers) == expected_output

    input_headers = "HTTP/1.1 200 OK\r\nB-Header: value\r\nA-Header: value\r\n"
    expected_output = "HTTP/1.1 200 OK\r\nA-Header: value\r\nB-Header: value\r\n"
    assert formatter.format_headers(input_headers) == expected_output

    input_headers = "HTTP/1.1 200 OK\r\nX-Header: value\r\n

# Generated at 2024-06-02 16:25:29.977652
```python
    formatter = HeadersFormatter(headers={'sort': True})
    assert formatter.enabled is True

    formatter = HeadersFormatter(headers={'sort': False})
    assert formatter.enabled is False
```

# Generated at 2024-06-02 16:25:33.262421
```python
    formatter = HeadersFormatter(format_options={'headers': {'sort': True}})
    input_headers = "HTTP/1.1 200 OK\r\nX-Z: value3\r\nX-A: value1\r\nX-B: value2\r\nX-A: value4"
    expected_output = "HTTP/1.1 200 OK\r\nX-A: value1\r\nX-A: value4\r\nX-B: value2\r\nX-Z: value3"
    assert formatter.format_headers(input_headers) == expected_output

    input_headers = "HTTP/1.1 200 OK\r\nX-B: value2\r\nX-A: value1"
    expected_output = "HTTP/1.1 200 OK\r\nX-A: value1\r\nX-B: value2"
    assert formatter.format_headers(input_headers) == expected_output

    input_headers = "HTTP/1.1 200 OK\r\nX-C:

# Generated at 2024-06-02 16:25:36.016981
```python
    formatter = HeadersFormatter(format_options={'headers': {'sort': True}})
    input_headers = (
        "HTTP/1.1 200 OK\r\n"
        "Content-Type: text/html\r\n"
        "X-Custom-Header: value1\r\n"
        "Accept: */*\r\n"
        "X-Custom-Header: value2\r\n"
    )
    expected_output = (
        "HTTP/1.1 200 OK\r\n"
        "Accept: */*\r\n"
        "Content-Type: text/html\r\n"
        "X-Custom-Header: value1\r\n"
        "X-Custom-Header: value2\r\n"
    )
    assert formatter.format_headers(input_headers) == expected_output
```

# Generated at 2024-06-02 16:25:39.302286
```python
    formatter = HeadersFormatter(format_options={'headers': {'sort': True}})
    input_headers = "HTTP/1.1 200 OK\r\nX-Zeta: zeta\r\nX-Alpha: alpha\r\nX-Beta: beta\r\n"
    expected_output = "HTTP/1.1 200 OK\r\nX-Alpha: alpha\r\nX-Beta: beta\r\nX-Zeta: zeta\r\n"
    assert formatter.format_headers(input_headers) == expected_output

    input_headers = "HTTP/1.1 200 OK\r\nX-Beta: beta\r\nX-Alpha: alpha\r\nX-Alpha: alpha2\r\n"
    expected_output = "HTTP/1.1 200 OK\r\nX-Alpha: alpha\r\nX-Alpha: alpha2\r\nX-Beta: beta\r\n"
    assert formatter.format_headers(input_headers) == expected_output

    input_headers = "HTTP

# Generated at 2024-06-02 16:25:42.539068
```python
    formatter = HeadersFormatter(format_options={'headers': {'sort': True}})
    input_headers = (
        "HTTP/1.1 200 OK\r\n"
        "Content-Type: text/html\r\n"
        "X-Custom-Header: value1\r\n"
        "X-Custom-Header: value2\r\n"
        "Content-Length: 1234\r\n"
    )
    expected_output = (
        "HTTP/1.1 200 OK\r\n"
        "Content-Length: 1234\r\n"
        "Content-Type: text/html\r\n"
        "X-Custom-Header: value1\r\n"
        "X-Custom-Header: value2\r\n"
    )
    assert formatter.format_headers(input_headers) == expected_output
```

# Generated at 2024-06-02 16:25:49.061389
```python
    formatter = HeadersFormatter(headers={'sort': True})
    input_headers = "HTTP/1.1 200 OK\r\nX-Zeta: zeta\r\nX-Alpha: alpha\r\nX-Beta: beta\r\n"
    expected_output = "HTTP/1.1 200 OK\r\nX-Alpha: alpha\r\nX-Beta: beta\r\nX-Zeta: zeta\r\n"
    assert formatter.format_headers(input_headers) == expected_output

    input_headers = "HTTP/1.1 200 OK\r\nX-Beta: beta\r\nX-Alpha: alpha\r\nX-Beta: beta2\r\n"
    expected_output = "HTTP/1.1 200 OK\r\nX-Alpha: alpha\r\nX-Beta: beta\r\nX-Beta: beta2\r\n"
    assert formatter.format_headers(input_headers) == expected_output

    input_headers = "HTTP/1.1

# Generated at 2024-06-02 16:26:09.493265
```python
    formatter = HeadersFormatter(format_options={'headers': {'sort': True}})
    input_headers = (
        "HTTP/1.1 200 OK\r\n"
        "Content-Type: text/html\r\n"
        "X-Custom-Header: value1\r\n"
        "X-Custom-Header: value2\r\n"
        "Content-Length: 1234\r\n"
    )
    expected_output = (
        "HTTP/1.1 200 OK\r\n"
        "Content-Length: 1234\r\n"
        "Content-Type: text/html\r\n"
        "X-Custom-Header: value1\r\n"
        "X-Custom-Header: value2\r\n"
    )
    assert formatter.format_headers(input_headers) == expected_output
```

# Generated at 2024-06-02 16:26:12.616581
```python
    formatter = HeadersFormatter(format_options={'headers': {'sort': True}})
    input_headers = "HTTP/1.1 200 OK\r\nX-Z: value3\r\nX-A: value1\r\nX-B: value2\r\nX-A: value4"
    expected_output = "HTTP/1.1 200 OK\r\nX-A: value1\r\nX-A: value4\r\nX-B: value2\r\nX-Z: value3"
    assert formatter.format_headers(input_headers) == expected_output

    input_headers = "HTTP/1.1 200 OK\r\nX-B: value2\r\nX-A: value1\r\nX-C: value3"
    expected_output = "HTTP/1.1 200 OK\r\nX-A: value1\r\nX-B: value2\r\nX-C: value3"
    assert formatter.format_headers(input_headers) == expected_output

    input_headers =

# Generated at 2024-06-02 16:26:16.272667
```python
    formatter = HeadersFormatter(format_options={'headers': {'sort': True}})
    input_headers = "HTTP/1.1 200 OK\r\nX-Zeta: value3\r\nX-Alpha: value1\r\nX-Beta: value2\r\n"
    expected_output = "HTTP/1.1 200 OK\r\nX-Alpha: value1\r\nX-Beta: value2\r\nX-Zeta: value3\r\n"
    assert formatter.format_headers(input_headers) == expected_output

    input_headers = "HTTP/1.1 200 OK\r\nX-Alpha: value1\r\nX-Alpha: value2\r\nX-Beta: value3\r\n"
    expected_output = "HTTP/1.1 200 OK\r\nX-Alpha: value1\r\nX-Alpha: value2\r\nX-Beta: value3\r\n"
    assert formatter.format_headers(input_headers) == expected

# Generated at 2024-06-02 16:26:19.637724
```python
    formatter = HeadersFormatter(format_options={'headers': {'sort': True}})
    input_headers = "HTTP/1.1 200 OK\r\nContent-Type: text/html\r\nX-Custom-Header: value\r\nAccept: */*\r\n"
    expected_output = "HTTP/1.1 200 OK\r\nAccept: */*\r\nContent-Type: text/html\r\nX-Custom-Header: value\r\n"
    assert formatter.format_headers(input_headers) == expected_output

    input_headers = "HTTP/1.1 200 OK\r\nB-Header: value\r\nA-Header: value\r\n"
    expected_output = "HTTP/1.1 200 OK\r\nA-Header: value\r\nB-Header: value\r\n"
    assert formatter.format_headers(input_headers) == expected_output

    input_headers = "HTTP/1.1 200 OK\r\nX-Header: value\r\n

# Generated at 2024-06-02 16:26:23.477861
```python
    formatter = HeadersFormatter(format_options={'headers': {'sort': True}})
    input_headers = "HTTP/1.1 200 OK\r\nX-Zeta: zeta\r\nX-Alpha: alpha\r\nX-Beta: beta\r\n"
    expected_output = "HTTP/1.1 200 OK\r\nX-Alpha: alpha\r\nX-Beta: beta\r\nX-Zeta: zeta\r\n"
    assert formatter.format_headers(input_headers) == expected_output

    input_headers = "HTTP/1.1 200 OK\r\nX-Beta: beta\r\nX-Alpha: alpha\r\nX-Beta: beta2\r\n"
    expected_output = "HTTP/1.1 200 OK\r\nX-Alpha: alpha\r\nX-Beta: beta\r\nX-Beta: beta2\r\n"
    assert formatter.format_headers(input_headers) == expected_output

    input_headers = "HTTP

# Generated at 2024-06-02 16:26:24.546641
```python
    formatter = HeadersFormatter(headers={'sort': True})
    assert formatter.enabled == True

    formatter = HeadersFormatter(headers={'sort': False})
    assert formatter.enabled == False
```

# Generated at 2024-06-02 16:26:27.572468
```python
    formatter = HeadersFormatter(format_options={'headers': {'sort': True}})
    input_headers = "HTTP/1.1 200 OK\r\nContent-Type: text/html\r\nX-Custom-Header: value\r\nAccept: */*\r\n"
    expected_output = "HTTP/1.1 200 OK\r\nAccept: */*\r\nContent-Type: text/html\r\nX-Custom-Header: value\r\n"
    assert formatter.format_headers(input_headers) == expected_output

    input_headers = "HTTP/1.1 200 OK\r\nB-Header: value\r\nA-Header: value\r\n"
    expected_output = "HTTP/1.1 200 OK\r\nA-Header: value\r\nB-Header: value\r\n"
    assert formatter.format_headers(input_headers) == expected_output

    input_headers = "HTTP/1.1 200 OK\r\nX-Header: value\r\n

# Generated at 2024-06-02 16:26:37.123756
```python
    formatter = HeadersFormatter(format_options={'headers': {'sort': True}})
    input_headers = "HTTP/1.1 200 OK\r\nContent-Type: text/html\r\nX-Custom-Header: value\r\nAccept: */*\r\n"
    expected_output = "HTTP/1.1 200 OK\r\nAccept: */*\r\nContent-Type: text/html\r\nX-Custom-Header: value\r\n"
    assert formatter.format_headers(input_headers) == expected_output

    input_headers = "HTTP/1.1 200 OK\r\nB-Header: value\r\nA-Header: value\r\n"
    expected_output = "HTTP/1.1 200 OK\r\nA-Header: value\r\nB-Header: value\r\n"
    assert formatter.format_headers(input_headers) == expected_output

    input_headers = "HTTP/1.1 200 OK\r\nX-Header: value\r\n

# Generated at 2024-06-02 16:26:40.217340
```python
    formatter = HeadersFormatter(format_options={'headers': {'sort': True}})
    input_headers = "HTTP/1.1 200 OK\r\nX-Zeta: zeta\r\nX-Alpha: alpha\r\nX-Beta: beta\r\n"
    expected_output = "HTTP/1.1 200 OK\r\nX-Alpha: alpha\r\nX-Beta: beta\r\nX-Zeta: zeta\r\n"
    assert formatter.format_headers(input_headers) == expected_output

    input_headers = "HTTP/1.1 200 OK\r\nX-Beta: beta\r\nX-Alpha: alpha\r\nX-Beta: beta2\r\n"
    expected_output = "HTTP/1.1 200 OK\r\nX-Alpha: alpha\r\nX-Beta: beta\r\nX-Beta: beta2\r\n"
    assert formatter.format_headers(input_headers) == expected_output

    input_headers = "HTTP

# Generated at 2024-06-02 16:26:43.418283
```python
    formatter = HeadersFormatter(headers={'sort': True})
    input_headers = "HTTP/1.1 200 OK\r\nContent-Type: text/html\r\nX-Custom-Header: value\r\nAccept: */*\r\n"
    expected_output = "HTTP/1.1 200 OK\r\nAccept: */*\r\nContent-Type: text/html\r\nX-Custom-Header: value\r\n"
    assert formatter.format_headers(input_headers) == expected_output

    input_headers = "HTTP/1.1 200 OK\r\nB-Header: value\r\nA-Header: value\r\n"
    expected_output = "HTTP/1.1 200 OK\r\nA-Header: value\r\nB-Header: value\r\n"
    assert formatter.format_headers(input_headers) == expected_output

    input_headers = "HTTP/1.1 200 OK\r\nX-Header: value\r\nX-Header:

# Generated at 2024-06-02 16:27:20.865074
```python
    formatter = HeadersFormatter(format_options={'headers': {'sort': True}})
    input_headers = "HTTP/1.1 200 OK\r\nX-Zeta: zeta\r\nX-Alpha: alpha\r\nX-Beta: beta\r\n"
    expected_output = "HTTP/1.1 200 OK\r\nX-Alpha: alpha\r\nX-Beta: beta\r\nX-Zeta: zeta\r\n"
    assert formatter.format_headers(input_headers) == expected_output

    input_headers = "HTTP/1.1 200 OK\r\nX-Beta: beta\r\nX-Alpha: alpha\r\nX-Beta: beta2\r\n"
    expected_output = "HTTP/1.1 200 OK\r\nX-Alpha: alpha\r\nX-Beta: beta\r\nX-Beta: beta2\r\n"
    assert formatter.format_headers(input_headers) == expected_output

    input_headers = "HTTP

# Generated at 2024-06-02 16:27:23.790415
```python
    formatter = HeadersFormatter(format_options={'headers': {'sort': True}})
    input_headers = "HTTP/1.1 200 OK\r\nContent-Type: text/html\r\nX-Custom-Header: value\r\nAccept: */*\r\n"
    expected_output = "HTTP/1.1 200 OK\r\nAccept: */*\r\nContent-Type: text/html\r\nX-Custom-Header: value\r\n"
    assert formatter.format_headers(input_headers) == expected_output

    input_headers = "HTTP/1.1 200 OK\r\nB-Header: value\r\nA-Header: value\r\n"
    expected_output = "HTTP/1.1 200 OK\r\nA-Header: value\r\nB-Header: value\r\n"
    assert formatter.format_headers(input_headers) == expected_output

    input_headers = "HTTP/1.1 200 OK\r\nX-Header: value\r\n

# Generated at 2024-06-02 16:27:27.207796
```python
    formatter = HeadersFormatter(format_options={'headers': {'sort': True}})
    input_headers = "HTTP/1.1 200 OK\r\nX-Zeta: value3\r\nX-Alpha: value1\r\nX-Beta: value2\r\n"
    expected_output = "HTTP/1.1 200 OK\r\nX-Alpha: value1\r\nX-Beta: value2\r\nX-Zeta: value3\r\n"
    assert formatter.format_headers(input_headers) == expected_output

    input_headers = "HTTP/1.1 200 OK\r\nX-Beta: value2\r\nX-Alpha: value1\r\nX-Beta: value3\r\n"
    expected_output = "HTTP/1.1 200 OK\r\nX-Alpha: value1\r\nX-Beta: value2\r\nX-Beta: value3\r\n"
    assert formatter.format_headers(input_headers) == expected

# Generated at 2024-06-02 16:27:30.097418
```python
    formatter = HeadersFormatter(headers={'sort': True})
    input_headers = "HTTP/1.1 200 OK\r\nContent-Type: text/html\r\nX-Custom-Header: value\r\nAccept: */*\r\n"
    expected_output = "HTTP/1.1 200 OK\r\nAccept: */*\r\nContent-Type: text/html\r\nX-Custom-Header: value\r\n"
    assert formatter.format_headers(input_headers) == expected_output

    input_headers = "HTTP/1.1 200 OK\r\nB-Header: value\r\nA-Header: value\r\n"
    expected_output = "HTTP/1.1 200 OK\r\nA-Header: value\r\nB-Header: value\r\n"
    assert formatter.format_headers(input_headers) == expected_output

    input_headers = "HTTP/1.1 200 OK\r\nX-Header: value\r\nX-Header:

# Generated at 2024-06-02 16:27:33.712209
```python
    formatter = HeadersFormatter(format_options={'headers': {'sort': True}})
    input_headers = "HTTP/1.1 200 OK\r\nContent-Type: text/html\r\nX-Custom-Header: value\r\nAccept: */*\r\n"
    expected_output = "HTTP/1.1 200 OK\r\nAccept: */*\r\nContent-Type: text/html\r\nX-Custom-Header: value\r\n"
    assert formatter.format_headers(input_headers) == expected_output

    input_headers = "HTTP/1.1 200 OK\r\nB-Header: value\r\nA-Header: value\r\n"
    expected_output = "HTTP/1.1 200 OK\r\nA-Header: value\r\nB-Header: value\r\n"
    assert formatter.format_headers(input_headers) == expected_output

    input_headers = "HTTP/1.1 200 OK\r\nX-Header: value\r\n

# Generated at 2024-06-02 16:27:36.799599
```python
    formatter = HeadersFormatter(format_options={'headers': {'sort': True}})
    input_headers = (
        "HTTP/1.1 200 OK\r\n"
        "Content-Type: text/html\r\n"
        "X-Custom-Header: value1\r\n"
        "X-Custom-Header: value2\r\n"
        "Content-Length: 1234\r\n"
    )
    expected_output = (
        "HTTP/1.1 200 OK\r\n"
        "Content-Length: 1234\r\n"
        "Content-Type: text/html\r\n"
        "X-Custom-Header: value1\r\n"
        "X-Custom-Header: value2\r\n"
    )
    assert formatter.format_headers(input_headers) == expected_output
```

# Generated at 2024-06-02 16:27:37.914668
```python
    formatter = HeadersFormatter(headers={'sort': True})
    assert formatter.enabled is True

    formatter = HeadersFormatter(headers={'sort': False})
    assert formatter.enabled is False
```

# Generated at 2024-06-02 16:27:41.129453
```python
    formatter = HeadersFormatter(format_options={'headers': {'sort': True}})
    input_headers = (
        "HTTP/1.1 200 OK\r\n"
        "Content-Type: text/html\r\n"
        "X-Custom-Header: value1\r\n"
        "X-Custom-Header: value2\r\n"
        "Content-Length: 1234\r\n"
    )
    expected_output = (
        "HTTP/1.1 200 OK\r\n"
        "Content-Length: 1234\r\n"
        "Content-Type: text/html\r\n"
        "X-Custom-Header: value1\r\n"
        "X-Custom-Header: value2\r\n"
    )
    assert formatter.format_headers(input_headers) == expected_output
```

# Generated at 2024-06-02 16:27:44.077107
```python
    formatter = HeadersFormatter(format_options={'headers': {'sort': True}})
    input_headers = "HTTP/1.1 200 OK\r\nContent-Type: text/html\r\nX-Custom-Header: value\r\nAccept: */*\r\n"
    expected_output = "HTTP/1.1 200 OK\r\nAccept: */*\r\nContent-Type: text/html\r\nX-Custom-Header: value\r\n"
    assert formatter.format_headers(input_headers) == expected_output

    input_headers = "HTTP/1.1 200 OK\r\nB-Header: value\r\nA-Header: value\r\n"
    expected_output = "HTTP/1.1 200 OK\r\nA-Header: value\r\nB-Header: value\r\n"
    assert formatter.format_headers(input_headers) == expected_output

    input_headers = "HTTP/1.1 200 OK\r\nX-Header: value1\r

# Generated at 2024-06-02 16:27:46.006767
```python
    formatter = HeadersFormatter(headers={'sort': True})
    input_headers = "HTTP/1.1 200 OK\r\nX-Z: value3\r\nX-A: value1\r\nX-B: value2\r\nX-A: value4"
    expected_output = "HTTP/1.1 200 OK\r\nX-A: value1\r\nX-A: value4\r\nX-B: value2\r\nX-Z: value3"
    assert formatter.format_headers(input_headers) == expected_output
```

# Generated at 2024-06-02 16:29:56.121996
```python
    formatter = HeadersFormatter(format_options={'headers': {'sort': True}})
    input_headers = (
        "HTTP/1.1 200 OK\r\n"
        "Content-Type: text/html\r\n"
        "X-Custom-Header: value1\r\n"
        "X-Custom-Header: value2\r\n"
        "Accept: */*\r\n"
    )
    expected_output = (
        "HTTP/1.1 200 OK\r\n"
        "Accept: */*\r\n"
        "Content-Type: text/html\r\n"
        "X-Custom-Header: value1\r\n"
        "X-Custom-Header: value2\r\n"
    )
    assert formatter.format_headers(input_headers) == expected_output
```

# Generated at 2024-06-02 16:30:00.503266
```python
    formatter = HeadersFormatter(format_options={'headers': {'sort': True}})
    input_headers = "HTTP/1.1 200 OK\r\nX-Z: value3\r\nX-A: value1\r\nX-B: value2\r\nX-A: value4"
    expected_output = "HTTP/1.1 200 OK\r\nX-A: value1\r\nX-A: value4\r\nX-B: value2\r\nX-Z: value3"
    assert formatter.format_headers(input_headers) == expected_output

    input_headers = "HTTP/1.1 200 OK\r\nX-B: value2\r\nX-A: value1"
    expected_output = "HTTP/1.1 200 OK\r\nX-A: value1\r\nX-B: value2"
    assert formatter.format_headers(input_headers) == expected_output

    input_headers = "HTTP/1.1 200 OK\r\nX-A:

# Generated at 2024-06-02 16:30:03.556718
```python
    formatter = HeadersFormatter(format_options={'headers': {'sort': True}})
    input_headers = "HTTP/1.1 200 OK\r\nX-Z: value3\r\nX-A: value1\r\nX-B: value2\r\nX-A: value4"
    expected_output = "HTTP/1.1 200 OK\r\nX-A: value1\r\nX-A: value4\r\nX-B: value2\r\nX-Z: value3"
    assert formatter.format_headers(input_headers) == expected_output

    input_headers = "HTTP/1.1 200 OK\r\nX-B: value2\r\nX-A: value1\r\nX-Z: value3"
    expected_output = "HTTP/1.1 200 OK\r\nX-A: value1\r\nX-B: value2\r\nX-Z: value3"
    assert formatter.format_headers(input_headers) == expected_output

    input_headers =

# Generated at 2024-06-02 16:30:05.190132
```python
    formatter = HeadersFormatter(headers={'sort': True})
    input_headers = "HTTP/1.1 200 OK\r\nX-Zeta: zeta\r\nX-Alpha: alpha\r\nX-Beta: beta\r\n"
    expected_output = "HTTP/1.1 200 OK\r\nX-Alpha: alpha\r\nX-Beta: beta\r\nX-Zeta: zeta\r\n"
    assert formatter.format_headers(input_headers) == expected_output
```

# Generated at 2024-06-02 16:30:09.820511
```python
    formatter = HeadersFormatter(headers={'sort': True})
    input_headers = "HTTP/1.1 200 OK\r\nContent-Type: text/html\r\nX-Custom-Header: value\r\nAccept: */*\r\n"
    expected_output = "HTTP/1.1 200 OK\r\nAccept: */*\r\nContent-Type: text/html\r\nX-Custom-Header: value\r\n"
    assert formatter.format_headers(input_headers) == expected_output

    input_headers = "HTTP/1.1 200 OK\r\nX-Beta: beta\r\nX-Alpha: alpha\r\nX-Alpha: alpha2\r\n"
    expected_output = "HTTP/1.1 200 OK\r\nX-Alpha: alpha\r\nX-Alpha: alpha2\r\nX-Beta: beta\r\n"
    assert formatter.format_headers(input_headers) == expected_output

    input_headers = "HTTP/1.1

# Generated at 2024-06-02 16:30:12.810454
```python
    formatter = HeadersFormatter(format_options={'headers': {'sort': True}})
    input_headers = "HTTP/1.1 200 OK\r\nContent-Type: text/html\r\nX-Custom-Header: value\r\nAccept: */*\r\n"
    expected_output = "HTTP/1.1 200 OK\r\nAccept: */*\r\nContent-Type: text/html\r\nX-Custom-Header: value\r\n"
    assert formatter.format_headers(input_headers) == expected_output

    input_headers = "HTTP/1.1 200 OK\r\nB-Header: value\r\nA-Header: value\r\n"
    expected_output = "HTTP/1.1 200 OK\r\nA-Header: value\r\nB-Header: value\r\n"
    assert formatter.format_headers(input_headers) == expected_output

    input_headers = "HTTP/1.1 200 OK\r\nX-Header: value\r\n

# Generated at 2024-06-02 16:30:17.039063
```python
    formatter = HeadersFormatter(format_options={'headers': {'sort': True}})
    input_headers = "HTTP/1.1 200 OK\r\nContent-Type: text/html\r\nX-Custom-Header: value\r\nAccept: */*\r\n"
    expected_output = "HTTP/1.1 200 OK\r\nAccept: */*\r\nContent-Type: text/html\r\nX-Custom-Header: value\r\n"
    assert formatter.format_headers(input_headers) == expected_output

    input_headers = "HTTP/1.1 200 OK\r\nB-Header: value\r\nA-Header: value\r\n"
    expected_output = "HTTP/1.1 200 OK\r\nA-Header: value\r\nB-Header: value\r\n"
    assert formatter.format_headers(input_headers) == expected_output

    input_headers = "HTTP/1.1 200 OK\r\nX-Header: value\r\n

# Generated at 2024-06-02 16:30:19.561069
```python
    formatter = HeadersFormatter(format_options={'headers': {'sort': True}})
    input_headers = (
        "HTTP/1.1 200 OK\r\n"
        "Content-Type: text/html\r\n"
        "X-Custom-Header: value1\r\n"
        "X-Custom-Header: value2\r\n"
        "Content-Length: 1234\r\n"
    )
    expected_output = (
        "HTTP/1.1 200 OK\r\n"
        "Content-Length: 1234\r\n"
        "Content-Type: text/html\r\n"
        "X-Custom-Header: value1\r\n"
        "X-Custom-Header: value2\r\n"
    )
    assert formatter.format_headers(input_headers) == expected_output
```

# Generated at 2024-06-02 16:30:23.585587
```python
    formatter = HeadersFormatter(format_options={'headers': {'sort': True}})
    input_headers = (
        "HTTP/1.1 200 OK\r\n"
        "Content-Type: text/html\r\n"
        "X-Custom-Header: value1\r\n"
        "X-Custom-Header: value2\r\n"
        "Content-Length: 1234\r\n"
    )
    expected_output = (
        "HTTP/1.1 200 OK\r\n"
        "Content-Length: 1234\r\n"
        "Content-Type: text/html\r\n"
        "X-Custom-Header: value1\r\n"
        "X-Custom-Header: value2\r\n"
    )
    assert formatter.format_headers(input_headers) == expected_output
```

# Generated at 2024-06-02 16:30:25.780853
```python
    formatter = HeadersFormatter(format_options={'headers': {'sort': True}})
    input_headers = (
        "HTTP/1.1 200 OK\r\n"
        "Content-Type: text/html\r\n"
        "X-Custom-Header: value1\r\n"
        "Accept: */*\r\n"
        "X-Custom-Header: value2\r\n"
    )
    expected_output = (
        "HTTP/1.1 200 OK\r\n"
        "Accept: */*\r\n"
        "Content-Type: text/html\r\n"
        "X-Custom-Header: value1\r\n"
        "X-Custom-Header: value2\r\n"
    )
    assert formatter.format_headers(input_headers) == expected_output
```

# Generated at 2024-06-02 16:32:50.360147
```python
    formatter = HeadersFormatter(format_options={'headers': {'sort': True}})
    input_headers = (
        "HTTP/1.1 200 OK\r\n"
        "Content-Type: text/html\r\n"
        "X-Custom-Header: value1\r\n"
        "X-Custom-Header: value2\r\n"
        "Content-Length: 1234\r\n"
    )
    expected_output = (
        "HTTP/1.1 200 OK\r\n"
        "Content-Length: 1234\r\n"
        "Content-Type: text/html\r\n"
        "X-Custom-Header: value1\r\n"
        "X-Custom-Header: value2\r\n"
    )
    assert formatter.format_headers(input_headers) == expected_output
```

# Generated at 2024-06-02 16:32:53.172452
```python
    formatter = HeadersFormatter(format_options={'headers': {'sort': True}})
    input_headers = "HTTP/1.1 200 OK\r\nX-Zeta: value3\r\nX-Alpha: value1\r\nX-Beta: value2\r\n"
    expected_output = "HTTP/1.1 200 OK\r\nX-Alpha: value1\r\nX-Beta: value2\r\nX-Zeta: value3\r\n"
    assert formatter.format_headers(input_headers) == expected_output

    input_headers = "HTTP/1.1 200 OK\r\nX-Alpha: value1\r\nX-Alpha: value2\r\nX-Beta: value3\r\n"
    expected_output = "HTTP/1.1 200 OK\r\nX-Alpha: value1\r\nX-Alpha: value2\r\nX-Beta: value3\r\n"
    assert formatter.format_headers(input_headers) == expected

# Generated at 2024-06-02 16:32:56.763056
```python
    formatter = HeadersFormatter(headers={'sort': True})
    input_headers = "HTTP/1.1 200 OK\r\nX-Zeta: zeta\r\nX-Alpha: alpha\r\nX-Beta: beta\r\n"
    expected_output = "HTTP/1.1 200 OK\r\nX-Alpha: alpha\r\nX-Beta: beta\r\nX-Zeta: zeta\r\n"
    assert formatter.format_headers(input_headers) == expected_output

    input_headers = "HTTP/1.1 200 OK\r\nX-Beta: beta\r\nX-Alpha: alpha\r\nX-Zeta: zeta\r\n"
    expected_output = "HTTP/1.1 200 OK\r\nX-Alpha: alpha\r\nX-Beta: beta\r\nX-Zeta: zeta\r\n"
    assert formatter.format_headers(input_headers) == expected_output

    input_headers = "HTTP/1.1

# Generated at 2024-06-02 16:33:00.112522
```python
    formatter = HeadersFormatter(format_options={'headers': {'sort': True}})
    input_headers = "HTTP/1.1 200 OK\r\nContent-Type: text/html\r\nX-Custom-Header: value\r\nAccept: */*\r\n"
    expected_output = "HTTP/1.1 200 OK\r\nAccept: */*\r\nContent-Type: text/html\r\nX-Custom-Header: value\r\n"
    assert formatter.format_headers(input_headers) == expected_output

    input_headers = "HTTP/1.1 200 OK\r\nB-Header: value\r\nA-Header: value\r\n"
    expected_output = "HTTP/1.1 200 OK\r\nA-Header: value\r\nB-Header: value\r\n"
    assert formatter.format_headers(input_headers) == expected_output

    input_headers = "HTTP/1.1 200 OK\r\nX-Header: value\r\n

# Generated at 2024-06-02 16:33:03.406128
```python
    formatter = HeadersFormatter(headers={'sort': True})
    input_headers = "HTTP/1.1 200 OK\r\nContent-Type: text/html\r\nX-Custom-Header: value\r\nAccept: */*\r\n"
    expected_output = "HTTP/1.1 200 OK\r\nAccept: */*\r\nContent-Type: text/html\r\nX-Custom-Header: value\r\n"
    assert formatter.format_headers(input_headers) == expected_output

    input_headers = "HTTP/1.1 200 OK\r\nB-Header: value\r\nA-Header: value\r\n"
    expected_output = "HTTP/1.1 200 OK\r\nA-Header: value\r\nB-Header: value\r\n"
    assert formatter.format_headers(input_headers) == expected_output

    input_headers = "HTTP/1.1 200 OK\r\nX-Header: value\r\nX-Header:

# Generated at 2024-06-02 16:33:06.459897
```python
    formatter = HeadersFormatter(format_options={'headers': {'sort': True}})
    input_headers = "HTTP/1.1 200 OK\r\nContent-Type: text/html\r\nX-Custom-Header: value\r\nAccept: */*\r\n"
    expected_output = "HTTP/1.1 200 OK\r\nAccept: */*\r\nContent-Type: text/html\r\nX-Custom-Header: value\r\n"
    assert formatter.format_headers(input_headers) == expected_output

    input_headers = "HTTP/1.1 200 OK\r\nB-Header: value\r\nA-Header: value\r\n"
    expected_output = "HTTP/1.1 200 OK\r\nA-Header: value\r\nB-Header: value\r\n"
    assert formatter.format_headers(input_headers) == expected_output

    input_headers = "HTTP/1.1 200 OK\r\nX-Header: value\r\n

# Generated at 2024-06-02 16:33:08.838828
```python
    formatter = HeadersFormatter(format_options={'headers': {'sort': True}})
    input_headers = (
        "HTTP/1.1 200 OK\r\n"
        "Content-Type: text/html\r\n"
        "X-Custom-Header: value1\r\n"
        "X-Custom-Header: value2\r\n"
        "Content-Length: 1234\r\n"
    )
    expected_output = (
        "HTTP/1.1 200 OK\r\n"
        "Content-Length: 1234\r\n"
        "Content-Type: text/html\r\n"
        "X-Custom-Header: value1\r\n"
        "X-Custom-Header: value2\r\n"
    )
    assert formatter.format_headers(input_headers) == expected_output
```

# Generated at 2024-06-02 16:33:11.266408
```python
    formatter = HeadersFormatter(format_options={'headers': {'sort': True}})
    input_headers = (
        "HTTP/1.1 200 OK\r\n"
        "Content-Type: text/html\r\n"
        "X-Custom-Header: value1\r\n"
        "Content-Length: 1234\r\n"
        "X-Custom-Header: value2\r\n"
    )
    expected_output = (
        "HTTP/1.1 200 OK\r\n"
        "Content-Length: 1234\r\n"
        "Content-Type: text/html\r\n"
        "X-Custom-Header: value1\r\n"
        "X-Custom-Header: value2\r\n"
    )
    assert formatter.format_headers(input_headers) == expected_output
```

# Generated at 2024-06-02 16:33:13.880746
```python
    formatter = HeadersFormatter(format_options={'headers': {'sort': True}})
    input_headers = (
        "HTTP/1.1 200 OK\r\n"
        "Content-Type: text/html\r\n"
        "X-Custom-Header: value1\r\n"
        "X-Custom-Header: value2\r\n"
        "Content-Length: 1234\r\n"
    )
    expected_output = (
        "HTTP/1.1 200 OK\r\n"
        "Content-Length: 1234\r\n"
        "Content-Type: text/html\r\n"
        "X-Custom-Header: value1\r\n"
        "X-Custom-Header: value2\r\n"
    )
    assert formatter.format_headers(input_headers) == expected_output
```

# Generated at 2024-06-02 16:33:16.313092
```python
    formatter = HeadersFormatter(format_options={'headers': {'sort': True}})
    input_headers = (
        "HTTP/1.1 200 OK\r\n"
        "Content-Type: text/html\r\n"
        "X-Custom-Header: value1\r\n"
        "Accept: */*\r\n"
        "X-Custom-Header: value2\r\n"
    )
    expected_output = (
        "HTTP/1.1 200 OK\r\n"
        "Accept: */*\r\n"
        "Content-Type: text/html\r\n"
        "X-Custom-Header: value1\r\n"
        "X-Custom-Header: value2\r\n"
    )
    assert formatter.format_headers(input_headers) == expected_output
```