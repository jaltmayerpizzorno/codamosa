

# Generated at 2024-06-01 05:41:00.479333
```python
    connection = Connection()
    connection._psrp_host = "test_host"
    connection._exec_psrp_script = lambda script: (0, base64.b64encode(b"test_data").decode(), "")
    connection._psrp_host = "test_host"
    connection._psrp_user = "test_user"
    connection._psrp_pass = "test_pass"
    connection._psrp_protocol = "https"
    connection._psrp_port = 5986
    connection._psrp_path = "/wsman"
    connection._psrp_auth = "basic"
    connection._psrp_cert_validation = True
    connection._psrp_connection_timeout = 30
    connection._psrp_read_timeout = 30
    connection._psrp_message_encryption = True
    connection._psrp_proxy = None
    connection._psrp_ignore_proxy = False
    connection._psrp_operation_timeout = 60
    connection._psrp_max

# Generated at 2024-06-01 05:41:03.031814
```python
    connection = Connection()
    connection.runspace = Mock()
    connection.runspace.state = RunspacePoolState.OPENED
    connection._psrp_host = "test_host"
    connection._last_pipeline = None

    script = "Write-Output 'Hello, World!'"
    expected_rc = 0
    expected_stdout = b"Hello, World!\r\n"
    expected_stderr = b""

    connection._exec_psrp_script = Mock(return_value=(expected_rc, expected_stdout, expected_stderr))

    rc, stdout, stderr = connection._exec_psrp_script(script)

    assert rc == expected_rc
    assert stdout == expected_stdout
    assert stderr == expected_stderr
```

# Generated at 2024-06-01 05:41:04.916754
```python
    connection = Connection()
    connection.runspace = Mock()
    connection.runspace.state = RunspacePoolState.OPENED
    connection._psrp_host = "test_host"
    
    with patch('display.vvvvv') as mock_vvvvv:
        connection.close()
        mock_vvvvv.assert_called_with("PSRP CLOSE RUNSPACE: %s" % (connection.runspace.id), host=connection._psrp_host)
    
    assert connection.runspace is None
    assert connection._connected is False
    assert connection._last_pipeline is None
```

# Generated at 2024-06-01 05:41:06.753696
```python
    connection = Connection()
    connection.runspace = Mock()
    connection.runspace.state = RunspacePoolState.OPENED
    connection.runspace.id = 'test_id'
    connection._psrp_host = 'test_host'

    with patch('display.vvvvv') as mock_vvvvv:
        connection.close()
        mock_vvvvv.assert_called_with("PSRP CLOSE RUNSPACE: test_id", host='test_host')
        connection.runspace.close.assert_called_once()

    assert connection.runspace is None
    assert connection._connected is False
    assert connection._last_pipeline is None
```

# Generated at 2024-06-01 05:41:09.968438
```python
    connection = Connection()
    connection._psrp_host = "test_host"
    connection._psrp_user = "test_user"
    connection._psrp_pass = "test_pass"
    connection._psrp_protocol = "https"
    connection._psrp_port = 5986
    connection._psrp_path = "/wsman"
    connection._psrp_auth = "basic"
    connection._psrp_cert_validation = True
    connection._psrp_connection_timeout = 30
    connection._psrp_read_timeout = 30
    connection._psrp_message_encryption = True
    connection._psrp_proxy = None
    connection._psrp_ignore_proxy = False
    connection._psrp_operation_timeout = 60
    connection._psrp_max_envelope_size = 153600
    connection._psrp_configuration_name = "Microsoft.PowerShell"
    connection._psrp_reconnection_retries = 5
    connection._ps

# Generated at 2024-06-01 05:41:12.378098
```python
    connection = Connection()
    connection.runspace = Mock()
    connection.runspace.state = RunspacePoolState.OPENED
    connection.runspace.id = 'test_id'
    connection._psrp_host = 'test_host'
    connection._connected = True
    connection._last_pipeline = 'test_pipeline'

    with patch('display.vvvvv') as mock_vvvvv, patch.object(connection.runspace, 'close') as mock_close:
        connection.close()
        mock_vvvvv.assert_called_once_with("PSRP CLOSE RUNSPACE: test_id", host='test_host')
        mock_close.assert_called_once()
        assert connection.runspace is None
        assert connection._connected is False
        assert connection._last_pipeline is None
```

# Generated at 2024-06-01 05:41:14.642001
```python
    connection = Connection()
    connection.runspace = Mock()
    connection.runspace.state = RunspacePoolState.OPENED
    connection.runspace.id = 'test_id'
    connection._psrp_host = 'test_host'

    with patch('display.vvvvv') as mock_display_vvvvv:
        connection.close()
        mock_display_vvvvv.assert_called_with("PSRP CLOSE RUNSPACE: test_id", host='test_host')
        connection.runspace.close.assert_called_once()

    assert connection.runspace is None
    assert connection._connected is False
    assert connection._last_pipeline is None
```

# Generated at 2024-06-01 05:41:17.751823
```python
    connection = Connection()
    connection.runspace = Mock()
    connection.runspace.state = RunspacePoolState.OPENED
    connection._psrp_host = 'localhost'
    connection._last_pipeline = None

    script = "Write-Output 'Hello, World!'"
    expected_rc = 0
    expected_stdout = b'Hello, World!\r\n'
    expected_stderr = b''

    connection._exec_psrp_script = Mock(return_value=(expected_rc, expected_stdout, expected_stderr))

    rc, stdout, stderr = connection._exec_psrp_script(script)

    assert rc == expected_rc
    assert stdout == expected_stdout
    assert stderr == expected_stderr
```

# Generated at 2024-06-01 05:41:19.166543
```python
    connection = Connection()
    connection.runspace = Mock()
    connection.runspace.state = RunspacePoolState.OPENED
    connection._psrp_host = "test_host"
    connection._connected = True
    connection._last_pipeline = Mock()

    connection.reset()

    assert connection.runspace is None
    assert connection._connected is False
    assert connection._last_pipeline is None
```

# Generated at 2024-06-01 05:41:21.360291
```python
    connection = Connection()
    connection.runspace = Mock()
    connection.runspace.state = RunspacePoolState.OPENED
    connection.runspace.id = 'test_id'
    connection._psrp_host = 'test_host'
    connection._connected = True
    connection._last_pipeline = 'test_pipeline'

    with patch('display.vvvvv') as mock_display_vvvvv:
        connection.close()
        mock_display_vvvvv.assert_called_with("PSRP CLOSE RUNSPACE: test_id", host='test_host')

    assert connection.runspace is None
    assert connection._connected is False
    assert connection._last_pipeline is None
```

# Generated at 2024-06-01 05:41:47.150649
```python
    connection = Connection()
    connection._psrp_host = "test_host"
    connection._psrp_user = "test_user"
    connection._psrp_pass = "test_pass"
    connection._psrp_protocol = "https"
    connection._psrp_port = 5986
    connection._psrp_path = "/wsman"
    connection._psrp_auth = "basic"
    connection._psrp_cert_validation = True
    connection._psrp_connection_timeout = 30
    connection._psrp_read_timeout = 30
    connection._psrp_message_encryption = True
    connection._psrp_proxy = None
    connection._psrp_ignore_proxy = False
    connection._psrp_operation_timeout = 60
    connection._psrp_max_envelope_size = 153600
    connection._psrp_configuration_name = "Microsoft.PowerShell"
    connection._psrp_reconnection_retries = 5
    connection._ps

# Generated at 2024-06-01 05:41:50.347324
```python
    connection = Connection()
    connection._psrp_host = "test_host"
    connection._psrp_user = "test_user"
    connection._psrp_pass = "test_pass"
    connection._psrp_protocol = "https"
    connection._psrp_port = 5986
    connection._psrp_path = "/wsman"
    connection._psrp_auth = "basic"
    connection._psrp_cert_validation = True
    connection._psrp_connection_timeout = 30
    connection._psrp_read_timeout = 30
    connection._psrp_message_encryption = True
    connection._psrp_proxy = None
    connection._psrp_ignore_proxy = False
    connection._psrp_operation_timeout = 60
    connection._psrp_max_envelope_size = 153600
    connection._psrp_configuration_name = "Microsoft.PowerShell"
    connection._psrp_reconnection_retries = 5
    connection._ps

# Generated at 2024-06-01 05:41:54.265319
```python
    connection = Connection()
    connection._psrp_host = "test_host"
    connection._psrp_user = "test_user"
    connection._psrp_pass = "test_pass"
    connection._psrp_protocol = "https"
    connection._psrp_port = 5986
    connection._psrp_path = "/wsman"
    connection._psrp_auth = "basic"
    connection._psrp_cert_validation = True
    connection._psrp_connection_timeout = 30
    connection._psrp_read_timeout = 30
    connection._psrp_message_encryption = True
    connection._psrp_proxy = None
    connection._psrp_ignore_proxy = False
    connection._psrp_operation_timeout = 60
    connection._psrp_max_envelope_size = 153600
    connection._psrp_configuration_name = "Microsoft.PowerShell"
    connection._psrp_reconnection_retries = 3
    connection._ps

# Generated at 2024-06-01 05:41:57.253948
```python
    connection = Connection()
    connection._psrp_host = "test_host"
    connection._psrp_user = "test_user"
    connection._psrp_pass = "test_pass"
    connection.runspace = Mock()
    connection.runspace.state = RunspacePoolState.OPENED
    connection._exec_psrp_script = Mock(return_value=(0, base64.b64encode(b"test_data").decode(), ""))
    connection._psrp_conn_kwargs = {}

    in_path = "test_in_path"
    out_path = "test_out_path"
    buffer_size = 1024
    read_script = "test_read_script %d"

    with patch("builtins.open", mock_open()) as mocked_file:
        connection.put_file(in_path, out_path, buffer_size, read_script)

        mocked_file.assert_called_once_with(out_path, 'wb')
        handle = mocked_file()
        handle.write.assert_called_once_with(b"test_data")
        connection._

# Generated at 2024-06-01 05:42:00.213890
```python
    connection = Connection()
    connection._psrp_host = "test_host"
    connection._psrp_user = "test_user"
    connection._psrp_pass = "test_pass"
    connection._psrp_protocol = "https"
    connection._psrp_port = 5986
    connection._psrp_path = "/wsman"
    connection._psrp_auth = "basic"
    connection._psrp_cert_validation = True
    connection._psrp_connection_timeout = 30
    connection._psrp_read_timeout = 30
    connection._psrp_message_encryption = True
    connection._psrp_proxy = None
    connection._psrp_ignore_proxy = False
    connection._psrp_operation_timeout = 60
    connection._psrp_max_envelope_size = 153600
    connection._psrp_configuration_name = "Microsoft.PowerShell"
    connection._psrp_reconnection_retries = 5
    connection._ps

# Generated at 2024-06-01 05:42:03.950128
```python
    connection = Connection()
    connection._psrp_host = "test_host"
    connection._psrp_user = "test_user"
    connection._psrp_pass = "test_pass"
    connection._psrp_protocol = "https"
    connection._psrp_port = 5986
    connection._psrp_path = "/wsman"
    connection._psrp_auth = "basic"
    connection._psrp_cert_validation = True
    connection._psrp_connection_timeout = 30
    connection._psrp_read_timeout = 30
    connection._psrp_message_encryption = True
    connection._psrp_proxy = None
    connection._psrp_ignore_proxy = False
    connection._psrp_operation_timeout = 60
    connection._psrp_max_envelope_size = 153600
    connection._psrp_configuration_name = "Microsoft.PowerShell"
    connection._psrp_reconnection_retries = 3
    connection._ps

# Generated at 2024-06-01 05:42:07.221228
```python
    connection = Connection()
    connection.runspace = Mock()
    connection.runspace.state = RunspacePoolState.OPENED
    connection._psrp_host = "test_host"
    connection._last_pipeline = None

    script = "Get-Process"
    input_data = None
    use_local_scope = True
    arguments = None

    ps = Mock()
    ps.invoke = Mock()
    ps.add_script = Mock()
    ps.add_argument = Mock()
    connection.runspace.pipeline = ps

    connection._parse_pipeline_result = Mock(return_value=(0, b"output", b""))

    rc, stdout, stderr = connection._exec_psrp_script(script, input_data, use_local_scope, arguments)

    assert rc == 0
    assert stdout == b"output"
    assert stderr == b""
    connection._parse_pipeline_result.assert_called_once_with(ps)
    ps.add_script.assert_called_once_with(script, use_local_scope=use_local

# Generated at 2024-06-01 05:42:09.942994
```python
    connection = Connection()
    connection._psrp_host = "test_host"
    connection._psrp_user = "test_user"
    connection._psrp_pass = "test_pass"
    connection.runspace = Mock()
    connection.runspace.state = RunspacePoolState.OPENED
    connection._exec_psrp_script = Mock(return_value=(0, base64.b64encode(b"test_data").decode(), ""))

    in_path = "test_in_path"
    out_path = "test_out_path"
    buffer_size = 1024
    read_script = "test_read_script %d"

    with patch("builtins.open", mock_open()) as mocked_file:
        connection.put_file(in_path, out_path, buffer_size, read_script)
        mocked_file.assert_called_once_with(out_path, 'wb')
        handle = mocked_file()
        handle.write.assert_called_once_with(b"test_data")
```

# Generated at 2024-06-01 05:42:11.544110
```python
    connection = Connection()
    connection.runspace = Mock()
    connection.runspace.state = RunspacePoolState.OPENED
    connection._psrp_host = "test_host"
    connection._connected = True
    connection._last_pipeline = Mock()

    connection.reset()

    assert connection.runspace is None
    assert connection._connected is False
    assert connection._last_pipeline is None
```

# Generated at 2024-06-01 05:42:14.356577
```python
    connection = Connection()
    connection._psrp_host = "test_host"
    connection._psrp_user = "test_user"
    connection._psrp_pass = "test_pass"
    connection._psrp_protocol = "https"
    connection._psrp_port = 5986
    connection._psrp_path = "/wsman"
    connection._psrp_auth = "basic"
    connection._psrp_cert_validation = True
    connection._psrp_connection_timeout = 30
    connection._psrp_read_timeout = 30
    connection._psrp_message_encryption = True
    connection._psrp_proxy = None
    connection._psrp_ignore_proxy = False
    connection._psrp_operation_timeout = 60
    connection._psrp_max_envelope_size = 153600
    connection._psrp_configuration_name = "Microsoft.PowerShell"
    connection._psrp_reconnection_retries = 3
    connection._ps

# Generated at 2024-06-01 05:42:37.537222
```python
    connection = Connection()
    connection.runspace = Mock()
    connection.runspace.state = RunspacePoolState.OPENED
    connection._last_pipeline = None

    script = "Write-Output 'Hello, World!'"
    input_data = None
    use_local_scope = True
    arguments = None

    connection._exec_psrp_script = Mock(return_value=(0, b'Hello, World!', b''))

    rc, stdout, stderr = connection._exec_psrp_script(script, input_data, use_local_scope, arguments)

    assert rc == 0
    assert stdout == b'Hello, World!'
    assert stderr == b''
```

# Generated at 2024-06-01 05:42:38.946412
```python
    connection = Connection()
    connection.runspace = Mock()
    connection.runspace.state = RunspacePoolState.OPENED
    connection._psrp_host = "test_host"
    connection._connected = True
    connection._last_pipeline = Mock()

    connection.reset()

    assert connection.runspace is None
    assert connection._connected is False
    assert connection._last_pipeline is None
```

# Generated at 2024-06-01 05:42:42.075107
```python
    connection = Connection()
    connection._psrp_host = "test_host"
    connection._psrp_user = "test_user"
    connection._psrp_pass = "test_pass"
    connection._psrp_protocol = "https"
    connection._psrp_port = 5986
    connection._psrp_path = "/wsman"
    connection._psrp_auth = "basic"
    connection._psrp_cert_validation = True
    connection._psrp_connection_timeout = 30
    connection._psrp_read_timeout = 30
    connection._psrp_message_encryption = True
    connection._psrp_proxy = None
    connection._psrp_ignore_proxy = False
    connection._psrp_operation_timeout = 60
    connection._psrp_max_envelope_size = 153600
    connection._psrp_configuration_name = "Microsoft.PowerShell"
    connection._psrp_reconnection_retries = 5
    connection._ps

# Generated at 2024-06-01 05:42:45.171069
```python
    connection = Connection()
    connection._psrp_host = "test_host"
    connection._psrp_user = "test_user"
    connection._psrp_pass = "test_pass"
    connection._psrp_protocol = "https"
    connection._psrp_port = 5986
    connection._psrp_path = "/wsman"
    connection._psrp_auth = "basic"
    connection._psrp_cert_validation = False
    connection._psrp_connection_timeout = 30
    connection._psrp_read_timeout = 30
    connection._psrp_message_encryption = True
    connection._psrp_proxy = None
    connection._psrp_ignore_proxy = False
    connection._psrp_operation_timeout = 60
    connection._psrp_max_envelope_size = 153600
    connection._psrp_configuration_name = "Microsoft.PowerShell"
    connection._psrp_reconnection_retries = 3
    connection._ps

# Generated at 2024-06-01 05:42:48.100898
```python
    connection = Connection()
    connection.runspace = Mock()
    connection.runspace.state = RunspacePoolState.OPENED
    connection._psrp_host = "test_host"
    connection._last_pipeline = None

    script = "Write-Output 'Hello, World!'"
    input_data = None
    use_local_scope = True
    arguments = None

    # Mocking the PowerShell and pipeline behavior
    ps = Mock()
    ps.invoke = Mock()
    ps.add_script = Mock()
    ps.add_argument = Mock()
    ps.output = ["Hello, World!"]
    ps.streams.error = []
    ps.had_errors = False

    connection.runspace = Mock()
    connection.runspace.state = RunspacePoolState.OPENED

    with patch('PowerShell', return_value=ps):
        rc, stdout, stderr = connection._exec_psrp_script(script, input_data, use_local_scope, arguments)

    assert rc == 

# Generated at 2024-06-01 05:42:50.386180
```python
    connection = Connection()
    connection.runspace = Mock()
    connection.runspace.state = RunspacePoolState.OPENED
    connection._psrp_host = "test_host"
    connection._last_pipeline = None

    script = "Write-Output 'Hello, World!'"
    expected_rc = 0
    expected_stdout = b"Hello, World!\r\n"
    expected_stderr = b""

    connection._exec_psrp_script = Mock(return_value=(expected_rc, expected_stdout, expected_stderr))

    rc, stdout, stderr = connection._exec_psrp_script(script)

    assert rc == expected_rc
    assert stdout == expected_stdout
    assert stderr == expected_stderr
```

# Generated at 2024-06-01 05:42:53.380165
```python
    connection = Connection()
    connection._psrp_host = "test_host"
    connection._exec_psrp_script = lambda script: (0, base64.b64encode(b"test_data").decode(), "")
    connection._psrp_host = "test_host"
    connection._psrp_user = "test_user"
    connection._psrp_pass = "test_pass"
    connection._psrp_protocol = "https"
    connection._psrp_port = 5986
    connection._psrp_path = "/wsman"
    connection._psrp_auth = "basic"
    connection._psrp_cert_validation = True
    connection._psrp_connection_timeout = 30
    connection._psrp_read_timeout = 30
    connection._psrp_message_encryption = True
    connection._psrp_proxy = None
    connection._psrp_ignore_proxy = False
    connection._psrp_operation_timeout = 60
    connection._psrp_max

# Generated at 2024-06-01 05:42:55.786860
```python
    connection = Connection()
    connection.runspace = Mock()
    connection.runspace.state = RunspacePoolState.OPENED
    connection.runspace.id = 'test_id'
    connection._psrp_host = 'test_host'
    connection._connected = True
    connection._last_pipeline = 'test_pipeline'

    with patch('display.vvvvv') as mock_display_vvvvv, patch.object(connection.runspace, 'close') as mock_close:
        connection.close()
        mock_display_vvvvv.assert_called_once_with("PSRP CLOSE RUNSPACE: test_id", host='test_host')
        mock_close.assert_called_once()
        assert connection.runspace is None
        assert connection._connected is False
        assert connection._last_pipeline is None
```

# Generated at 2024-06-01 05:42:57.950711
```python
    connection = Connection()
    connection.runspace = Mock()
    connection.runspace.state = RunspacePoolState.OPENED
    connection._psrp_host = "test_host"

    with patch('display.vvvvv') as mock_display:
        connection.close()
        mock_display.assert_called_with("PSRP CLOSE RUNSPACE: %s" % (connection.runspace.id), host=connection._psrp_host)
        connection.runspace.close.assert_called_once()

    assert connection.runspace is None
    assert connection._connected is False
    assert connection._last_pipeline is None
```

# Generated at 2024-06-01 05:43:00.914903
```python
    connection = Connection()
    connection._psrp_host = "test_host"
    connection._psrp_user = "test_user"
    connection._psrp_pass = "test_pass"
    connection.runspace = Mock()
    connection.runspace.state = RunspacePoolState.OPENED
    connection._exec_psrp_script = Mock(return_value=(0, base64.b64encode(b"test_data").decode(), ""))

    in_path = "test_in_path"
    out_path = "test_out_path"
    buffer_size = 1024
    read_script = "test_read_script %d"

    with patch("builtins.open", mock_open()) as mocked_file:
        connection.put_file(in_path, out_path, buffer_size, read_script)
        mocked_file.assert_called_once_with(out_path, 'wb')
        handle = mocked_file()
        handle.write.assert_called_once_with(b"test_data")
```

# Generated at 2024-06-01 05:43:44.327308
```python
    connection = Connection()
    connection._psrp_host = "test_host"
    connection._exec_psrp_script = lambda script: (0, base64.b64encode(b"test_data").decode(), "")
    connection._psrp_host = "test_host"
    connection._psrp_user = "test_user"
    connection._psrp_pass = "test_pass"
    connection._psrp_protocol = "https"
    connection._psrp_port = 5986
    connection._psrp_path = "/wsman"
    connection._psrp_auth = "basic"
    connection._psrp_cert_validation = True
    connection._psrp_connection_timeout = 30
    connection._psrp_read_timeout = 30
    connection._psrp_message_encryption = True
    connection._psrp_proxy = None
    connection._psrp_ignore_proxy = False
    connection._psrp_operation_timeout = 60
    connection._psrp_max

# Generated at 2024-06-01 05:43:47.421431
```python
    connection = Connection()
    connection.runspace = Mock()
    connection.runspace.state = RunspacePoolState.OPENED
    connection._psrp_host = 'localhost'
    connection._last_pipeline = None

    script = "Write-Output 'Hello, World!'"
    input_data = None
    use_local_scope = True
    arguments = None

    # Mocking the PowerShell and pipeline behavior
    ps = Mock()
    ps.invoke = Mock()
    ps.add_script = Mock()
    ps.add_argument = Mock()
    ps.output = ["Hello, World!"]
    ps.streams.error = []
    ps.had_errors = False

    connection.runspace.pipeline = ps

    with patch('PowerShell', return_value=ps):
        rc, stdout, stderr = connection._exec_psrp_script(script, input_data, use_local_scope, arguments)

    assert rc == 0
    assert stdout == b"Hello, World!"
   

# Generated at 2024-06-01 05:43:49.918091
```python
    connection = Connection()
    connection.runspace = Mock()
    connection.runspace.state = RunspacePoolState.OPENED
    connection._psrp_host = 'localhost'
    connection._last_pipeline = None

    script = 'Write-Output "Hello, World!"'
    expected_rc = 0
    expected_stdout = b"Hello, World!\r\n"
    expected_stderr = b""

    connection._exec_psrp_script = Mock(return_value=(expected_rc, expected_stdout, expected_stderr))

    rc, stdout, stderr = connection._exec_psrp_script(script)

    assert rc == expected_rc
    assert stdout == expected_stdout
    assert stderr == expected_stderr
```

# Generated at 2024-06-01 05:43:53.377265
```python
    connection = Connection()
    connection.runspace = Mock()
    connection.runspace.state = RunspacePoolState.OPENED
    connection._last_pipeline = None

    script = "Get-Process"
    input_data = None
    use_local_scope = True
    arguments = None

    # Mocking the PowerShell and pipeline behavior
    ps = Mock()
    ps.invoke = Mock()
    ps.add_script = Mock()
    ps.add_argument = Mock()
    ps.output = ["Process1", "Process2"]
    ps.streams.error = []
    connection._parse_pipeline_result = Mock(return_value=(0, b"Process1\r\nProcess2", b""))

    with patch('PowerShell', return_value=ps):
        rc, stdout, stderr = connection._exec_psrp_script(script, input_data, use_local_scope, arguments)

    assert rc == 0
    assert stdout == b"Process1\r\nProcess2"
    assert

# Generated at 2024-06-01 05:43:56.374202
```python
    connection = Connection()
    connection._psrp_host = "test_host"
    connection._psrp_user = "test_user"
    connection._psrp_pass = "test_pass"
    connection._psrp_protocol = "https"
    connection._psrp_port = 5986
    connection._psrp_path = "/wsman"
    connection._psrp_auth = "basic"
    connection._psrp_cert_validation = False
    connection._psrp_connection_timeout = 30
    connection._psrp_read_timeout = 30
    connection._psrp_message_encryption = True
    connection._psrp_proxy = None
    connection._psrp_ignore_proxy = False
    connection._psrp_operation_timeout = 60
    connection._psrp_max_envelope_size = 153600
    connection._psrp_configuration_name = "Microsoft.PowerShell"
    connection._psrp_reconnection_retries = 5
    connection._ps

# Generated at 2024-06-01 05:43:57.989620
```python
    connection = Connection()
    connection.runspace = Mock()
    connection.runspace.state = RunspacePoolState.OPENED
    connection._psrp_host = "test_host"
    connection._connected = True
    connection._last_pipeline = Mock()

    connection.reset()

    assert connection.runspace is None
    assert connection._connected is False
    assert connection._last_pipeline is None
```

# Generated at 2024-06-01 05:44:02.426261
```python
    connection = Connection()
    connection._psrp_host = "test_host"
    connection._psrp_user = "test_user"
    connection._psrp_pass = "test_pass"
    connection.runspace = Mock()
    connection.runspace.state = RunspacePoolState.OPENED

    in_path = "test_in_path"
    out_path = "test_out_path"
    buffer_size = 1024
    read_script = "test_read_script"
    offset = 0

    with patch("builtins.open", mock_open()) as mocked_file, \
         patch.object(connection, "_exec_psrp_script", return_value=(0, base64.b64encode(b"test_data").decode(), "")) as mock_exec_psrp_script, \
         patch("base64.b64decode", return_value=b"test_data") as mock_b64decode, \
         patch("ansible.plugins.connection.display.vvvvv") as mock_display_vvvvv, \
         patch("

# Generated at 2024-06-01 05:44:05.449344
```python
    connection = Connection()
    connection.runspace = Mock()
    connection.runspace.state = RunspacePoolState.OPENED
    connection._psrp_host = "test_host"
    connection._last_pipeline = None

    script = "Get-Process"
    input_data = None
    use_local_scope = True
    arguments = None

    ps = Mock()
    ps.invoke = Mock()
    ps.add_script = Mock()
    ps.add_argument = Mock()
    connection._parse_pipeline_result = Mock(return_value=(0, b"output", b""))

    with patch("PowerShell", return_value=ps):
        rc, stdout, stderr = connection._exec_psrp_script(script, input_data, use_local_scope, arguments)

    assert rc == 0
    assert stdout == b"output"
    assert stderr == b""
    ps.add_script.assert_called_with(script, use_local_scope=use_local_scope)
    ps.invoke.assert_called_with(input

# Generated at 2024-06-01 05:44:08.217251
```python
    connection = Connection()
    connection._psrp_host = "test_host"
    connection._psrp_user = "test_user"
    connection._psrp_pass = "test_pass"
    connection._psrp_protocol = "https"
    connection._psrp_port = 5986
    connection._psrp_path = "/wsman"
    connection._psrp_auth = "basic"
    connection._psrp_cert_validation = True
    connection._psrp_connection_timeout = 30
    connection._psrp_read_timeout = 30
    connection._psrp_message_encryption = True
    connection._psrp_proxy = None
    connection._psrp_ignore_proxy = False
    connection._psrp_operation_timeout = 60
    connection._psrp_max_envelope_size = 153600
    connection._psrp_configuration_name = "Microsoft.PowerShell"
    connection._psrp_reconnection_retries = 5
    connection._ps

# Generated at 2024-06-01 05:44:11.013153
```python
    connection = Connection()
    connection._psrp_host = "test_host"
    connection._psrp_user = "test_user"
    connection._psrp_pass = "test_pass"
    connection.runspace = Mock()
    connection.runspace.state = RunspacePoolState.OPENED

    in_path = "test_in_path"
    out_path = "test_out_path"
    b_out_path = "test_b_out_path"
    buffer_size = 1024
    offset = 0
    read_script = "test_read_script"

    connection._exec_psrp_script = Mock(return_value=(0, base64.b64encode(b"test_data").decode(), ""))
    connection._psrp_host = "test_host"

    with patch("builtins.open", mock_open()) as mocked_file:
        connection.put_file(in_path, out_path, b_out_path, buffer_size, offset, read_script)
        mocked_file.assert_called_once_with(b_out_path,

# Generated at 2024-06-01 05:45:33.054004
```python
    connection = Connection()
    connection.runspace = Mock()
    connection.runspace.state = RunspacePoolState.OPENED
    connection._psrp_host = "test_host"
    connection._connected = True
    connection._last_pipeline = Mock()

    connection.reset()

    assert connection.runspace is None
    assert connection._connected is False
    assert connection._last_pipeline is None
```

# Generated at 2024-06-01 05:45:34.532998
```python
    connection = Connection()
    connection.runspace = Mock()
    connection.runspace.state = RunspacePoolState.OPENED
    connection._psrp_host = "test_host"
    connection._connected = True
    connection._last_pipeline = Mock()

    connection.reset()

    assert connection.runspace is None
    assert connection._connected is False
    assert connection._last_pipeline is None
```

# Generated at 2024-06-01 05:45:36.919356
```python
    connection = Connection()
    connection.runspace = Mock()
    connection.runspace.state = RunspacePoolState.OPENED
    connection._psrp_host = "test_host"
    connection._last_pipeline = None

    script = "Write-Output 'Hello, World!'"
    input_data = None
    use_local_scope = True
    arguments = None

    connection._exec_psrp_script = Mock(return_value=(0, b"Hello, World!", b""))

    rc, stdout, stderr = connection._exec_psrp_script(script, input_data, use_local_scope, arguments)

    assert rc == 0
    assert stdout == b"Hello, World!"
    assert stderr == b""
```

# Generated at 2024-06-01 05:45:39.042349
```python
    connection = Connection()
    connection.runspace = Mock()
    connection.runspace.state = RunspacePoolState.OPENED
    connection.runspace.id = 'test_id'
    connection._psrp_host = 'test_host'
    connection._connected = True
    connection._last_pipeline = 'test_pipeline'

    with patch('display.vvvvv') as mock_vvvvv, patch.object(connection.runspace, 'close') as mock_close:
        connection.close()
        mock_vvvvv.assert_called_with("PSRP CLOSE RUNSPACE: test_id", host='test_host')
        mock_close.assert_called_once()
        assert connection.runspace is None
        assert connection._connected is False
        assert connection._last_pipeline is None
```

# Generated at 2024-06-01 05:45:41.772799
```python
    connection = Connection()
    connection._psrp_host = "test_host"
    connection._psrp_user = "test_user"
    connection._psrp_pass = "test_pass"
    connection._psrp_protocol = "https"
    connection._psrp_port = 5986
    connection._psrp_path = "/wsman"
    connection._psrp_auth = "basic"
    connection._psrp_cert_validation = True
    connection._psrp_connection_timeout = 30
    connection._psrp_read_timeout = 30
    connection._psrp_message_encryption = True
    connection._psrp_proxy = None
    connection._psrp_ignore_proxy = False
    connection._psrp_operation_timeout = 60
    connection._psrp_max_envelope_size = 153600
    connection._psrp_configuration_name = "Microsoft.PowerShell"
    connection._psrp_reconnection_retries = 3
    connection._ps

# Generated at 2024-06-01 05:45:44.689174
```python
    connection = Connection()
    connection._psrp_host = "test_host"
    connection._psrp_user = "test_user"
    connection._psrp_pass = "test_pass"
    connection.runspace = Mock()
    connection.runspace.state = RunspacePoolState.OPENED
    connection._exec_psrp_script = Mock(return_value=(0, base64.b64encode(b"test_data").decode(), ""))

    in_path = "test_in_path"
    out_path = "test_out_path"
    buffer_size = 1024
    read_script = "test_read_script %d"

    with patch("builtins.open", mock_open()) as mocked_file:
        connection.put_file(in_path, out_path, buffer_size, read_script)

        mocked_file.assert_called_once_with(out_path, 'wb')
        handle = mocked_file()
        handle.write.assert_called_once_with(b"test_data")
        connection._exec_psrp_script.assert_called_with(read_script

# Generated at 2024-06-01 05:45:48.746996
```python
    connection = Connection()
    connection._psrp_host = "test_host"
    connection._psrp_user = "test_user"
    connection._psrp_pass = "test_pass"
    connection._psrp_protocol = "https"
    connection._psrp_port = 5986
    connection._psrp_path = "/wsman"
    connection._psrp_auth = "basic"
    connection._psrp_cert_validation = False
    connection._psrp_connection_timeout = 30
    connection._psrp_read_timeout = 30
    connection._psrp_message_encryption = True
    connection._psrp_proxy = None
    connection._psrp_ignore_proxy = False
    connection._psrp_operation_timeout = 60
    connection._psrp_max_envelope_size = 153600
    connection._psrp_configuration_name = "Microsoft.PowerShell"
    connection._psrp_reconnection_retries = 3
    connection._ps

# Generated at 2024-06-01 05:45:52.238124
```python
    connection = Connection()
    connection._psrp_host = "test_host"
    connection._psrp_user = "test_user"
    connection._psrp_pass = "test_pass"
    connection._psrp_protocol = "https"
    connection._psrp_port = 5986
    connection._psrp_path = "/wsman"
    connection._psrp_auth = "basic"
    connection._psrp_cert_validation = True
    connection._psrp_connection_timeout = 30
    connection._psrp_read_timeout = 30
    connection._psrp_message_encryption = True
    connection._psrp_proxy = None
    connection._psrp_ignore_proxy = False
    connection._psrp_operation_timeout = 60
    connection._psrp_max_envelope_size = 153600
    connection._psrp_configuration_name = "Microsoft.PowerShell"
    connection._psrp_reconnection_retries = 5
    connection._ps

# Generated at 2024-06-01 05:45:55.029610
```python
    connection = Connection()
    connection._psrp_host = "test_host"
    connection._psrp_user = "test_user"
    connection._psrp_pass = "test_pass"
    connection.runspace = Mock()
    connection.runspace.state = RunspacePoolState.OPENED

    in_path = "test_in_path"
    out_path = "test_out_path"
    b_out_path = "test_b_out_path"
    buffer_size = 1024
    offset = 0
    read_script = "test_read_script"

    with patch("builtins.open", mock_open()) as mocked_file, \
         patch.object(connection, '_exec_psrp_script', return_value=(0, base64.b64encode(b'test_data').decode(), '')) as mock_exec_psrp_script, \
         patch("base64.b64decode", return_value=b'test_data') as mock_b64decode, \
         patch("ansible.plugins.connection.display.vvvvv

# Generated at 2024-06-01 05:45:57.851709
```python
    connection = Connection()
    connection._psrp_host = "test_host"
    connection._psrp_user = "test_user"
    connection._psrp_pass = "test_pass"
    connection.runspace = Mock()
    connection.runspace.state = RunspacePoolState.OPENED

    in_path = "test_in_path"
    out_path = "test_out_path"
    buffer_size = 1024
    read_script = "test_read_script"
    offset = 0

    with patch("builtins.open", mock_open()) as mocked_file, \
         patch.object(connection, "_exec_psrp_script", return_value=(0, base64.b64encode(b"test_data").decode(), "")) as mock_exec_psrp_script, \
         patch("base64.b64decode", return_value=b"test_data") as mock_b64decode, \
         patch("ansible.plugins.connection.display.vvvvv") as mock_vvvvv:

        connection.put_file(in

# Generated at 2024-06-01 05:48:41.568718
```python
    connection = Connection()
    connection.runspace = Mock()
    connection.runspace.state = RunspacePoolState.OPENED
    connection._psrp_host = "localhost"
    connection._last_pipeline = None

    script = "Write-Output 'Hello, World!'"
    expected_rc = 0
    expected_stdout = b"Hello, World!\r\n"
    expected_stderr = b""

    connection._exec_psrp_script = Mock(return_value=(expected_rc, expected_stdout, expected_stderr))

    rc, stdout, stderr = connection._exec_psrp_script(script)

    assert rc == expected_rc
    assert stdout == expected_stdout
    assert stderr == expected_stderr
```

# Generated at 2024-06-01 05:48:43.135570
```python
    conn = Connection()
    conn.runspace = Mock()
    conn.runspace.state = RunspacePoolState.OPENED
    conn._psrp_host = "test_host"
    conn._connected = True
    conn._last_pipeline = Mock()

    conn.reset()

    assert conn.runspace is None
    assert conn._connected is False
    assert conn._last_pipeline is None
```

# Generated at 2024-06-01 05:48:45.521517
```python
    connection = Connection()
    connection.runspace = Mock()
    connection.runspace.state = RunspacePoolState.OPENED
    connection._psrp_host = "test_host"
    connection._last_pipeline = None

    script = "Write-Output 'Hello, World!'"
    expected_rc = 0
    expected_stdout = b"Hello, World!\r\n"
    expected_stderr = b""

    connection._exec_psrp_script = Mock(return_value=(expected_rc, expected_stdout, expected_stderr))

    rc, stdout, stderr = connection._exec_psrp_script(script)

    assert rc == expected_rc
    assert stdout == expected_stdout
    assert stderr == expected_stderr
```

# Generated at 2024-06-01 05:48:48.468862
```python
    connection = Connection()
    connection.runspace = Mock()
    connection.runspace.state = RunspacePoolState.OPENED
    connection._psrp_host = "test_host"
    connection._psrp_user = "test_user"
    connection._psrp_pass = "test_pass"
    connection._psrp_protocol = "https"
    connection._psrp_port = 5986
    connection._psrp_path = "test_path"
    connection._psrp_auth = "test_auth"
    connection._psrp_cert_validation = True
    connection._psrp_connection_timeout = 30
    connection._psrp_read_timeout = 30
    connection._psrp_message_encryption = True
    connection._psrp_proxy = "test_proxy"
    connection._psrp_ignore_proxy = False
    connection._psrp_operation_timeout = 60
    connection._psrp_max_envelope_size = 153600
    connection._psrp_configuration_name

# Generated at 2024-06-01 05:48:51.455014
```python
    connection = Connection()
    connection._psrp_host = "test_host"
    connection._psrp_user = "test_user"
    connection._psrp_pass = "test_pass"
    connection._psrp_protocol = "https"
    connection._psrp_port = 5986
    connection._psrp_path = "/wsman"
    connection._psrp_auth = "basic"
    connection._psrp_cert_validation = True
    connection._psrp_connection_timeout = 30
    connection._psrp_read_timeout = 30
    connection._psrp_message_encryption = True
    connection._psrp_proxy = None
    connection._psrp_ignore_proxy = False
    connection._psrp_operation_timeout = 60
    connection._psrp_max_envelope_size = 153600
    connection._psrp_configuration_name = "Microsoft.PowerShell"
    connection._psrp_reconnection_retries = 5
    connection._ps

# Generated at 2024-06-01 05:48:54.417046
```python
    connection = Connection()
    connection._psrp_host = "test_host"
    connection._psrp_user = "test_user"
    connection._psrp_pass = "test_pass"
    connection._psrp_protocol = "https"
    connection._psrp_port = 5986
    connection._psrp_path = "/wsman"
    connection._psrp_auth = "basic"
    connection._psrp_cert_validation = True
    connection._psrp_connection_timeout = 30
    connection._psrp_read_timeout = 30
    connection._psrp_message_encryption = True
    connection._psrp_proxy = None
    connection._psrp_ignore_proxy = False
    connection._psrp_operation_timeout = 60
    connection._psrp_max_envelope_size = 153600
    connection._psrp_configuration_name = "Microsoft.PowerShell"
    connection._psrp_reconnection_retries = 5
    connection._ps

# Generated at 2024-06-01 05:48:56.603933
```python
    connection = Connection()
    connection.runspace = Mock()
    connection.runspace.state = RunspacePoolState.OPENED
    connection._psrp_host = "localhost"
    connection._last_pipeline = None

    script = "Write-Output 'Hello, World!'"
    expected_rc = 0
    expected_stdout = b"Hello, World!\r\n"
    expected_stderr = b""

    connection._exec_psrp_script = Mock(return_value=(expected_rc, expected_stdout, expected_stderr))

    rc, stdout, stderr = connection.exec_command(script)

    assert rc == expected_rc
    assert stdout == expected_stdout
    assert stderr == expected_stderr
```

# Generated at 2024-06-01 05:48:58.983890
```python
    connection = Connection()
    connection.runspace = Mock()
    connection.runspace.state = RunspacePoolState.OPENED
    connection._psrp_host = "test_host"
    connection._last_pipeline = None

    script = "Write-Output 'Hello, World!'"
    expected_rc = 0
    expected_stdout = b"Hello, World!\r\n"
    expected_stderr = b""

    connection._exec_psrp_script = Mock(return_value=(expected_rc, expected_stdout, expected_stderr))

    rc, stdout, stderr = connection._exec_psrp_script(script)

    assert rc == expected_rc
    assert stdout == expected_stdout
    assert stderr == expected_stderr
```

# Generated at 2024-06-01 05:49:01.750202
```python
    connection = Connection()
    connection._psrp_host = "test_host"
    connection._psrp_user = "test_user"
    connection._psrp_pass = "test_pass"
    connection.runspace = Mock()
    connection.runspace.state = RunspacePoolState.OPENED

    in_path = "test_in_path"
    out_path = "test_out_path"
    b_out_path = "test_b_out_path"
    buffer_size = 1024
    offset = 0
    read_script = "test_read_script"

    connection._exec_psrp_script = Mock(return_value=(0, base64.b64encode(b"test_data").decode(), ""))
    connection.put_file(in_path, out_path, b_out_path, buffer_size, offset, read_script)

    connection._exec_psrp_script.assert_called_with("$fs.Close()")
    assert connection._exec_psrp_script.call_count > 1
    assert connection._exec_psrp_script

# Generated at 2024-06-01 05:49:04.795742
```python
    connection = Connection()
    connection._psrp_host = "test_host"
    connection._psrp_user = "test_user"
    connection._psrp_pass = "test_pass"
    connection._psrp_protocol = "https"
    connection._psrp_port = 5986
    connection._psrp_path = "/wsman"
    connection._psrp_auth = "basic"
    connection._psrp_cert_validation = True
    connection._psrp_connection_timeout = 30
    connection._psrp_read_timeout = 30
    connection._psrp_message_encryption = True
    connection._psrp_proxy = None
    connection._psrp_ignore_proxy = False
    connection._psrp_operation_timeout = 60
    connection._psrp_max_envelope_size = 153600
    connection._psrp_configuration_name = "Microsoft.PowerShell"
    connection._psrp_reconnection_retries = 3
    connection._ps