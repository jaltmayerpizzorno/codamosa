

# Generated at 2024-06-01 14:57:20.295422
```python
    reserved_names = get_reserved_names()
    assert 'action' in reserved_names
    assert 'local_action' in reserved_names
    assert 'with_' in reserved_names
    assert isinstance(reserved_names, set)

    reserved_names_no_private = get_reserved_names(include_private=False)
    assert 'action' in reserved_names_no_private
    assert 'local_action' in reserved_names_no_private
    assert 'with_' in reserved_names_no_private
    assert isinstance(reserved_names_no_private, set)
    assert len(reserved_names_no_private) <= len(reserved_names)
```

# Generated at 2024-06-01 14:57:23.609396
```python
    reserved_names = get_reserved_names()
    assert 'action' in reserved_names
    assert 'local_action' in reserved_names
    assert 'with_' in reserved_names
    assert isinstance(reserved_names, set)
    assert all(isinstance(name, str) for name in reserved_names)
```

# Generated at 2024-06-01 14:57:25.998231
```python
    reserved_names = get_reserved_names()
    assert 'action' in reserved_names
    assert 'local_action' in reserved_names
    assert 'with_' in reserved_names
    assert 'private' not in reserved_names  # assuming 'private' is not an actual attribute name
    assert isinstance(reserved_names, set)

    reserved_names_no_private = get_reserved_names(include_private=False)
    assert 'private' not in reserved_names_no_private  # assuming 'private' is not an actual attribute name
    assert 'action' in reserved_names_no_private
    assert 'local_action' in reserved_names_no_private
    assert 'with_' in reserved_names_no_private
    assert isinstance(reserved_names_no_private, set)
```

# Generated at 2024-06-01 14:57:27.895114
```python
    reserved_names = get_reserved_names()
    assert 'action' in reserved_names
    assert 'local_action' in reserved_names
    assert 'with_' in reserved_names
    assert isinstance(reserved_names, set)

    reserved_names_no_private = get_reserved_names(include_private=False)
    assert 'action' in reserved_names_no_private
    assert 'local_action' in reserved_names_no_private
    assert 'with_' in reserved_names_no_private
    assert isinstance(reserved_names_no_private, set)
```

# Generated at 2024-06-01 14:57:29.258938
```python
    reserved_names = get_reserved_names()
    assert 'action' in reserved_names
    assert 'local_action' in reserved_names
    assert 'with_' in reserved_names
    assert isinstance(reserved_names, set)
    assert all(isinstance(name, str) for name in reserved_names)
```

# Generated at 2024-06-01 14:57:31.076935
```python
    reserved_names = get_reserved_names()
    assert isinstance(reserved_names, set)
    assert 'action' in reserved_names
    assert 'local_action' in reserved_names
    assert 'with_' in reserved_names
    assert 'private' not in reserved_names  # assuming 'private' is a placeholder for actual private attributes
    assert 'vars' not in reserved_names  # 'vars' should not be in the reserved names
```

# Generated at 2024-06-01 14:57:34.275216
```python
    reserved_names = get_reserved_names()
    assert 'action' in reserved_names
    assert 'local_action' in reserved_names
    assert 'with_' in reserved_names
    assert 'private' not in reserved_names  # Assuming 'private' is a placeholder for actual private attributes
    assert isinstance(reserved_names, set)

    reserved_names_no_private = get_reserved_names(include_private=False)
    assert 'action' in reserved_names_no_private
    assert 'local_action' in reserved_names_no_private
    assert 'with_' in reserved_names_no_private
    assert 'private' not in reserved_names_no_private  # Assuming 'private' is a placeholder for actual private attributes
    assert isinstance(reserved_names_no_private, set)
```

# Generated at 2024-06-01 14:57:36.384084
```python
    reserved_names = get_reserved_names()
    assert 'action' in reserved_names
    assert 'local_action' in reserved_names
    assert 'with_' in reserved_names
    assert isinstance(reserved_names, set)

    reserved_names_no_private = get_reserved_names(include_private=False)
    assert 'action' in reserved_names_no_private
    assert 'local_action' in reserved_names_no_private
    assert 'with_' in reserved_names_no_private
    assert isinstance(reserved_names_no_private, set)
    assert len(reserved_names_no_private) < len(reserved_names)
```

# Generated at 2024-06-01 14:57:38.757539
```python
    reserved_names = get_reserved_names()
    assert 'action' in reserved_names
    assert 'local_action' in reserved_names
    assert 'with_' in reserved_names
    assert isinstance(reserved_names, set)

    reserved_names_no_private = get_reserved_names(include_private=False)
    assert 'action' in reserved_names_no_private
    assert 'local_action' in reserved_names_no_private
    assert 'with_' in reserved_names_no_private
    assert isinstance(reserved_names_no_private, set)
```

# Generated at 2024-06-01 14:57:40.782350
```python
    reserved_names = get_reserved_names()
    assert 'action' in reserved_names
    assert 'local_action' in reserved_names
    assert 'with_' in reserved_names
    assert 'private' not in reserved_names

    reserved_names_no_private = get_reserved_names(include_private=False)
    assert 'action' in reserved_names_no_private
    assert 'local_action' in reserved_names_no_private
    assert 'with_' in reserved_names_no_private
    assert 'private' not in reserved_names_no_private
```

# Generated at 2024-06-01 14:58:09.258413
```python
    reserved_names = get_reserved_names()
    assert isinstance(reserved_names, set)
    assert 'action' in reserved_names
    assert 'local_action' in reserved_names
    assert 'with_' in reserved_names or 'loop' in reserved_names

    reserved_names_no_private = get_reserved_names(include_private=False)
    assert isinstance(reserved_names_no_private, set)
    assert 'action' in reserved_names_no_private
    assert 'local_action' in reserved_names_no_private
    assert 'with_' in reserved_names_no_private or 'loop' in reserved_names_no_private
    assert not any('private' in name for name in reserved_names_no_private)
```

# Generated at 2024-06-01 14:58:11.076992
```python
    reserved_names = get_reserved_names()
    assert 'action' in reserved_names
    assert 'local_action' in reserved_names
    assert 'with_' in reserved_names
    assert isinstance(reserved_names, set)

    reserved_names_no_private = get_reserved_names(include_private=False)
    assert 'action' in reserved_names_no_private
    assert 'local_action' in reserved_names_no_private
    assert 'with_' in reserved_names_no_private
    assert isinstance(reserved_names_no_private, set)
    assert reserved_names_no_private.issubset(reserved_names)
```

# Generated at 2024-06-01 14:58:15.278629
```python
    reserved_names = get_reserved_names()
    assert 'action' in reserved_names
    assert 'local_action' in reserved_names
    assert 'with_' in reserved_names
    assert isinstance(reserved_names, set)

    reserved_names_no_private = get_reserved_names(include_private=False)
    assert 'action' in reserved_names_no_private
    assert 'local_action' in reserved_names_no_private
    assert 'with_' in reserved_names_no_private
    assert isinstance(reserved_names_no_private, set)
    assert len(reserved_names_no_private) < len(reserved_names)
```

# Generated at 2024-06-01 14:58:17.053623
```python
    reserved_names = get_reserved_names()
    assert isinstance(reserved_names, set)
    assert 'action' in reserved_names
    assert 'local_action' in reserved_names
    assert 'with_' in reserved_names
    assert 'private' not in reserved_names  # assuming 'private' is a placeholder for actual private attributes
    assert 'vars' not in reserved_names  # 'vars' should not be in the reserved names
```

# Generated at 2024-06-01 14:58:19.487108
```python
    reserved_names = get_reserved_names()
    assert 'action' in reserved_names
    assert 'local_action' in reserved_names
    assert 'with_' in reserved_names
    assert isinstance(reserved_names, set)

    reserved_names_no_private = get_reserved_names(include_private=False)
    assert 'action' in reserved_names_no_private
    assert 'local_action' in reserved_names_no_private
    assert 'with_' in reserved_names_no_private
    assert isinstance(reserved_names_no_private, set)
    assert reserved_names_no_private.issubset(reserved_names)
```

# Generated at 2024-06-01 14:58:21.172979
```python
    reserved_names = get_reserved_names()
    assert 'action' in reserved_names
    assert 'local_action' in reserved_names
    assert 'with_' in reserved_names
    assert isinstance(reserved_names, set)
    assert all(isinstance(name, str) for name in reserved_names)
```

# Generated at 2024-06-01 14:58:22.379568
```python
    reserved_names = get_reserved_names()
    assert 'action' in reserved_names
    assert 'local_action' in reserved_names
    assert 'with_' in reserved_names
    assert isinstance(reserved_names, set)
    assert all(isinstance(name, str) for name in reserved_names)
```

# Generated at 2024-06-01 14:58:23.986956
```python
    reserved_names = get_reserved_names()
    assert 'action' in reserved_names
    assert 'local_action' in reserved_names
    assert 'with_' in reserved_names
    assert isinstance(reserved_names, set)
    assert all(isinstance(name, str) for name in reserved_names)
```

# Generated at 2024-06-01 14:58:26.395445
```python
    reserved_names = get_reserved_names()
    assert 'action' in reserved_names
    assert 'local_action' in reserved_names
    assert 'with_' in reserved_names
    assert isinstance(reserved_names, set)
    assert all(isinstance(name, str) for name in reserved_names)

    reserved_names_no_private = get_reserved_names(include_private=False)
    assert 'action' in reserved_names_no_private
    assert 'local_action' in reserved_names_no_private
    assert 'with_' in reserved_names_no_private
    assert isinstance(reserved_names_no_private, set)
    assert all(isinstance(name, str) for name in reserved_names_no_private)
    assert len(reserved_names_no_private) <= len(reserved_names)
```

# Generated at 2024-06-01 14:58:28.369802
```python
    reserved_names = get_reserved_names()
    assert 'action' in reserved_names
    assert 'local_action' in reserved_names
    assert 'with_' in reserved_names
    assert isinstance(reserved_names, set)

    reserved_names_no_private = get_reserved_names(include_private=False)
    assert 'action' in reserved_names_no_private
    assert 'local_action' in reserved_names_no_private
    assert 'with_' in reserved_names_no_private
    assert isinstance(reserved_names_no_private, set)
```

# Generated at 2024-06-01 14:59:20.662992
```python
    reserved_names = get_reserved_names()
    assert 'action' in reserved_names
    assert 'local_action' in reserved_names
    assert 'with_' in reserved_names
    assert 'private' not in reserved_names

    reserved_names_no_private = get_reserved_names(include_private=False)
    assert 'action' in reserved_names_no_private
    assert 'local_action' in reserved_names_no_private
    assert 'with_' in reserved_names_no_private
    assert 'private' not in reserved_names_no_private
```

# Generated at 2024-06-01 14:59:22.670728
```python
    reserved_names = get_reserved_names()
    assert isinstance(reserved_names, set)
    assert 'action' in reserved_names
    assert 'local_action' in reserved_names
    assert 'with_' in reserved_names

    reserved_names_no_private = get_reserved_names(include_private=False)
    assert isinstance(reserved_names_no_private, set)
    assert 'action' in reserved_names_no_private
    assert 'local_action' in reserved_names_no_private
    assert 'with_' in reserved_names_no_private
    assert not any('private' in name for name in reserved_names_no_private)
```

# Generated at 2024-06-01 14:59:24.744396
```python
    reserved_names = get_reserved_names()
    assert 'action' in reserved_names
    assert 'local_action' in reserved_names
    assert 'with_' in reserved_names
    assert isinstance(reserved_names, set)

    reserved_names_no_private = get_reserved_names(include_private=False)
    assert 'action' in reserved_names_no_private
    assert 'local_action' in reserved_names_no_private
    assert 'with_' in reserved_names_no_private
    assert isinstance(reserved_names_no_private, set)
    assert len(reserved_names_no_private) <= len(reserved_names)
```

# Generated at 2024-06-01 14:59:25.869389
```python
    reserved_names = get_reserved_names()
    assert 'action' in reserved_names
    assert 'local_action' in reserved_names
    assert 'with_' in reserved_names
    assert isinstance(reserved_names, set)
```

# Generated at 2024-06-01 14:59:27.412602
```python
    reserved_names = get_reserved_names()
    assert 'action' in reserved_names
    assert 'local_action' in reserved_names
    assert 'with_' in reserved_names
    assert isinstance(reserved_names, set)
    assert all(isinstance(name, str) for name in reserved_names)
```

# Generated at 2024-06-01 14:59:30.002944
```python
    reserved_names = get_reserved_names()
    assert 'action' in reserved_names
    assert 'local_action' in reserved_names
    assert 'with_' in reserved_names
    assert isinstance(reserved_names, set)

    reserved_names_no_private = get_reserved_names(include_private=False)
    assert 'action' in reserved_names_no_private
    assert 'local_action' in reserved_names_no_private
    assert 'with_' in reserved_names_no_private
    assert isinstance(reserved_names_no_private, set)
```

# Generated at 2024-06-01 14:59:31.764933
```python
    reserved_names = get_reserved_names()
    assert 'action' in reserved_names
    assert 'local_action' in reserved_names
    assert 'with_' in reserved_names
    assert isinstance(reserved_names, set)

    reserved_names_no_private = get_reserved_names(include_private=False)
    assert 'action' in reserved_names_no_private
    assert 'local_action' in reserved_names_no_private
    assert 'with_' in reserved_names_no_private
    assert isinstance(reserved_names_no_private, set)
```

# Generated at 2024-06-01 14:59:33.752148
```python
    reserved_names = get_reserved_names()
    assert 'action' in reserved_names
    assert 'local_action' in reserved_names
    assert 'with_' in reserved_names
    assert isinstance(reserved_names, set)

    reserved_names_no_private = get_reserved_names(include_private=False)
    assert 'action' in reserved_names_no_private
    assert 'local_action' in reserved_names_no_private
    assert 'with_' in reserved_names_no_private
    assert isinstance(reserved_names_no_private, set)
```

# Generated at 2024-06-01 14:59:35.688400
```python
    reserved_names = get_reserved_names()
    assert 'action' in reserved_names
    assert 'local_action' in reserved_names
    assert 'with_' in reserved_names
    assert isinstance(reserved_names, set)

    reserved_names_no_private = get_reserved_names(include_private=False)
    assert 'action' in reserved_names_no_private
    assert 'local_action' in reserved_names_no_private
    assert 'with_' in reserved_names_no_private
    assert isinstance(reserved_names_no_private, set)
```

# Generated at 2024-06-01 14:59:37.691042
```python
    reserved_names = get_reserved_names()
    assert 'action' in reserved_names
    assert 'local_action' in reserved_names
    assert 'with_' in reserved_names
    assert isinstance(reserved_names, set)

    reserved_names_no_private = get_reserved_names(include_private=False)
    assert 'action' in reserved_names_no_private
    assert 'local_action' in reserved_names_no_private
    assert 'with_' in reserved_names_no_private
    assert isinstance(reserved_names_no_private, set)
    assert not any('private' in name for name in reserved_names_no_private)
```

# Generated at 2024-06-01 15:01:17.863734
```python
    reserved_names = get_reserved_names()
    assert 'action' in reserved_names
    assert 'local_action' in reserved_names
    assert 'with_' in reserved_names
    assert isinstance(reserved_names, set)
    assert all(isinstance(name, str) for name in reserved_names)
```

# Generated at 2024-06-01 15:01:20.417180
```python
    reserved_names = get_reserved_names()
    assert isinstance(reserved_names, set)
    assert 'action' in reserved_names
    assert 'local_action' in reserved_names
    assert 'with_' in reserved_names
    assert 'private' in reserved_names or 'private' not in reserved_names  # depending on implementation
    assert 'public' in reserved_names or 'public' not in reserved_names  # depending on implementation

    reserved_names_no_private = get_reserved_names(include_private=False)
    assert isinstance(reserved_names_no_private, set)
    assert 'private' not in reserved_names_no_private
```

# Generated at 2024-06-01 15:01:23.619090
```python
    reserved_names = get_reserved_names()
    assert isinstance(reserved_names, set)
    assert 'action' in reserved_names
    assert 'local_action' in reserved_names
    assert 'with_' in reserved_names
    assert 'private' not in reserved_names  # assuming 'private' is a placeholder for actual private attributes
    assert len(reserved_names) > 0

    reserved_names_no_private = get_reserved_names(include_private=False)
    assert isinstance(reserved_names_no_private, set)
    assert 'action' in reserved_names_no_private
    assert 'local_action' in reserved_names_no_private
    assert 'with_' in reserved_names_no_private
    assert len(reserved_names_no_private) > 0
    assert reserved_names_no_private.issubset(reserved_names)
```

# Generated at 2024-06-01 15:01:25.438201
```python
    reserved_names = get_reserved_names()
    assert isinstance(reserved_names, set)
    assert 'action' in reserved_names
    assert 'local_action' in reserved_names
    assert 'with_' in reserved_names
    assert 'private' not in reserved_names  # assuming 'private' is a placeholder for actual private attributes
    assert 'vars' not in reserved_names  # 'vars' should not be in the reserved names
```

# Generated at 2024-06-01 15:01:27.793380
```python
    reserved_names = get_reserved_names()
    assert 'action' in reserved_names
    assert 'local_action' in reserved_names
    assert 'with_' in reserved_names
    assert isinstance(reserved_names, set)

    reserved_names_no_private = get_reserved_names(include_private=False)
    assert 'action' in reserved_names_no_private
    assert 'local_action' in reserved_names_no_private
    assert 'with_' in reserved_names_no_private
    assert isinstance(reserved_names_no_private, set)
    assert len(reserved_names_no_private) <= len(reserved_names)
```

# Generated at 2024-06-01 15:01:30.852216
```python
    reserved_names = get_reserved_names()
    assert 'action' in reserved_names
    assert 'local_action' in reserved_names
    assert 'with_' in reserved_names
    assert isinstance(reserved_names, set)
    assert all(isinstance(name, str) for name in reserved_names)
```

# Generated at 2024-06-01 15:01:33.406404
```python
    reserved_names = get_reserved_names()
    assert 'action' in reserved_names
    assert 'local_action' in reserved_names
    assert 'with_' in reserved_names
    assert 'private' not in reserved_names

    reserved_names_no_private = get_reserved_names(include_private=False)
    assert 'action' in reserved_names_no_private
    assert 'local_action' in reserved_names_no_private
    assert 'with_' in reserved_names_no_private
    assert 'private' not in reserved_names_no_private
```

# Generated at 2024-06-01 15:01:35.218352
```python
    reserved_names = get_reserved_names()
    assert 'action' in reserved_names
    assert 'local_action' in reserved_names
    assert 'with_' in reserved_names
    assert isinstance(reserved_names, set)

    reserved_names_no_private = get_reserved_names(include_private=False)
    assert 'action' in reserved_names_no_private
    assert 'local_action' in reserved_names_no_private
    assert 'with_' in reserved_names_no_private
    assert isinstance(reserved_names_no_private, set)
```

# Generated at 2024-06-01 15:01:40.560249
```python
    reserved_names = get_reserved_names()
    assert isinstance(reserved_names, set)
    assert 'action' in reserved_names
    assert 'local_action' in reserved_names
    assert 'with_' in reserved_names
    assert 'private' not in reserved_names  # assuming 'private' is a placeholder for actual private attributes
    assert 'public' not in reserved_names  # assuming 'public' is a placeholder for actual public attributes

    reserved_names_no_private = get_reserved_names(include_private=False)
    assert isinstance(reserved_names_no_private, set)
    assert 'action' in reserved_names_no_private
    assert 'local_action' in reserved_names_no_private
    assert 'with_' in reserved_names_no_private
    assert 'private' not in reserved_names_no_private  # assuming 'private' is a placeholder for actual private attributes
    assert 'public' not in reserved_names_no_private  # assuming 'public' is a placeholder for actual public

# Generated at 2024-06-01 15:01:42.337746
```python
    reserved_names = get_reserved_names()
    assert 'action' in reserved_names
    assert 'local_action' in reserved_names
    assert 'with_' in reserved_names
    assert 'private' not in reserved_names

    reserved_names_no_private = get_reserved_names(include_private=False)
    assert 'action' in reserved_names_no_private
    assert 'local_action' in reserved_names_no_private
    assert 'with_' in reserved_names_no_private
    assert 'private' not in reserved_names_no_private
```

# Generated at 2024-06-01 15:04:48.338409
```python
    reserved_names = get_reserved_names()
    assert 'action' in reserved_names
    assert 'local_action' in reserved_names
    assert 'with_' in reserved_names
    assert 'private' not in reserved_names  # Assuming 'private' is not an actual attribute name
    assert isinstance(reserved_names, set)

    reserved_names_no_private = get_reserved_names(include_private=False)
    assert 'private' not in reserved_names_no_private  # Assuming 'private' is not an actual attribute name
    assert 'action' in reserved_names_no_private
    assert 'local_action' in reserved_names_no_private
    assert 'with_' in reserved_names_no_private
    assert isinstance(reserved_names_no_private, set)
```

# Generated at 2024-06-01 15:04:50.558059
```python
    reserved_names = get_reserved_names()
    assert 'action' in reserved_names
    assert 'local_action' in reserved_names
    assert 'with_' in reserved_names
    assert isinstance(reserved_names, set)

    reserved_names_no_private = get_reserved_names(include_private=False)
    assert 'action' in reserved_names_no_private
    assert 'local_action' in reserved_names_no_private
    assert 'with_' in reserved_names_no_private
    assert isinstance(reserved_names_no_private, set)
    assert reserved_names_no_private.issubset(reserved_names)
```

# Generated at 2024-06-01 15:04:52.002394
```python
    reserved_names = get_reserved_names()
    assert 'action' in reserved_names
    assert 'local_action' in reserved_names
    assert 'with_' in reserved_names
    assert isinstance(reserved_names, set)
    assert all(isinstance(name, str) for name in reserved_names)
```

# Generated at 2024-06-01 15:04:53.298897
```python
    reserved_names = get_reserved_names()
    assert 'action' in reserved_names
    assert 'local_action' in reserved_names
    assert 'with_' in reserved_names
    assert isinstance(reserved_names, set)
    assert all(isinstance(name, str) for name in reserved_names)
```

# Generated at 2024-06-01 15:04:55.360995
```python
    reserved_names = get_reserved_names()
    assert 'action' in reserved_names
    assert 'local_action' in reserved_names
    assert 'with_' in reserved_names
    assert isinstance(reserved_names, set)

    reserved_names_no_private = get_reserved_names(include_private=False)
    assert 'action' in reserved_names_no_private
    assert 'local_action' in reserved_names_no_private
    assert 'with_' in reserved_names_no_private
    assert isinstance(reserved_names_no_private, set)
    assert len(reserved_names_no_private) < len(reserved_names)
```

# Generated at 2024-06-01 15:04:57.377139
```python
    reserved_names = get_reserved_names()
    assert 'action' in reserved_names
    assert 'local_action' in reserved_names
    assert 'with_' in reserved_names
    assert 'private' not in reserved_names

    reserved_names_no_private = get_reserved_names(include_private=False)
    assert 'action' in reserved_names_no_private
    assert 'local_action' in reserved_names_no_private
    assert 'with_' in reserved_names_no_private
    assert 'private' not in reserved_names_no_private
```

# Generated at 2024-06-01 15:05:00.341825
```python
    reserved_names = get_reserved_names()
    assert 'action' in reserved_names
    assert 'local_action' in reserved_names
    assert 'with_' in reserved_names
    assert isinstance(reserved_names, set)

    reserved_names_no_private = get_reserved_names(include_private=False)
    assert 'action' in reserved_names_no_private
    assert 'local_action' in reserved_names_no_private
    assert 'with_' in reserved_names_no_private
    assert isinstance(reserved_names_no_private, set)
    assert len(reserved_names_no_private) <= len(reserved_names)
```

# Generated at 2024-06-01 15:05:02.115162
```python
    reserved_names = get_reserved_names()
    assert 'action' in reserved_names
    assert 'local_action' in reserved_names
    assert 'with_' in reserved_names
    assert 'private' not in reserved_names

    reserved_names_no_private = get_reserved_names(include_private=False)
    assert 'action' in reserved_names_no_private
    assert 'local_action' in reserved_names_no_private
    assert 'with_' in reserved_names_no_private
    assert 'private' not in reserved_names_no_private
```

# Generated at 2024-06-01 15:05:04.063130
```python
    reserved_names = get_reserved_names()
    assert 'action' in reserved_names
    assert 'local_action' in reserved_names
    assert 'with_' in reserved_names
    assert isinstance(reserved_names, set)

    reserved_names_no_private = get_reserved_names(include_private=False)
    assert 'action' in reserved_names_no_private
    assert 'local_action' in reserved_names_no_private
    assert 'with_' in reserved_names_no_private
    assert isinstance(reserved_names_no_private, set)
    assert len(reserved_names_no_private) < len(reserved_names)
```

# Generated at 2024-06-01 15:05:06.240443
```python
    reserved_names = get_reserved_names()
    assert isinstance(reserved_names, set)
    assert 'action' in reserved_names
    assert 'local_action' in reserved_names
    assert 'with_' in reserved_names
    assert 'private' not in reserved_names  # assuming 'private' is a placeholder for actual private attributes
    assert 'vars' not in reserved_names  # 'vars' should not be a reserved name
```