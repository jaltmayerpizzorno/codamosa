# Automatically generated by Pynguin.
import pymonet.validation as module_0

def test_case_0():
    pass

def test_case_1():
    str_0 = ''
    validation_0 = module_0.Validation(str_0, str_0)

def test_case_2():
    float_0 = -2545.57246
    str_0 = 'Z9<'
    validation_0 = module_0.Validation(float_0, str_0)
    str_1 = '\n        Returns True when errors list are not empty.\n\n        :returns: True for empty errors not list\n        :rtype: Boolean\n        '
    float_1 = 1246.0
    validation_1 = module_0.Validation(str_1, float_1)
    var_0 = validation_1.__eq__(validation_0)

def test_case_3():
    str_0 = ''
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.to_maybe()

def test_case_4():
    list_0 = []
    str_0 = ''
    str_1 = '9"ko5N~LT1IR5m$d'
    validation_0 = module_0.Validation(str_0, str_1)
    tuple_0 = (list_0, validation_0, list_0)
    bytes_0 = b'E\xf9\xdc\x85\xf3\xda\x83\x89'
    validation_1 = module_0.Validation(tuple_0, bytes_0)
    var_0 = validation_1.is_fail()

def test_case_5():
    set_0 = set()
    str_0 = '$-V'
    validation_0 = module_0.Validation(set_0, str_0)
    var_0 = validation_0.to_maybe()

def test_case_6():
    bool_0 = False
    str_0 = '?`'
    bytes_0 = b')(\x16d\xea\xfd~\x1erh\xc8\x0c\xd0\x93;N,\xaa'
    validation_0 = module_0.Validation(str_0, bytes_0)
    var_0 = validation_0.to_lazy()
    dict_0 = {}
    validation_1 = module_0.Validation(bool_0, dict_0)
    var_1 = validation_1.to_maybe()

def test_case_7():
    bool_0 = False
    bytes_0 = b'\x17\xf2\xee\xdd'
    dict_0 = {}
    str_0 = 'hK'
    validation_0 = module_0.Validation(dict_0, str_0)
    var_0 = validation_0.to_maybe()
    validation_1 = module_0.Validation(bool_0, bytes_0)
    var_1 = validation_1.to_try()