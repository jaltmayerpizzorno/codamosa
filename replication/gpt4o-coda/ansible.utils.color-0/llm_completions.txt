

# Generated at 2024-06-01 12:23:38.094080
```python
    assert stringc("Hello", "red") == "\033[31mHello\033[0m"
    assert stringc("Hello\nWorld", "blue") == "\033[34mHello\033[0m\n\033[34mWorld\033[0m"
    assert stringc("Hello", "green", wrap_nonvisible_chars=True) == "\001\033[32m\002Hello\001\033[0m\002"
    assert stringc("Hello", "invalid_color") == "Hello"
    assert stringc("Hello", "red", wrap_nonvisible_chars=False) == "\033[31mHello\033[0m"
    assert stringc("Hello", "red", wrap_nonvisible_chars=True) == "\001\033[31m\002Hello\001\033[0m\002"
```

# Generated at 2024-06-01 12:23:39.869980
```python
    assert parsecolor("color1") == u'38;5;1'
    assert parsecolor("rgb123") == u'38;5;73'
    assert parsecolor("gray5") == u'38;5;237'
    assert parsecolor("red") == C.COLOR_CODES["red"]
    assert parsecolor("blue") == C.COLOR_CODES["blue"]
    assert parsecolor("green") == C.COLOR_CODES["green"]
```

# Generated at 2024-06-01 12:23:46.873567
```python
    stats = {'failures': 0, 'unreachable': 0, 'changed': 0}
    assert hostcolor('localhost', stats) == u"%-37s" % stringc('localhost', C.COLOR_OK)

    stats = {'failures': 1, 'unreachable': 0, 'changed': 0}
    assert hostcolor('localhost', stats) == u"%-37s" % stringc('localhost', C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 1, 'changed': 0}
    assert hostcolor('localhost', stats) == u"%-37s" % stringc('localhost', C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 0, 'changed': 1}
    assert hostcolor('localhost', stats) == u"%-37s" % stringc('localhost', C.COLOR_CHANGED)

   

# Generated at 2024-06-01 12:23:49.994088
```python
    assert parsecolor("color1") == u'38;5;1'
    assert parsecolor("rgb123") == u'38;5;86'
    assert parsecolor("gray10") == u'38;5;242'
    assert parsecolor("red") == C.COLOR_CODES["red"]
    assert parsecolor("blue") == C.COLOR_CODES["blue"]
    assert parsecolor("green") == C.COLOR_CODES["green"]
```

# Generated at 2024-06-01 12:23:53.380050
```python
    assert stringc("Hello", "red") == "\033[31mHello\033[0m"
    assert stringc("Hello\nWorld", "blue") == "\033[34mHello\033[0m\n\033[34mWorld\033[0m"
    assert stringc("Hello", "green", wrap_nonvisible_chars=True) == "\001\033[32m\002Hello\001\033[0m\002"
    assert stringc("Hello", "invalid_color") == "Hello"
    assert stringc("Hello", "red", wrap_nonvisible_chars=False) == "\033[31mHello\033[0m"
    assert stringc("Hello", "red", wrap_nonvisible_chars=True) == "\001\033[31m\002Hello\001\033[0m\002"
    assert stringc("Hello\nWorld", "red", wrap_nonvisible_chars=True) ==

# Generated at 2024-06-01 12:23:55.112900
```python
    assert colorize('test', 0, 'red') == 'test=0   '
    assert colorize('test', 1, 'red') == stringc('test=1   ', 'red')
    assert colorize('test', 1, None) == 'test=1   '
    assert colorize('test', 0, None) == 'test=0   '
```

# Generated at 2024-06-01 12:23:59.882796
```python
    host = "test_host"
    stats = {'failures': 0, 'unreachable': 0, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_OK)

    stats = {'failures': 1, 'unreachable': 0, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 1, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 0, 'changed': 1}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_CHANGED)

    stats

# Generated at 2024-06-01 12:24:02.621733
```python
    assert colorize('test', 0, 'red') == 'test=0   '
    assert colorize('test', 1, 'red') == stringc('test=1   ', 'red')
    assert colorize('test', 123, 'blue') == stringc('test=123 ', 'blue')
    assert colorize('test', 0, None) == 'test=0   '
    assert colorize('test', 1, None) == 'test=1   '
```

# Generated at 2024-06-01 12:24:05.323805
```python
    assert stringc("hello", "red") == "\033[31mhello\033[0m"
    assert stringc("hello\nworld", "blue") == "\033[34mhello\033[0m\n\033[34mworld\033[0m"
    assert stringc("test", "green", wrap_nonvisible_chars=True) == "\001\033[32m\002test\001\033[0m\002"
    assert stringc("no color", "invalid_color") == "no color"
    assert stringc("no color", "red", wrap_nonvisible_chars=False) == "\033[31mno color\033[0m"
```

# Generated at 2024-06-01 12:24:08.149084
```python
    host = "testhost"
    stats = {'failures': 1, 'unreachable': 0, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 1, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 0, 'changed': 1}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_CHANGED)

    stats = {'failures': 0, 'unreachable': 0, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_OK)

    stats

# Generated at 2024-06-01 12:24:15.475133
```python
    host = "testhost"
    stats = {'failures': 1, 'unreachable': 0, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 1, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 0, 'changed': 1}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_CHANGED)

    stats = {'failures': 0, 'unreachable': 0, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_OK)

    stats

# Generated at 2024-06-01 12:24:17.079419
```python
    assert colorize('test', 0, 'red') == 'test=0   '
    assert colorize('test', 1, 'red') == stringc('test=1   ', 'red')
    assert colorize('test', 1, None) == 'test=1   '
    assert colorize('test', 0, None) == 'test=0   '
```

# Generated at 2024-06-01 12:24:20.203027
```python
    assert stringc("Hello", "red") == "\033[31mHello\033[0m"
    assert stringc("Hello\nWorld", "blue") == "\033[34mHello\033[0m\n\033[34mWorld\033[0m"
    assert stringc("Hello", "green", wrap_nonvisible_chars=True) == "\001\033[32m\002Hello\001\033[0m\002"
    assert stringc("Hello", "invalid_color") == "Hello"
    assert stringc("Hello", "red", wrap_nonvisible_chars=False) == "\033[31mHello\033[0m"
    assert stringc("Hello", "red", wrap_nonvisible_chars=True) == "\001\033[31m\002Hello\001\033[0m\002"
    assert stringc("Hello\nWorld", "red", wrap_nonvisible_chars=True) ==

# Generated at 2024-06-01 12:24:23.697034
```python
    host = "test_host"

    # Test case 1: Host with failures
    stats = {'failures': 1, 'unreachable': 0, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_ERROR)

    # Test case 2: Host with unreachable
    stats = {'failures': 0, 'unreachable': 1, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_ERROR)

    # Test case 3: Host with changes
    stats = {'failures': 0, 'unreachable': 0, 'changed': 1}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_CHANGED)

    # Test case 4: Host with no issues
    stats = {'

# Generated at 2024-06-01 12:24:26.592171
```python
    host = "testhost"
    stats = {'failures': 1, 'unreachable': 0, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 1, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 0, 'changed': 1}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_CHANGED)

    stats = {'failures': 0, 'unreachable': 0, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_OK)

    assert

# Generated at 2024-06-01 12:24:29.773228
```python
    host = "testhost"
    stats = {'failures': 1, 'unreachable': 0, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 1, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 0, 'changed': 1}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_CHANGED)

    stats = {'failures': 0, 'unreachable': 0, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_OK)

    assert

# Generated at 2024-06-01 12:24:36.464679
```python
    assert stringc("Hello", "red") == "\033[31mHello\033[0m"
    assert stringc("Hello\nWorld", "blue") == "\033[34mHello\033[0m\n\033[34mWorld\033[0m"
    assert stringc("Hello", "green", wrap_nonvisible_chars=True) == "\001\033[32m\002Hello\001\033[0m\002"
    assert stringc("Hello", "invalid_color") == "Hello"
    assert stringc("Hello", "red", wrap_nonvisible_chars=False) == "\033[31mHello\033[0m"
    assert stringc("Hello", "red", wrap_nonvisible_chars=True) == "\001\033[31m\002Hello\001\033[0m\002"
    assert stringc("Hello\nWorld", "red", wrap_nonvisible_chars=True) ==

# Generated at 2024-06-01 12:24:38.264550
```python
    assert parsecolor("color1") == u'38;5;1'
    assert parsecolor("rgb123") == u'38;5;73'
    assert parsecolor("gray10") == u'38;5;242'
    assert parsecolor("red") == C.COLOR_CODES["red"]
    assert parsecolor("blue") == C.COLOR_CODES["blue"]
    assert parsecolor("invalid") == C.COLOR_CODES["invalid"]
```

# Generated at 2024-06-01 12:24:41.136403
```python
    assert stringc("Hello", "red") == "\033[31mHello\033[0m"
    assert stringc("Hello\nWorld", "blue") == "\033[34mHello\033[0m\n\033[34mWorld\033[0m"
    assert stringc("Hello", "green", wrap_nonvisible_chars=True) == "\001\033[32m\002Hello\001\033[0m\002"
    assert stringc("Hello", "invalid_color") == "Hello"
    assert stringc("Hello", "red", wrap_nonvisible_chars=True) == "\001\033[31m\002Hello\001\033[0m\002"
    assert stringc("Hello", "blue") == "\033[34mHello\033[0m"
    assert stringc("Hello\nWorld", "green", wrap_nonvisible_chars=True) == "\001\033[32

# Generated at 2024-06-01 12:24:44.624356
```python
    assert stringc("Hello", "red") == "\033[31mHello\033[0m"
    assert stringc("Hello\nWorld", "blue") == "\033[34mHello\033[0m\n\033[34mWorld\033[0m"
    assert stringc("Hello", "green", wrap_nonvisible_chars=True) == "\001\033[32m\002Hello\001\033[0m\002"
    assert stringc("Hello", "invalid_color") == "Hello"
    assert stringc("Hello", "color123") == "\033[38;5;123mHello\033[0m"
    assert stringc("Hello", "rgb123") == "\033[38;5;91mHello\033[0m"
    assert stringc("Hello", "gray10") == "\033[38;5;242mHello\033[0m"
```

# Generated at 2024-06-01 12:24:51.060199
```python
    assert parsecolor("color1") == u'38;5;1'
    assert parsecolor("rgb123") == u'38;5;49'
    assert parsecolor("gray5") == u'38;5;237'
    assert parsecolor("red") == C.COLOR_CODES["red"]
    assert parsecolor("blue") == C.COLOR_CODES["blue"]
    assert parsecolor("invalid") == C.COLOR_CODES["invalid"]
```

# Generated at 2024-06-01 12:24:53.941249
```python
    assert stringc("Hello", "red") == "\033[31mHello\033[0m"
    assert stringc("Hello\nWorld", "blue") == "\033[34mHello\033[0m\n\033[34mWorld\033[0m"
    assert stringc("Hello", "green", wrap_nonvisible_chars=True) == "\001\033[32m\002Hello\001\033[0m\002"
    assert stringc("Hello", "invalid_color") == "Hello"
    assert stringc("Hello", "red", wrap_nonvisible_chars=False) == "\033[31mHello\033[0m"
    assert stringc("Hello", "red", wrap_nonvisible_chars=True) == "\001\033[31m\002Hello\001\033[0m\002"
    assert stringc("Hello\nWorld", "red", wrap_nonvisible_chars=True) ==

# Generated at 2024-06-01 12:24:56.002889
```python
    assert parsecolor("color1") == u'38;5;1'
    assert parsecolor("rgb123") == u'38;5;73'
    assert parsecolor("gray10") == u'38;5;242'
    assert parsecolor("red") == C.COLOR_CODES["red"]
    assert parsecolor("blue") == C.COLOR_CODES["blue"]
    assert parsecolor("green") == C.COLOR_CODES["green"]
```

# Generated at 2024-06-01 12:24:58.797612
```python
    host = "testhost"
    stats = {'failures': 1, 'unreachable': 0, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 1, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 0, 'changed': 1}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_CHANGED)

    stats = {'failures': 0, 'unreachable': 0, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_OK)

    stats

# Generated at 2024-06-01 12:25:00.755407
```python
    assert colorize('test', 0, 'red') == 'test=0   '
    assert colorize('test', 1, 'red') == stringc('test=1   ', 'red')
    assert colorize('test', -1, 'blue') == stringc('test=-1  ', 'blue')
    assert colorize('test', 123, None) == 'test=123 '
    assert colorize('test', 0, None) == 'test=0   '
```

# Generated at 2024-06-01 12:25:04.075520
```python
    stats = {'failures': 0, 'unreachable': 0, 'changed': 0}
    assert hostcolor('localhost', stats) == u"%-37s" % stringc('localhost', C.COLOR_OK)

    stats = {'failures': 1, 'unreachable': 0, 'changed': 0}
    assert hostcolor('localhost', stats) == u"%-37s" % stringc('localhost', C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 1, 'changed': 0}
    assert hostcolor('localhost', stats) == u"%-37s" % stringc('localhost', C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 0, 'changed': 1}
    assert hostcolor('localhost', stats) == u"%-37s" % stringc('localhost', C.COLOR_CHANGED)

   

# Generated at 2024-06-01 12:25:07.415560
```python
    assert stringc("Hello", "red") == "\033[31mHello\033[0m"
    assert stringc("Hello\nWorld", "blue") == "\033[34mHello\033[0m\n\033[34mWorld\033[0m"
    assert stringc("Hello", "green", wrap_nonvisible_chars=True) == "\001\033[32m\002Hello\001\033[0m\002"
    assert stringc("Hello", "invalid_color") == "Hello"
    assert stringc("Hello", "red", wrap_nonvisible_chars=True) == "\001\033[31m\002Hello\001\033[0m\002"
    assert stringc("Hello", "blue") == "\033[34mHello\033[0m"
    assert stringc("Hello", "blue", wrap_nonvisible_chars=True) == "\001\033[34m\

# Generated at 2024-06-01 12:25:10.586159
```python
    host = "testhost"
    
    # Test case 1: Host with failures
    stats = {'failures': 1, 'unreachable': 0, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_ERROR)
    
    # Test case 2: Host with unreachable
    stats = {'failures': 0, 'unreachable': 1, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_ERROR)
    
    # Test case 3: Host with changes
    stats = {'failures': 0, 'unreachable': 0, 'changed': 1}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_CHANGED)
    
    # Test case 4: Host with no issues


# Generated at 2024-06-01 12:25:14.032238
```python
    assert stringc("Hello", "red") == "\033[31mHello\033[0m"
    assert stringc("Hello\nWorld", "blue") == "\033[34mHello\033[0m\n\033[34mWorld\033[0m"
    assert stringc("Hello", "green", wrap_nonvisible_chars=True) == "\001\033[32m\002Hello\001\033[0m\002"
    assert stringc("Hello", "invalid_color") == "Hello"
    assert stringc("Hello", "red", wrap_nonvisible_chars=False) == "\033[31mHello\033[0m"
    assert stringc("Hello", "red", wrap_nonvisible_chars=True) == "\001\033[31m\002Hello\001\033[0m\002"
```

# Generated at 2024-06-01 12:25:16.064085
```python
    assert parsecolor("color1") == u'38;5;1'
    assert parsecolor("rgb123") == u'38;5;73'
    assert parsecolor("gray10") == u'38;5;242'
    assert parsecolor("red") == C.COLOR_CODES["red"]
    assert parsecolor("blue") == C.COLOR_CODES["blue"]
    assert parsecolor("green") == C.COLOR_CODES["green"]
    assert parsecolor("invalid") == C.COLOR_CODES["invalid"]
```

# Generated at 2024-06-01 12:25:23.657164
```python
    assert stringc("Hello", "red") == "\033[31mHello\033[0m"
    assert stringc("Hello\nWorld", "blue") == "\033[34mHello\033[0m\n\033[34mWorld\033[0m"
    assert stringc("Hello", "green", wrap_nonvisible_chars=True) == "\001\033[32m\002Hello\001\033[0m\002"
    assert stringc("Hello", "invalid_color") == "Hello"
    assert stringc("Hello", "red", wrap_nonvisible_chars=False) == "\033[31mHello\033[0m"
    assert stringc("Hello", "red", wrap_nonvisible_chars=True) == "\001\033[31m\002Hello\001\033[0m\002"
    assert stringc("Hello\nWorld", "red", wrap_nonvisible_chars=True) ==

# Generated at 2024-06-01 12:25:27.338469
```python
    assert stringc("Hello", "red") == "\033[31mHello\033[0m"
    assert stringc("Hello\nWorld", "blue") == "\033[34mHello\033[0m\n\033[34mWorld\033[0m"
    assert stringc("Hello", "green", wrap_nonvisible_chars=True) == "\001\033[32m\002Hello\001\033[0m\002"
    assert stringc("Hello", "invalid_color") == "Hello"
    assert stringc("Hello", "red", wrap_nonvisible_chars=False) == "\033[31mHello\033[0m"
    assert stringc("Hello", "red", wrap_nonvisible_chars=True) == "\001\033[31m\002Hello\001\033[0m\002"
```

# Generated at 2024-06-01 12:25:32.099905
```python
    assert stringc("Hello", "red") == "\033[31mHello\033[0m"
    assert stringc("Hello\nWorld", "blue") == "\033[34mHello\033[0m\n\033[34mWorld\033[0m"
    assert stringc("Hello", "green", wrap_nonvisible_chars=True) == "\001\033[32m\002Hello\001\033[0m\002"
    assert stringc("Hello", "invalid_color") == "Hello"
    assert stringc("Hello", "red", wrap_nonvisible_chars=False) == "\033[31mHello\033[0m"
    assert stringc("Hello", "red", wrap_nonvisible_chars=True) == "\001\033[31m\002Hello\001\033[0m\002"
```

# Generated at 2024-06-01 12:25:35.297993
```python
    stats = {'failures': 0, 'unreachable': 0, 'changed': 0}
    assert hostcolor('localhost', stats) == u"%-37s" % stringc('localhost', C.COLOR_OK)

    stats = {'failures': 1, 'unreachable': 0, 'changed': 0}
    assert hostcolor('localhost', stats) == u"%-37s" % stringc('localhost', C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 1, 'changed': 0}
    assert hostcolor('localhost', stats) == u"%-37s" % stringc('localhost', C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 0, 'changed': 1}
    assert hostcolor('localhost', stats) == u"%-37s" % stringc('localhost', C.COLOR_CHANGED)

   

# Generated at 2024-06-01 12:25:37.397280
```python
    assert parsecolor("color1") == u'38;5;1'
    assert parsecolor("rgb123") == u'38;5;86'
    assert parsecolor("gray5") == u'38;5;237'
    assert parsecolor("red") == C.COLOR_CODES["red"]
    assert parsecolor("blue") == C.COLOR_CODES["blue"]
    assert parsecolor("invalid") == C.COLOR_CODES["invalid"]
```

# Generated at 2024-06-01 12:25:39.200327
```python
    assert parsecolor("color1") == u'38;5;1'
    assert parsecolor("rgb123") == u'38;5;86'
    assert parsecolor("gray5") == u'38;5;237'
    assert parsecolor("red") == C.COLOR_CODES["red"]
    assert parsecolor("blue") == C.COLOR_CODES["blue"]
    assert parsecolor("invalid") == C.COLOR_CODES["invalid"]
```

# Generated at 2024-06-01 12:25:42.193010
```python
    host = "testhost"
    stats = {'failures': 1, 'unreachable': 0, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 1, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 0, 'changed': 1}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_CHANGED)

    stats = {'failures': 0, 'unreachable': 0, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_OK)

    stats

# Generated at 2024-06-01 12:25:44.079261
```python
    assert colorize('test', 0, 'red') == 'test=0   '
    assert colorize('test', 1, 'red') == stringc('test=1   ', 'red')
    assert colorize('test', 1, None) == 'test=1   '
    assert colorize('test', 0, None) == 'test=0   '
```

# Generated at 2024-06-01 12:25:45.584564
```python
    assert colorize('test', 0, 'red') == 'test=0   '
    assert colorize('test', 1, 'red') == stringc('test=1   ', 'red')
    assert colorize('test', 1, None) == 'test=1   '
    assert colorize('test', 0, None) == 'test=0   '
```

# Generated at 2024-06-01 12:25:48.460879
```python
    stats = {'failures': 1, 'unreachable': 0, 'changed': 0}
    assert hostcolor('testhost', stats) == u"%-37s" % stringc('testhost', C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 1, 'changed': 0}
    assert hostcolor('testhost', stats) == u"%-37s" % stringc('testhost', C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 0, 'changed': 1}
    assert hostcolor('testhost', stats) == u"%-37s" % stringc('testhost', C.COLOR_CHANGED)

    stats = {'failures': 0, 'unreachable': 0, 'changed': 0}
    assert hostcolor('testhost', stats) == u"%-37s" % stringc('

# Generated at 2024-06-01 12:25:54.590717
```python
    assert parsecolor("color1") == u'38;5;1'
    assert parsecolor("rgb123") == u'38;5;73'
    assert parsecolor("gray10") == u'38;5;242'
    assert parsecolor("red") == C.COLOR_CODES["red"]
    assert parsecolor("blue") == C.COLOR_CODES["blue"]
    assert parsecolor("invalid") == C.COLOR_CODES["invalid"]
```

# Generated at 2024-06-01 12:25:56.426099
```python
    assert parsecolor("color1") == u'38;5;1'
    assert parsecolor("rgb123") == u'38;5;73'
    assert parsecolor("gray5") == u'38;5;237'
    assert parsecolor("red") == C.COLOR_CODES["red"]
    assert parsecolor("blue") == C.COLOR_CODES["blue"]
    assert parsecolor("invalid") == C.COLOR_CODES["invalid"]
```

# Generated at 2024-06-01 12:25:59.314180
```python
    assert stringc("Hello", "red") == "\033[31mHello\033[0m"
    assert stringc("Hello\nWorld", "blue") == "\033[34mHello\033[0m\n\033[34mWorld\033[0m"
    assert stringc("Hello", "green", wrap_nonvisible_chars=True) == "\001\033[32m\002Hello\001\033[0m\002"
    assert stringc("Hello", "invalid_color") == "Hello"
    assert stringc("Hello", "color123") == "\033[38;5;123mHello\033[0m"
    assert stringc("Hello", "rgb123") == "\033[38;5;91mHello\033[0m"
    assert stringc("Hello", "gray10") == "\033[38;5;242mHello\033[0m"
   

# Generated at 2024-06-01 12:26:02.829937
```python
    host = "test_host"
    stats = {'failures': 0, 'unreachable': 0, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_OK)

    stats = {'failures': 1, 'unreachable': 0, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 1, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 0, 'changed': 1}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_CHANGED)

    stats

# Generated at 2024-06-01 12:26:04.494228
```python
    assert parsecolor("color1") == u'38;5;1'
    assert parsecolor("rgb123") == u'38;5;86'
    assert parsecolor("gray5") == u'38;5;237'
    assert parsecolor("red") == C.COLOR_CODES["red"]
    assert parsecolor("blue") == C.COLOR_CODES["blue"]
    assert parsecolor("invalid") == C.COLOR_CODES["invalid"]
```

# Generated at 2024-06-01 12:26:07.677633
```python
    assert stringc("Hello", "red") == "\033[31mHello\033[0m"
    assert stringc("Hello\nWorld", "blue") == "\033[34mHello\033[0m\n\033[34mWorld\033[0m"
    assert stringc("Hello", "green", wrap_nonvisible_chars=True) == "\001\033[32m\002Hello\001\033[0m\002"
    assert stringc("Hello", "invalid_color") == "Hello"
    assert stringc("Hello", "red", wrap_nonvisible_chars=False) == "\033[31mHello\033[0m"
    assert stringc("Hello", "red", wrap_nonvisible_chars=True) == "\001\033[31m\002Hello\001\033[0m\002"
    assert stringc("Hello\nWorld", "red", wrap_nonvisible_chars=True) ==

# Generated at 2024-06-01 12:26:10.583924
```python
    stats = {'failures': 1, 'unreachable': 0, 'changed': 0}
    assert hostcolor('testhost', stats) == u"%-37s" % stringc('testhost', C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 1, 'changed': 0}
    assert hostcolor('testhost', stats) == u"%-37s" % stringc('testhost', C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 0, 'changed': 1}
    assert hostcolor('testhost', stats) == u"%-37s" % stringc('testhost', C.COLOR_CHANGED)

    stats = {'failures': 0, 'unreachable': 0, 'changed': 0}
    assert hostcolor('testhost', stats) == u"%-37s" % stringc('

# Generated at 2024-06-01 12:26:13.057423
```python
    assert parsecolor("color1") == u'38;5;1'
    assert parsecolor("rgb123") == u'38;5;73'
    assert parsecolor("gray10") == u'38;5;242'
    assert parsecolor("red") == C.COLOR_CODES["red"]
    assert parsecolor("blue") == C.COLOR_CODES["blue"]
    assert parsecolor("green") == C.COLOR_CODES["green"]
    assert parsecolor("invalid") == C.COLOR_CODES["invalid"]
```

# Generated at 2024-06-01 12:26:14.637045
```python
    assert colorize('test', 0, 'red') == 'test=0   '
    assert colorize('test', 1, 'red') == stringc('test=1   ', 'red')
    assert colorize('test', 1, None) == 'test=1   '
    assert colorize('test', 0, None) == 'test=0   '
```

# Generated at 2024-06-01 12:26:18.276175
```python
    host = "testhost"
    stats = {'failures': 1, 'unreachable': 0, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 1, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 0, 'changed': 1}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_CHANGED)

    stats = {'failures': 0, 'unreachable': 0, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_OK)

    assert

# Generated at 2024-06-01 12:26:24.141051
```python
    assert parsecolor("color1") == u'38;5;1'
    assert parsecolor("rgb123") == u'38;5;86'
    assert parsecolor("gray5") == u'38;5;237'
    assert parsecolor("red") == C.COLOR_CODES["red"]
    assert parsecolor("blue") == C.COLOR_CODES["blue"]
    assert parsecolor("invalid") == C.COLOR_CODES["invalid"]
```

# Generated at 2024-06-01 12:26:27.538636
```python
    stats = {'failures': 0, 'unreachable': 0, 'changed': 0}
    assert hostcolor('localhost', stats) == u"%-37s" % stringc('localhost', C.COLOR_OK)

    stats = {'failures': 1, 'unreachable': 0, 'changed': 0}
    assert hostcolor('localhost', stats) == u"%-37s" % stringc('localhost', C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 1, 'changed': 0}
    assert hostcolor('localhost', stats) == u"%-37s" % stringc('localhost', C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 0, 'changed': 1}
    assert hostcolor('localhost', stats) == u"%-37s" % stringc('localhost', C.COLOR_CHANGED)

   

# Generated at 2024-06-01 12:26:29.592785
```python
    assert parsecolor("color1") == u'38;5;1'
    assert parsecolor("rgb123") == u'38;5;86'
    assert parsecolor("gray10") == u'38;5;242'
    assert parsecolor("red") == C.COLOR_CODES["red"]
    assert parsecolor("blue") == C.COLOR_CODES["blue"]
    assert parsecolor("green") == C.COLOR_CODES["green"]
```

# Generated at 2024-06-01 12:26:32.659589
```python
    assert parsecolor("color1") == u'38;5;1'
    assert parsecolor("rgb123") == u'38;5;86'
    assert parsecolor("gray5") == u'38;5;237'
    assert parsecolor("red") == C.COLOR_CODES["red"]
    assert parsecolor("blue") == C.COLOR_CODES["blue"]
    assert parsecolor("green") == C.COLOR_CODES["green"]
```

# Generated at 2024-06-01 12:26:34.579761
```python
    assert colorize('test', 0, 'red') == 'test=0   '
    assert colorize('test', 1, 'red') == stringc('test=1   ', 'red')
    assert colorize('test', 1, None) == 'test=1   '
    assert colorize('test', 0, None) == 'test=0   '
```

# Generated at 2024-06-01 12:26:38.467659
```python
    stats = {'failures': 0, 'unreachable': 0, 'changed': 0}
    assert hostcolor('localhost', stats) == u"%-37s" % stringc('localhost', C.COLOR_OK)

    stats = {'failures': 1, 'unreachable': 0, 'changed': 0}
    assert hostcolor('localhost', stats) == u"%-37s" % stringc('localhost', C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 1, 'changed': 0}
    assert hostcolor('localhost', stats) == u"%-37s" % stringc('localhost', C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 0, 'changed': 1}
    assert hostcolor('localhost', stats) == u"%-37s" % stringc('localhost', C.COLOR_CHANGED)

   

# Generated at 2024-06-01 12:26:42.426336
```python
    host = "testhost"
    stats = {'failures': 1, 'unreachable': 0, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 1, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 0, 'changed': 1}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_CHANGED)

    stats = {'failures': 0, 'unreachable': 0, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_OK)

    stats

# Generated at 2024-06-01 12:26:45.465635
```python
    assert stringc("Hello", "red") == "\033[31mHello\033[0m"
    assert stringc("Hello\nWorld", "blue") == "\033[34mHello\033[0m\n\033[34mWorld\033[0m"
    assert stringc("Hello", "green", wrap_nonvisible_chars=True) == "\001\033[32m\002Hello\001\033[0m\002"
    assert stringc("Hello", "invalid_color") == "Hello"
    assert stringc("Hello", "red", wrap_nonvisible_chars=False) == "\033[31mHello\033[0m"
    assert stringc("Hello", "red", wrap_nonvisible_chars=True) == "\001\033[31m\002Hello\001\033[0m\002"
```

# Generated at 2024-06-01 12:26:48.990201
```python
    assert stringc("Hello", "red") == "\033[31mHello\033[0m"
    assert stringc("Hello\nWorld", "blue") == "\033[34mHello\033[0m\n\033[34mWorld\033[0m"
    assert stringc("Hello", "green", wrap_nonvisible_chars=True) == "\001\033[32m\002Hello\001\033[0m\002"
    assert stringc("Hello", "invalid_color") == "Hello"
    assert stringc("Hello", "red", wrap_nonvisible_chars=True) == "\001\033[31m\002Hello\001\033[0m\002"
    assert stringc("Hello\nWorld", "blue", wrap_nonvisible_chars=True) == "\001\033[34m\002Hello\001\033[0m\002\n\001\033[34m\002

# Generated at 2024-06-01 12:26:52.261235
```python
    host = "testhost"
    
    # Test case 1: Host with failures
    stats = {'failures': 1, 'unreachable': 0, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_ERROR)
    
    # Test case 2: Host with unreachable
    stats = {'failures': 0, 'unreachable': 1, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_ERROR)
    
    # Test case 3: Host with changes
    stats = {'failures': 0, 'unreachable': 0, 'changed': 1}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_CHANGED)
    
    # Test case 4: Host with no failures,

# Generated at 2024-06-01 12:26:59.988258
```python
    assert stringc("Hello", "red") == "\033[31mHello\033[0m"
    assert stringc("Hello\nWorld", "blue") == "\033[34mHello\033[0m\n\033[34mWorld\033[0m"
    assert stringc("Hello", "green", wrap_nonvisible_chars=True) == "\001\033[32m\002Hello\001\033[0m\002"
    assert stringc("Hello", "invalid_color") == "Hello"
    assert stringc("Hello", "red", wrap_nonvisible_chars=False) == "\033[31mHello\033[0m"
    assert stringc("Hello", "red", wrap_nonvisible_chars=True) == "\001\033[31m\002Hello\001\033[0m\002"
    assert stringc("Hello\nWorld", "red", wrap_nonvisible_chars=True) ==

# Generated at 2024-06-01 12:27:01.788490
```python
    assert colorize('test', 0, 'red') == 'test=0   '
    assert colorize('test', 1, 'red') == stringc('test=1   ', 'red')
    assert colorize('test', 1, None) == 'test=1   '
    assert colorize('test', 0, None) == 'test=0   '
```

# Generated at 2024-06-01 12:27:05.185566
```python
    host = "testhost"
    stats = {'failures': 0, 'unreachable': 0, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_OK)

    stats = {'failures': 1, 'unreachable': 0, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 1, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 0, 'changed': 1}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_CHANGED)

    stats

# Generated at 2024-06-01 12:27:08.374488
```python
    assert stringc("Hello", "red") == "\033[31mHello\033[0m"
    assert stringc("Hello\nWorld", "blue") == "\033[34mHello\033[0m\n\033[34mWorld\033[0m"
    assert stringc("Hello", "green", wrap_nonvisible_chars=True) == "\001\033[32m\002Hello\001\033[0m\002"
    assert stringc("Hello", "invalid_color") == "Hello"
    assert stringc("Hello", "red", wrap_nonvisible_chars=False) == "\033[31mHello\033[0m"
    assert stringc("Hello", "red", wrap_nonvisible_chars=True) == "\001\033[31m\002Hello\001\033[0m\002"
    assert stringc("Hello\nWorld", "red", wrap_nonvisible_chars=True) ==

# Generated at 2024-06-01 12:27:13.400557
```python
    host = "testhost"
    stats = {'failures': 1, 'unreachable': 0, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 1, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 0, 'changed': 1}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_CHANGED)

    stats = {'failures': 0, 'unreachable': 0, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_OK)

    assert

# Generated at 2024-06-01 12:27:16.374842
```python
    stats = {'failures': 0, 'unreachable': 0, 'changed': 0}
    assert hostcolor('localhost', stats) == u"%-37s" % stringc('localhost', C.COLOR_OK)

    stats = {'failures': 1, 'unreachable': 0, 'changed': 0}
    assert hostcolor('localhost', stats) == u"%-37s" % stringc('localhost', C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 1, 'changed': 0}
    assert hostcolor('localhost', stats) == u"%-37s" % stringc('localhost', C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 0, 'changed': 1}
    assert hostcolor('localhost', stats) == u"%-37s" % stringc('localhost', C.COLOR_CHANGED)

   

# Generated at 2024-06-01 12:27:19.750816
```python
    host = "testhost"
    stats = {'failures': 1, 'unreachable': 0, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 1, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 0, 'changed': 1}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_CHANGED)

    stats = {'failures': 0, 'unreachable': 0, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_OK)

    assert

# Generated at 2024-06-01 12:27:21.460180
```python
    assert parsecolor("color1") == u'38;5;1'
    assert parsecolor("rgb123") == u'38;5;73'
    assert parsecolor("gray10") == u'38;5;242'
    assert parsecolor("red") == C.COLOR_CODES["red"]
    assert parsecolor("blue") == C.COLOR_CODES["blue"]
    assert parsecolor("invalid") == C.COLOR_CODES["invalid"]
```

# Generated at 2024-06-01 12:27:23.021223
```python
    assert colorize('test', 0, 'red') == 'test=0   '
    assert colorize('test', 1, 'red') == stringc('test=1   ', 'red')
    assert colorize('test', 1, None) == 'test=1   '
    assert colorize('test', 0, None) == 'test=0   '
```

# Generated at 2024-06-01 12:27:24.760963
```python
    assert parsecolor("color1") == u'38;5;1'
    assert parsecolor("rgb123") == u'38;5;86'
    assert parsecolor("gray10") == u'38;5;242'
    assert parsecolor("red") == C.COLOR_CODES["red"]
    assert parsecolor("blue") == C.COLOR_CODES["blue"]
    assert parsecolor("green") == C.COLOR_CODES["green"]
```

# Generated at 2024-06-01 12:27:32.043473
```python
    host = "test_host"
    stats = {'failures': 0, 'unreachable': 0, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_OK)

    stats = {'failures': 1, 'unreachable': 0, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 1, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 0, 'changed': 1}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_CHANGED)

    stats

# Generated at 2024-06-01 12:27:36.498020
```python
    host = "testhost"
    stats = {'failures': 1, 'unreachable': 0, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 1, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 0, 'changed': 1}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_CHANGED)

    stats = {'failures': 0, 'unreachable': 0, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_OK)

    stats

# Generated at 2024-06-01 12:27:40.320884
```python
    assert stringc("Hello", "red") == "\033[31mHello\033[0m"
    assert stringc("Hello\nWorld", "blue") == "\033[34mHello\033[0m\n\033[34mWorld\033[0m"
    assert stringc("Hello", "green", wrap_nonvisible_chars=True) == "\001\033[32m\002Hello\001\033[0m\002"
    assert stringc("Hello", "invalid_color") == "Hello"
    assert stringc("Hello", "color123") == "\033[38;5;123mHello\033[0m"
    assert stringc("Hello", "rgb123") == "\033[38;5;160mHello\033[0m"
    assert stringc("Hello", "gray10") == "\033[38;5;242mHello\033[0m"
   

# Generated at 2024-06-01 12:27:43.738743
```python
    host = "testhost"
    stats = {'failures': 1, 'unreachable': 0, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 1, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 0, 'changed': 1}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_CHANGED)

    stats = {'failures': 0, 'unreachable': 0, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_OK)

    assert

# Generated at 2024-06-01 12:27:45.706396
```python
    assert colorize('test', 0, 'red') == 'test=0   '
    assert colorize('test', 1, 'red') == stringc('test=1   ', 'red')
    assert colorize('test', 123, 'blue') == stringc('test=123 ', 'blue')
    assert colorize('test', 0, None) == 'test=0   '
    assert colorize('test', 1, None) == 'test=1   '
```

# Generated at 2024-06-01 12:27:48.869742
```python
    assert stringc("Hello", "red") == "\033[31mHello\033[0m"
    assert stringc("World", "blue") == "\033[34mWorld\033[0m"
    assert stringc("No Color", "none") == "No Color"
    assert stringc("Wrap", "green", wrap_nonvisible_chars=True) == "\001\033[32m\002Wrap\001\033[0m\002"
    assert stringc("Multiline\nText", "yellow") == "\033[33mMultiline\033[0m\n\033[33mText\033[0m"
```

# Generated at 2024-06-01 12:27:51.903249
```python
    assert stringc("Hello", "red") == "\033[31mHello\033[0m"
    assert stringc("Hello\nWorld", "blue") == "\033[34mHello\033[0m\n\033[34mWorld\033[0m"
    assert stringc("Hello", "green", wrap_nonvisible_chars=True) == "\001\033[32m\002Hello\001\033[0m\002"
    assert stringc("Hello", "invalid_color") == "Hello"
    assert stringc("Hello", "red", wrap_nonvisible_chars=False) == "\033[31mHello\033[0m"
    assert stringc("Hello", "red", wrap_nonvisible_chars=True) == "\001\033[31m\002Hello\001\033[0m\002"
```

# Generated at 2024-06-01 12:27:55.373857
```python
    stats = {'failures': 0, 'unreachable': 0, 'changed': 0}
    assert hostcolor('localhost', stats) == u"%-37s" % stringc('localhost', C.COLOR_OK)

    stats = {'failures': 1, 'unreachable': 0, 'changed': 0}
    assert hostcolor('localhost', stats) == u"%-37s" % stringc('localhost', C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 1, 'changed': 0}
    assert hostcolor('localhost', stats) == u"%-37s" % stringc('localhost', C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 0, 'changed': 1}
    assert hostcolor('localhost', stats) == u"%-37s" % stringc('localhost', C.COLOR_CHANGED)

   

# Generated at 2024-06-01 12:27:58.758180
```python
    assert parsecolor("color1") == u'38;5;1'
    assert parsecolor("rgb123") == u'38;5;86'
    assert parsecolor("gray10") == u'38;5;242'
    assert parsecolor("red") == C.COLOR_CODES["red"]
    assert parsecolor("blue") == C.COLOR_CODES["blue"]
    assert parsecolor("green") == C.COLOR_CODES["green"]
```

# Generated at 2024-06-01 12:28:01.190366
```python
    assert parsecolor("color1") == u'38;5;1'
    assert parsecolor("rgb123") == u'38;5;86'
    assert parsecolor("gray10") == u'38;5;242'
    assert parsecolor("red") == C.COLOR_CODES["red"]
    assert parsecolor("blue") == C.COLOR_CODES["blue"]
    assert parsecolor("green") == C.COLOR_CODES["green"]
```

# Generated at 2024-06-01 12:28:09.397042
```python
    host = "testhost"
    stats = {'failures': 1, 'unreachable': 0, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 1, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 0, 'changed': 1}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_CHANGED)

    stats = {'failures': 0, 'unreachable': 0, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_OK)

    assert

# Generated at 2024-06-01 12:28:11.197967
```python
    assert colorize('test', 0, 'red') == 'test=0   '
    assert colorize('test', 1, 'red') == stringc('test=1   ', 'red')
    assert colorize('test', 1, None) == 'test=1   '
    assert colorize('test', 0, None) == 'test=0   '
```

# Generated at 2024-06-01 12:28:13.104408
```python
    assert colorize('test', 0, 'red') == 'test=0   '
    assert colorize('test', 1, 'red') == stringc('test=1   ', 'red')
    assert colorize('test', 1, None) == 'test=1   '
    assert colorize('test', 0, None) == 'test=0   '
```

# Generated at 2024-06-01 12:28:15.926447
```python
    stats = {'failures': 0, 'unreachable': 0, 'changed': 0}
    assert hostcolor('localhost', stats) == u"%-37s" % stringc('localhost', C.COLOR_OK)

    stats = {'failures': 1, 'unreachable': 0, 'changed': 0}
    assert hostcolor('localhost', stats) == u"%-37s" % stringc('localhost', C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 1, 'changed': 0}
    assert hostcolor('localhost', stats) == u"%-37s" % stringc('localhost', C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 0, 'changed': 1}
    assert hostcolor('localhost', stats) == u"%-37s" % stringc('localhost', C.COLOR_CHANGED)

   

# Generated at 2024-06-01 12:28:18.543336
```python
    assert stringc("hello", "red") == "\033[31mhello\033[0m"
    assert stringc("hello\nworld", "blue") == "\033[34mhello\033[0m\n\033[34mworld\033[0m"
    assert stringc("test", "green", wrap_nonvisible_chars=True) == "\001\033[32m\002test\001\033[0m\002"
    assert stringc("no color", "invalid_color") == "no color"
    assert stringc("no color", "red", wrap_nonvisible_chars=False) == "\033[31mno color\033[0m"
```

# Generated at 2024-06-01 12:28:20.401631
```python
    assert colorize('test', 0, 'red') == 'test=0   '
    assert colorize('test', 1, 'red') == stringc('test=1   ', 'red')
    assert colorize('test', 1, None) == 'test=1   '
    assert colorize('test', 0, None) == 'test=0   '
```

# Generated at 2024-06-01 12:28:21.976363
```python
    assert colorize('test', 0, 'red') == 'test=0   '
    assert colorize('test', 1, 'red') == stringc('test=1   ', 'red')
    assert colorize('test', 1, None) == 'test=1   '
    assert colorize('test', 0, None) == 'test=0   '
```

# Generated at 2024-06-01 12:28:23.736620
```python
    assert colorize('test', 0, 'red') == 'test=0   '
    assert colorize('test', 1, 'red') == stringc('test=1   ', 'red')
    assert colorize('test', 1, None) == 'test=1   '
    assert colorize('test', 0, None) == 'test=0   '
```

# Generated at 2024-06-01 12:28:27.286369
```python
    assert stringc("Hello", "red") == "\033[31mHello\033[0m"
    assert stringc("Hello\nWorld", "blue") == "\033[34mHello\033[0m\n\033[34mWorld\033[0m"
    assert stringc("Hello", "green", wrap_nonvisible_chars=True) == "\001\033[32m\002Hello\001\033[0m\002"
    assert stringc("Hello", "invalid_color") == "Hello"
    assert stringc("Hello", "color123") == "\033[38;5;123mHello\033[0m"
    assert stringc("Hello", "rgb123") == "\033[38;5;86mHello\033[0m"
    assert stringc("Hello", "gray10") == "\033[38;5;242mHello\033[0m"
```

# Generated at 2024-06-01 12:28:29.255941
```python
    assert colorize('test', 0, 'red') == 'test=0   '
    assert colorize('test', 1, 'red') == stringc('test=1   ', 'red')
    assert colorize('test', 123, 'blue') == stringc('test=123 ', 'blue')
    assert colorize('test', 0, None) == 'test=0   '
    assert colorize('test', 1, None) == 'test=1   '
```

# Generated at 2024-06-01 12:28:37.081233
```python
    host = "testhost"
    stats = {'failures': 1, 'unreachable': 0, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 1, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 0, 'changed': 1}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_CHANGED)

    stats = {'failures': 0, 'unreachable': 0, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_OK)

    assert

# Generated at 2024-06-01 12:28:38.866249
```python
    assert colorize('test', 0, 'red') == 'test=0   '
    assert colorize('test', 1, 'red') == stringc('test=1   ', 'red')
    assert colorize('test', 1, None) == 'test=1   '
    assert colorize('test', 0, None) == 'test=0   '
```

# Generated at 2024-06-01 12:28:40.888422
```python
    assert parsecolor("color1") == u'38;5;1'
    assert parsecolor("rgb123") == u'38;5;86'
    assert parsecolor("gray10") == u'38;5;242'
    assert parsecolor("red") == C.COLOR_CODES["red"]
    assert parsecolor("blue") == C.COLOR_CODES["blue"]
    assert parsecolor("green") == C.COLOR_CODES["green"]
```

# Generated at 2024-06-01 12:28:49.045115
```python
    stats = {'failures': 0, 'unreachable': 0, 'changed': 0}
    assert hostcolor('localhost', stats) == u"%-37s" % stringc('localhost', C.COLOR_OK)

    stats = {'failures': 1, 'unreachable': 0, 'changed': 0}
    assert hostcolor('localhost', stats) == u"%-37s" % stringc('localhost', C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 1, 'changed': 0}
    assert hostcolor('localhost', stats) == u"%-37s" % stringc('localhost', C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 0, 'changed': 1}
    assert hostcolor('localhost', stats) == u"%-37s" % stringc('localhost', C.COLOR_CHANGED)

   

# Generated at 2024-06-01 12:28:52.275235
```python
    assert parsecolor('color1') == '38;5;1'
    assert parsecolor('rgb123') == '38;5;73'
    assert parsecolor('gray5') == '38;5;237'
    assert parsecolor('red') == C.COLOR_CODES['red']
    assert parsecolor('blue') == C.COLOR_CODES['blue']
    assert parsecolor('invalid') == C.COLOR_CODES['invalid']
```

# Generated at 2024-06-01 12:28:54.364197
```python
    assert colorize('test', 0, 'red') == 'test=0   '
    assert colorize('test', 1, 'red') == stringc('test=1   ', 'red')
    assert colorize('test', 123, 'blue') == stringc('test=123 ', 'blue')
    assert colorize('test', 0, None) == 'test=0   '
    assert colorize('test', 1, None) == 'test=1   '
```

# Generated at 2024-06-01 12:28:56.037539
```python
    assert parsecolor("color1") == u'38;5;1'
    assert parsecolor("rgb123") == u'38;5;86'
    assert parsecolor("gray5") == u'38;5;237'
    assert parsecolor("red") == C.COLOR_CODES["red"]
    assert parsecolor("blue") == C.COLOR_CODES["blue"]
    assert parsecolor("invalid") == C.COLOR_CODES["invalid"]
```

# Generated at 2024-06-01 12:28:57.918065
```python
    assert parsecolor("color1") == u'38;5;1'
    assert parsecolor("rgb123") == u'38;5;86'
    assert parsecolor("gray10") == u'38;5;242'
    assert parsecolor("red") == C.COLOR_CODES["red"]
    assert parsecolor("blue") == C.COLOR_CODES["blue"]
    assert parsecolor("green") == C.COLOR_CODES["green"]
```

# Generated at 2024-06-01 12:29:00.995207
```python
    assert parsecolor("color1") == u'38;5;1'
    assert parsecolor("rgb123") == u'38;5;86'
    assert parsecolor("gray10") == u'38;5;242'
    assert parsecolor("red") == C.COLOR_CODES["red"]
    assert parsecolor("blue") == C.COLOR_CODES["blue"]
    assert parsecolor("green") == C.COLOR_CODES["green"]
```

# Generated at 2024-06-01 12:29:03.234512
```python
    assert stringc("hello", "red") == "\033[31mhello\033[0m"
    assert stringc("hello\nworld", "blue") == "\033[34mhello\033[0m\n\033[34mworld\033[0m"
    assert stringc("test", "green", wrap_nonvisible_chars=True) == "\001\033[32m\002test\001\033[0m\002"
    assert stringc("no color", "invalid_color") == "no color"
    assert stringc("no color", "red", wrap_nonvisible_chars=False) == "\033[31mno color\033[0m"
```

# Generated at 2024-06-01 12:29:15.546683
```python
    assert stringc("Hello", "red") == "\033[31mHello\033[0m"
    assert stringc("Hello\nWorld", "blue") == "\033[34mHello\033[0m\n\033[34mWorld\033[0m"
    assert stringc("Hello", "green", wrap_nonvisible_chars=True) == "\001\033[32m\002Hello\001\033[0m\002"
    assert stringc("Hello", "invalid_color") == "Hello"
    assert stringc("Hello", "color123") == "\033[38;5;123mHello\033[0m"
    assert stringc("Hello", "rgb123") == "\033[38;5;86mHello\033[0m"
    assert stringc("Hello", "gray10") == "\033[38;5;242mHello\033[0m"
   

# Generated at 2024-06-01 12:29:19.047676
```python
    assert stringc("Hello", "red") == "\033[31mHello\033[0m"
    assert stringc("Hello\nWorld", "blue") == "\033[34mHello\033[0m\n\033[34mWorld\033[0m"
    assert stringc("Hello", "green", wrap_nonvisible_chars=True) == "\001\033[32m\002Hello\001\033[0m\002"
    assert stringc("Hello", "invalid_color") == "Hello"
    assert stringc("Hello", "color123") == "\033[38;5;123mHello\033[0m"
    assert stringc("Hello", "rgb123") == "\033[38;5;91mHello\033[0m"
    assert stringc("Hello", "gray10") == "\033[38;5;242mHello\033[0m"
   

# Generated at 2024-06-01 12:29:21.166400
```python
    assert colorize('test', 0, 'red') == 'test=0   '
    assert colorize('test', 1, 'red') == stringc('test=1   ', 'red')
    assert colorize('test', 123, 'blue') == stringc('test=123 ', 'blue')
    assert colorize('test', 0, None) == 'test=0   '
    assert colorize('test', 1, None) == 'test=1   '
```

# Generated at 2024-06-01 12:29:23.573088
```python
    assert stringc("hello", "red") == "\033[31mhello\033[0m"
    assert stringc("hello\nworld", "blue") == "\033[34mhello\033[0m\n\033[34mworld\033[0m"
    assert stringc("test", "green", wrap_nonvisible_chars=True) == "\001\033[32m\002test\001\033[0m\002"
    assert stringc("no color", "invalid_color") == "no color"
    assert stringc("no color", "red", wrap_nonvisible_chars=False) == "\033[31mno color\033[0m"
```

# Generated at 2024-06-01 12:29:25.317287
```python
    assert parsecolor("color1") == u'38;5;1'
    assert parsecolor("rgb123") == u'38;5;86'
    assert parsecolor("gray5") == u'38;5;237'
    assert parsecolor("red") == C.COLOR_CODES["red"]
    assert parsecolor("blue") == C.COLOR_CODES["blue"]
    assert parsecolor("invalid") == C.COLOR_CODES["invalid"]
```

# Generated at 2024-06-01 12:29:27.417534
```python
    assert parsecolor("color1") == u'38;5;1'
    assert parsecolor("rgb123") == u'38;5;73'
    assert parsecolor("gray5") == u'38;5;237'
    assert parsecolor("red") == C.COLOR_CODES["red"]
    assert parsecolor("blue") == C.COLOR_CODES["blue"]
    assert parsecolor("invalid") == C.COLOR_CODES["invalid"]
```

# Generated at 2024-06-01 12:29:29.827331
```python
    assert stringc("hello", "red") == "\033[31mhello\033[0m"
    assert stringc("hello\nworld", "blue") == "\033[34mhello\033[0m\n\033[34mworld\033[0m"
    assert stringc("test", "green", wrap_nonvisible_chars=True) == "\001\033[32m\002test\001\033[0m\002"
    assert stringc("no color", "invalid_color") == "no color"
    assert stringc("no color", "red", wrap_nonvisible_chars=False) == "\033[31mno color\033[0m"
```

# Generated at 2024-06-01 12:29:33.107107
```python
    host = "testhost"
    stats = {'failures': 1, 'unreachable': 0, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 1, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 0, 'changed': 1}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_CHANGED)

    stats = {'failures': 0, 'unreachable': 0, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_OK)

    assert

# Generated at 2024-06-01 12:29:35.331945
```python
    assert colorize('test', 0, 'red') == 'test=0   '
    assert colorize('test', 1, 'red') == stringc('test=1   ', 'red')
    assert colorize('test', 123, 'blue') == stringc('test=123 ', 'blue')
    assert colorize('test', -1, 'green') == stringc('test=-1  ', 'green')
    assert colorize('test', 0, None) == 'test=0   '
    assert colorize('test', 1, None) == 'test=1   '
```

# Generated at 2024-06-01 12:29:38.448255
```python
    host = "testhost"
    stats = {'failures': 1, 'unreachable': 0, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 1, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 0, 'changed': 1}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_CHANGED)

    stats = {'failures': 0, 'unreachable': 0, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_OK)

    assert

# Generated at 2024-06-01 12:29:50.769058
```python
    host = "testhost"
    stats = {'failures': 1, 'unreachable': 0, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 1, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 0, 'changed': 1}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_CHANGED)

    stats = {'failures': 0, 'unreachable': 0, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_OK)

    assert

# Generated at 2024-06-01 12:29:54.361287
```python
    assert stringc("Hello", "red") == u"\033[31mHello\033[0m"
    assert stringc("Hello\nWorld", "blue") == u"\033[34mHello\033[0m\n\033[34mWorld\033[0m"
    assert stringc("Hello", "green", wrap_nonvisible_chars=True) == u"\001\033[32m\002Hello\001\033[0m\002"
    assert stringc("Hello", "invalid_color") == "Hello"
    assert stringc("Hello", "color123") == u"\033[38;5;123mHello\033[0m"
    assert stringc("Hello", "rgb123") == u"\033[38;5;91mHello\033[0m"
    assert stringc("Hello", "gray10") == u"\033[38;5;242mHello\

# Generated at 2024-06-01 12:29:56.299468
```python
    assert parsecolor("color1") == u'38;5;1'
    assert parsecolor("rgb123") == u'38;5;86'
    assert parsecolor("gray10") == u'38;5;242'
    assert parsecolor("red") == C.COLOR_CODES["red"]
    assert parsecolor("blue") == C.COLOR_CODES["blue"]
    assert parsecolor("invalid") == C.COLOR_CODES["invalid"]
```

# Generated at 2024-06-01 12:29:58.730917
```python
    assert parsecolor("color1") == u'38;5;1'
    assert parsecolor("rgb123") == u'38;5;86'
    assert parsecolor("gray10") == u'38;5;242'
    assert parsecolor("red") == C.COLOR_CODES["red"]
    assert parsecolor("blue") == C.COLOR_CODES["blue"]
    assert parsecolor("green") == C.COLOR_CODES["green"]
```

# Generated at 2024-06-01 12:30:00.523500
```python
    assert parsecolor("color1") == u'38;5;1'
    assert parsecolor("rgb123") == u'38;5;86'
    assert parsecolor("gray10") == u'38;5;242'
    assert parsecolor("red") == C.COLOR_CODES["red"]
    assert parsecolor("blue") == C.COLOR_CODES["blue"]
    assert parsecolor("green") == C.COLOR_CODES["green"]
```

# Generated at 2024-06-01 12:30:03.377752
```python
    assert stringc("Hello", "red") == "\033[31mHello\033[0m"
    assert stringc("Hello\nWorld", "blue") == "\033[34mHello\033[0m\n\033[34mWorld\033[0m"
    assert stringc("Test", "green", wrap_nonvisible_chars=True) == "\001\033[32m\002Test\001\033[0m\002"
    assert stringc("NoColor", "red", wrap_nonvisible_chars=False) == "\033[31mNoColor\033[0m"
    assert stringc("PlainText", "none") == "PlainText"
```

# Generated at 2024-06-01 12:30:08.061731
```python
    assert stringc("Hello", "red") == "\033[31mHello\033[0m"
    assert stringc("Hello\nWorld", "blue") == "\033[34mHello\033[0m\n\033[34mWorld\033[0m"
    assert stringc("Hello", "green", wrap_nonvisible_chars=True) == "\001\033[32m\002Hello\001\033[0m\002"
    assert stringc("Hello", "invalid_color") == "Hello"
    assert stringc("Hello", "red", wrap_nonvisible_chars=False) == "\033[31mHello\033[0m"
    assert stringc("Hello", "red", wrap_nonvisible_chars=True) == "\001\033[31m\002Hello\001\033[0m\002"
```

# Generated at 2024-06-01 12:30:09.889906
```python
    assert parsecolor("color1") == u'38;5;1'
    assert parsecolor("rgb123") == u'38;5;86'
    assert parsecolor("gray10") == u'38;5;242'
    assert parsecolor("red") == C.COLOR_CODES["red"]
    assert parsecolor("blue") == C.COLOR_CODES["blue"]
    assert parsecolor("invalid") == C.COLOR_CODES["invalid"]
```

# Generated at 2024-06-01 12:30:13.044784
```python
    host = "testhost"
    stats = {'failures': 1, 'unreachable': 0, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 1, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 0, 'changed': 1}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_CHANGED)

    stats = {'failures': 0, 'unreachable': 0, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_OK)

    assert

# Generated at 2024-06-01 12:30:16.304130
```python
    assert stringc("Hello", "red") == "\033[31mHello\033[0m"
    assert stringc("Hello\nWorld", "blue") == "\033[34mHello\033[0m\n\033[34mWorld\033[0m"
    assert stringc("Hello", "green", wrap_nonvisible_chars=True) == "\001\033[32m\002Hello\001\033[0m\002"
    assert stringc("Hello", "invalid_color") == "Hello"
    assert stringc("Hello", "red", wrap_nonvisible_chars=True) == "\001\033[31m\002Hello\001\033[0m\002"
    assert stringc("Hello\nWorld", "red", wrap_nonvisible_chars=True) == "\001\033[31m\002Hello\001\033[0m\002\n\001\033[31m\002

# Generated at 2024-06-01 12:30:27.137567
```python
    assert colorize('test', 0, 'red') == 'test=0   '
    assert colorize('test', 1, 'red') == stringc('test=1   ', 'red')
    assert colorize('test', 1, None) == 'test=1   '
    assert colorize('test', 0, None) == 'test=0   '
```

# Generated at 2024-06-01 12:30:30.102276
```python
    host = "testhost"
    stats = {'failures': 1, 'unreachable': 0, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 1, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 0, 'changed': 1}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_CHANGED)

    stats = {'failures': 0, 'unreachable': 0, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_OK)

    assert

# Generated at 2024-06-01 12:30:32.899164
```python
    assert stringc("Hello", "red") == "\033[31mHello\033[0m"
    assert stringc("Hello\nWorld", "blue") == "\033[34mHello\033[0m\n\033[34mWorld\033[0m"
    assert stringc("Test", "green", wrap_nonvisible_chars=True) == "\001\033[32m\002Test\001\033[0m\002"
    assert stringc("NoColor", "red", wrap_nonvisible_chars=False) == "\033[31mNoColor\033[0m"
    assert stringc("PlainText", "red", wrap_nonvisible_chars=False) == "PlainText"
```

# Generated at 2024-06-01 12:30:36.567416
```python
    host = "testhost"
    stats = {'failures': 1, 'unreachable': 0, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 1, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 0, 'changed': 1}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_CHANGED)

    stats = {'failures': 0, 'unreachable': 0, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_OK)

    stats

# Generated at 2024-06-01 12:30:38.807934
```python
    assert parsecolor("color1") == u'38;5;1'
    assert parsecolor("rgb123") == u'38;5;49'
    assert parsecolor("gray10") == u'38;5;242'
    assert parsecolor("red") == C.COLOR_CODES["red"]
    assert parsecolor("blue") == C.COLOR_CODES["blue"]
    assert parsecolor("invalid") == C.COLOR_CODES["invalid"]
```

# Generated at 2024-06-01 12:30:40.720885
```python
    assert colorize('test', 0, 'red') == 'test=0   '
    assert colorize('test', 1, 'red') == stringc('test=1   ', 'red')
    assert colorize('test', 123, 'blue') == stringc('test=123 ', 'blue')
    assert colorize('test', 0, None) == 'test=0   '
    assert colorize('test', 1, None) == 'test=1   '
```

# Generated at 2024-06-01 12:30:43.933515
```python
    assert stringc("Hello", "red") == "\033[31mHello\033[0m"
    assert stringc("Hello\nWorld", "blue") == "\033[34mHello\033[0m\n\033[34mWorld\033[0m"
    assert stringc("Hello", "green", wrap_nonvisible_chars=True) == "\001\033[32m\002Hello\001\033[0m\002"
    assert stringc("Hello", "invalid_color") == "Hello"
    assert stringc("Hello", "red", wrap_nonvisible_chars=False) == "\033[31mHello\033[0m"
    assert stringc("Hello", "red", wrap_nonvisible_chars=True) == "\001\033[31m\002Hello\001\033[0m\002"
    assert stringc("Hello\nWorld", "red", wrap_nonvisible_chars=True) ==

# Generated at 2024-06-01 12:30:46.534636
```python
    assert parsecolor("color1") == u'38;5;1'
    assert parsecolor("rgb123") == u'38;5;86'
    assert parsecolor("gray10") == u'38;5;242'
    assert parsecolor("red") == C.COLOR_CODES["red"]
    assert parsecolor("blue") == C.COLOR_CODES["blue"]
    assert parsecolor("green") == C.COLOR_CODES["green"]
```

# Generated at 2024-06-01 12:30:49.937943
```python
    assert stringc("Hello", "red") == "\033[31mHello\033[0m"
    assert stringc("Hello\nWorld", "blue") == "\033[34mHello\033[0m\n\033[34mWorld\033[0m"
    assert stringc("Hello", "green", wrap_nonvisible_chars=True) == "\001\033[32m\002Hello\001\033[0m\002"
    assert stringc("Hello", "invalid_color") == "Hello"
    assert stringc("Hello", "red", wrap_nonvisible_chars=False) == "\033[31mHello\033[0m"
    assert stringc("Hello", "red", wrap_nonvisible_chars=True) == "\001\033[31m\002Hello\001\033[0m\002"
    assert stringc("Hello\nWorld", "red", wrap_nonvisible_chars=True) ==

# Generated at 2024-06-01 12:30:52.863849
```python
    stats = {'failures': 1, 'unreachable': 0, 'changed': 0}
    assert hostcolor('testhost', stats) == u"%-37s" % stringc('testhost', C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 1, 'changed': 0}
    assert hostcolor('testhost', stats) == u"%-37s" % stringc('testhost', C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 0, 'changed': 1}
    assert hostcolor('testhost', stats) == u"%-37s" % stringc('testhost', C.COLOR_CHANGED)

    stats = {'failures': 0, 'unreachable': 0, 'changed': 0}
    assert hostcolor('testhost', stats) == u"%-37s" % stringc('

# Generated at 2024-06-01 12:31:04.948911
```python
    host = "testhost"
    stats = {'failures': 1, 'unreachable': 0, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 1, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 0, 'changed': 1}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_CHANGED)

    stats = {'failures': 0, 'unreachable': 0, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_OK)

    assert

# Generated at 2024-06-01 12:31:08.001065
```python
    assert stringc("Hello", "red") == "\033[31mHello\033[0m"
    assert stringc("Hello\nWorld", "blue") == "\033[34mHello\033[0m\n\033[34mWorld\033[0m"
    assert stringc("Hello", "green", wrap_nonvisible_chars=True) == "\001\033[32m\002Hello\001\033[0m\002"
    assert stringc("Hello", "invalid_color") == "Hello"
    assert stringc("Hello", "red", wrap_nonvisible_chars=False) == "\033[31mHello\033[0m"
    assert stringc("Hello", "red", wrap_nonvisible_chars=True) == "\001\033[31m\002Hello\001\033[0m\002"
```

# Generated at 2024-06-01 12:31:09.833061
```python
    assert parsecolor("color1") == u'38;5;1'
    assert parsecolor("rgb123") == u'38;5;73'
    assert parsecolor("gray5") == u'38;5;237'
    assert parsecolor("red") == C.COLOR_CODES["red"]
    assert parsecolor("blue") == C.COLOR_CODES["blue"]
    assert parsecolor("invalid") == C.COLOR_CODES["invalid"]
```

# Generated at 2024-06-01 12:31:11.773138
```python
    assert parsecolor("color1") == u'38;5;1'
    assert parsecolor("rgb123") == u'38;5;73'
    assert parsecolor("gray5") == u'38;5;237'
    assert parsecolor("red") == C.COLOR_CODES["red"]
    assert parsecolor("blue") == C.COLOR_CODES["blue"]
    assert parsecolor("invalid") == C.COLOR_CODES["invalid"]
```

# Generated at 2024-06-01 12:31:15.052543
```python
    assert stringc("hello", "red") == "\033[31mhello\033[0m"
    assert stringc("hello\nworld", "blue") == "\033[34mhello\033[0m\n\033[34mworld\033[0m"
    assert stringc("test", "green", wrap_nonvisible_chars=True) == "\001\033[32m\002test\001\033[0m\002"
    assert stringc("no color", "invalid_color") == "no color"
    assert stringc("no color", "red", wrap_nonvisible_chars=False) == "\033[31mno color\033[0m"
```

# Generated at 2024-06-01 12:31:18.231204
```python
    assert stringc("Hello", "red") == "\033[31mHello\033[0m"
    assert stringc("Hello\nWorld", "blue") == "\033[34mHello\033[0m\n\033[34mWorld\033[0m"
    assert stringc("Hello", "green", wrap_nonvisible_chars=True) == "\001\033[32m\002Hello\001\033[0m\002"
    assert stringc("Hello", "invalid_color") == "Hello"
    assert stringc("Hello", "red", wrap_nonvisible_chars=False) == "\033[31mHello\033[0m"
    assert stringc("Hello", "red", wrap_nonvisible_chars=True) == "\001\033[31m\002Hello\001\033[0m\002"
    assert stringc("Hello\nWorld", "red", wrap_nonvisible_chars=True) ==

# Generated at 2024-06-01 12:31:20.649081
```python
    assert parsecolor("color1") == u'38;5;1'
    assert parsecolor("rgb123") == u'38;5;73'
    assert parsecolor("gray5") == u'38;5;237'
    assert parsecolor("red") == C.COLOR_CODES["red"]
    assert parsecolor("blue") == C.COLOR_CODES["blue"]
    assert parsecolor("green") == C.COLOR_CODES["green"]
    assert parsecolor("invalid") == C.COLOR_CODES["invalid"]
```

# Generated at 2024-06-01 12:31:22.599983
```python
    assert parsecolor("color1") == u'38;5;1'
    assert parsecolor("rgb123") == u'38;5;86'
    assert parsecolor("gray10") == u'38;5;242'
    assert parsecolor("red") == C.COLOR_CODES["red"]
    assert parsecolor("blue") == C.COLOR_CODES["blue"]
    assert parsecolor("green") == C.COLOR_CODES["green"]
```

# Generated at 2024-06-01 12:31:24.274738
```python
    assert parsecolor("color1") == u'38;5;1'
    assert parsecolor("rgb123") == u'38;5;86'
    assert parsecolor("gray10") == u'38;5;242'
    assert parsecolor("red") == C.COLOR_CODES["red"]
    assert parsecolor("blue") == C.COLOR_CODES["blue"]
    assert parsecolor("invalid") == C.COLOR_CODES["invalid"]
```

# Generated at 2024-06-01 12:31:27.627697
```python
    assert stringc("Hello", "red") == "\033[31mHello\033[0m"
    assert stringc("Hello\nWorld", "blue") == "\033[34mHello\033[0m\n\033[34mWorld\033[0m"
    assert stringc("Hello", "green", wrap_nonvisible_chars=True) == "\001\033[32m\002Hello\001\033[0m\002"
    assert stringc("Hello", "nonexistent_color") == "Hello"
    assert stringc("Hello", "color123") == "\033[38;5;123mHello\033[0m"
    assert stringc("Hello", "rgb123") == "\033[38;5;91mHello\033[0m"
    assert stringc("Hello", "gray10") == "\033[38;5;242mHello\033[0m"


# Generated at 2024-06-01 12:31:37.952529
```python
    assert parsecolor("color1") == u'38;5;1'
    assert parsecolor("rgb123") == u'38;5;86'
    assert parsecolor("gray10") == u'38;5;242'
    assert parsecolor("red") == C.COLOR_CODES["red"]
    assert parsecolor("blue") == C.COLOR_CODES["blue"]
    assert parsecolor("green") == C.COLOR_CODES["green"]
```

# Generated at 2024-06-01 12:31:41.114381
```python
    assert stringc("Hello", "red") == u"\033[31mHello\033[0m"
    assert stringc("Hello\nWorld", "blue") == u"\033[34mHello\033[0m\n\033[34mWorld\033[0m"
    assert stringc("Hello", "green", wrap_nonvisible_chars=True) == u"\001\033[32m\002Hello\001\033[0m\002"
    assert stringc("Hello\nWorld", "yellow", wrap_nonvisible_chars=True) == u"\001\033[33m\002Hello\001\033[0m\002\n\001\033[33m\002World\001\033[0m\002"
    assert stringc("Hello", "invalid_color") == "Hello"
    assert stringc("Hello", "red", wrap_nonvisible_chars=False) == u"\033[31

# Generated at 2024-06-01 12:31:42.634843
```python
    assert colorize('test', 0, 'red') == 'test=0   '
    assert colorize('test', 1, 'red') == stringc('test=1   ', 'red')
    assert colorize('test', 1, None) == 'test=1   '
    assert colorize('test', 0, None) == 'test=0   '
```

# Generated at 2024-06-01 12:31:44.439248
```python
    assert colorize('test', 0, 'red') == 'test=0   '
    assert colorize('test', 1, 'red') == stringc('test=1   ', 'red')
    assert colorize('test', 123, 'blue') == stringc('test=123 ', 'blue')
    assert colorize('test', 0, None) == 'test=0   '
    assert colorize('test', 1, None) == 'test=1   '
```

# Generated at 2024-06-01 12:31:47.240499
```python
    assert stringc("Hello", "red") == "\033[31mHello\033[0m"
    assert stringc("Hello\nWorld", "blue") == "\033[34mHello\033[0m\n\033[34mWorld\033[0m"
    assert stringc("Hello", "green", wrap_nonvisible_chars=True) == "\001\033[32m\002Hello\001\033[0m\002"
    assert stringc("Hello", "invalid_color") == "Hello"
    assert stringc("Hello", "color123") == "\033[38;5;123mHello\033[0m"
    assert stringc("Hello", "rgb123") == "\033[38;5;86mHello\033[0m"
    assert stringc("Hello", "gray10") == "\033[38;5;242mHello\033[0m"
```

# Generated at 2024-06-01 12:31:50.564349
```python
    host = "testhost"
    stats = {'failures': 1, 'unreachable': 0, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 1, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 0, 'changed': 1}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_CHANGED)

    stats = {'failures': 0, 'unreachable': 0, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_OK)

    assert

# Generated at 2024-06-01 12:31:54.993684
```python
    assert stringc("Hello", "red") == "\033[31mHello\033[0m"
    assert stringc("Hello\nWorld", "blue") == "\033[34mHello\033[0m\n\033[34mWorld\033[0m"
    assert stringc("Hello", "green", wrap_nonvisible_chars=True) == "\001\033[32m\002Hello\001\033[0m\002"
    assert stringc("Hello", "invalid_color") == "Hello"
    assert stringc("Hello", "color123") == "\033[38;5;123mHello\033[0m"
    assert stringc("Hello", "rgb123") == "\033[38;5;86mHello\033[0m"
    assert stringc("Hello", "gray10") == "\033[38;5;242mHello\033[0m"
```

# Generated at 2024-06-01 12:31:58.101373
```python
    assert stringc("Hello", "red") == "\033[31mHello\033[0m"
    assert stringc("Hello\nWorld", "blue") == "\033[34mHello\033[0m\n\033[34mWorld\033[0m"
    assert stringc("Hello", "green", wrap_nonvisible_chars=True) == "\001\033[32m\002Hello\001\033[0m\002"
    assert stringc("Hello", "invalid_color") == "Hello"
    assert stringc("Hello", "red", wrap_nonvisible_chars=False) == "\033[31mHello\033[0m"
    assert stringc("Hello", "red", wrap_nonvisible_chars=True) == "\001\033[31m\002Hello\001\033[0m\002"
```

# Generated at 2024-06-01 12:32:01.005090
```python
    assert stringc("hello", "red") == "\033[31mhello\033[0m"
    assert stringc("hello", "blue") == "\033[34mhello\033[0m"
    assert stringc("hello\nworld", "green") == "\033[32mhello\033[0m\n\033[32mworld\033[0m"
    assert stringc("hello", "red", wrap_nonvisible_chars=True) == "\001\033[31m\002hello\001\033[0m\002"
    assert stringc("hello", "blue", wrap_nonvisible_chars=True) == "\001\033[34m\002hello\001\033[0m\002"
    assert stringc("hello\nworld", "green", wrap_nonvisible_chars=True) == "\001\033[32m\002hello\001\033[0m\002\n\

# Generated at 2024-06-01 12:32:04.684323
```python
    host = "testhost"
    stats = {'failures': 1, 'unreachable': 0, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 1, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 0, 'changed': 1}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_CHANGED)

    stats = {'failures': 0, 'unreachable': 0, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_OK)

    assert

# Generated at 2024-06-01 12:32:29.131589
```python
    assert stringc("Hello", "red") == "\033[31mHello\033[0m"
    assert stringc("Hello\nWorld", "blue") == "\033[34mHello\033[0m\n\033[34mWorld\033[0m"
    assert stringc("Hello", "green", wrap_nonvisible_chars=True) == "\001\033[32m\002Hello\001\033[0m\002"
    assert stringc("Hello", "invalid_color") == "Hello"
    assert stringc("Hello", "red", wrap_nonvisible_chars=False) == "\033[31mHello\033[0m"
    assert stringc("Hello", "red", wrap_nonvisible_chars=True) == "\001\033[31m\002Hello\001\033[0m\002"
    assert stringc("Hello\nWorld", "red", wrap_nonvisible_chars=True) ==

# Generated at 2024-06-01 12:32:32.032805
```python
    assert stringc("Hello", "red") == "\033[31mHello\033[0m"
    assert stringc("Hello\nWorld", "blue") == "\033[34mHello\033[0m\n\033[34mWorld\033[0m"
    assert stringc("Hello", "green", wrap_nonvisible_chars=True) == "\001\033[32m\002Hello\001\033[0m\002"
    assert stringc("Hello", "invalid_color") == "Hello"
    assert stringc("Hello", "red", wrap_nonvisible_chars=False) == "\033[31mHello\033[0m"
    assert stringc("Hello", "red", wrap_nonvisible_chars=True) == "\001\033[31m\002Hello\001\033[0m\002"
    assert stringc("Hello\nWorld", "red", wrap_nonvisible_chars=True) ==

# Generated at 2024-06-01 12:32:36.174069
```python
    host = "testhost"
    
    # Test case 1: Host with failures
    stats = {'failures': 1, 'unreachable': 0, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_ERROR)
    
    # Test case 2: Host with unreachable
    stats = {'failures': 0, 'unreachable': 1, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_ERROR)
    
    # Test case 3: Host with changes
    stats = {'failures': 0, 'unreachable': 0, 'changed': 1}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_CHANGED)
    
    # Test case 4: Host with no issues


# Generated at 2024-06-01 12:32:40.339400
```python
    assert stringc("Hello", "red") == "\033[31mHello\033[0m"
    assert stringc("Hello\nWorld", "blue") == "\033[34mHello\033[0m\n\033[34mWorld\033[0m"
    assert stringc("Hello", "green", wrap_nonvisible_chars=True) == "\001\033[32m\002Hello\001\033[0m\002"
    assert stringc("Hello", "invalid_color") == "Hello"
    assert stringc("Hello", "red", wrap_nonvisible_chars=False) == "\033[31mHello\033[0m"
    assert stringc("Hello", "red", wrap_nonvisible_chars=True) == "\001\033[31m\002Hello\001\033[0m\002"
    assert stringc("Hello\nWorld", "red", wrap_nonvisible_chars=True) ==

# Generated at 2024-06-01 12:32:43.725135
```python
    host = "testhost"
    stats = {'failures': 1, 'unreachable': 0, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 1, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 0, 'changed': 1}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_CHANGED)

    stats = {'failures': 0, 'unreachable': 0, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_OK)

    assert

# Generated at 2024-06-01 12:32:47.117980
```python
    assert stringc("Hello", "red") == "\033[31mHello\033[0m"
    assert stringc("Hello\nWorld", "blue") == "\033[34mHello\033[0m\n\033[34mWorld\033[0m"
    assert stringc("Hello", "green", wrap_nonvisible_chars=True) == "\001\033[32m\002Hello\001\033[0m\002"
    assert stringc("Hello", "invalid_color") == "Hello"
    assert stringc("Hello", "red", wrap_nonvisible_chars=True) == "\001\033[31m\002Hello\001\033[0m\002"
    assert stringc("Hello\nWorld", "red", wrap_nonvisible_chars=True) == "\001\033[31m\002Hello\001\033[0m\002\n\001\033[31m\002

# Generated at 2024-06-01 12:32:50.798252
```python
    assert stringc("Hello", "red") == "\033[31mHello\033[0m"
    assert stringc("Hello\nWorld", "blue") == "\033[34mHello\033[0m\n\033[34mWorld\033[0m"
    assert stringc("Hello", "green", wrap_nonvisible_chars=True) == "\001\033[32m\002Hello\001\033[0m\002"
    assert stringc("Hello", "invalid_color") == "Hello"
    assert stringc("Hello", "color123") == "\033[38;5;123mHello\033[0m"
    assert stringc("Hello", "rgb123") == "\033[38;5;52mHello\033[0m"
    assert stringc("Hello", "gray10") == "\033[38;5;242mHello\033[0m"
```

# Generated at 2024-06-01 12:32:52.617419
```python
    assert colorize('test', 0, 'red') == 'test=0   '
    assert colorize('test', 1, 'red') == u"\033[31mtest=1   \033[0m"
    assert colorize('test', 1, None) == 'test=1   '
    assert colorize('test', 0, None) == 'test=0   '
```

# Generated at 2024-06-01 12:32:55.822498
```python
    host = "testhost"
    stats = {'failures': 1, 'unreachable': 0, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 1, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_ERROR)

    stats = {'failures': 0, 'unreachable': 0, 'changed': 1}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_CHANGED)

    stats = {'failures': 0, 'unreachable': 0, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_OK)

    stats

# Generated at 2024-06-01 12:33:00.567431
```python
    host = "testhost"
    
    # Test case 1: Host with failures
    stats = {'failures': 1, 'unreachable': 0, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_ERROR)
    
    # Test case 2: Host with unreachable
    stats = {'failures': 0, 'unreachable': 1, 'changed': 0}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_ERROR)
    
    # Test case 3: Host with changes
    stats = {'failures': 0, 'unreachable': 0, 'changed': 1}
    assert hostcolor(host, stats) == u"%-37s" % stringc(host, C.COLOR_CHANGED)
    
    # Test case 4: Host with no issues


# Generated at 2024-06-01 12:33:20.078347
```python
    assert parsecolor("color1") == u'38;5;1'
    assert parsecolor("rgb123") == u'38;5;86'
    assert parsecolor("gray5") == u'38;5;237'
    assert parsecolor("red") == C.COLOR_CODES["red"]
    assert parsecolor("blue") == C.COLOR_CODES["blue"]
    assert parsecolor("invalid") == C.COLOR_CODES["invalid"]
```

# Generated at 2024-06-01 12:33:23.516203
```python
    assert stringc("Hello", "red") == "\033[31mHello\033[0m"
    assert stringc("Hello\nWorld", "blue") == "\033[34mHello\033[0m\n\033[34mWorld\033[0m"
    assert stringc("Hello", "green", wrap_nonvisible_chars=True) == "\001\033[32m\002Hello\001\033[0m\002"
    assert stringc("Hello", "invalid_color") == "Hello"
    assert stringc("Hello", "color123") == "\033[38;5;123mHello\033[0m"
    assert stringc("Hello", "rgb123") == "\033[38;5;91mHello\033[0m"
    assert stringc("Hello", "gray10") == "\033[38;5;242mHello\033[0m"
   

# Generated at 2024-06-01 12:33:25.606031
```python
    assert parsecolor("color1") == u'38;5;1'
    assert parsecolor("rgb123") == u'38;5;86'
    assert parsecolor("gray5") == u'38;5;237'
    assert parsecolor("red") == C.COLOR_CODES["red"]
    assert parsecolor("blue") == C.COLOR_CODES["blue"]
    assert parsecolor("invalid") == C.COLOR_CODES["invalid"]
```

# Generated at 2024-06-01 12:33:28.267305
```python
    assert stringc("hello", "red") == "\033[31mhello\033[0m"
    assert stringc("hello\nworld", "blue") == "\033[34mhello\033[0m\n\033[34mworld\033[0m"
    assert stringc("test", "green", wrap_nonvisible_chars=True) == "\001\033[32m\002test\001\033[0m\002"
    assert stringc("no color", "invalid_color") == "no color"
    assert stringc("no color", "red", wrap_nonvisible_chars=False) == "\033[31mno color\033[0m"
```

# Generated at 2024-06-01 12:33:30.730586
```python
    assert stringc("Hello", "red") == "\033[31mHello\033[0m"
    assert stringc("Hello\nWorld", "blue") == "\033[34mHello\033[0m\n\033[34mWorld\033[0m"
    assert stringc("Test", "green", wrap_nonvisible_chars=True) == "\001\033[32m\002Test\001\033[0m\002"
    assert stringc("NoColor", "red", wrap_nonvisible_chars=False) == "\033[31mNoColor\033[0m"
    assert stringc("PlainText", "none") == "PlainText"
```

# Generated at 2024-06-01 12:33:32.486729
```python
    assert parsecolor("color1") == u'38;5;1'
    assert parsecolor("rgb123") == u'38;5;73'
    assert parsecolor("gray5") == u'38;5;237'
    assert parsecolor("red") == C.COLOR_CODES["red"]
    assert parsecolor("blue") == C.COLOR_CODES["blue"]
    assert parsecolor("invalid") == C.COLOR_CODES["invalid"]
```