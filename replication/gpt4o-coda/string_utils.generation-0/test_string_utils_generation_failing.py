# Automatically generated by Pynguin.
import string_utils.generation as module_0

def test_case_0():
    try:
        int_0 = -1489
        str_0 = module_0.random_string(int_0)
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = None
        str_0 = module_0.secure_random_hex(int_0)
    except BaseException:
        pass

def test_case_2():
    try:
        int_0 = 249
        int_1 = 1756
        generator_0 = module_0.roman_range(int_0, int_1)
    except BaseException:
        pass

def test_case_3():
    try:
        int_0 = -1119
        generator_0 = module_0.roman_range(int_0, int_0)
    except BaseException:
        pass

def test_case_4():
    try:
        int_0 = 8
        int_1 = None
        generator_0 = module_0.roman_range(int_0, int_1)
    except BaseException:
        pass

def test_case_5():
    try:
        int_0 = None
        str_0 = module_0.random_string(int_0)
    except BaseException:
        pass

def test_case_6():
    try:
        int_0 = -3749
        str_0 = module_0.secure_random_hex(int_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = module_0.uuid()
        int_0 = 1197
        str_1 = module_0.random_string(int_0)
        int_1 = 9
        int_2 = 543
        bool_0 = False
        str_2 = module_0.uuid(bool_0)
        str_3 = module_0.random_string(int_2)
        int_3 = 451
        int_4 = -1040
        generator_0 = module_0.roman_range(int_3, int_1, int_4)
    except BaseException:
        pass

def test_case_8():
    try:
        int_0 = 3522
        generator_0 = module_0.roman_range(int_0)
        bool_0 = True
        str_0 = module_0.uuid(bool_0)
        int_1 = -3080
        generator_1 = module_0.roman_range(int_0, int_0, int_1)
    except BaseException:
        pass

def test_case_9():
    try:
        int_0 = 3795
        str_0 = module_0.uuid()
        str_1 = module_0.secure_random_hex(int_0)
        str_2 = module_0.uuid()
        int_1 = 73
        int_2 = 4023
        str_3 = module_0.secure_random_hex(int_2)
        generator_0 = module_0.roman_range(int_1, int_2)
    except BaseException:
        pass