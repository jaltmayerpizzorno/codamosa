# Automatically generated by Pynguin.
import ansible.executor.stats as module_0

def test_case_0():
    try:
        bytes_0 = b'\xa2\x0c\xd2\xf6\xe1~:\x83\xb1g\x88)'
        str_0 = ":5Jxsl:r'oj:fU["
        aggregate_stats_0 = module_0.AggregateStats()
        var_0 = aggregate_stats_0.increment(bytes_0, str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        list_0 = []
        aggregate_stats_0 = module_0.AggregateStats()
        var_0 = aggregate_stats_0.decrement(list_0, list_0)
    except BaseException:
        pass

def test_case_2():
    try:
        int_0 = -153
        str_0 = None
        list_0 = [str_0, str_0, str_0]
        aggregate_stats_0 = module_0.AggregateStats()
        var_0 = aggregate_stats_0.summarize(aggregate_stats_0)
        aggregate_stats_1 = module_0.AggregateStats()
        var_1 = aggregate_stats_1.set_custom_stats(int_0, list_0)
        aggregate_stats_2 = module_0.AggregateStats()
        tuple_0 = None
        set_0 = {int_0, tuple_0, int_0}
        var_2 = aggregate_stats_1.update_custom_stats(aggregate_stats_1, set_0)
        aggregate_stats_3 = module_0.AggregateStats()
        var_3 = aggregate_stats_0.decrement(str_0, tuple_0)
    except BaseException:
        pass

def test_case_3():
    try:
        int_0 = -137
        aggregate_stats_0 = module_0.AggregateStats()
        tuple_0 = None
        set_0 = {int_0, tuple_0, int_0}
        var_0 = aggregate_stats_0.update_custom_stats(aggregate_stats_0, set_0)
        var_1 = aggregate_stats_0.update_custom_stats(aggregate_stats_0, set_0)
    except BaseException:
        pass

def test_case_4():
    try:
        aggregate_stats_0 = module_0.AggregateStats()
        dict_0 = {aggregate_stats_0: aggregate_stats_0}
        int_0 = 2326
        str_0 = 'CkCu.F=ir8ZG'
        var_0 = aggregate_stats_0.update_custom_stats(dict_0, int_0, str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        int_0 = -137
        str_0 = None
        list_0 = [str_0, str_0, str_0]
        aggregate_stats_0 = module_0.AggregateStats()
        var_0 = aggregate_stats_0.set_custom_stats(int_0, list_0)
        aggregate_stats_1 = module_0.AggregateStats()
        tuple_0 = None
        set_0 = {int_0, tuple_0, int_0}
        var_1 = aggregate_stats_0.update_custom_stats(aggregate_stats_0, set_0)
        float_0 = 745.0170284261674
        int_1 = None
        var_2 = aggregate_stats_1.set_custom_stats(int_1, list_0)
        aggregate_stats_2 = module_0.AggregateStats()
        aggregate_stats_3 = module_0.AggregateStats()
        var_3 = aggregate_stats_1.update_custom_stats(tuple_0, float_0)
        bool_0 = True
        str_1 = 'B"6b4'
        var_4 = aggregate_stats_2.update_custom_stats(bool_0, str_1)
        var_5 = aggregate_stats_1.increment(tuple_0, list_0)
    except BaseException:
        pass

def test_case_6():
    try:
        int_0 = -137
        str_0 = None
        aggregate_stats_0 = module_0.AggregateStats()
        aggregate_stats_1 = module_0.AggregateStats()
        var_0 = aggregate_stats_1.summarize(aggregate_stats_0)
        list_0 = [str_0, str_0, str_0]
        aggregate_stats_2 = module_0.AggregateStats()
        var_1 = aggregate_stats_2.set_custom_stats(int_0, list_0)
        aggregate_stats_3 = module_0.AggregateStats()
        float_0 = 318.0
        str_1 = 'n,|J\x0b!2Il%'
        var_2 = aggregate_stats_3.set_custom_stats(float_0, str_1)
        aggregate_stats_4 = module_0.AggregateStats()
        tuple_0 = None
        dict_0 = {}
        aggregate_stats_5 = module_0.AggregateStats()
        var_3 = aggregate_stats_5.set_custom_stats(tuple_0, dict_0)
        int_1 = -1573
        var_4 = aggregate_stats_4.summarize(int_1)
        aggregate_stats_6 = module_0.AggregateStats()
        var_5 = aggregate_stats_6.update_custom_stats(tuple_0, tuple_0, float_0)
        var_6 = aggregate_stats_5.update_custom_stats(tuple_0, dict_0)
        str_2 = 'Y\\'
        var_7 = aggregate_stats_5.decrement(dict_0, str_2)
    except BaseException:
        pass