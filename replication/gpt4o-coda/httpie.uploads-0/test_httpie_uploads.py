# Automatically generated by Pynguin.
import httpie.uploads as module_0
import httpie.cli.dicts as module_1
import requests_toolbelt.multipart.encoder as module_2
import typing as module_3
import requests.models as module_4

def test_case_0():
    pass

def test_case_1():
    str_0 = 'pOfR]x7Zpcp.ed+'
    bytes_0 = b'j\xad}\x8e\x88}f\r\xf8\xcc#0\r\xb3\xf3S'
    chunked_upload_stream_0 = module_0.ChunkedUploadStream(str_0, bytes_0)

def test_case_2():
    multipart_request_data_dict_0 = module_1.MultipartRequestDataDict()
    multipart_encoder_0 = module_2.MultipartEncoder(multipart_request_data_dict_0)
    chunked_multipart_upload_stream_0 = module_0.ChunkedMultipartUploadStream(multipart_encoder_0)

def test_case_3():
    str_0 = '\x0bPOST'
    var_0 = module_0.prepare_request_body(str_0, str_0)

def test_case_4():
    multipart_request_data_dict_0 = module_1.MultipartRequestDataDict()
    multipart_encoder_0 = module_2.MultipartEncoder(multipart_request_data_dict_0)
    i_o_0 = module_3.IO()
    var_0 = i_o_0.read()
    var_1 = module_0.prepare_request_body(multipart_encoder_0, var_0)

def test_case_5():
    multipart_request_data_dict_0 = module_1.MultipartRequestDataDict()
    int_0 = None
    tuple_0 = module_0.get_multipart_data_and_content_type(multipart_request_data_dict_0, int_0)

def test_case_6():
    multipart_request_data_dict_0 = module_1.MultipartRequestDataDict()
    request_data_dict_0 = module_1.RequestDataDict()
    callable_0 = None
    prepared_request_0 = module_4.PreparedRequest()
    var_0 = module_0.prepare_request_body(request_data_dict_0, callable_0, prepared_request_0)
    multipart_encoder_0 = module_2.MultipartEncoder(multipart_request_data_dict_0)
    i_o_0 = module_3.IO()
    var_1 = i_o_0.read()
    var_2 = module_0.prepare_request_body(multipart_encoder_0, var_1)
    i_o_0.close()

def test_case_7():
    multipart_request_data_dict_0 = module_1.MultipartRequestDataDict()
    str_0 = 'J-%pb\x0c/s'
    tuple_0 = module_0.get_multipart_data_and_content_type(multipart_request_data_dict_0, str_0, str_0)

def test_case_8():
    bool_0 = True
    str_0 = 'DJm5Sio{e}G7'
    float_0 = -1326.038
    var_0 = module_0.prepare_request_body(str_0, bool_0, str_0, float_0, str_0)

def test_case_9():
    multipart_request_data_dict_0 = module_1.MultipartRequestDataDict()
    multipart_encoder_0 = module_2.MultipartEncoder(multipart_request_data_dict_0)
    chunked_multipart_upload_stream_0 = module_0.ChunkedMultipartUploadStream(multipart_encoder_0)
    chunked_multipart_upload_stream_1 = module_0.ChunkedMultipartUploadStream(multipart_encoder_0)
    bytes_0 = b"\xa9'\xf9\x1e|n\xdaf\t\xb1\xc1"
    optional_0 = None
    str_0 = '$hC'
    var_0 = module_0.prepare_request_body(multipart_encoder_0, bytes_0, optional_0, str_0)

def test_case_10():
    bool_0 = False
    multipart_request_data_dict_0 = module_1.MultipartRequestDataDict()
    list_0 = []
    multipart_encoder_0 = module_2.MultipartEncoder(multipart_request_data_dict_0, list_0)
    callable_0 = None
    var_0 = module_0.prepare_request_body(multipart_encoder_0, callable_0)
    chunked_multipart_upload_stream_0 = module_0.ChunkedMultipartUploadStream(multipart_encoder_0)
    float_0 = -1326.038
    multipart_request_data_dict_1 = module_1.MultipartRequestDataDict()
    str_0 = 'boundary='
    tuple_0 = module_0.get_multipart_data_and_content_type(multipart_request_data_dict_1, str_0, str_0)
    var_1 = module_0.prepare_request_body(str_0, bool_0, str_0, float_0, str_0)
    callable_1 = None
    chunked_upload_stream_0 = module_0.ChunkedUploadStream(list_0, callable_1)
    prepared_request_0 = module_4.PreparedRequest()
    prepared_request_1 = module_4.PreparedRequest()
    list_1 = None
    callable_2 = None
    chunked_upload_stream_1 = module_0.ChunkedUploadStream(list_1, callable_2)