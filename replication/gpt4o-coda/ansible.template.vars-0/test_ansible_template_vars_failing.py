# Automatically generated by Pynguin.
import ansible.template.vars as module_0

def test_case_0():
    try:
        bool_0 = False
        int_0 = None
        list_0 = [int_0]
        float_0 = 0.001
        ansible_j2_vars_0 = module_0.AnsibleJ2Vars(list_0, float_0)
        var_0 = ansible_j2_vars_0.__contains__(bool_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = "Complex args containing variables cannot use bare variables (without Jinja2 delimiters), and must use the full variable style ('{{var_name}}')"
        bytes_0 = b'\xf1\xaaH\xfc\x00\xdf\xbb\x11(\x11\xa8\x90\xce\x81'
        tuple_0 = (str_0, bytes_0)
        list_0 = [str_0, bytes_0]
        ansible_j2_vars_0 = module_0.AnsibleJ2Vars(tuple_0, list_0)
        var_0 = ansible_j2_vars_0.__iter__()
    except BaseException:
        pass

def test_case_2():
    try:
        bool_0 = False
        ansible_j2_vars_0 = module_0.AnsibleJ2Vars(bool_0, bool_0)
        var_0 = ansible_j2_vars_0.__len__()
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 's\rS0p6e\t.DP\n}=[r6Nv'
        bool_0 = False
        ansible_j2_vars_0 = module_0.AnsibleJ2Vars(str_0, bool_0, str_0)
        var_0 = ansible_j2_vars_0.__getitem__(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        float_0 = 3138.317715
        str_0 = '密碼'
        dict_0 = {}
        ansible_j2_vars_0 = module_0.AnsibleJ2Vars(str_0, float_0, dict_0)
        list_0 = [float_0]
        float_1 = 0.1
        int_0 = None
        var_0 = ansible_j2_vars_0.add_locals(int_0)
        ansible_j2_vars_1 = module_0.AnsibleJ2Vars(list_0, float_1)
        str_1 = 'B\nR;NLe1QJDv7u]<'
        ansible_j2_vars_2 = module_0.AnsibleJ2Vars(ansible_j2_vars_1, str_1)
        int_1 = None
        var_1 = ansible_j2_vars_1.__getitem__(int_1)
    except BaseException:
        pass

def test_case_5():
    try:
        bool_0 = True
        float_0 = 1037.28729
        str_0 = '密碼'
        dict_0 = {str_0: bool_0}
        ansible_j2_vars_0 = module_0.AnsibleJ2Vars(str_0, float_0, dict_0)
        var_0 = ansible_j2_vars_0.__contains__(str_0)
        bytes_0 = b'$\xc9T\x8d)'
        tuple_0 = (bytes_0,)
        var_1 = ansible_j2_vars_0.__contains__(tuple_0)
    except BaseException:
        pass