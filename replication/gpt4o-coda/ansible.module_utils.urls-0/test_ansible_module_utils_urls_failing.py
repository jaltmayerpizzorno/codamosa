# Automatically generated by Pynguin.
import ansible.module_utils.urls as module_0

def test_case_0():
    try:
        h_t_t_p_s_client_auth_handler_0 = None
        dict_0 = {}
        s_s_l_validation_error_0 = module_0.SSLValidationError(**dict_0)
        str_0 = 'S(ZQNGA\x0c46q'
        connection_error_0 = module_0.ConnectionError()
        missing_module_error_0 = module_0.MissingModuleError(str_0, connection_error_0)
        proxy_error_0 = module_0.ProxyError()
        var_0 = module_0.open_url(h_t_t_p_s_client_auth_handler_0, s_s_l_validation_error_0, missing_module_error_0, str_0, proxy_error_0)
    except BaseException:
        pass

def test_case_1():
    try:
        proxy_error_0 = module_0.ProxyError()
        dict_0 = {}
        custom_h_t_t_p_s_connection_0 = module_0.CustomHTTPSConnection(**dict_0)
    except BaseException:
        pass

def test_case_2():
    try:
        float_0 = 2137.97395
        custom_h_t_t_p_s_handler_0 = module_0.CustomHTTPSHandler()
        var_0 = custom_h_t_t_p_s_handler_0.https_open(float_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '.1unte'
        unix_h_t_t_p_s_connection_0 = module_0.UnixHTTPSConnection(str_0)
        var_0 = unix_h_t_t_p_s_connection_0.connect()
    except BaseException:
        pass

def test_case_4():
    try:
        list_0 = []
        no_s_s_l_error_0 = module_0.NoSSLError()
        int_0 = -1695
        missing_module_error_0 = module_0.MissingModuleError(no_s_s_l_error_0, int_0)
        unix_h_t_t_p_s_connection_0 = module_0.UnixHTTPSConnection(missing_module_error_0)
        var_0 = unix_h_t_t_p_s_connection_0.__call__(*list_0)
    except BaseException:
        pass

def test_case_5():
    try:
        connection_error_0 = None
        unix_h_t_t_p_connection_0 = module_0.UnixHTTPConnection(connection_error_0)
        var_0 = unix_h_t_t_p_connection_0.connect()
    except BaseException:
        pass

def test_case_6():
    try:
        connection_error_0 = None
        unix_h_t_t_p_connection_0 = module_0.UnixHTTPConnection(connection_error_0)
        str_0 = 'jK;]WR\\h2`'
        unix_h_t_t_p_connection_1 = module_0.UnixHTTPConnection(str_0)
        str_1 = 'M4TN__(~QnZ&{:q*'
        dict_0 = {str_1: unix_h_t_t_p_connection_1}
        var_0 = unix_h_t_t_p_connection_0.__call__(**dict_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'Darwin'
        request_0 = module_0.Request()
        var_0 = request_0.options(str_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = '.. note::'
        request_0 = module_0.Request()
        var_0 = request_0.options(str_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'example.com'
        int_0 = 443
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(str_0, int_0)
        var_0 = module_0.atexit_remove_file(int_0)
        var_1 = s_s_l_validation_handler_0.http_request(str_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = 'example.com'
        int_0 = 443
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(str_0, int_0)
        var_0 = s_s_l_validation_handler_0.http_request(str_0)
    except BaseException:
        pass

def test_case_11():
    try:
        no_s_s_l_error_0 = module_0.NoSSLError()
        unix_h_t_t_p_handler_0 = module_0.UnixHTTPHandler(no_s_s_l_error_0)
        unix_h_t_t_p_s_connection_0 = module_0.UnixHTTPSConnection(unix_h_t_t_p_handler_0)
        var_0 = module_0.rfc2822_date_string(unix_h_t_t_p_s_connection_0)
    except BaseException:
        pass

def test_case_12():
    try:
        bool_0 = False
        request_0 = module_0.Request()
        var_0 = module_0.atexit_remove_file(bool_0)
        no_s_s_l_error_0 = module_0.NoSSLError()
        dict_0 = {}
        proxy_error_0 = module_0.ProxyError(**dict_0)
        tuple_0 = ()
        dict_1 = {}
        list_0 = [dict_0, no_s_s_l_error_0, tuple_0, dict_1]
        unix_h_t_t_p_handler_0 = module_0.UnixHTTPHandler(list_0)
        request_1 = module_0.Request(proxy_error_0, request_0, unix_h_t_t_p_handler_0, dict_1, tuple_0)
    except BaseException:
        pass

def test_case_13():
    try:
        dict_0 = {}
        s_s_l_validation_error_0 = module_0.SSLValidationError(**dict_0)
        list_0 = []
        tuple_0 = ()
        set_0 = set()
        custom_h_t_t_p_s_handler_0 = module_0.CustomHTTPSHandler(set_0)
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(tuple_0, custom_h_t_t_p_s_handler_0, set_0)
        unix_h_t_t_p_handler_0 = module_0.UnixHTTPHandler(s_s_l_validation_handler_0)
        unix_h_t_t_p_s_connection_0 = module_0.UnixHTTPSConnection(unix_h_t_t_p_handler_0)
        int_0 = 2424
        no_s_s_l_error_0 = module_0.NoSSLError(*list_0, **dict_0)
        request_0 = module_0.Request(list_0, unix_h_t_t_p_s_connection_0, s_s_l_validation_error_0, unix_h_t_t_p_handler_0, s_s_l_validation_handler_0, int_0, custom_h_t_t_p_s_handler_0, no_s_s_l_error_0, s_s_l_validation_handler_0)
        var_0 = request_0.options(dict_0)
    except BaseException:
        pass

def test_case_14():
    try:
        float_0 = 2509.1
        proxy_error_0 = module_0.ProxyError()
        request_with_method_0 = None
        parse_result_dotted_dict_0 = module_0.ParseResultDottedDict()
        list_0 = [request_with_method_0]
        var_0 = module_0.fetch_url(float_0, proxy_error_0, request_with_method_0, parse_result_dotted_dict_0, list_0)
    except BaseException:
        pass

def test_case_15():
    try:
        list_0 = []
        s_s_l_validation_error_0 = module_0.SSLValidationError()
        no_s_s_l_error_0 = module_0.NoSSLError(*list_0)
        parse_result_dotted_dict_0 = module_0.ParseResultDottedDict()
        bool_0 = False
        str_0 = "!uM+-}p.4G4o'|~"
        set_0 = None
        int_0 = -1038
        tuple_0 = (set_0, int_0)
        request_0 = module_0.Request(bool_0, str_0, tuple_0)
        bytes_0 = b'F-\x82o\xd3b\x18\xdad\xb1\xdb'
        unix_h_t_t_p_s_connection_0 = module_0.UnixHTTPSConnection(bytes_0)
        var_0 = module_0.fetch_file(parse_result_dotted_dict_0, request_0, unix_h_t_t_p_s_connection_0, bytes_0, list_0)
    except BaseException:
        pass

def test_case_16():
    try:
        dict_0 = {}
        parse_result_dotted_dict_0 = module_0.ParseResultDottedDict(**dict_0)
        float_0 = None
        dict_1 = {float_0: float_0}
        bool_0 = False
        proxy_error_0 = module_0.ProxyError()
        request_0 = module_0.Request(dict_1, bool_0, proxy_error_0)
        h_t_t_p_s_client_auth_handler_0 = module_0.HTTPSClientAuthHandler(request_0)
        list_0 = [dict_1, request_0, request_0, float_0]
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(h_t_t_p_s_client_auth_handler_0, list_0, proxy_error_0)
        var_0 = s_s_l_validation_handler_0.validate_proxy_response(parse_result_dotted_dict_0)
    except BaseException:
        pass

def test_case_17():
    try:
        connection_error_0 = None
        unix_h_t_t_p_connection_0 = module_0.UnixHTTPConnection(connection_error_0)
        bool_0 = False
        unix_h_t_t_p_handler_0 = module_0.UnixHTTPHandler(bool_0)
        str_0 = '_cy\\\x0bune0J^[6SEB/'
        unix_h_t_t_p_handler_1 = module_0.UnixHTTPHandler(connection_error_0)
        var_0 = unix_h_t_t_p_handler_1.http_open(str_0)
    except BaseException:
        pass

def test_case_18():
    try:
        str_0 = 'txamKpleB=com'
        int_0 = 2528
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(str_0, int_0)
        var_0 = s_s_l_validation_handler_0.validate_proxy_response(str_0)
    except BaseException:
        pass

def test_case_19():
    try:
        list_0 = []
        s_s_l_validation_error_0 = module_0.SSLValidationError()
        no_s_s_l_error_0 = module_0.NoSSLError(*list_0)
        parse_result_dotted_dict_0 = module_0.ParseResultDottedDict()
        bool_0 = False
        str_0 = "!uM+-}p.4G4o'|~"
        set_0 = None
        int_0 = -1038
        tuple_0 = (set_0, int_0)
        request_0 = module_0.Request(bool_0, str_0, tuple_0)
        bytes_0 = b'F-\x82o\xd3b\x18\xdad\xb1\xdb'
        list_1 = [str_0, s_s_l_validation_error_0]
        request_with_method_0 = module_0.RequestWithMethod(bool_0, no_s_s_l_error_0, list_1, bytes_0)
    except BaseException:
        pass

def test_case_20():
    try:
        parse_result_dotted_dict_0 = module_0.ParseResultDottedDict()
        var_0 = parse_result_dotted_dict_0.as_list()
        str_0 = '.. cnote::'
        request_0 = module_0.Request()
        var_1 = request_0.options(str_0)
    except BaseException:
        pass

def test_case_21():
    try:
        request_0 = module_0.Request()
        var_0 = request_0.options(request_0)
    except BaseException:
        pass

def test_case_22():
    try:
        request_0 = module_0.Request()
        bytes_0 = b'\x0b\x8f\x8b\x9d\xdd\x96\xab\xfc\x89\x95\xae\xea\x8e\xc9/\xc8\xd8H\xce'
        var_0 = module_0.generic_urlparse(bytes_0)
        set_0 = set()
        var_1 = module_0.prepare_multipart(set_0)
    except BaseException:
        pass

def test_case_23():
    try:
        connection_error_0 = module_0.ConnectionError()
        var_0 = module_0.getpeercert(connection_error_0)
    except BaseException:
        pass

def test_case_24():
    try:
        str_0 = None
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
        var_0 = module_0.prepare_multipart(dict_0)
    except BaseException:
        pass

def test_case_25():
    try:
        h_t_t_p_s_client_auth_handler_0 = module_0.HTTPSClientAuthHandler()
        str_0 = ''
        dict_0 = {str_0: h_t_t_p_s_client_auth_handler_0, str_0: str_0}
        var_0 = module_0.prepare_multipart(dict_0)
        var_1 = module_0.url_argument_spec()
        bool_0 = False
        var_2 = h_t_t_p_s_client_auth_handler_0.https_open(bool_0)
    except BaseException:
        pass

def test_case_26():
    try:
        str_0 = 'exampleZcom'
        int_0 = 56
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(str_0, int_0)
        set_0 = {str_0}
        var_0 = s_s_l_validation_handler_0.make_context(str_0, set_0)
    except BaseException:
        pass

def test_case_27():
    try:
        s_s_l_validation_error_0 = module_0.SSLValidationError()
        str_0 = 'running the handler'
        dict_0 = {str_0: str_0}
        var_0 = module_0.build_ssl_validation_error(s_s_l_validation_error_0, str_0, s_s_l_validation_error_0, dict_0)
    except BaseException:
        pass

def test_case_28():
    try:
        bool_0 = False
        float_0 = 827.0
        list_0 = [bool_0, bool_0, float_0]
        bool_1 = True
        str_0 = ')]l)V6v9<22^Tz&|A'
        var_0 = module_0.build_ssl_validation_error(list_0, bool_1, str_0)
    except BaseException:
        pass

def test_case_29():
    try:
        list_0 = None
        dict_0 = {}
        parse_result_dotted_dict_0 = module_0.ParseResultDottedDict()
        request_0 = module_0.Request(parse_result_dotted_dict_0)
        var_0 = request_0.patch(list_0, **dict_0)
    except BaseException:
        pass

def test_case_30():
    try:
        request_0 = module_0.Request()
        complex_0 = None
        var_0 = request_0.head(complex_0)
    except BaseException:
        pass

def test_case_31():
    try:
        unix_h_t_t_p_connection_0 = None
        unix_h_t_t_p_handler_0 = module_0.UnixHTTPHandler(unix_h_t_t_p_connection_0)
        list_0 = None
        set_0 = set()
        list_1 = [set_0, set_0]
        bool_0 = True
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(set_0, list_1, bool_0)
        var_0 = s_s_l_validation_handler_0.make_context(unix_h_t_t_p_handler_0, list_0)
    except BaseException:
        pass

def test_case_32():
    try:
        set_0 = set()
        bool_0 = False
        bytes_0 = None
        missing_module_error_0 = module_0.MissingModuleError(set_0, bool_0)
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(bytes_0, missing_module_error_0)
        var_0 = s_s_l_validation_handler_0.validate_proxy_response(set_0, missing_module_error_0)
    except BaseException:
        pass

def test_case_33():
    try:
        dict_0 = {}
        float_0 = None
        list_0 = [dict_0, dict_0]
        bytes_0 = None
        request_0 = module_0.Request(dict_0, dict_0, float_0, list_0, bytes_0)
        str_0 = 'VL&$aD*RX%P\x0c_yx5RaJ'
        var_0 = request_0.options(str_0)
    except BaseException:
        pass

def test_case_34():
    try:
        parse_result_dotted_dict_0 = module_0.ParseResultDottedDict()
        tuple_0 = ()
        missing_module_error_0 = None
        custom_h_t_t_p_s_handler_0 = module_0.CustomHTTPSHandler(missing_module_error_0)
        list_0 = [tuple_0]
        bytes_0 = b'\xdf\x0c\x91\xef\x8d\xe5\x0f\xd4t\x8c+\xb0\x99\xea}{\xcb\x83\x81\xc4'
        unix_h_t_t_p_s_connection_0 = module_0.UnixHTTPSConnection(bytes_0)
        connection_error_0 = None
        request_0 = module_0.Request(tuple_0, custom_h_t_t_p_s_handler_0, list_0, unix_h_t_t_p_s_connection_0, connection_error_0, unix_h_t_t_p_s_connection_0)
        var_0 = request_0.patch(parse_result_dotted_dict_0)
    except BaseException:
        pass

def test_case_35():
    try:
        request_0 = module_0.Request()
        tuple_0 = None
        var_0 = request_0.get(tuple_0)
    except BaseException:
        pass

def test_case_36():
    try:
        str_0 = 'example.com'
        int_0 = 17
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(str_0, str_0, int_0)
        var_0 = s_s_l_validation_handler_0.http_request(str_0)
    except BaseException:
        pass

def test_case_37():
    try:
        float_0 = 0.0
        dict_0 = {}
        request_0 = module_0.Request()
        var_0 = request_0.delete(float_0, **dict_0)
    except BaseException:
        pass

def test_case_38():
    try:
        h_t_t_p_s_client_auth_handler_0 = None
        dict_0 = {}
        s_s_l_validation_error_0 = module_0.SSLValidationError(**dict_0)
        str_0 = 'S(ZQNGA\x0c46q'
        connection_error_0 = module_0.ConnectionError()
        missing_module_error_0 = module_0.MissingModuleError(str_0, connection_error_0)
        str_1 = None
        proxy_error_0 = module_0.ProxyError()
        var_0 = module_0.open_url(h_t_t_p_s_client_auth_handler_0, s_s_l_validation_error_0, missing_module_error_0, str_1, proxy_error_0)
    except BaseException:
        pass

def test_case_39():
    try:
        request_0 = module_0.Request()
        bytes_0 = b''
        h_t_t_p_s_client_auth_handler_0 = module_0.HTTPSClientAuthHandler()
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(bytes_0, h_t_t_p_s_client_auth_handler_0)
        var_0 = s_s_l_validation_handler_0.get_ca_certs()
        list_0 = []
        s_s_l_validation_error_0 = module_0.SSLValidationError(*list_0)
        no_s_s_l_error_0 = module_0.NoSSLError()
        str_0 = '&ujYu'
        dict_0 = {str_0: list_0}
        var_1 = request_0.put(s_s_l_validation_error_0, no_s_s_l_error_0, **dict_0)
    except BaseException:
        pass

def test_case_40():
    try:
        h_t_t_p_s_client_auth_handler_0 = None
        str_0 = 'inu'
        list_0 = [str_0]
        set_0 = {str_0, h_t_t_p_s_client_auth_handler_0}
        list_1 = [str_0, h_t_t_p_s_client_auth_handler_0]
        dict_0 = {}
        no_s_s_l_error_0 = module_0.NoSSLError(*list_1, **dict_0)
        missing_module_error_0 = module_0.MissingModuleError(no_s_s_l_error_0, no_s_s_l_error_0)
        parse_result_dotted_dict_0 = module_0.ParseResultDottedDict()
        connection_error_0 = module_0.ConnectionError()
        unix_h_t_t_p_s_connection_0 = module_0.UnixHTTPSConnection(connection_error_0)
        tuple_0 = (no_s_s_l_error_0, missing_module_error_0, parse_result_dotted_dict_0, unix_h_t_t_p_s_connection_0)
        proxy_error_0 = module_0.ProxyError()
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(tuple_0, proxy_error_0)
        s_s_l_validation_error_0 = module_0.SSLValidationError(*list_1, **dict_0)
        unix_h_t_t_p_connection_0 = module_0.UnixHTTPConnection(s_s_l_validation_error_0)
        var_0 = unix_h_t_t_p_connection_0.__call__(*list_1, **dict_0)
        var_1 = s_s_l_validation_handler_0.detect_no_proxy(set_0)
        s_s_l_validation_handler_1 = module_0.SSLValidationHandler(str_0, list_0)
        var_2 = s_s_l_validation_handler_1.http_request(s_s_l_validation_handler_1)
    except BaseException:
        pass

def test_case_41():
    try:
        request_0 = module_0.Request()
        var_0 = module_0.url_argument_spec()
        str_0 = 'hSfZl,?Vn@q;?Hh\x0c&J'
        var_1 = request_0.post(str_0)
    except BaseException:
        pass

def test_case_42():
    try:
        h_t_t_p_s_client_auth_handler_0 = None
        parse_result_dotted_dict_0 = module_0.ParseResultDottedDict()
        var_0 = parse_result_dotted_dict_0.as_list()
        dict_0 = {}
        s_s_l_validation_error_0 = module_0.SSLValidationError(**dict_0)
        str_0 = 'S(ZQNGA\x0c46q'
        connection_error_0 = module_0.ConnectionError()
        missing_module_error_0 = module_0.MissingModuleError(str_0, connection_error_0)
        proxy_error_0 = module_0.ProxyError()
        var_1 = module_0.open_url(h_t_t_p_s_client_auth_handler_0, s_s_l_validation_error_0, dict_0, str_0, str_0, proxy_error_0)
    except BaseException:
        pass

def test_case_43():
    try:
        h_t_t_p_s_client_auth_handler_0 = None
        dict_0 = {}
        s_s_l_validation_error_0 = module_0.SSLValidationError(**dict_0)
        str_0 = 'S(ZQNGA\x0c46q'
        connection_error_0 = module_0.ConnectionError()
        proxy_error_0 = module_0.ProxyError()
        bytes_0 = b'\xe48\x048\x08\x8c\xc6\xc4\xde\xc9\xbf\xd0A@[\x9e[\x14!'
        bool_0 = None
        tuple_0 = ()
        str_1 = 'Y4}j$zJ$<'
        var_0 = module_0.open_url(bytes_0, bool_0, str_0, tuple_0, str_1, h_t_t_p_s_client_auth_handler_0)
    except BaseException:
        pass

def test_case_44():
    try:
        unix_h_t_t_p_connection_0 = None
        unix_h_t_t_p_handler_0 = module_0.UnixHTTPHandler(unix_h_t_t_p_connection_0)
        list_0 = None
        set_0 = set()
        list_1 = [set_0, set_0]
        bool_0 = False
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(set_0, list_1, bool_0)
        var_0 = s_s_l_validation_handler_0.make_context(unix_h_t_t_p_handler_0, list_0)
    except BaseException:
        pass

def test_case_45():
    try:
        str_0 = 'example.com'
        int_0 = 9
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(str_0, int_0)
        str_1 = ''
        set_0 = {str_0}
        var_0 = s_s_l_validation_handler_0.make_context(str_1, set_0)
    except BaseException:
        pass

def test_case_46():
    try:
        str_0 = '.1Unte:7'
        request_0 = module_0.Request()
        list_0 = [str_0]
        custom_h_t_t_p_s_connection_0 = module_0.CustomHTTPSConnection(*list_0)
        var_0 = custom_h_t_t_p_s_connection_0.connect()
    except BaseException:
        pass

def test_case_47():
    try:
        str_0 = 'exampeB.com'
        list_0 = [str_0, str_0]
        str_1 = 'https'
        unix_h_t_t_p_s_connection_0 = module_0.UnixHTTPSConnection(str_1)
        var_0 = unix_h_t_t_p_s_connection_0.__call__(*list_0)
        int_0 = 2540
        int_1 = 2390
        list_1 = [int_0, str_0, int_1]
        dict_0 = {str_0: int_0, str_0: str_0}
        parse_result_dotted_dict_0 = module_0.ParseResultDottedDict(*list_1, **dict_0)
    except BaseException:
        pass