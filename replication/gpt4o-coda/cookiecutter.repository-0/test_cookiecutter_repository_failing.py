# Automatically generated by Pynguin.
import cookiecutter.repository as module_0

def test_case_0():
    try:
        complex_0 = None
        var_0 = module_0.is_repo_url(complex_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'SBy9'
        tuple_0 = ()
        bytes_0 = b'\xc56J8g\xa9\x92\x04\xc4\xfa\xa5\xf7*\xb8\x13_\x12\xa6'
        int_0 = 1024
        list_0 = [str_0, str_0, bytes_0]
        var_0 = module_0.determine_repo_dir(str_0, tuple_0, bytes_0, int_0, list_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '\\\\Oo3+<ym4\x0c'
        float_0 = -1558.337
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, float_0: str_0}
        var_0 = module_0.determine_repo_dir(float_0, dict_0, str_0, dict_0, dict_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '\\\\Oo3+<ym4\x0c'
        bool_0 = True
        var_0 = module_0.expand_abbreviations(str_0, bool_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'fko_&>5\t7p]t('
        int_0 = None
        list_0 = [int_0, int_0, str_0]
        bool_0 = False
        tuple_0 = (list_0, bool_0, int_0)
        var_0 = module_0.determine_repo_dir(str_0, tuple_0, str_0, list_0, tuple_0)
    except BaseException:
        pass

def test_case_5():
    try:
        int_0 = 1542
        var_0 = module_0.repository_has_cookiecutter_json(int_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'k\x0b7%wl\tl.zip'
        str_1 = 'Wq*^#{'
        tuple_0 = ()
        bytes_0 = None
        float_0 = -1707.30437
        str_2 = ']c8S60*e<e\r xxc48'
        var_0 = module_0.repository_has_cookiecutter_json(str_2)
        float_1 = -445.4409078860538
        var_1 = module_0.determine_repo_dir(str_0, str_1, tuple_0, bytes_0, float_0, float_1)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'g\x0bmT\tFw@_8P\x0c,lfbN['
        int_0 = None
        list_0 = [int_0, int_0, int_0, int_0, int_0, str_0]
        bool_0 = False
        tuple_0 = (list_0, bool_0, int_0)
        var_0 = module_0.determine_repo_dir(str_0, tuple_0, str_0, list_0, tuple_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = '=1y\\0S;(0u\\/\r.~C$('
        var_0 = module_0.repository_has_cookiecutter_json(str_0)
        str_1 = ''
        str_2 = ':N'
        var_1 = module_0.is_zip_file(str_2)
        float_0 = None
        dict_0 = {float_0: str_2, var_1: str_2, var_0: str_1}
        var_2 = module_0.expand_abbreviations(float_0, dict_0)
        float_1 = 3188.0071560418373
        set_0 = {str_1, float_1}
        var_3 = module_0.expand_abbreviations(str_2, set_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = '=1y\\0S;(0u\\/\r.~C$('
        str_1 = 'C'
        str_2 = "y@2Bc4'<zZ"
        var_0 = module_0.is_zip_file(str_2)
        float_0 = None
        dict_0 = {float_0: str_2, var_0: str_2, str_0: str_1}
        var_1 = module_0.expand_abbreviations(float_0, dict_0)
        float_1 = 3188.0071560418373
        set_0 = {str_1, float_1}
        var_2 = module_0.expand_abbreviations(str_2, set_0)
        bytes_0 = b'&\x0e\xbf\x89\xf1/?\x0e\xbd\xb5\xe6\xd6P+%Z\xe6'
        tuple_0 = (float_1, bytes_0, bytes_0)
        var_3 = module_0.determine_repo_dir(str_2, tuple_0, str_2, tuple_0, str_2, bytes_0)
    except BaseException:
        pass

def test_case_10():
    try:
        bool_0 = True
        str_0 = '.U\rExfi,!V>d%)_'
        str_1 = '%/\tho9?.zip.zip.zip'
        str_2 = ';KzPO$GT#N_Qugdm'
        set_0 = set()
        str_3 = ''
        var_0 = module_0.determine_repo_dir(str_0, str_1, str_2, set_0, bool_0, str_3, str_1)
    except BaseException:
        pass