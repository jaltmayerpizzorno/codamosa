# Automatically generated by Pynguin.
import ansible.config.manager as module_0

def test_case_0():
    try:
        plugin_0 = module_0.Plugin()
    except BaseException:
        pass

def test_case_1():
    try:
        config_manager_0 = module_0.ConfigManager()
        float_0 = 2.0
        config_manager_1 = module_0.ConfigManager()
        bool_0 = True
        var_0 = config_manager_0.get_config_value(config_manager_1, float_0, bool_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'i#\x0b"x\x0bhln[l]'
        bool_0 = False
        tuple_0 = (str_0, bool_0)
        config_manager_0 = module_0.ConfigManager()
        config_manager_1 = module_0.ConfigManager()
        var_0 = config_manager_1.get_config_value(tuple_0, config_manager_0)
    except BaseException:
        pass

def test_case_3():
    try:
        config_manager_0 = module_0.ConfigManager()
        bool_0 = True
        dict_0 = {}
        str_0 = '@DP%+/z5&A\rPZ'
        var_0 = config_manager_0.initialize_plugin_configuration_definitions(bool_0, dict_0, str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        bool_0 = True
        config_manager_0 = module_0.ConfigManager(bool_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = ';+E\x0bWgFxIO'
        config_manager_0 = module_0.ConfigManager(str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        var_0 = module_0.find_ini_config_file()
        setting_0 = module_0.Setting()
    except BaseException:
        pass

def test_case_7():
    try:
        int_0 = -2678
        list_0 = []
        config_manager_0 = module_0.ConfigManager()
        var_0 = config_manager_0.get_configuration_definition(int_0, list_0)
    except BaseException:
        pass

def test_case_8():
    try:
        bool_0 = False
        str_0 = 'PAm*2K90RnAb1j\r'
        config_manager_0 = module_0.ConfigManager()
        var_0 = config_manager_0.get_configuration_definition(str_0)
        config_manager_1 = module_0.ConfigManager(bool_0)
    except BaseException:
        pass

def test_case_9():
    try:
        int_0 = 6
        str_0 = 'N\nav\r(Q4~'
        dict_0 = {str_0: int_0}
        config_manager_0 = module_0.ConfigManager()
        config_manager_1 = module_0.ConfigManager()
        plugin_0 = None
        bytes_0 = b'\x1b'
        var_0 = config_manager_0.initialize_plugin_configuration_definitions(plugin_0, dict_0, bytes_0)
    except BaseException:
        pass

def test_case_10():
    try:
        bool_0 = False
        config_manager_0 = module_0.ConfigManager(bool_0)
    except BaseException:
        pass

def test_case_11():
    try:
        int_0 = None
        config_manager_0 = module_0.ConfigManager()
        var_0 = config_manager_0.get_configuration_definition(int_0)
        str_0 = 'C%V<w^#'
        var_1 = config_manager_0.update_config_data(str_0)
    except BaseException:
        pass

def test_case_12():
    try:
        bool_0 = False
        list_0 = [bool_0, bool_0, bool_0]
        complex_0 = None
        var_0 = module_0.ensure_type(bool_0, list_0, complex_0)
    except BaseException:
        pass

def test_case_13():
    try:
        float_0 = 405.034202
        bool_0 = False
        set_0 = {float_0, bool_0, bool_0}
        config_manager_0 = module_0.ConfigManager(float_0, set_0)
    except BaseException:
        pass

def test_case_14():
    try:
        int_0 = 2588
        tuple_0 = ()
        list_0 = [int_0]
        config_manager_0 = module_0.ConfigManager()
        var_0 = config_manager_0.get_configuration_definition(int_0, tuple_0, list_0)
    except BaseException:
        pass

def test_case_15():
    try:
        str_0 = 'i#\x0b"x\x0bhln[l]'
        bool_0 = False
        tuple_0 = (str_0, bool_0)
        config_manager_0 = module_0.ConfigManager()
        config_manager_1 = module_0.ConfigManager()
        list_0 = [config_manager_1, config_manager_0]
        dict_0 = {}
        plugin_0 = module_0.Plugin(*list_0, **dict_0)
        bytes_0 = b'\x1ddZ\x1b'
        var_0 = module_0.find_ini_config_file()
        var_1 = config_manager_0.initialize_plugin_configuration_definitions(config_manager_0, tuple_0, bytes_0)
        str_1 = '#H[rS'
        var_2 = config_manager_1.get_plugin_vars(plugin_0, str_1)
        bytes_1 = b'\xa3z\xdf\xfe\x96\x1fx\x99\t\xee\t!\xafI\xbe\xde\xfc'
        str_2 = '&sf:1/o>R-F\\qV\\8XU{I'
        var_3 = config_manager_0.get_config_value_and_origin(bytes_0, bytes_0, bytes_1, str_2)
    except BaseException:
        pass

def test_case_16():
    try:
        config_manager_0 = module_0.ConfigManager()
        setting_0 = None
        bytes_0 = b'\x88\xcf'
        str_0 = '`pomz{:{A[Mki0I('
        var_0 = config_manager_0.get_plugin_options(setting_0, bytes_0, str_0)
    except BaseException:
        pass

def test_case_17():
    try:
        bool_0 = False
        int_0 = None
        str_0 = '\x0bAiLvT)<-d1DS.a'
        var_0 = module_0.get_ini_config_value(int_0, str_0)
        config_manager_0 = module_0.ConfigManager(bool_0)
    except BaseException:
        pass

def test_case_18():
    try:
        str_0 = 'i#\x0b"x\x0bhln[l]'
        bool_0 = True
        float_0 = -1759.2543
        config_manager_0 = module_0.ConfigManager()
        tuple_0 = (config_manager_0, str_0)
        var_0 = module_0.get_ini_config_value(float_0, tuple_0)
        tuple_1 = (str_0, bool_0)
        config_manager_1 = module_0.ConfigManager()
        config_manager_2 = module_0.ConfigManager()
        int_0 = 10240
        var_1 = config_manager_0.get_configuration_definitions(int_0)
        list_0 = [config_manager_2, config_manager_1]
        dict_0 = {}
        plugin_0 = module_0.Plugin(*list_0, **dict_0)
        bytes_0 = b'\x1dH\x1b'
        var_2 = config_manager_1.initialize_plugin_configuration_definitions(config_manager_1, tuple_1, bytes_0)
        set_0 = set()
        var_3 = config_manager_1.initialize_plugin_configuration_definitions(config_manager_1, set_0, plugin_0)
    except BaseException:
        pass

def test_case_19():
    try:
        str_0 = 'i#\tj\x0b"x\x0bhln[l]'
        float_0 = -1759.2543
        config_manager_0 = module_0.ConfigManager()
        tuple_0 = (config_manager_0, str_0)
        var_0 = module_0.get_ini_config_value(float_0, tuple_0)
        config_manager_1 = module_0.ConfigManager()
        int_0 = 10240
        var_1 = config_manager_0.get_configuration_definitions(int_0)
        list_0 = [config_manager_1, config_manager_1]
        dict_0 = {}
        plugin_0 = module_0.Plugin(*list_0, **dict_0)
        var_2 = config_manager_1.update_config_data(int_0, plugin_0)
    except BaseException:
        pass