# Automatically generated by Pynguin.
import ansible.module_utils.facts.system.distribution as module_0

def test_case_0():
    float_0 = 2434.0
    distribution_files_0 = module_0.DistributionFiles(float_0)
    var_0 = distribution_files_0.process_dist_files()

def test_case_1():
    set_0 = set()
    distribution_files_0 = module_0.DistributionFiles(set_0)

def test_case_2():
    str_0 = '&p_)W\rS/'
    distribution_files_0 = module_0.DistributionFiles(str_0)
    distribution_fact_collector_0 = module_0.DistributionFactCollector()
    str_1 = "r\x0b`b\r|y:'r\\"
    var_0 = distribution_files_0.parse_distribution_file_Slackware(distribution_fact_collector_0, str_0, distribution_fact_collector_0, str_1)

def test_case_3():
    int_0 = -5170
    str_0 = '_M}n+O{]#bq`J'
    bool_0 = True
    distribution_fact_collector_0 = module_0.DistributionFactCollector(int_0)
    str_1 = 'Udi{P YIM_4m<$TGEX'
    distribution_files_0 = module_0.DistributionFiles(str_1)
    var_0 = distribution_files_0.parse_distribution_file_Debian(int_0, str_0, bool_0, distribution_fact_collector_0)

def test_case_4():
    bytes_0 = b'3\xf2^\\'
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    list_0 = [dict_0, bytes_0]
    str_0 = 'debian'
    distribution_fact_collector_0 = module_0.DistributionFactCollector()
    distribution_0 = module_0.Distribution(distribution_fact_collector_0)
    set_0 = set()
    str_1 = '\nrA![:9a?XrqX;}QE'
    distribution_files_0 = module_0.DistributionFiles(str_1)
    var_0 = distribution_files_0.parse_distribution_file_NA(list_0, str_0, distribution_0, set_0)

def test_case_5():
    bool_0 = True
    list_0 = [bool_0, bool_0]
    set_0 = set()
    set_1 = set()
    distribution_files_0 = module_0.DistributionFiles(set_1)
    var_0 = distribution_files_0.parse_distribution_file_Coreos(bool_0, list_0, distribution_files_0, set_0)

def test_case_6():
    float_0 = 189.9962
    list_0 = []
    distribution_0 = module_0.Distribution(list_0)
    str_0 = 'z'
    distribution_files_0 = module_0.DistributionFiles(str_0)
    var_0 = distribution_files_0.parse_distribution_file_Flatcar(float_0, list_0, list_0, distribution_0)

def test_case_7():
    float_0 = 2.1475057970889675
    distribution_files_0 = module_0.DistributionFiles(float_0)
    distribution_0 = None
    distribution_files_1 = module_0.DistributionFiles(float_0)
    str_0 = 'L#jGP\x0cv\\G^h'
    int_0 = -67
    list_0 = [distribution_0, distribution_files_0, int_0, distribution_0]
    var_0 = distribution_files_1.parse_distribution_file_ClearLinux(str_0, int_0, list_0, list_0)
    distribution_files_2 = module_0.DistributionFiles(str_0)

def test_case_8():
    bytes_0 = b'\xf3\x85\xe6s\x89[\xc1\xe5?l'
    set_0 = {bytes_0}
    tuple_0 = (set_0,)
    set_1 = None
    set_2 = {set_1, set_1}
    float_0 = 2.0
    distribution_fact_collector_0 = module_0.DistributionFactCollector(float_0)
    distribution_0 = None
    float_1 = -78.0
    distribution_files_0 = module_0.DistributionFiles(float_1)
    var_0 = distribution_files_0.parse_distribution_file_CentOS(tuple_0, set_2, distribution_fact_collector_0, distribution_0)

def test_case_9():
    int_0 = 2049
    distribution_fact_collector_0 = module_0.DistributionFactCollector()
    var_0 = distribution_fact_collector_0.collect(int_0)

def test_case_10():
    str_0 = "G\\0X@Br=w'z&^M@k@C"
    distribution_0 = module_0.Distribution(str_0)
    var_0 = distribution_0.get_distribution_FreeBSD()

def test_case_11():
    int_0 = 4576
    distribution_fact_collector_0 = module_0.DistributionFactCollector(int_0)
    str_0 = 'pMet\r]W0u'
    bytes_0 = b'\xc9&\r\xa6\x8f'
    distribution_files_0 = module_0.DistributionFiles(str_0)
    var_0 = distribution_files_0.parse_distribution_file_Debian(int_0, str_0, str_0, bytes_0)
    var_1 = distribution_fact_collector_0.collect()

def test_case_12():
    dict_0 = None
    float_0 = 2372.4
    tuple_0 = (float_0,)
    set_0 = {dict_0, tuple_0, float_0}
    list_0 = None
    distribution_files_0 = module_0.DistributionFiles(list_0)
    distribution_files_1 = module_0.DistributionFiles(distribution_files_0)
    distribution_0 = module_0.Distribution(distribution_files_1)
    distribution_1 = module_0.Distribution(distribution_0)
    tuple_1 = ()
    distribution_files_2 = module_0.DistributionFiles(tuple_1)
    var_0 = distribution_files_2.parse_distribution_file_OpenWrt(dict_0, set_0, distribution_1, distribution_files_0)
    distribution_fact_collector_0 = module_0.DistributionFactCollector()
    distribution_fact_collector_1 = module_0.DistributionFactCollector()
    var_1 = distribution_fact_collector_1.collect()