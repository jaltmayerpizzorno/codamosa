# Automatically generated by Pynguin.
import pymonet.either as module_0
import builtins as module_1

def test_case_0():
    bytes_0 = b'H\x9f!\xd8lg\x85\xad\xa0\xd7a;\xd8\x07\x9b{\xe2\xcc'
    left_0 = module_0.Left(bytes_0)

def test_case_1():
    object_0 = module_1.object()
    float_0 = -2354.7221
    either_0 = module_0.Either(float_0)
    bool_0 = either_0.__eq__(object_0)

def test_case_2():
    dict_0 = None
    set_0 = {dict_0, dict_0, dict_0}
    int_0 = None
    tuple_0 = ()
    tuple_1 = (int_0, tuple_0)
    right_0 = module_0.Right(tuple_1)
    either_0 = module_0.Either(set_0)
    var_0 = either_0.to_box()
    right_1 = module_0.Right(dict_0)
    object_0 = module_1.object()
    bool_0 = either_0.__eq__(object_0)

def test_case_3():
    bytes_0 = b'H\x9f!\xd8lg\x85\xad\xa0\xd7a;\xd8\x07\x9b{\xe2\xcc'
    left_0 = module_0.Left(bytes_0)
    set_0 = {bytes_0}
    either_0 = module_0.Either(set_0)
    var_0 = either_0.to_try()
    var_1 = left_0.to_validation()
    var_2 = left_0.to_maybe()

def test_case_4():
    int_0 = True
    str_0 = 'Z'
    str_1 = '\n    Data type for storage any type of data\n    '
    dict_0 = {str_0: int_0, str_0: str_0, str_1: str_1}
    tuple_0 = (int_0, dict_0)
    str_2 = '/T5'
    left_0 = module_0.Left(str_2)
    bool_0 = left_0.is_right()
    var_0 = left_0.to_maybe()
    either_0 = module_0.Either(tuple_0)
    var_1 = either_0.to_lazy()

def test_case_5():
    object_0 = module_1.object()
    right_0 = module_0.Right(object_0)
    int_0 = 533
    bytes_0 = b'~\x83R\xf8\x08\xf3\x08k\xc10\xbe'
    left_0 = module_0.Left(bytes_0)
    var_0 = left_0.map(int_0)
    either_0 = module_0.Either(var_0)
    var_1 = either_0.is_right()
    var_2 = right_0.to_validation()

def test_case_6():
    int_0 = 1894
    left_0 = module_0.Left(int_0)
    bool_0 = left_0.is_left()

def test_case_7():
    object_0 = module_1.object()
    float_0 = -2354.7221
    either_0 = module_0.Either(float_0)
    bool_0 = either_0.__eq__(object_0)
    right_0 = module_0.Right(bool_0)
    left_0 = module_0.Left(right_0)
    bool_1 = left_0.is_right()

def test_case_8():
    bytes_0 = b'H\x9f!\xd8lg\x85\xad\xa0\xd7a;\xd8\x07\x9b{\xe2\xcc'
    left_0 = module_0.Left(bytes_0)
    var_0 = left_0.to_maybe()

def test_case_9():
    float_0 = 1881.712273
    right_0 = module_0.Right(float_0)
    bool_0 = right_0.is_right()

def test_case_10():
    str_0 = 'XTB$n^V&bCR'
    right_0 = module_0.Right(str_0)
    right_1 = module_0.Right(right_0)
    var_0 = right_1.to_maybe()

def test_case_11():
    complex_0 = None
    right_0 = module_0.Right(complex_0)
    var_0 = right_0.to_validation()