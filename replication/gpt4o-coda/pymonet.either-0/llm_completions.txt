

# Generated at 2024-06-03 01:22:32.808784
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:22:34.451844
```python
    left1 = Left("error")
    left2 = Left("error")
    left3 = Left("different error")
    right1 = Right(42)
    right2 = Right(42)
    right3 = Right(43)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
```

# Generated at 2024-06-03 01:22:35.547756
```python
    left_value = Left("error")
    right_value = Right(42)

    left_lazy = left_value.to_lazy()
    right_lazy = right_value.to_lazy()

    assert left_lazy() == "error"
    assert right_lazy() == 42
```

# Generated at 2024-06-03 01:22:37.419636
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:22:38.893853
```python
    left = Left("error")
    right = Right(42)

    assert left.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Error: error"
    assert right.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Success: 42"
```

# Generated at 2024-06-03 01:22:41.193143
```python
    left = Left("error")
    right = Right(42)

    assert left.case(lambda x: f"Error: {x}", lambda x: f"Success: {x}") == "Error: error"
    assert right.case(lambda x: f"Error: {x}", lambda x: f"Success: {x}") == "Success: 42"
```

# Generated at 2024-06-03 01:22:42.220188
```python
    left_value = Left("error")
    right_value = Right(42)

    left_lazy = left_value.to_lazy()
    right_lazy = right_value.to_lazy()

    assert left_lazy() == "error"
    assert right_lazy() == 42
```

# Generated at 2024-06-03 01:22:43.333828
```python
    left_value = Left("error")
    right_value = Right(42)

    left_lazy = left_value.to_lazy()
    right_lazy = right_value.to_lazy()

    assert left_lazy() == "error"
    assert right_lazy() == 42
```

# Generated at 2024-06-03 01:22:45.104457
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:22:46.728704
```python
    left = Left("error")
    right = Right(42)

    assert left.case(lambda x: f"Error: {x}", lambda x: f"Success: {x}") == "Error: error"
    assert right.case(lambda x: f"Error: {x}", lambda x: f"Success: {x}") == "Success: 42"
```

# Generated at 2024-06-03 01:22:50.984013
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:22:52.462240
```python
    left = Left("error")
    right = Right(42)

    assert left.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Error: error"
    assert right.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Success: 42"
```

# Generated at 2024-06-03 01:22:54.220060
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:22:56.079322
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:22:57.398409
```python
    left = Left("error")
    right = Right(42)

    assert left.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Error: error"
    assert right.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Success: 42"
```

# Generated at 2024-06-03 01:22:58.796537
```python
    left_value = Left("error")
    right_value = Right(42)

    left_lazy = left_value.to_lazy()
    right_lazy = right_value.to_lazy()

    assert left_lazy() == "error"
    assert right_lazy() == 42
```

# Generated at 2024-06-03 01:23:00.636078
```python
    left = Left("error")
    right = Right(42)

    assert left.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Error: error"
    assert right.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Success: 42"
```

# Generated at 2024-06-03 01:23:02.070232
```python
    left = Left("error")
    right = Right(42)

    assert left.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Error: error"
    assert right.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Success: 42"
```

# Generated at 2024-06-03 01:23:03.799031
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:23:05.368297
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:23:09.196562
```python
    left = Left("error")
    right = Right(42)

    assert left.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Error: error"
    assert right.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Success: 42"
```

# Generated at 2024-06-03 01:23:10.813675
```python
    left = Left("error")
    right = Right(42)

    assert left.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Error: error"
    assert right.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Success: 42"
```

# Generated at 2024-06-03 01:23:12.156242
```python
    left = Left("error")
    right = Right(42)

    assert left.case(lambda x: f"Error: {x}", lambda x: f"Success: {x}") == "Error: error"
    assert right.case(lambda x: f"Error: {x}", lambda x: f"Success: {x}") == "Success: 42"
```

# Generated at 2024-06-03 01:23:14.238854
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:23:16.259392
```python
    left = Left("error")
    right = Right(42)

    assert left.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Error: error"
    assert right.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Success: 42"
```

# Generated at 2024-06-03 01:23:17.951514
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:23:19.640213
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:23:21.212933
```python
    left = Left("error")
    right = Right(42)

    assert left.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Error: error"
    assert right.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Success: 42"
```

# Generated at 2024-06-03 01:23:22.623076
```python
    left_value = Left("error")
    right_value = Right(42)

    left_lazy = left_value.to_lazy()
    right_lazy = right_value.to_lazy()

    assert left_lazy() == "error"
    assert right_lazy() == 42
```

# Generated at 2024-06-03 01:23:24.890411
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:23:29.548847
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:23:31.110151
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:23:33.057091
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:23:34.457674
```python
    left_value = Left("error")
    right_value = Right(42)

    left_lazy = left_value.to_lazy()
    right_lazy = right_value.to_lazy()

    assert left_lazy() == "error"
    assert right_lazy() == 42
```

# Generated at 2024-06-03 01:23:36.490055
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:23:38.783668
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:23:40.053292
```python
    left_value = Left("error")
    right_value = Right(42)

    left_lazy = left_value.to_lazy()
    right_lazy = right_value.to_lazy()

    assert left_lazy() == "error"
    assert right_lazy() == 42
```

# Generated at 2024-06-03 01:23:43.680102
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:23:45.441889
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:23:47.333562
```python
    left = Left("error")
    right = Right(42)

    assert left.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Error: error"
    assert right.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Success: 42"
```

# Generated at 2024-06-03 01:23:51.637525
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:23:53.777419
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert left1 != right1
    assert right1 == right2
    assert right1 != right3
    assert right1 != left1
```

# Generated at 2024-06-03 01:23:55.831781
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:23:57.597843
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:23:59.206913
```python
    error_handler = lambda x: f"Error: {x}"
    success_handler = lambda x: f"Success: {x}"

    left_value = Left("Something went wrong")
    right_value = Right("All good")

    assert left_value.case(error_handler, success_handler) == "Error: Something went wrong"
    assert right_value.case(error_handler, success_handler) == "Success: All good"
```

# Generated at 2024-06-03 01:24:00.472685
```python
    left_value = Left("error")
    right_value = Right(42)

    left_lazy = left_value.to_lazy()
    right_lazy = right_value.to_lazy()

    assert left_lazy() == "error"
    assert right_lazy() == 42
```

# Generated at 2024-06-03 01:24:02.151381
```python
    left = Left("error")
    right = Right(42)

    assert left.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Error: error"
    assert right.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Success: 42"
```

# Generated at 2024-06-03 01:24:03.574301
```python
    left = Left("error")
    right = Right(42)

    assert left.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Error: error"
    assert right.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Success: 42"
```

# Generated at 2024-06-03 01:24:06.000324
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:24:07.711895
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:24:11.809919
```python
    left = Left("error")
    right = Right(42)

    assert left.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Error: error"
    assert right.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Success: 42"
```

# Generated at 2024-06-03 01:24:13.151627
```python
    left_value = Left("error")
    right_value = Right(42)

    left_lazy = left_value.to_lazy()
    right_lazy = right_value.to_lazy()

    assert left_lazy() == "error"
    assert right_lazy() == 42
```

# Generated at 2024-06-03 01:24:14.871542
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:24:16.150500
```python
    left_value = Left("error")
    right_value = Right(42)

    left_lazy = left_value.to_lazy()
    right_lazy = right_value.to_lazy()

    assert left_lazy() == "error"
    assert right_lazy() == 42
```

# Generated at 2024-06-03 01:24:19.719310
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:24:20.984478
```python
    left_value = Left("error")
    right_value = Right(42)

    left_lazy = left_value.to_lazy()
    right_lazy = right_value.to_lazy()

    assert left_lazy() == "error"
    assert right_lazy() == 42
```

# Generated at 2024-06-03 01:24:22.062683
```python
    left_value = Left("error")
    right_value = Right(42)

    left_lazy = left_value.to_lazy()
    right_lazy = right_value.to_lazy()

    assert left_lazy() == "error"
    assert right_lazy() == 42
```

# Generated at 2024-06-03 01:24:23.949010
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:24:25.681544
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:24:27.682728
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:24:31.856785
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:24:35.609257
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert left1 != right1
    assert right1 == right2
    assert right1 != right3
    assert right1 != left1
```

# Generated at 2024-06-03 01:24:36.890496
```python
    left_value = Left("error")
    right_value = Right(42)

    left_lazy = left_value.to_lazy()
    right_lazy = right_value.to_lazy()

    assert left_lazy() == "error"
    assert right_lazy() == 42
```

# Generated at 2024-06-03 01:24:38.685434
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:24:40.358177
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:24:41.774183
```python
    left = Left("error")
    right = Right(42)

    assert left.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Error: error"
    assert right.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Success: 42"
```

# Generated at 2024-06-03 01:24:42.795137
```python
    left_value = Left("error")
    right_value = Right(42)

    left_lazy = left_value.to_lazy()
    right_lazy = right_value.to_lazy()

    assert left_lazy() == "error"
    assert right_lazy() == 42
```

# Generated at 2024-06-03 01:24:44.302699
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:24:45.860558
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:24:47.394819
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:24:51.589857
```python
    left = Left("error")
    right = Right(42)

    assert left.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Error: error"
    assert right.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Success: 42"
```

# Generated at 2024-06-03 01:24:53.334315
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:24:54.874230
```python
    left = Left("error")
    right = Right(42)

    assert left.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Error: error"
    assert right.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Success: 42"
```

# Generated at 2024-06-03 01:24:56.821709
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:24:58.768789
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:25:00.723815
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:25:02.348938
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:25:03.914007
```python
    left = Left("error")
    right = Right(42)

    assert left.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Error: error"
    assert right.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Success: 42"
```

# Generated at 2024-06-03 01:25:04.945505
```python
    left_value = Left("error")
    right_value = Right(42)

    left_lazy = left_value.to_lazy()
    right_lazy = right_value.to_lazy()

    assert left_lazy() == "error"
    assert right_lazy() == 42
```

# Generated at 2024-06-03 01:25:05.989142
```python
    left_value = Left("error")
    right_value = Right(42)

    left_lazy = left_value.to_lazy()
    right_lazy = right_value.to_lazy()

    assert left_lazy() == "error"
    assert right_lazy() == 42
```

# Generated at 2024-06-03 01:25:09.628890
```python
    left_value = Left("error")
    right_value = Right(42)

    left_lazy = left_value.to_lazy()
    right_lazy = right_value.to_lazy()

    assert left_lazy() == "error"
    assert right_lazy() == 42
```

# Generated at 2024-06-03 01:25:11.379321
```python
    left_value = Left("error")
    right_value = Right(42)

    left_lazy = left_value.to_lazy()
    right_lazy = right_value.to_lazy()

    assert left_lazy() == "error"
    assert right_lazy() == 42
```

# Generated at 2024-06-03 01:25:12.879302
```python
    left = Left("error")
    right = Right(42)

    assert left.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Error: error"
    assert right.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Success: 42"
```

# Generated at 2024-06-03 01:25:14.545173
```python
    left = Left("error")
    right = Right(42)

    assert left.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Error: error"
    assert right.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Success: 42"
```

# Generated at 2024-06-03 01:25:16.198214
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:25:17.664339
```python
    left = Left("error")
    right = Right(42)

    assert left.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Error: error"
    assert right.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Success: 42"
```

# Generated at 2024-06-03 01:25:18.803629
```python
    left_value = Left("error")
    right_value = Right(42)

    left_lazy = left_value.to_lazy()
    right_lazy = right_value.to_lazy()

    assert left_lazy() == "error"
    assert right_lazy() == 42
```

# Generated at 2024-06-03 01:25:20.434795
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:25:22.337316
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:25:24.809172
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert left1 != right1
    assert right1 == right2
    assert right1 != right3
    assert right1 != left1
```

# Generated at 2024-06-03 01:25:29.403083
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:25:33.173634
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:25:34.681526
```python
    left = Left("error")
    right = Right(42)

    assert left.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Error: error"
    assert right.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Success: 42"
```

# Generated at 2024-06-03 01:25:36.437566
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert left1 != right1
    assert right1 == right2
    assert right1 != right3
    assert right1 != left1
```

# Generated at 2024-06-03 01:25:37.956117
```python
    left = Left("error")
    right = Right(42)

    assert left.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Error: error"
    assert right.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Success: 42"
```

# Generated at 2024-06-03 01:25:39.713092
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:25:41.317730
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:25:42.867481
```python
    error_handler = lambda x: f"Error: {x}"
    success_handler = lambda x: f"Success: {x}"

    left = Left("Something went wrong")
    right = Right("All good")

    assert left.case(error_handler, success_handler) == "Error: Something went wrong"
    assert right.case(error_handler, success_handler) == "Success: All good"
```

# Generated at 2024-06-03 01:25:43.962940
```python
    left_value = Left("error")
    right_value = Right(42)

    left_lazy = left_value.to_lazy()
    right_lazy = right_value.to_lazy()

    assert left_lazy() == "error"
    assert right_lazy() == 42
```

# Generated at 2024-06-03 01:25:46.605274
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert left1 != right1
    assert right1 == right2
    assert right1 != right3
    assert right1 != left1
```

# Generated at 2024-06-03 01:25:52.133835
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert left1 != right1
    assert right1 == right2
    assert right1 != right3
    assert right1 != left1
```

# Generated at 2024-06-03 01:25:53.335123
```python
    left_value = Left("error")
    right_value = Right(42)

    left_lazy = left_value.to_lazy()
    right_lazy = right_value.to_lazy()

    assert left_lazy() == "error"
    assert right_lazy() == 42
```

# Generated at 2024-06-03 01:25:55.505404
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:25:56.792261
```python
    left = Left("error")
    right = Right(42)

    assert left.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Error: error"
    assert right.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Success: 42"
```

# Generated at 2024-06-03 01:25:59.200851
```python
    left = Left("error")
    right = Right(42)

    assert left.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Error: error"
    assert right.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Success: 42"
```

# Generated at 2024-06-03 01:26:02.053862
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:26:03.636588
```python
    left = Left("error")
    right = Right(42)

    assert left.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Error: error"
    assert right.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Success: 42"
```

# Generated at 2024-06-03 01:26:05.366140
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:26:07.051796
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:26:08.864352
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:26:12.851064
```python
    left1 = Left("error")
    left2 = Left("error")
    left3 = Left("different error")
    right1 = Right(42)
    right2 = Right(42)
    right3 = Right(100)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert right1 != left1
```

# Generated at 2024-06-03 01:26:14.526235
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:26:16.264745
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:26:17.864886
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:26:19.522092
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:26:21.115554
```python
    left = Left("error")
    right = Right(42)

    assert left.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Error: error"
    assert right.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Success: 42"
```

# Generated at 2024-06-03 01:26:22.681512
```python
    error_handler = lambda x: f"Error: {x}"
    success_handler = lambda x: f"Success: {x}"

    left_value = Left("Something went wrong")
    right_value = Right("All good")

    assert left_value.case(error_handler, success_handler) == "Error: Something went wrong"
    assert right_value.case(error_handler, success_handler) == "Success: All good"
```

# Generated at 2024-06-03 01:26:23.718632
```python
    left_value = Left("error")
    right_value = Right(42)

    left_lazy = left_value.to_lazy()
    right_lazy = right_value.to_lazy()

    assert left_lazy() == "error"
    assert right_lazy() == 42
```

# Generated at 2024-06-03 01:26:25.531737
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert left1 != right1
    assert right1 == right2
    assert right1 != right3
    assert right1 != left1
```

# Generated at 2024-06-03 01:26:26.905971
```python
    left_value = Left("error")
    right_value = Right(42)

    left_lazy = left_value.to_lazy()
    right_lazy = right_value.to_lazy()

    assert left_lazy() == "error"
    assert right_lazy() == 42
```

# Generated at 2024-06-03 01:26:30.519549
```python
    left_value = Left("error")
    right_value = Right(42)

    left_lazy = left_value.to_lazy()
    right_lazy = right_value.to_lazy()

    assert left_lazy() == "error"
    assert right_lazy() == 42
```

# Generated at 2024-06-03 01:26:31.906825
```python
    left = Left("error")
    right = Right(42)

    assert left.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Error: error"
    assert right.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Success: 42"
```

# Generated at 2024-06-03 01:26:33.032391
```python
    left_value = Left("error")
    right_value = Right(42)

    left_lazy = left_value.to_lazy()
    right_lazy = right_value.to_lazy()

    assert left_lazy() == "error"
    assert right_lazy() == 42
```

# Generated at 2024-06-03 01:26:35.818433
```python
    left1 = Left("error")
    left2 = Left("error")
    left3 = Left("different error")
    right1 = Right(42)
    right2 = Right(42)
    right3 = Right(43)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert right1 != left1
```

# Generated at 2024-06-03 01:26:38.739232
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:26:40.421490
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert left1 != right1
    assert right1 == right2
    assert right1 != right3
    assert right1 != left1
```

# Generated at 2024-06-03 01:26:42.008324
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:26:43.634589
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:26:45.337630
```python
    left1 = Left("error")
    left2 = Left("error")
    left3 = Left("different error")
    right1 = Right(42)
    right2 = Right(42)
    right3 = Right(43)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
```

# Generated at 2024-06-03 01:26:47.216256
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:26:51.381735
```python
    left = Left("error")
    right = Right(42)

    assert left.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Error: error"
    assert right.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Success: 42"
```

# Generated at 2024-06-03 01:26:52.440520
```python
    left_value = Left("error")
    right_value = Right(42)

    left_lazy = left_value.to_lazy()
    right_lazy = right_value.to_lazy()

    assert left_lazy() == "error"
    assert right_lazy() == 42
```

# Generated at 2024-06-03 01:26:53.861172
```python
    error_handler = lambda x: f"Error: {x}"
    success_handler = lambda x: f"Success: {x}"

    left_value = Left("Something went wrong")
    right_value = Right("All good")

    assert left_value.case(error_handler, success_handler) == "Error: Something went wrong"
    assert right_value.case(error_handler, success_handler) == "Success: All good"
```

# Generated at 2024-06-03 01:26:56.149673
```python
    left = Left("error")
    right = Right(42)

    assert left.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Error: error"
    assert right.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Success: 42"
```

# Generated at 2024-06-03 01:26:57.868538
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:26:59.355333
```python
    left = Left("error")
    right = Right(42)

    assert left.case(lambda x: f"Error: {x}", lambda x: f"Success: {x}") == "Error: error"
    assert right.case(lambda x: f"Error: {x}", lambda x: f"Success: {x}") == "Success: 42"
```

# Generated at 2024-06-03 01:27:01.020140
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert left1 != right1
    assert right1 == right2
    assert right1 != right3
    assert right1 != left1
```

# Generated at 2024-06-03 01:27:03.855891
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:27:05.531546
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:27:07.339936
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:27:12.118042
```python
    left1 = Left("error")
    left2 = Left("error")
    left3 = Left("different error")
    right1 = Right(42)
    right2 = Right(42)
    right3 = Right(43)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
```

# Generated at 2024-06-03 01:27:13.634550
```python
    left = Left("error")
    right = Right(42)

    assert left.case(lambda x: f"Error: {x}", lambda x: f"Success: {x}") == "Error: error"
    assert right.case(lambda x: f"Error: {x}", lambda x: f"Success: {x}") == "Success: 42"
```

# Generated at 2024-06-03 01:27:15.400447
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:27:17.112299
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:27:18.973995
```python
    error_handler = lambda x: f"Error: {x}"
    success_handler = lambda x: f"Success: {x}"

    left = Left("Something went wrong")
    right = Right("All good")

    assert left.case(error_handler, success_handler) == "Error: Something went wrong"
    assert right.case(error_handler, success_handler) == "Success: All good"
```

# Generated at 2024-06-03 01:27:20.552837
```python
    left = Left("error")
    right = Right(42)

    assert left.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Error: error"
    assert right.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Success: 42"
```

# Generated at 2024-06-03 01:27:22.310808
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:27:26.265344
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert left1 != right1
    assert right1 == right2
    assert right1 != right3
    assert right1 != left1
```

# Generated at 2024-06-03 01:27:27.799953
```python
    # Test with Right
    right_value = 42
    right_either = Right(right_value)
    lazy_result = right_either.to_lazy()
    assert lazy_result() == right_value

    # Test with Left
    left_value = "error"
    left_either = Left(left_value)
    lazy_result = left_either.to_lazy()
    assert lazy_result() == left_value
```

# Generated at 2024-06-03 01:27:29.367106
```python
    left = Left("error")
    right = Right(42)

    assert left.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Error: error"
    assert right.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Success: 42"
```

# Generated at 2024-06-03 01:27:33.823142
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:27:35.679185
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:27:37.427039
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:27:38.921154
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:27:40.647768
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:27:42.354257
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert left1 != right1
    assert right1 == right2
    assert right1 != right3
    assert right1 != left1
```

# Generated at 2024-06-03 01:27:43.984883
```python
    left = Left("error")
    right = Right(42)

    assert left.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Error: error"
    assert right.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Success: 42"
```

# Generated at 2024-06-03 01:27:45.694459
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:27:47.108236
```python
    left = Left("error")
    right = Right(42)

    assert left.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Error: error"
    assert right.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Success: 42"
```

# Generated at 2024-06-03 01:27:48.828287
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert left1 != right1
    assert right1 == right2
    assert right1 != right3
    assert right1 != left1
```

# Generated at 2024-06-03 01:27:52.569901
```python
    left = Left("error")
    right = Right(42)

    assert left.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Error: error"
    assert right.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Success: 42"
```

# Generated at 2024-06-03 01:27:54.438608
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:27:55.609143
```python
    left_value = Left("error")
    right_value = Right(42)

    left_lazy = left_value.to_lazy()
    right_lazy = right_value.to_lazy()

    assert left_lazy() == "error"
    assert right_lazy() == 42
```

# Generated at 2024-06-03 01:27:57.409037
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:27:58.459683
```python
    left_value = Left("error")
    right_value = Right(42)

    left_lazy = left_value.to_lazy()
    right_lazy = right_value.to_lazy()

    assert left_lazy() == "error"
    assert right_lazy() == 42
```

# Generated at 2024-06-03 01:28:00.306409
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:28:02.232637
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:28:04.026872
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
```

# Generated at 2024-06-03 01:28:05.263100
```python
    left_value = Left("error")
    right_value = Right(42)

    left_lazy = left_value.to_lazy()
    right_lazy = right_value.to_lazy()

    assert left_lazy() == "error"
    assert right_lazy() == 42
```

# Generated at 2024-06-03 01:28:06.826694
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:28:10.800362
```python
    error_handler = lambda x: f"Error: {x}"
    success_handler = lambda x: f"Success: {x}"

    left = Left("Something went wrong")
    right = Right("All good")

    assert left.case(error_handler, success_handler) == "Error: Something went wrong"
    assert right.case(error_handler, success_handler) == "Success: All good"
```

# Generated at 2024-06-03 01:28:12.852100
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:28:15.422985
```python
    left = Left("error")
    right = Right(42)

    assert left.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Error: error"
    assert right.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Success: 42"
```

# Generated at 2024-06-03 01:28:18.031514
```python
    left = Left("error")
    right = Right(42)

    assert left.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Error: error"
    assert right.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Success: 42"
```

# Generated at 2024-06-03 01:28:19.845286
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:28:21.505246
```python
    left = Left("error")
    right = Right(42)

    assert left.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Error: error"
    assert right.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Success: 42"
```

# Generated at 2024-06-03 01:28:24.212197
```python
    left = Left("error")
    right = Right(42)

    assert left.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Error: error"
    assert right.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Success: 42"
```

# Generated at 2024-06-03 01:28:25.937174
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:28:27.884278
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert left1 != right1
    assert right1 == right2
    assert right1 != right3
    assert right1 != left1
```

# Generated at 2024-06-03 01:28:29.723262
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:28:34.121539
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:28:35.812930
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:28:37.505909
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:28:38.560529
```python
    left_value = Left("error")
    right_value = Right(42)

    left_lazy = left_value.to_lazy()
    right_lazy = right_value.to_lazy()

    assert left_lazy() == "error"
    assert right_lazy() == 42
```

# Generated at 2024-06-03 01:28:40.099128
```python
    left = Left("error")
    right = Right(42)

    assert left.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Error: error"
    assert right.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Success: 42"
```

# Generated at 2024-06-03 01:28:41.963497
```python
    error_handler = lambda x: f"Error: {x}"
    success_handler = lambda x: f"Success: {x}"

    left = Left("Something went wrong")
    right = Right("All good")

    assert left.case(error_handler, success_handler) == "Error: Something went wrong"
    assert right.case(error_handler, success_handler) == "Success: All good"
```

# Generated at 2024-06-03 01:28:43.163923
```python
    left_value = Left("error")
    right_value = Right(42)

    left_lazy = left_value.to_lazy()
    right_lazy = right_value.to_lazy()

    assert left_lazy() == "error"
    assert right_lazy() == 42
```

# Generated at 2024-06-03 01:28:44.307434
```python
    left_value = Left("error")
    right_value = Right(42)

    left_lazy = left_value.to_lazy()
    right_lazy = right_value.to_lazy()

    assert left_lazy() == "error"
    assert right_lazy() == 42
```

# Generated at 2024-06-03 01:28:45.416950
```python
    left_value = Left("error")
    right_value = Right(42)

    left_lazy = left_value.to_lazy()
    right_lazy = right_value.to_lazy()

    assert left_lazy() == "error"
    assert right_lazy() == 42
```

# Generated at 2024-06-03 01:28:47.293272
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert left1 != right1
    assert right1 == right2
    assert right1 != right3
    assert right1 != left1
```

# Generated at 2024-06-03 01:28:51.826955
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:28:53.679730
```python
    left = Left("error")
    right = Right(42)

    assert left.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Error: error"
    assert right.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Success: 42"
```

# Generated at 2024-06-03 01:28:55.303268
```python
    left_value = Left("error")
    right_value = Right(42)

    left_lazy = left_value.to_lazy()
    right_lazy = right_value.to_lazy()

    assert left_lazy() == "error"
    assert right_lazy() == 42
```

# Generated at 2024-06-03 01:28:57.013352
```python
    error_handler = lambda x: f"Error: {x}"
    success_handler = lambda x: f"Success: {x}"

    left_value = Left("Something went wrong")
    right_value = Right("All good")

    assert left_value.case(error_handler, success_handler) == "Error: Something went wrong"
    assert right_value.case(error_handler, success_handler) == "Success: All good"
```

# Generated at 2024-06-03 01:28:58.438615
```python
    left = Left("error")
    right = Right(42)

    assert left.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Error: error"
    assert right.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Success: 42"
```

# Generated at 2024-06-03 01:28:59.942292
```python
    left = Left("error")
    right = Right(42)

    assert left.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Error: error"
    assert right.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Success: 42"
```

# Generated at 2024-06-03 01:29:01.917443
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:29:03.634766
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:29:04.814178
```python
    left_value = Left("error")
    right_value = Right(42)

    left_lazy = left_value.to_lazy()
    right_lazy = right_value.to_lazy()

    assert left_lazy() == "error"
    assert right_lazy() == 42
```

# Generated at 2024-06-03 01:29:06.315132
```python
    left = Left("error")
    right = Right(42)

    assert left.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Error: error"
    assert right.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Success: 42"
```

# Generated at 2024-06-03 01:29:09.830912
```python
    left_value = Left("error")
    right_value = Right(42)

    left_lazy = left_value.to_lazy()
    right_lazy = right_value.to_lazy()

    assert left_lazy() == "error"
    assert right_lazy() == 42
```

# Generated at 2024-06-03 01:29:11.717733
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert left1 != right1
    assert right1 == right2
    assert right1 != right3
    assert right1 != left1
```

# Generated at 2024-06-03 01:29:13.368033
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:29:15.474641
```python
    # Test for Right case
    right_value = 42
    right_either = Right(right_value)
    lazy_result = right_either.to_lazy()
    assert lazy_result() == right_value, f"Expected {right_value}, got {lazy_result()}"

    # Test for Left case
    left_value = "error"
    left_either = Left(left_value)
    lazy_result = left_either.to_lazy()
    assert lazy_result() == left_value, f"Expected {left_value}, got {lazy_result()}"
```

# Generated at 2024-06-03 01:29:16.742881
```python
    left_value = Left("error")
    right_value = Right(42)

    left_lazy = left_value.to_lazy()
    right_lazy = right_value.to_lazy()

    assert left_lazy() == "error"
    assert right_lazy() == 42
```

# Generated at 2024-06-03 01:29:18.456985
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left2 != right2
```

# Generated at 2024-06-03 01:29:20.465217
```python
    left = Left("error")
    right = Right(42)

    assert left.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Error: error"
    assert right.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Success: 42"
```

# Generated at 2024-06-03 01:29:22.358970
```python
    left = Left("error")
    right = Right(42)

    assert left.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Error: error"
    assert right.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Success: 42"
```

# Generated at 2024-06-03 01:29:24.427188
```python
    left = Left("error")
    right = Right(42)

    assert left.case(lambda x: f"Error: {x}", lambda x: f"Success: {x}") == "Error: error"
    assert right.case(lambda x: f"Error: {x}", lambda x: f"Success: {x}") == "Success: 42"
```

# Generated at 2024-06-03 01:29:27.105368
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:29:31.243110
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:29:32.905452
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:29:34.914321
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert left1 != right1
    assert right1 == right2
    assert right1 != right3
    assert right1 != left1
```

# Generated at 2024-06-03 01:29:36.666405
```python
    error_handler = lambda x: f"Error: {x}"
    success_handler = lambda x: f"Success: {x}"

    left_value = Left("Something went wrong")
    right_value = Right("All good")

    assert left_value.case(error_handler, success_handler) == "Error: Something went wrong"
    assert right_value.case(error_handler, success_handler) == "Success: All good"
```

# Generated at 2024-06-03 01:29:38.078970
```python
    left = Left("error")
    right = Right(42)

    assert left.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Error: error"
    assert right.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Success: 42"
```

# Generated at 2024-06-03 01:29:39.837421
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:29:40.998304
```python
    left_value = Left("error")
    right_value = Right(42)

    left_lazy = left_value.to_lazy()
    right_lazy = right_value.to_lazy()

    assert left_lazy() == "error"
    assert right_lazy() == 42
```

# Generated at 2024-06-03 01:29:42.644149
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:29:44.583847
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:29:46.293137
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:29:49.675528
```python
    left_value = Left("error")
    right_value = Right(42)

    left_lazy = left_value.to_lazy()
    right_lazy = right_value.to_lazy()

    assert left_lazy() == "error"
    assert right_lazy() == 42
```

# Generated at 2024-06-03 01:29:51.153070
```python
    left = Left("error")
    right = Right(42)

    assert left.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Error: error"
    assert right.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Success: 42"
```

# Generated at 2024-06-03 01:29:53.050311
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert left1 != right1
    assert right1 == right2
    assert right1 != right3
    assert right1 != left1
```

# Generated at 2024-06-03 01:29:54.939283
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:29:56.706297
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert left1 != right1
    assert right1 == right2
    assert right1 != right3
    assert right1 != left1
```

# Generated at 2024-06-03 01:29:58.685335
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert left1 != right1
    assert right1 == right2
    assert right1 != right3
    assert right1 != left1
```

# Generated at 2024-06-03 01:30:00.316358
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:30:02.097054
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:30:04.475551
```python
    left_value = Left("error")
    right_value = Right(42)

    left_lazy = left_value.to_lazy()
    right_lazy = right_value.to_lazy()

    assert left_lazy() == "error"
    assert right_lazy() == 42
```

# Generated at 2024-06-03 01:30:05.650129
```python
    left_value = Left("error")
    right_value = Right(42)

    left_lazy = left_value.to_lazy()
    right_lazy = right_value.to_lazy()

    assert left_lazy() == "error"
    assert right_lazy() == 42
```

# Generated at 2024-06-03 01:30:09.696625
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:30:12.393649
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:30:14.071574
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:30:15.256088
```python
    left_value = Left("error")
    right_value = Right(42)

    left_lazy = left_value.to_lazy()
    right_lazy = right_value.to_lazy()

    assert left_lazy() == "error"
    assert right_lazy() == 42
```

# Generated at 2024-06-03 01:30:17.091070
```python
    error_handler = lambda x: f"Error: {x}"
    success_handler = lambda x: f"Success: {x}"

    left = Left("Something went wrong")
    right = Right("All good")

    assert left.case(error_handler, success_handler) == "Error: Something went wrong"
    assert right.case(error_handler, success_handler) == "Success: All good"
```

# Generated at 2024-06-03 01:30:18.606506
```python
    error_handler = lambda x: f"Error: {x}"
    success_handler = lambda x: f"Success: {x}"

    left = Left("Something went wrong")
    right = Right("All good")

    assert left.case(error_handler, success_handler) == "Error: Something went wrong"
    assert right.case(error_handler, success_handler) == "Success: All good"
```

# Generated at 2024-06-03 01:30:20.281844
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
```

# Generated at 2024-06-03 01:30:21.864122
```python
    error_handler = lambda x: f"Error: {x}"
    success_handler = lambda x: f"Success: {x}"

    left_value = Left("Something went wrong")
    right_value = Right("All good")

    assert left_value.case(error_handler, success_handler) == "Error: Something went wrong"
    assert right_value.case(error_handler, success_handler) == "Success: All good"
```

# Generated at 2024-06-03 01:30:23.436435
```python
    error_handler = lambda x: f"Error: {x}"
    success_handler = lambda x: f"Success: {x}"

    left_value = Left("Something went wrong")
    right_value = Right("All good")

    assert left_value.case(error_handler, success_handler) == "Error: Something went wrong"
    assert right_value.case(error_handler, success_handler) == "Success: All good"
```

# Generated at 2024-06-03 01:30:24.920720
```python
    # Test with Right
    right_value = 42
    right_either = Right(right_value)
    lazy_result = right_either.to_lazy()
    assert lazy_result() == right_value

    # Test with Left
    left_value = "error"
    left_either = Left(left_value)
    lazy_result = left_either.to_lazy()
    assert lazy_result() == left_value
```

# Generated at 2024-06-03 01:30:28.688414
```python
    left_value = Left("error")
    right_value = Right(42)

    left_lazy = left_value.to_lazy()
    right_lazy = right_value.to_lazy()

    assert left_lazy() == "error"
    assert right_lazy() == 42
```

# Generated at 2024-06-03 01:30:30.662153
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:30:32.220534
```python
    left = Left("error")
    right = Right(42)

    assert left.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Error: error"
    assert right.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Success: 42"
```

# Generated at 2024-06-03 01:30:34.072145
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:30:35.782567
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:30:37.334087
```python
    left = Left("error")
    right = Right(42)

    assert left.case(lambda x: f"Error: {x}", lambda x: f"Success: {x}") == "Error: error"
    assert right.case(lambda x: f"Error: {x}", lambda x: f"Success: {x}") == "Success: 42"
```

# Generated at 2024-06-03 01:30:39.353423
```python
    left = Left("error")
    right = Right(42)

    assert left.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Error: error"
    assert right.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Success: 42"
```

# Generated at 2024-06-03 01:30:40.909554
```python
    left = Left("error")
    right = Right(42)

    assert left.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Error: error"
    assert right.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Success: 42"
```

# Generated at 2024-06-03 01:30:42.133608
```python
    left_value = Left("error")
    right_value = Right(42)

    left_lazy = left_value.to_lazy()
    right_lazy = right_value.to_lazy()

    assert left_lazy() == "error"
    assert right_lazy() == 42
```

# Generated at 2024-06-03 01:30:44.024130
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:30:47.726356
```python
    left_value = Left("error")
    right_value = Right(42)

    left_lazy = left_value.to_lazy()
    right_lazy = right_value.to_lazy()

    assert left_lazy() == "error"
    assert right_lazy() == 42
```

# Generated at 2024-06-03 01:30:49.144989
```python
    left = Left("error")
    right = Right(42)

    assert left.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Error: error"
    assert right.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Success: 42"
```

# Generated at 2024-06-03 01:30:51.019365
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:30:52.740030
```python
    left1 = Left("error")
    left2 = Left("error")
    left3 = Left("different error")
    right1 = Right(42)
    right2 = Right(42)
    right3 = Right(43)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert right1 != left1
```

# Generated at 2024-06-03 01:30:55.939206
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:30:57.920525
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:30:59.762563
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:31:01.384560
```python
    left = Left("error")
    right = Right(42)

    assert left.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Error: error"
    assert right.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Success: 42"
```

# Generated at 2024-06-03 01:31:02.886009
```python
    left = Left("error")
    right = Right(42)

    assert left.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Error: error"
    assert right.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Success: 42"
```

# Generated at 2024-06-03 01:31:04.147388
```python
    left_value = Left("error")
    right_value = Right(42)

    left_lazy = left_value.to_lazy()
    right_lazy = right_value.to_lazy()

    assert left_lazy() == "error"
    assert right_lazy() == 42
```

# Generated at 2024-06-03 01:31:08.844784
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:31:10.619178
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:31:12.394793
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:31:14.192014
```python
    left = Left("error")
    right = Right(42)

    assert left.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Error: error"
    assert right.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Success: 42"
```

# Generated at 2024-06-03 01:31:15.289878
```python
    left_value = Left("error")
    right_value = Right(42)

    left_lazy = left_value.to_lazy()
    right_lazy = right_value.to_lazy()

    assert left_lazy() == "error"
    assert right_lazy() == 42
```

# Generated at 2024-06-03 01:31:16.326903
```python
    left_value = Left("error")
    right_value = Right(42)

    left_lazy = left_value.to_lazy()
    right_lazy = right_value.to_lazy()

    assert left_lazy() == "error"
    assert right_lazy() == 42
```

# Generated at 2024-06-03 01:31:18.352821
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:31:20.219157
```python
    left1 = Left("error")
    left2 = Left("error")
    left3 = Left("different error")
    right1 = Right(42)
    right2 = Right(42)
    right3 = Right(43)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert right1 != left1
```

# Generated at 2024-06-03 01:31:22.621322
```python
    # Test for Right case
    right_value = 42
    right_either = Right(right_value)
    lazy_result = right_either.to_lazy()
    assert lazy_result() == right_value, f"Expected {right_value}, got {lazy_result()}"

    # Test for Left case
    left_value = "error"
    left_either = Left(left_value)
    lazy_result = left_either.to_lazy()
    assert lazy_result() == left_value, f"Expected {left_value}, got {lazy_result()}"
```

# Generated at 2024-06-03 01:31:24.993891
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:31:29.886929
```python
    error_handler = lambda x: f"Error: {x}"
    success_handler = lambda x: f"Success: {x}"

    left = Left("Something went wrong")
    right = Right("All good")

    assert left.case(error_handler, success_handler) == "Error: Something went wrong"
    assert right.case(error_handler, success_handler) == "Success: All good"
```

# Generated at 2024-06-03 01:31:31.585800
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:31:33.453648
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:31:35.109445
```python
    error_handler = lambda x: f"Error: {x}"
    success_handler = lambda x: f"Success: {x}"

    left_value = Left("Something went wrong")
    right_value = Right("All good")

    assert left_value.case(error_handler, success_handler) == "Error: Something went wrong"
    assert right_value.case(error_handler, success_handler) == "Success: All good"
```

# Generated at 2024-06-03 01:31:36.267101
```python
    left_value = Left("error")
    right_value = Right(42)

    left_lazy = left_value.to_lazy()
    right_lazy = right_value.to_lazy()

    assert left_lazy() == "error"
    assert right_lazy() == 42
```

# Generated at 2024-06-03 01:31:39.617418
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:31:41.086427
```python
    left = Left("error")
    right = Right(42)

    assert left.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Error: error"
    assert right.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Success: 42"
```

# Generated at 2024-06-03 01:31:43.407629
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert left1 != right1
    assert right1 == right2
    assert right1 != right3
    assert right1 != left1
```

# Generated at 2024-06-03 01:31:45.050165
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:31:46.669303
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:31:50.702867
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:31:52.726958
```python
    error_handler = lambda x: f"Error: {x}"
    success_handler = lambda x: f"Success: {x}"

    left = Left("Something went wrong")
    right = Right("All good")

    assert left.case(error_handler, success_handler) == "Error: Something went wrong"
    assert right.case(error_handler, success_handler) == "Success: All good"
```

# Generated at 2024-06-03 01:31:54.438458
```python
    left1 = Left("error")
    left2 = Left("error")
    left3 = Left("different error")
    right1 = Right(42)
    right2 = Right(42)
    right3 = Right(100)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
```

# Generated at 2024-06-03 01:31:55.890742
```python
    left = Left("error")
    right = Right(42)

    assert left.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Error: error"
    assert right.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Success: 42"
```

# Generated at 2024-06-03 01:31:58.153713
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:31:59.619862
```python
    # Test with Right
    right_value = 42
    right_either = Right(right_value)
    lazy_result = right_either.to_lazy()
    assert lazy_result() == right_value

    # Test with Left
    left_value = "error"
    left_either = Left(left_value)
    lazy_result = left_either.to_lazy()
    assert lazy_result() == left_value
```

# Generated at 2024-06-03 01:32:01.303343
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:32:03.031727
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:32:04.877534
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert left1 != right1
    assert right1 == right2
    assert right1 != right3
    assert right1 != left1
```

# Generated at 2024-06-03 01:32:05.999186
```python
    left_value = Left("error")
    right_value = Right(42)

    left_lazy = left_value.to_lazy()
    right_lazy = right_value.to_lazy()

    assert left_lazy() == "error"
    assert right_lazy() == 42
```

# Generated at 2024-06-03 01:32:09.983446
```python
    left = Left("error")
    right = Right(42)

    assert left.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Error: error"
    assert right.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Success: 42"
```

# Generated at 2024-06-03 01:32:12.181640
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:32:13.967716
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:32:15.183500
```python
    left_value = Left("error")
    right_value = Right(42)

    left_lazy = left_value.to_lazy()
    right_lazy = right_value.to_lazy()

    assert left_lazy() == "error"
    assert right_lazy() == 42
```

# Generated at 2024-06-03 01:32:18.378429
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left1 != right3
```

# Generated at 2024-06-03 01:32:20.775884
```python
    left = Left("error")
    right = Right(42)

    assert left.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Error: error"
    assert right.case(lambda e: f"Error: {e}", lambda s: f"Success: {s}") == "Success: 42"
```

# Generated at 2024-06-03 01:32:22.510145
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:32:24.277392
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```

# Generated at 2024-06-03 01:32:25.755899
```python
    left_value = Left("error")
    right_value = Right(42)

    left_lazy = left_value.to_lazy()
    right_lazy = right_value.to_lazy()

    assert left_lazy() == "error"
    assert right_lazy() == 42
```

# Generated at 2024-06-03 01:32:27.481331
```python
    left1 = Left(10)
    left2 = Left(10)
    left3 = Left(20)
    right1 = Right(10)
    right2 = Right(10)
    right3 = Right(20)

    assert left1 == left2
    assert left1 != left3
    assert right1 == right2
    assert right1 != right3
    assert left1 != right1
    assert left3 != right3
```