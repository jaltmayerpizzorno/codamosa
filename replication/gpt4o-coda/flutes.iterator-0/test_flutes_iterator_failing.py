# Automatically generated by Pynguin.
import flutes.iterator as module_0

def test_case_0():
    try:
        range_0 = module_0.Range()
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = b'\xca\x11\xce\xa68\xdf\xaf\x9c'
        var_0 = module_0.scanr(bytes_0, bytes_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bool_0 = True
        lazy_list_0 = module_0.LazyList(bool_0)
    except BaseException:
        pass

def test_case_3():
    try:
        float_0 = -1750.7118
        bytes_0 = b'\xe9b5Y\xd8'
        lazy_list_0 = module_0.LazyList(bytes_0)
        var_0 = lazy_list_0.__getitem__(float_0)
    except BaseException:
        pass

def test_case_4():
    try:
        var_0 = []
        var_1 = iter(var_0)
        lazy_list_0 = module_0.LazyList(var_1)
        var_2 = len(lazy_list_0)
    except BaseException:
        pass

def test_case_5():
    try:
        iterable_0 = None
        iterator_0 = module_0.split_by(iterable_0)
        list_0 = [iterator_0]
        range_0 = module_0.Range(*list_0)
    except BaseException:
        pass

def test_case_6():
    try:
        int_0 = 2621
        list_0 = [int_0, int_0, int_0]
        range_0 = module_0.Range(*list_0)
        iterator_0 = module_0.chunk(int_0, range_0)
        set_0 = None
        lazy_list_0 = module_0.LazyList(iterator_0)
        var_0 = lazy_list_0.__getitem__(set_0)
    except BaseException:
        pass

def test_case_7():
    try:
        set_0 = None
        int_0 = -1612
        float_0 = -3084.111
        iterator_0 = module_0.chunk(int_0, float_0)
        map_list_0 = module_0.MapList(float_0, set_0)
        lazy_list_0 = module_0.LazyList(iterator_0)
        map_list_1 = module_0.MapList(map_list_0, lazy_list_0)
        dict_0 = None
        var_0 = map_list_1.__getitem__(dict_0)
    except BaseException:
        pass

def test_case_8():
    try:
        callable_0 = None
        sequence_0 = None
        map_list_0 = module_0.MapList(callable_0, sequence_0)
        str_0 = 'D}r{Vj(\ndsc+24KmN$Wh'
        iterator_0 = module_0.split_by(str_0)
        list_0 = [iterator_0]
        var_0 = module_0.scanl(list_0, list_0)
        int_0 = 2895
        var_1 = map_list_0.__getitem__(int_0)
    except BaseException:
        pass

def test_case_9():
    try:
        list_0 = []
        int_0 = 23
        iterator_0 = module_0.chunk(int_0, list_0)
        lazy_list_0 = module_0.LazyList(iterator_0)
        var_0 = lazy_list_0.__getitem__(lazy_list_0)
    except BaseException:
        pass

def test_case_10():
    try:
        int_0 = 5
        list_0 = [int_0, int_0]
        range_0 = module_0.Range(*list_0)
        iterator_0 = range_0.__iter__()
        iterator_1 = range_0.__iter__()
        iterator_2 = module_0.take(int_0, int_0)
        var_0 = list(iterator_2)
    except BaseException:
        pass

def test_case_11():
    try:
        set_0 = None
        list_0 = []
        int_0 = 23
        iterator_0 = module_0.chunk(int_0, list_0)
        lazy_list_0 = module_0.LazyList(iterator_0)
        var_0 = lazy_list_0.__getitem__(set_0)
    except BaseException:
        pass

def test_case_12():
    try:
        set_0 = None
        list_0 = [set_0, set_0]
        int_0 = 11
        iterator_0 = module_0.chunk(int_0, list_0)
        lazy_list_0 = module_0.LazyList(iterator_0)
        bool_0 = True
        var_0 = lazy_list_0.__getitem__(bool_0)
    except BaseException:
        pass

def test_case_13():
    try:
        dict_0 = {}
        str_0 = '#P,3Qr;}g,ooe'
        bytes_0 = b'!.\xfa\xaa|%\xed\xd4_\xf4\xbb\x83\x08'
        list_0 = [str_0, str_0, bytes_0, dict_0]
        var_0 = module_0.scanr(str_0, bytes_0, *list_0)
    except BaseException:
        pass

def test_case_14():
    try:
        set_0 = None
        int_0 = -1612
        float_0 = -3084.111
        iterator_0 = module_0.chunk(int_0, float_0)
        map_list_0 = module_0.MapList(float_0, set_0)
        lazy_list_0 = module_0.LazyList(iterator_0)
        map_list_1 = module_0.MapList(map_list_0, lazy_list_0)
        iterator_1 = map_list_1.__iter__()
        var_0 = lazy_list_0.__getitem__(set_0)
    except BaseException:
        pass

def test_case_15():
    try:
        str_0 = 'd='
        int_0 = 943
        list_0 = [str_0, str_0, int_0, str_0]
        range_0 = module_0.Range(*list_0)
    except BaseException:
        pass

def test_case_16():
    try:
        int_0 = 2
        int_1 = 4
        iterator_0 = module_0.drop(int_0, int_1)
        var_0 = list(iterator_0)
    except BaseException:
        pass

def test_case_17():
    try:
        set_0 = None
        int_0 = 578
        list_0 = [set_0]
        iterator_0 = module_0.drop(int_0, list_0)
        lazy_list_0 = module_0.LazyList(iterator_0)
        int_1 = -201
        var_0 = lazy_list_0.__getitem__(int_1)
    except BaseException:
        pass

def test_case_18():
    try:
        int_0 = 5
        list_0 = [int_0]
        range_0 = module_0.Range(*list_0)
        iterator_0 = range_0.__iter__()
        int_1 = 10
        iterator_1 = module_0.take(int_0, int_1)
        var_0 = list(iterator_1)
    except BaseException:
        pass

def test_case_19():
    try:
        str_0 = '`f9jc.'
        iterable_0 = None
        bool_0 = False
        set_0 = {iterable_0, str_0}
        lazy_list_0 = module_0.LazyList(set_0)
        var_0 = lazy_list_0.__getitem__(bool_0)
        iterator_0 = module_0.split_by(iterable_0, criterion=str_0)
        bool_1 = False
        var_1 = lazy_list_0.__getitem__(bool_1)
        var_2 = lazy_list_0.__len__()
    except BaseException:
        pass

def test_case_20():
    try:
        set_0 = None
        int_0 = 578
        list_0 = [set_0]
        int_1 = -746
        iterator_0 = module_0.drop(int_1, int_0)
        lazy_list_0 = module_0.LazyList(iterator_0)
        var_0 = lazy_list_0.__iter__()
        map_list_0 = module_0.MapList(list_0, iterator_0)
        iterator_1 = map_list_0.__iter__()
        iterator_2 = None
        var_1 = lazy_list_0.__getitem__(iterator_2)
    except BaseException:
        pass

def test_case_21():
    try:
        int_0 = 10
        iterator_0 = module_0.split_by(int_0, criterion=int_0)
        var_0 = list(iterator_0)
    except BaseException:
        pass

def test_case_22():
    try:
        int_0 = 10
        var_0 = range(int_0)
        iterator_0 = module_0.split_by(var_0, criterion=int_0)
        var_1 = list(iterator_0)
    except BaseException:
        pass

def test_case_23():
    try:
        int_0 = 10
        iterator_0 = module_0.take(int_0, int_0)
        var_0 = list(iterator_0)
    except BaseException:
        pass

def test_case_24():
    try:
        int_0 = -39
        iterator_0 = module_0.take(int_0, int_0)
        var_0 = list(iterator_0)
    except BaseException:
        pass

def test_case_25():
    try:
        int_0 = 2
        var_0 = range(int_0)
        iterator_0 = module_0.drop_until(int_0, var_0)
        var_1 = list(iterator_0)
    except BaseException:
        pass

def test_case_26():
    try:
        int_0 = 5
        list_0 = [int_0]
        range_0 = module_0.Range(*list_0)
        iterator_0 = range_0.__iter__()
        bool_0 = False
        iterator_1 = module_0.split_by(iterator_0, bool_0)
        int_1 = range_0.__next__()
        int_2 = 10
        iterator_2 = module_0.take(int_0, int_2)
        var_0 = list(iterator_2)
    except BaseException:
        pass

def test_case_27():
    try:
        str_0 = 'QlEu=>yCNZbhA+3HE'
        dict_0 = {str_0: str_0}
        int_0 = -3791
        tuple_0 = None
        list_0 = [int_0, dict_0, int_0, int_0]
        iterator_0 = module_0.split_by(list_0)
        lazy_list_0 = module_0.LazyList(iterator_0)
        lazy_list_1 = module_0.LazyList(lazy_list_0)
        var_0 = lazy_list_1.__getitem__(tuple_0)
    except BaseException:
        pass

def test_case_28():
    try:
        int_0 = 10
        var_0 = range(int_0)
        lazy_list_0 = module_0.LazyList(var_0)
        var_1 = list(lazy_list_0)
        var_2 = len(lazy_list_0)
        var_3 = iter(var_0)
        lazy_list_1 = module_0.LazyList(var_3)
        var_4 = len(lazy_list_1)
    except BaseException:
        pass

def test_case_29():
    try:
        int_0 = -1781
        var_0 = range(int_0)
        iterator_0 = module_0.split_by(var_0, criterion=int_0)
        var_1 = list(iterator_0)
        bool_0 = True
        int_1 = -1817
        bytes_0 = b'\x89\xa30\x8d\xe1\xef">5\x8bu\'\xe7\x82'
        list_0 = [int_0]
        range_0 = module_0.Range(*list_0)
        str_0 = 'FOkPwwj`G'
        tuple_0 = (bytes_0, range_0, str_0)
        iterator_1 = module_0.chunk(int_1, tuple_0)
        iterator_2 = module_0.take(int_0, iterator_1)
        dict_0 = {bool_0: bool_0, var_0: iterator_2, bytes_0: iterator_2, iterator_1: iterator_1}
        var_2 = module_0.scanr(dict_0, bytes_0, *list_0)
    except BaseException:
        pass

def test_case_30():
    try:
        int_0 = -1312
        var_0 = range(int_0)
        dict_0 = {}
        bool_0 = True
        str_0 = '*\tTvZ9bqy\t-If'
        dict_1 = {str_0: int_0, str_0: var_0}
        iterator_0 = module_0.split_by(dict_0, bool_0, criterion=dict_1)
        lazy_list_0 = module_0.LazyList(iterator_0)
        var_1 = lazy_list_0.__iter__()
        complex_0 = None
        var_2 = lazy_list_0.__getitem__(complex_0)
    except BaseException:
        pass

def test_case_31():
    try:
        int_0 = 10
        var_0 = range(int_0)
        lazy_list_0 = module_0.LazyList(var_0)
        var_1 = len(var_0)
        var_2 = list(lazy_list_0)
        var_3 = len(lazy_list_0)
        var_4 = iter(lazy_list_0)
        lazy_list_1 = module_0.LazyList(var_4)
        var_5 = len(lazy_list_1)
    except BaseException:
        pass

def test_case_32():
    try:
        int_0 = -1318
        dict_0 = {int_0: int_0, int_0: int_0}
        dict_1 = {}
        bool_0 = None
        iterator_0 = module_0.split_by(dict_0, bool_0, criterion=bool_0, separator=dict_0)
        lazy_list_0 = module_0.LazyList(iterator_0)
        iterator_1 = module_0.drop_until(dict_1, iterator_0)
        var_0 = list(iterator_1)
    except BaseException:
        pass

def test_case_33():
    try:
        int_0 = 2
        var_0 = range(int_0)
        iterator_0 = module_0.drop_until(int_0, var_0)
        float_0 = -736.772
        list_0 = [int_0, int_0]
        range_0 = module_0.Range(*list_0)
        var_1 = range_0.__getitem__(float_0)
        var_2 = list(iterator_0)
    except BaseException:
        pass

def test_case_34():
    try:
        int_0 = -2088
        bool_0 = False
        list_0 = [int_0, int_0]
        int_1 = 4162
        iterable_0 = None
        iterator_0 = module_0.drop(int_1, iterable_0)
        range_0 = module_0.Range(*list_0)
        dict_0 = {int_1: bool_0, int_1: int_1, int_0: int_0}
        dict_1 = {}
        bool_1 = None
        iterator_1 = module_0.split_by(dict_0, bool_1, criterion=bool_1, separator=int_0)
        lazy_list_0 = module_0.LazyList(iterator_1)
        iterator_2 = module_0.drop_until(dict_1, lazy_list_0)
        var_0 = list(iterator_2)
    except BaseException:
        pass

def test_case_35():
    try:
        int_0 = -2088
        bool_0 = True
        list_0 = [int_0, int_0]
        range_0 = module_0.Range(*list_0)
        var_0 = range_0.__getitem__(bool_0)
        dict_0 = {int_0: int_0, int_0: int_0}
        dict_1 = {}
        bool_1 = None
        iterator_0 = module_0.split_by(dict_0, bool_0, criterion=bool_1, separator=int_0)
        int_1 = range_0.__len__()
        lazy_list_0 = module_0.LazyList(iterator_0)
        int_2 = -548
        iterator_1 = module_0.chunk(int_2, range_0)
        iterator_2 = module_0.drop_until(dict_1, lazy_list_0)
        var_1 = list(iterator_2)
    except BaseException:
        pass