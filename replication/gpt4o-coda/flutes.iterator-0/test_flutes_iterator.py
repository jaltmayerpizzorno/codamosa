# Automatically generated by Pynguin.
import flutes.iterator as module_0

def test_case_0():
    str_0 = '5&I_\r9m">_#Z#3@BN&e'
    lazy_list_0 = module_0.LazyList(str_0)
    var_0 = lazy_list_0.__iter__()

def test_case_1():
    int_0 = 2621
    list_0 = [int_0, int_0, int_0]
    range_0 = module_0.Range(*list_0)
    var_0 = range_0.__getitem__(int_0)

def test_case_2():
    int_0 = -99
    bytes_0 = b'\x7fE\xd1\xafo\xf6\xea\xd4\x7f\xa4\x14\xc2\xa1\xe3\x9cj\xba\xd9\x06L'
    lazy_list_0 = module_0.LazyList(bytes_0)
    sequence_0 = None
    map_list_0 = module_0.MapList(lazy_list_0, sequence_0)
    iterator_0 = module_0.chunk(int_0, map_list_0)

def test_case_3():
    set_0 = None
    list_0 = [set_0, set_0]
    int_0 = 11
    iterator_0 = module_0.chunk(int_0, list_0)
    lazy_list_0 = module_0.LazyList(iterator_0)
    callable_0 = None
    map_list_0 = module_0.MapList(callable_0, lazy_list_0)
    iterator_1 = map_list_0.__iter__()

def test_case_4():
    int_0 = -2088
    bool_0 = True
    list_0 = [int_0, int_0]
    range_0 = module_0.Range(*list_0)
    int_1 = range_0.__len__()
    var_0 = range_0.__getitem__(bool_0)
    dict_0 = {int_0: int_0, int_0: int_0}
    dict_1 = {}
    bool_1 = None
    iterator_0 = module_0.split_by(dict_0, bool_1, criterion=bool_1, separator=int_0)
    lazy_list_0 = module_0.LazyList(iterator_0)
    str_0 = ';l\x0c\x0b\x0c)'
    tuple_0 = (lazy_list_0,)
    map_list_0 = module_0.MapList(str_0, tuple_0)
    iterator_1 = map_list_0.__iter__()
    str_1 = 'CKA (5dFvldn~Y1'
    map_list_1 = module_0.MapList(iterator_1, str_1)
    int_2 = map_list_1.__len__()
    iterator_2 = module_0.drop_until(dict_1, lazy_list_0)
    var_1 = list(iterator_2)

def test_case_5():
    set_0 = None
    list_0 = [set_0, set_0]
    int_0 = 11
    iterator_0 = module_0.chunk(int_0, list_0)
    lazy_list_0 = module_0.LazyList(iterator_0)
    bool_0 = False
    var_0 = lazy_list_0.__getitem__(bool_0)

def test_case_6():
    int_0 = 3
    int_1 = 10
    var_0 = range(int_1)
    iterator_0 = module_0.chunk(int_0, var_0)
    var_1 = list(iterator_0)

def test_case_7():
    int_0 = 3
    int_1 = 1
    int_2 = 2
    int_3 = 4
    int_4 = 5
    int_5 = [int_1, int_2, int_0, int_3, int_4]
    iterator_0 = module_0.drop(int_0, int_5)
    var_0 = list(iterator_0)

def test_case_8():
    int_0 = -1763
    list_0 = [int_0]
    str_0 = '5&I_\r9m">_#Z#3@BN&e'
    lazy_list_0 = module_0.LazyList(str_0)
    var_0 = lazy_list_0.__iter__()
    range_0 = module_0.Range(*list_0)
    int_1 = range_0.__len__()
    iterator_0 = module_0.split_by(int_0, criterion=int_0)

def test_case_9():
    int_0 = -1318
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
    dict_1 = {}
    bool_0 = None
    iterator_0 = module_0.split_by(dict_0, bool_0, criterion=bool_0, separator=int_0)
    lazy_list_0 = module_0.LazyList(iterator_0)
    iterator_1 = module_0.drop_until(dict_1, lazy_list_0)
    var_0 = list(iterator_1)

def test_case_10():
    int_0 = 5
    int_1 = 10
    var_0 = range(int_1)
    iterator_0 = module_0.take(int_0, var_0)
    var_1 = list(iterator_0)

def test_case_11():
    dict_0 = {}
    iterator_0 = module_0.drop_until(dict_0, dict_0)
    var_0 = list(iterator_0)

def test_case_12():
    int_0 = 27
    int_1 = 10
    var_0 = range(int_1)
    iterator_0 = module_0.take(int_0, var_0)
    var_1 = list(iterator_0)

def test_case_13():
    int_0 = -1781
    var_0 = range(int_0)
    iterator_0 = module_0.split_by(var_0, criterion=int_0)
    var_1 = list(iterator_0)

def test_case_14():
    float_0 = 1728.75
    dict_0 = {float_0: float_0, float_0: float_0, float_0: float_0, float_0: float_0}
    var_0 = module_0.scanr(float_0, dict_0)