# Automatically generated by Pynguin.
import apimd.loader as module_0

def test_case_0():
    try:
        str_0 = "#'Vg7}2D"
        iterator_0 = module_0.walk_packages(str_0, str_0)
        str_1 = '0k,H\rQ<'
        dict_0 = {str_0: str_1}
        bool_0 = True
        sequence_0 = module_0.gen_api(dict_0, prefix=str_1, toc=bool_0)
        str_2 = '($>P\x0bq0ifh\tzD/'
        str_3 = None
        str_4 = 'W20]n\t\rE'
        str_5 = '~&^s\x0c'
        dict_1 = {str_4: str_5}
        sequence_1 = module_0.gen_api(dict_1, prefix=str_2)
        str_6 = '$"'
        str_7 = 'c@\x0b D[|(@_sv>'
        dict_2 = {str_2: str_3, str_6: str_7, str_3: str_3}
        none_type_0 = None
        str_8 = 'Xf$BS>d"(+ihnOGyvzB5'
        sequence_2 = module_0.gen_api(dict_2, none_type_0, prefix=str_8)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = None
        bool_0 = True
        int_0 = 770
        str_1 = module_0.loader(str_0, str_0, bool_0, int_0, bool_0)
    except BaseException:
        pass

def test_case_2():
    try:
        dict_0 = None
        int_0 = 3
        bool_0 = False
        sequence_0 = module_0.gen_api(dict_0, level=int_0, dry=bool_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '--no-link'
        iterator_0 = module_0.walk_packages(str_0, str_0)
        iterator_1 = module_0.walk_packages(str_0, str_0)
        bool_0 = False
        int_0 = 4
        str_1 = module_0.loader(str_0, str_0, bool_0, int_0, bool_0)
        str_2 = ''
        str_3 = '/'
        bool_1 = True
        str_4 = module_0.loader(str_2, str_3, bool_1, int_0, bool_0)
    except BaseException:
        pass