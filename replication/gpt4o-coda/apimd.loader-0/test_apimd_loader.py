# Automatically generated by Pynguin.
import apimd.loader as module_0

def test_case_0():
    pass

def test_case_1():
    str_0 = "?VErG!HqbsXqyO79_'W"
    dict_0 = {str_0: str_0, str_0: str_0}
    bool_0 = False
    sequence_0 = module_0.gen_api(dict_0, link=bool_0, toc=bool_0, dry=bool_0)

def test_case_2():
    str_0 = "xBUeq'OfL"
    dict_0 = {str_0: str_0}
    sequence_0 = module_0.gen_api(dict_0, prefix=str_0)

def test_case_3():
    str_0 = '--no-link'
    iterator_0 = module_0.walk_packages(str_0, str_0)
    dict_0 = {str_0: str_0, str_0: str_0}
    bool_0 = False
    int_0 = 4
    str_1 = module_0.loader(str_0, str_0, bool_0, int_0, bool_0)
    str_2 = 'utf-8'
    str_3 = ' class '
    iterator_1 = module_0.walk_packages(str_2, str_3)
    str_4 = '/'
    bool_1 = True
    str_5 = module_0.loader(str_2, str_4, bool_1, int_0, bool_0)
    bool_2 = False
    int_1 = 12
    sequence_0 = module_0.gen_api(dict_0, prefix=str_0, link=bool_2, level=int_1)

def test_case_4():
    str_0 = '--no-link'
    dict_0 = {str_0: str_0, str_0: str_0}
    str_1 = 'ahWtW'
    iterator_0 = module_0.walk_packages(str_0, str_1)
    str_2 = 'gL;]x*'
    bool_0 = True
    int_0 = -2771
    sequence_0 = module_0.gen_api(dict_0, level=int_0)
    str_3 = module_0.loader(str_2, str_2, bool_0, int_0, bool_0)
    str_4 = 'Xf$BS>d"(+ihnOGyvzB5'
    sequence_1 = module_0.gen_api(dict_0, str_4)
    sequence_2 = module_0.gen_api(dict_0)

def test_case_5():
    str_0 = "xBUeq'OfL"
    str_1 = 'bkFp,eOq\tGgPEx`j!@l'
    dict_0 = {str_0: str_1}
    sequence_0 = module_0.gen_api(dict_0, prefix=str_0)

def test_case_6():
    str_0 = '--no-link'
    iterator_0 = module_0.walk_packages(str_0, str_0)
    dict_0 = {str_0: str_0, str_0: str_0}
    str_1 = 's%`'
    str_2 = 'gW;\\x*'
    int_0 = 4
    str_3 = '6I%;xJ'
    iterator_1 = module_0.walk_packages(str_1, str_3)
    str_4 = '/I<,N.}ngG'
    str_5 = 'y1n`xL'
    str_6 = "'!3!UO9c`qh"
    iterator_2 = module_0.walk_packages(str_5, str_6)
    str_7 = 'vtZ<n(d#\naIP_'
    str_8 = 'P\x0b J"7w8~$!4<;E'
    iterator_3 = module_0.walk_packages(str_2, str_8)
    str_9 = "Gmq{nrmuy'GW?Bx}1"
    bool_0 = False
    int_1 = -2131
    bool_1 = True
    str_10 = module_0.loader(str_9, str_4, bool_0, int_1, bool_1)
    str_11 = 'Zzu'
    str_12 = ''
    str_13 = 'r'
    dict_1 = {str_3: str_11, str_7: str_12, str_13: str_13, str_4: str_12}
    str_14 = '*4#1u~d(00)M=xt^^004'
    sequence_0 = module_0.gen_api(dict_1, prefix=str_14, link=bool_1, toc=bool_1, dry=bool_1)
    bool_2 = None
    str_15 = 'typing.Mapping'
    bool_3 = False
    str_16 = module_0.loader(str_5, str_15, bool_2, int_0, bool_3)
    bool_4 = True
    bool_5 = False
    sequence_1 = module_0.gen_api(dict_0, str_16, link=bool_4, toc=bool_5)

def test_case_7():
    str_0 = '\ro|)v(Os>9Rl;F#us'
    str_1 = '~ZMO!0?yd"\x0c)2'
    str_2 = 'O*G\t\r'
    bool_0 = False
    int_0 = 1417
    str_3 = 'tW\r'
    iterator_0 = module_0.walk_packages(str_3, str_0)
    bool_1 = False
    str_4 = module_0.loader(str_1, str_2, bool_0, int_0, bool_1)
    str_5 = '@classmethod'
    str_6 = 'typing'
    str_7 = 'type['
    dict_0 = {str_2: str_5, str_6: str_7}
    sequence_0 = module_0.gen_api(dict_0, str_7, prefix=str_5, toc=bool_0)
    str_8 = '*uq,yI4aLF~kU8M3'
    str_9 = 'str'
    dict_1 = {str_0: str_0, str_0: str_1, str_8: str_0, str_9: str_1}
    sequence_1 = module_0.gen_api(dict_1, str_6)
    str_10 = '@;5\t%!AEBjs6YC}UE_&^'
    str_11 = "Bu<zm/61fD'Z|"
    str_12 = 'VwCqh'
    str_13 = ''
    str_14 = 'o6uia'
    dict_2 = {str_3: str_10, str_11: str_12, str_8: str_6, str_13: str_14}
    sequence_2 = module_0.gen_api(dict_2)