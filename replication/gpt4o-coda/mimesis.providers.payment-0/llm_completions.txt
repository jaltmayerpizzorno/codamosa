

# Generated at 2024-06-02 21:02:04.540028
```python
    payment = Payment()
    
    # Test for default card type (Visa)
    card_number = payment.credit_card_number()
    assert re.match(r'^4\d{3} \d{4} \d{4} \d{4}$', card_number)
    
    # Test for MasterCard
    card_number = payment.credit_card_number(CardType.MASTER_CARD)
    assert re.match(r'^(5[1-5]\d{2}|2(2[2-9]\d|[3-6]\d{2}|7[01]\d|720)) \d{4} \d{4} \d{4}$', card_number)
    
    # Test for American Express
    card_number = payment.credit_card_number(CardType.AMERICAN_EXPRESS)
    assert re.match(r'^3[47]\d{2} \d{6} \d{5}$', card_number)
    
    # Test

# Generated at 2024-06-02 21:02:08.715462
```python
    payment = Payment()
    
    # Test for default card type (Visa)
    card_number = payment.credit_card_number()
    assert re.match(r'4\d{3} \d{4} \d{4} \d{4}', card_number)
    
    # Test for MasterCard
    card_number = payment.credit_card_number(CardType.MASTER_CARD)
    assert re.match(r'(5[1-5]\d{2}|2[2-7]\d{2}) \d{4} \d{4} \d{4}', card_number)
    
    # Test for American Express
    card_number = payment.credit_card_number(CardType.AMERICAN_EXPRESS)
    assert re.match(r'3[47]\d{2} \d{6} \d{5}', card_number)
    
    # Test for invalid card type
    try:
        payment.credit_card_number("INVALID_CARD_TYPE")
    except Non

# Generated at 2024-06-02 21:02:15.979657
```python
    payment = Payment()
    
    # Test for default card type (random)
    card_number = payment.credit_card_number()
    assert isinstance(card_number, str)
    assert len(card_number.replace(" ", "")) in [15, 16]
    
    # Test for VISA card type
    visa_card_number = payment.credit_card_number(CardType.VISA)
    assert isinstance(visa_card_number, str)
    assert len(visa_card_number.replace(" ", "")) == 16
    assert visa_card_number.startswith("4")
    
    # Test for MasterCard card type
    mastercard_number = payment.credit_card_number(CardType.MASTER_CARD)
    assert isinstance(mastercard_number, str)
    assert len(mastercard_number.replace(" ", "")) == 16
    assert mastercard_number.startswith(("51", "52", "53", "54", "55", "2221", "2720"))
    
    # Test for American Express card type
    amex

# Generated at 2024-06-02 21:02:19.505739
```python
    payment = Payment()
    
    # Test for default card type (Visa)
    card_number = payment.credit_card_number()
    assert re.match(r'^4\d{3} \d{4} \d{4} \d{4}$', card_number)
    
    # Test for MasterCard
    card_number = payment.credit_card_number(CardType.MASTER_CARD)
    assert re.match(r'^(5[1-5]\d{2}|2(2[2-9]\d|[3-6]\d{2}|7[01]\d|720)) \d{4} \d{4} \d{4}$', card_number)
    
    # Test for American Express
    card_number = payment.credit_card_number(CardType.AMERICAN_EXPRESS)
    assert re.match(r'^3[47]\d{2} \d{6} \d{5}$', card_number)
    
    # Test

# Generated at 2024-06-02 21:02:22.717142
```python
    payment = Payment()
    
    # Test for default card type (Visa)
    card_number = payment.credit_card_number()
    assert re.match(r'4\d{3} \d{4} \d{4} \d{4}', card_number)
    
    # Test for MasterCard
    card_number = payment.credit_card_number(CardType.MASTER_CARD)
    assert re.match(r'(5[1-5]\d{2} \d{4} \d{4} \d{4}|2[2-7]\d{2} \d{4} \d{4} \d{4})', card_number)
    
    # Test for American Express
    card_number = payment.credit_card_number(CardType.AMERICAN_EXPRESS)
    assert re.match(r'3[47]\d{2} \d{6} \d{5}', card_number)
    
    # Test for invalid card type


# Generated at 2024-06-02 21:02:26.420554
```python
    payment = Payment()
    
    # Test for default card type (Visa)
    card_number = payment.credit_card_number()
    assert re.match(r'4\d{3} \d{4} \d{4} \d{4}', card_number)
    
    # Test for MasterCard
    card_number = payment.credit_card_number(CardType.MASTER_CARD)
    assert re.match(r'(5[1-5]\d{2} \d{4} \d{4} \d{4}|2[2-7]\d{2} \d{4} \d{4} \d{4})', card_number)
    
    # Test for American Express
    card_number = payment.credit_card_number(CardType.AMERICAN_EXPRESS)
    assert re.match(r'3[47]\d{2} \d{6} \d{5}', card_number)
    
    # Test for invalid card type


# Generated at 2024-06-02 21:02:31.554828
```python
    payment = Payment()
    
    # Test for default card type (Visa)
    card_number = payment.credit_card_number()
    assert re.match(r'4\d{3} \d{4} \d{4} \d{4}', card_number)
    
    # Test for MasterCard
    card_number = payment.credit_card_number(CardType.MASTER_CARD)
    assert re.match(r'(5[1-5]\d{2} \d{4} \d{4} \d{4}|2(2[2-9]\d|[3-6]\d{2}|7[01]\d|720) \d{4} \d{4} \d{4})', card_number)
    
    # Test for American Express
    card_number = payment.credit_card_number(CardType.AMERICAN_EXPRESS)
    assert re.match(r'3[47]\d{2} \d{6}

# Generated at 2024-06-02 21:02:36.151115
```python
    payment = Payment()
    
    # Test for default card type (Visa)
    card_number = payment.credit_card_number()
    assert re.match(r'4\d{3} \d{4} \d{4} \d{4}', card_number)
    
    # Test for MasterCard
    card_number = payment.credit_card_number(CardType.MASTER_CARD)
    assert re.match(r'(5[1-5]\d{2}|2(2[2-9]\d|[3-6]\d{2}|7[01]\d|720)) \d{4} \d{4} \d{4}', card_number)
    
    # Test for American Express
    card_number = payment.credit_card_number(CardType.AMERICAN_EXPRESS)
    assert re.match(r'3[47]\d{2} \d{6} \d{5}', card_number)
    
    # Test for invalid card type

# Generated at 2024-06-02 21:02:40.502394
```python
    payment = Payment()
    
    # Test for default card type (Visa)
    card_number = payment.credit_card_number()
    assert re.match(r'4\d{3} \d{4} \d{4} \d{4}', card_number)
    
    # Test for MasterCard
    card_number = payment.credit_card_number(CardType.MASTER_CARD)
    assert re.match(r'(5[1-5]\d{2} \d{4} \d{4} \d{4}|2[2-7]\d{2} \d{4} \d{4} \d{4})', card_number)
    
    # Test for American Express
    card_number = payment.credit_card_number(CardType.AMERICAN_EXPRESS)
    assert re.match(r'3[47]\d{2} \d{6} \d{5}', card_number)
    
    # Test for invalid card type


# Generated at 2024-06-02 21:02:43.867814
```python
    payment = Payment()
    
    # Test for default card type (Visa)
    card_number = payment.credit_card_number()
    assert re.match(r'4\d{3} \d{4} \d{4} \d{4}', card_number)
    
    # Test for MasterCard
    card_number = payment.credit_card_number(CardType.MASTER_CARD)
    assert re.match(r'(5[1-5]\d{2}|2[2-7]\d{2}) \d{4} \d{4} \d{4}', card_number)
    
    # Test for American Express
    card_number = payment.credit_card_number(CardType.AMERICAN_EXPRESS)
    assert re.match(r'3[47]\d{2} \d{6} \d{5}', card_number)
    
    # Test for invalid card type
    try:
        payment.credit_card_number("INVALID_CARD_TYPE")
    except Non

# Generated at 2024-06-02 21:03:29.105928
```python
    payment = Payment()
    
    # Test for default card type (Visa)
    card_number = payment.credit_card_number()
    assert re.match(r'4\d{3} \d{4} \d{4} \d{4}', card_number)
    
    # Test for MasterCard
    card_number = payment.credit_card_number(CardType.MASTER_CARD)
    assert re.match(r'(5[1-5]\d{2} \d{4} \d{4} \d{4}|2[2-7]\d{2} \d{4} \d{4} \d{4})', card_number)
    
    # Test for American Express
    card_number = payment.credit_card_number(CardType.AMERICAN_EXPRESS)
    assert re.match(r'3[47]\d{2} \d{6} \d{5}', card_number)
    
    # Test for invalid card type


# Generated at 2024-06-02 21:03:32.433043
```python
    payment = Payment()
    
    # Test for default card type (Visa)
    card_number = payment.credit_card_number()
    assert re.match(r'^4\d{3} \d{4} \d{4} \d{4}$', card_number)
    
    # Test for MasterCard
    card_number = payment.credit_card_number(CardType.MASTER_CARD)
    assert re.match(r'^(5[1-5]\d{2}|2[2-7]\d{2}) \d{4} \d{4} \d{4}$', card_number)
    
    # Test for American Express
    card_number = payment.credit_card_number(CardType.AMERICAN_EXPRESS)
    assert re.match(r'^3[47]\d{2} \d{6} \d{5}$', card_number)
    
    # Test for invalid card type
    try:
        payment.credit_card_number("INVALID_CARD_TYPE

# Generated at 2024-06-02 21:03:35.717524
```python
    payment = Payment()
    
    # Test for default card type (Visa)
    card_number = payment.credit_card_number()
    assert re.match(r'4\d{3} \d{4} \d{4} \d{4}', card_number)
    
    # Test for MasterCard
    card_number = payment.credit_card_number(CardType.MASTER_CARD)
    assert re.match(r'(5[1-5]\d{2}|2[2-7]\d{2}) \d{4} \d{4} \d{4}', card_number)
    
    # Test for American Express
    card_number = payment.credit_card_number(CardType.AMERICAN_EXPRESS)
    assert re.match(r'3[47]\d{2} \d{6} \d{5}', card_number)
    
    # Test for invalid card type
    try:
        payment.credit_card_number("INVALID_CARD_TYPE")
    except Non

# Generated at 2024-06-02 21:03:39.900425
```python
    payment = Payment()
    
    # Test for default card type (Visa)
    card_number = payment.credit_card_number()
    assert re.match(r'4\d{3} \d{4} \d{4} \d{4}', card_number)
    
    # Test for MasterCard
    card_number = payment.credit_card_number(CardType.MASTER_CARD)
    assert re.match(r'(5[1-5]\d{2}|2[2-7]\d{2}) \d{4} \d{4} \d{4}', card_number)
    
    # Test for American Express
    card_number = payment.credit_card_number(CardType.AMERICAN_EXPRESS)
    assert re.match(r'3[47]\d{2} \d{6} \d{5}', card_number)
    
    # Test for invalid card type
    try:
        payment.credit_card_number("INVALID_CARD_TYPE")
    except Non

# Generated at 2024-06-02 21:03:42.629411
```python
    payment = Payment()
    
    # Test for default card type (Visa)
    card_number = payment.credit_card_number()
    assert re.match(r'4\d{3} \d{4} \d{4} \d{4}', card_number)
    
    # Test for MasterCard
    card_number = payment.credit_card_number(CardType.MASTER_CARD)
    assert re.match(r'(5[1-5]\d{2} \d{4} \d{4} \d{4}|2[2-7]\d{2} \d{4} \d{4} \d{4})', card_number)
    
    # Test for American Express
    card_number = payment.credit_card_number(CardType.AMERICAN_EXPRESS)
    assert re.match(r'3[47]\d{2} \d{6} \d{5}', card_number)
    
    # Test for invalid card type


# Generated at 2024-06-02 21:03:46.958699
```python
    payment = Payment()
    
    # Test for default card type (Visa)
    card_number = payment.credit_card_number()
    assert re.match(r'4\d{3} \d{4} \d{4} \d{4}', card_number)
    
    # Test for MasterCard
    card_number = payment.credit_card_number(CardType.MASTER_CARD)
    assert re.match(r'(5[1-5]\d{2}|2[2-7]\d{2}) \d{4} \d{4} \d{4}', card_number)
    
    # Test for American Express
    card_number = payment.credit_card_number(CardType.AMERICAN_EXPRESS)
    assert re.match(r'3[47]\d{2} \d{6} \d{5}', card_number)
    
    # Test for invalid card type
    try:
        payment.credit_card_number("INVALID_CARD_TYPE")
    except Non

# Generated at 2024-06-02 21:03:50.478744
```python
    payment = Payment()
    
    # Test for default card type (Visa)
    card_number = payment.credit_card_number()
    assert re.match(r'4\d{3} \d{4} \d{4} \d{4}', card_number)
    
    # Test for MasterCard
    card_number = payment.credit_card_number(CardType.MASTER_CARD)
    assert re.match(r'(5[1-5]\d{2}|2[2-7]\d{2}) \d{4} \d{4} \d{4}', card_number)
    
    # Test for American Express
    card_number = payment.credit_card_number(CardType.AMERICAN_EXPRESS)
    assert re.match(r'3[47]\d{2} \d{6} \d{5}', card_number)
    
    # Test for invalid card type
    try:
        payment.credit_card_number("INVALID_CARD_TYPE")
    except Non

# Generated at 2024-06-02 21:03:53.912369
```python
    payment = Payment()
    
    # Test for default card type (Visa)
    card_number = payment.credit_card_number()
    assert re.match(r'4\d{3} \d{4} \d{4} \d{4}', card_number)
    
    # Test for MasterCard
    card_number = payment.credit_card_number(CardType.MASTER_CARD)
    assert re.match(r'(5[1-5]\d{2} \d{4} \d{4} \d{4}|2[2-7]\d{2} \d{4} \d{4} \d{4})', card_number)
    
    # Test for American Express
    card_number = payment.credit_card_number(CardType.AMERICAN_EXPRESS)
    assert re.match(r'3[47]\d{2} \d{6} \d{5}', card_number)
    
    # Test for invalid card type


# Generated at 2024-06-02 21:04:01.435067
```python
    payment = Payment()
    
    # Test for default card type (Visa)
    card_number = payment.credit_card_number()
    assert re.match(r'4\d{3} \d{4} \d{4} \d{4}', card_number)
    
    # Test for MasterCard
    card_number = payment.credit_card_number(CardType.MASTER_CARD)
    assert re.match(r'(5[1-5]\d{2}|2[2-7]\d{2}) \d{4} \d{4} \d{4}', card_number)
    
    # Test for American Express
    card_number = payment.credit_card_number(CardType.AMERICAN_EXPRESS)
    assert re.match(r'3[47]\d{2} \d{6} \d{5}', card_number)
    
    # Test for invalid card type
    try:
        payment.credit_card_number("INVALID_CARD_TYPE")
    except Non

# Generated at 2024-06-02 21:04:04.660117
```python
    payment = Payment()
    
    # Test for default card type (Visa)
    card_number = payment.credit_card_number()
    assert re.match(r'4\d{3} \d{4} \d{4} \d{4}', card_number)
    
    # Test for MasterCard
    card_number = payment.credit_card_number(CardType.MASTER_CARD)
    assert re.match(r'(5[1-5]\d{2} \d{4} \d{4} \d{4}|2[2-7]\d{2} \d{4} \d{4} \d{4})', card_number)
    
    # Test for American Express
    card_number = payment.credit_card_number(CardType.AMERICAN_EXPRESS)
    assert re.match(r'3[47]\d{2} \d{6} \d{5}', card_number)
    
    # Test for invalid card type


# Generated at 2024-06-02 21:05:38.345465
```python
    payment = Payment()
    
    # Test for default card type (Visa)
    card_number = payment.credit_card_number()
    assert re.match(r'4\d{3} \d{4} \d{4} \d{4}', card_number)
    
    # Test for MasterCard
    card_number = payment.credit_card_number(CardType.MASTER_CARD)
    assert re.match(r'(5[1-5]\d{2}|2[2-7]\d{2}) \d{4} \d{4} \d{4}', card_number)
    
    # Test for American Express
    card_number = payment.credit_card_number(CardType.AMERICAN_EXPRESS)
    assert re.match(r'3[47]\d{2} \d{6} \d{5}', card_number)
    
    # Test for invalid card type
    try:
        payment.credit_card_number("INVALID_CARD_TYPE")
    except Non

# Generated at 2024-06-02 21:05:39.583783
```python
    payment = Payment()
    card_number = payment.credit_card_number()
    assert isinstance(card_number, str)
    assert len(card_number.replace(" ", "")) in [15, 16]
    assert card_number.replace(" ", "").isdigit()
```

# Generated at 2024-06-02 21:05:42.952859
```python
    payment = Payment()
    
    # Test for default card type (Visa)
    card_number = payment.credit_card_number()
    assert re.match(r'4\d{3} \d{4} \d{4} \d{4}', card_number)
    
    # Test for MasterCard
    card_number = payment.credit_card_number(CardType.MASTER_CARD)
    assert re.match(r'(5[1-5]\d{2}|2[2-7]\d{2}) \d{4} \d{4} \d{4}', card_number)
    
    # Test for American Express
    card_number = payment.credit_card_number(CardType.AMERICAN_EXPRESS)
    assert re.match(r'3[47]\d{2} \d{6} \d{5}', card_number)
    
    # Test for invalid card type
    try:
        payment.credit_card_number("INVALID_CARD_TYPE")
    except Non

# Generated at 2024-06-02 21:05:46.151168
```python
    payment = Payment()
    
    # Test for default card type (Visa)
    card_number = payment.credit_card_number()
    assert re.match(r'4\d{3} \d{4} \d{4} \d{4}', card_number)
    
    # Test for MasterCard
    card_number = payment.credit_card_number(CardType.MASTER_CARD)
    assert re.match(r'(5[1-5]\d{2} \d{4} \d{4} \d{4}|2(2[2-9]|[3-6]\d|7[01])\d \d{4} \d{4} \d{4})', card_number)
    
    # Test for American Express
    card_number = payment.credit_card_number(CardType.AMERICAN_EXPRESS)
    assert re.match(r'3[47]\d{2} \d{6} \d{5}', card

# Generated at 2024-06-02 21:05:49.415599
```python
    payment = Payment()
    
    # Test for default card type (Visa)
    card_number = payment.credit_card_number()
    assert re.match(r'4\d{3} \d{4} \d{4} \d{4}', card_number)
    
    # Test for MasterCard
    card_number = payment.credit_card_number(CardType.MASTER_CARD)
    assert re.match(r'(5[1-5]\d{2} \d{4} \d{4} \d{4}|2[2-7]\d{2} \d{4} \d{4} \d{4})', card_number)
    
    # Test for American Express
    card_number = payment.credit_card_number(CardType.AMERICAN_EXPRESS)
    assert re.match(r'3[47]\d{2} \d{6} \d{5}', card_number)
    
    # Test for invalid card type


# Generated at 2024-06-02 21:05:52.520171
```python
    payment = Payment()
    
    # Test for default card type (Visa)
    card_number = payment.credit_card_number()
    assert re.match(r'4\d{3} \d{4} \d{4} \d{4}', card_number)
    
    # Test for MasterCard
    card_number = payment.credit_card_number(CardType.MASTER_CARD)
    assert re.match(r'(5[1-5]\d{2}|2[2-7]\d{2}) \d{4} \d{4} \d{4}', card_number)
    
    # Test for American Express
    card_number = payment.credit_card_number(CardType.AMERICAN_EXPRESS)
    assert re.match(r'3[47]\d{2} \d{6} \d{5}', card_number)
    
    # Test for invalid card type
    try:
        payment.credit_card_number("INVALID_CARD_TYPE")
    except Non

# Generated at 2024-06-02 21:05:56.676836
```python
    payment = Payment()
    
    # Test for default card type (Visa)
    card_number = payment.credit_card_number()
    assert re.match(r'4\d{3} \d{4} \d{4} \d{4}', card_number)
    
    # Test for MasterCard
    card_number = payment.credit_card_number(CardType.MASTER_CARD)
    assert re.match(r'(5[1-5]\d{2} \d{4} \d{4} \d{4}|2(2[2-9]\d|[3-6]\d{2}|7[01]\d|720) \d{4} \d{4} \d{4})', card_number)
    
    # Test for American Express
    card_number = payment.credit_card_number(CardType.AMERICAN_EXPRESS)
    assert re.match(r'3[47]\d{2} \d{6}

# Generated at 2024-06-02 21:06:01.561171
```python
    payment = Payment()
    
    # Test for default card type (Visa)
    card_number = payment.credit_card_number()
    assert re.match(r'4\d{3} \d{4} \d{4} \d{4}', card_number)
    
    # Test for MasterCard
    card_number = payment.credit_card_number(CardType.MASTER_CARD)
    assert re.match(r'(5[1-5]\d{2}|2[2-7]\d{2}) \d{4} \d{4} \d{4}', card_number)
    
    # Test for American Express
    card_number = payment.credit_card_number(CardType.AMERICAN_EXPRESS)
    assert re.match(r'3[47]\d{2} \d{6} \d{5}', card_number)
    
    # Test for invalid card type
    try:
        payment.credit_card_number("INVALID_CARD_TYPE")
    except Non

# Generated at 2024-06-02 21:06:07.229824
```python
    payment = Payment()
    
    # Test for default card type (Visa)
    card_number = payment.credit_card_number()
    assert re.match(r'^4\d{3} \d{4} \d{4} \d{4}$', card_number)
    
    # Test for MasterCard
    card_number = payment.credit_card_number(CardType.MASTER_CARD)
    assert re.match(r'^(5[1-5]\d{2}|2[2-7]\d{2}) \d{4} \d{4} \d{4}$', card_number)
    
    # Test for American Express
    card_number = payment.credit_card_number(CardType.AMERICAN_EXPRESS)
    assert re.match(r'^3[47]\d{2} \d{6} \d{5}$', card_number)
    
    # Test for invalid card type
    try:
        payment.credit_card_number("INVALID_CARD_TYPE

# Generated at 2024-06-02 21:06:10.963121
```python
    payment = Payment()
    
    # Test for default card type (Visa)
    card_number = payment.credit_card_number()
    assert re.match(r'4\d{3} \d{4} \d{4} \d{4}', card_number)
    
    # Test for MasterCard
    card_number = payment.credit_card_number(CardType.MASTER_CARD)
    assert re.match(r'(5[1-5]\d{2}|2[2-7]\d{2}) \d{4} \d{4} \d{4}', card_number)
    
    # Test for American Express
    card_number = payment.credit_card_number(CardType.AMERICAN_EXPRESS)
    assert re.match(r'3[47]\d{2} \d{6} \d{5}', card_number)
    
    # Test for invalid card type
    try:
        payment.credit_card_number("INVALID_CARD_TYPE")
    except Non

# Generated at 2024-06-02 21:09:07.403971
```python
    payment = Payment()
    
    # Test for default card type (Visa)
    card_number = payment.credit_card_number()
    assert re.match(r'^4\d{3} \d{4} \d{4} \d{4}$', card_number)
    
    # Test for MasterCard
    card_number = payment.credit_card_number(CardType.MASTER_CARD)
    assert re.match(r'^(5[1-5]\d{2}|2[2-7]\d{2}) \d{4} \d{4} \d{4}$', card_number)
    
    # Test for American Express
    card_number = payment.credit_card_number(CardType.AMERICAN_EXPRESS)
    assert re.match(r'^3[47]\d{2} \d{6} \d{5}$', card_number)
    
    # Test for invalid card type
    try:
        payment.credit_card_number("INVALID_CARD_TYPE

# Generated at 2024-06-02 21:09:10.344353
```python
    payment = Payment()
    
    # Test for default card type (Visa)
    card_number = payment.credit_card_number()
    assert re.match(r'4\d{3} \d{4} \d{4} \d{4}', card_number)
    
    # Test for MasterCard
    card_number = payment.credit_card_number(CardType.MASTER_CARD)
    assert re.match(r'(5[1-5]\d{2}|2[2-7]\d{2}) \d{4} \d{4} \d{4}', card_number)
    
    # Test for American Express
    card_number = payment.credit_card_number(CardType.AMERICAN_EXPRESS)
    assert re.match(r'3[47]\d{2} \d{6} \d{5}', card_number)
    
    # Test for invalid card type
    try:
        payment.credit_card_number("INVALID_CARD_TYPE")
    except Non

# Generated at 2024-06-02 21:09:13.912218
```python
    payment = Payment()
    
    # Test for default card type (Visa)
    card_number = payment.credit_card_number()
    assert re.match(r'4\d{3} \d{4} \d{4} \d{4}', card_number)
    
    # Test for MasterCard
    card_number = payment.credit_card_number(CardType.MASTER_CARD)
    assert re.match(r'(5[1-5]\d{2}|2[2-7]\d{2}) \d{4} \d{4} \d{4}', card_number)
    
    # Test for American Express
    card_number = payment.credit_card_number(CardType.AMERICAN_EXPRESS)
    assert re.match(r'3[47]\d{2} \d{6} \d{5}', card_number)
    
    # Test for invalid card type
    try:
        payment.credit_card_number("INVALID_CARD_TYPE")
    except Non

# Generated at 2024-06-02 21:09:16.887744
```python
    payment = Payment()
    
    # Test for default card type (Visa)
    card_number = payment.credit_card_number()
    assert re.match(r'4\d{3} \d{4} \d{4} \d{4}', card_number)
    
    # Test for MasterCard
    card_number = payment.credit_card_number(CardType.MASTER_CARD)
    assert re.match(r'(5[1-5]\d{2}|2[2-7]\d{2}) \d{4} \d{4} \d{4}', card_number)
    
    # Test for American Express
    card_number = payment.credit_card_number(CardType.AMERICAN_EXPRESS)
    assert re.match(r'3[47]\d{2} \d{6} \d{5}', card_number)
    
    # Test for invalid card type
    try:
        payment.credit_card_number("INVALID_CARD_TYPE")
    except Non

# Generated at 2024-06-02 21:09:18.586069
```python
    payment = Payment()
    card_number = payment.credit_card_number()
    assert isinstance(card_number, str)
    assert len(card_number.replace(" ", "")) in [15, 16]
    assert card_number.replace(" ", "").isdigit()
    assert card_number[0] in ['3', '4', '5']
```

# Generated at 2024-06-02 21:09:21.879991
```python
    payment = Payment()
    
    # Test for default card type (Visa)
    card_number = payment.credit_card_number()
    assert re.match(r'4\d{3} \d{4} \d{4} \d{4}', card_number)
    
    # Test for MasterCard
    card_number = payment.credit_card_number(CardType.MASTER_CARD)
    assert re.match(r'(5[1-5]\d{2} \d{4} \d{4} \d{4}|2[2-7]\d{2} \d{4} \d{4} \d{4})', card_number)
    
    # Test for American Express
    card_number = payment.credit_card_number(CardType.AMERICAN_EXPRESS)
    assert re.match(r'3[47]\d{2} \d{6} \d{5}', card_number)
    
    # Test for invalid card type


# Generated at 2024-06-02 21:09:25.175761
```python
    payment = Payment()
    
    # Test for default card type (Visa)
    card_number = payment.credit_card_number()
    assert re.match(r'4\d{3} \d{4} \d{4} \d{4}', card_number)
    
    # Test for MasterCard
    card_number = payment.credit_card_number(CardType.MASTER_CARD)
    assert re.match(r'(5[1-5]\d{2}|2[2-7]\d{2}) \d{4} \d{4} \d{4}', card_number)
    
    # Test for American Express
    card_number = payment.credit_card_number(CardType.AMERICAN_EXPRESS)
    assert re.match(r'3[47]\d{2} \d{6} \d{5}', card_number)
    
    # Test for invalid card type
    try:
        payment.credit_card_number("INVALID_CARD_TYPE")
    except Non

# Generated at 2024-06-02 21:09:28.569697
```python
    payment = Payment()
    
    # Test for default card type (Visa)
    card_number = payment.credit_card_number()
    assert re.match(r'4\d{3} \d{4} \d{4} \d{4}', card_number)
    
    # Test for MasterCard
    card_number = payment.credit_card_number(CardType.MASTER_CARD)
    assert re.match(r'(5[1-5]\d{2}|2[2-7]\d{2}) \d{4} \d{4} \d{4}', card_number)
    
    # Test for American Express
    card_number = payment.credit_card_number(CardType.AMERICAN_EXPRESS)
    assert re.match(r'3[47]\d{2} \d{6} \d{5}', card_number)
    
    # Test for invalid card type
    try:
        payment.credit_card_number("INVALID_CARD_TYPE")
    except Non

# Generated at 2024-06-02 21:09:31.576811
```python
    payment = Payment()
    
    # Test for default card type (Visa)
    card_number = payment.credit_card_number()
    assert re.match(r'4\d{3} \d{4} \d{4} \d{4}', card_number)
    
    # Test for MasterCard
    card_number = payment.credit_card_number(CardType.MASTER_CARD)
    assert re.match(r'(5[1-5]\d{2}|2[2-7]\d{2}) \d{4} \d{4} \d{4}', card_number)
    
    # Test for American Express
    card_number = payment.credit_card_number(CardType.AMERICAN_EXPRESS)
    assert re.match(r'3[47]\d{2} \d{6} \d{5}', card_number)
    
    # Test for invalid card type
    try:
        payment.credit_card_number("INVALID_CARD_TYPE")
    except Non

# Generated at 2024-06-02 21:09:38.020954
```python
    payment = Payment()
    
    # Test for default card type (Visa)
    card_number = payment.credit_card_number()
    assert re.match(r'4\d{3} \d{4} \d{4} \d{4}', card_number)
    
    # Test for MasterCard
    card_number = payment.credit_card_number(CardType.MASTER_CARD)
    assert re.match(r'(5[1-5]\d{2} \d{4} \d{4} \d{4}|2[2-7]\d{2} \d{4} \d{4} \d{4})', card_number)
    
    # Test for American Express
    card_number = payment.credit_card_number(CardType.AMERICAN_EXPRESS)
    assert re.match(r'3[47]\d{2} \d{6} \d{5}', card_number)
    
    # Test for invalid card type
