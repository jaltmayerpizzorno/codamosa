# Automatically generated by Pynguin.
import ansible.playbook.block as module_0

def test_case_0():
    pass

def test_case_1():
    block_0 = module_0.Block()

def test_case_2():
    int_0 = -791
    float_0 = -2704.18468
    block_0 = module_0.Block(int_0, float_0)
    var_0 = block_0.__repr__()

def test_case_3():
    block_0 = module_0.Block()
    var_0 = block_0.all_parents_static()
    var_1 = block_0.get_vars()
    var_2 = block_0.serialize()
    var_3 = block_0.get_include_params()

def test_case_4():
    block_0 = module_0.Block()
    var_0 = block_0.preprocess_data(block_0)

def test_case_5():
    int_0 = -1723
    list_0 = [int_0, int_0]
    bool_0 = False
    str_0 = '_oQ1nb/ku>I!PO'
    block_0 = module_0.Block(str_0)
    int_1 = -3109
    str_1 = 'Unable to update repository. Continuing with (forced) run of playbook.'
    block_1 = module_0.Block(list_0, str_1)
    var_0 = block_0.is_block(block_1)
    var_1 = block_1.copy(block_0, int_1)
    str_2 = 'A\'\\"(,ZOkv9}a\x0c[o'
    block_2 = module_0.Block(bool_0, str_2)
    var_2 = block_2.preprocess_data(list_0)

def test_case_6():
    block_0 = module_0.Block()
    var_0 = block_0.filter_tagged_tasks(block_0)

def test_case_7():
    block_0 = module_0.Block()
    var_0 = block_0.get_dep_chain()

def test_case_8():
    block_0 = module_0.Block()
    var_0 = block_0.copy()

def test_case_9():
    block_0 = module_0.Block()
    var_0 = block_0.serialize()

def test_case_10():
    float_0 = 3722.130832
    float_1 = None
    dict_0 = {float_0: float_0, float_0: float_0, float_0: float_1, float_0: float_1}
    int_0 = 0
    tuple_0 = (int_0,)
    block_0 = module_0.Block(tuple_0)
    var_0 = block_0.deserialize(dict_0)

def test_case_11():
    block_0 = module_0.Block()
    set_0 = set()
    var_0 = block_0.set_loader(set_0)

def test_case_12():
    str_0 = '{\t/cvm '
    block_0 = module_0.Block(str_0)
    var_0 = block_0.serialize()

def test_case_13():
    block_0 = module_0.Block()
    var_0 = block_0.has_tasks()

def test_case_14():
    block_0 = module_0.Block()
    var_0 = block_0.serialize()
    var_1 = block_0.get_include_params()

def test_case_15():
    block_0 = module_0.Block()
    var_0 = block_0.all_parents_static()
    var_1 = block_0.serialize()
    var_2 = block_0.get_include_params()

def test_case_16():
    block_0 = module_0.Block()
    var_0 = block_0.all_parents_static()
    var_1 = block_0.get_first_parent_include()
    var_2 = block_0.get_first_parent_include()
    block_1 = module_0.Block()
    block_2 = module_0.Block()
    var_3 = block_0

def test_case_17():
    str_0 = 'AEn[)kK#*kR'
    int_0 = -2092
    set_0 = {int_0}
    block_0 = module_0.Block(int_0, set_0)
    var_0 = block_0.filter_tagged_tasks(str_0)

def test_case_18():
    str_0 = '.'
    float_0 = 2.0
    block_0 = module_0.Block(float_0)
    block_1 = module_0.Block(block_0)
    var_0 = block_1.copy(str_0)

def test_case_19():
    bool_0 = False
    block_0 = module_0.Block(bool_0)
    block_1 = module_0.Block()
    var_0 = block_1.all_parents_static()
    int_0 = 608
    var_1 = block_0.preprocess_data(int_0)
    var_2 = block_1.get_vars()
    var_3 = block_0.is_block(block_1)
    set_0 = set()
    bytes_0 = b'd\xdc\x9eA\xe2'
    tuple_0 = (set_0, bytes_0, set_0)
    int_1 = 0
    block_2 = module_0.Block(tuple_0, int_1, block_0)
    var_4 = block_1.get_include_params()
    set_1 = set()
    block_3 = module_0.Block(block_1, bool_0)
    var_5 = block_3.all_parents_static()
    var_6 = block_2.set_loader(bytes_0)
    bytes_1 = b'\xfb*Q\x15S\x00\xfbr~5\x0f6^\xfd'
    var_7 = block_0.preprocess_data(bytes_1)
    block_4 = module_0.Block(set_1)

def test_case_20():
    int_0 = -894
    str_0 = 'Ldo;H*9K'
    bytes_0 = b'|\xff\xe3\x05\xf50\x05\xf2\xfe\xf0I'
    tuple_0 = (bytes_0,)
    tuple_1 = (str_0, tuple_0)
    block_0 = module_0.Block(tuple_1)
    block_1 = module_0.Block(int_0, block_0, block_0)
    var_0 = block_1.copy()
    block_2 = module_0.Block()
    set_0 = set()
    var_1 = block_2.set_loader(set_0)

def test_case_21():
    bytes_0 = b'_\xf0\xa3\x0c\xa0\x88_\x1d\xbe)6'
    str_0 = '|!X~McP'
    block_0 = module_0.Block(str_0)
    str_1 = "0'&S}(v"
    block_1 = module_0.Block(block_0, str_1, block_0)
    var_0 = block_1.filter_tagged_tasks(bytes_0)
    bool_0 = True
    var_1 = block_1.preprocess_data(bool_0)
    float_0 = 1616.230042
    tuple_0 = (float_0, block_0, bytes_0)
    block_2 = module_0.Block(tuple_0, block_0)
    var_2 = block_2.serialize()