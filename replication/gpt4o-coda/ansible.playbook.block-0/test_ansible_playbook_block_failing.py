# Automatically generated by Pynguin.
import ansible.playbook.block as module_0

def test_case_0():
    try:
        float_0 = 4075.872
        block_0 = module_0.Block(float_0)
        bool_0 = True
        list_0 = [float_0, block_0]
        int_0 = 1999
        block_1 = module_0.Block(block_0, bool_0, list_0, int_0)
        var_0 = block_1.serialize()
    except BaseException:
        pass

def test_case_1():
    try:
        bool_0 = True
        str_0 = '?'
        block_0 = module_0.Block(bool_0, str_0)
        var_0 = block_0.all_parents_static()
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = None
        set_0 = {bytes_0, bytes_0}
        str_0 = '3a>\t!?isT'
        block_0 = module_0.Block(str_0)
        var_0 = block_0.__eq__(set_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bool_0 = None
        bool_1 = True
        set_0 = {bool_1, bool_1, bool_1}
        float_0 = 476.039
        block_0 = module_0.Block(set_0, float_0)
        var_0 = block_0.__ne__(bool_0)
    except BaseException:
        pass

def test_case_4():
    try:
        bytes_0 = b'.=\x82\xf0\x11\xf2\xa0'
        tuple_0 = ()
        str_0 = 'kfG7'
        block_0 = module_0.Block(tuple_0, str_0)
        str_1 = '\n        Writes initial data to the stdin filehandle of the subprocess and closes\n        it. (The handle must be closed; otherwise, for example, "sftp -b -" will\n        just hang forever waiting for more commands.)\n        '
        str_2 = 't|'
        int_0 = -154
        block_1 = module_0.Block(str_1, str_2, int_0)
        var_0 = block_1.load(bytes_0, block_0)
    except BaseException:
        pass

def test_case_5():
    try:
        int_0 = -791
        float_0 = -2704.18468
        block_0 = module_0.Block(int_0, float_0)
        var_0 = block_0.__repr__()
        var_1 = block_0.get_dep_chain()
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = "\rcY 'QDp"
        str_1 = 'd0S9a-lxzp\rxN-x^{B'
        block_0 = module_0.Block(str_0, str_1)
        dict_0 = None
        block_1 = module_0.Block(dict_0)
        var_0 = block_0.copy()
    except BaseException:
        pass

def test_case_7():
    try:
        float_0 = 1476.2356
        float_1 = 1436.78
        bytes_0 = b'\x02_\x9d\x1c\xf2l\xe6!j\x06\x14\xe7\xf7\x14\xd8#\x9f'
        block_0 = module_0.Block(float_1, bytes_0)
        var_0 = block_0.set_loader(float_0)
    except BaseException:
        pass

def test_case_8():
    try:
        list_0 = []
        bytes_0 = b'\xcc\xe2\xd4\xbf\xd7\xce\x7f0l'
        dict_0 = {bytes_0: list_0, bytes_0: list_0}
        block_0 = module_0.Block(list_0, bytes_0, dict_0)
        var_0 = block_0.serialize()
    except BaseException:
        pass

def test_case_9():
    try:
        list_0 = []
        bytes_0 = b'\xcc\xe2\xd4\xbf\xd7\xce\x7f0l'
        dict_0 = {}
        block_0 = module_0.Block(list_0, bytes_0, dict_0)
        var_0 = block_0.serialize()
    except BaseException:
        pass

def test_case_10():
    try:
        bytes_0 = b'_\xf0\xa3\x0c\xa0\x88_\x1d\xbe)6'
        str_0 = '|!X~McP'
        block_0 = module_0.Block(str_0)
        str_1 = "0'&S}(v"
        block_1 = module_0.Block(block_0, str_1, block_0)
        var_0 = block_1.filter_tagged_tasks(bytes_0)
        var_1 = block_1.get_include_params()
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = 'W/d8H5n=QY6ip'
        list_0 = [str_0, str_0, str_0, str_0]
        block_0 = module_0.Block(str_0, list_0)
        var_0 = block_0.get_first_parent_include()
    except BaseException:
        pass

def test_case_12():
    try:
        bytes_0 = b'_\xf0\xa3\x0c\xa0\x88_\x1d\xbe)6'
        str_0 = '|!X~McP'
        block_0 = module_0.Block(str_0)
        str_1 = 'hL*~zQ'
        block_1 = module_0.Block(block_0, str_1, block_0)
        var_0 = block_1.filter_tagged_tasks(bytes_0)
        var_1 = block_1.serialize()
    except BaseException:
        pass

def test_case_13():
    try:
        int_0 = -1463
        block_0 = module_0.Block(int_0)
        dict_0 = None
        float_0 = 375.9562
        float_1 = 1.5
        block_1 = module_0.Block(float_0, float_1)
        var_0 = block_1.filter_tagged_tasks(float_1)
        var_1 = block_0.copy(block_1, dict_0)
        var_2 = block_1.get_vars()
    except BaseException:
        pass

def test_case_14():
    try:
        int_0 = 384
        str_0 = '0242ac11-0002-7cac-8171-000000000064'
        bool_0 = True
        bool_1 = False
        block_0 = module_0.Block(bool_0, bool_1)
        var_0 = block_0.all_parents_static()
        block_1 = module_0.Block(str_0)
        var_1 = block_1.has_tasks()
        bool_2 = True
        dict_0 = {var_1: str_0, str_0: var_1}
        var_2 = block_1.is_block(dict_0)
        block_2 = module_0.Block(int_0, bool_2)
        var_3 = block_2.serialize()
    except BaseException:
        pass

def test_case_15():
    try:
        tuple_0 = ()
        bool_0 = True
        str_0 = "7'o d"
        bytes_0 = b'\x92{\x15\xb4\x8d\x84\xa5\xdf\xd7\xee\xc9'
        dict_0 = {bytes_0: tuple_0, tuple_0: bool_0}
        block_0 = module_0.Block(bytes_0, bytes_0, dict_0)
        var_0 = block_0.filter_tagged_tasks(str_0)
        dict_1 = {bool_0: tuple_0, tuple_0: bool_0}
        float_0 = None
        list_0 = []
        block_1 = module_0.Block(float_0, list_0)
        block_2 = module_0.Block(list_0, list_0)
        var_1 = block_2.load(dict_1, block_1)
    except BaseException:
        pass

def test_case_16():
    try:
        str_0 = 'size_total'
        list_0 = []
        set_0 = {str_0, str_0}
        block_0 = module_0.Block(str_0, list_0, set_0)
        var_0 = block_0.serialize()
    except BaseException:
        pass

def test_case_17():
    try:
        dict_0 = None
        block_0 = module_0.Block(dict_0)
        tuple_0 = ()
        var_0 = block_0.copy(tuple_0)
        str_0 = 'when executing %s: %s'
        var_1 = block_0.deserialize(str_0)
    except BaseException:
        pass

def test_case_18():
    try:
        block_0 = module_0.Block()
        str_0 = 'A1Gj5r'
        var_0 = block_0.serialize()
        var_1 = block_0.get_include_params()
        var_2 = block_0.set_loader(str_0)
        var_3 = block_0.has_tasks()
        int_0 = -2625
        var_4 = block_0.filter_tagged_tasks(int_0)
        var_5 = block_0.all_parents_static()
        dict_0 = {str_0: var_5, var_2: block_0, var_5: block_0, var_3: int_0}
        var_6 = block_0.filter_tagged_tasks(str_0)
        var_7 = block_0.preprocess_data(dict_0)
        var_8 = block_0.serialize()
        var_9 = block_0.copy()
        bytes_0 = b'\xe2.\xb9\x9e\xac\xa6\xf6\xee\x95\xae\x8bY\xb2z'
        var_10 = block_0.preprocess_data(bytes_0)
        var_11 = block_0.deserialize(var_7)
        var_12 = block_0.get_first_parent_include()
        float_0 = 889.934
        str_1 = 'M@I!>M|f}\rF)r'
        block_1 = module_0.Block(int_0)
        var_13 = block_1.has_tasks()
        str_2 = 'u,\rI}k@Ytf'
        var_14 = block_0.all_parents_static()
        tuple_0 = None
        str_3 = '0242ac11-0002-7cac-8171-000000000035'
        var_15 = block_0.get_include_params()
        tuple_1 = (block_0, tuple_0, str_3, str_2)
        var_16 = block_1.serialize()
        block_2 = module_0.Block(dict_0)
        var_17 = block_2.all_parents_static()
        block_3 = module_0.Block(tuple_1, str_1, str_2)
        str_4 = '~ @ifTt$xknUR\\NO6li '
        bool_0 = True
        block_4 = module_0.Block(str_4, float_0, bool_0)
        var_18 = block_4.get_first_parent_include()
    except BaseException:
        pass