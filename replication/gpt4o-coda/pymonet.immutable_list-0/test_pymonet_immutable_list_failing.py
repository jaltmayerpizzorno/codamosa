# Automatically generated by Pynguin.
import builtins as module_0
import pymonet.immutable_list as module_1

def test_case_0():
    try:
        object_0 = module_0.object()
        bool_0 = False
        immutable_list_0 = module_1.ImmutableList(bool_0)
        bool_1 = immutable_list_0.__eq__(object_0)
        str_0 = immutable_list_0.__str__()
        immutable_list_1 = module_1.ImmutableList(bool_0)
        optional_0 = immutable_list_1.find(object_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bool_0 = False
        object_0 = module_0.object()
        dict_0 = {}
        immutable_list_0 = module_1.ImmutableList(dict_0, bool_0)
        str_0 = immutable_list_0.__str__()
    except BaseException:
        pass

def test_case_2():
    try:
        list_0 = None
        immutable_list_0 = module_1.ImmutableList()
        str_0 = 'pp";>}G2'
        var_0 = immutable_list_0.unshift(str_0)
        var_1 = immutable_list_0.__len__()
        var_2 = immutable_list_0.unshift(list_0)
        var_3 = immutable_list_0.filter(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        var_0 = None
        immutable_list_0 = module_1.ImmutableList()
        var_1 = immutable_list_0.unshift(var_0)
        bool_0 = True
        immutable_list_1 = module_1.ImmutableList(var_0, bool_0)
        var_2 = immutable_list_1.__add__(var_1)
        var_3 = immutable_list_0.unshift(var_0)
        immutable_list_2 = module_1.ImmutableList()
        var_4 = immutable_list_1.__len__()
        var_5 = immutable_list_2.__add__(var_3)
        str_0 = "|drR2iUxP'~g+4{ lj"
        callable_0 = None
        var_6 = None
        optional_0 = immutable_list_0.find(str_0)
        var_7 = immutable_list_2.reduce(callable_0, var_6)
        callable_1 = None
        var_8 = immutable_list_1.map(callable_1)
    except BaseException:
        pass

def test_case_4():
    try:
        immutable_list_0 = module_1.ImmutableList()
        callable_0 = None
        bool_0 = False
        immutable_list_1 = module_1.ImmutableList(bool_0)
        var_0 = immutable_list_1.map(callable_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = '\x0c+0x'
        str_1 = 'iXLpHfmDV0'
        str_2 = '(jk"2ugD+XR-v?1wlR'
        dict_0 = {str_0: str_0, str_1: str_0, str_2: str_1, str_2: str_1}
        dict_1 = {}
        tuple_0 = (dict_0, dict_1)
        str_3 = '-xmF]^"@z[yJ$P`FOW0'
        int_0 = False
        list_0 = None
        int_1 = 3364
        dict_2 = {list_0: list_0, int_1: list_0, str_3: list_0, int_1: int_1}
        tuple_1 = (list_0, dict_2)
        immutable_list_0 = module_1.ImmutableList(tuple_1)
        var_0 = immutable_list_0.append(int_0)
        bool_0 = True
        immutable_list_1 = module_1.ImmutableList(str_3, var_0, bool_0)
        var_1 = immutable_list_1.filter(tuple_0)
    except BaseException:
        pass

def test_case_6():
    try:
        immutable_list_0 = module_1.ImmutableList()
        var_0 = immutable_list_0.filter(immutable_list_0)
    except BaseException:
        pass

def test_case_7():
    try:
        bool_0 = False
        immutable_list_0 = module_1.ImmutableList(bool_0)
        optional_0 = immutable_list_0.find(immutable_list_0)
    except BaseException:
        pass

def test_case_8():
    try:
        callable_0 = None
        str_0 = 'Elk5].xH48k~GP7<'
        set_0 = {str_0, str_0}
        bool_0 = False
        immutable_list_0 = module_1.ImmutableList(bool_0)
        var_0 = immutable_list_0.unshift(set_0)
        immutable_list_1 = module_1.ImmutableList(str_0, var_0)
        optional_0 = immutable_list_1.find(callable_0)
    except BaseException:
        pass

def test_case_9():
    try:
        immutable_list_0 = module_1.ImmutableList()
        str_0 = immutable_list_0.__str__()
        object_0 = module_0.object()
        bool_0 = immutable_list_0.__eq__(object_0)
        str_1 = immutable_list_0.__str__()
        str_2 = 't_XSliPxR:t]zit5(*/'
        float_0 = 1329.598199
        callable_0 = None
        optional_0 = immutable_list_0.find(callable_0)
        dict_0 = {str_0: object_0, str_2: float_0}
        var_0 = immutable_list_0.filter(dict_0)
    except BaseException:
        pass

def test_case_10():
    try:
        bool_0 = True
        immutable_list_0 = module_1.ImmutableList(bool_0)
        callable_0 = None
        var_0 = None
        var_1 = immutable_list_0.reduce(callable_0, var_0)
    except BaseException:
        pass

def test_case_11():
    try:
        callable_0 = None
        var_0 = None
        str_0 = ''
        bool_0 = True
        immutable_list_0 = module_1.ImmutableList(str_0, bool_0)
        var_1 = immutable_list_0.reduce(callable_0, var_0)
    except BaseException:
        pass

def test_case_12():
    try:
        immutable_list_0 = module_1.ImmutableList()
        bool_0 = False
        list_0 = [bool_0]
        var_0 = None
        var_1 = immutable_list_0.reduce(list_0, var_0)
        immutable_list_1 = module_1.ImmutableList(bool_0)
        list_1 = []
        object_0 = module_0.object()
        bool_1 = immutable_list_1.__eq__(object_0)
        var_2 = immutable_list_1.__len__()
        optional_0 = immutable_list_1.find(list_1)
    except BaseException:
        pass

def test_case_13():
    try:
        immutable_list_0 = module_1.ImmutableList()
        var_0 = immutable_list_0.to_list()
        object_0 = module_0.object()
        bool_0 = immutable_list_0.__eq__(object_0)
        str_0 = '~^E4Up[^'
        optional_0 = immutable_list_0.find(str_0)
        str_1 = immutable_list_0.__str__()
        dict_0 = {}
        optional_1 = immutable_list_0.find(dict_0)
        var_1 = None
        var_2 = immutable_list_0.to_list()
        var_3 = immutable_list_0.to_list()
        var_4 = immutable_list_0.__add__(var_1)
    except BaseException:
        pass

def test_case_14():
    try:
        float_0 = 420.840464
        var_0 = None
        str_0 = 'b'
        list_0 = [float_0, var_0, str_0, str_0]
        immutable_list_0 = module_1.ImmutableList(list_0)
        var_1 = immutable_list_0.append(var_0)
        immutable_list_1 = module_1.ImmutableList(str_0)
        var_2 = immutable_list_1.unshift(var_0)
        immutable_list_2 = module_1.ImmutableList(var_2)
        str_1 = '`Fz/e\x0cF=kdg^Wx\x0bv'
        var_3 = immutable_list_2.append(var_0)
        dict_0 = {str_1: str_1, str_1: float_0}
        bool_0 = False
        immutable_list_3 = module_1.ImmutableList(dict_0, bool_0)
        var_4 = immutable_list_3.__len__()
    except BaseException:
        pass