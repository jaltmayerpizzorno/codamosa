

# Generated at 2024-06-04 23:48:35.257271
```python
    ie = NRKTVEpisodesIE()
    assert ie._VALID_URL == r'https?://tv\.nrk\.no/program/[Ee]pisodes/[^/]+/(?P<id>\d+)', "URL pattern mismatch"
    assert ie._ITEM_RE == r'data-episode=["\']%s' % NRKTVIE._EPISODE_RE, "Item regex mismatch"
    assert len(ie._TESTS) == 1, "Number of tests mismatch"
    test_case = ie._TESTS[0]
    assert test_case['url'] == 'https://tv.nrk.no/program/episodes/nytt-paa-nytt/69031', "Test URL mismatch"
    assert test_case['info_dict']['id'] == '69031', "Test ID mismatch"
    assert test_case['info_dict']['title'] == 'Nytt på nytt, sesong: 201210', "Test title mismatch"
   

# Generated at 2024-06-04 23:48:37.634023
```python
    extractor = NRKBaseIE()
    assert extractor._GEO_COUNTRIES == ['NO']
    assert extractor._CDN_REPL_REGEX == r'''(?x)://
        (?:
            nrkod\d{1,2}-httpcache0-47115-cacheod0\.dna\.ip-only\.net/47115-cacheod0|
            nrk-od-no\.telenorcdn\.net|
            minicdn-od\.nrk\.no/od/nrkhd-osl-rr\.netwerk\.no/no
        )/'''
```

# Generated at 2024-06-04 23:48:42.345972
```python
    ie = NRKTVSeasonIE()
    assert ie._VALID_URL == r'''(?x)
                    https?://
                        (?P<domain>tv|radio)\.nrk\.no/
                        (?P<serie_kind>serie|pod[ck]ast)/
                        (?P<serie>[^/]+)/
                        (?:
                            (?:sesong/)?(?P<id>\d+)|
                            sesong/(?P<id_2>[^/?#&]+)
                        )
                    '''
    assert isinstance(ie._TESTS, list)
    assert len(ie._TESTS) > 0
    assert callable(ie._real_extract)
    assert callable(ie.suitable)
```

# Generated at 2024-06-04 23:48:45.833111
```python
    ie = NRKSkoleIE()
    assert ie.IE_DESC == 'NRK Skole'
    assert ie._VALID_URL == r'https?://(?:www\.)?nrk\.no/skole/?\?.*\bmediaId=(?P<id>\d+)'
    assert len(ie._TESTS) == 2
    assert ie._TESTS[0]['url'] == 'https://www.nrk.no/skole/?page=search&q=&mediaId=14099'
    assert ie._TESTS[1]['url'] == 'https://www.nrk.no/skole/?page=objectives&subject=naturfag&objective=K15114&mediaId=19355'
```

# Generated at 2024-06-04 23:48:50.676803
```python
    ie = NRKTVEpisodesIE()
    assert ie._VALID_URL == r'https?://tv\.nrk\.no/program/[Ee]pisodes/[^/]+/(?P<id>\d+)', "VALID_URL does not match"
    assert ie._ITEM_RE == r'data-episode=["\']%s' % NRKTVIE._EPISODE_RE, "ITEM_RE does not match"
    assert len(ie._TESTS) == 1, "Number of tests does not match"
    assert ie._TESTS[0]['url'] == 'https://tv.nrk.no/program/episodes/nytt-paa-nytt/69031', "Test URL does not match"
    assert ie._TESTS[0]['info_dict']['id'] == '69031', "Test info_dict id does not match"
    assert ie._TESTS[0]['info_dict']['title'] == 'Nytt på nytt,

# Generated at 2024-06-04 23:48:53.906107
```python
    extractor = NRKTVSerieBaseIE()
    assert extractor._ASSETS_KEYS == ('episodes', 'instalments')
    assert extractor._catalog_name('podcast') == 'podcast'
    assert extractor._catalog_name('series') == 'series'
    assert extractor._catalog_name('podkast') == 'podcast'
    assert extractor._catalog_name('other') == 'series'
    assert extractor._extract_entries([]) == []
    assert extractor._extract_entries([{'prfId': '1234'}]) == [{'url': 'nrk:1234', 'ie_key': NRKIE.ie_key(), 'video_id': '1234'}]
    assert extractor._extract_assets_key({'episodes': []}) == 'episodes'
    assert extractor._extract_assets_key({'instalments': []}) == 'instalments'
    assert extractor._extract_assets_key({'other': []}) is None
```

# Generated at 2024-06-04 23:48:57.385123
```python
    ie = NRKTVSeriesIE()
    assert ie._VALID_URL == r'https?://(?P<domain>(?:tv|radio)\.nrk|(?:tv\.)?nrksuper)\.no/(?P<serie_kind>serie|pod[ck]ast)/(?P<id>[^/]+)'
    assert isinstance(ie._TESTS, list)
    assert len(ie._TESTS) > 0
    assert ie._TESTS[0]['url'] == 'https://tv.nrk.no/serie/groenn-glede'
    assert ie._TESTS[0]['info_dict']['id'] == 'groenn-glede'
    assert ie._TESTS[0]['playlist_mincount'] == 90
```

# Generated at 2024-06-04 23:49:00.578422
```python
    ie = NRKSkoleIE()
    assert ie.IE_DESC == 'NRK Skole'
    assert ie._VALID_URL == r'https?://(?:www\.)?nrk\.no/skole/?\?.*\bmediaId=(?P<id>\d+)'
    assert len(ie._TESTS) == 2
    assert ie._TESTS[0]['url'] == 'https://www.nrk.no/skole/?page=search&q=&mediaId=14099'
    assert ie._TESTS[1]['url'] == 'https://www.nrk.no/skole/?page=objectives&subject=naturfag&objective=K15114&mediaId=19355'
```

# Generated at 2024-06-04 23:49:02.909100
```python
    extractor = NRKBaseIE()
    assert extractor._GEO_COUNTRIES == ['NO']
    assert extractor._CDN_REPL_REGEX == r'''(?x)://
        (?:
            nrkod\d{1,2}-httpcache0-47115-cacheod0\.dna\.ip-only\.net/47115-cacheod0|
            nrk-od-no\.telenorcdn\.net|
            minicdn-od\.nrk\.no/od/nrkhd-osl-rr\.netwerk\.no/no
        )/'''
```

# Generated at 2024-06-04 23:49:05.784912
```python
    ie = NRKTVEpisodeIE()
    assert ie._VALID_URL == r'https?://tv\.nrk\.no/serie/(?P<id>[^/]+/sesong/(?P<season_number>\d+)/episode/(?P<episode_number>\d+))'
    assert isinstance(ie._TESTS, list)
    assert len(ie._TESTS) > 0
    assert 'url' in ie._TESTS[0]
    assert 'info_dict' in ie._TESTS[0]
    assert 'id' in ie._TESTS[0]['info_dict']
    assert 'ext' in ie._TESTS[0]['info_dict']
    assert 'title' in ie._TESTS[0]['info_dict']
```

# Generated at 2024-06-04 23:49:53.420139
```python
    ie = NRKSkoleIE()
    assert ie.IE_DESC == 'NRK Skole'
    assert ie._VALID_URL == r'https?://(?:www\.)?nrk\.no/skole/?\?.*\bmediaId=(?P<id>\d+)'
    assert len(ie._TESTS) == 2
    assert ie._TESTS[0]['url'] == 'https://www.nrk.no/skole/?page=search&q=&mediaId=14099'
    assert ie._TESTS[1]['url'] == 'https://www.nrk.no/skole/?page=objectives&subject=naturfag&objective=K15114&mediaId=19355'
```

# Generated at 2024-06-04 23:49:56.932293
```python
    ie = NRKTVSeriesIE()
    assert ie._VALID_URL == r'https?://(?P<domain>(?:tv|radio)\.nrk|(?:tv\.)?nrksuper)\.no/(?P<serie_kind>serie|pod[ck]ast)/(?P<id>[^/]+)'
    assert isinstance(ie._TESTS, list)
    assert len(ie._TESTS) > 0
    assert ie._TESTS[0]['url'] == 'https://tv.nrk.no/serie/groenn-glede'
    assert ie._TESTS[0]['info_dict']['id'] == 'groenn-glede'
    assert ie._TESTS[0]['playlist_mincount'] == 90
```

# Generated at 2024-06-04 23:49:57.921314
```python
    ie = NRKPlaylistBaseIE()
    assert isinstance(ie, NRKPlaylistBaseIE)
```

# Generated at 2024-06-04 23:50:03.571501
```python
    ie = NRKSkoleIE()
    assert ie.IE_DESC == 'NRK Skole'
    assert ie._VALID_URL == r'https?://(?:www\.)?nrk\.no/skole/?\?.*\bmediaId=(?P<id>\d+)'
    assert len(ie._TESTS) == 2
    assert ie._TESTS[0]['url'] == 'https://www.nrk.no/skole/?page=search&q=&mediaId=14099'
    assert ie._TESTS[1]['url'] == 'https://www.nrk.no/skole/?page=objectives&subject=naturfag&objective=K15114&mediaId=19355'
```

# Generated at 2024-06-04 23:50:07.406928
```python
    ie = NRKPlaylistIE()
    assert ie._VALID_URL == r'https?://(?:www\.)?nrk\.no/(?!video|skole)(?:[^/]+/)+(?P<id>[^/]+)'
    assert ie._ITEM_RE == r'class="[^"]*\brich\b[^"]*"[^>]+data-video-id="([^"]+)"'
    assert len(ie._TESTS) == 2
    assert ie._TESTS[0]['url'] == 'http://www.nrk.no/troms/gjenopplev-den-historiske-solformorkelsen-1.12270763'
    assert ie._TESTS[1]['url'] == 'http://www.nrk.no/kultur/bok/rivertonprisen-til-karin-fossum-1.12266449'
    assert ie._TESTS[0]['info_dict']['id'] == 'gjenop

# Generated at 2024-06-04 23:50:10.809813
```python
    ie = NRKSkoleIE()
    assert ie.IE_DESC == 'NRK Skole'
    assert ie._VALID_URL == r'https?://(?:www\.)?nrk\.no/skole/?\?.*\bmediaId=(?P<id>\d+)'
    assert len(ie._TESTS) == 2
    assert ie._TESTS[0]['url'] == 'https://www.nrk.no/skole/?page=search&q=&mediaId=14099'
    assert ie._TESTS[1]['url'] == 'https://www.nrk.no/skole/?page=objectives&subject=naturfag&objective=K15114&mediaId=19355'
```

# Generated at 2024-06-04 23:50:13.286727
```python
    extractor = NRKBaseIE()
    assert extractor._GEO_COUNTRIES == ['NO']
    assert extractor._CDN_REPL_REGEX == r'''(?x)://
        (?:
            nrkod\d{1,2}-httpcache0-47115-cacheod0\.dna\.ip-only\.net/47115-cacheod0|
            nrk-od-no\.telenorcdn\.net|
            minicdn-od\.nrk\.no/od/nrkhd-osl-rr\.netwerk\.no/no
        )/'''
```

# Generated at 2024-06-04 23:50:16.516444
```python
    ie = NRKRadioPodkastIE()
    assert ie._VALID_URL == r'https?://radio\.nrk\.no/pod[ck]ast/(?:[^/]+/)+(?P<id>l_[\da-f]{8}-[\da-f]{4}-[\da-f]{4}-[\da-f]{4}-[\da-f]{12})'
    assert len(ie._TESTS) == 4
    assert ie._TESTS[0]['url'] == 'https://radio.nrk.no/podkast/ulrikkes_univers/l_96f4f1b0-de54-4e6a-b4f1-b0de54fe6af8'
    assert ie._TESTS[0]['md5'] == '8d40dab61cea8ab0114e090b029a0565'
    assert ie._TESTS[0]['info_dict']['id'] == '

# Generated at 2024-06-04 23:50:18.768381
```python
    extractor = NRKTVIE()
    assert extractor.IE_DESC == 'NRK TV and NRK Radio'
    assert extractor._EPISODE_RE == r'(?P<id>[a-zA-Z]{4}\d{8})'
    assert extractor._VALID_URL == r'https?://(?:tv|radio)\.nrk(?:super)?\.no/(?:[^/]+/)*%s' % extractor._EPISODE_RE
    assert isinstance(extractor._TESTS, list)
    assert len(extractor._TESTS) > 0
```

# Generated at 2024-06-04 23:50:22.005341
```python
    extractor = NRKTVSerieBaseIE()
    assert extractor._ASSETS_KEYS == ('episodes', 'instalments')
    assert extractor._catalog_name('podcast') == 'podcast'
    assert extractor._catalog_name('series') == 'series'
    assert extractor._catalog_name('podkast') == 'podcast'
    assert extractor._catalog_name('other') == 'series'
    print("All tests passed.")

test_NRKTVSerieBaseIE()
```

# Generated at 2024-06-04 23:51:09.722864
```python
    ie = NRKTVDirekteIE()
    assert ie.IE_DESC == 'NRK TV Direkte and NRK Radio Direkte'
    assert ie._VALID_URL == r'https?://(?:tv|radio)\.nrk\.no/direkte/(?P<id>[^/?#&]+)'
    assert len(ie._TESTS) == 2
    assert ie._TESTS[0]['url'] == 'https://tv.nrk.no/direkte/nrk1'
    assert ie._TESTS[1]['url'] == 'https://radio.nrk.no/direkte/p1_oslo_akershus'
```

# Generated at 2024-06-04 23:51:12.961032
```python
    ie = NRKTVEpisodesIE()
    assert ie._VALID_URL == r'https?://tv\.nrk\.no/program/[Ee]pisodes/[^/]+/(?P<id>\d+)'
    assert ie._ITEM_RE == r'data-episode=["\']%s' % NRKTVIE._EPISODE_RE
    assert len(ie._TESTS) == 1
    assert ie._TESTS[0]['url'] == 'https://tv.nrk.no/program/episodes/nytt-paa-nytt/69031'
    assert ie._TESTS[0]['info_dict']['id'] == '69031'
    assert ie._TESTS[0]['info_dict']['title'] == 'Nytt på nytt, sesong: 201210'
    assert ie._TESTS[0]['playlist_count'] == 4
```

# Generated at 2024-06-04 23:51:16.206848
```python
    ie = NRKTVSeasonIE()
    assert ie._VALID_URL == r'''(?x)
                    https?://
                        (?P<domain>tv|radio)\.nrk\.no/
                        (?P<serie_kind>serie|pod[ck]ast)/
                        (?P<serie>[^/]+)/
                        (?:
                            (?:sesong/)?(?P<id>\d+)|
                            sesong/(?P<id_2>[^/?#&]+)
                        )
                    '''
    assert isinstance(ie._TESTS, list)
    assert len(ie._TESTS) > 0
    assert all('url' in test for test in ie._TESTS)
    assert all('info_dict' in test for test in ie._TESTS if 'only_matching' not in test)
    assert callable(ie._real_extract)
    assert callable(ie.suitable)
```

# Generated at 2024-06-04 23:51:20.211459
```python
    ie = NRKPlaylistIE()
    assert ie._VALID_URL == r'https?://(?:www\.)?nrk\.no/(?!video|skole)(?:[^/]+/)+(?P<id>[^/]+)'
    assert ie._ITEM_RE == r'class="[^"]*\brich\b[^"]*"[^>]+data-video-id="([^"]+)"'
    assert len(ie._TESTS) == 2
    assert ie._TESTS[0]['url'] == 'http://www.nrk.no/troms/gjenopplev-den-historiske-solformorkelsen-1.12270763'
    assert ie._TESTS[1]['url'] == 'http://www.nrk.no/kultur/bok/rivertonprisen-til-karin-fossum-1.12266449'
    assert ie._TESTS[0]['info_dict']['id'] == 'gjenop

# Generated at 2024-06-04 23:51:23.790120
```python
    ie = NRKTVEpisodesIE()
    assert ie._VALID_URL == r'https?://tv\.nrk\.no/program/[Ee]pisodes/[^/]+/(?P<id>\d+)', "VALID_URL does not match"
    assert ie._ITEM_RE == r'data-episode=["\']%s' % NRKTVIE._EPISODE_RE, "ITEM_RE does not match"
    assert len(ie._TESTS) == 1, "Number of tests does not match"
    assert ie._TESTS[0]['url'] == 'https://tv.nrk.no/program/episodes/nytt-paa-nytt/69031', "Test URL does not match"
    assert ie._TESTS[0]['info_dict']['id'] == '69031', "Test info_dict id does not match"
    assert ie._TESTS[0]['info_dict']['title'] == 'Nytt på nytt,

# Generated at 2024-06-04 23:51:28.335495
```python
    ie = NRKTVSeriesIE()
    assert ie._VALID_URL == r'https?://(?P<domain>(?:tv|radio)\.nrk|(?:tv\.)?nrksuper)\.no/(?P<serie_kind>serie|pod[ck]ast)/(?P<id>[^/]+)'
    assert isinstance(ie._TESTS, list)
    assert len(ie._TESTS) > 0
    assert ie._TESTS[0]['url'] == 'https://tv.nrk.no/serie/groenn-glede'
    assert ie._TESTS[0]['info_dict']['id'] == 'groenn-glede'
    assert ie._TESTS[0]['playlist_mincount'] == 90
```

# Generated at 2024-06-04 23:51:30.631986
```python
    extractor = NRKBaseIE()
    assert extractor._GEO_COUNTRIES == ['NO']
    assert extractor._CDN_REPL_REGEX == r'''(?x)://
        (?:
            nrkod\d{1,2}-httpcache0-47115-cacheod0\.dna\.ip-only\.net/47115-cacheod0|
            nrk-od-no\.telenorcdn\.net|
            minicdn-od\.nrk\.no/od/nrkhd-osl-rr\.netwerk\.no/no
        )/'''
```

# Generated at 2024-06-04 23:51:33.312615
```python
    ie = NRKTVDirekteIE()
    assert ie.IE_DESC == 'NRK TV Direkte and NRK Radio Direkte'
    assert ie._VALID_URL == r'https?://(?:tv|radio)\.nrk\.no/direkte/(?P<id>[^/?#&]+)'
    assert len(ie._TESTS) == 2
    assert ie._TESTS[0]['url'] == 'https://tv.nrk.no/direkte/nrk1'
    assert ie._TESTS[1]['url'] == 'https://radio.nrk.no/direkte/p1_oslo_akershus'
```

# Generated at 2024-06-04 23:51:35.880458
```python
    ie = NRKTVDirekteIE()
    assert ie.IE_DESC == 'NRK TV Direkte and NRK Radio Direkte'
    assert ie._VALID_URL == r'https?://(?:tv|radio)\.nrk\.no/direkte/(?P<id>[^/?#&]+)'
    assert len(ie._TESTS) == 2
    assert ie._TESTS[0]['url'] == 'https://tv.nrk.no/direkte/nrk1'
    assert ie._TESTS[1]['url'] == 'https://radio.nrk.no/direkte/p1_oslo_akershus'
```

# Generated at 2024-06-04 23:51:39.285657
```python
    ie = NRKTVEpisodesIE()
    assert ie._VALID_URL == r'https?://tv\.nrk\.no/program/[Ee]pisodes/[^/]+/(?P<id>\d+)', "VALID_URL does not match"
    assert ie._ITEM_RE == r'data-episode=["\']%s' % NRKTVIE._EPISODE_RE, "ITEM_RE does not match"
    assert len(ie._TESTS) == 1, "Number of tests does not match"
    assert ie._TESTS[0]['url'] == 'https://tv.nrk.no/program/episodes/nytt-paa-nytt/69031', "Test URL does not match"
    assert ie._TESTS[0]['info_dict']['id'] == '69031', "Test info_dict id does not match"
    assert ie._TESTS[0]['info_dict']['title'] == 'Nytt på nytt,

# Generated at 2024-06-04 23:53:10.064395
```python
    ie = NRKRadioPodkastIE()
    assert ie._VALID_URL == r'https?://radio\.nrk\.no/pod[ck]ast/(?:[^/]+/)+(?P<id>l_[\da-f]{8}-[\da-f]{4}-[\da-f]{4}-[\da-f]{4}-[\da-f]{12})'
    assert len(ie._TESTS) == 4
    assert ie._TESTS[0]['url'] == 'https://radio.nrk.no/podkast/ulrikkes_univers/l_96f4f1b0-de54-4e6a-b4f1-b0de54fe6af8'
    assert ie._TESTS[0]['info_dict']['id'] == 'MUHH48000314AA'
    assert ie._TESTS[0]['info_dict']['ext'] == 'mp4'
    assert ie._TESTS

# Generated at 2024-06-04 23:53:12.154031
```python
    extractor = NRKTVSerieBaseIE()
    assert extractor._ASSETS_KEYS == ('episodes', 'instalments')
    assert extractor._catalog_name('podcast') == 'podcast'
    assert extractor._catalog_name('series') == 'series'
    assert extractor._catalog_name('podkast') == 'podcast'
    assert extractor._catalog_name('other') == 'series'
    print("All tests passed.")

test_NRKTVSerieBaseIE()
```

# Generated at 2024-06-04 23:53:14.844581
```python
    ie = NRKTVDirekteIE()
    assert ie.IE_DESC == 'NRK TV Direkte and NRK Radio Direkte'
    assert ie._VALID_URL == r'https?://(?:tv|radio)\.nrk\.no/direkte/(?P<id>[^/?#&]+)'
    assert len(ie._TESTS) == 2
    assert ie._TESTS[0]['url'] == 'https://tv.nrk.no/direkte/nrk1'
    assert ie._TESTS[1]['url'] == 'https://radio.nrk.no/direkte/p1_oslo_akershus'
```

# Generated at 2024-06-04 23:53:16.148284
```python
    ie = NRKIE()
    assert isinstance(ie, NRKIE)
    assert ie._VALID_URL is not None
    assert ie._GEO_COUNTRIES == ['NO']
```

# Generated at 2024-06-04 23:53:18.733319
```python
    extractor = NRKBaseIE()
    assert extractor._GEO_COUNTRIES == ['NO']
    assert extractor._CDN_REPL_REGEX == r'''(?x)://
        (?:
            nrkod\d{1,2}-httpcache0-47115-cacheod0\.dna\.ip-only\.net/47115-cacheod0|
            nrk-od-no\.telenorcdn\.net|
            minicdn-od\.nrk\.no/od/nrkhd-osl-rr\.netwerk\.no/no
        )/'''
```

# Generated at 2024-06-04 23:53:20.558544
```python
    extractor = NRKTVSerieBaseIE()
    assert extractor._ASSETS_KEYS == ('episodes', 'instalments')
    assert extractor._catalog_name('podcast') == 'podcast'
    assert extractor._catalog_name('series') == 'series'
    assert extractor._catalog_name('podkast') == 'podcast'
    assert extractor._catalog_name('other') == 'series'
    print("All tests passed.")

test_NRKTVSerieBaseIE()
```

# Generated at 2024-06-04 23:53:23.834182
```python
    ie = NRKTVEpisodesIE()
    assert ie._VALID_URL == r'https?://tv\.nrk\.no/program/[Ee]pisodes/[^/]+/(?P<id>\d+)', "VALID_URL does not match"
    assert ie._ITEM_RE == r'data-episode=["\']%s' % NRKTVIE._EPISODE_RE, "ITEM_RE does not match"
    assert len(ie._TESTS) == 1, "Number of tests does not match"
    assert ie._TESTS[0]['url'] == 'https://tv.nrk.no/program/episodes/nytt-paa-nytt/69031', "Test URL does not match"
    assert ie._TESTS[0]['info_dict']['id'] == '69031', "Test info_dict id does not match"
    assert ie._TESTS[0]['info_dict']['title'] == 'Nytt på nytt,

# Generated at 2024-06-04 23:53:27.242576
```python
    ie = NRKTVEpisodeIE()
    assert ie._VALID_URL == r'https?://tv\.nrk\.no/serie/(?P<id>[^/]+/sesong/(?P<season_number>\d+)/episode/(?P<episode_number>\d+))'
    assert isinstance(ie._TESTS, list)
    assert len(ie._TESTS) > 0
    assert 'url' in ie._TESTS[0]
    assert 'info_dict' in ie._TESTS[0]
    assert 'id' in ie._TESTS[0]['info_dict']
    assert 'ext' in ie._TESTS[0]['info_dict']
    assert 'title' in ie._TESTS[0]['info_dict']
```

# Generated at 2024-06-04 23:53:30.105531
```python
    ie = NRKTVSeriesIE()
    assert ie._VALID_URL == r'https?://(?P<domain>(?:tv|radio)\.nrk|(?:tv\.)?nrksuper)\.no/(?P<serie_kind>serie|pod[ck]ast)/(?P<id>[^/]+)'
    assert isinstance(ie._TESTS, list)
    assert len(ie._TESTS) > 0
    assert ie._TESTS[0]['url'] == 'https://tv.nrk.no/serie/groenn-glede'
    assert ie._TESTS[0]['info_dict']['id'] == 'groenn-glede'
    assert ie._TESTS[0]['playlist_mincount'] == 90
```

# Generated at 2024-06-04 23:53:32.691459
```python
    ie = NRKTVDirekteIE()
    assert ie.IE_DESC == 'NRK TV Direkte and NRK Radio Direkte'
    assert ie._VALID_URL == r'https?://(?:tv|radio)\.nrk\.no/direkte/(?P<id>[^/?#&]+)'
    assert len(ie._TESTS) == 2
    assert ie._TESTS[0]['url'] == 'https://tv.nrk.no/direkte/nrk1'
    assert ie._TESTS[1]['url'] == 'https://radio.nrk.no/direkte/p1_oslo_akershus'
```

# Generated at 2024-06-04 23:56:28.728459
```python
    ie = NRKSkoleIE()
    assert ie.IE_DESC == 'NRK Skole'
    assert ie._VALID_URL == r'https?://(?:www\.)?nrk\.no/skole/?\?.*\bmediaId=(?P<id>\d+)'
    assert len(ie._TESTS) == 2
    assert ie._TESTS[0]['url'] == 'https://www.nrk.no/skole/?page=search&q=&mediaId=14099'
    assert ie._TESTS[1]['url'] == 'https://www.nrk.no/skole/?page=objectives&subject=naturfag&objective=K15114&mediaId=19355'
```

# Generated at 2024-06-04 23:56:32.503641
```python
    ie = NRKTVSeriesIE()
    assert ie._VALID_URL == r'https?://(?P<domain>(?:tv|radio)\.nrk|(?:tv\.)?nrksuper)\.no/(?P<serie_kind>serie|pod[ck]ast)/(?P<id>[^/]+)'
    assert isinstance(ie._TESTS, list)
    assert len(ie._TESTS) > 0
    assert ie._TESTS[0]['url'] == 'https://tv.nrk.no/serie/groenn-glede'
    assert ie._TESTS[0]['info_dict']['id'] == 'groenn-glede'
    assert ie._TESTS[0]['playlist_mincount'] == 90
```

# Generated at 2024-06-04 23:56:33.836315
```python
    ie = NRKPlaylistBaseIE()
    assert isinstance(ie, NRKPlaylistBaseIE)
    assert hasattr(ie, '_extract_description')
    assert hasattr(ie, '_real_extract')
```

# Generated at 2024-06-04 23:56:36.230001
```python
    extractor = NRKBaseIE()
    assert extractor._GEO_COUNTRIES == ['NO']
    assert extractor._CDN_REPL_REGEX == r'''(?x)://
        (?:
            nrkod\d{1,2}-httpcache0-47115-cacheod0\.dna\.ip-only\.net/47115-cacheod0|
            nrk-od-no\.telenorcdn\.net|
            minicdn-od\.nrk\.no/od/nrkhd-osl-rr\.netwerk\.no/no
        )/'''
```

# Generated at 2024-06-04 23:56:41.957878
```python
    ie = NRKTVEpisodesIE()
    assert ie._VALID_URL == r'https?://tv\.nrk\.no/program/[Ee]pisodes/[^/]+/(?P<id>\d+)', "VALID_URL does not match"
    assert ie._ITEM_RE == r'data-episode=["\']%s' % NRKTVIE._EPISODE_RE, "ITEM_RE does not match"
    assert len(ie._TESTS) == 1, "Number of tests does not match"
    assert ie._TESTS[0]['url'] == 'https://tv.nrk.no/program/episodes/nytt-paa-nytt/69031', "Test URL does not match"
    assert ie._TESTS[0]['info_dict']['id'] == '69031', "Test info_dict id does not match"
    assert ie._TESTS[0]['info_dict']['title'] == 'Nytt på nytt,

# Generated at 2024-06-04 23:56:44.293325
```python
    ie = NRKTVEpisodeIE()
    assert ie._VALID_URL == r'https?://tv\.nrk\.no/serie/(?P<id>[^/]+/sesong/(?P<season_number>\d+)/episode/(?P<episode_number>\d+))'
    assert len(ie._TESTS) == 2
    assert ie._TESTS[0]['url'] == 'https://tv.nrk.no/serie/hellums-kro/sesong/1/episode/2'
    assert ie._TESTS[1]['url'] == 'https://tv.nrk.no/serie/backstage/sesong/1/episode/8'
```

# Generated at 2024-06-04 23:56:45.570641
```python
    ie = NRKIE()
    assert isinstance(ie, NRKIE)
    assert ie._VALID_URL is not None
    assert ie._GEO_COUNTRIES == ['NO']
```

# Generated at 2024-06-04 23:56:48.118252
```python
    extractor = NRKTVIE()
    assert extractor.IE_DESC == 'NRK TV and NRK Radio'
    assert extractor._EPISODE_RE == r'(?P<id>[a-zA-Z]{4}\d{8})'
    assert extractor._VALID_URL == r'https?://(?:tv|radio)\.nrk(?:super)?\.no/(?:[^/]+/)*%s' % extractor._EPISODE_RE
    assert isinstance(extractor._TESTS, list)
    assert len(extractor._TESTS) > 0
    assert 'url' in extractor._TESTS[0]
    assert 'info_dict' in extractor._TESTS[0]
```

# Generated at 2024-06-04 23:56:52.395559
```python
    ie = NRKTVSeriesIE()
    assert ie._VALID_URL == r'https?://(?P<domain>(?:tv|radio)\.nrk|(?:tv\.)?nrksuper)\.no/(?P<serie_kind>serie|pod[ck]ast)/(?P<id>[^/]+)'
    assert isinstance(ie._TESTS, list)
    assert len(ie._TESTS) > 0
    assert ie._TESTS[0]['url'] == 'https://tv.nrk.no/serie/groenn-glede'
    assert ie._TESTS[0]['info_dict']['id'] == 'groenn-glede'
    assert ie._TESTS[0]['playlist_mincount'] == 90
```

# Generated at 2024-06-04 23:56:57.583788
```python
    ie = NRKTVEpisodesIE()
    assert ie._VALID_URL == r'https?://tv\.nrk\.no/program/[Ee]pisodes/[^/]+/(?P<id>\d+)', "VALID_URL does not match"
    assert ie._ITEM_RE == r'data-episode=["\']%s' % NRKTVIE._EPISODE_RE, "ITEM_RE does not match"
    assert len(ie._TESTS) == 1, "Number of tests does not match"
    assert ie._TESTS[0]['url'] == 'https://tv.nrk.no/program/episodes/nytt-paa-nytt/69031', "Test URL does not match"
    assert ie._TESTS[0]['info_dict']['id'] == '69031', "Test info_dict id does not match"
    assert ie._TESTS[0]['info_dict']['title'] == 'Nytt på nytt,