# Automatically generated by Pynguin.
import ansible.parsing.mod_args as module_0

def test_case_0():
    try:
        bool_0 = True
        module_args_parser_0 = module_0.ModuleArgsParser(bool_0)
    except BaseException:
        pass

def test_case_1():
    try:
        module_args_parser_0 = module_0.ModuleArgsParser()
        var_0 = module_args_parser_0.parse()
    except BaseException:
        pass

def test_case_2():
    try:
        dict_0 = None
        dict_1 = {dict_0: dict_0}
        module_args_parser_0 = module_0.ModuleArgsParser(dict_1)
        var_0 = module_args_parser_0.parse()
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'a'
        str_1 = {str_0: str_0}
        module_args_parser_0 = module_0.ModuleArgsParser(str_1)
        var_0 = module_args_parser_0.parse(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'tion'
        str_1 = {str_0: str_0}
        module_args_parser_0 = module_0.ModuleArgsParser(str_1)
        var_0 = module_args_parser_0.parse()
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'action'
        str_1 = 'copy src=a des#=b'
        str_2 = {str_0: str_1, str_1: str_1, str_1: str_1, str_1: str_1}
        module_args_parser_0 = module_0.ModuleArgsParser(str_2)
        bytes_0 = b'\xb9\xd2\xbc\xaa'
        var_0 = module_args_parser_0.parse()
        var_1 = module_args_parser_0.parse(bytes_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'action'
        module_args_parser_0 = module_0.ModuleArgsParser()
        str_1 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: module_args_parser_0}
        module_args_parser_1 = module_0.ModuleArgsParser()
        module_args_parser_2 = module_0.ModuleArgsParser(str_1)
        var_0 = module_args_parser_2.parse()
    except BaseException:
        pass

def test_case_7():
    try:
        dict_0 = {}
        str_0 = 'oa'
        str_1 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0, str_0: dict_0}
        module_args_parser_0 = module_0.ModuleArgsParser(str_1)
        var_0 = module_args_parser_0.parse(str_0)
        var_1 = module_args_parser_0.parse()
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = 'action'
        str_1 = 'y rc=ades='
        str_2 = {str_0: str_1, str_1: str_1, str_1: str_1, str_1: str_1}
        module_args_parser_0 = module_0.ModuleArgsParser(str_2)
        dict_0 = {str_0: str_2}
        module_args_parser_1 = module_0.ModuleArgsParser(dict_0)
        var_0 = module_args_parser_1.parse()
    except BaseException:
        pass