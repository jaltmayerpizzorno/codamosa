

# Generated at 2024-06-01 18:30:21.159784
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary of the function.

    Args:
        param1 (int): Description of param1.
        param2 (str): Description of param2.

    Returns:
        bool: Description of return value.
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].name == "param1"
    assert result.meta[1].returns.type_name == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary of the function.

    Parameters
    ----------
    param1 : int
        Description of param1.
    param2 : str
        Description of param2.

    Returns
    -------
   

# Generated at 2024-06-01 18:30:25.283071
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1
        param2 (str): Description of param2

    Returns:
        bool: Description of return value
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert len(result.meta) == 3

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1
    param2 : str
        Description of param2

    Returns
    -------
    bool
        Description of return value
    """
    result = parse(numpy_docstring, Style.numpy)
    assert isinstance

# Generated at 2024-06-01 18:30:28.742412
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary of the function.

    Args:
        param1 (int): Description of param1.
        param2 (str): Description of param2.

    Returns:
        bool: Description of return value.
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].name == "param1"
    assert result.meta[1].returns.type_name == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary of the function.

    Parameters
    ----------
    param1 : int
        Description of param1.
    param2 : str
        Description of param2.

    Returns
    -------
   

# Generated at 2024-06-01 18:30:32.145156
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1
        param2 (str): Description of param2

    Returns:
        bool: Description of return value
    """
    result = parse(google_docstring, style=Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].name == "param1"
    assert result.meta[1].returns.type_name == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1
    param2 : str
        Description of param2

    Returns
    -------
    bool


# Generated at 2024-06-01 18:30:35.357861
```python
    from docstring_parser.common import Docstring
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary of the function.

    Args:
        param1 (int): Description of param1.
        param2 (str): Description of param2.

    Returns:
        bool: Description of return value.
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].name == "param1"
    assert result.meta[1].returns.type_name == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary of the function.

    Parameters
    ----------
    param1 : int
        Description of param1.
    param2 : str
        Description of param2.

    Returns
    -------
    bool
       

# Generated at 2024-06-01 18:30:38.299008
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1
        param2 (str): Description of param2

    Returns:
        bool: Description of return value
    """
    result = parse(google_docstring, style=Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].name == "param1"
    assert result.meta[1].returns.type_name == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1
    param2 : str
        Description of param2

    Returns
    -------
    bool


# Generated at 2024-06-01 18:30:41.383356
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary of the function.

    Args:
        param1 (int): Description of param1.
        param2 (str): Description of param2.

    Returns:
        bool: Description of return value.
    """
    result = parse(google_docstring, style=Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].name == "param1"
    assert result.meta[1].returns.type_name == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary of the function.

    Parameters
    ----------
    param1 : int
        Description of param1.
    param2 : str
        Description of param2.

    Returns
   

# Generated at 2024-06-01 18:30:44.054618
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1
        param2 (str): Description of param2

    Returns:
        bool: Description of return value
    """
    result = parse(google_docstring, style=Style.google)
    assert isinstance(result, Docstring)
    assert len(result.meta) == 3

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1
    param2 : str
        Description of param2

    Returns
    -------
    bool
        Description of return value
    """
    result = parse(numpy_docstring, style=Style.numpy

# Generated at 2024-06-01 18:30:47.390881
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1
        param2 (str): Description of param2

    Returns:
        bool: Description of return value
    """
    result = parse(google_docstring, style=Style.google)
    assert isinstance(result, Docstring)
    assert len(result.meta) == 3

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1
    param2 : str
        Description of param2

    Returns
    -------
    bool
        Description of return value
    """
    result = parse(numpy_docstring, style=Style.numpy

# Generated at 2024-06-01 18:30:50.900955
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary of the function.

    Args:
        param1 (int): Description of param1.
        param2 (str): Description of param2.

    Returns:
        bool: Description of return value.
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].name == "param1"
    assert result.meta[1].returns.type_name == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary of the function.

    Parameters
    ----------
    param1 : int
        Description of param1.
    param2 : str
        Description of param2.

    Returns
    -------
   

# Generated at 2024-06-01 18:31:05.065495
```python
    from docstring_parser.common import Docstring
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1
        param2 (str): Description of param2

    Returns:
        bool: Description of return value
    """
    result = parse(google_docstring, style=Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].arg_name == "param1"
    assert result.meta[1].returns.type_name == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1
    param2 : str
        Description of param2

    Returns
    -------
    bool
        Description

# Generated at 2024-06-01 18:31:08.125709
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1
        param2 (str): Description of param2

    Returns:
        bool: Description of return value
    """
    result = parse(google_docstring, style=Style.google)
    assert isinstance(result, Docstring)
    assert len(result.meta) == 3

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1
    param2 : str
        Description of param2

    Returns
    -------
    bool
        Description of return value
    """
    result = parse(numpy_docstring, style=Style.numpy

# Generated at 2024-06-01 18:31:11.113035
```python
    from docstring_parser.common import Docstring
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary of the function.

    Args:
        param1 (int): Description of param1.
        param2 (str): Description of param2.

    Returns:
        bool: Description of return value.
    """
    result = parse(google_docstring, style=Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].name == "param1"
    assert result.meta[1].returns[0].type_name == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary of the function.

    Parameters
    ----------
    param1 : int
        Description of param1.
    param2 : str
        Description of param2.

    Returns
   

# Generated at 2024-06-01 18:31:13.883829
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary of the function.

    Args:
        param1 (int): Description of param1.
        param2 (str): Description of param2.

    Returns:
        bool: Description of return value.
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].name == "param1"
    assert result.meta[1].returns.type_name == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary of the function.

    Parameters
    ----------
    param1 : int
        Description of param1.
    param2 : str
        Description of param2.

    Returns
    -------
   

# Generated at 2024-06-01 18:31:19.938784
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1
        param2 (str): Description of param2

    Returns:
        bool: Description of return value
    """
    result = parse(google_docstring, style=Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].arg_name == "param1"
    assert result.meta[1].returns == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1
    param2 : str
        Description of param2

    Returns
    -------
    bool
       

# Generated at 2024-06-01 18:31:23.299916
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary of the function.

    Args:
        param1 (int): Description of param1.
        param2 (str): Description of param2.

    Returns:
        bool: Description of return value.
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].name == "param1"
    assert result.meta[0].args[1].name == "param2"
    assert result.meta[1].type_name == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary of the function.

    Parameters
    ----------
    param1 : int
        Description of param1.
    param

# Generated at 2024-06-01 18:31:26.676783
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1
        param2 (str): Description of param2

    Returns:
        bool: Description of return value
    """
    result = parse(google_docstring, style=Style.google)
    assert isinstance(result, Docstring)
    assert len(result.meta) == 3

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1
    param2 : str
        Description of param2

    Returns
    -------
    bool
        Description of return value
    """
    result = parse(numpy_docstring, style=Style.numpy

# Generated at 2024-06-01 18:31:29.866848
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary of the function.

    Args:
        param1 (int): Description of param1.
        param2 (str): Description of param2.

    Returns:
        bool: Description of return value.
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert len(result.meta) == 3

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary of the function.

    Parameters
    ----------
    param1 : int
        Description of param1.
    param2 : str
        Description of param2.

    Returns
    -------
    bool
        Description of return value.
    """
    result = parse(numpy_docstring, Style.numpy

# Generated at 2024-06-01 18:31:33.723672
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1
        param2 (str): Description of param2

    Returns:
        bool: Description of return value
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].arg_name == "param1"
    assert result.meta[1].returns == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1
    param2 : str
        Description of param2

    Returns
    -------
    bool
        Description of

# Generated at 2024-06-01 18:31:36.803160
```python
    from docstring_parser.common import Docstring
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary of the function.

    Args:
        param1 (int): Description of param1.
        param2 (str): Description of param2.

    Returns:
        bool: Description of return value.
    """
    result = parse(google_docstring, style=Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].name == "param1"
    assert result.meta[0].args[1].name == "param2"
    assert result.meta[1].returns[0].type_name == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary of the function.

    Parameters
    ----------
    param1 : int
        Description of param1

# Generated at 2024-06-01 18:31:51.890220
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1
        param2 (str): Description of param2

    Returns:
        bool: Description of return value
    """
    result = parse(google_docstring, style=Style.google)
    assert isinstance(result, Docstring)
    assert len(result.meta) == 3

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1
    param2 : str
        Description of param2

    Returns
    -------
    bool
        Description of return value
    """
    result = parse(numpy_docstring, style=Style.numpy

# Generated at 2024-06-01 18:31:55.265521
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1
        param2 (str): Description of param2

    Returns:
        bool: Description of return value
    """
    result = parse(google_docstring, style=Style.google)
    assert isinstance(result, Docstring)
    assert len(result.meta) == 3

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1
    param2 : str
        Description of param2

    Returns
    -------
    bool
        Description of return value
    """
    result = parse(numpy_docstring, style=Style.numpy

# Generated at 2024-06-01 18:31:58.665418
```python
    from docstring_parser.common import Docstring
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1
        param2 (str): Description of param2

    Returns:
        bool: Description of return value
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].name == "param1"
    assert result.meta[1].returns.type_name == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1
    param2 : str
        Description of param2

    Returns
    -------
    bool
        Description of return value

# Generated at 2024-06-01 18:32:01.509409
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary of the function.

    Args:
        param1 (int): Description of param1.
        param2 (str): Description of param2.

    Returns:
        bool: Description of return value.
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].name == "param1"
    assert result.meta[1].returns.type_name == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary of the function.

    Parameters
    ----------
    param1 : int
        Description of param1.
    param2 : str
        Description of param2.

    Returns
    -------
   

# Generated at 2024-06-01 18:32:06.304866
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1
        param2 (str): Description of param2

    Returns:
        bool: Description of return value
    """
    result = parse(google_docstring, style=Style.google)
    assert isinstance(result, Docstring)
    assert len(result.meta) == 3

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1
    param2 : str
        Description of param2

    Returns
    -------
    bool
        Description of return value
    """
    result = parse(numpy_docstring, style=Style.numpy

# Generated at 2024-06-01 18:32:09.150008
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1
        param2 (str): Description of param2

    Returns:
        bool: Description of return value
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].name == "param1"
    assert result.meta[1].returns.type_name == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1
    param2 : str
        Description of param2

    Returns
    -------
    bool
        Description

# Generated at 2024-06-01 18:32:11.948923
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1
        param2 (str): Description of param2

    Returns:
        bool: Description of return value
    """
    result = parse(google_docstring, style=Style.google)
    assert isinstance(result, Docstring)
    assert len(result.meta) == 3

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1
    param2 : str
        Description of param2

    Returns
    -------
    bool
        Description of return value
    """
    result = parse(numpy_docstring, style=Style.numpy

# Generated at 2024-06-01 18:32:15.201060
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary of the function.

    Args:
        param1 (int): Description of param1.
        param2 (str): Description of param2.

    Returns:
        bool: Description of return value.
    """
    result = parse(google_docstring, style=Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].name == "param1"
    assert result.meta[1].returns.type_name == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary of the function.

    Parameters
    ----------
    param1 : int
        Description of param1.
    param2 : str
        Description of param2.

    Returns
   

# Generated at 2024-06-01 18:32:18.528876
```python
    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1.
        param2 (str): Description of param2.

    Returns:
        bool: Description of return value.
    """
    result = parse(google_docstring, Style.google)
    assert result.short_description == "Summary line."
    assert len(result.params) == 2
    assert result.params[0].arg_name == "param1"
    assert result.params[1].arg_name == "param2"
    assert result.returns.type_name == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1.
    param2 : str
        Description of param2.

    Returns
    -------
    bool
        Description of return

# Generated at 2024-06-01 18:32:21.217475
```python
    from docstring_parser.common import Docstring
    from docstring_parser.styles import Style

    # Test case 1: Parsing with a specific style
    docstring_text = """
    This is a test function.

    :param x: Description of parameter x
    :returns: Description of return value
    """
    result = parse(docstring_text, style=Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0] == 'x'
    assert result.meta[1].description == 'Description of return value'

    # Test case 2: Parsing with auto style
    result = parse(docstring_text)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0] == 'x'
    assert result.meta[1].description == 'Description of return value'

    # Test case 3: Parsing with an invalid style
    try:
        parse(docstring_text,

# Generated at 2024-06-01 18:32:32.233079
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary of the function.

    Args:
        param1 (int): Description of param1.
        param2 (str): Description of param2.

    Returns:
        bool: Description of return value.
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].name == "param1"
    assert result.meta[1].returns.type_name == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary of the function.

    Parameters
    ----------
    param1 : int
        Description of param1.
    param2 : str
        Description of param2.

    Returns
    -------
   

# Generated at 2024-06-01 18:32:35.272333
```python
    from docstring_parser.common import Docstring
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary of the function.

    Args:
        param1 (int): Description of param1.
        param2 (str): Description of param2.

    Returns:
        bool: Description of return value.
    """
    result = parse(google_docstring, style=Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].name == "param1"
    assert result.meta[1].returns.type_name == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary of the function.

    Parameters
    ----------
    param1 : int
        Description of param1.
    param2 : str
        Description of param2.

    Returns
    -------
    bool

# Generated at 2024-06-01 18:32:38.620562
```python
    from docstring_parser.common import Docstring
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary of the function.

    Args:
        param1 (int): Description of param1.
        param2 (str): Description of param2.

    Returns:
        bool: Description of return value.
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].name == "param1"
    assert result.meta[0].args[1].name == "param2"
    assert result.meta[1].returns[0].type_name == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary of the function.

    Parameters
    ----------
    param1 : int
        Description of param1.
   

# Generated at 2024-06-01 18:32:41.978762
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1
        param2 (str): Description of param2

    Returns:
        bool: Description of return value
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].arg_name == "param1"
    assert result.meta[1].returns == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1
    param2 : str
        Description of param2

    Returns
    -------
    bool
        Description of

# Generated at 2024-06-01 18:32:44.823981
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1
        param2 (str): Description of param2

    Returns:
        bool: Description of return value
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert len(result.meta) == 3

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1
    param2 : str
        Description of param2

    Returns
    -------
    bool
        Description of return value
    """
    result = parse(numpy_docstring, Style.numpy)
    assert isinstance

# Generated at 2024-06-01 18:32:48.029439
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1
        param2 (str): Description of param2

    Returns:
        bool: Description of return value
    """
    result = parse(google_docstring, style=Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].name == "param1"
    assert result.meta[1].args[0].name == "param2"
    assert result.meta[2].type_name == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1
    param2 :

# Generated at 2024-06-01 18:32:53.039339
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary of the function.

    Args:
        param1 (int): Description of param1.
        param2 (str): Description of param2.

    Returns:
        bool: Description of return value.
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].name == "param1"
    assert result.meta[1].returns.type_name == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary of the function.

    Parameters
    ----------
    param1 : int
        Description of param1.
    param2 : str
        Description of param2.

    Returns
    -------
   

# Generated at 2024-06-01 18:32:56.326913
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1
        param2 (str): Description of param2

    Returns:
        bool: Description of return value
    """
    result = parse(google_docstring, style=Style.google)
    assert isinstance(result, Docstring)
    assert len(result.meta) == 3

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1
    param2 : str
        Description of param2

    Returns
    -------
    bool
        Description of return value
    """
    result = parse(numpy_docstring, style=Style.numpy

# Generated at 2024-06-01 18:32:59.672803
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1.
        param2 (str): Description of param2.

    Returns:
        bool: Description of return value.
    """
    result = parse(google_docstring, style=Style.google)
    assert isinstance(result, Docstring)
    assert len(result.meta) == 3

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1.
    param2 : str
        Description of param2.

    Returns
    -------
    bool
        Description of return value.
    """
    result = parse(numpy_docstring, style=Style.numpy

# Generated at 2024-06-01 18:33:02.447211
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1
        param2 (str): Description of param2

    Returns:
        bool: Description of return value
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert len(result.meta) == 3

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1
    param2 : str
        Description of param2

    Returns
    -------
    bool
        Description of return value
    """
    result = parse(numpy_docstring, Style.numpy)
    assert isinstance

# Generated at 2024-06-01 18:33:12.881405
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary of the function.

    Args:
        param1 (int): Description of param1.
        param2 (str): Description of param2.

    Returns:
        bool: Description of return value.
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].name == "param1"
    assert result.meta[1].returns.type_name == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary of the function.

    Parameters
    ----------
    param1 : int
        Description of param1.
    param2 : str
        Description of param2.

    Returns
    -------
   

# Generated at 2024-06-01 18:33:15.796400
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1
        param2 (str): Description of param2

    Returns:
        bool: Description of return value
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].name == "param1"
    assert result.meta[1].returns.type_name == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1
    param2 : str
        Description of param2

    Returns
    -------
    bool
        Description

# Generated at 2024-06-01 18:33:18.933340
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1
        param2 (str): Description of param2

    Returns:
        bool: Description of return value
    """
    result = parse(google_docstring, style=Style.google)
    assert isinstance(result, Docstring)
    assert len(result.meta) == 3

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1
    param2 : str
        Description of param2

    Returns
    -------
    bool
        Description of return value
    """
    result = parse(numpy_docstring, style=Style.numpy

# Generated at 2024-06-01 18:33:22.099384
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1
        param2 (str): Description of param2

    Returns:
        bool: Description of return value
    """
    result = parse(google_docstring, style=Style.google)
    assert isinstance(result, Docstring)
    assert len(result.meta) == 3

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1
    param2 : str
        Description of param2

    Returns
    -------
    bool
        Description of return value
    """
    result = parse(numpy_docstring, style=Style.numpy

# Generated at 2024-06-01 18:33:25.894921
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary of the function.

    Args:
        param1 (int): Description of param1.
        param2 (str): Description of param2.

    Returns:
        bool: Description of return value.
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert len(result.meta) == 3

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary of the function.

    Parameters
    ----------
    param1 : int
        Description of param1.
    param2 : str
        Description of param2.

    Returns
    -------
    bool
        Description of return value.
    """
    result = parse(numpy_docstring, Style.numpy

# Generated at 2024-06-01 18:33:28.776267
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary of the function.

    Args:
        param1 (int): Description of param1.
        param2 (str): Description of param2.

    Returns:
        bool: Description of return value.
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].name == "param1"
    assert result.meta[1].returns.type_name == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary of the function.

    Parameters
    ----------
    param1 : int
        Description of param1.
    param2 : str
        Description of param2.

    Returns
    -------
   

# Generated at 2024-06-01 18:33:32.058937
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1
        param2 (str): Description of param2

    Returns:
        bool: Description of return value
    """
    result = parse(google_docstring, style=Style.google)
    assert isinstance(result, Docstring)
    assert len(result.meta) == 3

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1
    param2 : str
        Description of param2

    Returns
    -------
    bool
        Description of return value
    """
    result = parse(numpy_docstring, style=Style.numpy

# Generated at 2024-06-01 18:33:35.408718
```python
    from docstring_parser.common import Docstring
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary of the function.

    Args:
        param1 (int): Description of param1.
        param2 (str): Description of param2.

    Returns:
        bool: Description of return value.
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].arg_name == "param1"
    assert result.meta[0].args[1].arg_name == "param2"
    assert result.meta[1].returns[0].type_name == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary of the function.

    Parameters
    ----------
    param1 : int
        Description of param1

# Generated at 2024-06-01 18:33:38.924458
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1
        param2 (str): Description of param2

    Returns:
        bool: Description of return value
    """
    result = parse(google_docstring, style=Style.google)
    assert isinstance(result, Docstring)
    assert len(result.meta) == 3

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1
    param2 : str
        Description of param2

    Returns
    -------
    bool
        Description of return value
    """
    result = parse(numpy_docstring, style=Style.numpy

# Generated at 2024-06-01 18:33:42.826328
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1
        param2 (str): Description of param2

    Returns:
        bool: Description of return value
    """
    result = parse(google_docstring, style=Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].name == "param1"
    assert result.meta[1].args[0].name == "param2"
    assert result.meta[2].returns[0].type_name == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1


# Generated at 2024-06-01 18:33:55.305105
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1
        param2 (str): Description of param2

    Returns:
        bool: Description of return value
    """
    result = parse(google_docstring, style=Style.google)
    assert isinstance(result, Docstring)
    assert len(result.meta) == 3

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1
    param2 : str
        Description of param2

    Returns
    -------
    bool
        Description of return value
    """
    result = parse(numpy_docstring, style=Style.numpy

# Generated at 2024-06-01 18:33:58.637038
```python
    # Test case 1: Parsing with a specific style
    docstring_text = """
    This is a test function.

    :param x: The first parameter.
    :param y: The second parameter.
    :returns: The result of the function.
    """
    style = Style.google
    result = parse(docstring_text, style)
    assert isinstance(result, Docstring)
    assert result.params[0].arg_name == "x"
    assert result.params[1].arg_name == "y"
    assert result.returns.description == "The result of the function."

    # Test case 2: Parsing with auto style
    result = parse(docstring_text)
    assert isinstance(result, Docstring)
    assert result.params[0].arg_name == "x"
    assert result.params[1].arg_name == "y"
    assert result.returns.description == "The result of the function."

    # Test case 3: Parsing with

# Generated at 2024-06-01 18:34:01.573533
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary of the function.

    Args:
        param1 (int): Description of param1.
        param2 (str): Description of param2.

    Returns:
        bool: Description of return value.
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].name == "param1"
    assert result.meta[1].returns.type_name == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary of the function.

    Parameters
    ----------
    param1 : int
        Description of param1.
    param2 : str
        Description of param2.

    Returns
    -------
   

# Generated at 2024-06-01 18:34:04.848282
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary of the function.

    Args:
        param1 (int): Description of param1.
        param2 (str): Description of param2.

    Returns:
        bool: Description of return value.
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].name == "param1"
    assert result.meta[1].returns.type_name == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary of the function.

    Parameters
    ----------
    param1 : int
        Description of param1.
    param2 : str
        Description of param2.

    Returns
    -------
   

# Generated at 2024-06-01 18:34:07.574056
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary of the function.

    Args:
        param1 (int): Description of param1.
        param2 (str): Description of param2.

    Returns:
        bool: Description of return value.
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].name == "param1"
    assert result.meta[1].returns.type_name == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary of the function.

    Parameters
    ----------
    param1 : int
        Description of param1.
    param2 : str
        Description of param2.

    Returns
    -------
   

# Generated at 2024-06-01 18:34:10.993230
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1
        param2 (str): Description of param2

    Returns:
        bool: Description of return value
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert len(result.meta) == 3

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1
    param2 : str
        Description of param2

    Returns
    -------
    bool
        Description of return value
    """
    result = parse(numpy_docstring, Style.numpy)
    assert isinstance

# Generated at 2024-06-01 18:34:14.141744
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1
        param2 (str): Description of param2

    Returns:
        bool: Description of return value
    """
    result = parse(google_docstring, style=Style.google)
    assert isinstance(result, Docstring)
    assert len(result.meta) == 3

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1
    param2 : str
        Description of param2

    Returns
    -------
    bool
        Description of return value
    """
    result = parse(numpy_docstring, style=Style.numpy

# Generated at 2024-06-01 18:34:16.950217
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1
        param2 (str): Description of param2

    Returns:
        bool: Description of return value
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert len(result.meta) == 3

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1
    param2 : str
        Description of param2

    Returns
    -------
    bool
        Description of return value
    """
    result = parse(numpy_docstring, Style.numpy)
    assert isinstance

# Generated at 2024-06-01 18:34:20.104965
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1.
        param2 (str): Description of param2.

    Returns:
        bool: Description of return value.
    """
    result = parse(google_docstring, style=Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].name == "param1"
    assert result.meta[1].returns.type_name == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1.
    param2 : str
        Description of param2.

    Returns
    -------
    bool


# Generated at 2024-06-01 18:34:23.873335
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary of the function.

    Args:
        param1 (int): Description of param1.
        param2 (str): Description of param2.

    Returns:
        bool: Description of return value.
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].arg_name == "param1"
    assert result.meta[1].returns == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary of the function.

    Parameters
    ----------
    param1 : int
        Description of param1.
    param2 : str
        Description of param2.

    Returns
    -------
    bool

# Generated at 2024-06-01 18:34:34.763177
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1
        param2 (str): Description of param2

    Returns:
        bool: Description of return value
    """
    result = parse(google_docstring, style=Style.google)
    assert isinstance(result, Docstring)
    assert len(result.meta) == 3

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1
    param2 : str
        Description of param2

    Returns
    -------
    bool
        Description of return value
    """
    result = parse(numpy_docstring, style=Style.numpy

# Generated at 2024-06-01 18:34:39.289670
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1
        param2 (str): Description of param2

    Returns:
        bool: Description of return value
    """
    result = parse(google_docstring, style=Style.google)
    assert isinstance(result, Docstring)
    assert len(result.meta) == 3

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1
    param2 : str
        Description of param2

    Returns
    -------
    bool
        Description of return value
    """
    result = parse(numpy_docstring, style=Style.numpy

# Generated at 2024-06-01 18:34:43.447689
```python
    from docstring_parser.common import Docstring
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary of the function.

    Args:
        param1 (int): Description of param1.
        param2 (str): Description of param2.

    Returns:
        bool: Description of return value.
    """
    result = parse(google_docstring, style=Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].name == "param1"
    assert result.meta[0].args[1].name == "param2"
    assert result.meta[1].returns[0].type_name == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary of the function.

    Parameters
    ----------
    param1 : int
        Description of param1

# Generated at 2024-06-01 18:34:46.312880
```python
    from docstring_parser.common import Docstring
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1
        param2 (str): Description of param2

    Returns:
        bool: Description of return value
    """
    result = parse(google_docstring, style=Style.google)
    assert isinstance(result, Docstring)
    assert len(result.meta) == 3

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1
    param2 : str
        Description of param2

    Returns
    -------
    bool
        Description of return value
    """
    result = parse(numpy_docstring, style=Style.numpy)
    assert

# Generated at 2024-06-01 18:34:50.164614
```python
    from docstring_parser.common import Docstring
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1
        param2 (str): Description of param2

    Returns:
        bool: Description of return value
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert len(result.meta) == 3

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1
    param2 : str
        Description of param2

    Returns
    -------
    bool
        Description of return value
    """
    result = parse(numpy_docstring, Style.numpy)
    assert isinstance(result, Doc

# Generated at 2024-06-01 18:34:53.272139
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary of the function.

    Args:
        param1 (int): Description of param1.
        param2 (str): Description of param2.

    Returns:
        bool: Description of return value.
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].name == "param1"
    assert result.meta[1].returns.type_name == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary of the function.

    Parameters
    ----------
    param1 : int
        Description of param1.
    param2 : str
        Description of param2.

    Returns
    -------
   

# Generated at 2024-06-01 18:34:56.642295
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid docstring with a specific style
    docstring_text = """
    """
    expected_output = Docstring()
    assert parse(docstring_text, Style.google) == expected_output

    # Test case 2: Valid docstring with auto style detection
    docstring_text = """
    """
    expected_output = Docstring()
    assert parse(docstring_text) == expected_output

    # Test case 3: Invalid docstring with auto style detection
    docstring_text = """
    """
    try:
        parse(docstring_text)
    except ParseError:
        pass
    else:
        assert False, "Expected ParseError"

    # Test case 4: Valid docstring with another specific style
    docstring_text = """
    """
    expected_output = Docstring()
    assert parse(docstring_text, Style

# Generated at 2024-06-01 18:35:00.810307
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary of the function.

    Args:
        param1 (int): Description of param1.
        param2 (str): Description of param2.

    Returns:
        bool: Description of return value.
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].name == "param1"
    assert result.meta[1].returns.type_name == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary of the function.

    Parameters
    ----------
    param1 : int
        Description of param1.
    param2 : str
        Description of param2.

    Returns
    -------
   

# Generated at 2024-06-01 18:35:03.582560
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary of the function.

    Args:
        param1 (int): Description of param1.
        param2 (str): Description of param2.

    Returns:
        bool: Description of return value.
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert len(result.meta) == 3

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary of the function.

    Parameters
    ----------
    param1 : int
        Description of param1.
    param2 : str
        Description of param2.

    Returns
    -------
    bool
        Description of return value.
    """
    result = parse(numpy_docstring, Style.numpy

# Generated at 2024-06-01 18:35:06.474100
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1
        param2 (str): Description of param2

    Returns:
        bool: Description of return value
    """
    result = parse(google_docstring, style=Style.google)
    assert isinstance(result, Docstring)
    assert len(result.meta) == 3

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1
    param2 : str
        Description of param2

    Returns
    -------
    bool
        Description of return value
    """
    result = parse(numpy_docstring, style=Style.numpy

# Generated at 2024-06-01 18:35:18.225957
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1
        param2 (str): Description of param2

    Returns:
        bool: Description of return value
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert len(result.meta) == 3

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1
    param2 : str
        Description of param2

    Returns
    -------
    bool
        Description of return value
    """
    result = parse(numpy_docstring, Style.numpy)
    assert isinstance

# Generated at 2024-06-01 18:35:21.757376
```python
    from docstring_parser.common import Docstring
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary of the function.

    Args:
        param1 (int): Description of param1.
        param2 (str): Description of param2.

    Returns:
        bool: Description of return value.
    """
    result = parse(google_docstring, style=Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].name == "param1"
    assert result.meta[1].args[0].name == "param2"
    assert result.meta[2].returns[0].type_name == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary of the function.

    Parameters
    ----------
    param1 : int
        Description of param1

# Generated at 2024-06-01 18:35:25.125336
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1
        param2 (str): Description of param2

    Returns:
        bool: Description of return value
    """
    result = parse(google_docstring, style=Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].name == "param1"
    assert result.meta[1].returns.type_name == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1
    param2 : str
        Description of param2

    Returns
    -------
    bool


# Generated at 2024-06-01 18:35:29.253360
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary of the function.

    Args:
        param1 (int): Description of param1.
        param2 (str): Description of param2.

    Returns:
        bool: Description of return value.
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].name == "param1"
    assert result.meta[1].returns.type_name == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary of the function.

    Parameters
    ----------
    param1 : int
        Description of param1.
    param2 : str
        Description of param2.

    Returns
    -------
   

# Generated at 2024-06-01 18:35:32.224514
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary of the function.

    Args:
        param1 (int): Description of param1.
        param2 (str): Description of param2.

    Returns:
        bool: Description of return value.
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].name == "param1"
    assert result.meta[1].returns.type_name == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary of the function.

    Parameters
    ----------
    param1 : int
        Description of param1.
    param2 : str
        Description of param2.

    Returns
    -------
   

# Generated at 2024-06-01 18:35:35.183363
```python
    from docstring_parser.common import Docstring
    from docstring_parser.styles import Style
    import pytest

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1
        param2 (str): Description of param2

    Returns:
        bool: Description of return value
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].name == "param1"
    assert result.meta[1].returns.type_name == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1
    param2 : str
        Description of param2

    Returns
    -------
    bool
       

# Generated at 2024-06-01 18:35:37.861692
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary of the function.

    Args:
        param1 (int): Description of param1.
        param2 (str): Description of param2.

    Returns:
        bool: Description of return value.
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].name == "param1"
    assert result.meta[0].args[1].name == "param2"
    assert result.meta[1].type_name == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary of the function.

    Parameters
    ----------
    param1 : int
        Description of param1.
    param

# Generated at 2024-06-01 18:35:40.749869
```python
    from docstring_parser.common import Docstring
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1
        param2 (str): Description of param2

    Returns:
        bool: Description of return value
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].name == "param1"
    assert result.meta[1].returns.type_name == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1
    param2 : str
        Description of param2

    Returns
    -------
    bool
        Description of return value

# Generated at 2024-06-01 18:35:45.467119
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1
        param2 (str): Description of param2

    Returns:
        bool: Description of return value
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert len(result.meta) == 3

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1
    param2 : str
        Description of param2

    Returns
    -------
    bool
        Description of return value
    """
    result = parse(numpy_docstring, Style.numpy)
    assert isinstance

# Generated at 2024-06-01 18:35:48.389341
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary of the function.

    Args:
        param1 (int): Description of param1.
        param2 (str): Description of param2.

    Returns:
        bool: Description of return value.
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].name == "param1"
    assert result.meta[1].returns.type_name == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary of the function.

    Parameters
    ----------
    param1 : int
        Description of param1.
    param2 : str
        Description of param2.

    Returns
    -------
   

# Generated at 2024-06-01 18:35:58.476529
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1
        param2 (str): Description of param2

    Returns:
        bool: Description of return value
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].name == "param1"
    assert result.meta[1].returns.type_name == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1
    param2 : str
        Description of param2

    Returns
    -------
    bool
        Description

# Generated at 2024-06-01 18:36:02.997188
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1
        param2 (str): Description of param2

    Returns:
        bool: Description of return value
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].name == "param1"
    assert result.meta[1].returns.type_name == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1
    param2 : str
        Description of param2

    Returns
    -------
    bool
        Description

# Generated at 2024-06-01 18:36:06.526703
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1
        param2 (str): Description of param2

    Returns:
        bool: Description of return value
    """
    result = parse(google_docstring, style=Style.google)
    assert isinstance(result, Docstring)
    assert len(result.meta) == 3

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1
    param2 : str
        Description of param2

    Returns
    -------
    bool
        Description of return value
    """
    result = parse(numpy_docstring, style=Style.numpy

# Generated at 2024-06-01 18:36:09.128445
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1
        param2 (str): Description of param2

    Returns:
        bool: Description of return value
    """
    result = parse(google_docstring, style=Style.google)
    assert isinstance(result, Docstring)
    assert len(result.meta) == 3

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1
    param2 : str
        Description of param2

    Returns
    -------
    bool
        Description of return value
    """
    result = parse(numpy_docstring, style=Style.numpy

# Generated at 2024-06-01 18:36:12.721427
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid docstring with specific style
    docstring_text = """
    This is a test function.

    :param x: The first parameter.
    :param y: The second parameter.
    :returns: The result of the function.
    """
    result = parse(docstring_text, style=Style.google)
    assert isinstance(result, Docstring)
    assert result.short_description == "This is a test function."
    assert len(result.params) == 2
    assert result.returns.description == "The result of the function."

    # Test case 2: Valid docstring with auto style
    result = parse(docstring_text)
    assert isinstance(result, Docstring)
    assert result.short_description == "This is a test function."
    assert len(result.params) == 2
    assert result.returns.description ==

# Generated at 2024-06-01 18:36:16.172272
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary of the function.

    Args:
        param1 (int): Description of param1.
        param2 (str): Description of param2.

    Returns:
        bool: Description of return value.
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].name == "param1"
    assert result.meta[1].returns.type_name == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary of the function.

    Parameters
    ----------
    param1 : int
        Description of param1.
    param2 : str
        Description of param2.

    Returns
    -------
   

# Generated at 2024-06-01 18:36:19.918599
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1
        param2 (str): Description of param2

    Returns:
        bool: Description of return value
    """
    result = parse(google_docstring, style=Style.google)
    assert isinstance(result, Docstring)
    assert len(result.meta) == 3

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1
    param2 : str
        Description of param2

    Returns
    -------
    bool
        Description of return value
    """
    result = parse(numpy_docstring, style=Style.numpy

# Generated at 2024-06-01 18:36:23.105934
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1
        param2 (str): Description of param2

    Returns:
        bool: Description of return value
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].name == "param1"
    assert result.meta[1].returns.type_name == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1
    param2 : str
        Description of param2

    Returns
    -------
    bool
        Description

# Generated at 2024-06-01 18:36:25.859484
```python
    from docstring_parser.common import Docstring
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1
        param2 (str): Description of param2

    Returns:
        bool: Description of return value
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert len(result.meta) == 3

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1
    param2 : str
        Description of param2

    Returns
    -------
    bool
        Description of return value
    """
    result = parse(numpy_docstring, Style.numpy)
    assert isinstance(result, Doc

# Generated at 2024-06-01 18:36:28.832590
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1
        param2 (str): Description of param2

    Returns:
        bool: Description of return value
    """
    result = parse(google_docstring, style=Style.google)
    assert isinstance(result, Docstring)
    assert len(result.meta) == 3

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1
    param2 : str
        Description of param2

    Returns
    -------
    bool
        Description of return value
    """
    result = parse(numpy_docstring, style=Style.numpy

# Generated at 2024-06-01 18:36:39.177442
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary of the function.

    Args:
        param1 (int): Description of param1.
        param2 (str): Description of param2.

    Returns:
        bool: Description of return value.
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].name == "param1"
    assert result.meta[1].returns.type_name == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary of the function.

    Parameters
    ----------
    param1 : int
        Description of param1.
    param2 : str
        Description of param2.

    Returns
    -------
   

# Generated at 2024-06-01 18:36:42.073625
```python
    from docstring_parser.common import Docstring
    from docstring_parser.styles import Style
    import pytest

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary of the function.

    Args:
        param1 (int): Description of param1.
        param2 (str): Description of param2.

    Returns:
        bool: Description of return value.
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].arg_name == "param1"
    assert result.meta[1].returns[0].type_name == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary of the function.

    Parameters
    ----------
    param1 : int
        Description of param1.
    param2 : str
        Description of param2.

   

# Generated at 2024-06-01 18:36:45.624161
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary of the function.

    Args:
        param1 (int): Description of param1.
        param2 (str): Description of param2.

    Returns:
        bool: Description of return value.
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert len(result.meta) == 3

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary of the function.

    Parameters
    ----------
    param1 : int
        Description of param1.
    param2 : str
        Description of param2.

    Returns
    -------
    bool
        Description of return value.
    """
    result = parse(numpy_docstring, Style.numpy

# Generated at 2024-06-01 18:36:48.431561
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1.
        param2 (str): Description of param2.

    Returns:
        bool: Description of return value.
    """
    result = parse(google_docstring, style=Style.google)
    assert isinstance(result, Docstring)
    assert len(result.meta) == 3

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1.
    param2 : str
        Description of param2.

    Returns
    -------
    bool
        Description of return value.
    """
    result = parse(numpy_docstring, style=Style.numpy

# Generated at 2024-06-01 18:36:51.800531
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary of the function.

    Args:
        param1 (int): Description of param1.
        param2 (str): Description of param2.

    Returns:
        bool: Description of return value.
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].name == "param1"
    assert result.meta[0].args[1].name == "param2"
    assert result.meta[1].type_name == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary of the function.

    Parameters
    ----------
    param1 : int
        Description of param1.
    param

# Generated at 2024-06-01 18:36:54.786994
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary of the function.

    Args:
        param1 (int): Description of param1.
        param2 (str): Description of param2.

    Returns:
        bool: Description of return value.
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert len(result.meta) == 3

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary of the function.

    Parameters
    ----------
    param1 : int
        Description of param1.
    param2 : str
        Description of param2.

    Returns
    -------
    bool
        Description of return value.
    """
    result = parse(numpy_docstring, Style.numpy

# Generated at 2024-06-01 18:36:58.014213
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary of the function.

    Args:
        param1 (int): Description of param1.
        param2 (str): Description of param2.

    Returns:
        bool: Description of return value.
    """
    result = parse(google_docstring, style=Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].name == "param1"
    assert result.meta[1].returns.type_name == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary of the function.

    Parameters
    ----------
    param1 : int
        Description of param1.
    param2 : str
        Description of param2.

    Returns
   

# Generated at 2024-06-01 18:37:01.577986
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1
        param2 (str): Description of param2

    Returns:
        bool: Description of return value
    """
    result = parse(google_docstring, style=Style.google)
    assert isinstance(result, Docstring)
    assert len(result.meta) == 3

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1
    param2 : str
        Description of param2

    Returns
    -------
    bool
        Description of return value
    """
    result = parse(numpy_docstring, style=Style.numpy

# Generated at 2024-06-01 18:37:05.513958
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary of the function.

    Args:
        param1 (int): Description of param1.
        param2 (str): Description of param2.

    Returns:
        bool: Description of return value.
    """
    result = parse(google_docstring, style=Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].name == "param1"
    assert result.meta[1].returns.type_name == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary of the function.

    Parameters
    ----------
    param1 : int
        Description of param1.
    param2 : str
        Description of param2.

    Returns
   

# Generated at 2024-06-01 18:37:09.067756
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary of the function.

    Args:
        param1 (int): Description of param1.
        param2 (str): Description of param2.

    Returns:
        bool: Description of return value.
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].name == "param1"
    assert result.meta[1].args[0].name == "param2"
    assert result.meta[2].type_name == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary of the function.

    Parameters
    ----------
    param1 : int
        Description of param1.
    param

# Generated at 2024-06-01 18:37:19.368017
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1
        param2 (str): Description of param2

    Returns:
        bool: Description of return value
    """
    result = parse(google_docstring, style=Style.google)
    assert isinstance(result, Docstring)
    assert len(result.meta) == 3

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1
    param2 : str
        Description of param2

    Returns
    -------
    bool
        Description of return value
    """
    result = parse(numpy_docstring, style=Style.numpy

# Generated at 2024-06-01 18:37:22.184788
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1
        param2 (str): Description of param2

    Returns:
        bool: Description of return value
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].name == "param1"
    assert result.meta[1].returns.type_name == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1
    param2 : str
        Description of param2

    Returns
    -------
    bool
        Description

# Generated at 2024-06-01 18:37:25.101505
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1
        param2 (str): Description of param2

    Returns:
        bool: Description of return value
    """
    result = parse(google_docstring, style=Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].arg_name == "param1"
    assert result.meta[1].returns == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1
    param2 : str
        Description of param2

    Returns
    -------
    bool
       

# Generated at 2024-06-01 18:37:27.764132
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1
        param2 (str): Description of param2

    Returns:
        bool: Description of return value
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert len(result.meta) == 3

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1
    param2 : str
        Description of param2

    Returns
    -------
    bool
        Description of return value
    """
    result = parse(numpy_docstring, Style.numpy)
    assert isinstance

# Generated at 2024-06-01 18:37:31.106365
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary of the function.

    Args:
        param1 (int): Description of param1.
        param2 (str): Description of param2.

    Returns:
        bool: Description of return value.
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].name == "param1"
    assert result.meta[1].returns.type_name == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary of the function.

    Parameters
    ----------
    param1 : int
        Description of param1.
    param2 : str
        Description of param2.

    Returns
    -------
   

# Generated at 2024-06-01 18:37:34.269254
```python
    from docstring_parser.common import Docstring
    from docstring_parser.styles import Style
    import pytest

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary of the function.

    Args:
        param1 (int): Description of param1.
        param2 (str): Description of param2.

    Returns:
        bool: Description of return value.
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].arg_name == "param1"
    assert result.meta[1].returns[0].type_name == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary of the function.

    Parameters
    ----------
    param1 : int
        Description of param1.
    param2 : str
        Description of param2.

   

# Generated at 2024-06-01 18:37:37.504755
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary of the function.

    Args:
        param1 (int): Description of param1.
        param2 (str): Description of param2.

    Returns:
        bool: Description of return value.
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].name == "param1"
    assert result.meta[0].args[1].name == "param2"
    assert result.meta[1].type_name == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary of the function.

    Parameters
    ----------
    param1 : int
        Description of param1.
    param

# Generated at 2024-06-01 18:37:41.014190
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1
        param2 (str): Description of param2

    Returns:
        bool: Description of return value
    """
    result = parse(google_docstring, style=Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].arg_name == "param1"
    assert result.meta[1].returns == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1
    param2 : str
        Description of param2

    Returns
    -------
    bool
       

# Generated at 2024-06-01 18:37:44.554217
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary of the function.

    Args:
        param1 (int): Description of param1.
        param2 (str): Description of param2.

    Returns:
        bool: Description of return value.
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].name == "param1"
    assert result.meta[1].args[0].name == "param2"
    assert result.meta[2].type_name == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary of the function.

    Parameters
    ----------
    param1 : int
        Description of param1.
    param

# Generated at 2024-06-01 18:37:47.126677
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1
        param2 (str): Description of param2

    Returns:
        bool: Description of return value
    """
    result = parse(google_docstring, style=Style.google)
    assert isinstance(result, Docstring)
    assert len(result.meta) == 3

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1
    param2 : str
        Description of param2

    Returns
    -------
    bool
        Description of return value
    """
    result = parse(numpy_docstring, style=Style.numpy

# Generated at 2024-06-01 18:37:56.719492
```python
    from docstring_parser.common import Docstring
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1
        param2 (str): Description of param2

    Returns:
        bool: Description of return value
    """
    result = parse(google_docstring, style=Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].name == "param1"
    assert result.meta[1].returns.type_name == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1
    param2 : str
        Description of param2

    Returns
    -------
    bool
        Description of

# Generated at 2024-06-01 18:37:59.671158
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1
        param2 (str): Description of param2

    Returns:
        bool: Description of return value
    """
    result = parse(google_docstring, style=Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].name == "param1"
    assert result.meta[1].returns.type_name == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1
    param2 : str
        Description of param2

    Returns
    -------
    bool


# Generated at 2024-06-01 18:38:02.720892
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary of the function.

    Args:
        param1 (int): Description of param1.
        param2 (str): Description of param2.

    Returns:
        bool: Description of return value.
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].name == "param1"
    assert result.meta[1].returns.type_name == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary of the function.

    Parameters
    ----------
    param1 : int
        Description of param1.
    param2 : str
        Description of param2.

    Returns
    -------
   

# Generated at 2024-06-01 18:38:06.058377
```python
    from docstring_parser.common import Docstring
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary of the function.

    Args:
        param1 (int): Description of param1.
        param2 (str): Description of param2.

    Returns:
        bool: Description of return value.
    """
    result = parse(google_docstring, style=Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].arg_name == "param1"
    assert result.meta[1].returns == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary of the function.

    Parameters
    ----------
    param1 : int
        Description of param1.
    param2 : str
        Description of param2.

    Returns
    -------
    bool


# Generated at 2024-06-01 18:38:08.793886
```python
    from docstring_parser.common import Docstring
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary of the function.

    Args:
        param1 (int): Description of param1.
        param2 (str): Description of param2.

    Returns:
        bool: Description of return value.
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].arg_name == "param1"
    assert result.meta[1].returns == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary of the function.

    Parameters
    ----------
    param1 : int
        Description of param1.
    param2 : str
        Description of param2.

    Returns
    -------
    bool
        Description

# Generated at 2024-06-01 18:38:12.635510
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1
        param2 (str): Description of param2

    Returns:
        bool: Description of return value
    """
    result = parse(google_docstring, style=Style.google)
    assert isinstance(result, Docstring)
    assert len(result.meta) == 3

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1
    param2 : str
        Description of param2

    Returns
    -------
    bool
        Description of return value
    """
    result = parse(numpy_docstring, style=Style.numpy

# Generated at 2024-06-01 18:38:19.873003
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary of the function.

    Args:
        param1 (int): Description of param1.
        param2 (str): Description of param2.

    Returns:
        bool: Description of return value.
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].name == "param1"
    assert result.meta[0].args[1].name == "param2"
    assert result.meta[1].type_name == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary of the function.

    Parameters
    ----------
    param1 : int
        Description of param1.
    param

# Generated at 2024-06-01 18:38:23.450550
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1
        param2 (str): Description of param2

    Returns:
        bool: Description of return value
    """
    result = parse(google_docstring, style=Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].name == "param1"
    assert result.meta[1].returns.type_name == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1
    param2 : str
        Description of param2

    Returns
    -------
    bool


# Generated at 2024-06-01 18:38:26.469106
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1
        param2 (str): Description of param2

    Returns:
        bool: Description of return value
    """
    result = parse(google_docstring, style=Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].arg_name == "param1"
    assert result.meta[1].returns == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1
    param2 : str
        Description of param2

    Returns
    -------
    bool
       

# Generated at 2024-06-01 18:38:29.615774
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1.
        param2 (str): Description of param2.

    Returns:
        bool: Description of return value.
    """
    result = parse(google_docstring, style=Style.google)
    assert isinstance(result, Docstring)
    assert len(result.meta) == 3

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1.
    param2 : str
        Description of param2.

    Returns
    -------
    bool
        Description of return value.
    """
    result = parse(numpy_docstring, style=Style.numpy

# Generated at 2024-06-01 18:38:39.670308
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary of the function.

    Args:
        param1 (int): Description of param1.
        param2 (str): Description of param2.

    Returns:
        bool: Description of return value.
    """
    result = parse(google_docstring, style=Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].name == "param1"
    assert result.meta[1].returns.type_name == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary of the function.

    Parameters
    ----------
    param1 : int
        Description of param1.
    param2 : str
        Description of param2.

    Returns
   

# Generated at 2024-06-01 18:38:43.190142
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary of the function.

    Args:
        param1 (int): Description of param1.
        param2 (str): Description of param2.

    Returns:
        bool: Description of return value.
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].arg_name == "param1"
    assert result.meta[1].returns == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary of the function.

    Parameters
    ----------
    param1 : int
        Description of param1.
    param2 : str
        Description of param2.

    Returns
    -------
    bool

# Generated at 2024-06-01 18:38:45.872370
```python
    from docstring_parser.common import Docstring
    from docstring_parser.styles import Style
    import pytest

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary of the function.

    Args:
        param1 (int): Description of param1.
        param2 (str): Description of param2.

    Returns:
        bool: Description of return value.
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert len(result.meta) == 3

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary of the function.

    Parameters
    ----------
    param1 : int
        Description of param1.
    param2 : str
        Description of param2.

    Returns
    -------
    bool
        Description of return value.
    """
    result = parse(numpy_docstring, Style

# Generated at 2024-06-01 18:38:48.889043
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid docstring with a specific style
    docstring_text = """
    """
    expected_output = Docstring()
    assert parse(docstring_text, Style.google) == expected_output

    # Test case 2: Valid docstring with auto style detection
    docstring_text = """
    """
    expected_output = Docstring()
    assert parse(docstring_text) == expected_output

    # Test case 3: Invalid docstring with auto style detection
    docstring_text = """
    """
    try:
        parse(docstring_text)
    except ParseError:
        pass
    else:
        assert False, "Expected ParseError"

    # Test case 4: Valid docstring with another specific style
    docstring_text = """
    """
    expected_output = Docstring()
    assert parse(docstring_text, Style

# Generated at 2024-06-01 18:38:51.975848
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary of the function.

    Args:
        param1 (int): Description of param1.
        param2 (str): Description of param2.

    Returns:
        bool: Description of return value.
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].name == "param1"
    assert result.meta[1].returns.type_name == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary of the function.

    Parameters
    ----------
    param1 : int
        Description of param1.
    param2 : str
        Description of param2.

    Returns
    -------
   

# Generated at 2024-06-01 18:38:54.670112
```python
    from docstring_parser.common import Docstring
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary of the function.

    Args:
        param1 (int): Description of param1.
        param2 (str): Description of param2.

    Returns:
        bool: Description of return value.
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].name == "param1"
    assert result.meta[1].returns.type_name == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary of the function.

    Parameters
    ----------
    param1 : int
        Description of param1.
    param2 : str
        Description of param2.

    Returns
    -------
    bool
       

# Generated at 2024-06-01 18:38:58.346142
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1
        param2 (str): Description of param2

    Returns:
        bool: Description of return value
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert len(result.meta) == 3

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1
    param2 : str
        Description of param2

    Returns
    -------
    bool
        Description of return value
    """
    result = parse(numpy_docstring, Style.numpy)
    assert isinstance

# Generated at 2024-06-01 18:39:01.873516
```python
    from docstring_parser.common import Docstring
    from docstring_parser.styles import Style

    # Test case 1: Parsing with a specific style
    docstring_text = """
    This is a test function.

    :param x: Description of parameter x
    :returns: Description of return value
    """
    result = parse(docstring_text, style=Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0] == 'x'
    assert result.meta[1].description == 'Description of return value'

    # Test case 2: Parsing with auto style
    result = parse(docstring_text)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0] == 'x'
    assert result.meta[1].description == 'Description of return value'

    # Test case 3: Parsing with an invalid style
    try:
        parse(docstring_text,

# Generated at 2024-06-01 18:39:05.093814
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary of the function.

    Args:
        param1 (int): Description of param1.
        param2 (str): Description of param2.

    Returns:
        bool: Description of return value.
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].name == "param1"
    assert result.meta[1].returns.type_name == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary of the function.

    Parameters
    ----------
    param1 : int
        Description of param1.
    param2 : str
        Description of param2.

    Returns
    -------
   

# Generated at 2024-06-01 18:39:08.606289
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary of the function.

    Args:
        param1 (int): Description of param1.
        param2 (str): Description of param2.

    Returns:
        bool: Description of return value.
    """
    result = parse(google_docstring, style=Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].name == "param1"
    assert result.meta[1].returns.type_name == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary of the function.

    Parameters
    ----------
    param1 : int
        Description of param1.
    param2 : str
        Description of param2.

    Returns
   

# Generated at 2024-06-01 18:39:18.517169
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1.
        param2 (str): Description of param2.

    Returns:
        bool: Description of return value.
    """
    result = parse(google_docstring, style=Style.google)
    assert isinstance(result, Docstring)
    assert len(result.meta) == 3

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1.
    param2 : str
        Description of param2.

    Returns
    -------
    bool
        Description of return value.
    """
    result = parse(numpy_docstring, style=Style.numpy

# Generated at 2024-06-01 18:39:21.788060
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1
        param2 (str): Description of param2

    Returns:
        bool: Description of return value
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert len(result.meta) == 3

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1
    param2 : str
        Description of param2

    Returns
    -------
    bool
        Description of return value
    """
    result = parse(numpy_docstring, Style.numpy)
    assert isinstance

# Generated at 2024-06-01 18:39:24.595695
```python
    from docstring_parser.common import Docstring
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1
        param2 (str): Description of param2

    Returns:
        bool: Description of return value
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].arg_name == "param1"
    assert result.meta[1].returns[0].type_name == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1
    param2 : str
        Description of param2

    Returns
    -------
    bool
       

# Generated at 2024-06-01 18:39:28.904554
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1
        param2 (str): Description of param2

    Returns:
        bool: Description of return value
    """
    result = parse(google_docstring, style=Style.google)
    assert isinstance(result, Docstring)
    assert len(result.meta) == 3

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1
    param2 : str
        Description of param2

    Returns
    -------
    bool
        Description of return value
    """
    result = parse(numpy_docstring, style=Style.numpy

# Generated at 2024-06-01 18:39:32.028448
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1
        param2 (str): Description of param2

    Returns:
        bool: Description of return value
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].name == "param1"
    assert result.meta[1].returns.type_name == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1
    param2 : str
        Description of param2

    Returns
    -------
    bool
        Description

# Generated at 2024-06-01 18:39:35.309520
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary of the function.

    Args:
        param1 (int): Description of param1.
        param2 (str): Description of param2.

    Returns:
        bool: Description of return value.
    """
    result = parse(google_docstring, style=Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].name == "param1"
    assert result.meta[1].returns.type_name == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary of the function.

    Parameters
    ----------
    param1 : int
        Description of param1.
    param2 : str
        Description of param2.

    Returns
   

# Generated at 2024-06-01 18:39:39.234837
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary of the function.

    Args:
        param1 (int): Description of param1.
        param2 (str): Description of param2.

    Returns:
        bool: Description of return value.
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].arg_name == "param1"
    assert result.meta[1].returns == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary of the function.

    Parameters
    ----------
    param1 : int
        Description of param1.
    param2 : str
        Description of param2.

    Returns
    -------
    bool

# Generated at 2024-06-01 18:39:42.913826
```python
    from docstring_parser.common import Docstring
    from docstring_parser.styles import Style
    import pytest

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1
        param2 (str): Description of param2

    Returns:
        bool: Description of return value
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert len(result.meta) == 3

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1
    param2 : str
        Description of param2

    Returns
    -------
    bool
        Description of return value
    """
    result = parse(numpy_docstring, Style.numpy)
    assert

# Generated at 2024-06-01 18:39:46.081467
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1
        param2 (str): Description of param2

    Returns:
        bool: Description of return value
    """
    result = parse(google_docstring, style=Style.google)
    assert isinstance(result, Docstring)
    assert len(result.meta) == 3

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1
    param2 : str
        Description of param2

    Returns
    -------
    bool
        Description of return value
    """
    result = parse(numpy_docstring, style=Style.numpy

# Generated at 2024-06-01 18:39:49.377086
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1.
        param2 (str): Description of param2.

    Returns:
        bool: Description of return value.
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].name == "param1"
    assert result.meta[1].returns.type_name == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1.
    param2 : str
        Description of param2.

    Returns
    -------
    bool
        Description

# Generated at 2024-06-01 18:39:58.970492
```python
    from docstring_parser.common import Docstring
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary of the function.

    Args:
        param1 (int): Description of param1.
        param2 (str): Description of param2.

    Returns:
        bool: Description of return value.
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].arg_name == "param1"
    assert result.meta[1].returns == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary of the function.

    Parameters
    ----------
    param1 : int
        Description of param1.
    param2 : str
        Description of param2.

    Returns
    -------
    bool
        Description

# Generated at 2024-06-01 18:40:02.615876
```python
    from docstring_parser.common import Docstring
    from docstring_parser.styles import Style
    import pytest

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary of the function.

    Args:
        param1 (int): Description of param1.
        param2 (str): Description of param2.

    Returns:
        bool: Description of return value.
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0].arg_name == "param1"
    assert result.meta[1].returns == "bool"

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary of the function.

    Parameters
    ----------
    param1 : int
        Description of param1.
    param2 : str
        Description of param2.

    Returns
    -------
   

# Generated at 2024-06-01 18:40:05.549586
```python
    from docstring_parser.common import Docstring, ParseError
    from docstring_parser.styles import Style

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary line.

    Args:
        param1 (int): Description of param1
        param2 (str): Description of param2

    Returns:
        bool: Description of return value
    """
    result = parse(google_docstring, style=Style.google)
    assert isinstance(result, Docstring)
    assert len(result.meta) == 3

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary line.

    Parameters
    ----------
    param1 : int
        Description of param1
    param2 : str
        Description of param2

    Returns
    -------
    bool
        Description of return value
    """
    result = parse(numpy_docstring, style=Style.numpy

# Generated at 2024-06-01 18:40:08.847654
```python
    from docstring_parser.common import Docstring
    from docstring_parser.styles import Style
    import pytest

    # Test case 1: Valid Google style docstring
    google_docstring = """
    Summary of the function.

    Args:
        param1 (int): Description of param1.
        param2 (str): Description of param2.

    Returns:
        bool: Description of return value.
    """
    result = parse(google_docstring, Style.google)
    assert isinstance(result, Docstring)
    assert result.meta[0].args[0] == 'param1'
    assert result.meta[1].args[0] == 'param2'
    assert result.meta[2].type_name == 'bool'

    # Test case 2: Valid Numpy style docstring
    numpy_docstring = """
    Summary of the function.

    Parameters
    ----------
    param1 : int
        Description of param1.
    param2