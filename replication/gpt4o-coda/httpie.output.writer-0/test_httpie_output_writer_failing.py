# Automatically generated by Pynguin.
import requests.models as module_0
import httpie.context as module_1
import argparse as module_2
import httpie.output.writer as module_3
import typing as module_4

def test_case_0():
    try:
        response_0 = module_0.Response()
        environment_0 = module_1.Environment()
        namespace_0 = module_2.Namespace()
        var_0 = module_3.write_message(response_0, environment_0, namespace_0, environment_0)
    except BaseException:
        pass

def test_case_1():
    try:
        base_stream_0 = None
        i_o_0 = module_4.IO()
        bool_0 = False
        var_0 = module_3.write_stream(base_stream_0, i_o_0, bool_0)
    except BaseException:
        pass

def test_case_2():
    try:
        base_stream_0 = None
        text_i_o_0 = module_4.TextIO()
        bool_0 = True
        var_0 = module_3.write_stream_with_colors_win_py3(base_stream_0, text_i_o_0, bool_0)
    except BaseException:
        pass

def test_case_3():
    try:
        environment_0 = module_1.Environment()
        namespace_0 = module_2.Namespace()
        tuple_0 = module_3.get_stream_type_and_kwargs(environment_0, namespace_0)
    except BaseException:
        pass

def test_case_4():
    try:
        namespace_0 = module_2.Namespace()
        prepared_request_0 = module_0.PreparedRequest()
        dict_0 = {}
        environment_0 = module_1.Environment(**dict_0)
        var_0 = module_3.write_message(prepared_request_0, environment_0, namespace_0, dict_0)
        var_1 = prepared_request_0.copy()
        str_0 = 'GeL2KNH~K'
        var_2 = module_3.write_message(prepared_request_0, environment_0, namespace_0, str_0, namespace_0)
    except BaseException:
        pass