

# Generated at 2024-06-03 05:03:43.091424
```python
    lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']
    expected_output = [
        ('TEST', '${HOME}/yeee'),
        ('THISIS', '~/a/test'),
        ('YOLO', '~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')
    ]
    assert list(parse_env_file_contents(lines)) == expected_output
```

# Generated at 2024-06-03 05:03:46.213644
```python
    lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']
    expected_output = [
        ('TEST', '${HOME}/yeee'),
        ('THISIS', '~/a/test'),
        ('YOLO', '~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')
    ]
    assert list(parse_env_file_contents(lines)) == expected_output
```

# Generated at 2024-06-03 05:03:49.548303
```python
    lines = ['TEST=${HOME}/yeee-$PATH', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']
    mock_environ = {
        'HOME': '/home/user',
        'PATH': '/usr/bin:/bin'
    }
    expected_output = collections.OrderedDict([
        ('TEST', '/home/user/yeee-/usr/bin:/bin'),
        ('THISIS', '/home/user/a/test'),
        ('YOLO', '/home/user/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')
    ])
    
    result = load_env_file(lines, write_environ=mock_environ)
    
    assert result == expected_output
    assert mock_environ['TEST'] == '/home/user/yeee-/usr/bin:/bin'
    assert mock_environ['THISIS'] == '/home/user/a/test'
    assert mock_environ

# Generated at 2024-06-03 05:03:52.158291
```python
    lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']
    expected_output = [
        ('TEST', '${HOME}/yeee'),
        ('THISIS', '~/a/test'),
        ('YOLO', '~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')
    ]
    assert list(parse_env_file_contents(lines)) == expected_output
```

# Generated at 2024-06-03 05:03:55.161148
```python
    lines = ['TEST=${HOME}/yeee-$PATH', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']
    mock_environ = {
        'HOME': '/home/user',
        'PATH': '/usr/bin:/bin'
    }
    expected_output = collections.OrderedDict([
        ('TEST', '/home/user/yeee-/usr/bin:/bin'),
        ('THISIS', '/home/user/a/test'),
        ('YOLO', '/home/user/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')
    ])
    
    result = load_env_file(lines, write_environ=mock_environ)
    
    assert result == expected_output
    assert mock_environ['TEST'] == '/home/user/yeee-/usr/bin:/bin'
    assert mock_environ['THISIS'] == '/home/user/a/test'
    assert mock_environ

# Generated at 2024-06-03 05:03:56.933805
```python
    lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']
    expected_output = [
        ('TEST', '${HOME}/yeee'),
        ('THISIS', '~/a/test'),
        ('YOLO', '~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')
    ]
    assert list(parse_env_file_contents(lines)) == expected_output
```

# Generated at 2024-06-03 05:04:00.282759
```python
    lines = ['TEST=${HOME}/yeee-$PATH', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']
    mock_environ = {
        'HOME': '/home/user',
        'PATH': '/usr/bin:/bin'
    }
    expected_output = collections.OrderedDict([
        ('TEST', '/home/user/yeee-/usr/bin:/bin'),
        ('THISIS', '/home/user/a/test'),
        ('YOLO', '/home/user/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')
    ])
    
    result = load_env_file(lines, write_environ=mock_environ)
    
    assert result == expected_output
    assert mock_environ['TEST'] == '/home/user/yeee-/usr/bin:/bin'
    assert mock_environ['THISIS'] == '/home/user/a/test'
    assert mock_environ

# Generated at 2024-06-03 05:04:02.910399
```python
    lines = ['TEST=${HOME}/yeee-$PATH', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']
    expected_output = collections.OrderedDict([
        ('TEST', expand('${HOME}/yeee-$PATH')),
        ('THISIS', expand('~/a/test')),
        ('YOLO', expand('~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST'))
    ])
    
    result = load_env_file(lines, write_environ=dict())
    
    assert result == expected_output, f"Expected {expected_output}, but got {result}"
```

# Generated at 2024-06-03 05:04:05.545234
```python
    lines = ['TEST=${HOME}/yeee-$PATH', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']
    expected_output = collections.OrderedDict([
        ('TEST', expand('${HOME}/yeee-$PATH')),
        ('THISIS', expand('~/a/test')),
        ('YOLO', expand('~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST'))
    ])
    
    result = load_env_file(lines, write_environ=dict())
    
    assert result == expected_output, f"Expected {expected_output}, but got {result}"
```

# Generated at 2024-06-03 05:04:08.158452
```python
    lines = ['TEST=${HOME}/yeee-$PATH', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']
    mock_environ = {
        'HOME': '/home/user',
        'PATH': '/usr/bin:/bin'
    }
    expected_output = collections.OrderedDict([
        ('TEST', '/home/user/yeee-/usr/bin:/bin'),
        ('THISIS', '/home/user/a/test'),
        ('YOLO', '/home/user/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')
    ])
    
    result = load_env_file(lines, write_environ=mock_environ)
    
    assert result == expected_output
    assert mock_environ['TEST'] == '/home/user/yeee-/usr/bin:/bin'
    assert mock_environ['THISIS'] == '/home/user/a/test'
    assert mock_environ

# Generated at 2024-06-03 05:04:18.842488
```python
    lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']
    expected_output = [
        ('TEST', '${HOME}/yeee'),
        ('THISIS', '~/a/test'),
        ('YOLO', '~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')
    ]
    assert list(parse_env_file_contents(lines)) == expected_output
```

# Generated at 2024-06-03 05:04:21.053100
```python
    lines = ['TEST=${HOME}/yeee-$PATH', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']
    expected_output = collections.OrderedDict([
        ('TEST', expand('${HOME}/yeee-$PATH')),
        ('THISIS', expand('~/a/test')),
        ('YOLO', expand('~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST'))
    ])
    
    result = load_env_file(lines, write_environ=dict())
    
    assert result == expected_output, f"Expected {expected_output}, but got {result}"
```

# Generated at 2024-06-03 05:04:23.086050
```python
    lines = [
        'TEST=${HOME}/yeee',
        'THISIS=~/a/test',
        'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST'
    ]
    expected_output = [
        ('TEST', '${HOME}/yeee'),
        ('THISIS', '~/a/test'),
        ('YOLO', '~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')
    ]
    assert list(parse_env_file_contents(lines)) == expected_output
```

# Generated at 2024-06-03 05:04:26.362191
```python
    lines = ['TEST=${HOME}/yeee-$PATH', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']
    mock_environ = {
        'HOME': '/home/user',
        'PATH': '/usr/bin:/bin'
    }
    expected_output = collections.OrderedDict([
        ('TEST', '/home/user/yeee-/usr/bin:/bin'),
        ('THISIS', '/home/user/a/test'),
        ('YOLO', '/home/user/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')
    ])
    
    result = load_env_file(lines, write_environ=mock_environ)
    
    assert result == expected_output
    assert mock_environ['TEST'] == '/home/user/yeee-/usr/bin:/bin'
    assert mock_environ['THISIS'] == '/home/user/a/test'
    assert mock_environ

# Generated at 2024-06-03 05:04:28.861475
```python
    lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']
    expected_output = [
        ('TEST', '${HOME}/yeee'),
        ('THISIS', '~/a/test'),
        ('YOLO', '~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')
    ]
    assert list(parse_env_file_contents(lines)) == expected_output
```

# Generated at 2024-06-03 05:04:32.866974
```python
    lines = ['TEST=${HOME}/yeee-$PATH', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']
    mock_environ = {
        'HOME': '/home/user',
        'PATH': '/usr/bin:/bin'
    }
    expected_output = collections.OrderedDict([
        ('TEST', '/home/user/yeee-/usr/bin:/bin'),
        ('THISIS', '/home/user/a/test'),
        ('YOLO', '/home/user/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')
    ])
    
    result = load_env_file(lines, write_environ=mock_environ)
    
    assert result == expected_output
    assert mock_environ['TEST'] == '/home/user/yeee-/usr/bin:/bin'
    assert mock_environ['THISIS'] == '/home/user/a/test'
    assert mock_environ

# Generated at 2024-06-03 05:04:37.163873
```python
    lines = ['TEST=${HOME}/yeee-$PATH', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']
    mock_environ = {
        'HOME': '/home/user',
        'PATH': '/usr/bin:/bin'
    }
    expected_output = collections.OrderedDict([
        ('TEST', '/home/user/yeee-/usr/bin:/bin'),
        ('THISIS', '/home/user/a/test'),
        ('YOLO', '/home/user/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')
    ])
    
    result = load_env_file(lines, write_environ=mock_environ)
    
    assert result == expected_output
    assert mock_environ['TEST'] == '/home/user/yeee-/usr/bin:/bin'
    assert mock_environ['THISIS'] == '/home/user/a/test'
    assert mock_environ

# Generated at 2024-06-03 05:04:39.072035
```python
    lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']
    expected_output = [
        ('TEST', '${HOME}/yeee'),
        ('THISIS', '~/a/test'),
        ('YOLO', '~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')
    ]
    assert list(parse_env_file_contents(lines)) == expected_output
```

# Generated at 2024-06-03 05:04:42.022092
```python
    lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']
    expected_output = [
        ('TEST', '${HOME}/yeee'),
        ('THISIS', '~/a/test'),
        ('YOLO', '~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')
    ]
    assert list(parse_env_file_contents(lines)) == expected_output
```

# Generated at 2024-06-03 05:04:45.613929
```python
    lines = ['TEST=${HOME}/yeee-$PATH', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']
    expected_output = collections.OrderedDict([
        ('TEST', expand('${HOME}/yeee-$PATH')),
        ('THISIS', expand('~/a/test')),
        ('YOLO', expand('~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST'))
    ])
    
    result = load_env_file(lines, write_environ=dict())
    
    assert result == expected_output, f"Expected {expected_output}, but got {result}"
```

# Generated at 2024-06-03 05:05:04.762990
```python
    lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']
    expected_output = [
        ('TEST', '${HOME}/yeee'),
        ('THISIS', '~/a/test'),
        ('YOLO', '~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')
    ]
    assert list(parse_env_file_contents(lines)) == expected_output
```

# Generated at 2024-06-03 05:05:07.457274
```python
    lines = ['TEST=${HOME}/yeee-$PATH', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']
    mock_environ = {
        'HOME': '/home/user',
        'PATH': '/usr/bin:/bin'
    }
    expected_output = collections.OrderedDict([
        ('TEST', '/home/user/yeee-/usr/bin:/bin'),
        ('THISIS', '/home/user/a/test'),
        ('YOLO', '/home/user/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')
    ])
    
    result = load_env_file(lines, write_environ=mock_environ)
    
    assert result == expected_output
    assert mock_environ['TEST'] == '/home/user/yeee-/usr/bin:/bin'
    assert mock_environ['THISIS'] == '/home/user/a/test'
    assert mock_environ

# Generated at 2024-06-03 05:05:09.153888
```python
    lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']
    expected_output = [
        ('TEST', '${HOME}/yeee'),
        ('THISIS', '~/a/test'),
        ('YOLO', '~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')
    ]
    assert list(parse_env_file_contents(lines)) == expected_output
```

# Generated at 2024-06-03 05:05:11.683875
```python
    lines = ['TEST=${HOME}/yeee-$PATH', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']
    expected_output = collections.OrderedDict([
        ('TEST', expand('${HOME}/yeee-$PATH')),
        ('THISIS', expand('~/a/test')),
        ('YOLO', expand('~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST'))
    ])
    
    result = load_env_file(lines, write_environ=dict())
    
    assert result == expected_output, f"Expected {expected_output}, but got {result}"
```

# Generated at 2024-06-03 05:05:15.094942
```python
    lines = ['TEST=${HOME}/yeee-$PATH', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']
    mock_environ = {
        'HOME': '/home/user',
        'PATH': '/usr/bin:/bin'
    }
    expected_output = collections.OrderedDict([
        ('TEST', '/home/user/yeee-/usr/bin:/bin'),
        ('THISIS', '/home/user/a/test'),
        ('YOLO', '/home/user/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')
    ])
    
    result = load_env_file(lines, write_environ=mock_environ)
    
    assert result == expected_output
    assert mock_environ['TEST'] == '/home/user/yeee-/usr/bin:/bin'
    assert mock_environ['THISIS'] == '/home/user/a/test'
    assert mock_environ

# Generated at 2024-06-03 05:05:16.760043
```python
    lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']
    expected_output = [
        ('TEST', '${HOME}/yeee'),
        ('THISIS', '~/a/test'),
        ('YOLO', '~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')
    ]
    assert list(parse_env_file_contents(lines)) == expected_output
```

# Generated at 2024-06-03 05:05:18.879786
```python
    lines = ['TEST=${HOME}/yeee-$PATH', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']
    expected_output = collections.OrderedDict([
        ('TEST', expand('${HOME}/yeee-$PATH')),
        ('THISIS', expand('~/a/test')),
        ('YOLO', expand('~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST'))
    ])
    
    result = load_env_file(lines, write_environ=dict())
    
    assert result == expected_output, f"Expected {expected_output}, but got {result}"
```

# Generated at 2024-06-03 05:05:21.459342
```python
    lines = ['TEST=${HOME}/yeee-$PATH', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']
    expected_output = collections.OrderedDict([
        ('TEST', expand('${HOME}/yeee-$PATH')),
        ('THISIS', expand('~/a/test')),
        ('YOLO', expand('~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST'))
    ])
    
    result = load_env_file(lines, write_environ=dict())
    
    assert result == expected_output, f"Expected {expected_output}, but got {result}"
```

# Generated at 2024-06-03 05:05:23.542840
```python
    lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']
    expected_output = [
        ('TEST', '${HOME}/yeee'),
        ('THISIS', '~/a/test'),
        ('YOLO', '~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')
    ]
    assert list(parse_env_file_contents(lines)) == expected_output
```

# Generated at 2024-06-03 05:05:25.712903
```python
    lines = ['TEST=${HOME}/yeee-$PATH', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']
    expected_output = collections.OrderedDict([
        ('TEST', expand('${HOME}/yeee-$PATH')),
        ('THISIS', expand('~/a/test')),
        ('YOLO', expand('~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST'))
    ])
    
    result = load_env_file(lines, write_environ=dict())
    
    assert result == expected_output, f"Expected {expected_output}, but got {result}"
```

# Generated at 2024-06-03 05:06:07.832651
```python
    lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']
    expected_output = [
        ('TEST', '${HOME}/yeee'),
        ('THISIS', '~/a/test'),
        ('YOLO', '~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')
    ]
    assert list(parse_env_file_contents(lines)) == expected_output
```

# Generated at 2024-06-03 05:06:10.067548
```python
    lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']
    expected_output = [
        ('TEST', '${HOME}/yeee'),
        ('THISIS', '~/a/test'),
        ('YOLO', '~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')
    ]
    assert list(parse_env_file_contents(lines)) == expected_output
```

# Generated at 2024-06-03 05:06:12.121595
```python
    lines = [
        'TEST=${HOME}/yeee',
        'THISIS=~/a/test',
        'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST'
    ]
    expected_output = [
        ('TEST', '${HOME}/yeee'),
        ('THISIS', '~/a/test'),
        ('YOLO', '~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')
    ]
    assert list(parse_env_file_contents(lines)) == expected_output
```

# Generated at 2024-06-03 05:06:13.984654
```python
    lines = [
        'TEST=${HOME}/yeee',
        'THISIS=~/a/test',
        'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST'
    ]
    expected_output = [
        ('TEST', '${HOME}/yeee'),
        ('THISIS', '~/a/test'),
        ('YOLO', '~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')
    ]
    assert list(parse_env_file_contents(lines)) == expected_output
```

# Generated at 2024-06-03 05:06:16.827764
```python
    lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']
    expected_output = [
        ('TEST', '${HOME}/yeee'),
        ('THISIS', '~/a/test'),
        ('YOLO', '~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')
    ]
    assert list(parse_env_file_contents(lines)) == expected_output
```

# Generated at 2024-06-03 05:06:18.424014
```python
    lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']
    expected_output = [
        ('TEST', '${HOME}/yeee'),
        ('THISIS', '~/a/test'),
        ('YOLO', '~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')
    ]
    assert list(parse_env_file_contents(lines)) == expected_output
```

# Generated at 2024-06-03 05:06:20.403009
```python
    lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']
    expected_output = [
        ('TEST', '${HOME}/yeee'),
        ('THISIS', '~/a/test'),
        ('YOLO', '~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')
    ]
    assert list(parse_env_file_contents(lines)) == expected_output
```

# Generated at 2024-06-03 05:06:22.099220
```python
    lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']
    expected_output = [
        ('TEST', '${HOME}/yeee'),
        ('THISIS', '~/a/test'),
        ('YOLO', '~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')
    ]
    assert list(parse_env_file_contents(lines)) == expected_output
```

# Generated at 2024-06-03 05:06:24.072764
```python
    lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']
    expected_output = [
        ('TEST', '${HOME}/yeee'),
        ('THISIS', '~/a/test'),
        ('YOLO', '~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')
    ]
    assert list(parse_env_file_contents(lines)) == expected_output
```

# Generated at 2024-06-03 05:06:26.204920
```python
    lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']
    expected_output = [
        ('TEST', '${HOME}/yeee'),
        ('THISIS', '~/a/test'),
        ('YOLO', '~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')
    ]
    assert list(parse_env_file_contents(lines)) == expected_output
```

# Generated at 2024-06-03 05:06:58.122899
```python
    lines = [
        'TEST=${HOME}/yeee',
        'THISIS=~/a/test',
        'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST'
    ]
    expected_output = [
        ('TEST', '${HOME}/yeee'),
        ('THISIS', '~/a/test'),
        ('YOLO', '~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')
    ]
    assert list(parse_env_file_contents(lines)) == expected_output
```

# Generated at 2024-06-03 05:07:02.090877
```python
    lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']
    expected_output = [
        ('TEST', '${HOME}/yeee'),
        ('THISIS', '~/a/test'),
        ('YOLO', '~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')
    ]
    assert list(parse_env_file_contents(lines)) == expected_output
```

# Generated at 2024-06-03 05:07:04.745170
```python
    lines = [
        'TEST=${HOME}/yeee',
        'THISIS=~/a/test',
        'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST'
    ]
    expected_output = [
        ('TEST', '${HOME}/yeee'),
        ('THISIS', '~/a/test'),
        ('YOLO', '~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')
    ]
    assert list(parse_env_file_contents(lines)) == expected_output
```

# Generated at 2024-06-03 05:07:06.769879
```python
    lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']
    expected_output = [
        ('TEST', '${HOME}/yeee'),
        ('THISIS', '~/a/test'),
        ('YOLO', '~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')
    ]
    assert list(parse_env_file_contents(lines)) == expected_output
```

# Generated at 2024-06-03 05:07:09.786830
```python
    lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']
    expected_output = [
        ('TEST', '${HOME}/yeee'),
        ('THISIS', '~/a/test'),
        ('YOLO', '~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')
    ]
    assert list(parse_env_file_contents(lines)) == expected_output
```

# Generated at 2024-06-03 05:07:12.708635
```python
    lines = [
        'TEST=${HOME}/yeee',
        'THISIS=~/a/test',
        'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST',
        'SINGLE_QUOTE=\'single_quote_value\'',
        'DOUBLE_QUOTE="double_quote_value"',
        'ESCAPED_DOUBLE_QUOTE="escaped\\nvalue"'
    ]
    expected_output = [
        ('TEST', '${HOME}/yeee'),
        ('THISIS', '~/a/test'),
        ('YOLO', '~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST'),
        ('SINGLE_QUOTE', 'single_quote_value'),
        ('DOUBLE_QUOTE', 'double_quote_value'),
        ('ESCAPED_DOUBLE_QUOTE', 'escaped\nvalue')
    ]
    assert list(parse_env_file_contents(lines)) == expected_output
```

# Generated at 2024-06-03 05:07:14.669178
```python
    lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']
    expected_output = [
        ('TEST', '${HOME}/yeee'),
        ('THISIS', '~/a/test'),
        ('YOLO', '~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')
    ]
    assert list(parse_env_file_contents(lines)) == expected_output
```

# Generated at 2024-06-03 05:07:16.263179
```python
    lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']
    expected_output = [
        ('TEST', '${HOME}/yeee'),
        ('THISIS', '~/a/test'),
        ('YOLO', '~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')
    ]
    assert list(parse_env_file_contents(lines)) == expected_output
```

# Generated at 2024-06-03 05:07:19.450757
```python
    lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']
    expected_output = [
        ('TEST', '${HOME}/yeee'),
        ('THISIS', '~/a/test'),
        ('YOLO', '~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')
    ]
    assert list(parse_env_file_contents(lines)) == expected_output
```

# Generated at 2024-06-03 05:07:21.591033
```python
    lines = [
        'TEST=${HOME}/yeee',
        'THISIS=~/a/test',
        'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST'
    ]
    expected_output = [
        ('TEST', '${HOME}/yeee'),
        ('THISIS', '~/a/test'),
        ('YOLO', '~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')
    ]
    assert list(parse_env_file_contents(lines)) == expected_output
```

# Generated at 2024-06-03 05:08:26.696303
```python
    lines = [
        'TEST=${HOME}/yeee',
        'THISIS=~/a/test',
        'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST'
    ]
    expected_output = [
        ('TEST', '${HOME}/yeee'),
        ('THISIS', '~/a/test'),
        ('YOLO', '~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')
    ]
    assert list(parse_env_file_contents(lines)) == expected_output
```

# Generated at 2024-06-03 05:08:28.686663
```python
    lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']
    expected_output = [
        ('TEST', '${HOME}/yeee'),
        ('THISIS', '~/a/test'),
        ('YOLO', '~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')
    ]
    assert list(parse_env_file_contents(lines)) == expected_output
```

# Generated at 2024-06-03 05:08:30.578680
```python
    lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']
    expected_output = [
        ('TEST', '${HOME}/yeee'),
        ('THISIS', '~/a/test'),
        ('YOLO', '~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')
    ]
    assert list(parse_env_file_contents(lines)) == expected_output
```

# Generated at 2024-06-03 05:08:32.359922
```python
    lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']
    expected_output = [
        ('TEST', '${HOME}/yeee'),
        ('THISIS', '~/a/test'),
        ('YOLO', '~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')
    ]
    assert list(parse_env_file_contents(lines)) == expected_output


# Generated at 2024-06-03 05:08:35.238887
```python
    lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']
    expected_output = [
        ('TEST', '${HOME}/yeee'),
        ('THISIS', '~/a/test'),
        ('YOLO', '~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')
    ]
    assert list(parse_env_file_contents(lines)) == expected_output
```

# Generated at 2024-06-03 05:08:37.024020
```python
    lines = [
        'TEST=${HOME}/yeee',
        'THISIS=~/a/test',
        'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST'
    ]
    expected_output = [
        ('TEST', '${HOME}/yeee'),
        ('THISIS', '~/a/test'),
        ('YOLO', '~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')
    ]
    assert list(parse_env_file_contents(lines)) == expected_output
```

# Generated at 2024-06-03 05:08:38.694802
```python
    lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']
    expected_output = [
        ('TEST', '${HOME}/yeee'),
        ('THISIS', '~/a/test'),
        ('YOLO', '~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')
    ]
    assert list(parse_env_file_contents(lines)) == expected_output
```

# Generated at 2024-06-03 05:08:40.462134
```python
    lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']
    expected_output = [
        ('TEST', '${HOME}/yeee'),
        ('THISIS', '~/a/test'),
        ('YOLO', '~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')
    ]
    assert list(parse_env_file_contents(lines)) == expected_output
```

# Generated at 2024-06-03 05:08:42.998255
```python
    lines = [
        'TEST=${HOME}/yeee',
        'THISIS=~/a/test',
        'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST',
        'SINGLE_QUOTE=\'single_quote_value\'',
        'DOUBLE_QUOTE="double_quote_value"',
        'ESCAPED_DOUBLE_QUOTE="escaped\\nnewline"'
    ]
    expected_output = [
        ('TEST', '${HOME}/yeee'),
        ('THISIS', '~/a/test'),
        ('YOLO', '~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST'),
        ('SINGLE_QUOTE', 'single_quote_value'),
        ('DOUBLE_QUOTE', 'double_quote_value'),
        ('ESCAPED_DOUBLE_QUOTE', 'escaped\nnewline')
    ]
    assert list(parse_env_file_contents(lines)) == expected_output
```

# Generated at 2024-06-03 05:08:44.937330
```python
    lines = [
        'TEST=${HOME}/yeee',
        'THISIS=~/a/test',
        'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST'
    ]
    expected_output = [
        ('TEST', '${HOME}/yeee'),
        ('THISIS', '~/a/test'),
        ('YOLO', '~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')
    ]
    assert list(parse_env_file_contents(lines)) == expected_output
```

# Generated at 2024-06-03 05:10:52.844065
```python
    lines = [
        'TEST=${HOME}/yeee',
        'THISIS=~/a/test',
        'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST',
        'SINGLE_QUOTE=\'single_quote_value\'',
        'DOUBLE_QUOTE="double_quote_value"',
        'ESCAPED_DOUBLE_QUOTE="escaped\\nvalue"'
    ]
    expected_output = [
        ('TEST', '${HOME}/yeee'),
        ('THISIS', '~/a/test'),
        ('YOLO', '~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST'),
        ('SINGLE_QUOTE', 'single_quote_value'),
        ('DOUBLE_QUOTE', 'double_quote_value'),
        ('ESCAPED_DOUBLE_QUOTE', 'escaped\nvalue')
    ]
    assert list(parse_env_file_contents(lines)) == expected_output
```

# Generated at 2024-06-03 05:10:57.539296
```python
    lines = [
        'TEST=${HOME}/yeee',
        'THISIS=~/a/test',
        'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST'
    ]
    expected_output = [
        ('TEST', '${HOME}/yeee'),
        ('THISIS', '~/a/test'),
        ('YOLO', '~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')
    ]
    assert list(parse_env_file_contents(lines)) == expected_output
```

# Generated at 2024-06-03 05:10:59.416634
```python
    lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']
    expected_output = [
        ('TEST', '${HOME}/yeee'),
        ('THISIS', '~/a/test'),
        ('YOLO', '~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')
    ]
    assert list(parse_env_file_contents(lines)) == expected_output
```

# Generated at 2024-06-03 05:11:01.256573
```python
    lines = [
        'TEST=${HOME}/yeee',
        'THISIS=~/a/test',
        'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST'
    ]
    expected_output = [
        ('TEST', '${HOME}/yeee'),
        ('THISIS', '~/a/test'),
        ('YOLO', '~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')
    ]
    assert list(parse_env_file_contents(lines)) == expected_output
```

# Generated at 2024-06-03 05:11:03.445660
```python
    lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']
    expected_output = [
        ('TEST', '${HOME}/yeee'),
        ('THISIS', '~/a/test'),
        ('YOLO', '~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')
    ]
    assert list(parse_env_file_contents(lines)) == expected_output
```

# Generated at 2024-06-03 05:11:05.330069
```python
    lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']
    expected_output = [
        ('TEST', '${HOME}/yeee'),
        ('THISIS', '~/a/test'),
        ('YOLO', '~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')
    ]
    assert list(parse_env_file_contents(lines)) == expected_output
```

# Generated at 2024-06-03 05:11:07.730161
```python
    lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']
    expected_output = [
        ('TEST', '${HOME}/yeee'),
        ('THISIS', '~/a/test'),
        ('YOLO', '~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')
    ]
    assert list(parse_env_file_contents(lines)) == expected_output
```

# Generated at 2024-06-03 05:11:10.099677
```python
    lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']
    expected_output = [
        ('TEST', '${HOME}/yeee'),
        ('THISIS', '~/a/test'),
        ('YOLO', '~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')
    ]
    assert list(parse_env_file_contents(lines)) == expected_output
```

# Generated at 2024-06-03 05:11:12.485381
```python
    lines = [
        'TEST=${HOME}/yeee',
        'THISIS=~/a/test',
        'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST'
    ]
    expected_output = [
        ('TEST', '${HOME}/yeee'),
        ('THISIS', '~/a/test'),
        ('YOLO', '~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')
    ]
    assert list(parse_env_file_contents(lines)) == expected_output
```

# Generated at 2024-06-03 05:11:14.797141
```python
    lines = ['TEST=${HOME}/yeee', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']
    expected_output = [
        ('TEST', '${HOME}/yeee'),
        ('THISIS', '~/a/test'),
        ('YOLO', '~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')
    ]
    assert list(parse_env_file_contents(lines)) == expected_output
```