# Automatically generated by Pynguin.
import typesystem.json_schema as module_0
import typesystem.schemas as module_1
import typesystem.fields as module_2

def test_case_0():
    pass

def test_case_1():
    bool_0 = True
    field_0 = module_0.from_json_schema(bool_0)

def test_case_2():
    dict_0 = {}
    schema_definitions_0 = module_1.SchemaDefinitions()
    field_0 = module_0.type_from_json_schema(dict_0, schema_definitions_0)

def test_case_3():
    dict_0 = {}
    tuple_0 = module_0.get_valid_types(dict_0)

def test_case_4():
    bool_0 = False
    field_0 = module_0.from_json_schema(bool_0)
    var_0 = module_0.to_json_schema(field_0)

def test_case_5():
    bool_0 = True
    field_0 = module_0.from_json_schema(bool_0)
    var_0 = module_0.to_json_schema(field_0)
    field_1 = module_0.from_json_schema(bool_0)
    dict_0 = module_0.get_standard_properties(field_0)

def test_case_6():
    dict_0 = {}
    field_0 = module_0.from_json_schema(dict_0)
    dict_1 = module_0.get_standard_properties(field_0)

def test_case_7():
    schema_definitions_0 = None
    dict_0 = {}
    field_0 = module_0.type_from_json_schema(dict_0, schema_definitions_0)
    var_0 = module_0.to_json_schema(field_0)

def test_case_8():
    dict_0 = {}
    field_0 = module_0.from_json_schema(dict_0)

def test_case_9():
    str_0 = 'allOf'
    str_1 = 'default'
    dict_0 = {str_1: str_1, str_0: str_1}
    field_0 = module_0.from_json_schema(dict_0)

def test_case_10():
    bool_0 = False
    field_0 = module_0.from_json_schema(bool_0)
    str_0 = 'type'
    str_1 = 'string'
    str_2 = {str_0: str_1}
    field_1 = module_0.from_json_schema(str_2)
    str_3 = 'enum'
    str_4 = 'red'
    str_5 = 'green'
    str_6 = 'blue'
    str_7 = [str_4, str_5, str_6]
    str_8 = {str_3: str_7}
    field_2 = module_0.from_json_schema(str_8)
    str_9 = 'const'
    str_10 = 'constant_value'
    str_11 = {str_9: str_10}
    field_3 = module_0.from_json_schema(str_11)
    str_12 = 'allOf'
    str_13 = {str_0: str_1}
    str_14 = 'minLength'
    int_0 = 2
    int_1 = {str_14: int_0}
    var_0 = [str_13, int_1]
    var_1 = {str_12: var_0}
    field_4 = module_0.from_json_schema(var_1)

def test_case_11():
    bool_0 = False
    field_0 = module_0.from_json_schema(bool_0)
    str_0 = 'type'
    str_1 = 'string'
    str_2 = {str_0: str_1}
    field_1 = module_0.from_json_schema(str_2)
    str_3 = 'red'
    str_4 = 'const'
    str_5 = 'constant_value'
    str_6 = {str_4: str_5}
    field_2 = module_0.from_json_schema(str_6)
    str_7 = 'allOf'
    var_0 = {str_7: str_3}
    field_3 = module_0.from_json_schema(var_0)

def test_case_12():
    bool_0 = None
    str_0 = '\\\\\\34va,U*sYe$/YE'
    string_0 = module_2.String(trim_whitespace=bool_0, format=str_0)
    var_0 = module_0.to_json_schema(string_0)
    schema_definitions_0 = module_1.SchemaDefinitions()