# Automatically generated by Pynguin.
import ansible.cli.arguments.option_helpers as module_0
import argparse as module_1

def test_case_0():
    var_0 = module_0.unfrack_path()

def test_case_1():
    var_0 = module_0.version()
    ansible_version_0 = None
    bytes_0 = b"LK\xe1p\x18\x1eA\xb7\xf3\x1aI\x9en\x12'\x96\x8f\xf8"
    tuple_0 = None
    str_0 = 'D5xuH'
    prepend_list_action_0 = module_0.PrependListAction(ansible_version_0, bytes_0, tuple_0, ansible_version_0, str_0, ansible_version_0)

def test_case_2():
    var_0 = module_0.version()

def test_case_3():
    argument_parser_0 = module_1.ArgumentParser()
    var_0 = module_0.add_vault_options(argument_parser_0)
    str_0 = '--vault-id'
    str_1 = 'my_vault'
    str_2 = '--ask-vault-password'
    str_3 = [str_0, str_1, str_2]
    var_1 = argument_parser_0.parse_args(str_3)

def test_case_4():
    var_0 = module_0.version()
    ansible_version_0 = None
    bytes_0 = b"LK\xe1p\x18\x1eA\xb7\xf3\x1aI\x9en\x12'\x96\x8f\xf8"
    tuple_0 = None
    str_0 = 'D5xuH'
    prepend_list_action_0 = module_0.PrependListAction(ansible_version_0, bytes_0, tuple_0, ansible_version_0, str_0, ansible_version_0)
    str_1 = 'E\rsVbba?'
    var_1 = module_0.ensure_value(prepend_list_action_0, str_1, bytes_0)

def test_case_5():
    bytes_0 = b'09\xce\xaeF\x9bT\xcd\x11]'
    argument_parser_0 = module_1.ArgumentParser(bytes_0, bytes_0)
    var_0 = module_0.add_output_options(argument_parser_0)

def test_case_6():
    float_0 = -447.0
    bool_0 = True
    float_1 = 5449.5833
    prepend_list_action_0 = module_0.PrependListAction(bool_0, float_1)
    list_0 = [float_0, float_0, float_1]
    str_0 = '7`$bhcL[*m6Tuy0B-'
    ansible_version_0 = module_0.AnsibleVersion(float_0, float_0, prepend_list_action_0, list_0, str_0)
    set_0 = {ansible_version_0, prepend_list_action_0}
    str_1 = ':\n;'
    str_2 = None
    argument_parser_0 = module_1.ArgumentParser(set_0, str_1, float_0, str_2)
    var_0 = module_0.add_runas_options(argument_parser_0)

def test_case_7():
    argument_parser_0 = module_1.ArgumentParser()
    var_0 = module_0.add_inventory_options(argument_parser_0)
    str_0 = '-i'
    str_1 = 'inventory1'
    str_2 = '--inventory'
    str_3 = 'inventory2'
    str_4 = '--list-hosts'
    str_5 = '-l'
    str_6 = 'pattern'
    str_7 = [str_0, str_1, str_2, str_3, str_4, str_5, str_6]
    var_1 = argument_parser_0.parse_args(str_7)

def test_case_8():
    argument_parser_0 = module_1.ArgumentParser()
    var_0 = module_0.add_meta_options(argument_parser_0)
    str_0 = '--force-handlers'
    str_1 = '--flush-cache'
    str_2 = [str_0, str_1]
    var_1 = argument_parser_0.parse_args(str_2)
    var_2 = []
    var_3 = argument_parser_0.parse_args(var_2)

def test_case_9():
    argument_parser_0 = module_1.ArgumentParser()
    var_0 = module_0.add_vault_options(argument_parser_0)
    str_0 = '--vault-id'
    str_1 = 'my_vault'
    str_2 = '--ask-vault-password'
    str_3 = [str_0, str_1, str_2]
    var_1 = argument_parser_0.parse_args(str_3)
    str_4 = '--vault-password-file'
    str_5 = 'vault_pass.txt'
    str_6 = [str_0, str_1, str_4, str_5]
    var_2 = argument_parser_0.parse_args(str_6)

def test_case_10():
    argument_parser_0 = module_1.ArgumentParser()
    var_0 = module_0.add_connect_options(argument_parser_0)
    str_0 = '--private-key'
    str_1 = '-u'
    str_2 = 'test_user'
    str_3 = '-c'
    str_4 = '|3AT;,'
    str_5 = '30'
    str_6 = '--ssh-common-args'
    str_7 = 'test_ssh_args'
    str_8 = '--sftp-extra-args'
    str_9 = 'test_sftp_args'
    str_10 = '--scp-extra-args'
    str_11 = 'test_scp_args'
    str_12 = '--ssh-extra-args'
    str_13 = 'test_ssh_extra_args'
    str_14 = '-k'
    str_15 = [str_0, str_3, str_6, str_1, str_2, str_3, str_4, str_11, str_5, str_6, str_7, str_8, str_9, str_10, str_11, str_14, str_12, str_13, str_14]
    var_1 = argument_parser_0.parse_args(str_15)