# Automatically generated by Pynguin.
import thonny.jedi_utils as module_0

def test_case_0():
    try:
        float_0 = 1.33
        str_0 = 'W=j,/\x0b7McJ\ne;V|^\x0b'
        set_0 = {float_0, str_0, str_0}
        var_0 = module_0.get_statement_of_position(float_0, set_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'duplicate-key'
        int_0 = -155
        str_1 = '1k#YdkHMu'
        str_2 = 'py'
        bytes_0 = b'H\xa8\xe5\x0cb$\xfc2\x8d?T\x07\x03\xdbO\xc8\xf4\xbd\xbc\xf6'
        float_0 = 856.0
        dict_0 = {str_2: str_0, float_0: str_0}
        thonny_completion_0 = module_0.ThonnyCompletion(str_1, str_2, bytes_0, bytes_0, float_0, dict_0)
        tuple_0 = (thonny_completion_0, dict_0, thonny_completion_0, int_0)
        var_0 = module_0.parse_source(tuple_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'import os; os.'
        int_0 = 3000
        var_0 = module_0.get_script_completions(str_0, int_0, int_0, str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '%s is not callable'
        int_0 = 1392
        var_0 = module_0.get_script_completions(str_0, int_0, int_0, str_0, int_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'nxtPFN>ge8=l]q\x0co^\\@'
        int_0 = 963
        var_0 = module_0.get_definitions(str_0, int_0, int_0, str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = ''
        int_0 = None
        str_1 = '#g76 W'
        str_2 = '<<ThemeChanged>>'
        bool_0 = True
        bool_1 = True
        float_0 = -2456.2618
        thonny_completion_0 = module_0.ThonnyCompletion(str_2, str_2, bool_0, bool_1, float_0, str_1)
        tuple_0 = ()
        list_0 = None
        bytes_0 = b''
        dict_0 = {list_0: int_0, int_0: bytes_0, list_0: list_0}
        str_3 = 'Used when an undefined variable is accessed.'
        tuple_1 = ()
        str_4 = '$"Up.'
        int_1 = -1739
        set_0 = {int_1, str_4}
        thonny_completion_1 = module_0.ThonnyCompletion(str_0, str_4, tuple_1, int_1, bytes_0, set_0)
        thonny_completion_2 = module_0.ThonnyCompletion(str_0, str_0, tuple_0, dict_0, str_3, tuple_1)
        var_0 = module_0.get_script_completions(str_0, int_1, int_0, str_1, thonny_completion_2)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'g\t]))iq=e~'
        str_1 = 'K\t!Pp,Iyg 5)n'
        dict_0 = {str_0: str_0}
        list_0 = [dict_0, dict_0]
        var_0 = module_0.get_interpreter_completions(str_1, list_0)
        int_0 = None
        str_2 = None
        var_1 = module_0.get_script_completions(str_1, int_0, int_0, str_2)
        int_1 = 26
        int_2 = 626
        str_3 = None
        var_2 = module_0.get_definitions(str_0, int_1, int_2, str_3)
    except BaseException:
        pass