# Automatically generated by Pynguin.
import ansible.plugins.filter.core as module_0

def test_case_0():
    pass

def test_case_1():
    str_0 = 'pe2wt"]l'
    var_0 = module_0.regex_search(str_0, str_0)
    dict_0 = {str_0: var_0}
    var_1 = module_0.to_yaml(dict_0)
    var_2 = module_0.regex_escape(str_0)

def test_case_2():
    str_0 = '}G3`%hW,y\x0c'
    var_0 = module_0.to_bool(str_0)
    var_1 = module_0.regex_search(str_0, str_0)

def test_case_3():
    var_0 = module_0.regex_replace()

def test_case_4():
    str_0 = 'LO\x0cOlY3=_a'
    var_0 = module_0.regex_search(str_0, str_0)

def test_case_5():
    str_0 = 'pe2wt"]l'
    var_0 = module_0.regex_search(str_0, str_0)
    var_1 = module_0.regex_escape(str_0)

def test_case_6():
    bool_0 = None
    var_0 = module_0.randomize_list(bool_0)

def test_case_7():
    tuple_0 = None
    set_0 = {tuple_0, tuple_0, tuple_0, tuple_0}
    var_0 = module_0.randomize_list(set_0)

def test_case_8():
    filter_module_0 = module_0.FilterModule()
    var_0 = module_0.to_uuid(filter_module_0)

def test_case_9():
    bytes_0 = None
    var_0 = module_0.mandatory(bytes_0)

def test_case_10():
    str_0 = ']N"r\'u'
    var_0 = module_0.comment(str_0)
    var_1 = module_0.combine()

def test_case_11():
    str_0 = ']N"r\'u'
    var_0 = module_0.comment(str_0)

def test_case_12():
    bool_0 = True
    var_0 = module_0.b64encode(bool_0)

def test_case_13():
    int_0 = -1170
    list_0 = [int_0, int_0]
    var_0 = module_0.b64decode(list_0)

def test_case_14():
    int_0 = 78
    var_0 = module_0.regex_replace(int_0)
    str_0 = 'F&+/_S3`p/'
    var_1 = module_0.path_join(str_0)

def test_case_15():
    str_0 = ''
    str_1 = '*@O(|f502h_*Am<m'
    var_0 = module_0.comment(str_1)
    filter_module_0 = module_0.FilterModule()
    var_1 = filter_module_0.filters()
    var_2 = module_0.randomize_list(filter_module_0, str_0)
    filter_module_1 = None
    var_3 = module_0.to_bool(filter_module_1)
    var_4 = module_0.regex_replace(str_0)
    bool_0 = None
    var_5 = module_0.b64encode(bool_0)

def test_case_16():
    str_0 = '}G3`%hW,y\x0c'
    var_0 = module_0.to_bool(str_0)
    bytes_0 = b'$\x04@\xe5A\x06\x14'
    var_1 = module_0.path_join(str_0)
    filter_module_0 = module_0.FilterModule()
    var_2 = module_0.ternary(bytes_0, str_0, filter_module_0)
    var_3 = module_0.regex_search(str_0, str_0)

def test_case_17():
    bytes_0 = None
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    var_0 = module_0.rand(bytes_0, list_0)
    str_0 = 'hw.disknames'
    int_0 = 695
    var_1 = module_0.ternary(bytes_0, str_0, int_0)

def test_case_18():
    filter_module_0 = None
    var_0 = module_0.quote(filter_module_0)
    set_0 = set()
    str_0 = 'MYJV'
    dict_0 = {str_0: set_0, str_0: set_0}
    int_0 = 739
    tuple_0 = ()
    var_1 = module_0.rand(dict_0, int_0, tuple_0)

def test_case_19():
    bytes_0 = None
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    var_0 = module_0.rand(bytes_0, list_0)

def test_case_20():
    str_0 = 'K6$%]\n~}fC ^u'
    var_0 = module_0.regex_search(str_0, str_0)

def test_case_21():
    str_0 = '*@ON(|f502h_*Am<m'
    str_1 = 'posix_extended'
    var_0 = module_0.to_nice_yaml(str_1)
    var_1 = module_0.comment(str_0)
    tuple_0 = None
    set_0 = {var_1, tuple_0}
    var_2 = module_0.mandatory(tuple_0, set_0)

def test_case_22():
    bytes_0 = None
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    var_0 = module_0.rand(bytes_0, list_0)
    complex_0 = None
    list_1 = [list_0, var_0, var_0, complex_0]
    var_1 = module_0.combine(*list_1)

def test_case_23():
    str_0 = 'N0pzr|\tE?iMrRVHB'
    str_1 = 'LTCBQ}dU{KRqt@F5'
    str_2 = None
    dict_0 = {str_0: str_0, str_1: str_1, str_2: str_1}
    var_0 = module_0.from_yaml(dict_0)
    str_3 = ''
    var_1 = module_0.from_yaml_all(str_3)
    str_4 = 'N!$4cKnM@'
    var_2 = module_0.comment(str_4)
    set_0 = {str_4, str_4, var_2, str_3}
    var_3 = module_0.mandatory(set_0)

def test_case_24():
    set_0 = set()
    str_0 = 'MYJV'
    dict_0 = {str_0: set_0}
    int_0 = 739
    tuple_0 = ()
    var_0 = module_0.rand(dict_0, int_0, tuple_0)

def test_case_25():
    bool_0 = None
    str_0 = 'pythoNn'
    filter_module_0 = module_0.FilterModule()
    var_0 = module_0.regex_escape(filter_module_0)
    dict_0 = {str_0: bool_0}
    var_1 = module_0.randomize_list(str_0, dict_0)

def test_case_26():
    bool_0 = True
    list_0 = [bool_0]
    var_0 = module_0.combine(*list_0)

def test_case_27():
    list_0 = []
    filter_module_0 = module_0.FilterModule(*list_0)
    var_0 = module_0.subelements(list_0, list_0, filter_module_0)

def test_case_28():
    str_0 = "u*vj`.b'D*mdlST"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.regex_escape(str_0)
    dict_1 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0, str_0: dict_0, str_0: str_0, str_0: dict_0}
    set_0 = {str_0}
    tuple_0 = (set_0, set_0)
    var_1 = module_0.subelements(dict_1, str_0, tuple_0)
    var_2 = module_0.regex_replace()
    bool_0 = False
    str_1 = "'U"
    set_1 = {str_1, bool_0, str_1, var_2}
    float_0 = -906.925345
    var_3 = module_0.randomize_list(set_1, float_0)

def test_case_29():
    bytes_0 = None
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    var_0 = module_0.rand(bytes_0, list_0)
    complex_0 = None
    set_0 = None
    list_1 = [var_0, var_0, complex_0, set_0]
    var_1 = module_0.combine(*list_1)

def test_case_30():
    str_0 = '^\x0b>FIGs@f'
    var_0 = module_0.fileglob(str_0)

def test_case_31():
    str_0 = "u*vj`.b'D*mdlST"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    str_1 = 'k||Ru"p3|G@V*Y2x)'
    var_0 = module_0.fileglob(str_1)
    dict_1 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0, str_0: dict_0, str_0: str_0, str_0: dict_0}
    set_0 = {str_0}
    tuple_0 = (set_0, set_0)
    var_1 = module_0.subelements(dict_1, str_0, tuple_0)

def test_case_32():
    list_0 = []
    filter_module_0 = module_0.FilterModule(*list_0)
    var_0 = module_0.subelements(list_0, list_0, filter_module_0)
    var_1 = filter_module_0.filters()
    float_0 = -2078.0
    bool_0 = None
    dict_0 = {}
    var_2 = filter_module_0.filters()
    var_3 = module_0.combine(**dict_0)
    var_4 = module_0.flatten(list_0)
    bytes_0 = None
    dict_1 = {bytes_0: bool_0, float_0: dict_0}
    var_5 = module_0.regex_replace(dict_1)
    str_0 = 'Destination directory %s does not exist'
    str_1 = '?YbodDQJ'
    var_6 = module_0.ternary(bytes_0, str_0, str_1, str_0)