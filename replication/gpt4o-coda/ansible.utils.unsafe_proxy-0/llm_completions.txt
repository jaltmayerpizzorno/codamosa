

# Generated at 2024-06-01 13:45:51.497145
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var(b"test"), AnsibleUnsafeBytes)
    assert isinstance(wrap_var("test"), AnsibleUnsafeText)
    assert isinstance(wrap_var({"key": "value"}), dict)
    assert isinstance(wrap_var({"key": "value"})["key"], AnsibleUnsafeText)
    assert isinstance(wrap_var(["item1", "item2"]), list)
    assert isinstance(wrap_var(["item1", "item2"])[0], AnsibleUnsafeText)
    assert isinstance(wrap_var(set(["item1", "item2"])), set)
    assert all(isinstance(item, AnsibleUnsafeText) for item in wrap_var(set(["item1", "item2"])))
    assert isinstance(wrap_var(NativeJinjaText("test")), NativeJinjaUnsafeText)
```

# Generated at 2024-06-01 13:45:54.081250
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var(b"test"), AnsibleUnsafeBytes)
    assert isinstance(wrap_var("test"), AnsibleUnsafeText)
    assert isinstance(wrap_var({"key": "value"}), dict)
    assert isinstance(wrap_var(["item1", "item2"]), list)
    assert isinstance(wrap_var(set(["item1", "item2"])), set)
    assert isinstance(wrap_var(NativeJinjaText("test")), NativeJinjaUnsafeText)
    assert wrap_var(AnsibleUnsafeText("test")) is AnsibleUnsafeText("test")
```

# Generated at 2024-06-01 13:45:56.724517
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var("test"), AnsibleUnsafeText)
    assert isinstance(wrap_var(b"test"), AnsibleUnsafeBytes)
    assert isinstance(wrap_var({"key": "value"}), dict)
    assert isinstance(wrap_var(["item1", "item2"]), list)
    assert isinstance(wrap_var(("item1", "item2")), tuple)
    assert isinstance(wrap_var(set(["item1", "item2"])), set)
    assert isinstance(wrap_var(NativeJinjaText("test")), NativeJinjaUnsafeText)
    assert wrap_var(AnsibleUnsafeText("test")) is AnsibleUnsafeText("test")
    assert wrap_var(AnsibleUnsafeBytes(b"test")) is AnsibleUnsafeBytes(b"test")
```

# Generated at 2024-06-01 13:45:59.840879
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var(b"test"), AnsibleUnsafeBytes)
    assert isinstance(wrap_var("test"), AnsibleUnsafeText)
    assert isinstance(wrap_var({"key": "value"}), dict)
    assert isinstance(wrap_var(["item1", "item2"]), list)
    assert isinstance(wrap_var(("item1", "item2")), tuple)
    assert isinstance(wrap_var(set(["item1", "item2"])), set)
    assert isinstance(wrap_var(NativeJinjaText("test")), NativeJinjaUnsafeText)
    assert wrap_var(AnsibleUnsafeText("test")) is AnsibleUnsafeText("test")
    assert wrap_var(AnsibleUnsafeBytes(b"test")) is AnsibleUnsafeBytes(b"test")
```

# Generated at 2024-06-01 13:46:02.394194
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var(b'bytes'), AnsibleUnsafeBytes)
    assert isinstance(wrap_var('text'), AnsibleUnsafeText)
    assert isinstance(wrap_var({'key': 'value'}), dict)
    assert isinstance(wrap_var(['item1', 'item2']), list)
    assert isinstance(wrap_var(('item1', 'item2')), tuple)
    assert isinstance(wrap_var({'item1', 'item2'}), set)
    assert isinstance(wrap_var(NativeJinjaText('native text')), NativeJinjaUnsafeText)
    assert wrap_var(AnsibleUnsafeText('unsafe text')) is wrap_var(AnsibleUnsafeText('unsafe text'))
```

# Generated at 2024-06-01 13:46:05.414878
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var(b"test"), AnsibleUnsafeBytes)
    assert isinstance(wrap_var("test"), AnsibleUnsafeText)
    assert isinstance(wrap_var({"key": "value"}), dict)
    assert isinstance(wrap_var(["item1", "item2"]), list)
    assert isinstance(wrap_var(("item1", "item2")), tuple)
    assert isinstance(wrap_var({"item1", "item2"}), set)
    assert isinstance(wrap_var(NativeJinjaText("test")), NativeJinjaUnsafeText)
    assert wrap_var(AnsibleUnsafeText("test")) is wrap_var("test")
```

# Generated at 2024-06-01 13:46:08.361785
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var("test"), AnsibleUnsafeText)
    assert isinstance(wrap_var(b"test"), AnsibleUnsafeBytes)
    assert isinstance(wrap_var({"key": "value"}), dict)
    assert isinstance(wrap_var({"key": "value"})["key"], AnsibleUnsafeText)
    assert isinstance(wrap_var(["item1", "item2"]), list)
    assert isinstance(wrap_var(["item1", "item2"])[0], AnsibleUnsafeText)
    assert isinstance(wrap_var(set(["item1", "item2"])), set)
    assert all(isinstance(item, AnsibleUnsafeText) for item in wrap_var(set(["item1", "item2"])))
    assert isinstance(wrap_var(NativeJinjaText("test")), NativeJinjaUnsafeText)
```

# Generated at 2024-06-01 13:46:11.271628
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var(b"test"), AnsibleUnsafeBytes)
    assert isinstance(wrap_var("test"), AnsibleUnsafeText)
    assert isinstance(wrap_var({"key": "value"}), dict)
    assert isinstance(wrap_var(["item1", "item2"]), list)
    assert isinstance(wrap_var(("item1", "item2")), tuple)
    assert isinstance(wrap_var(set(["item1", "item2"])), set)
    assert isinstance(wrap_var(NativeJinjaText("test")), NativeJinjaUnsafeText)
    assert wrap_var(AnsibleUnsafeText("test")) is AnsibleUnsafeText("test")
```

# Generated at 2024-06-01 13:46:13.734387
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var("test"), AnsibleUnsafeText)
    assert isinstance(wrap_var(b"test"), AnsibleUnsafeBytes)
    assert isinstance(wrap_var({"key": "value"}), dict)
    assert isinstance(wrap_var(["item1", "item2"]), list)
    assert isinstance(wrap_var(("item1", "item2")), tuple)
    assert isinstance(wrap_var(set(["item1", "item2"])), set)
    assert isinstance(wrap_var(NativeJinjaText("test")), NativeJinjaUnsafeText)
    assert wrap_var(AnsibleUnsafeText("test")) is AnsibleUnsafeText("test")
    assert wrap_var(AnsibleUnsafeBytes(b"test")) is AnsibleUnsafeBytes(b"test")
```

# Generated at 2024-06-01 13:46:15.899150
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var(b"test"), AnsibleUnsafeBytes)
    assert isinstance(wrap_var("test"), AnsibleUnsafeText)
    assert isinstance(wrap_var({"key": "value"}), dict)
    assert isinstance(wrap_var(["item1", "item2"]), list)
    assert isinstance(wrap_var(("item1", "item2")), tuple)
    assert isinstance(wrap_var({"item1", "item2"}), set)
    assert isinstance(wrap_var(NativeJinjaText("test")), NativeJinjaUnsafeText)
    assert wrap_var(AnsibleUnsafeText("test")) is AnsibleUnsafeText("test")
```

# Generated at 2024-06-01 13:46:20.668820
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var("test"), AnsibleUnsafeText)
    assert isinstance(wrap_var(b"test"), AnsibleUnsafeBytes)
    assert isinstance(wrap_var({"key": "value"}), dict)
    assert isinstance(wrap_var(["item1", "item2"]), list)
    assert isinstance(wrap_var(("item1", "item2")), tuple)
    assert isinstance(wrap_var({"item1", "item2"}), set)
    assert isinstance(wrap_var(NativeJinjaText("test")), NativeJinjaUnsafeText)
    assert wrap_var(AnsibleUnsafeText("test")) is AnsibleUnsafeText("test")
    assert wrap_var(AnsibleUnsafeBytes(b"test")) is AnsibleUnsafeBytes(b"test")
```

# Generated at 2024-06-01 13:46:28.596957
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var("test"), AnsibleUnsafeText)
    assert isinstance(wrap_var(b"test"), AnsibleUnsafeBytes)
    assert isinstance(wrap_var({"key": "value"}), dict)
    assert isinstance(wrap_var({"key": "value"})["key"], AnsibleUnsafeText)
    assert isinstance(wrap_var(["item1", "item2"]), list)
    assert isinstance(wrap_var(["item1", "item2"])[0], AnsibleUnsafeText)
    assert isinstance(wrap_var(set(["item1", "item2"])), set)
    assert all(isinstance(item, AnsibleUnsafeText) for item in wrap_var(set(["item1", "item2"])))
    assert isinstance(wrap_var(NativeJinjaText("test")), NativeJinjaUnsafeText)
```

# Generated at 2024-06-01 13:46:31.070292
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var(b"test"), AnsibleUnsafeBytes)
    assert isinstance(wrap_var("test"), AnsibleUnsafeText)
    assert isinstance(wrap_var({"key": "value"}), dict)
    assert isinstance(wrap_var(["item1", "item2"]), list)
    assert isinstance(wrap_var(("item1", "item2")), tuple)
    assert isinstance(wrap_var({"item1", "item2"}), set)
    assert isinstance(wrap_var(NativeJinjaText("test")), NativeJinjaUnsafeText)
    assert wrap_var(AnsibleUnsafeText("test")) is AnsibleUnsafeText("test")
```

# Generated at 2024-06-01 13:46:34.074786
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var("test"), AnsibleUnsafeText)
    assert isinstance(wrap_var(b"test"), AnsibleUnsafeBytes)
    assert isinstance(wrap_var({"key": "value"}), dict)
    assert isinstance(wrap_var({"key": "value"})["key"], AnsibleUnsafeText)
    assert isinstance(wrap_var(["item1", "item2"]), list)
    assert isinstance(wrap_var(["item1", "item2"])[0], AnsibleUnsafeText)
    assert isinstance(wrap_var(set(["item1", "item2"])), set)
    assert all(isinstance(item, AnsibleUnsafeText) for item in wrap_var(set(["item1", "item2"])))
    assert isinstance(wrap_var(NativeJinjaText("test")), NativeJinjaUnsafeText)
```

# Generated at 2024-06-01 13:46:36.742652
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var("test"), AnsibleUnsafeText)
    assert isinstance(wrap_var(b"test"), AnsibleUnsafeBytes)
    assert isinstance(wrap_var({"key": "value"}), dict)
    assert isinstance(wrap_var({"key": "value"})["key"], AnsibleUnsafeText)
    assert isinstance(wrap_var(["item1", "item2"]), list)
    assert isinstance(wrap_var(["item1", "item2"])[0], AnsibleUnsafeText)
    assert isinstance(wrap_var(set(["item1", "item2"])), set)
    assert all(isinstance(item, AnsibleUnsafeText) for item in wrap_var(set(["item1", "item2"])))
    assert isinstance(wrap_var(NativeJinjaText("test")), NativeJinjaUnsafeText)
```

# Generated at 2024-06-01 13:46:39.114235
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var(b"test"), AnsibleUnsafeBytes)
    assert isinstance(wrap_var("test"), AnsibleUnsafeText)
    assert isinstance(wrap_var({"key": "value"}), dict)
    assert isinstance(wrap_var(["item1", "item2"]), list)
    assert isinstance(wrap_var(set(["item1", "item2"])), set)
    assert isinstance(wrap_var(NativeJinjaText("test")), NativeJinjaUnsafeText)
    assert wrap_var(AnsibleUnsafeText("test")) is wrap_var("test")
```

# Generated at 2024-06-01 13:46:45.537008
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var(b"test"), AnsibleUnsafeBytes)
    assert isinstance(wrap_var("test"), AnsibleUnsafeText)
    assert isinstance(wrap_var({"key": "value"}), dict)
    assert isinstance(wrap_var(["item1", "item2"]), list)
    assert isinstance(wrap_var(("item1", "item2")), tuple)
    assert isinstance(wrap_var({"item1", "item2"}), set)
    assert isinstance(wrap_var(NativeJinjaText("test")), NativeJinjaUnsafeText)
    assert wrap_var(AnsibleUnsafeText("test")) is AnsibleUnsafeText("test")
    assert wrap_var(AnsibleUnsafeBytes(b"test")) is AnsibleUnsafeBytes(b"test")
```

# Generated at 2024-06-01 13:46:48.967979
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var(b'bytes'), AnsibleUnsafeBytes)
    assert isinstance(wrap_var('text'), AnsibleUnsafeText)
    assert isinstance(wrap_var({'key': 'value'}), dict)
    assert isinstance(wrap_var({'key': 'value'})['key'], AnsibleUnsafeText)
    assert isinstance(wrap_var(['item1', 'item2']), list)
    assert isinstance(wrap_var(['item1', 'item2'])[0], AnsibleUnsafeText)
    assert isinstance(wrap_var(set(['item1', 'item2'])), set)
    assert all(isinstance(item, AnsibleUnsafeText) for item in wrap_var(set(['item1', 'item2'])))
    assert isinstance(wrap_var(NativeJinjaText('native')), NativeJinjaUnsafeText)
```

# Generated at 2024-06-01 13:46:52.318147
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var(b'bytes'), AnsibleUnsafeBytes)
    assert isinstance(wrap_var('text'), AnsibleUnsafeText)
    assert isinstance(wrap_var({'key': 'value'}), dict)
    assert isinstance(wrap_var({'key': 'value'})['key'], AnsibleUnsafeText)
    assert isinstance(wrap_var(['item1', 'item2']), list)
    assert isinstance(wrap_var(['item1', 'item2'])[0], AnsibleUnsafeText)
    assert isinstance(wrap_var(set(['item1', 'item2'])), set)
    assert all(isinstance(item, AnsibleUnsafeText) for item in wrap_var(set(['item1', 'item2'])))
    assert isinstance(wrap_var(NativeJinjaText('native text')), NativeJinjaUnsafeText)
```

# Generated at 2024-06-01 13:46:55.657976
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var(b"test"), AnsibleUnsafeBytes)
    assert isinstance(wrap_var("test"), AnsibleUnsafeText)
    assert isinstance(wrap_var({"key": "value"}), dict)
    assert isinstance(wrap_var({"key": "value"})["key"], AnsibleUnsafeText)
    assert isinstance(wrap_var([1, 2, 3]), list)
    assert all(isinstance(item, int) for item in wrap_var([1, 2, 3]))
    assert isinstance(wrap_var(set([1, 2, 3])), set)
    assert all(isinstance(item, int) for item in wrap_var(set([1, 2, 3])))
    assert isinstance(wrap_var(NativeJinjaText("test")), NativeJinjaUnsafeText)
```

# Generated at 2024-06-01 13:47:06.270561
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var(b"binary data"), AnsibleUnsafeBytes)
    assert isinstance(wrap_var("text data"), AnsibleUnsafeText)
    assert isinstance(wrap_var({"key": "value"}), dict)
    assert isinstance(wrap_var({"key": "value"})["key"], AnsibleUnsafeText)
    assert isinstance(wrap_var(["list", "of", "strings"]), list)
    assert all(isinstance(item, AnsibleUnsafeText) for item in wrap_var(["list", "of", "strings"]))
    assert isinstance(wrap_var(set(["set", "of", "strings"])), set)
    assert all(isinstance(item, AnsibleUnsafeText) for item in wrap_var(set(["set", "of", "strings"])))
    assert isinstance(wrap_var(NativeJinjaText("native jinja text")), NativeJinjaUnsafeText)
```

# Generated at 2024-06-01 13:47:08.859741
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var(b"binary data"), AnsibleUnsafeBytes)
    assert isinstance(wrap_var("text data"), AnsibleUnsafeText)
    assert isinstance(wrap_var({"key": "value"}), dict)
    assert isinstance(wrap_var({"key": "value"})["key"], AnsibleUnsafeText)
    assert isinstance(wrap_var([1, 2, 3]), list)
    assert all(isinstance(item, int) for item in wrap_var([1, 2, 3]))
    assert isinstance(wrap_var(set([1, 2, 3])), set)
    assert all(isinstance(item, int) for item in wrap_var(set([1, 2, 3])))
    assert isinstance(wrap_var(NativeJinjaText("native jinja text")), NativeJinjaUnsafeText)
```

# Generated at 2024-06-01 13:47:11.447965
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var(b'bytes'), AnsibleUnsafeBytes)
    assert isinstance(wrap_var('text'), AnsibleUnsafeText)
    assert isinstance(wrap_var({'key': 'value'}), dict)
    assert isinstance(wrap_var({'key': 'value'})['key'], AnsibleUnsafeText)
    assert isinstance(wrap_var(['item1', 'item2']), list)
    assert isinstance(wrap_var(['item1', 'item2'])[0], AnsibleUnsafeText)
    assert isinstance(wrap_var(set(['item1', 'item2'])), set)
    assert all(isinstance(item, AnsibleUnsafeText) for item in wrap_var(set(['item1', 'item2'])))
    assert isinstance(wrap_var(NativeJinjaText('native')), NativeJinjaUnsafeText)
```

# Generated at 2024-06-01 13:47:13.980062
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var("test"), AnsibleUnsafeText)
    assert isinstance(wrap_var(b"test"), AnsibleUnsafeBytes)
    assert isinstance(wrap_var({"key": "value"}), dict)
    assert isinstance(wrap_var(["item1", "item2"]), list)
    assert isinstance(wrap_var(("item1", "item2")), tuple)
    assert isinstance(wrap_var({"item1", "item2"}), set)
    assert isinstance(wrap_var(NativeJinjaText("test")), NativeJinjaUnsafeText)
    assert wrap_var(AnsibleUnsafeText("test")) is AnsibleUnsafeText("test")
    assert wrap_var(AnsibleUnsafeBytes(b"test")) is AnsibleUnsafeBytes(b"test")
```

# Generated at 2024-06-01 13:47:16.919492
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var(b"test"), AnsibleUnsafeBytes)
    assert isinstance(wrap_var("test"), AnsibleUnsafeText)
    assert isinstance(wrap_var({"key": "value"}), dict)
    assert isinstance(wrap_var(["item1", "item2"]), list)
    assert isinstance(wrap_var(("item1", "item2")), tuple)
    assert isinstance(wrap_var({"item1", "item2"}), set)
    assert isinstance(wrap_var(NativeJinjaText("test")), NativeJinjaUnsafeText)
    assert wrap_var(AnsibleUnsafeText("test")) is wrap_var("test")
```

# Generated at 2024-06-01 13:47:21.787490
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var("test"), AnsibleUnsafeText)
    assert isinstance(wrap_var(b"test"), AnsibleUnsafeBytes)
    assert isinstance(wrap_var({"key": "value"}), dict)
    assert isinstance(wrap_var(["item1", "item2"]), list)
    assert isinstance(wrap_var(("item1", "item2")), tuple)
    assert isinstance(wrap_var({"item1", "item2"}), set)
    assert isinstance(wrap_var(NativeJinjaText("test")), NativeJinjaUnsafeText)
    assert wrap_var(AnsibleUnsafeText("test")) is AnsibleUnsafeText("test")
    assert wrap_var(AnsibleUnsafeBytes(b"test")) is AnsibleUnsafeBytes(b"test")
```

# Generated at 2024-06-01 13:47:24.499113
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var(b"test"), AnsibleUnsafeBytes)
    assert isinstance(wrap_var("test"), AnsibleUnsafeText)
    assert isinstance(wrap_var({"key": "value"}), dict)
    assert isinstance(wrap_var({"key": "value"})["key"], AnsibleUnsafeText)
    assert isinstance(wrap_var([1, 2, 3]), list)
    assert all(isinstance(item, int) for item in wrap_var([1, 2, 3]))
    assert isinstance(wrap_var(set([1, 2, 3])), set)
    assert all(isinstance(item, int) for item in wrap_var(set([1, 2, 3])))
    assert isinstance(wrap_var(NativeJinjaText("test")), NativeJinjaUnsafeText)
```

# Generated at 2024-06-01 13:47:29.381352
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var(b'bytes'), AnsibleUnsafeBytes)
    assert isinstance(wrap_var('text'), AnsibleUnsafeText)
    assert isinstance(wrap_var({'key': 'value'}), dict)
    assert isinstance(wrap_var(['item1', 'item2']), list)
    assert isinstance(wrap_var(('item1', 'item2')), tuple)
    assert isinstance(wrap_var({'item1', 'item2'}), set)
    assert isinstance(wrap_var(NativeJinjaText('native text')), NativeJinjaUnsafeText)
    assert wrap_var(AnsibleUnsafeText('unsafe text')) is wrap_var(AnsibleUnsafeText('unsafe text'))
```

# Generated at 2024-06-01 13:47:31.745434
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var(b'bytes'), AnsibleUnsafeBytes)
    assert isinstance(wrap_var('text'), AnsibleUnsafeText)
    assert isinstance(wrap_var({'key': 'value'}), dict)
    assert isinstance(wrap_var(['item1', 'item2']), list)
    assert isinstance(wrap_var(('item1', 'item2')), tuple)
    assert isinstance(wrap_var({'item1', 'item2'}), set)
    assert isinstance(wrap_var(NativeJinjaText('native text')), NativeJinjaUnsafeText)
    assert wrap_var(AnsibleUnsafeText('unsafe text')) == AnsibleUnsafeText('unsafe text')
```

# Generated at 2024-06-01 13:47:34.445573
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var("test"), AnsibleUnsafeText)
    assert isinstance(wrap_var(b"test"), AnsibleUnsafeBytes)
    assert isinstance(wrap_var({"key": "value"}), dict)
    assert isinstance(wrap_var({"key": "value"})["key"], AnsibleUnsafeText)
    assert isinstance(wrap_var(["item1", "item2"]), list)
    assert isinstance(wrap_var(["item1", "item2"])[0], AnsibleUnsafeText)
    assert isinstance(wrap_var(set(["item1", "item2"])), set)
    assert all(isinstance(item, AnsibleUnsafeText) for item in wrap_var(set(["item1", "item2"])))
    assert isinstance(wrap_var(NativeJinjaText("test")), NativeJinjaUnsafeText)
```

# Generated at 2024-06-01 13:47:43.176595
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var(b'bytes'), AnsibleUnsafeBytes)
    assert isinstance(wrap_var('text'), AnsibleUnsafeText)
    assert isinstance(wrap_var({'key': 'value'}), dict)
    assert isinstance(wrap_var({'key': 'value'})['key'], AnsibleUnsafeText)
    assert isinstance(wrap_var(['item1', 'item2']), list)
    assert isinstance(wrap_var(['item1', 'item2'])[0], AnsibleUnsafeText)
    assert isinstance(wrap_var(set(['item1', 'item2'])), set)
    assert all(isinstance(item, AnsibleUnsafeText) for item in wrap_var(set(['item1', 'item2'])))
    assert isinstance(wrap_var(NativeJinjaText('native text')), NativeJinjaUnsafeText)
```

# Generated at 2024-06-01 13:47:46.708477
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var(b'bytes'), AnsibleUnsafeBytes)
    assert isinstance(wrap_var('text'), AnsibleUnsafeText)
    assert isinstance(wrap_var({'key': 'value'}), dict)
    assert isinstance(wrap_var({'key': 'value'})['key'], AnsibleUnsafeText)
    assert isinstance(wrap_var(['item1', 'item2']), list)
    assert isinstance(wrap_var(['item1', 'item2'])[0], AnsibleUnsafeText)
    assert isinstance(wrap_var(set(['item1', 'item2'])), set)
    assert all(isinstance(item, AnsibleUnsafeText) for item in wrap_var(set(['item1', 'item2'])))
    assert isinstance(wrap_var(NativeJinjaText('native text')), NativeJinjaUnsafeText)
```

# Generated at 2024-06-01 13:47:49.632075
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var(b"test"), AnsibleUnsafeBytes)
    assert isinstance(wrap_var("test"), AnsibleUnsafeText)
    assert isinstance(wrap_var({"key": "value"}), dict)
    assert isinstance(wrap_var(["item1", "item2"]), list)
    assert isinstance(wrap_var(("item1", "item2")), tuple)
    assert isinstance(wrap_var({"item1", "item2"}), set)
    assert isinstance(wrap_var(NativeJinjaText("test")), NativeJinjaUnsafeText)
    assert wrap_var(AnsibleUnsafeText("test")) is AnsibleUnsafeText("test")
    assert wrap_var(AnsibleUnsafeBytes(b"test")) is AnsibleUnsafeBytes(b"test")
```

# Generated at 2024-06-01 13:47:52.603839
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var("test"), AnsibleUnsafeText)
    assert isinstance(wrap_var(b"test"), AnsibleUnsafeBytes)
    assert isinstance(wrap_var({"key": "value"}), dict)
    assert isinstance(wrap_var({"key": "value"})["key"], AnsibleUnsafeText)
    assert isinstance(wrap_var(["item1", "item2"]), list)
    assert isinstance(wrap_var(["item1", "item2"])[0], AnsibleUnsafeText)
    assert isinstance(wrap_var(set(["item1", "item2"])), set)
    assert all(isinstance(item, AnsibleUnsafeText) for item in wrap_var(set(["item1", "item2"])))
    assert isinstance(wrap_var(NativeJinjaText("test")), NativeJinjaUnsafeText)
```

# Generated at 2024-06-01 13:47:54.954625
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var(b"test"), AnsibleUnsafeBytes)
    assert isinstance(wrap_var("test"), AnsibleUnsafeText)
    assert isinstance(wrap_var({"key": "value"}), dict)
    assert isinstance(wrap_var(["item1", "item2"]), list)
    assert isinstance(wrap_var(set(["item1", "item2"])), set)
    assert isinstance(wrap_var(NativeJinjaText("test")), NativeJinjaUnsafeText)
    assert wrap_var(AnsibleUnsafeText("test")) is wrap_var("test")
```

# Generated at 2024-06-01 13:47:57.699054
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var(b"test"), AnsibleUnsafeBytes)
    assert isinstance(wrap_var("test"), AnsibleUnsafeText)
    assert isinstance(wrap_var({"key": "value"}), dict)
    assert isinstance(wrap_var(["item1", "item2"]), list)
    assert isinstance(wrap_var(("item1", "item2")), tuple)
    assert isinstance(wrap_var({"item1", "item2"}), set)
    assert isinstance(wrap_var(NativeJinjaText("test")), NativeJinjaUnsafeText)
    assert wrap_var(AnsibleUnsafeText("test")) is AnsibleUnsafeText("test")
    assert wrap_var(AnsibleUnsafeBytes(b"test")) is AnsibleUnsafeBytes(b"test")
```

# Generated at 2024-06-01 13:48:00.735281
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var("test"), AnsibleUnsafeText)
    assert isinstance(wrap_var(b"test"), AnsibleUnsafeBytes)
    assert isinstance(wrap_var({"key": "value"}), dict)
    assert isinstance(wrap_var(["item1", "item2"]), list)
    assert isinstance(wrap_var(("item1", "item2")), tuple)
    assert isinstance(wrap_var({"item1", "item2"}), set)
    assert isinstance(wrap_var(NativeJinjaText("test")), NativeJinjaUnsafeText)
    assert wrap_var(AnsibleUnsafeText("test")) is AnsibleUnsafeText("test")
    assert wrap_var(AnsibleUnsafeBytes(b"test")) is AnsibleUnsafeBytes(b"test")
```

# Generated at 2024-06-01 13:48:04.398439
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var(b'bytes'), AnsibleUnsafeBytes)
    assert isinstance(wrap_var('text'), AnsibleUnsafeText)
    assert isinstance(wrap_var({'key': 'value'}), dict)
    assert isinstance(wrap_var({'key': 'value'})['key'], AnsibleUnsafeText)
    assert isinstance(wrap_var(['item1', 'item2']), list)
    assert isinstance(wrap_var(['item1', 'item2'])[0], AnsibleUnsafeText)
    assert isinstance(wrap_var(set(['item1', 'item2'])), set)
    assert all(isinstance(item, AnsibleUnsafeText) for item in wrap_var(set(['item1', 'item2'])))
    assert isinstance(wrap_var(NativeJinjaText('native')), NativeJinjaUnsafeText)
```

# Generated at 2024-06-01 13:48:07.605682
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var(b'bytes'), AnsibleUnsafeBytes)
    assert isinstance(wrap_var('text'), AnsibleUnsafeText)
    assert isinstance(wrap_var({'key': 'value'}), dict)
    assert isinstance(wrap_var(['item1', 'item2']), list)
    assert isinstance(wrap_var(('item1', 'item2')), tuple)
    assert isinstance(wrap_var({'item1', 'item2'}), set)
    assert isinstance(wrap_var(NativeJinjaText('native text')), NativeJinjaUnsafeText)
    assert wrap_var(AnsibleUnsafeText('unsafe text')) is wrap_var(AnsibleUnsafeText('unsafe text'))
```

# Generated at 2024-06-01 13:48:10.284714
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var(b'bytes'), AnsibleUnsafeBytes)
    assert isinstance(wrap_var('text'), AnsibleUnsafeText)
    assert isinstance(wrap_var({'key': 'value'}), dict)
    assert isinstance(wrap_var(['item1', 'item2']), list)
    assert isinstance(wrap_var(('item1', 'item2')), tuple)
    assert isinstance(wrap_var({'item1', 'item2'}), set)
    assert isinstance(wrap_var(NativeJinjaText('native text')), NativeJinjaUnsafeText)
    assert wrap_var(AnsibleUnsafeText('unsafe text')) is wrap_var(AnsibleUnsafeText('unsafe text'))
```

# Generated at 2024-06-01 13:48:22.364393
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var(b"test"), AnsibleUnsafeBytes)
    assert isinstance(wrap_var("test"), AnsibleUnsafeText)
    assert isinstance(wrap_var({"key": "value"}), dict)
    assert isinstance(wrap_var(["item1", "item2"]), list)
    assert isinstance(wrap_var(("item1", "item2")), tuple)
    assert isinstance(wrap_var({"item1", "item2"}), set)
    assert isinstance(wrap_var(NativeJinjaText("test")), NativeJinjaUnsafeText)
    assert wrap_var(AnsibleUnsafeText("test")) is AnsibleUnsafeText("test")
```

# Generated at 2024-06-01 13:48:24.806872
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var(b'bytes'), AnsibleUnsafeBytes)
    assert isinstance(wrap_var('text'), AnsibleUnsafeText)
    assert isinstance(wrap_var({'key': 'value'}), dict)
    assert isinstance(wrap_var(['item1', 'item2']), list)
    assert isinstance(wrap_var(('item1', 'item2')), tuple)
    assert isinstance(wrap_var({'item1', 'item2'}), set)
    assert isinstance(wrap_var(NativeJinjaText('native text')), NativeJinjaUnsafeText)
    assert wrap_var(AnsibleUnsafeText('unsafe text')) is wrap_var(AnsibleUnsafeText('unsafe text'))
```

# Generated at 2024-06-01 13:48:27.776659
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var(b'bytes'), AnsibleUnsafeBytes)
    assert isinstance(wrap_var('text'), AnsibleUnsafeText)
    assert isinstance(wrap_var({'key': 'value'}), dict)
    assert isinstance(wrap_var({'key': 'value'})['key'], AnsibleUnsafeText)
    assert isinstance(wrap_var(['item1', 'item2']), list)
    assert isinstance(wrap_var(['item1', 'item2'])[0], AnsibleUnsafeText)
    assert isinstance(wrap_var(set(['item1', 'item2'])), set)
    assert all(isinstance(item, AnsibleUnsafeText) for item in wrap_var(set(['item1', 'item2'])))
    assert isinstance(wrap_var(NativeJinjaText('native text')), NativeJinjaUnsafeText)
```

# Generated at 2024-06-01 13:48:30.993770
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var(b"test"), AnsibleUnsafeBytes)
    assert isinstance(wrap_var("test"), AnsibleUnsafeText)
    assert isinstance(wrap_var({"key": "value"}), dict)
    assert isinstance(wrap_var({"key": "value"})["key"], AnsibleUnsafeText)
    assert isinstance(wrap_var(["item1", "item2"]), list)
    assert isinstance(wrap_var(["item1", "item2"])[0], AnsibleUnsafeText)
    assert isinstance(wrap_var(set(["item1", "item2"])), set)
    assert all(isinstance(item, AnsibleUnsafeText) for item in wrap_var(set(["item1", "item2"])))
    assert isinstance(wrap_var(NativeJinjaText("test")), NativeJinjaUnsafeText)
```

# Generated at 2024-06-01 13:48:33.596180
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var(b'bytes'), AnsibleUnsafeBytes)
    assert isinstance(wrap_var('text'), AnsibleUnsafeText)
    assert isinstance(wrap_var({'key': 'value'}), dict)
    assert isinstance(wrap_var(['item1', 'item2']), list)
    assert isinstance(wrap_var(('item1', 'item2')), tuple)
    assert isinstance(wrap_var(set(['item1', 'item2'])), set)
    assert isinstance(wrap_var(NativeJinjaText('native text')), NativeJinjaUnsafeText)
    assert wrap_var(AnsibleUnsafeText('unsafe text')) == AnsibleUnsafeText('unsafe text')
```

# Generated at 2024-06-01 13:48:36.296574
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var(b"test"), AnsibleUnsafeBytes)
    assert isinstance(wrap_var("test"), AnsibleUnsafeText)
    assert isinstance(wrap_var({"key": "value"}), dict)
    assert isinstance(wrap_var(["item1", "item2"]), list)
    assert isinstance(wrap_var(set(["item1", "item2"])), set)
    assert isinstance(wrap_var(NativeJinjaText("test")), NativeJinjaUnsafeText)
    assert wrap_var(AnsibleUnsafeText("test")) is AnsibleUnsafeText("test")
    assert wrap_var(AnsibleUnsafeBytes(b"test")) is AnsibleUnsafeBytes(b"test")
```

# Generated at 2024-06-01 13:48:38.920434
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var(b'bytes'), AnsibleUnsafeBytes)
    assert isinstance(wrap_var('text'), AnsibleUnsafeText)
    assert isinstance(wrap_var({'key': 'value'}), dict)
    assert isinstance(wrap_var(['item1', 'item2']), list)
    assert isinstance(wrap_var(('item1', 'item2')), tuple)
    assert isinstance(wrap_var({'item1', 'item2'}), set)
    assert isinstance(wrap_var(NativeJinjaText('native text')), NativeJinjaUnsafeText)
    assert wrap_var(AnsibleUnsafeText('unsafe text')) is wrap_var(AnsibleUnsafeText('unsafe text'))
```

# Generated at 2024-06-01 13:48:44.596925
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var(b"test"), AnsibleUnsafeBytes)
    assert isinstance(wrap_var("test"), AnsibleUnsafeText)
    assert isinstance(wrap_var({"key": "value"}), dict)
    assert isinstance(wrap_var(["item1", "item2"]), list)
    assert isinstance(wrap_var(("item1", "item2")), tuple)
    assert isinstance(wrap_var({"item1", "item2"}), set)
    assert isinstance(wrap_var(NativeJinjaText("test")), NativeJinjaUnsafeText)
    assert wrap_var(AnsibleUnsafeText("test")) is AnsibleUnsafeText("test")
    assert wrap_var(AnsibleUnsafeBytes(b"test")) is AnsibleUnsafeBytes(b"test")
```

# Generated at 2024-06-01 13:48:47.717570
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var(b'bytes'), AnsibleUnsafeBytes)
    assert isinstance(wrap_var('text'), AnsibleUnsafeText)
    assert isinstance(wrap_var({'key': 'value'}), dict)
    assert isinstance(wrap_var({'key': 'value'})['key'], AnsibleUnsafeText)
    assert isinstance(wrap_var(['item1', 'item2']), list)
    assert isinstance(wrap_var(['item1', 'item2'])[0], AnsibleUnsafeText)
    assert isinstance(wrap_var(set(['item1', 'item2'])), set)
    assert all(isinstance(item, AnsibleUnsafeText) for item in wrap_var(set(['item1', 'item2'])))
    assert isinstance(wrap_var(NativeJinjaText('native text')), NativeJinjaUnsafeText)
```

# Generated at 2024-06-01 13:48:49.955827
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var(b'bytes'), AnsibleUnsafeBytes)
    assert isinstance(wrap_var('text'), AnsibleUnsafeText)
    assert isinstance(wrap_var({'key': 'value'}), dict)
    assert isinstance(wrap_var(['item1', 'item2']), list)
    assert isinstance(wrap_var(('item1', 'item2')), tuple)
    assert isinstance(wrap_var({'item1', 'item2'}), set)
    assert isinstance(wrap_var(NativeJinjaText('native text')), NativeJinjaUnsafeText)
    assert wrap_var(AnsibleUnsafeText('unsafe text')) is wrap_var(AnsibleUnsafeText('unsafe text'))
```

# Generated at 2024-06-01 13:49:12.592903
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var(b'bytes'), AnsibleUnsafeBytes)
    assert isinstance(wrap_var('text'), AnsibleUnsafeText)
    assert isinstance(wrap_var({'key': 'value'}), dict)
    assert isinstance(wrap_var(['item1', 'item2']), list)
    assert isinstance(wrap_var(('item1', 'item2')), tuple)
    assert isinstance(wrap_var({'item1', 'item2'}), set)
    assert isinstance(wrap_var(NativeJinjaText('native text')), NativeJinjaUnsafeText)
    assert wrap_var(AnsibleUnsafeText('unsafe text')) is wrap_var('unsafe text')
```

# Generated at 2024-06-01 13:49:15.140026
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var(b'bytes'), AnsibleUnsafeBytes)
    assert isinstance(wrap_var('text'), AnsibleUnsafeText)
    assert isinstance(wrap_var({'key': 'value'}), dict)
    assert isinstance(wrap_var(['item1', 'item2']), list)
    assert isinstance(wrap_var(('item1', 'item2')), tuple)
    assert isinstance(wrap_var({'item1', 'item2'}), set)
    assert isinstance(wrap_var(NativeJinjaText('native text')), NativeJinjaUnsafeText)
    assert wrap_var(AnsibleUnsafeText('unsafe text')) is wrap_var(AnsibleUnsafeText('unsafe text'))
```

# Generated at 2024-06-01 13:49:18.854905
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var(b'bytes'), AnsibleUnsafeBytes)
    assert isinstance(wrap_var('text'), AnsibleUnsafeText)
    assert isinstance(wrap_var({'key': 'value'}), dict)
    assert isinstance(wrap_var({'key': 'value'})['key'], AnsibleUnsafeText)
    assert isinstance(wrap_var(['item1', 'item2']), list)
    assert isinstance(wrap_var(['item1', 'item2'])[0], AnsibleUnsafeText)
    assert isinstance(wrap_var(set(['item1', 'item2'])), set)
    assert all(isinstance(item, AnsibleUnsafeText) for item in wrap_var(set(['item1', 'item2'])))
    assert isinstance(wrap_var(NativeJinjaText('native')), NativeJinjaUnsafeText)
```

# Generated at 2024-06-01 13:49:23.424108
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var(b"test"), AnsibleUnsafeBytes)
    assert isinstance(wrap_var("test"), AnsibleUnsafeText)
    assert isinstance(wrap_var({"key": "value"}), dict)
    assert isinstance(wrap_var(["item1", "item2"]), list)
    assert isinstance(wrap_var(("item1", "item2")), tuple)
    assert isinstance(wrap_var({"item1", "item2"}), set)
    assert isinstance(wrap_var(NativeJinjaText("test")), NativeJinjaUnsafeText)
    assert wrap_var(AnsibleUnsafeText("test")) is AnsibleUnsafeText("test")
```

# Generated at 2024-06-01 13:49:26.073012
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var(b"test"), AnsibleUnsafeBytes)
    assert isinstance(wrap_var("test"), AnsibleUnsafeText)
    assert isinstance(wrap_var({"key": "value"}), dict)
    assert isinstance(wrap_var(["item1", "item2"]), list)
    assert isinstance(wrap_var(set(["item1", "item2"])), set)
    assert isinstance(wrap_var(NativeJinjaText("test")), NativeJinjaUnsafeText)
    assert wrap_var(AnsibleUnsafeText("test")) is wrap_var("test")
```

# Generated at 2024-06-01 13:49:28.804641
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var(b"test"), AnsibleUnsafeBytes)
    assert isinstance(wrap_var("test"), AnsibleUnsafeText)
    assert isinstance(wrap_var({"key": "value"}), dict)
    assert isinstance(wrap_var({"key": "value"})["key"], AnsibleUnsafeText)
    assert isinstance(wrap_var([1, 2, 3]), list)
    assert all(isinstance(item, int) for item in wrap_var([1, 2, 3]))
    assert isinstance(wrap_var(set([1, 2, 3])), set)
    assert all(isinstance(item, int) for item in wrap_var(set([1, 2, 3])))
    assert isinstance(wrap_var(NativeJinjaText("test")), NativeJinjaUnsafeText)
```

# Generated at 2024-06-01 13:49:33.421682
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var(b"test"), AnsibleUnsafeBytes)
    assert isinstance(wrap_var("test"), AnsibleUnsafeText)
    assert isinstance(wrap_var({"key": "value"}), dict)
    assert isinstance(wrap_var(["item1", "item2"]), list)
    assert isinstance(wrap_var(("item1", "item2")), tuple)
    assert isinstance(wrap_var({"item1", "item2"}), set)
    assert isinstance(wrap_var(NativeJinjaText("test")), NativeJinjaUnsafeText)
    assert wrap_var(AnsibleUnsafeText("test")) is AnsibleUnsafeText("test")
```

# Generated at 2024-06-01 13:49:39.282369
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var(b"test"), AnsibleUnsafeBytes)
    assert isinstance(wrap_var("test"), AnsibleUnsafeText)
    assert isinstance(wrap_var({"key": "value"}), dict)
    assert isinstance(wrap_var({"key": "value"})["key"], AnsibleUnsafeText)
    assert isinstance(wrap_var(["item1", "item2"]), list)
    assert isinstance(wrap_var(["item1", "item2"])[0], AnsibleUnsafeText)
    assert isinstance(wrap_var(set(["item1", "item2"])), set)
    assert all(isinstance(item, AnsibleUnsafeText) for item in wrap_var(set(["item1", "item2"])))
    assert isinstance(wrap_var(NativeJinjaText("test")), NativeJinjaUnsafeText)
```

# Generated at 2024-06-01 13:49:42.078152
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var("test"), AnsibleUnsafeText)
    assert isinstance(wrap_var(b"test"), AnsibleUnsafeBytes)
    assert isinstance(wrap_var({"key": "value"}), dict)
    assert isinstance(wrap_var(["item1", "item2"]), list)
    assert isinstance(wrap_var(("item1", "item2")), tuple)
    assert isinstance(wrap_var({"item1", "item2"}), set)
    assert isinstance(wrap_var(NativeJinjaText("test")), NativeJinjaUnsafeText)
    assert wrap_var(AnsibleUnsafeText("test")) is AnsibleUnsafeText("test")
    assert wrap_var(AnsibleUnsafeBytes(b"test")) is AnsibleUnsafeBytes(b"test")
```

# Generated at 2024-06-01 13:49:45.740419
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var(b'bytes'), AnsibleUnsafeBytes)
    assert isinstance(wrap_var('text'), AnsibleUnsafeText)
    assert isinstance(wrap_var({'key': 'value'}), dict)
    assert isinstance(wrap_var(['item1', 'item2']), list)
    assert isinstance(wrap_var(('item1', 'item2')), tuple)
    assert isinstance(wrap_var(set(['item1', 'item2'])), set)
    assert isinstance(wrap_var(NativeJinjaText('native text')), NativeJinjaUnsafeText)
    assert wrap_var(AnsibleUnsafeText('unsafe text')) is wrap_var('unsafe text')
```

# Generated at 2024-06-01 13:50:28.318908
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var(b'bytes'), AnsibleUnsafeBytes)
    assert isinstance(wrap_var('text'), AnsibleUnsafeText)
    assert isinstance(wrap_var({'key': 'value'}), dict)
    assert isinstance(wrap_var(['item1', 'item2']), list)
    assert isinstance(wrap_var(('item1', 'item2')), tuple)
    assert isinstance(wrap_var({'item1', 'item2'}), set)
    assert isinstance(wrap_var(NativeJinjaText('native text')), NativeJinjaUnsafeText)
    assert wrap_var(AnsibleUnsafeText('unsafe text')) == AnsibleUnsafeText('unsafe text')
```

# Generated at 2024-06-01 13:50:35.782569
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var("test"), AnsibleUnsafeText)
    assert isinstance(wrap_var(b"test"), AnsibleUnsafeBytes)
    assert isinstance(wrap_var({"key": "value"}), dict)
    assert isinstance(wrap_var({"key": "value"})["key"], AnsibleUnsafeText)
    assert isinstance(wrap_var(["item1", "item2"]), list)
    assert isinstance(wrap_var(["item1", "item2"])[0], AnsibleUnsafeText)
    assert isinstance(wrap_var(set(["item1", "item2"])), set)
    assert all(isinstance(item, AnsibleUnsafeText) for item in wrap_var(set(["item1", "item2"])))
    assert isinstance(wrap_var(NativeJinjaText("test")), NativeJinjaUnsafeText)
```

# Generated at 2024-06-01 13:50:38.987361
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var(b"test"), AnsibleUnsafeBytes)
    assert isinstance(wrap_var("test"), AnsibleUnsafeText)
    assert isinstance(wrap_var({"key": "value"}), dict)
    assert isinstance(wrap_var(["item1", "item2"]), list)
    assert isinstance(wrap_var(("item1", "item2")), tuple)
    assert isinstance(wrap_var({"item1", "item2"}), set)
    assert isinstance(wrap_var(NativeJinjaText("test")), NativeJinjaUnsafeText)
    assert wrap_var(AnsibleUnsafeText("test")) is AnsibleUnsafeText("test")
```

# Generated at 2024-06-01 13:50:41.989975
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var(b'bytes'), AnsibleUnsafeBytes)
    assert isinstance(wrap_var('text'), AnsibleUnsafeText)
    assert isinstance(wrap_var({'key': 'value'}), dict)
    assert isinstance(wrap_var({'key': 'value'})['key'], AnsibleUnsafeText)
    assert isinstance(wrap_var(['item1', 'item2']), list)
    assert isinstance(wrap_var(['item1', 'item2'])[0], AnsibleUnsafeText)
    assert isinstance(wrap_var(set(['item1', 'item2'])), set)
    assert all(isinstance(item, AnsibleUnsafeText) for item in wrap_var(set(['item1', 'item2'])))
    assert isinstance(wrap_var(NativeJinjaText('native text')), NativeJinjaUnsafeText)
```

# Generated at 2024-06-01 13:50:44.835397
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var(b"test"), AnsibleUnsafeBytes)
    assert isinstance(wrap_var("test"), AnsibleUnsafeText)
    assert isinstance(wrap_var({"key": "value"}), dict)
    assert isinstance(wrap_var({"key": "value"})["key"], AnsibleUnsafeText)
    assert isinstance(wrap_var(["item1", "item2"]), list)
    assert isinstance(wrap_var(["item1", "item2"])[0], AnsibleUnsafeText)
    assert isinstance(wrap_var(set(["item1", "item2"])), set)
    assert all(isinstance(item, AnsibleUnsafeText) for item in wrap_var(set(["item1", "item2"])))
    assert isinstance(wrap_var(NativeJinjaText("test")), NativeJinjaUnsafeText)
```

# Generated at 2024-06-01 13:50:47.546352
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var("test"), AnsibleUnsafeText)
    assert isinstance(wrap_var(b"test"), AnsibleUnsafeBytes)
    assert isinstance(wrap_var({"key": "value"}), dict)
    assert isinstance(wrap_var({"key": "value"})["key"], AnsibleUnsafeText)
    assert isinstance(wrap_var(["item1", "item2"]), list)
    assert isinstance(wrap_var(["item1", "item2"])[0], AnsibleUnsafeText)
    assert isinstance(wrap_var(set(["item1", "item2"])), set)
    assert all(isinstance(item, AnsibleUnsafeText) for item in wrap_var(set(["item1", "item2"])))
    assert isinstance(wrap_var(NativeJinjaText("test")), NativeJinjaUnsafeText)
```

# Generated at 2024-06-01 13:50:57.427791
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var("test"), AnsibleUnsafeText)
    assert isinstance(wrap_var(b"test"), AnsibleUnsafeBytes)
    assert isinstance(wrap_var({"key": "value"}), dict)
    assert isinstance(wrap_var(["item1", "item2"]), list)
    assert isinstance(wrap_var(("item1", "item2")), tuple)
    assert isinstance(wrap_var(set(["item1", "item2"])), set)
    assert isinstance(wrap_var(NativeJinjaText("test")), NativeJinjaUnsafeText)
    assert wrap_var(AnsibleUnsafeText("test")) is AnsibleUnsafeText("test")
    assert wrap_var(AnsibleUnsafeBytes(b"test")) is AnsibleUnsafeBytes(b"test")
```

# Generated at 2024-06-01 13:51:00.716028
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var(b'bytes'), AnsibleUnsafeBytes)
    assert isinstance(wrap_var('text'), AnsibleUnsafeText)
    assert isinstance(wrap_var({'key': 'value'}), dict)
    assert isinstance(wrap_var(['item1', 'item2']), list)
    assert isinstance(wrap_var(('item1', 'item2')), tuple)
    assert isinstance(wrap_var({'item1', 'item2'}), set)
    assert isinstance(wrap_var(NativeJinjaText('native text')), NativeJinjaUnsafeText)
    assert wrap_var(AnsibleUnsafeText('unsafe text')) is wrap_var(AnsibleUnsafeText('unsafe text'))
```

# Generated at 2024-06-01 13:51:03.348668
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var(b'bytes'), AnsibleUnsafeBytes)
    assert isinstance(wrap_var('text'), AnsibleUnsafeText)
    assert isinstance(wrap_var({'key': 'value'}), dict)
    assert isinstance(wrap_var(['item1', 'item2']), list)
    assert isinstance(wrap_var(('item1', 'item2')), tuple)
    assert isinstance(wrap_var(set(['item1', 'item2'])), set)
    assert isinstance(wrap_var(NativeJinjaText('native text')), NativeJinjaUnsafeText)
    assert wrap_var(AnsibleUnsafeText('unsafe text')) == AnsibleUnsafeText('unsafe text')
```

# Generated at 2024-06-01 13:51:08.012572
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var("test"), AnsibleUnsafeText)
    assert isinstance(wrap_var(b"test"), AnsibleUnsafeBytes)
    assert isinstance(wrap_var({"key": "value"}), dict)
    assert isinstance(wrap_var({"key": "value"})["key"], AnsibleUnsafeText)
    assert isinstance(wrap_var(["item1", "item2"]), list)
    assert isinstance(wrap_var(["item1", "item2"])[0], AnsibleUnsafeText)
    assert isinstance(wrap_var(set(["item1", "item2"])), set)
    assert all(isinstance(item, AnsibleUnsafeText) for item in wrap_var(set(["item1", "item2"])))
    assert isinstance(wrap_var(NativeJinjaText("test")), NativeJinjaUnsafeText)
```

# Generated at 2024-06-01 13:51:50.648623
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var(b'bytes'), AnsibleUnsafeBytes)
    assert isinstance(wrap_var('text'), AnsibleUnsafeText)
    assert isinstance(wrap_var({'key': 'value'}), dict)
    assert isinstance(wrap_var(['item1', 'item2']), list)
    assert isinstance(wrap_var(('item1', 'item2')), tuple)
    assert isinstance(wrap_var({'item1', 'item2'}), set)
    assert isinstance(wrap_var(NativeJinjaText('native text')), NativeJinjaUnsafeText)
    assert wrap_var(AnsibleUnsafeText('unsafe text')) == AnsibleUnsafeText('unsafe text')
```

# Generated at 2024-06-01 13:51:54.241987
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var(b'bytes'), AnsibleUnsafeBytes)
    assert isinstance(wrap_var('text'), AnsibleUnsafeText)
    assert isinstance(wrap_var({'key': 'value'}), dict)
    assert isinstance(wrap_var({'key': 'value'})['key'], AnsibleUnsafeText)
    assert isinstance(wrap_var(['item1', 'item2']), list)
    assert isinstance(wrap_var(['item1', 'item2'])[0], AnsibleUnsafeText)
    assert isinstance(wrap_var(set(['item1', 'item2'])), set)
    assert all(isinstance(item, AnsibleUnsafeText) for item in wrap_var(set(['item1', 'item2'])))
    assert isinstance(wrap_var(NativeJinjaText('native text')), NativeJinjaUnsafeText)
```

# Generated at 2024-06-01 13:51:57.519703
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var(b"test"), AnsibleUnsafeBytes)
    assert isinstance(wrap_var("test"), AnsibleUnsafeText)
    assert isinstance(wrap_var({"key": "value"}), dict)
    assert isinstance(wrap_var({"key": "value"})["key"], AnsibleUnsafeText)
    assert isinstance(wrap_var(["item1", "item2"]), list)
    assert isinstance(wrap_var(["item1", "item2"])[0], AnsibleUnsafeText)
    assert isinstance(wrap_var(set(["item1", "item2"])), set)
    assert all(isinstance(item, AnsibleUnsafeText) for item in wrap_var(set(["item1", "item2"])))
    assert isinstance(wrap_var(NativeJinjaText("test")), NativeJinjaUnsafeText)
```

# Generated at 2024-06-01 13:52:00.554195
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var(b"test"), AnsibleUnsafeBytes)
    assert isinstance(wrap_var("test"), AnsibleUnsafeText)
    assert isinstance(wrap_var({"key": "value"}), dict)
    assert isinstance(wrap_var(["item1", "item2"]), list)
    assert isinstance(wrap_var(("item1", "item2")), tuple)
    assert isinstance(wrap_var({"item1", "item2"}), set)
    assert isinstance(wrap_var(NativeJinjaText("test")), NativeJinjaUnsafeText)
    assert isinstance(wrap_var(AnsibleUnsafeText("test")), AnsibleUnsafeText)
    assert isinstance(wrap_var(AnsibleUnsafeBytes(b"test")), AnsibleUnsafeBytes)
```

# Generated at 2024-06-01 13:52:03.353377
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var("test"), AnsibleUnsafeText)
    assert isinstance(wrap_var(b"test"), AnsibleUnsafeBytes)
    assert isinstance(wrap_var({"key": "value"}), dict)
    assert isinstance(wrap_var({"key": "value"})["key"], AnsibleUnsafeText)
    assert isinstance(wrap_var(["item1", "item2"]), list)
    assert isinstance(wrap_var(["item1", "item2"])[0], AnsibleUnsafeText)
    assert isinstance(wrap_var(set(["item1", "item2"])), set)
    assert all(isinstance(item, AnsibleUnsafeText) for item in wrap_var(set(["item1", "item2"])))
    assert isinstance(wrap_var(NativeJinjaText("test")), NativeJinjaUnsafeText)
```

# Generated at 2024-06-01 13:52:06.299996
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var(b"test"), AnsibleUnsafeBytes)
    assert isinstance(wrap_var("test"), AnsibleUnsafeText)
    assert isinstance(wrap_var({"key": "value"}), dict)
    assert isinstance(wrap_var(["item1", "item2"]), list)
    assert isinstance(wrap_var(("item1", "item2")), tuple)
    assert isinstance(wrap_var({"item1", "item2"}), set)
    assert isinstance(wrap_var(NativeJinjaText("test")), NativeJinjaUnsafeText)
    assert wrap_var(AnsibleUnsafeText("test")) is AnsibleUnsafeText("test")
```

# Generated at 2024-06-01 13:52:09.265521
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var(b'bytes'), AnsibleUnsafeBytes)
    assert isinstance(wrap_var('text'), AnsibleUnsafeText)
    assert isinstance(wrap_var({'key': 'value'}), dict)
    assert isinstance(wrap_var({'key': 'value'})['key'], AnsibleUnsafeText)
    assert isinstance(wrap_var(['item1', 'item2']), list)
    assert isinstance(wrap_var(['item1', 'item2'])[0], AnsibleUnsafeText)
    assert isinstance(wrap_var(set(['item1', 'item2'])), set)
    assert all(isinstance(item, AnsibleUnsafeText) for item in wrap_var(set(['item1', 'item2'])))
    assert isinstance(wrap_var(NativeJinjaText('native text')), NativeJinjaUnsafeText)
```

# Generated at 2024-06-01 13:52:12.044997
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var(b'bytes'), AnsibleUnsafeBytes)
    assert isinstance(wrap_var('text'), AnsibleUnsafeText)
    assert isinstance(wrap_var({'key': 'value'}), dict)
    assert isinstance(wrap_var({'key': 'value'})['key'], AnsibleUnsafeText)
    assert isinstance(wrap_var(['item1', 'item2']), list)
    assert isinstance(wrap_var(['item1', 'item2'])[0], AnsibleUnsafeText)
    assert isinstance(wrap_var(set(['item1', 'item2'])), set)
    assert all(isinstance(item, AnsibleUnsafeText) for item in wrap_var(set(['item1', 'item2'])))
    assert isinstance(wrap_var(NativeJinjaText('native')), NativeJinjaUnsafeText)
```

# Generated at 2024-06-01 13:52:15.229945
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var("test"), AnsibleUnsafeText)
    assert isinstance(wrap_var(b"test"), AnsibleUnsafeBytes)
    assert isinstance(wrap_var({"key": "value"}), dict)
    assert isinstance(wrap_var({"key": "value"})["key"], AnsibleUnsafeText)
    assert isinstance(wrap_var(["item1", "item2"]), list)
    assert isinstance(wrap_var(["item1", "item2"])[0], AnsibleUnsafeText)
    assert isinstance(wrap_var(set(["item1", "item2"])), set)
    assert all(isinstance(item, AnsibleUnsafeText) for item in wrap_var(set(["item1", "item2"])))
    assert isinstance(wrap_var(NativeJinjaText("test")), NativeJinjaUnsafeText)
```

# Generated at 2024-06-01 13:52:18.001759
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var("test"), AnsibleUnsafeText)
    assert isinstance(wrap_var(b"test"), AnsibleUnsafeBytes)
    assert isinstance(wrap_var({"key": "value"}), dict)
    assert isinstance(wrap_var(["item1", "item2"]), list)
    assert isinstance(wrap_var(("item1", "item2")), tuple)
    assert isinstance(wrap_var(set(["item1", "item2"])), set)
    assert isinstance(wrap_var(NativeJinjaText("test")), NativeJinjaUnsafeText)
    assert wrap_var(AnsibleUnsafeText("test")) is AnsibleUnsafeText("test")
    assert wrap_var(AnsibleUnsafeBytes(b"test")) is AnsibleUnsafeBytes(b"test")
```

# Generated at 2024-06-01 13:53:39.926574
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var(b'bytes'), AnsibleUnsafeBytes)
    assert isinstance(wrap_var('text'), AnsibleUnsafeText)
    assert isinstance(wrap_var({'key': 'value'}), dict)
    assert isinstance(wrap_var(['item1', 'item2']), list)
    assert isinstance(wrap_var(('item1', 'item2')), tuple)
    assert isinstance(wrap_var(set(['item1', 'item2'])), set)
    assert isinstance(wrap_var(NativeJinjaText('native text')), NativeJinjaUnsafeText)
    assert wrap_var(AnsibleUnsafeText('unsafe text')) is wrap_var(AnsibleUnsafeText('unsafe text'))
```

# Generated at 2024-06-01 13:53:43.127060
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var(b'bytes'), AnsibleUnsafeBytes)
    assert isinstance(wrap_var('text'), AnsibleUnsafeText)
    assert isinstance(wrap_var({'key': 'value'}), dict)
    assert isinstance(wrap_var(['item1', 'item2']), list)
    assert isinstance(wrap_var(('item1', 'item2')), tuple)
    assert isinstance(wrap_var({'item1', 'item2'}), set)
    assert isinstance(wrap_var(NativeJinjaText('native text')), NativeJinjaUnsafeText)
    assert wrap_var(AnsibleUnsafeText('unsafe text')) == AnsibleUnsafeText('unsafe text')
```

# Generated at 2024-06-01 13:53:46.265488
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var("test"), AnsibleUnsafeText)
    assert isinstance(wrap_var(b"test"), AnsibleUnsafeBytes)
    assert isinstance(wrap_var({"key": "value"}), dict)
    assert isinstance(wrap_var({"key": "value"})["key"], AnsibleUnsafeText)
    assert isinstance(wrap_var(["item1", "item2"]), list)
    assert isinstance(wrap_var(["item1", "item2"])[0], AnsibleUnsafeText)
    assert isinstance(wrap_var(set(["item1", "item2"])), set)
    assert all(isinstance(item, AnsibleUnsafeText) for item in wrap_var(set(["item1", "item2"])))
    assert isinstance(wrap_var(NativeJinjaText("test")), NativeJinjaUnsafeText)
```

# Generated at 2024-06-01 13:53:48.759467
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var("test"), AnsibleUnsafeText)
    assert isinstance(wrap_var(b"test"), AnsibleUnsafeBytes)
    assert isinstance(wrap_var({"key": "value"}), dict)
    assert isinstance(wrap_var({"key": "value"})["key"], AnsibleUnsafeText)
    assert isinstance(wrap_var(["item1", "item2"]), list)
    assert isinstance(wrap_var(["item1", "item2"])[0], AnsibleUnsafeText)
    assert isinstance(wrap_var(set(["item1", "item2"])), set)
    assert all(isinstance(item, AnsibleUnsafeText) for item in wrap_var(set(["item1", "item2"])))
    assert isinstance(wrap_var(NativeJinjaText("test")), NativeJinjaUnsafeText)
```

# Generated at 2024-06-01 13:53:51.470287
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var(b"test"), AnsibleUnsafeBytes)
    assert isinstance(wrap_var("test"), AnsibleUnsafeText)
    assert isinstance(wrap_var({"key": "value"}), dict)
    assert isinstance(wrap_var({"key": "value"})["key"], AnsibleUnsafeText)
    assert isinstance(wrap_var(["item1", "item2"]), list)
    assert isinstance(wrap_var(["item1", "item2"])[0], AnsibleUnsafeText)
    assert isinstance(wrap_var(set(["item1", "item2"])), set)
    assert all(isinstance(item, AnsibleUnsafeText) for item in wrap_var(set(["item1", "item2"])))
    assert isinstance(wrap_var(NativeJinjaText("test")), NativeJinjaUnsafeText)
```

# Generated at 2024-06-01 13:53:53.965228
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var(b'bytes'), AnsibleUnsafeBytes)
    assert isinstance(wrap_var('text'), AnsibleUnsafeText)
    assert isinstance(wrap_var({'key': 'value'}), dict)
    assert isinstance(wrap_var(['item1', 'item2']), list)
    assert isinstance(wrap_var(('item1', 'item2')), tuple)
    assert isinstance(wrap_var(set(['item1', 'item2'])), set)
    assert isinstance(wrap_var(NativeJinjaText('native text')), NativeJinjaUnsafeText)
    assert wrap_var(AnsibleUnsafeText('unsafe text')) == AnsibleUnsafeText('unsafe text')
```

# Generated at 2024-06-01 13:53:57.779588
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var(b'bytes'), AnsibleUnsafeBytes)
    assert isinstance(wrap_var('text'), AnsibleUnsafeText)
    assert isinstance(wrap_var({'key': 'value'}), dict)
    assert isinstance(wrap_var(['item1', 'item2']), list)
    assert isinstance(wrap_var(('item1', 'item2')), tuple)
    assert isinstance(wrap_var({'item1', 'item2'}), set)
    assert isinstance(wrap_var(NativeJinjaText('native text')), NativeJinjaUnsafeText)
    assert wrap_var(AnsibleUnsafeText('unsafe text')) is wrap_var(AnsibleUnsafeText('unsafe text'))
```

# Generated at 2024-06-01 13:54:01.046916
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var(b"test"), AnsibleUnsafeBytes)
    assert isinstance(wrap_var("test"), AnsibleUnsafeText)
    assert isinstance(wrap_var({"key": "value"}), dict)
    assert isinstance(wrap_var({"key": "value"})["key"], AnsibleUnsafeText)
    assert isinstance(wrap_var(["item1", "item2"]), list)
    assert isinstance(wrap_var(["item1", "item2"])[0], AnsibleUnsafeText)
    assert isinstance(wrap_var(set(["item1", "item2"])), set)
    assert all(isinstance(item, AnsibleUnsafeText) for item in wrap_var(set(["item1", "item2"])))
    assert isinstance(wrap_var(NativeJinjaText("test")), NativeJinjaUnsafeText)
```

# Generated at 2024-06-01 13:54:03.865950
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var(b'bytes'), AnsibleUnsafeBytes)
    assert isinstance(wrap_var('text'), AnsibleUnsafeText)
    assert isinstance(wrap_var({'key': 'value'}), dict)
    assert isinstance(wrap_var(['item1', 'item2']), list)
    assert isinstance(wrap_var(('item1', 'item2')), tuple)
    assert isinstance(wrap_var(set(['item1', 'item2'])), set)
    assert isinstance(wrap_var(NativeJinjaText('native text')), NativeJinjaUnsafeText)
    assert wrap_var(AnsibleUnsafeText('unsafe text')) is wrap_var(AnsibleUnsafeText('unsafe text'))
```

# Generated at 2024-06-01 13:54:06.875015
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var("test"), AnsibleUnsafeText)
    assert isinstance(wrap_var(b"test"), AnsibleUnsafeBytes)
    assert isinstance(wrap_var({"key": "value"}), dict)
    assert isinstance(wrap_var({"key": "value"})["key"], AnsibleUnsafeText)
    assert isinstance(wrap_var(["item1", "item2"]), list)
    assert isinstance(wrap_var(["item1", "item2"])[0], AnsibleUnsafeText)
    assert isinstance(wrap_var(set(["item1", "item2"])), set)
    assert all(isinstance(item, AnsibleUnsafeText) for item in wrap_var(set(["item1", "item2"])))
    assert isinstance(wrap_var(NativeJinjaText("test")), NativeJinjaUnsafeText)
```

# Generated at 2024-06-01 13:55:37.229216
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var(b'bytes'), AnsibleUnsafeBytes)
    assert isinstance(wrap_var('text'), AnsibleUnsafeText)
    assert isinstance(wrap_var({'key': 'value'}), dict)
    assert isinstance(wrap_var(['item1', 'item2']), list)
    assert isinstance(wrap_var(('item1', 'item2')), tuple)
    assert isinstance(wrap_var({'item1', 'item2'}), set)
    assert isinstance(wrap_var(NativeJinjaText('native text')), NativeJinjaUnsafeText)
    assert wrap_var(AnsibleUnsafeText('unsafe text')) is wrap_var(AnsibleUnsafeText('unsafe text'))
```

# Generated at 2024-06-01 13:55:39.472594
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var(b'bytes'), AnsibleUnsafeBytes)
    assert isinstance(wrap_var('text'), AnsibleUnsafeText)
    assert isinstance(wrap_var({'key': 'value'}), dict)
    assert isinstance(wrap_var(['item1', 'item2']), list)
    assert isinstance(wrap_var(('item1', 'item2')), tuple)
    assert isinstance(wrap_var({'item1', 'item2'}), set)
    assert isinstance(wrap_var(NativeJinjaText('native text')), NativeJinjaUnsafeText)
    assert wrap_var(AnsibleUnsafeText('unsafe text')) is wrap_var(AnsibleUnsafeText('unsafe text'))
```

# Generated at 2024-06-01 13:55:43.165015
```python
    assert wrap_var(None) is None
    assert isinstance(wrap_var(b"test"), AnsibleUnsafeBytes)
    assert isinstance(wrap_var("test"), AnsibleUnsafeText)
    assert isinstance(wrap_var({"key": "value"}), dict)
    assert isinstance(wrap_var(["item1", "item2"]), list)
    assert isinstance(wrap_var(("item1", "item2")), tuple)
    assert isinstance(wrap_var({"item1", "item2"}), set)
    assert isinstance(wrap_var(NativeJinjaText("test")), NativeJinjaUnsafeText)
    assert wrap_var(AnsibleUnsafeText("test")) is wrap_var("test")
```