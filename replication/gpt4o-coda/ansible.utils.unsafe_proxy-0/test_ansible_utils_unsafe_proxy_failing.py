# Automatically generated by Pynguin.
import ansible.utils.unsafe_proxy as module_0

def test_case_0():
    try:
        str_0 = 'kUAsNxl\rZ9@Kf_cBQ'
        var_0 = module_0.wrap_var(str_0)
        ansible_unsafe_bytes_0 = module_0.AnsibleUnsafeBytes()
        var_1 = ansible_unsafe_bytes_0.decode()
        var_2 = module_0.to_unsafe_text()
    except BaseException:
        pass

def test_case_1():
    try:
        ansible_unsafe_0 = module_0.AnsibleUnsafe()
        ansible_unsafe_bytes_0 = module_0.AnsibleUnsafeBytes()
        float_0 = 0.001
        tuple_0 = (ansible_unsafe_0, ansible_unsafe_bytes_0, float_0)
        var_0 = module_0.wrap_var(tuple_0)
        list_0 = None
        var_1 = module_0.to_unsafe_bytes(*list_0)
    except BaseException:
        pass

def test_case_2():
    try:
        ansible_unsafe_0 = module_0.AnsibleUnsafe()
        dict_0 = {}
        ansible_unsafe_bytes_0 = module_0.AnsibleUnsafeBytes()
        var_0 = ansible_unsafe_bytes_0.decode()
        ansible_unsafe_text_0 = None
        var_1 = module_0.wrap_var(ansible_unsafe_text_0)
        var_2 = module_0.to_unsafe_bytes(**dict_0)
    except BaseException:
        pass

def test_case_3():
    try:
        var_0 = module_0.to_unsafe_bytes()
    except BaseException:
        pass

def test_case_4():
    try:
        var_0 = module_0.to_unsafe_text()
    except BaseException:
        pass

def test_case_5():
    try:
        ansible_unsafe_0 = module_0.AnsibleUnsafe()
        ansible_unsafe_bytes_0 = module_0.AnsibleUnsafeBytes()
        float_0 = 26.623297939173842
        tuple_0 = (ansible_unsafe_0, ansible_unsafe_bytes_0, float_0)
        var_0 = module_0.wrap_var(tuple_0)
        ansible_unsafe_text_0 = module_0.AnsibleUnsafeText()
        var_1 = ansible_unsafe_text_0.encode()
        set_0 = {var_0, ansible_unsafe_bytes_0}
        var_2 = module_0.wrap_var(set_0)
        unsafe_proxy_0 = module_0.UnsafeProxy()
    except BaseException:
        pass

def test_case_6():
    try:
        ansible_unsafe_0 = module_0.AnsibleUnsafe()
        ansible_unsafe_bytes_0 = module_0.AnsibleUnsafeBytes()
        float_0 = 0.001
        tuple_0 = (ansible_unsafe_0, ansible_unsafe_bytes_0, float_0)
        str_0 = 'DAZt^ol.;Ii\x0cg<(nN]'
        str_1 = "This module does not currently support using glob patterns, found '%s' in service name: %s"
        str_2 = ':S>` zs'
        dict_0 = {}
        ansible_unsafe_1 = module_0.AnsibleUnsafe(**dict_0)
        dict_1 = {str_0: tuple_0, str_0: tuple_0, str_1: ansible_unsafe_0, str_2: ansible_unsafe_1}
        var_0 = module_0.wrap_var(dict_1)
        var_1 = module_0.wrap_var(tuple_0)
        var_2 = module_0.to_unsafe_bytes()
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = ''
        list_0 = [str_0, str_0, str_0]
        unsafe_proxy_0 = module_0.UnsafeProxy(*list_0)
        ansible_unsafe_text_0 = module_0.AnsibleUnsafeText()
        unsafe_proxy_1 = module_0.UnsafeProxy()
    except BaseException:
        pass

def test_case_8():
    try:
        ansible_unsafe_bytes_0 = module_0.AnsibleUnsafeBytes()
        list_0 = [ansible_unsafe_bytes_0, ansible_unsafe_bytes_0, ansible_unsafe_bytes_0, ansible_unsafe_bytes_0]
        list_1 = [ansible_unsafe_bytes_0, ansible_unsafe_bytes_0, ansible_unsafe_bytes_0, ansible_unsafe_bytes_0]
        str_0 = 'ZpgPAN?'
        dict_0 = {str_0: list_1, str_0: str_0}
        unsafe_proxy_0 = module_0.UnsafeProxy(*list_1, **dict_0)
        var_0 = unsafe_proxy_0.__new__(list_0, ansible_unsafe_bytes_0)
    except BaseException:
        pass