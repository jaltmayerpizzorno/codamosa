# Automatically generated by Pynguin.
import ansible.parsing.yaml.objects as module_0

def test_case_0():
    ansible_mapping_0 = module_0.AnsibleMapping()

def test_case_1():
    str_0 = 'An&k<$0,M\x0b\r'
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(str_0)

def test_case_2():
    str_0 = '"%J'
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(str_0)
    var_0 = ansible_vault_encrypted_unicode_0.isprintable()

def test_case_3():
    bool_0 = False
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(bool_0)
    var_0 = ansible_vault_encrypted_unicode_0.is_encrypted()

def test_case_4():
    str_0 = '\\='
    dict_0 = {}
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(dict_0)
    var_0 = ansible_vault_encrypted_unicode_0.__eq__(str_0)

def test_case_5():
    str_0 = 'Force overwriting an existing {0} and its dependencies.'
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(str_0)
    var_0 = ansible_vault_encrypted_unicode_0.__ne__(str_0)

def test_case_6():
    bytes_0 = b'\xf7\x87\xba\xbe\xf7\xd1\xbe\xbe\xc9\xd6'
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(bytes_0)
    var_0 = ansible_vault_encrypted_unicode_0.__reversed__()

def test_case_7():
    bool_0 = True
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(bool_0)
    ansible_vault_encrypted_unicode_1 = module_0.AnsibleVaultEncryptedUnicode(ansible_vault_encrypted_unicode_0)

def test_case_8():
    str_0 = '@YaP%`-bG+VR6{/@:J\\'
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(str_0)
    var_0 = ansible_vault_encrypted_unicode_0.__unicode__()

def test_case_9():
    str_0 = 'self'
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(str_0)
    var_0 = ansible_vault_encrypted_unicode_0.__repr__()

def test_case_10():
    ansible_unicode_0 = module_0.AnsibleUnicode()
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(ansible_unicode_0)
    var_0 = ansible_vault_encrypted_unicode_0.__hash__()

def test_case_11():
    ansible_base_y_a_m_l_object_0 = module_0.AnsibleBaseYAMLObject()
    bool_0 = None
    list_0 = [bool_0, ansible_base_y_a_m_l_object_0, bool_0]
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(list_0)
    str_0 = '\n0 packages upgraded, 0 newly installed'
    var_0 = ansible_vault_encrypted_unicode_0.islower()
    var_1 = ansible_vault_encrypted_unicode_0.__lt__(str_0)
    var_2 = ansible_vault_encrypted_unicode_0.isupper()
    var_3 = ansible_vault_encrypted_unicode_0.isspace()
    var_4 = ansible_vault_encrypted_unicode_0.__radd__(ansible_base_y_a_m_l_object_0)
    var_5 = ansible_vault_encrypted_unicode_0.is_encrypted()
    var_6 = ansible_vault_encrypted_unicode_0.isalnum()
    ansible_unicode_0 = module_0.AnsibleUnicode()
    var_7 = ansible_vault_encrypted_unicode_0.__ge__(ansible_unicode_0)

def test_case_12():
    float_0 = 2240.0
    str_0 = '9(B"48\x0br1h'
    dict_0 = {str_0: str_0}
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(dict_0)
    ansible_unicode_0 = module_0.AnsibleUnicode()
    var_0 = ansible_vault_encrypted_unicode_0.__contains__(ansible_unicode_0)
    var_1 = ansible_vault_encrypted_unicode_0.is_encrypted()
    var_2 = ansible_vault_encrypted_unicode_0.rsplit()
    var_3 = ansible_vault_encrypted_unicode_0.__add__(float_0)

def test_case_13():
    bool_0 = True
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(bool_0)
    var_0 = ansible_vault_encrypted_unicode_0.isupper()
    str_0 = 'cPJ[)aZvga'
    var_1 = ansible_vault_encrypted_unicode_0.__eq__(str_0)
    str_1 = 'gO\rbc@3D`9P0{ w]q'
    var_2 = ansible_vault_encrypted_unicode_0.__add__(str_1)

def test_case_14():
    float_0 = 2240.0
    str_0 = '9(B"48\x0br1h'
    dict_0 = {str_0: str_0}
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(dict_0)
    ansible_unicode_0 = module_0.AnsibleUnicode()
    var_0 = ansible_vault_encrypted_unicode_0.is_encrypted()
    var_1 = ansible_vault_encrypted_unicode_0.rsplit()
    var_2 = ansible_vault_encrypted_unicode_0.__add__(float_0)

def test_case_15():
    bool_0 = False
    str_0 = ' d,y\n\nYx1b$My%VBo'
    list_0 = [str_0, str_0]
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(list_0)
    var_0 = ansible_vault_encrypted_unicode_0.__rmod__(bool_0)

def test_case_16():
    ansible_base_y_a_m_l_object_0 = module_0.AnsibleBaseYAMLObject()
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(ansible_base_y_a_m_l_object_0)
    var_0 = ansible_vault_encrypted_unicode_0.capitalize()

def test_case_17():
    str_0 = '!.)R\tc|vby.}'
    float_0 = 1.0
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(float_0)
    ansible_vault_encrypted_unicode_1 = module_0.AnsibleVaultEncryptedUnicode(ansible_vault_encrypted_unicode_0)
    var_0 = ansible_vault_encrypted_unicode_1.isdecimal()
    ansible_unicode_0 = module_0.AnsibleUnicode()
    dict_0 = {}
    ansible_vault_encrypted_unicode_2 = module_0.AnsibleVaultEncryptedUnicode(dict_0)
    var_1 = ansible_vault_encrypted_unicode_2.__gt__(str_0)

def test_case_18():
    int_0 = -2070
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(int_0)
    var_0 = ansible_vault_encrypted_unicode_0.isidentifier()

def test_case_19():
    ansible_sequence_0 = module_0.AnsibleSequence()
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(ansible_sequence_0)
    var_0 = ansible_vault_encrypted_unicode_0.islower()

def test_case_20():
    set_0 = set()
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(set_0)
    var_0 = ansible_vault_encrypted_unicode_0.isspace()

def test_case_21():
    set_0 = set()
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(set_0)
    var_0 = ansible_vault_encrypted_unicode_0.istitle()

def test_case_22():
    str_0 = 'H;K1V7~{CK'
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(str_0)
    var_0 = ansible_vault_encrypted_unicode_0.lstrip()

def test_case_23():
    ansible_sequence_0 = module_0.AnsibleSequence()
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(ansible_sequence_0)
    var_0 = ansible_vault_encrypted_unicode_0.rstrip()

def test_case_24():
    ansible_unicode_0 = module_0.AnsibleUnicode()
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(ansible_unicode_0)
    var_0 = ansible_vault_encrypted_unicode_0.split()

def test_case_25():
    int_0 = -170
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(int_0)
    var_0 = ansible_vault_encrypted_unicode_0.rsplit()

def test_case_26():
    float_0 = 1512.9
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(float_0)
    var_0 = ansible_vault_encrypted_unicode_0.splitlines()

def test_case_27():
    bool_0 = False
    set_0 = {bool_0}
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(set_0)
    var_0 = ansible_vault_encrypted_unicode_0.strip()
    str_0 = 'Force overwriting an existing {0} and its dependencies.'
    ansible_vault_encrypted_unicode_1 = module_0.AnsibleVaultEncryptedUnicode(str_0)
    ansible_vault_encrypted_unicode_2 = module_0.AnsibleVaultEncryptedUnicode(ansible_vault_encrypted_unicode_1)
    str_1 = 'A password is required but none was supplied'
    var_1 = ansible_vault_encrypted_unicode_1.__ne__(str_1)

def test_case_28():
    bytes_0 = b'\x91s\x06c\x8a\x16('
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(bytes_0)
    var_0 = ansible_vault_encrypted_unicode_0.title()

def test_case_29():
    str_0 = 'Force overwriting an existing {0} and its dependencies.'
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(str_0)
    ansible_vault_encrypted_unicode_1 = module_0.AnsibleVaultEncryptedUnicode(ansible_vault_encrypted_unicode_0)
    str_1 = 'A password is required but none was supplied'
    var_0 = ansible_vault_encrypted_unicode_0.__ne__(str_1)
    var_1 = ansible_vault_encrypted_unicode_1.__ge__(ansible_vault_encrypted_unicode_0)

def test_case_30():
    ansible_base_y_a_m_l_object_0 = module_0.AnsibleBaseYAMLObject()
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(ansible_base_y_a_m_l_object_0)
    var_0 = ansible_vault_encrypted_unicode_0.isascii()

def test_case_31():
    ansible_unicode_0 = module_0.AnsibleUnicode()
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(ansible_unicode_0)
    var_0 = ansible_vault_encrypted_unicode_0.lower()

def test_case_32():
    int_0 = -1345
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(int_0)
    var_0 = ansible_vault_encrypted_unicode_0.isalpha()

def test_case_33():
    ansible_mapping_0 = module_0.AnsibleMapping()
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(ansible_mapping_0)
    var_0 = ansible_vault_encrypted_unicode_0.isalnum()

def test_case_34():
    str_0 = 'GUSVp'
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(str_0)
    var_0 = ansible_vault_encrypted_unicode_0.isupper()

def test_case_35():
    int_0 = 2810
    bool_0 = True
    str_0 = 'mpf>'
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(str_0)
    var_0 = ansible_vault_encrypted_unicode_0.__getslice__(int_0, bool_0)

def test_case_36():
    int_0 = -1335
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(int_0)
    var_0 = ansible_vault_encrypted_unicode_0.format()

def test_case_37():
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0}
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(set_0)
    var_0 = ansible_vault_encrypted_unicode_0.islower()
    str_0 = '9(B"48\x0br1h'
    dict_0 = {str_0: str_0}
    ansible_vault_encrypted_unicode_1 = module_0.AnsibleVaultEncryptedUnicode(dict_0)
    list_0 = [var_0, set_0, ansible_vault_encrypted_unicode_1, ansible_vault_encrypted_unicode_1]
    var_1 = ansible_vault_encrypted_unicode_1.__contains__(ansible_vault_encrypted_unicode_0)
    int_0 = 458
    ansible_vault_encrypted_unicode_2 = module_0.AnsibleVaultEncryptedUnicode(int_0)
    var_2 = ansible_vault_encrypted_unicode_2.is_encrypted()
    var_3 = ansible_vault_encrypted_unicode_0.rsplit()
    var_4 = ansible_vault_encrypted_unicode_2.__add__(list_0)

def test_case_38():
    int_0 = 362
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(int_0)
    var_0 = ansible_vault_encrypted_unicode_0.__len__()

def test_case_39():
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0}
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(set_0)
    var_0 = ansible_vault_encrypted_unicode_0.islower()
    str_0 = '9(B"48\x0br1h'
    dict_0 = {str_0: str_0}
    ansible_vault_encrypted_unicode_1 = module_0.AnsibleVaultEncryptedUnicode(dict_0)
    ansible_unicode_0 = module_0.AnsibleUnicode()
    var_1 = ansible_vault_encrypted_unicode_1.__contains__(ansible_unicode_0)
    var_2 = ansible_vault_encrypted_unicode_1.is_encrypted()
    var_3 = ansible_vault_encrypted_unicode_1.rsplit()
    var_4 = ansible_vault_encrypted_unicode_0.__add__(ansible_vault_encrypted_unicode_1)

def test_case_40():
    ansible_sequence_0 = module_0.AnsibleSequence()
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(ansible_sequence_0)
    var_0 = ansible_vault_encrypted_unicode_0.isdigit()

def test_case_41():
    bool_0 = True
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(bool_0)
    var_0 = ansible_vault_encrypted_unicode_0.expandtabs()

def test_case_42():
    str_0 = '9(B"48\x0br1h'
    dict_0 = {str_0: str_0}
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(dict_0)
    ansible_unicode_0 = module_0.AnsibleUnicode()
    str_1 = 'f,<M^^/&jY$R\n/4.Q'
    var_0 = ansible_vault_encrypted_unicode_0.__eq__(str_1)
    ansible_base_y_a_m_l_object_0 = module_0.AnsibleBaseYAMLObject()
    var_1 = ansible_vault_encrypted_unicode_0.__add__(ansible_base_y_a_m_l_object_0)
    var_2 = ansible_vault_encrypted_unicode_0.is_encrypted()
    var_3 = ansible_vault_encrypted_unicode_0.__gt__(ansible_vault_encrypted_unicode_0)

def test_case_43():
    ansible_base_y_a_m_l_object_0 = module_0.AnsibleBaseYAMLObject()
    str_0 = '[none, <ansible.parsing.yaml.objects.ansiblebaseyamlobject object at 0x7fa4a1cba6b0>, none]'
    int_0 = -2179
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(int_0)
    var_0 = ansible_vault_encrypted_unicode_0.__radd__(str_0)
    list_0 = None
    ansible_sequence_0 = module_0.AnsibleSequence()
    ansible_vault_encrypted_unicode_1 = module_0.AnsibleVaultEncryptedUnicode(list_0)
    var_1 = ansible_vault_encrypted_unicode_0.isupper()
    var_2 = ansible_vault_encrypted_unicode_1.swapcase()
    var_3 = ansible_vault_encrypted_unicode_1.isalnum()
    ansible_unicode_0 = module_0.AnsibleUnicode()