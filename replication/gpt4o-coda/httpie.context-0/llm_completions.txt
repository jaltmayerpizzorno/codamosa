

# Generated at 2024-06-02 15:53:03.862968
```python
    env = Environment()
    assert env.is_windows == is_windows
    assert env.config_dir == DEFAULT_CONFIG_DIR
    assert env.stdin == sys.stdin
    assert env.stdin_isatty == sys.stdin.isatty()
    assert env.stdout == sys.stdout
    assert env.stdout_isatty == sys.stdout.isatty()
    assert env.stderr == sys.stderr
    assert env.stderr_isatty == sys.stderr.isatty()
    assert env.colors in [8, 16, 88, 256]
    assert env.program_name == 'http'
    assert env.stdin_encoding == (sys.stdin.encoding or 'utf8')
    assert env.stdout_encoding == (sys.stdout.encoding or 'utf8')
```

# Generated at 2024-06-02 15:53:06.508260
```python
    env = Environment()
    assert env.is_windows == is_windows
    assert env.config_dir == DEFAULT_CONFIG_DIR
    assert env.stdin == sys.stdin
    assert env.stdin_isatty == (sys.stdin.isatty() if sys.stdin else False)
    assert env.stdout == sys.stdout
    assert env.stdout_isatty == sys.stdout.isatty()
    assert env.stderr == sys.stderr
    assert env.stderr_isatty == sys.stderr.isatty()
    assert env.colors in [256, curses.tigetnum('colors') if curses else 256]
    assert env.program_name == 'http'
    assert env.stdin_encoding == (getattr(sys.stdin, 'encoding', None) or 'utf8')
    assert env.stdout_encoding == (getattr(sys.stdout, 'encoding', None) or 'utf8')
    assert env._orig_stderr == sys.stderr
```

# Generated at 2024-06-02 15:53:08.931549
```python
    env = Environment()
    assert env.is_windows == is_windows
    assert env.config_dir == DEFAULT_CONFIG_DIR
    assert env.stdin == sys.stdin
    assert env.stdin_isatty == sys.stdin.isatty()
    assert env.stdout == sys.stdout
    assert env.stdout_isatty == sys.stdout.isatty()
    assert env.stderr == sys.stderr
    assert env.stderr_isatty == sys.stderr.isatty()
    assert env.program_name == 'http'
    assert env.colors in [8, 16, 256]
    assert env.stdin_encoding == (sys.stdin.encoding or 'utf8')
    assert env.stdout_encoding == (sys.stdout.encoding or 'utf8')
```

# Generated at 2024-06-02 15:53:13.240404
```python
    env = Environment()
    assert env.is_windows == is_windows
    assert env.config_dir == DEFAULT_CONFIG_DIR
    assert env.stdin == sys.stdin
    assert env.stdin_isatty == sys.stdin.isatty()
    assert env.stdout == sys.stdout
    assert env.stdout_isatty == sys.stdout.isatty()
    assert env.stderr == sys.stderr
    assert env.stderr_isatty == sys.stderr.isatty()
    assert env.program_name == 'http'
    assert env.colors in [8, 16, 256]
    assert env.stdin_encoding == (sys.stdin.encoding or 'utf8')
    assert env.stdout_encoding == (sys.stdout.encoding or 'utf8')
    assert env._orig_stderr == sys.stderr
    assert env._devnull is None
    assert isinstance(env.config, Config)
```

# Generated at 2024-06-02 15:53:16.282797
```python
    env = Environment()
    assert env.is_windows == is_windows
    assert env.config_dir == DEFAULT_CONFIG_DIR
    assert env.stdin == sys.stdin
    assert env.stdin_isatty == (sys.stdin.isatty() if sys.stdin else False)
    assert env.stdout == sys.stdout
    assert env.stdout_isatty == sys.stdout.isatty()
    assert env.stderr == sys.stderr
    assert env.stderr_isatty == sys.stderr.isatty()
    assert env.colors in [256, curses.tigetnum('colors') if curses else 256]
    assert env.program_name == 'http'
    assert env.stdin_encoding == (getattr(sys.stdin, 'encoding', None) or 'utf8')
    assert env.stdout_encoding == (getattr(sys.stdout, 'encoding', None) or 'utf8')
```

# Generated at 2024-06-02 15:53:18.857452
```python
    env = Environment()
    assert env.is_windows == is_windows
    assert env.config_dir == DEFAULT_CONFIG_DIR
    assert env.stdin == sys.stdin
    assert env.stdin_isatty == (sys.stdin.isatty() if sys.stdin else False)
    assert env.stdout == sys.stdout
    assert env.stdout_isatty == sys.stdout.isatty()
    assert env.stderr == sys.stderr
    assert env.stderr_isatty == sys.stderr.isatty()
    assert env.colors in [256, curses.tigetnum('colors') if curses else 256]
    assert env.program_name == 'http'
    assert env.stdin_encoding == (getattr(sys.stdin, 'encoding', None) or 'utf8')
    assert env.stdout_encoding == (getattr(sys.stdout, 'encoding', None) or 'utf8')
```

# Generated at 2024-06-02 15:53:21.681499
```python
    env = Environment()
    assert env.is_windows == is_windows
    assert env.config_dir == DEFAULT_CONFIG_DIR
    assert env.stdin == sys.stdin
    assert env.stdin_isatty == sys.stdin.isatty()
    assert env.stdout == sys.stdout
    assert env.stdout_isatty == sys.stdout.isatty()
    assert env.stderr == sys.stderr
    assert env.stderr_isatty == sys.stderr.isatty()
    assert env.program_name == 'http'
    assert env.colors in [8, 16, 256]  # Common terminal color values
    assert env.stdin_encoding == (sys.stdin.encoding or 'utf8')
    assert env.stdout_encoding == (sys.stdout.encoding or 'utf8')

    # Test with overridden attributes
    custom_stdin = open(os.devnull, 'r')
    custom_stdout = open(os.devnull, 'w')
    custom_stderr = open(os.devnull, 'w')
    env

# Generated at 2024-06-02 15:53:24.149855
```python
    env = Environment()
    assert env.is_windows == is_windows
    assert env.config_dir == DEFAULT_CONFIG_DIR
    assert env.stdin == sys.stdin
    assert env.stdin_isatty == sys.stdin.isatty()
    assert env.stdout == sys.stdout
    assert env.stdout_isatty == sys.stdout.isatty()
    assert env.stderr == sys.stderr
    assert env.stderr_isatty == sys.stderr.isatty()
    assert env.program_name == 'http'
    assert env.colors in [8, 16, 256]
    assert env.stdin_encoding == (sys.stdin.encoding or 'utf8')
    assert env.stdout_encoding == (sys.stdout.encoding or 'utf8')
    assert env._orig_stderr == sys.stderr
    assert env._devnull is None
    assert isinstance(env.config, Config)
```

# Generated at 2024-06-02 15:53:26.672584
```python
    env = Environment()
    assert env.is_windows == is_windows
    assert env.config_dir == DEFAULT_CONFIG_DIR
    assert env.stdin == sys.stdin
    assert env.stdin_isatty == sys.stdin.isatty()
    assert env.stdout == sys.stdout
    assert env.stdout_isatty == sys.stdout.isatty()
    assert env.stderr == sys.stderr
    assert env.stderr_isatty == sys.stderr.isatty()
    assert env.program_name == 'http'
    assert env.colors in [8, 16, 256]
    assert env.stdin_encoding == (sys.stdin.encoding or 'utf8')
    assert env.stdout_encoding == (sys.stdout.encoding or 'utf8')
    assert env._orig_stderr == sys.stderr
    assert env._devnull is None
```

# Generated at 2024-06-02 15:53:29.188178
```python
    env = Environment()
    assert env.is_windows == is_windows
    assert env.config_dir == DEFAULT_CONFIG_DIR
    assert env.stdin == sys.stdin
    assert env.stdin_isatty == (sys.stdin.isatty() if sys.stdin else False)
    assert env.stdout == sys.stdout
    assert env.stdout_isatty == sys.stdout.isatty()
    assert env.stderr == sys.stderr
    assert env.stderr_isatty == sys.stderr.isatty()
    assert env.colors in [256, curses.tigetnum('colors') if curses else 256]
    assert env.program_name == 'http'
    assert env.stdin_encoding == (getattr(sys.stdin, 'encoding', None) or 'utf8')
    assert env.stdout_encoding == (getattr(sys.stdout, 'encoding', None) or 'utf8')
```

# Generated at 2024-06-02 15:53:46.236425
```python
    env = Environment()
    assert env.is_windows == is_windows
    assert env.config_dir == DEFAULT_CONFIG_DIR
    assert env.stdin == sys.stdin
    assert env.stdin_isatty == (sys.stdin.isatty() if sys.stdin else False)
    assert env.stdout == sys.stdout
    assert env.stdout_isatty == sys.stdout.isatty()
    assert env.stderr == sys.stderr
    assert env.stderr_isatty == sys.stderr.isatty()
    assert env.colors in [256, curses.tigetnum('colors') if curses else 256]
    assert env.program_name == 'http'
    assert env.stdin_encoding == (sys.stdin.encoding if sys.stdin and sys.stdin.encoding else 'utf8')
    assert env.stdout_encoding == (sys.stdout.encoding if sys.stdout and sys.stdout.encoding else 'utf8')
    assert env._orig_stderr == sys.stderr
    assert env._devnull is None
```

# Generated at 2024-06-02 15:53:48.794740
```python
    env = Environment()
    assert env.is_windows == is_windows
    assert env.config_dir == DEFAULT_CONFIG_DIR
    assert env.stdin == sys.stdin
    assert env.stdin_isatty == (sys.stdin.isatty() if sys.stdin else False)
    assert env.stdout == sys.stdout
    assert env.stdout_isatty == sys.stdout.isatty()
    assert env.stderr == sys.stderr
    assert env.stderr_isatty == sys.stderr.isatty()
    assert env.colors in [256, curses.tigetnum('colors') if curses else 256]
    assert env.program_name == 'http'
    assert env.stdin_encoding == (sys.stdin.encoding if sys.stdin else 'utf8')
    assert env.stdout_encoding == (sys.stdout.encoding if sys.stdout else 'utf8')
    assert env._orig_stderr == sys.stderr
    assert env._devnull is None
```

# Generated at 2024-06-02 15:53:51.163527
```python
    env = Environment()
    assert env.is_windows == is_windows
    assert env.config_dir == DEFAULT_CONFIG_DIR
    assert env.stdin == sys.stdin
    assert env.stdin_isatty == sys.stdin.isatty()
    assert env.stdout == sys.stdout
    assert env.stdout_isatty == sys.stdout.isatty()
    assert env.stderr == sys.stderr
    assert env.stderr_isatty == sys.stderr.isatty()
    assert env.colors in [8, 16, 256]
    assert env.program_name == 'http'
    assert env.stdin_encoding == (sys.stdin.encoding or 'utf8')
    assert env.stdout_encoding == (sys.stdout.encoding or 'utf8')
    assert env._orig_stderr == sys.stderr
    assert env._devnull is None
```

# Generated at 2024-06-02 15:53:54.097941
```python
    env = Environment()
    assert env.is_windows == is_windows
    assert env.config_dir == DEFAULT_CONFIG_DIR
    assert env.stdin == sys.stdin
    assert env.stdin_isatty == (sys.stdin.isatty() if sys.stdin else False)
    assert env.stdout == sys.stdout
    assert env.stdout_isatty == sys.stdout.isatty()
    assert env.stderr == sys.stderr
    assert env.stderr_isatty == sys.stderr.isatty()
    assert env.colors in [256, curses.tigetnum('colors') if curses else 256]
    assert env.program_name == 'http'
    assert env.stdin_encoding == (sys.stdin.encoding if sys.stdin else 'utf8')
    assert env.stdout_encoding == (sys.stdout.encoding if sys.stdout else 'utf8')
    assert env._orig_stderr == sys.stderr
    assert env._devnull is None
```

# Generated at 2024-06-02 15:53:56.872696
```python
    env = Environment()
    assert env.is_windows == is_windows
    assert env.config_dir == DEFAULT_CONFIG_DIR
    assert env.stdin == sys.stdin
    assert env.stdin_isatty == sys.stdin.isatty()
    assert env.stdout == sys.stdout
    assert env.stdout_isatty == sys.stdout.isatty()
    assert env.stderr == sys.stderr
    assert env.stderr_isatty == sys.stderr.isatty()
    assert env.program_name == 'http'
    assert env.colors in [8, 16, 256]
    assert env.stdin_encoding == (sys.stdin.encoding or 'utf8')
    assert env.stdout_encoding == (sys.stdout.encoding or 'utf8')
    assert env._orig_stderr == sys.stderr
    assert env._devnull is None
```

# Generated at 2024-06-02 15:53:59.276005
```python
    env = Environment()
    assert env.is_windows == is_windows
    assert env.config_dir == DEFAULT_CONFIG_DIR
    assert env.stdin == sys.stdin
    assert env.stdin_isatty == (sys.stdin.isatty() if sys.stdin else False)
    assert env.stdout == sys.stdout
    assert env.stdout_isatty == sys.stdout.isatty()
    assert env.stderr == sys.stderr
    assert env.stderr_isatty == sys.stderr.isatty()
    assert env.colors in [256, curses.tigetnum('colors') if curses else 256]
    assert env.program_name == 'http'
    assert env.stdin_encoding == (sys.stdin.encoding if sys.stdin and sys.stdin.encoding else 'utf8')
    assert env.stdout_encoding == (sys.stdout.encoding if sys.stdout.encoding else 'utf8')
```

# Generated at 2024-06-02 15:54:02.179814
```python
    env = Environment()
    assert env.is_windows == is_windows
    assert env.config_dir == DEFAULT_CONFIG_DIR
    assert env.stdin == sys.stdin
    assert env.stdin_isatty == (sys.stdin.isatty() if sys.stdin else False)
    assert env.stdout == sys.stdout
    assert env.stdout_isatty == sys.stdout.isatty()
    assert env.stderr == sys.stderr
    assert env.stderr_isatty == sys.stderr.isatty()
    assert env.colors in [256, curses.tigetnum('colors') if curses else 256]
    assert env.program_name == 'http'
    assert env.stdin_encoding == (sys.stdin.encoding if sys.stdin and sys.stdin.encoding else 'utf8')
    assert env.stdout_encoding == (sys.stdout.encoding if sys.stdout.encoding else 'utf8')
```

# Generated at 2024-06-02 15:54:05.101081
```python
    env = Environment()
    assert env.is_windows == is_windows
    assert env.config_dir == DEFAULT_CONFIG_DIR
    assert env.stdin == sys.stdin
    assert env.stdin_isatty == (sys.stdin.isatty() if sys.stdin else False)
    assert env.stdout == sys.stdout
    assert env.stdout_isatty == sys.stdout.isatty()
    assert env.stderr == sys.stderr
    assert env.stderr_isatty == sys.stderr.isatty()
    assert env.colors in [256, curses.tigetnum('colors') if curses else 256]
    assert env.program_name == 'http'
    assert env.stdin_encoding == (getattr(sys.stdin, 'encoding', None) or 'utf8')
    assert env.stdout_encoding == (getattr(sys.stdout, 'encoding', None) or 'utf8')
```

# Generated at 2024-06-02 15:54:08.422757
```python
    env = Environment()
    assert env.is_windows == is_windows
    assert env.config_dir == DEFAULT_CONFIG_DIR
    assert env.stdin == sys.stdin
    assert env.stdin_isatty == sys.stdin.isatty()
    assert env.stdout == sys.stdout
    assert env.stdout_isatty == sys.stdout.isatty()
    assert env.stderr == sys.stderr
    assert env.stderr_isatty == sys.stderr.isatty()
    assert env.colors in [256, curses.tigetnum('colors') if curses else 256]
    assert env.program_name == 'http'
    assert env.stdin_encoding == (sys.stdin.encoding or 'utf8')
    assert env.stdout_encoding == (sys.stdout.encoding or 'utf8')
    assert env._orig_stderr == sys.stderr
    assert env._devnull is None
```

# Generated at 2024-06-02 15:54:11.332985
```python
    env = Environment()
    assert env.is_windows == is_windows
    assert env.config_dir == DEFAULT_CONFIG_DIR
    assert env.stdin == sys.stdin
    assert env.stdin_isatty == (sys.stdin.isatty() if sys.stdin else False)
    assert env.stdout == sys.stdout
    assert env.stdout_isatty == sys.stdout.isatty()
    assert env.stderr == sys.stderr
    assert env.stderr_isatty == sys.stderr.isatty()
    assert env.colors in [256, curses.tigetnum('colors') if curses else 256]
    assert env.program_name == 'http'
    assert env.stdin_encoding == (sys.stdin.encoding if sys.stdin else 'utf8')
    assert env.stdout_encoding == (sys.stdout.encoding if sys.stdout else 'utf8')
    assert env._orig_stderr == sys.stderr
    assert env._devnull is None
```

# Generated at 2024-06-02 15:54:27.526768
```python
    env = Environment()
    assert env.is_windows == is_windows
    assert env.config_dir == DEFAULT_CONFIG_DIR
    assert env.stdin == sys.stdin
    assert env.stdin_isatty == sys.stdin.isatty()
    assert env.stdout == sys.stdout
    assert env.stdout_isatty == sys.stdout.isatty()
    assert env.stderr == sys.stderr
    assert env.stderr_isatty == sys.stderr.isatty()
    assert env.program_name == 'http'
    assert env.colors in [8, 16, 88, 256]  # Common terminal color values
    assert env.stdin_encoding == (sys.stdin.encoding or 'utf8')
    assert env.stdout_encoding == (sys.stdout.encoding or 'utf8')
    assert env._orig_stderr == sys.stderr
```

# Generated at 2024-06-02 15:54:30.513332
```python
    env = Environment()
    assert env.is_windows == is_windows
    assert env.config_dir == DEFAULT_CONFIG_DIR
    assert env.stdin == sys.stdin
    assert env.stdin_isatty == (sys.stdin.isatty() if sys.stdin else False)
    assert env.stdout == sys.stdout
    assert env.stdout_isatty == sys.stdout.isatty()
    assert env.stderr == sys.stderr
    assert env.stderr_isatty == sys.stderr.isatty()
    assert env.colors in [256, curses.tigetnum('colors') if curses else 256]
    assert env.program_name == 'http'
    assert env.stdin_encoding == (sys.stdin.encoding if sys.stdin else 'utf8')
    assert env.stdout_encoding == (sys.stdout.encoding if sys.stdout else 'utf8')
    assert env._orig_stderr == sys.stderr
    assert env._devnull is None
```

# Generated at 2024-06-02 15:54:33.451096
```python
    env = Environment()
    assert env.is_windows == is_windows
    assert env.config_dir == DEFAULT_CONFIG_DIR
    assert env.stdin == sys.stdin
    assert env.stdin_isatty == (sys.stdin.isatty() if sys.stdin else False)
    assert env.stdout == sys.stdout
    assert env.stdout_isatty == sys.stdout.isatty()
    assert env.stderr == sys.stderr
    assert env.stderr_isatty == sys.stderr.isatty()
    assert env.colors in [256, curses.tigetnum('colors') if curses else 256]
    assert env.program_name == 'http'
    assert env.stdin_encoding == (getattr(sys.stdin, 'encoding', None) or 'utf8')
    assert env.stdout_encoding == (getattr(sys.stdout, 'encoding', None) or 'utf8')
```

# Generated at 2024-06-02 15:54:36.856962
```python
    env = Environment()
    assert env.is_windows == is_windows
    assert env.config_dir == DEFAULT_CONFIG_DIR
    assert env.stdin == sys.stdin
    assert env.stdin_isatty == sys.stdin.isatty()
    assert env.stdout == sys.stdout
    assert env.stdout_isatty == sys.stdout.isatty()
    assert env.stderr == sys.stderr
    assert env.stderr_isatty == sys.stderr.isatty()
    assert env.program_name == 'http'
    assert env.colors in [8, 16, 256]  # Common terminal color values
    assert env.stdin_encoding == (sys.stdin.encoding or 'utf8')
    assert env.stdout_encoding == (sys.stdout.encoding or 'utf8')
    assert env._orig_stderr == sys.stderr
    assert env._devnull is None
```

# Generated at 2024-06-02 15:54:40.451510
```python
    env = Environment()
    assert env.is_windows == is_windows
    assert env.config_dir == DEFAULT_CONFIG_DIR
    assert env.stdin == sys.stdin
    assert env.stdin_isatty == sys.stdin.isatty()
    assert env.stdin_encoding == (sys.stdin.encoding or 'utf8')
    assert env.stdout == sys.stdout
    assert env.stdout_isatty == sys.stdout.isatty()
    assert env.stdout_encoding == (sys.stdout.encoding or 'utf8')
    assert env.stderr == sys.stderr
    assert env.stderr_isatty == sys.stderr.isatty()
    assert env.program_name == 'http'
    assert env.colors in [256, curses.tigetnum('colors')] if curses else True

    custom_env = Environment(stdin=None, stdout=sys.stderr, program_name='custom_http')
    assert custom_env.stdin is None
    assert custom_env.stdout == sys.stderr
    assert custom_env.program_name == 'custom_http'
```

# Generated at 2024-06-02 15:54:44.003928
```python
    env = Environment()
    assert env.is_windows == is_windows
    assert env.config_dir == DEFAULT_CONFIG_DIR
    assert env.stdin == sys.stdin
    assert env.stdin_isatty == (sys.stdin.isatty() if sys.stdin else False)
    assert env.stdout == sys.stdout
    assert env.stdout_isatty == sys.stdout.isatty()
    assert env.stderr == sys.stderr
    assert env.stderr_isatty == sys.stderr.isatty()
    assert env.colors in [256, curses.tigetnum('colors') if curses else 256]
    assert env.program_name == 'http'
    assert env.stdin_encoding == (sys.stdin.encoding if sys.stdin and sys.stdin.encoding else 'utf8')
    assert env.stdout_encoding == (sys.stdout.encoding if sys.stdout and sys.stdout.encoding else 'utf8')
```

# Generated at 2024-06-02 15:54:47.058359
```python
    env = Environment()
    assert env.is_windows == is_windows
    assert env.config_dir == DEFAULT_CONFIG_DIR
    assert env.stdin == sys.stdin
    assert env.stdin_isatty == (sys.stdin.isatty() if sys.stdin else False)
    assert env.stdout == sys.stdout
    assert env.stdout_isatty == sys.stdout.isatty()
    assert env.stderr == sys.stderr
    assert env.stderr_isatty == sys.stderr.isatty()
    assert env.colors in [256, curses.tigetnum('colors') if curses else 256]
    assert env.program_name == 'http'
    assert env.stdin_encoding == (sys.stdin.encoding if sys.stdin and sys.stdin.encoding else 'utf8')
    assert env.stdout_encoding == (sys.stdout.encoding if sys.stdout.encoding else 'utf8')
```

# Generated at 2024-06-02 15:54:50.119665
```python
    env = Environment()
    assert env.is_windows == is_windows
    assert env.config_dir == DEFAULT_CONFIG_DIR
    assert env.stdin == sys.stdin
    assert env.stdin_isatty == sys.stdin.isatty()
    assert env.stdout == sys.stdout
    assert env.stdout_isatty == sys.stdout.isatty()
    assert env.stderr == sys.stderr
    assert env.stderr_isatty == sys.stderr.isatty()
    assert env.colors in [256, curses.tigetnum('colors') if curses else 256]
    assert env.program_name == 'http'
    assert env.stdin_encoding == (sys.stdin.encoding or 'utf8')
    assert env.stdout_encoding == (sys.stdout.encoding or 'utf8')
    assert env._orig_stderr == sys.stderr
    assert env._devnull is None
```

# Generated at 2024-06-02 15:54:53.067488
```python
    env = Environment()
    assert env.is_windows == is_windows
    assert env.config_dir == DEFAULT_CONFIG_DIR
    assert env.stdin == sys.stdin
    assert env.stdin_isatty == (sys.stdin.isatty() if sys.stdin else False)
    assert env.stdout == sys.stdout
    assert env.stdout_isatty == sys.stdout.isatty()
    assert env.stderr == sys.stderr
    assert env.stderr_isatty == sys.stderr.isatty()
    assert env.colors in [256, curses.tigetnum('colors') if curses else 256]
    assert env.program_name == 'http'
    assert env.stdin_encoding == (sys.stdin.encoding if sys.stdin else 'utf8')
    assert env.stdout_encoding == (sys.stdout.encoding if sys.stdout else 'utf8')
    assert env._orig_stderr == sys.stderr
    assert env._devnull is None
```

# Generated at 2024-06-02 15:54:56.544138
```python
    env = Environment()
    assert env.is_windows == is_windows
    assert env.config_dir == DEFAULT_CONFIG_DIR
    assert env.stdin == sys.stdin
    assert env.stdin_isatty == sys.stdin.isatty()
    assert env.stdout == sys.stdout
    assert env.stdout_isatty == sys.stdout.isatty()
    assert env.stderr == sys.stderr
    assert env.stderr_isatty == sys.stderr.isatty()
    assert env.program_name == 'http'
    assert env.colors in [8, 16, 256]  # Common terminal color values
    assert env.stdin_encoding == (sys.stdin.encoding or 'utf8')
    assert env.stdout_encoding == (sys.stdout.encoding or 'utf8')
```

# Generated at 2024-06-02 15:55:25.229812
```python
    env = Environment()
    assert env.is_windows == is_windows
    assert env.config_dir == DEFAULT_CONFIG_DIR
    assert env.stdin == sys.stdin
    assert env.stdin_isatty == sys.stdin.isatty()
    assert env.stdin_encoding == (sys.stdin.encoding or 'utf8')
    assert env.stdout == sys.stdout
    assert env.stdout_isatty == sys.stdout.isatty()
    assert env.stdout_encoding == (sys.stdout.encoding or 'utf8')
    assert env.stderr == sys.stderr
    assert env.stderr_isatty == sys.stderr.isatty()
    assert env.program_name == 'http'
    assert env.colors in [256, curses.tigetnum('colors') if curses else 256]
```

# Generated at 2024-06-02 15:55:28.110316
```python
    env = Environment()
    assert env.is_windows == is_windows
    assert env.config_dir == DEFAULT_CONFIG_DIR
    assert env.stdin == sys.stdin
    assert env.stdin_isatty == sys.stdin.isatty()
    assert env.stdout == sys.stdout
    assert env.stdout_isatty == sys.stdout.isatty()
    assert env.stderr == sys.stderr
    assert env.stderr_isatty == sys.stderr.isatty()
    assert env.program_name == 'http'
    assert env.colors in [8, 16, 256]  # Common terminal color values
    assert env.stdin_encoding == (sys.stdin.encoding or 'utf8')
    assert env.stdout_encoding == (sys.stdout.encoding or 'utf8')
    assert env._orig_stderr == sys.stderr
    assert env._devnull is None
```

# Generated at 2024-06-02 15:55:31.735679
```python
    env = Environment()
    assert env.is_windows == is_windows
    assert env.config_dir == DEFAULT_CONFIG_DIR
    assert env.stdin == sys.stdin
    assert env.stdin_isatty == (sys.stdin.isatty() if sys.stdin else False)
    assert env.stdout == sys.stdout
    assert env.stdout_isatty == sys.stdout.isatty()
    assert env.stderr == sys.stderr
    assert env.stderr_isatty == sys.stderr.isatty()
    assert env.colors in [256, curses.tigetnum('colors') if curses else 256]
    assert env.program_name == 'http'
    assert env.stdin_encoding == (sys.stdin.encoding if sys.stdin and sys.stdin.encoding else 'utf8')
    assert env.stdout_encoding == (sys.stdout.encoding if sys.stdout.encoding else 'utf8')
```

# Generated at 2024-06-02 15:55:35.340882
```python
    env = Environment()
    assert env.is_windows == is_windows
    assert env.config_dir == DEFAULT_CONFIG_DIR
    assert env.stdin == sys.stdin
    assert env.stdin_isatty == (sys.stdin.isatty() if sys.stdin else False)
    assert env.stdout == sys.stdout
    assert env.stdout_isatty == sys.stdout.isatty()
    assert env.stderr == sys.stderr
    assert env.stderr_isatty == sys.stderr.isatty()
    assert env.colors in [256, curses.tigetnum('colors') if curses else 256]
    assert env.program_name == 'http'
    assert env.stdin_encoding == (sys.stdin.encoding if sys.stdin else 'utf8')
    assert env.stdout_encoding == (sys.stdout.encoding if not is_windows else 'utf8')
    assert env._orig_stderr == sys.stderr
    assert env._devnull is None
```

# Generated at 2024-06-02 15:55:38.096433
```python
    env = Environment()
    assert env.is_windows == is_windows
    assert env.config_dir == DEFAULT_CONFIG_DIR
    assert env.stdin == sys.stdin
    assert env.stdin_isatty == sys.stdin.isatty()
    assert env.stdout == sys.stdout
    assert env.stdout_isatty == sys.stdout.isatty()
    assert env.stderr == sys.stderr
    assert env.stderr_isatty == sys.stderr.isatty()
    assert env.colors in [8, 16, 88, 256]
    assert env.program_name == 'http'
    assert env.stdin_encoding == (sys.stdin.encoding or 'utf8')
    assert env.stdout_encoding == (sys.stdout.encoding or 'utf8')
    assert env._orig_stderr == sys.stderr
    assert env._devnull is None
```

# Generated at 2024-06-02 15:55:40.673343
```python
    env = Environment()
    assert env.is_windows == is_windows
    assert env.config_dir == DEFAULT_CONFIG_DIR
    assert env.stdin == sys.stdin
    assert env.stdin_isatty == (sys.stdin.isatty() if sys.stdin else False)
    assert env.stdout == sys.stdout
    assert env.stdout_isatty == sys.stdout.isatty()
    assert env.stderr == sys.stderr
    assert env.stderr_isatty == sys.stderr.isatty()
    assert env.colors in [256, curses.tigetnum('colors') if curses else 256]
    assert env.program_name == 'http'
    assert env.stdin_encoding == (sys.stdin.encoding if sys.stdin else 'utf8')
    assert env.stdout_encoding == (sys.stdout.encoding if sys.stdout else 'utf8')
    assert env._orig_stderr == sys.stderr
    assert env._devnull is None
```

# Generated at 2024-06-02 15:55:43.359894
```python
    env = Environment()
    assert env.is_windows == is_windows
    assert env.config_dir == DEFAULT_CONFIG_DIR
    assert env.stdin == sys.stdin
    assert env.stdin_isatty == (sys.stdin.isatty() if sys.stdin else False)
    assert env.stdout == sys.stdout
    assert env.stdout_isatty == sys.stdout.isatty()
    assert env.stderr == sys.stderr
    assert env.stderr_isatty == sys.stderr.isatty()
    assert env.colors in [256, curses.tigetnum('colors') if curses else 256]
    assert env.program_name == 'http'
    assert env.stdin_encoding == (sys.stdin.encoding if sys.stdin else 'utf8')
    assert env.stdout_encoding == (sys.stdout.encoding if sys.stdout else 'utf8')
```

# Generated at 2024-06-02 15:55:47.097928
```python
    env = Environment()
    assert env.is_windows == is_windows
    assert env.config_dir == DEFAULT_CONFIG_DIR
    assert env.stdin == sys.stdin
    assert env.stdin_isatty == (sys.stdin.isatty() if sys.stdin else False)
    assert env.stdout == sys.stdout
    assert env.stdout_isatty == sys.stdout.isatty()
    assert env.stderr == sys.stderr
    assert env.stderr_isatty == sys.stderr.isatty()
    assert env.colors in [256, curses.tigetnum('colors') if curses else 256]
    assert env.program_name == 'http'
    assert env.stdin_encoding == (sys.stdin.encoding if sys.stdin else 'utf8')
    assert env.stdout_encoding == (sys.stdout.encoding if sys.stdout else 'utf8')
    assert env._orig_stderr == sys.stderr
    assert env._devnull is None
```

# Generated at 2024-06-02 15:55:49.788436
```python
    env = Environment()
    assert env.is_windows == is_windows
    assert env.config_dir == DEFAULT_CONFIG_DIR
    assert env.stdin == sys.stdin
    assert env.stdin_isatty == (sys.stdin.isatty() if sys.stdin else False)
    assert env.stdout == sys.stdout
    assert env.stdout_isatty == sys.stdout.isatty()
    assert env.stderr == sys.stderr
    assert env.stderr_isatty == sys.stderr.isatty()
    assert env.colors in [256, curses.tigetnum('colors') if curses else 256]
    assert env.program_name == 'http'
    assert env.stdin_encoding == (getattr(sys.stdin, 'encoding', None) or 'utf8')
    assert env.stdout_encoding == (getattr(sys.stdout, 'encoding', None) or 'utf8')
    assert env._orig_stderr == sys.stderr
    assert env._devnull is None
```

# Generated at 2024-06-02 15:55:52.289354
```python
    env = Environment()
    assert env.is_windows == is_windows
    assert env.config_dir == DEFAULT_CONFIG_DIR
    assert env.stdin == sys.stdin
    assert env.stdin_isatty == (sys.stdin.isatty() if sys.stdin else False)
    assert env.stdout == sys.stdout
    assert env.stdout_isatty == sys.stdout.isatty()
    assert env.stderr == sys.stderr
    assert env.stderr_isatty == sys.stderr.isatty()
    assert env.colors in [256, curses.tigetnum('colors') if curses else 256]
    assert env.program_name == 'http'
    assert env.stdin_encoding == (sys.stdin.encoding if sys.stdin else 'utf8')
    assert env.stdout_encoding == (sys.stdout.encoding if sys.stdout else 'utf8')
    assert env._orig_stderr == sys.stderr
    assert env._devnull is None
```

# Generated at 2024-06-02 15:56:49.265285
```python
    env = Environment()
    assert env.is_windows == is_windows
    assert env.config_dir == DEFAULT_CONFIG_DIR
    assert env.stdin == sys.stdin
    assert env.stdin_isatty == (sys.stdin.isatty() if sys.stdin else False)
    assert env.stdout == sys.stdout
    assert env.stdout_isatty == sys.stdout.isatty()
    assert env.stderr == sys.stderr
    assert env.stderr_isatty == sys.stderr.isatty()
    assert env.colors in [256, curses.tigetnum('colors') if curses else 256]
    assert env.program_name == 'http'
    assert env.stdin_encoding == (sys.stdin.encoding if sys.stdin else 'utf8')
    assert env.stdout_encoding == (sys.stdout.encoding if sys.stdout else 'utf8')
    assert env._orig_stderr == sys.stderr
    assert env._devnull is None
```

# Generated at 2024-06-02 15:56:51.979754
```python
    env = Environment()
    assert env.is_windows == is_windows
    assert env.config_dir == DEFAULT_CONFIG_DIR
    assert env.stdin == sys.stdin
    assert env.stdin_isatty == (sys.stdin.isatty() if sys.stdin else False)
    assert env.stdout == sys.stdout
    assert env.stdout_isatty == sys.stdout.isatty()
    assert env.stderr == sys.stderr
    assert env.stderr_isatty == sys.stderr.isatty()
    assert env.colors in [256, curses.tigetnum('colors') if curses else 256]
    assert env.program_name == 'http'
    assert env.stdin_encoding == (sys.stdin.encoding if sys.stdin and sys.stdin.encoding else 'utf8')
    assert env.stdout_encoding == (sys.stdout.encoding if sys.stdout and sys.stdout.encoding else 'utf8')
```

# Generated at 2024-06-02 15:56:54.408972
```python
    env = Environment()
    assert env.is_windows == is_windows
    assert env.config_dir == DEFAULT_CONFIG_DIR
    assert env.stdin == sys.stdin
    assert env.stdin_isatty == (sys.stdin.isatty() if sys.stdin else False)
    assert env.stdout == sys.stdout
    assert env.stdout_isatty == sys.stdout.isatty()
    assert env.stderr == sys.stderr
    assert env.stderr_isatty == sys.stderr.isatty()
    assert env.colors in [256, curses.tigetnum('colors') if curses else 256]
    assert env.program_name == 'http'
    assert env.stdin_encoding == (sys.stdin.encoding if sys.stdin and sys.stdin.encoding else 'utf8')
    assert env.stdout_encoding == (sys.stdout.encoding if sys.stdout.encoding else 'utf8')
```

# Generated at 2024-06-02 15:56:56.701881
```python
    env = Environment()
    assert env.is_windows == is_windows
    assert env.config_dir == DEFAULT_CONFIG_DIR
    assert env.stdin == sys.stdin
    assert env.stdin_isatty == sys.stdin.isatty()
    assert env.stdout == sys.stdout
    assert env.stdout_isatty == sys.stdout.isatty()
    assert env.stderr == sys.stderr
    assert env.stderr_isatty == sys.stderr.isatty()
    assert env.program_name == 'http'
    assert env.colors in [8, 16, 256]
    assert env.stdin_encoding == (sys.stdin.encoding or 'utf8')
    assert env.stdout_encoding == (sys.stdout.encoding or 'utf8')
    assert env._orig_stderr == sys.stderr
    assert env._devnull is None
    assert isinstance(env.config, Config)
```

# Generated at 2024-06-02 15:56:59.546494
```python
    env = Environment()
    assert env.is_windows == is_windows
    assert env.config_dir == DEFAULT_CONFIG_DIR
    assert env.stdin == sys.stdin
    assert env.stdin_isatty == sys.stdin.isatty()
    assert env.stdout == sys.stdout
    assert env.stdout_isatty == sys.stdout.isatty()
    assert env.stderr == sys.stderr
    assert env.stderr_isatty == sys.stderr.isatty()
    assert env.program_name == 'http'
    assert env.colors in [8, 16, 256]  # Common terminal color values
    assert env.stdin_encoding == (sys.stdin.encoding or 'utf8')
    assert env.stdout_encoding == (sys.stdout.encoding or 'utf8')
    assert env._orig_stderr == sys.stderr
    assert env._devnull is None
```

# Generated at 2024-06-02 15:57:02.937699
```python
    env = Environment()
    assert env.is_windows == is_windows
    assert env.config_dir == DEFAULT_CONFIG_DIR
    assert env.stdin == sys.stdin
    assert env.stdin_isatty == (sys.stdin.isatty() if sys.stdin else False)
    assert env.stdout == sys.stdout
    assert env.stdout_isatty == sys.stdout.isatty()
    assert env.stderr == sys.stderr
    assert env.stderr_isatty == sys.stderr.isatty()
    assert env.colors in [256, curses.tigetnum('colors') if curses else 256]
    assert env.program_name == 'http'
    assert env.stdin_encoding == (sys.stdin.encoding if sys.stdin else 'utf8')
    assert env.stdout_encoding == (sys.stdout.encoding if sys.stdout else 'utf8')
    assert env._orig_stderr == sys.stderr
    assert env._devnull is None
```

# Generated at 2024-06-02 15:57:06.302949
```python
    env = Environment()
    assert env.is_windows == is_windows
    assert env.config_dir == DEFAULT_CONFIG_DIR
    assert env.stdin == sys.stdin
    assert env.stdin_isatty == sys.stdin.isatty()
    assert env.stdout == sys.stdout
    assert env.stdout_isatty == sys.stdout.isatty()
    assert env.stderr == sys.stderr
    assert env.stderr_isatty == sys.stderr.isatty()
    assert env.program_name == 'http'
    assert env.colors in [8, 16, 256]  # Common terminal color values
    assert env.stdin_encoding == (sys.stdin.encoding or 'utf8')
    assert env.stdout_encoding == (sys.stdout.encoding or 'utf8')

    # Test with overridden attributes
    custom_stdin = open(os.devnull, 'r')
    custom_stdout = open(os.devnull, 'w')
    custom_stderr = open(os.devnull, 'w')
    env

# Generated at 2024-06-02 15:57:09.414513
```python
    env = Environment()
    assert env.is_windows == is_windows
    assert env.config_dir == DEFAULT_CONFIG_DIR
    assert env.stdin == sys.stdin
    assert env.stdin_isatty == (sys.stdin.isatty() if sys.stdin else False)
    assert env.stdout == sys.stdout
    assert env.stdout_isatty == sys.stdout.isatty()
    assert env.stderr == sys.stderr
    assert env.stderr_isatty == sys.stderr.isatty()
    assert env.colors in [256, curses.tigetnum('colors') if curses else 256]
    assert env.program_name == 'http'
    assert env.stdin_encoding == (sys.stdin.encoding if sys.stdin else 'utf8')
    assert env.stdout_encoding == (sys.stdout.encoding if sys.stdout else 'utf8')
```

# Generated at 2024-06-02 15:57:12.342059
```python
    env = Environment()
    assert env.is_windows == is_windows
    assert env.config_dir == DEFAULT_CONFIG_DIR
    assert env.stdin == sys.stdin
    assert env.stdin_isatty == sys.stdin.isatty()
    assert env.stdout == sys.stdout
    assert env.stdout_isatty == sys.stdout.isatty()
    assert env.stderr == sys.stderr
    assert env.stderr_isatty == sys.stderr.isatty()
    assert env.program_name == 'http'
    assert env.colors in [8, 16, 256]  # Common terminal color values
    assert env.stdin_encoding == (sys.stdin.encoding or 'utf8')
    assert env.stdout_encoding == (sys.stdout.encoding or 'utf8')
    assert env._orig_stderr == sys.stderr
```

# Generated at 2024-06-02 15:57:17.793082
```python
    env = Environment()
    assert env.is_windows == is_windows
    assert env.config_dir == DEFAULT_CONFIG_DIR
    assert env.stdin == sys.stdin
    assert env.stdin_isatty == (sys.stdin.isatty() if sys.stdin else False)
    assert env.stdout == sys.stdout
    assert env.stdout_isatty == sys.stdout.isatty()
    assert env.stderr == sys.stderr
    assert env.stderr_isatty == sys.stderr.isatty()
    assert env.colors in [8, 16, 256]
    assert env.program_name == 'http'
    assert env.stdin_encoding == (sys.stdin.encoding if sys.stdin else 'utf8')
    assert env.stdout_encoding == (sys.stdout.encoding if sys.stdout else 'utf8')
    assert env._orig_stderr == sys.stderr
    assert env._devnull is None
```

# Generated at 2024-06-02 15:59:04.765540
```python
    env = Environment()
    assert env.is_windows == is_windows
    assert env.config_dir == DEFAULT_CONFIG_DIR
    assert env.stdin == sys.stdin
    assert env.stdin_isatty == sys.stdin.isatty()
    assert env.stdout == sys.stdout
    assert env.stdout_isatty == sys.stdout.isatty()
    assert env.stderr == sys.stderr
    assert env.stderr_isatty == sys.stderr.isatty()
    assert env.program_name == 'http'
    assert env.colors in [8, 16, 256]
    assert env.stdin_encoding == (sys.stdin.encoding or 'utf8')
    assert env.stdout_encoding == (sys.stdout.encoding or 'utf8')
```

# Generated at 2024-06-02 15:59:08.115664
```python
    env = Environment()
    assert env.is_windows == is_windows
    assert env.config_dir == DEFAULT_CONFIG_DIR
    assert env.stdin == sys.stdin
    assert env.stdin_isatty == sys.stdin.isatty()
    assert env.stdout == sys.stdout
    assert env.stdout_isatty == sys.stdout.isatty()
    assert env.stderr == sys.stderr
    assert env.stderr_isatty == sys.stderr.isatty()
    assert env.program_name == 'http'
    assert env.colors in [8, 16, 256]
    assert env.stdin_encoding == (sys.stdin.encoding or 'utf8')
    assert env.stdout_encoding == (sys.stdout.encoding or 'utf8')
    assert env._orig_stderr == sys.stderr
```

# Generated at 2024-06-02 15:59:13.078251
```python
    env = Environment()
    assert env.is_windows == is_windows
    assert env.config_dir == DEFAULT_CONFIG_DIR
    assert env.stdin == sys.stdin
    assert env.stdin_isatty == (sys.stdin.isatty() if sys.stdin else False)
    assert env.stdout == sys.stdout
    assert env.stdout_isatty == sys.stdout.isatty()
    assert env.stderr == sys.stderr
    assert env.stderr_isatty == sys.stderr.isatty()
    assert env.colors in [8, 16, 256]
    assert env.program_name == 'http'
    assert env.stdin_encoding == (sys.stdin.encoding if sys.stdin and sys.stdin.encoding else 'utf8')
    assert env.stdout_encoding == (sys.stdout.encoding if sys.stdout and sys.stdout.encoding else 'utf8')
```

# Generated at 2024-06-02 15:59:15.603795
```python
    env = Environment()
    assert env.is_windows == is_windows
    assert env.config_dir == DEFAULT_CONFIG_DIR
    assert env.stdin == sys.stdin
    assert env.stdin_isatty == sys.stdin.isatty()
    assert env.stdout == sys.stdout
    assert env.stdout_isatty == sys.stdout.isatty()
    assert env.stderr == sys.stderr
    assert env.stderr_isatty == sys.stderr.isatty()
    assert env.colors in [256, curses.tigetnum('colors') if curses else 256]
    assert env.program_name == 'http'
    assert env.stdin_encoding == (sys.stdin.encoding or 'utf8')
    assert env.stdout_encoding == (sys.stdout.encoding or 'utf8')
    assert env._orig_stderr == sys.stderr
    assert env._devnull is None
```

# Generated at 2024-06-02 15:59:19.686412
```python
    env = Environment()
    assert env.is_windows == is_windows
    assert env.config_dir == DEFAULT_CONFIG_DIR
    assert env.stdin == sys.stdin
    assert env.stdin_isatty == (sys.stdin.isatty() if sys.stdin else False)
    assert env.stdout == sys.stdout
    assert env.stdout_isatty == sys.stdout.isatty()
    assert env.stderr == sys.stderr
    assert env.stderr_isatty == sys.stderr.isatty()
    assert env.colors in [256, curses.tigetnum('colors') if curses else 256]
    assert env.program_name == 'http'
    assert env.stdin_encoding == (sys.stdin.encoding if sys.stdin and sys.stdin.encoding else 'utf8')
    assert env.stdout_encoding == (sys.stdout.encoding if sys.stdout.encoding else 'utf8')
    assert env._orig_stderr == sys.stderr
    assert env._devnull is None
```

# Generated at 2024-06-02 15:59:22.578429
```python
    env = Environment()
    assert env.is_windows == is_windows
    assert env.config_dir == DEFAULT_CONFIG_DIR
    assert env.stdin == sys.stdin
    assert env.stdin_isatty == sys.stdin.isatty()
    assert env.stdout == sys.stdout
    assert env.stdout_isatty == sys.stdout.isatty()
    assert env.stderr == sys.stderr
    assert env.stderr_isatty == sys.stderr.isatty()
    assert env.colors in [256, curses.tigetnum('colors') if curses else 256]
    assert env.program_name == 'http'
    assert env.stdin_encoding == (sys.stdin.encoding or 'utf8')
    assert env.stdout_encoding == (sys.stdout.encoding or 'utf8')
    assert env._orig_stderr == sys.stderr
    assert env._devnull is None
```

# Generated at 2024-06-02 15:59:25.200635
```python
    env = Environment()
    assert env.is_windows == is_windows
    assert env.config_dir == DEFAULT_CONFIG_DIR
    assert env.stdin == sys.stdin
    assert env.stdin_isatty == sys.stdin.isatty()
    assert env.stdout == sys.stdout
    assert env.stdout_isatty == sys.stdout.isatty()
    assert env.stderr == sys.stderr
    assert env.stderr_isatty == sys.stderr.isatty()
    assert env.program_name == 'http'
    assert env.colors in [8, 16, 256]
    assert env.stdin_encoding == (sys.stdin.encoding or 'utf8')
    assert env.stdout_encoding == (sys.stdout.encoding or 'utf8')
```

# Generated at 2024-06-02 15:59:32.400897
```python
    env = Environment()
    assert env.is_windows == is_windows
    assert env.config_dir == DEFAULT_CONFIG_DIR
    assert env.stdin == sys.stdin
    assert env.stdin_isatty == (sys.stdin.isatty() if sys.stdin else False)
    assert env.stdout == sys.stdout
    assert env.stdout_isatty == sys.stdout.isatty()
    assert env.stderr == sys.stderr
    assert env.stderr_isatty == sys.stderr.isatty()
    assert env.colors in [256, curses.tigetnum('colors') if curses else 256]
    assert env.program_name == 'http'
    assert env.stdin_encoding == (sys.stdin.encoding if sys.stdin and sys.stdin.encoding else 'utf8')
    assert env.stdout_encoding == (sys.stdout.encoding if sys.stdout and sys.stdout.encoding else 'utf8')
    assert env._orig_stderr == sys.stderr
    assert env._devnull is None
```

# Generated at 2024-06-02 15:59:35.118236
```python
    env = Environment()
    assert env.is_windows == is_windows
    assert env.config_dir == DEFAULT_CONFIG_DIR
    assert env.stdin == sys.stdin
    assert env.stdin_isatty == (sys.stdin.isatty() if sys.stdin else False)
    assert env.stdout == sys.stdout
    assert env.stdout_isatty == sys.stdout.isatty()
    assert env.stderr == sys.stderr
    assert env.stderr_isatty == sys.stderr.isatty()
    assert env.program_name == 'http'
    assert env.colors in [256, curses.tigetnum('colors') if curses else 256]
    assert env.stdin_encoding == (sys.stdin.encoding if sys.stdin else 'utf8')
    assert env.stdout_encoding == (sys.stdout.encoding if sys.stdout else 'utf8')

    custom_env = Environment(stdin=sys.stdin, stdout=sys.stdout, stderr=sys.stderr, config_dir=Path('/custom/config'))
    assert custom_env.config_dir == Path('/

# Generated at 2024-06-02 15:59:37.769289
```python
    env = Environment()
    assert env.is_windows == is_windows
    assert env.config_dir == DEFAULT_CONFIG_DIR
    assert env.stdin == sys.stdin
    assert env.stdin_isatty == sys.stdin.isatty()
    assert env.stdout == sys.stdout
    assert env.stdout_isatty == sys.stdout.isatty()
    assert env.stderr == sys.stderr
    assert env.stderr_isatty == sys.stderr.isatty()
    assert env.program_name == 'http'
    assert env.colors in [8, 16, 256]
    assert env.stdin_encoding == (sys.stdin.encoding or 'utf8')
    assert env.stdout_encoding == (sys.stdout.encoding or 'utf8')
    assert env._orig_stderr == sys.stderr
    assert env._devnull is None
```