# Automatically generated by Pynguin.
import typesystem.composites as module_0
import typesystem.fields as module_1

def test_case_0():
    never_match_0 = module_0.NeverMatch()

def test_case_1():
    tuple_0 = ()
    bool_0 = False
    field_0 = module_1.Field(default=tuple_0, allow_null=bool_0)
    field_1 = module_1.Field()
    union_0 = field_1.__or__(field_0)
    field_2 = module_1.Field(default=union_0)
    list_0 = [field_2]
    all_of_0 = module_0.AllOf(list_0)

def test_case_2():
    never_match_0 = module_0.NeverMatch()
    not_0 = module_0.Not(never_match_0)
    any_0 = not_0.validate(never_match_0)

def test_case_3():
    str_0 = '\n    Raised by `typesystem.tokenize_json()` and `typesystem.tokenize_yaml()`.\n    '
    bool_0 = None
    field_0 = module_1.Field(description=str_0, allow_null=bool_0)
    not_0 = module_0.Not(field_0)
    float_0 = 2493.1635
    tuple_0 = ()
    list_0 = [float_0, tuple_0, float_0, tuple_0]
    bool_1 = False
    field_1 = module_1.Field(default=list_0, allow_null=bool_1)
    if_then_else_0 = module_0.IfThenElse(field_1, field_1)