# Automatically generated by Pynguin.
import ansible.module_utils.common.dict_transformations as module_0

def test_case_0():
    str_0 = '=/;9 .2a)Q0_'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.camel_dict_to_snake_dict(dict_0)

def test_case_1():
    int_0 = -2026
    var_0 = module_0.snake_dict_to_camel_dict(int_0)

def test_case_2():
    dict_0 = {}
    var_0 = module_0.snake_dict_to_camel_dict(dict_0)

def test_case_3():
    list_0 = []
    var_0 = module_0.snake_dict_to_camel_dict(list_0)

def test_case_4():
    bytes_0 = None
    var_0 = module_0.snake_dict_to_camel_dict(bytes_0)

def test_case_5():
    str_0 = '=/;9 .2a)Q0_'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.snake_dict_to_camel_dict(dict_0)

def test_case_6():
    str_0 = '0c+s$rH'
    dict_0 = {str_0: str_0}
    bool_0 = False
    var_0 = module_0.camel_dict_to_snake_dict(dict_0, str_0, bool_0)

def test_case_7():
    str_0 = "\n- hosts: localhost\n  tasks:\n    - debug:\n        msg: play1\n\n- name: Include a play after another play\n  import_playbook: otherplays.yaml\n\n- name: Set variables on an imported playbook\n  import_playbook: otherplays.yml\n  vars:\n    service: httpd\n\n- name: This DOES NOT WORK\n  hosts: all\n  tasks:\n    - debug:\n        msg: task1\n\n    - name: This fails because I'm inside a play already\n      import_playbook: stuff.yaml\n"
    int_0 = 99
    dict_0 = {int_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.dict_merge(dict_0, dict_0)

def test_case_8():
    list_0 = []
    var_0 = module_0.dict_merge(list_0, list_0)

def test_case_9():
    str_0 = 'kyg53'
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.recursive_diff(dict_0, dict_0)

def test_case_10():
    str_0 = 'Fb/u&uTSQL[Unk\n4\\'
    dict_0 = {str_0: str_0, str_0: str_0}
    bool_0 = False
    var_0 = module_0.camel_dict_to_snake_dict(dict_0, str_0, bool_0)

def test_case_11():
    str_0 = "Le<iLKd]#=V'"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.camel_dict_to_snake_dict(dict_0)
    int_0 = 6623
    str_1 = 'Uvx'
    var_1 = module_0.snake_dict_to_camel_dict(int_0, str_1)
    var_2 = module_0.snake_dict_to_camel_dict(dict_0)
    var_3 = module_0.snake_dict_to_camel_dict(dict_0)
    bytes_0 = b'\xf8\x89\xad(\xb6x\x04\xe5<\xd8'
    var_4 = module_0.snake_dict_to_camel_dict(dict_0, bytes_0)
    var_5 = module_0.recursive_diff(dict_0, dict_0)
    str_2 = 'DevpollSelector'
    var_6 = module_0.snake_dict_to_camel_dict(str_2)
    int_1 = 1926
    var_7 = module_0.dict_merge(int_1, str_1)
    var_8 = module_0.dict_merge(dict_0, dict_0)
    dict_1 = {}
    var_9 = module_0.recursive_diff(dict_0, dict_1)
    set_0 = None
    str_3 = 'cz0u;E+q'
    bytes_1 = b'\xb8\xc5\x10x\xe0\xc4\x88\xfa'
    var_10 = module_0.dict_merge(str_3, bytes_1)
    float_0 = -4871.912965
    var_11 = module_0.dict_merge(set_0, float_0)

def test_case_12():
    str_0 = "Le<iLKd]#=V'"
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.camel_dict_to_snake_dict(dict_0)
    int_0 = 6623
    str_1 = 'Uvx'
    var_1 = module_0.snake_dict_to_camel_dict(int_0, str_1)
    var_2 = module_0.snake_dict_to_camel_dict(dict_0)
    var_3 = module_0.snake_dict_to_camel_dict(dict_0)
    bytes_0 = b'\xf8\x89\xad(\xb6x\x04\xe5<\xd8'
    var_4 = module_0.snake_dict_to_camel_dict(dict_0, bytes_0)
    var_5 = module_0.recursive_diff(dict_0, dict_0)
    str_2 = 'DevpollSelector'
    var_6 = module_0.snake_dict_to_camel_dict(str_2)
    int_1 = 1926
    str_3 = "Le<iLKd]#=V'c"
    var_7 = module_0.dict_merge(int_1, str_3)
    var_8 = module_0.dict_merge(dict_0, dict_0)
    dict_1 = {var_1: var_5, str_0: var_8}
    var_9 = module_0.recursive_diff(dict_0, dict_1)
    set_0 = None
    str_4 = 'F&\nF'
    var_10 = module_0.dict_merge(set_0, str_4)
    int_2 = 480
    var_11 = module_0.dict_merge(int_0, int_2)
    var_12 = module_0.dict_merge(dict_1, dict_1)