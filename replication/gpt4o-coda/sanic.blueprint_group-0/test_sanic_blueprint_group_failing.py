# Automatically generated by Pynguin.
import sanic.blueprint_group as module_0
import sanic.blueprints as module_1

def test_case_0():
    try:
        str_0 = 'x-forwarded-host'
        str_1 = 'host address [default 127.0.0.1]'
        dict_0 = {str_1: str_1, str_1: str_1}
        blueprint_group_0 = module_0.BlueprintGroup(str_1, dict_0)
        var_0 = blueprint_group_0.__getitem__(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = 400
        dict_0 = {int_0: int_0}
        bool_0 = False
        bool_1 = True
        blueprint_group_0 = module_0.BlueprintGroup(bool_1)
        blueprint_group_0.__setitem__(dict_0, bool_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b'\x06\xadH\x9a\xc4\x8d\xf6\x0f\xf0\xa5@\xe1w\xe9\xff`\xa9!'
        blueprint_group_0 = module_0.BlueprintGroup()
        blueprint_group_0.__delitem__(bytes_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'r>'
        blueprint_0 = module_1.Blueprint(str_0)
        str_1 = ' (most recent call last):\n'
        dict_0 = {str_1: str_1}
        list_0 = [dict_0, dict_0, dict_0]
        blueprint_group_0 = module_0.BlueprintGroup(list_0, list_0)
        blueprint_group_0.append(blueprint_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = "'Cce,n+"
        str_1 = 'args'
        list_0 = [str_1, str_1]
        blueprint_group_0 = module_0.BlueprintGroup(str_1, list_0)
        set_0 = {blueprint_group_0, str_1, str_1}
        blueprint_0 = module_1.Blueprint(str_1)
        blueprint_group_0.append(blueprint_0)
        list_1 = [str_0, set_0, str_1, set_0]
        var_0 = blueprint_group_0.__getitem__(list_1)
    except BaseException:
        pass

def test_case_5():
    try:
        blueprint_group_0 = module_0.BlueprintGroup()
        var_0 = blueprint_group_0.middleware()
        int_0 = None
        list_0 = [var_0]
        var_1 = blueprint_group_0.middleware(*list_0)
        blueprint_0 = None
        blueprint_group_0.insert(int_0, blueprint_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = ',!hc'
        blueprint_0 = module_1.Blueprint(str_0, str_0)
        bool_0 = None
        list_0 = [bool_0, bool_0, bool_0]
        dict_0 = {}
        bool_1 = True
        blueprint_group_0 = module_0.BlueprintGroup(list_0, dict_0, bool_1)
        blueprint_group_0.append(blueprint_0)
    except BaseException:
        pass

def test_case_7():
    try:
        blueprint_group_0 = module_0.BlueprintGroup()
        var_0 = blueprint_group_0.middleware()
        list_0 = [var_0]
        var_1 = blueprint_group_0.middleware(*list_0)
        blueprint_group_0.__delitem__(blueprint_group_0)
    except BaseException:
        pass