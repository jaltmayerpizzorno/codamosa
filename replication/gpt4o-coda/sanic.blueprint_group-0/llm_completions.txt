

# Generated at 2024-06-03 06:36:29.313658
```python
    app = sanic.Sanic("test_app")
    bp1 = sanic.Blueprint("bp1")
    bp2 = sanic.Blueprint("bp2")
    bpg = BlueprintGroup()
    bpg.append(bp1)
    bpg.append(bp2)

    @bpg.middleware("request")
    async def test_middleware(request):
        request["middleware_applied"] = True

    @bp1.route("/")
    async def bp1_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    @bp2.route("/")
    async def bp2_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    app.blueprint(bpg)

    request, response = app.test_client.get("/bp1/")
    assert response.json["middleware_applied"] is True

    request, response = app.test_client.get("/bp2/")


# Generated at 2024-06-03 06:36:33.733462
```python
    from sanic import Blueprint, Sanic
    from sanic.request import Request
    from sanic.response import text

    app = Sanic("test_app")
    bp1 = Blueprint("bp1", url_prefix="/bp1")
    bp2 = Blueprint("bp2", url_prefix="/bp2")
    bpg = BlueprintGroup()
    bpg.append(bp1)
    bpg.append(bp2)

    @bpg.middleware("request")
    async def group_middleware(request: Request):
        request.ctx.middleware_applied = True

    @bp1.route("/")
    async def bp1_route(request: Request):
        return text("bp1")

    @bp2.route("/")
    async def bp2_route(request: Request):
        return text("bp2")

    app.blueprint(bpg)

    _, response1 = app.test_client.get("/bp1/")
    assert response1.status == 200
    assert response1.text == "bp1

# Generated at 2024-06-03 06:36:39.617276
```python
    app = sanic.Sanic("test_app")
    bp1 = sanic.Blueprint("bp1")
    bp2 = sanic.Blueprint("bp2")
    bpg = BlueprintGroup()
    bpg.append(bp1)
    bpg.append(bp2)

    @bpg.middleware("request")
    async def test_middleware(request):
        request["middleware_applied"] = True

    @bp1.route("/")
    async def bp1_route(request):
        return sanic.response.text("bp1")

    @bp2.route("/")
    async def bp2_route(request):
        return sanic.response.text("bp2")

    app.blueprint(bpg)

    _, response = app.test_client.get("/bp1/")
    assert response.status == 200
    assert response.text == "bp1"
    assert response.request["middleware_applied"]

    _, response = app.test_client.get("/bp2/")
    assert response.status == 200
    assert

# Generated at 2024-06-03 06:36:43.421703
```python
    app = sanic.Sanic("test_app")
    bp1 = sanic.Blueprint("bp1", url_prefix="/bp1")
    bp2 = sanic.Blueprint("bp2", url_prefix="/bp2")
    bpg = BlueprintGroup(url_prefix="/api", version="v1")
    bpg.append(bp1)
    bpg.append(bp2)

    @bpg.middleware("request")
    async def group_middleware(request):
        request.ctx.middleware_applied = True

    @bp1.route("/")
    async def bp1_route(request):
        return sanic.response.text("bp1")

    @bp2.route("/")
    async def bp2_route(request):
        return sanic.response.text("bp2")

    app.blueprint(bpg)

    _, response = app.test_client.get("/api/bp1/")
    assert response.status == 200
    assert response.text == "bp1"
    assert response.request.ctx.middleware_applied



# Generated at 2024-06-03 06:36:47.121357
```python
    app = sanic.Sanic("test_app")
    bp1 = sanic.Blueprint("bp1", url_prefix="/bp1")
    bp2 = sanic.Blueprint("bp2", url_prefix="/bp2")
    bpg = BlueprintGroup(url_prefix="/api", version="v1")
    bpg.append(bp1)
    bpg.append(bp2)

    @bpg.middleware("request")
    async def group_middleware(request):
        request.ctx.middleware_applied = True

    @bp1.route("/")
    async def bp1_route(request):
        return sanic.response.text("bp1")

    @bp2.route("/")
    async def bp2_route(request):
        return sanic.response.text("bp2")

    app.blueprint(bpg)

    _, response = app.test_client.get("/api/bp1/")
    assert response.status == 200
    assert response.text == "bp1"
    assert response.request.ctx.middleware_applied



# Generated at 2024-06-03 06:36:50.972711
```python
    app = sanic.Sanic("test_app")
    bp1 = sanic.Blueprint("bp1")
    bp2 = sanic.Blueprint("bp2")
    bpg = BlueprintGroup()
    bpg.append(bp1)
    bpg.append(bp2)

    @bpg.middleware("request")
    async def test_middleware(request):
        request.ctx.middleware_applied = True

    @bp1.route("/")
    async def bp1_route(request):
        return sanic.response.text("bp1")

    @bp2.route("/")
    async def bp2_route(request):
        return sanic.response.text("bp2")

    app.blueprint(bpg)

    _, response = app.test_client.get("/bp1")
    assert response.status == 200
    assert response.text == "bp1"
    assert response.request.ctx.middleware_applied

    _, response = app.test_client.get("/bp2")
    assert response.status == 200
    assert response

# Generated at 2024-06-03 06:36:54.742291
```python
    app = sanic.Sanic("test_app")
    bp1 = sanic.Blueprint("bp1")
    bp2 = sanic.Blueprint("bp2")
    bpg = BlueprintGroup()
    bpg.append(bp1)
    bpg.append(bp2)

    @bpg.middleware("request")
    async def test_middleware(request):
        request["middleware_applied"] = True

    @bp1.route("/")
    async def bp1_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    @bp2.route("/")
    async def bp2_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    app.blueprint(bpg)

    _, response = app.test_client.get("/bp1/")
    assert response.json["middleware_applied"] is True

    _, response = app.test_client.get("/bp2/")
    assert

# Generated at 2024-06-03 06:36:58.038508
```python
    app = sanic.Sanic("test_app")
    bp1 = sanic.Blueprint("bp1")
    bp2 = sanic.Blueprint("bp2")
    bpg = BlueprintGroup()
    bpg.append(bp1)
    bpg.append(bp2)

    @bpg.middleware("request")
    async def test_middleware(request):
        request["middleware_applied"] = True

    app.blueprint(bpg)

    @bp1.route("/")
    async def bp1_route(request):
        return sanic.response.text("bp1")

    @bp2.route("/")
    async def bp2_route(request):
        return sanic.response.text("bp2")

    request, response = app.test_client.get("/bp1/")
    assert request["middleware_applied"] is True

    request, response = app.test_client.get("/bp2/")
    assert request["middleware_applied"] is True
```

# Generated at 2024-06-03 06:37:01.860754
```python
    app = sanic.Sanic("test_app")
    bp1 = sanic.Blueprint("bp1", url_prefix="/bp1")
    bp2 = sanic.Blueprint("bp2", url_prefix="/bp2")
    bpg = BlueprintGroup(url_prefix="/api", version="v1")
    bpg.append(bp1)
    bpg.append(bp2)

    @bpg.middleware("request")
    async def group_middleware(request):
        request.ctx.middleware_applied = True

    @bp1.route("/")
    async def bp1_route(request):
        return sanic.response.text("bp1")

    @bp2.route("/")
    async def bp2_route(request):
        return sanic.response.text("bp2")

    app.blueprint(bpg)

    _, response = app.test_client.get("/api/bp1/")
    assert response.status == 200
    assert response.text == "bp1"
    assert response.request.ctx.middleware_applied



# Generated at 2024-06-03 06:37:07.278762
```python
    app = sanic.Sanic("test_app")
    bp1 = sanic.Blueprint("bp1")
    bp2 = sanic.Blueprint("bp2")
    bpg = BlueprintGroup()
    bpg.append(bp1)
    bpg.append(bp2)

    @bpg.middleware("request")
    async def test_middleware(request):
        request["middleware_applied"] = True

    @bp1.route("/")
    async def bp1_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    @bp2.route("/")
    async def bp2_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    app.blueprint(bpg)

    _, response = app.test_client.get("/bp1/")
    assert response.json["middleware_applied"] is True

    _, response = app.test_client.get("/bp2/")
    assert

# Generated at 2024-06-03 06:37:14.638212
```python
    app = sanic.Sanic("test_app")
    bp1 = sanic.Blueprint("bp1")
    bp2 = sanic.Blueprint("bp2")
    bpg = BlueprintGroup()
    bpg.append(bp1)
    bpg.append(bp2)

    @bpg.middleware("request")
    async def test_middleware(request):
        request["middleware_applied"] = True

    @bp1.route("/")
    async def bp1_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    @bp2.route("/")
    async def bp2_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    app.blueprint(bpg)

    _, response = app.test_client.get("/bp1/")
    assert response.json["middleware_applied"] is True

    _, response = app.test_client.get("/bp2/")
    assert

# Generated at 2024-06-03 06:37:18.637475
```python
    from sanic import Blueprint, Sanic
    from sanic.request import Request
    from sanic.response import text

    app = Sanic("test_app")
    bp1 = Blueprint("bp1", url_prefix="/bp1")
    bp2 = Blueprint("bp2", url_prefix="/bp2")
    bpg = BlueprintGroup()
    bpg.append(bp1)
    bpg.append(bp2)

    @bpg.middleware("request")
    async def group_middleware(request: Request):
        request.ctx.middleware_applied = True

    @bp1.route("/")
    async def bp1_route(request: Request):
        return text("bp1")

    @bp2.route("/")
    async def bp2_route(request: Request):
        return text("bp2")

    app.blueprint(bpg)

    _, response = app.test_client.get("/bp1/")
    assert response.status == 200
    assert response.text == "bp1"
    assert

# Generated at 2024-06-03 06:37:22.128243
```python
    app = sanic.Sanic("test_app")
    bp1 = sanic.Blueprint("bp1", url_prefix="/bp1")
    bp2 = sanic.Blueprint("bp2", url_prefix="/bp2")
    bpg = BlueprintGroup(url_prefix="/api", version="v1")
    bpg.append(bp1)
    bpg.append(bp2)

    @bpg.middleware("request")
    async def group_middleware(request):
        request.ctx.middleware_applied = True

    @bp1.route("/")
    async def bp1_route(request):
        return sanic.response.text("bp1")

    @bp2.route("/")
    async def bp2_route(request):
        return sanic.response.text("bp2")

    app.blueprint(bpg)

    _, response = app.test_client.get("/api/bp1/")
    assert response.status == 200
    assert response.text == "bp1"
    assert response.request.ctx.middleware_applied



# Generated at 2024-06-03 06:37:25.314201
```python
    app = sanic.Sanic("test_app")
    bp1 = sanic.Blueprint("bp1")
    bp2 = sanic.Blueprint("bp2")
    bpg = BlueprintGroup()
    bpg.append(bp1)
    bpg.append(bp2)

    @bpg.middleware("request")
    async def test_middleware(request):
        request["middleware_applied"] = True

    @bp1.route("/")
    async def bp1_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    @bp2.route("/")
    async def bp2_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    app.blueprint(bpg)

    request, response = app.test_client.get("/bp1/")
    assert response.json["middleware_applied"] is True

    request, response = app.test_client.get("/bp2/")


# Generated at 2024-06-03 06:37:29.623308
```python
    app = sanic.Sanic("test_app")
    bp1 = sanic.Blueprint("bp1")
    bp2 = sanic.Blueprint("bp2")
    bpg = BlueprintGroup()
    bpg.append(bp1)
    bpg.append(bp2)

    @bpg.middleware("request")
    async def test_middleware(request):
        request["middleware_applied"] = True

    @bp1.route("/")
    async def bp1_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    @bp2.route("/")
    async def bp2_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    app.blueprint(bpg)

    request, response = app.test_client.get("/bp1/")
    assert response.json["middleware_applied"] is True

    request, response = app.test_client.get("/bp2/")


# Generated at 2024-06-03 06:37:33.285750
```python
    app = sanic.Sanic("test_app")
    bp1 = sanic.Blueprint("bp1")
    bp2 = sanic.Blueprint("bp2")
    bpg = BlueprintGroup()
    bpg.append(bp1)
    bpg.append(bp2)

    @bpg.middleware("request")
    async def test_middleware(request):
        request["middleware_applied"] = True

    @bp1.route("/")
    async def bp1_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    @bp2.route("/")
    async def bp2_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    app.blueprint(bpg)

    _, response = app.test_client.get("/bp1/")
    assert response.json["middleware_applied"] is True

    _, response = app.test_client.get("/bp2/")
    assert

# Generated at 2024-06-03 06:37:36.369352
```python
    app = sanic.Sanic("test_app")
    bp1 = sanic.Blueprint("bp1")
    bp2 = sanic.Blueprint("bp2")
    bpg = BlueprintGroup()
    bpg.append(bp1)
    bpg.append(bp2)

    @bpg.middleware("request")
    async def test_middleware(request):
        request["middleware_applied"] = True

    @bp1.route("/")
    async def bp1_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    @bp2.route("/")
    async def bp2_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    app.blueprint(bpg)

    request, response = app.test_client.get("/bp1/")
    assert response.json["middleware_applied"] is True

    request, response = app.test_client.get("/bp2/")


# Generated at 2024-06-03 06:37:40.543830
```python
    app = sanic.Sanic("test_app")
    bp1 = sanic.Blueprint("bp1")
    bp2 = sanic.Blueprint("bp2")
    bpg = BlueprintGroup()
    bpg.append(bp1)
    bpg.append(bp2)

    @bpg.middleware("request")
    async def test_middleware(request):
        request["middleware_applied"] = True

    @bp1.route("/")
    async def bp1_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    @bp2.route("/")
    async def bp2_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    app.blueprint(bpg)

    _, response = app.test_client.get("/bp1/")
    assert response.json["middleware_applied"] is True

    _, response = app.test_client.get("/bp2/")
    assert

# Generated at 2024-06-03 06:37:46.233238
```python
    app = sanic.Sanic("test_app")
    bp1 = sanic.Blueprint("bp1")
    bp2 = sanic.Blueprint("bp2")
    bpg = BlueprintGroup()
    bpg.append(bp1)
    bpg.append(bp2)

    @bpg.middleware("request")
    async def test_middleware(request):
        request["middleware_applied"] = True

    @bp1.route("/")
    async def bp1_route(request):
        return sanic.response.text("bp1")

    @bp2.route("/")
    async def bp2_route(request):
        return sanic.response.text("bp2")

    app.blueprint(bpg)

    _, response = app.test_client.get("/bp1")
    assert response.status == 200
    assert response.text == "bp1"
    assert "middleware_applied" in response.request

    _, response = app.test_client.get("/bp2")
    assert response.status == 200


# Generated at 2024-06-03 06:37:50.514381
```python
    app = sanic.Sanic("test_app")
    bp1 = sanic.Blueprint("bp1")
    bp2 = sanic.Blueprint("bp2")
    bpg = BlueprintGroup()
    bpg.append(bp1)
    bpg.append(bp2)

    @bpg.middleware("request")
    async def test_middleware(request):
        request["middleware_applied"] = True

    @bp1.route("/")
    async def bp1_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    @bp2.route("/")
    async def bp2_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    app.blueprint(bpg)

    _, response = app.test_client.get("/bp1/")
    assert response.json["middleware_applied"] is True

    _, response = app.test_client.get("/bp2/")
    assert

# Generated at 2024-06-03 06:38:01.143827
```python
    app = sanic.Sanic("test_app")
    bp1 = sanic.Blueprint("bp1")
    bp2 = sanic.Blueprint("bp2")
    bpg = BlueprintGroup()
    bpg.append(bp1)
    bpg.append(bp2)

    @bpg.middleware("request")
    async def test_middleware(request):
        request["middleware_applied"] = True

    @bp1.route("/")
    async def bp1_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    @bp2.route("/")
    async def bp2_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    app.blueprint(bpg)

    _, response = app.test_client.get("/bp1/")
    assert response.json["middleware_applied"] is True

    _, response = app.test_client.get("/bp2/")
    assert

# Generated at 2024-06-03 06:38:05.436971
```python
    app = sanic.Sanic("test_app")
    bp1 = sanic.Blueprint("bp1")
    bp2 = sanic.Blueprint("bp2")
    bpg = BlueprintGroup()
    bpg.append(bp1)
    bpg.append(bp2)

    @bpg.middleware("request")
    async def test_middleware(request):
        request["middleware_applied"] = True

    @bp1.route("/")
    async def bp1_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    @bp2.route("/")
    async def bp2_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    app.blueprint(bpg)

    _, response = app.test_client.get("/bp1/")
    assert response.json["middleware_applied"] is True

    _, response = app.test_client.get("/bp2/")
    assert

# Generated at 2024-06-03 06:38:08.826631
```python
    app = sanic.Sanic("test_app")
    bp1 = sanic.Blueprint("bp1")
    bp2 = sanic.Blueprint("bp2")
    bpg = BlueprintGroup()
    bpg.append(bp1)
    bpg.append(bp2)

    @bpg.middleware("request")
    async def test_middleware(request):
        request["middleware_applied"] = True

    @bp1.route("/")
    async def bp1_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    @bp2.route("/")
    async def bp2_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    app.blueprint(bpg)

    request, response = app.test_client.get("/bp1/")
    assert response.json["middleware_applied"] is True

    request, response = app.test_client.get("/bp2/")


# Generated at 2024-06-03 06:38:12.263177
```python
    app = sanic.Sanic("test_app")
    bp1 = sanic.Blueprint("bp1")
    bp2 = sanic.Blueprint("bp2")
    bpg = BlueprintGroup()
    bpg.append(bp1)
    bpg.append(bp2)

    @bpg.middleware("request")
    async def test_middleware(request):
        request["middleware_applied"] = True

    @bp1.route("/")
    async def bp1_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    @bp2.route("/")
    async def bp2_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    app.blueprint(bpg)

    request, response = app.test_client.get("/bp1/")
    assert response.json["middleware_applied"] is True

    request, response = app.test_client.get("/bp2/")


# Generated at 2024-06-03 06:38:17.102947
```python
    app = sanic.Sanic("test_app")
    bp1 = sanic.Blueprint("bp1")
    bp2 = sanic.Blueprint("bp2")
    bpg = BlueprintGroup()
    bpg.append(bp1)
    bpg.append(bp2)

    @bpg.middleware("request")
    async def test_middleware(request):
        request["middleware_applied"] = True

    @bp1.route("/")
    async def bp1_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    @bp2.route("/")
    async def bp2_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    app.blueprint(bpg)

    request, response = app.test_client.get("/bp1/")
    assert response.json["middleware_applied"] is True

    request, response = app.test_client.get("/bp2/")


# Generated at 2024-06-03 06:38:23.010328
```python
    app = sanic.Sanic("test_app")
    bp1 = sanic.Blueprint("bp1")
    bp2 = sanic.Blueprint("bp2")
    bpg = BlueprintGroup()
    bpg.append(bp1)
    bpg.append(bp2)

    @bpg.middleware("request")
    async def test_middleware(request):
        request["middleware_applied"] = True

    @bp1.route("/")
    async def bp1_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    @bp2.route("/")
    async def bp2_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    app.blueprint(bpg)

    _, response = app.test_client.get("/bp1/")
    assert response.json["middleware_applied"] is True

    _, response = app.test_client.get("/bp2/")
    assert

# Generated at 2024-06-03 06:38:29.111661
```python
    app = sanic.Sanic("test_app")
    bp1 = sanic.Blueprint("bp1")
    bp2 = sanic.Blueprint("bp2")
    bpg = BlueprintGroup()
    bpg.append(bp1)
    bpg.append(bp2)

    @bpg.middleware("request")
    async def test_middleware(request):
        request["middleware_applied"] = True

    @bp1.route("/")
    async def bp1_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    @bp2.route("/")
    async def bp2_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    app.blueprint(bpg)

    request, response = app.test_client.get("/bp1/")
    assert response.json["middleware_applied"] is True

    request, response = app.test_client.get("/bp2/")


# Generated at 2024-06-03 06:38:33.748568
```python
    app = sanic.Sanic("test_app")
    bp1 = sanic.Blueprint("bp1")
    bp2 = sanic.Blueprint("bp2")
    bpg = BlueprintGroup()
    bpg.append(bp1)
    bpg.append(bp2)

    @bpg.middleware("request")
    async def test_middleware(request):
        request["middleware_applied"] = True

    @bp1.route("/")
    async def bp1_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    @bp2.route("/")
    async def bp2_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    app.blueprint(bpg)

    request, response = app.test_client.get("/bp1/")
    assert response.json["middleware_applied"] is True

    request, response = app.test_client.get("/bp2/")


# Generated at 2024-06-03 06:38:36.617907
```python
    app = sanic.Sanic("test_app")
    bp1 = sanic.Blueprint("bp1")
    bp2 = sanic.Blueprint("bp2")
    bpg = BlueprintGroup()
    bpg.append(bp1)
    bpg.append(bp2)

    @bpg.middleware("request")
    async def test_middleware(request):
        request["middleware_applied"] = True

    @bp1.route("/")
    async def bp1_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    @bp2.route("/")
    async def bp2_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    app.blueprint(bpg)

    _, response = app.test_client.get("/bp1/")
    assert response.json["middleware_applied"] is True

    _, response = app.test_client.get("/bp2/")
    assert

# Generated at 2024-06-03 06:38:41.104198
```python
    app = sanic.Sanic("test_app")
    bp1 = sanic.Blueprint("bp1")
    bp2 = sanic.Blueprint("bp2")
    bpg = BlueprintGroup()
    bpg.append(bp1)
    bpg.append(bp2)

    @bpg.middleware("request")
    async def test_middleware(request):
        request["middleware_applied"] = True

    @bp1.route("/")
    async def bp1_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    @bp2.route("/")
    async def bp2_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    app.blueprint(bpg)

    _, response = app.test_client.get("/bp1/")
    assert response.json["middleware_applied"] is True

    _, response = app.test_client.get("/bp2/")
    assert

# Generated at 2024-06-03 06:38:51.194442
```python
    app = sanic.Sanic("test_app")
    bp1 = sanic.Blueprint("bp1", url_prefix="/bp1")
    bp2 = sanic.Blueprint("bp2", url_prefix="/bp2")
    bpg = BlueprintGroup(url_prefix="/api", version="v1")
    bpg.append(bp1)
    bpg.append(bp2)

    @bpg.middleware("request")
    async def group_middleware(request):
        request.ctx.middleware_applied = True

    @bp1.route("/")
    async def bp1_route(request):
        return sanic.response.text("bp1")

    @bp2.route("/")
    async def bp2_route(request):
        return sanic.response.text("bp2")

    app.blueprint(bpg)

    _, response = app.test_client.get("/api/bp1/")
    assert response.status == 200
    assert response.text == "bp1"
    assert response.request.ctx.middleware_applied



# Generated at 2024-06-03 06:38:54.507802
```python
    app = sanic.Sanic("test_app")
    bp1 = sanic.Blueprint("bp1", url_prefix="/bp1")
    bp2 = sanic.Blueprint("bp2", url_prefix="/bp2")
    bpg = BlueprintGroup(url_prefix="/api", version="v1")
    bpg.append(bp1)
    bpg.append(bp2)

    @bpg.middleware("request")
    async def group_middleware(request):
        request.ctx.middleware_applied = True

    @bp1.route("/")
    async def bp1_route(request):
        return sanic.response.text("bp1")

    @bp2.route("/")
    async def bp2_route(request):
        return sanic.response.text("bp2")

    app.blueprint(bpg)

    _, response = app.test_client.get("/api/bp1/")
    assert response.status == 200
    assert response.text == "bp1"
    assert response.request.ctx.middleware_applied



# Generated at 2024-06-03 06:38:57.548618
```python
    app = sanic.Sanic("test_app")
    bp1 = sanic.Blueprint("bp1")
    bp2 = sanic.Blueprint("bp2")
    bpg = BlueprintGroup()
    bpg.append(bp1)
    bpg.append(bp2)

    @bpg.middleware("request")
    async def test_middleware(request):
        request["middleware_applied"] = True

    @bp1.route("/")
    async def bp1_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    @bp2.route("/")
    async def bp2_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    app.blueprint(bpg)

    _, response = app.test_client.get("/bp1/")
    assert response.json["middleware_applied"] is True

    _, response = app.test_client.get("/bp2/")
    assert

# Generated at 2024-06-03 06:39:01.547767
```python
    app = sanic.Sanic("test_app")
    bp1 = sanic.Blueprint("bp1")
    bp2 = sanic.Blueprint("bp2")
    bpg = BlueprintGroup()
    bpg.append(bp1)
    bpg.append(bp2)

    @bpg.middleware("request")
    async def test_middleware(request):
        request["middleware_applied"] = True

    app.blueprint(bpg)

    @bp1.route("/")
    async def bp1_route(request):
        return sanic.response.text("bp1")

    @bp2.route("/")
    async def bp2_route(request):
        return sanic.response.text("bp2")

    _, response = app.test_client.get("/bp1/")
    assert response.status == 200
    assert response.text == "bp1"
    assert response.request["middleware_applied"]

    _, response = app.test_client.get("/bp2/")
    assert response.status == 200
    assert

# Generated at 2024-06-03 06:39:04.955026
```python
    app = sanic.Sanic("test_app")
    bp1 = sanic.Blueprint("bp1")
    bp2 = sanic.Blueprint("bp2")
    bpg = BlueprintGroup()
    bpg.append(bp1)
    bpg.append(bp2)

    @bpg.middleware("request")
    async def test_middleware(request):
        request["middleware_applied"] = True

    @bp1.route("/")
    async def bp1_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    @bp2.route("/")
    async def bp2_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    app.blueprint(bpg)

    request, response = app.test_client.get("/bp1/")
    assert response.json["middleware_applied"] is True

    request, response = app.test_client.get("/bp2/")


# Generated at 2024-06-03 06:39:11.339581
```python
    app = sanic.Sanic("test_app")
    bp1 = sanic.Blueprint("bp1")
    bp2 = sanic.Blueprint("bp2")
    bpg = BlueprintGroup()
    bpg.append(bp1)
    bpg.append(bp2)

    @bpg.middleware("request")
    async def test_middleware(request):
        request["middleware_applied"] = True

    @bp1.route("/")
    async def bp1_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    @bp2.route("/")
    async def bp2_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    app.blueprint(bpg)

    request, response = app.test_client.get("/bp1/")
    assert response.json["middleware_applied"] is True

    request, response = app.test_client.get("/bp2/")


# Generated at 2024-06-03 06:39:16.074871
```python
    app = sanic.Sanic("test_app")
    bp1 = sanic.Blueprint("bp1")
    bp2 = sanic.Blueprint("bp2")
    bpg = BlueprintGroup()
    bpg.append(bp1)
    bpg.append(bp2)

    @bpg.middleware("request")
    async def test_middleware(request):
        request["middleware_applied"] = True

    @bp1.route("/")
    async def bp1_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    @bp2.route("/")
    async def bp2_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    app.blueprint(bpg)

    _, response = app.test_client.get("/bp1/")
    assert response.json["middleware_applied"] is True

    _, response = app.test_client.get("/bp2/")
    assert

# Generated at 2024-06-03 06:39:20.563687
```python
    app = sanic.Sanic("test_app")
    bp1 = sanic.Blueprint("bp1")
    bp2 = sanic.Blueprint("bp2")
    bpg = BlueprintGroup()
    bpg.append(bp1)
    bpg.append(bp2)

    @bpg.middleware("request")
    async def test_middleware(request):
        request["middleware_applied"] = True

    @bp1.route("/")
    async def bp1_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    @bp2.route("/")
    async def bp2_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    app.blueprint(bpg)

    request, response = app.test_client.get("/bp1/")
    assert response.json["middleware_applied"] is True

    request, response = app.test_client.get("/bp2/")


# Generated at 2024-06-03 06:39:25.130030
```python
    app = sanic.Sanic("test_app")
    bp1 = sanic.Blueprint("bp1")
    bp2 = sanic.Blueprint("bp2")
    bpg = BlueprintGroup()
    bpg.append(bp1)
    bpg.append(bp2)

    @bpg.middleware("request")
    async def test_middleware(request):
        request["middleware_applied"] = True

    @bp1.route("/")
    async def bp1_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    @bp2.route("/")
    async def bp2_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    app.blueprint(bpg)

    _, response = app.test_client.get("/bp1/")
    assert response.json["middleware_applied"] is True

    _, response = app.test_client.get("/bp2/")
    assert

# Generated at 2024-06-03 06:39:28.702368
```python
    app = sanic.Sanic("test_app")
    bp1 = sanic.Blueprint("bp1", url_prefix="/bp1")
    bp2 = sanic.Blueprint("bp2", url_prefix="/bp2")
    bpg = BlueprintGroup(url_prefix="/api", version="v1")
    bpg.append(bp1)
    bpg.append(bp2)

    @bpg.middleware("request")
    async def group_middleware(request):
        request.ctx.middleware_applied = True

    @bp1.route("/")
    async def bp1_route(request):
        return sanic.response.text("bp1")

    @bp2.route("/")
    async def bp2_route(request):
        return sanic.response.text("bp2")

    app.blueprint(bpg)

    _, response = app.test_client.get("/api/bp1/")
    assert response.status == 200
    assert response.text == "bp1"
    assert response.request.ctx.middleware_applied



# Generated at 2024-06-03 06:39:44.662513
```python
    app = sanic.Sanic("test_app")
    bp1 = sanic.Blueprint("bp1")
    bp2 = sanic.Blueprint("bp2")
    bpg = BlueprintGroup()
    bpg.append(bp1)
    bpg.append(bp2)

    @bpg.middleware("request")
    async def test_middleware(request):
        request["middleware_applied"] = True

    @bp1.route("/")
    async def bp1_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    @bp2.route("/")
    async def bp2_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    app.blueprint(bpg)

    request, response = app.test_client.get("/bp1/")
    assert response.json["middleware_applied"] is True

    request, response = app.test_client.get("/bp2/")


# Generated at 2024-06-03 06:39:49.140378
```python
    app = sanic.Sanic("test_app")
    bp1 = sanic.Blueprint("bp1")
    bp2 = sanic.Blueprint("bp2")
    bpg = BlueprintGroup()
    bpg.append(bp1)
    bpg.append(bp2)

    @bpg.middleware("request")
    async def test_middleware(request):
        request["middleware_applied"] = True

    @bp1.route("/")
    async def bp1_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    @bp2.route("/")
    async def bp2_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    app.blueprint(bpg)

    _, response = app.test_client.get("/bp1/")
    assert response.json["middleware_applied"] is True

    _, response = app.test_client.get("/bp2/")
    assert

# Generated at 2024-06-03 06:39:52.532853
```python
    app = sanic.Sanic("test_app")
    bp1 = sanic.Blueprint("bp1")
    bp2 = sanic.Blueprint("bp2")
    bpg = BlueprintGroup()
    bpg.append(bp1)
    bpg.append(bp2)

    @bpg.middleware("request")
    async def test_middleware(request):
        request["middleware_applied"] = True

    @bp1.route("/")
    async def bp1_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    @bp2.route("/")
    async def bp2_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    app.blueprint(bpg)

    _, response = app.test_client.get("/bp1/")
    assert response.json["middleware_applied"] is True

    _, response = app.test_client.get("/bp2/")
    assert

# Generated at 2024-06-03 06:39:56.053877
```python
    app = sanic.Sanic("test_app")
    bp1 = sanic.Blueprint("bp1")
    bp2 = sanic.Blueprint("bp2")
    bpg = BlueprintGroup()
    bpg.append(bp1)
    bpg.append(bp2)

    @bpg.middleware("request")
    async def test_middleware(request):
        request["middleware_applied"] = True

    @bp1.route("/")
    async def bp1_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    @bp2.route("/")
    async def bp2_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    app.blueprint(bpg)

    _, response = app.test_client.get("/bp1/")
    assert response.json["middleware_applied"] is True

    _, response = app.test_client.get("/bp2/")
    assert

# Generated at 2024-06-03 06:39:59.437072
```python
    app = sanic.Sanic("test_app")
    bp1 = sanic.Blueprint("bp1")
    bp2 = sanic.Blueprint("bp2")
    bpg = BlueprintGroup()
    bpg.append(bp1)
    bpg.append(bp2)

    @bpg.middleware("request")
    async def test_middleware(request):
        request["middleware_applied"] = True

    @bp1.route("/")
    async def bp1_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    @bp2.route("/")
    async def bp2_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    app.blueprint(bpg)

    _, response = app.test_client.get("/bp1/")
    assert response.json["middleware_applied"] is True

    _, response = app.test_client.get("/bp2/")
    assert

# Generated at 2024-06-03 06:40:03.243842
```python
    app = sanic.Sanic("test_app")
    bp1 = sanic.Blueprint("bp1")
    bp2 = sanic.Blueprint("bp2")
    bpg = BlueprintGroup()
    bpg.append(bp1)
    bpg.append(bp2)

    @bpg.middleware("request")
    async def test_middleware(request):
        request.ctx.middleware_applied = True

    @bp1.route("/")
    async def bp1_route(request):
        return sanic.response.text("bp1")

    @bp2.route("/")
    async def bp2_route(request):
        return sanic.response.text("bp2")

    app.blueprint(bpg)

    _, response = app.test_client.get("/bp1")
    assert response.status == 200
    assert response.text == "bp1"
    assert response.request.ctx.middleware_applied

    _, response = app.test_client.get("/bp2")
    assert response.status == 200
    assert response

# Generated at 2024-06-03 06:40:06.472433
```python
    app = sanic.Sanic("test_app")
    bp1 = sanic.Blueprint("bp1")
    bp2 = sanic.Blueprint("bp2")
    bpg = BlueprintGroup()
    bpg.append(bp1)
    bpg.append(bp2)

    @bpg.middleware("request")
    async def test_middleware(request):
        request["middleware_applied"] = True

    @bp1.route("/")
    async def bp1_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    @bp2.route("/")
    async def bp2_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    app.blueprint(bpg)

    request, response = app.test_client.get("/bp1/")
    assert response.json["middleware_applied"] is True

    request, response = app.test_client.get("/bp2/")


# Generated at 2024-06-03 06:40:10.805152
```python
    app = sanic.Sanic("test_app")
    bp1 = sanic.Blueprint("bp1")
    bp2 = sanic.Blueprint("bp2")
    bpg = BlueprintGroup()
    bpg.append(bp1)
    bpg.append(bp2)

    @bpg.middleware("request")
    async def test_middleware(request):
        request["middleware_applied"] = True

    @bp1.route("/")
    async def bp1_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    @bp2.route("/")
    async def bp2_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    app.blueprint(bpg)

    _, response = app.test_client.get("/bp1/")
    assert response.json["middleware_applied"] is True

    _, response = app.test_client.get("/bp2/")
    assert

# Generated at 2024-06-03 06:40:14.567684
```python
    app = sanic.Sanic("test_app")
    bp1 = sanic.Blueprint("bp1")
    bp2 = sanic.Blueprint("bp2")
    bpg = BlueprintGroup()
    bpg.append(bp1)
    bpg.append(bp2)

    @bpg.middleware("request")
    async def test_middleware(request):
        request["middleware_applied"] = True

    @bp1.route("/")
    async def bp1_route(request):
        return sanic.response.text("bp1")

    @bp2.route("/")
    async def bp2_route(request):
        return sanic.response.text("bp2")

    app.blueprint(bpg)

    _, response = app.test_client.get("/bp1")
    assert response.status == 200
    assert response.text == "bp1"
    assert response.request["middleware_applied"] is True

    _, response = app.test_client.get("/bp2")
    assert response.status == 200

# Generated at 2024-06-03 06:40:18.340591
```python
    app = sanic.Sanic("test_app")
    bp1 = sanic.Blueprint("bp1")
    bp2 = sanic.Blueprint("bp2")
    bpg = BlueprintGroup()
    bpg.append(bp1)
    bpg.append(bp2)

    @bpg.middleware("request")
    async def test_middleware(request):
        request["middleware_applied"] = True

    app.blueprint(bpg)

    @bp1.route("/")
    async def bp1_route(request):
        return sanic.response.text("bp1")

    @bp2.route("/")
    async def bp2_route(request):
        return sanic.response.text("bp2")

    request, response = app.test_client.get("/bp1/")
    assert request["middleware_applied"] is True

    request, response = app.test_client.get("/bp2/")
    assert request["middleware_applied"] is True
```

# Generated at 2024-06-03 06:40:46.368878
```python
    group = BlueprintGroup()
    assert len(group) == 0

    bp1 = sanic.Blueprint('bp1')
    bp2 = sanic.Blueprint('bp2')
    group.append(bp1)
    group.append(bp2)
    assert len(group) == 2

    group.insert(1, sanic.Blueprint('bp3'))
    assert len(group) == 3

    del group[1]
    assert len(group) == 2
```

# Generated at 2024-06-03 06:40:48.847036
```python
    bp1 = sanic.Blueprint('bp1', url_prefix='/bp1')
    bp2 = sanic.Blueprint('bp2', url_prefix='/bp2')
    bpg = BlueprintGroup()
    bpg.append(bp1)
    bpg.append(bp2)
    
    assert bpg[0] == bp1
    assert bpg[1] == bp2
```

# Generated at 2024-06-03 06:40:50.401335
```python
    group = BlueprintGroup()
    bp1 = sanic.Blueprint('bp1', url_prefix='/bp1')
    bp2 = sanic.Blueprint('bp2', url_prefix='/bp2')
    group.append(bp1)
    group[0] = bp2
    assert group[0] == bp2
```

# Generated at 2024-06-03 06:40:52.089325
```python
    bp1 = sanic.Blueprint('bp1', url_prefix='/bp1')
    bp2 = sanic.Blueprint('bp2', url_prefix='/bp2')
    bpg = BlueprintGroup()
    bpg.append(bp1)
    bpg.append(bp2)
    
    blueprints = list(iter(bpg))
    
    assert blueprints == [bp1, bp2]
```

# Generated at 2024-06-03 06:40:56.143530
```python
    app = sanic.Sanic("test_app")
    bp1 = sanic.Blueprint("bp1")
    bp2 = sanic.Blueprint("bp2")
    bpg = BlueprintGroup()
    bpg.append(bp1)
    bpg.append(bp2)

    @bpg.middleware("request")
    async def test_middleware(request):
        request["middleware_applied"] = True

    @bp1.route("/")
    async def bp1_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    @bp2.route("/")
    async def bp2_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    app.blueprint(bpg)

    _, response = app.test_client.get("/bp1/")
    assert response.json["middleware_applied"] is True

    _, response = app.test_client.get("/bp2/")
    assert

# Generated at 2024-06-03 06:40:59.581734
```python
    app = sanic.Sanic("test_app")
    bp1 = sanic.Blueprint("bp1")
    bp2 = sanic.Blueprint("bp2")
    bpg = BlueprintGroup()
    bpg.append(bp1)
    bpg.append(bp2)

    @bpg.middleware("request")
    async def test_middleware(request):
        request["middleware_applied"] = True

    @bp1.route("/")
    async def bp1_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    @bp2.route("/")
    async def bp2_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    app.blueprint(bpg)

    _, response = app.test_client.get("/bp1/")
    assert response.json["middleware_applied"] is True

    _, response = app.test_client.get("/bp2/")
    assert

# Generated at 2024-06-03 06:41:02.138504
```python
    app = sanic.Sanic("test_app")
    bp1 = sanic.Blueprint("bp1", url_prefix="/bp1")
    bp2 = sanic.Blueprint("bp2", url_prefix="/bp2")
    bpg = BlueprintGroup(url_prefix="/api", version="v1")

    bpg.insert(0, bp1)
    bpg.insert(1, bp2)

    assert len(bpg) == 2
    assert bpg[0].url_prefix == "/api/bp1"
    assert bpg[1].url_prefix == "/api/bp2"
    assert bpg[0].version == "v1"
    assert bpg[1].version == "v1"
```

# Generated at 2024-06-03 06:41:03.863375
```python
    bp1 = sanic.Blueprint('bp1', url_prefix='/bp1')
    bp2 = sanic.Blueprint('bp2', url_prefix='/bp2')
    bpg = BlueprintGroup()
    bpg.append(bp1)
    bpg.append(bp2)
    
    assert bpg[0] == bp1
    assert bpg[1] == bp2
```

# Generated at 2024-06-03 06:41:06.167935
```python
    bp1 = sanic.Blueprint('bp1', url_prefix='/bp1')
    bp2 = sanic.Blueprint('bp2', url_prefix='/bp2')
    bpg = BlueprintGroup()
    bpg.append(bp1)
    bpg.append(bp2)
    
    blueprints = list(iter(bpg))
    
    assert blueprints == [bp1, bp2]
```

# Generated at 2024-06-03 06:41:07.803930
```python
    group = BlueprintGroup(url_prefix="/api", version="v1", strict_slashes=True)
    assert group.url_prefix == "/api"
    assert group.version == "v1"
    assert group.strict_slashes is True
    assert len(group) == 0
```

# Generated at 2024-06-03 06:41:41.515333
```python
    app = sanic.Sanic("test_app")
    bp1 = sanic.Blueprint("bp1", url_prefix="/bp1")
    bp2 = sanic.Blueprint("bp2", url_prefix="/bp2")
    bpg = BlueprintGroup(url_prefix="/api", version="v1")

    bpg.insert(0, bp1)
    bpg.insert(1, bp2)

    assert len(bpg) == 2
    assert bpg[0].url_prefix == "/api/bp1"
    assert bpg[1].url_prefix == "/api/bp2"
    assert bpg[0].version == "v1"
    assert bpg[1].version == "v1"
```

# Generated at 2024-06-03 06:41:42.958695
```python
    group = BlueprintGroup(url_prefix="/api", version="v1", strict_slashes=True)
    assert group.url_prefix == "/api"
    assert group.version == "v1"
    assert group.strict_slashes is True
    assert len(group) == 0
```

# Generated at 2024-06-03 06:41:47.021239
```python
    app = sanic.Sanic("test_app")
    bp1 = sanic.Blueprint("bp1", url_prefix="/bp1")
    bp2 = sanic.Blueprint("bp2", url_prefix="/bp2")
    bpg = BlueprintGroup(url_prefix="/api", version="v1")

    bpg.append(bp1)
    bpg.append(bp2)

    assert len(bpg) == 2
    assert bpg[0].url_prefix == "/api/bp1"
    assert bpg[1].url_prefix == "/api/bp2"
    assert bpg[0].version == "v1"
    assert bpg[1].version == "v1"
```

# Generated at 2024-06-03 06:41:49.684757
```python
    app = sanic.Sanic("test_app")
    bp1 = sanic.Blueprint("bp1", url_prefix="/bp1")
    bp2 = sanic.Blueprint("bp2", url_prefix="/bp2")
    bpg = BlueprintGroup(url_prefix="/api", version="v1")

    bpg.append(bp1)
    bpg.append(bp2)

    assert len(bpg) == 2
    assert bpg[0].url_prefix == "/api/bp1"
    assert bpg[1].url_prefix == "/api/bp2"
    assert bpg[0].version == "v1"
    assert bpg[1].version == "v1"
```

# Generated at 2024-06-03 06:41:50.936553
```python
    group = BlueprintGroup(url_prefix="/api", version="v1", strict_slashes=True)
    assert group.url_prefix == "/api"
    assert group.version == "v1"
    assert group.strict_slashes is True
    assert len(group) == 0
```

# Generated at 2024-06-03 06:41:54.289522
```python
    bp1 = sanic.Blueprint('bp1', url_prefix='/bp1')
    bp2 = sanic.Blueprint('bp2', url_prefix='/bp2')
    bpg = BlueprintGroup(url_prefix="/api", version="v1", strict_slashes=True)
    bpg.append(bp1)
    bpg.append(bp2)

    assert bpg.url_prefix == "/api"
    assert bpg.version == "v1"
    assert bpg.strict_slashes is True
    assert len(bpg) == 2
    assert bpg[0].url_prefix == "/api/bp1"
    assert bpg[1].url_prefix == "/api/bp2"
    assert bpg[0].version == "v1"
    assert bpg[1].version == "v1"
    assert bpg[0].strict_slashes is True
    assert bpg[1].strict_slashes is True
```

# Generated at 2024-06-03 06:41:56.604363
```python
    bp1 = sanic.Blueprint('bp1', url_prefix='/bp1')
    bp2 = sanic.Blueprint('bp2', url_prefix='/bp2')
    bp3 = sanic.Blueprint('bp3', url_prefix='/bp3')

    bpg = BlueprintGroup(url_prefix="/api", version="v1")
    bpg.append(bp1)
    bpg.append(bp2)
    bpg.append(bp3)

    assert len(bpg) == 3
    del bpg[1]
    assert len(bpg) == 2
    assert bpg[0] == bp1
    assert bpg[1] == bp3
```

# Generated at 2024-06-03 06:42:00.273684
```python
    app = sanic.Sanic("test_app")
    bp1 = sanic.Blueprint("bp1")
    bp2 = sanic.Blueprint("bp2")
    bpg = BlueprintGroup()
    bpg.append(bp1)
    bpg.append(bp2)

    @bpg.middleware("request")
    async def test_middleware(request):
        request["middleware_applied"] = True

    @bp1.route("/")
    async def bp1_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    @bp2.route("/")
    async def bp2_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    app.blueprint(bpg)

    _, response = app.test_client.get("/bp1/")
    assert response.json["middleware_applied"] is True

    _, response = app.test_client.get("/bp2/")
    assert

# Generated at 2024-06-03 06:42:01.997725
```python
    group = BlueprintGroup()
    bp1 = sanic.Blueprint('bp1', url_prefix='/bp1')
    bp2 = sanic.Blueprint('bp2', url_prefix='/bp2')
    group.append(bp1)
    group[0] = bp2
    assert group[0] == bp2
```

# Generated at 2024-06-03 06:42:03.315093
```python
    group = BlueprintGroup(url_prefix="/api", version="v1", strict_slashes=True)
    assert group.url_prefix == "/api"
    assert group.version == "v1"
    assert group.strict_slashes is True
    assert len(group) == 0
```

# Generated at 2024-06-03 06:43:08.251978
```python
    bp1 = sanic.Blueprint('bp1', url_prefix='/bp1')
    bp2 = sanic.Blueprint('bp2', url_prefix='/bp2')
    bpg = BlueprintGroup(url_prefix="/api", version="v1", strict_slashes=True)
    bpg.append(bp1)
    bpg.append(bp2)

    assert bpg.url_prefix == "/api"
    assert bpg.version == "v1"
    assert bpg.strict_slashes is True
    assert len(bpg) == 2
    assert bpg[0].url_prefix == "/api/bp1"
    assert bpg[1].url_prefix == "/api/bp2"
    assert bpg[0].version == "v1"
    assert bpg[1].version == "v1"
    assert bpg[0].strict_slashes is True
    assert bpg[1].strict_slashes is True
```

# Generated at 2024-06-03 06:43:11.493645
```python
    bp1 = sanic.Blueprint('bp1', url_prefix='/bp1')
    bp2 = sanic.Blueprint('bp2', url_prefix='/bp2')
    bp3 = sanic.Blueprint('bp3', url_prefix='/bp3')

    bpg = BlueprintGroup()
    bpg.append(bp1)
    bpg.append(bp2)
    bpg.append(bp3)

    assert len(bpg) == 3
    assert bpg[0] == bp1
    assert bpg[1] == bp2
    assert bpg[2] == bp3

    del bpg[1]

    assert len(bpg) == 2
    assert bpg[0] == bp1
    assert bpg[1] == bp3
```

# Generated at 2024-06-03 06:43:13.131768
```python
    bp1 = sanic.Blueprint('bp1', url_prefix='/bp1')
    bp2 = sanic.Blueprint('bp2', url_prefix='/bp2')
    bpg = BlueprintGroup()
    bpg.append(bp1)
    bpg.append(bp2)
    
    blueprints = list(iter(bpg))
    
    assert blueprints == [bp1, bp2]
```

# Generated at 2024-06-03 06:43:14.619225
```python
    group = BlueprintGroup(url_prefix="/api", version="v1", strict_slashes=True)
    assert group.url_prefix == "/api"
    assert group.version == "v1"
    assert group.strict_slashes is True
    assert len(group) == 0
```

# Generated at 2024-06-03 06:43:16.359724
```python
    bp1 = sanic.Blueprint('bp1', url_prefix='/bp1')
    bp2 = sanic.Blueprint('bp2', url_prefix='/bp2')
    bpg = BlueprintGroup()
    bpg.append(bp1)
    bpg.append(bp2)
    
    blueprints = list(iter(bpg))
    
    assert blueprints == [bp1, bp2]
```

# Generated at 2024-06-03 06:43:19.644260
```python
    bp1 = sanic.Blueprint('bp1', url_prefix='/bp1')
    bp2 = sanic.Blueprint('bp2', url_prefix='/bp2')
    bp3 = sanic.Blueprint('bp3', url_prefix='/bp3')

    bpg = BlueprintGroup()
    bpg.append(bp1)
    bpg.append(bp2)
    bpg.append(bp3)

    assert len(bpg) == 3
```

# Generated at 2024-06-03 06:43:21.363482
```python
    bp1 = sanic.Blueprint('bp1', url_prefix='/bp1')
    bp2 = sanic.Blueprint('bp2', url_prefix='/bp2')
    bpg = BlueprintGroup()
    bpg.append(bp1)
    bpg.append(bp2)
    
    assert bpg[0] == bp1
    assert bpg[1] == bp2
```

# Generated at 2024-06-03 06:43:23.904796
```python
    app = sanic.Sanic("test_app")
    bp1 = sanic.Blueprint("bp1", url_prefix="/bp1")
    bp2 = sanic.Blueprint("bp2", url_prefix="/bp2")
    bpg = BlueprintGroup(url_prefix="/api", version="v1")

    bpg.append(bp1)
    bpg.append(bp2)

    assert len(bpg) == 2
    assert bpg[0].url_prefix == "/api/bp1"
    assert bpg[1].url_prefix == "/api/bp2"
    assert bpg[0].version == "v1"
    assert bpg[1].version == "v1"
```

# Generated at 2024-06-03 06:43:25.681199
```python
    bp1 = sanic.Blueprint('bp1', url_prefix='/bp1')
    bp2 = sanic.Blueprint('bp2', url_prefix='/bp2')
    bpg = BlueprintGroup()
    bpg.append(bp1)
    bpg.append(bp2)
    
    blueprints = list(iter(bpg))
    
    assert blueprints == [bp1, bp2]
```

# Generated at 2024-06-03 06:43:29.087510
```python
    app = sanic.Sanic("test_app")
    bp1 = sanic.Blueprint("bp1")
    bp2 = sanic.Blueprint("bp2")
    bpg = BlueprintGroup()
    bpg.append(bp1)
    bpg.append(bp2)

    @bpg.middleware("request")
    async def test_middleware(request):
        request["middleware_applied"] = True

    @bp1.route("/")
    async def bp1_route(request):
        return sanic.response.text("bp1")

    @bp2.route("/")
    async def bp2_route(request):
        return sanic.response.text("bp2")

    app.blueprint(bpg)

    _, response = app.test_client.get("/bp1")
    assert response.status == 200
    assert response.text == "bp1"
    assert response.request["middleware_applied"] is True

    _, response = app.test_client.get("/bp2")
    assert response.status == 200

# Generated at 2024-06-03 06:45:33.757030
```python
    bp1 = sanic.Blueprint('bp1', url_prefix='/bp1')
    bp2 = sanic.Blueprint('bp2', url_prefix='/bp2')
    bpg = BlueprintGroup()
    bpg.append(bp1)
    bpg.append(bp2)
    
    blueprints = list(iter(bpg))
    
    assert blueprints == [bp1, bp2]
```

# Generated at 2024-06-03 06:45:35.677413
```python
    bp1 = sanic.Blueprint('bp1', url_prefix='/bp1')
    bp2 = sanic.Blueprint('bp2', url_prefix='/bp2')
    bpg = BlueprintGroup()
    bpg.append(bp1)
    bpg.append(bp2)
    
    blueprints = list(iter(bpg))
    
    assert blueprints == [bp1, bp2]
```

# Generated at 2024-06-03 06:45:38.598929
```python
    app = sanic.Sanic("test_app")
    bp1 = sanic.Blueprint("bp1", url_prefix="/bp1")
    bp2 = sanic.Blueprint("bp2", url_prefix="/bp2")
    bpg = BlueprintGroup(url_prefix="/api", version="v1")

    bpg.append(bp1)
    bpg.append(bp2)

    assert len(bpg) == 2
    assert bpg[0].url_prefix == "/api/bp1"
    assert bpg[1].url_prefix == "/api/bp2"
    assert bpg[0].version == "v1"
    assert bpg[1].version == "v1"
```

# Generated at 2024-06-03 06:45:41.702213
```python
    app = sanic.Sanic("test_app")
    bp1 = sanic.Blueprint("bp1", url_prefix="/bp1")
    bp2 = sanic.Blueprint("bp2", url_prefix="/bp2")
    bpg = BlueprintGroup(url_prefix="/api", version="v1")

    bpg.append(bp1)
    bpg.append(bp2)

    assert len(bpg) == 2
    assert bpg[0].url_prefix == "/api/bp1"
    assert bpg[1].url_prefix == "/api/bp2"
    assert bpg[0].version == "v1"
    assert bpg[1].version == "v1"
```

# Generated at 2024-06-03 06:45:44.561621
```python
    bp1 = sanic.Blueprint('bp1', url_prefix='/bp1')
    bp2 = sanic.Blueprint('bp2', url_prefix='/bp2')
    bp3 = sanic.Blueprint('bp3', url_prefix='/bp3')
    
    bpg = BlueprintGroup()
    bpg.append(bp1)
    bpg.append(bp2)
    bpg.append(bp3)
    
    assert len(bpg) == 3
    del bpg[1]
    assert len(bpg) == 2
    assert bpg[0] == bp1
    assert bpg[1] == bp3
```

# Generated at 2024-06-03 06:45:47.981736
```python
    bp1 = sanic.Blueprint('bp1', url_prefix='/bp1')
    bp2 = sanic.Blueprint('bp2', url_prefix='/bp2')
    bp3 = sanic.Blueprint('bp3', url_prefix='/bp3')

    bpg = BlueprintGroup(url_prefix="/api", version="v1")
    bpg.append(bp1)
    bpg.append(bp2)
    bpg.append(bp3)

    assert len(bpg) == 3
    del bpg[1]
    assert len(bpg) == 2
    assert bpg[0] == bp1
    assert bpg[1] == bp3
```

# Generated at 2024-06-03 06:45:50.022772
```python
    bp1 = sanic.Blueprint('bp1', url_prefix='/bp1')
    bp2 = sanic.Blueprint('bp2', url_prefix='/bp2')
    bpg = BlueprintGroup()
    bpg.append(bp1)
    bpg.append(bp2)
    
    assert bpg[0] == bp1
    assert bpg[1] == bp2
```

# Generated at 2024-06-03 06:45:56.132039
```python
    app = sanic.Sanic("test_app")
    bp1 = sanic.Blueprint("bp1")
    bp2 = sanic.Blueprint("bp2")
    bpg = BlueprintGroup()
    bpg.append(bp1)
    bpg.append(bp2)

    @bpg.middleware("request")
    async def test_middleware(request):
        request["middleware_applied"] = True

    @bp1.route("/")
    async def bp1_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    @bp2.route("/")
    async def bp2_route(request):
        return sanic.response.json({"middleware_applied": request.get("middleware_applied", False)})

    app.blueprint(bpg)

    request, response = app.test_client.get("/bp1/")
    assert response.json["middleware_applied"] is True

    request, response = app.test_client.get("/bp2/")


# Generated at 2024-06-03 06:45:59.235731
```python
    bp1 = sanic.Blueprint('bp1', url_prefix='/bp1')
    bp2 = sanic.Blueprint('bp2', url_prefix='/bp2')
    bp3 = sanic.Blueprint('bp3', url_prefix='/bp3')

    group = BlueprintGroup()
    group.append(bp1)
    group.append(bp2)

    assert group[0] == bp1
    assert group[1] == bp2

    group[1] = bp3

    assert group[0] == bp1
    assert group[1] == bp3
```

# Generated at 2024-06-03 06:46:01.035832
```python
    bp1 = sanic.Blueprint('bp1', url_prefix='/bp1')
    bp2 = sanic.Blueprint('bp2', url_prefix='/bp2')
    group = BlueprintGroup()
    group.append(bp1)
    group.append(bp2)
    
    assert group[0] == bp1
    assert group[1] == bp2
```