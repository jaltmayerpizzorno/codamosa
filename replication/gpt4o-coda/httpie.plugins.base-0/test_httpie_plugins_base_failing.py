# Automatically generated by Pynguin.
import httpie.plugins.base as module_0

def test_case_0():
    try:
        auth_plugin_0 = module_0.AuthPlugin()
        var_0 = auth_plugin_0.get_auth()
    except BaseException:
        pass

def test_case_1():
    try:
        transport_plugin_0 = module_0.TransportPlugin()
        var_0 = transport_plugin_0.get_adapter()
    except BaseException:
        pass

def test_case_2():
    try:
        auth_plugin_0 = module_0.AuthPlugin()
        bool_0 = True
        converter_plugin_0 = module_0.ConverterPlugin(bool_0)
        converter_plugin_1 = module_0.ConverterPlugin(converter_plugin_0)
        var_0 = converter_plugin_1.convert(auth_plugin_0)
    except BaseException:
        pass

def test_case_3():
    try:
        formatter_plugin_0 = module_0.FormatterPlugin()
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = None
        str_1 = '\n\n'
        str_2 = 'format_options'
        str_3 = "4H1|+CIFKPV{O$WM'0f"
        dict_0 = {str_1: str_1, str_2: str_2, str_3: str_1, str_1: str_3}
        formatter_plugin_0 = module_0.FormatterPlugin(**dict_0)
        str_4 = formatter_plugin_0.format_headers(str_0)
        formatter_plugin_1 = module_0.FormatterPlugin()
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = None
        str_1 = '\n\n'
        str_2 = 'format_options'
        str_3 = "4H1|+CIFKPV{O$WM'0f"
        dict_0 = {str_1: str_1, str_2: str_2, str_3: str_1, str_1: str_3}
        formatter_plugin_0 = module_0.FormatterPlugin(**dict_0)
        str_4 = 's*^eo~0('
        str_5 = 'none'
        str_6 = formatter_plugin_0.format_body(str_4, str_5)
        str_7 = formatter_plugin_0.format_headers(str_0)
        formatter_plugin_1 = module_0.FormatterPlugin()
    except BaseException:
        pass