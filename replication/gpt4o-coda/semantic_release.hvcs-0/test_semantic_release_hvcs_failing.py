# Automatically generated by Pynguin.
import semantic_release.hvcs as module_0

def test_case_0():
    try:
        base_0 = module_0.Base()
        str_0 = base_0.domain()
    except BaseException:
        pass

def test_case_1():
    try:
        bool_0 = module_0.check_token()
        base_0 = module_0.get_hvcs()
        str_0 = base_0.api_url()
        str_1 = '\nQ\t['
        dict_0 = {}
        github_0 = module_0.Github(**dict_0)
        bool_1 = github_0.check_build_status(str_1, str_0, str_1)
        base_1 = module_0.Base()
        str_2 = base_1.api_url()
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '{0U='
        str_1 = None
        str_2 = 'LJ9nx*[9yY8,(mJR'
        bool_0 = module_0.post_changelog(str_0, str_0, str_1, str_2)
        base_0 = module_0.Base()
        optional_0 = base_0.token()
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'l'
        int_0 = None
        github_0 = module_0.Github()
        session_0 = github_0.session(int_0)
        base_0 = module_0.get_hvcs()
        optional_0 = base_0.token()
        optional_1 = base_0.token()
        optional_2 = module_0.get_token()
        str_1 = 'A`.wN&*qx|ZYA/'
        base_1 = module_0.Base()
        bool_0 = base_1.check_build_status(str_0, str_0, str_1)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'qjR\x0c/V'
        float_0 = 621.2709
        token_auth_0 = module_0.TokenAuth(float_0)
        var_0 = token_auth_0.__call__(str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        github_0 = module_0.Github()
        optional_0 = github_0.auth()
        str_0 = ';_\\r"B)S2W'
        str_1 = '...v'
        bool_0 = github_0.check_build_status(str_0, str_0, str_1)
        gitlab_0 = module_0.Gitlab()
        str_2 = 'body'
        str_3 = 'Pushing new version'
        bool_1 = gitlab_0.check_build_status(str_0, str_2, str_3)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'U65"\niNgLG!#+R'
        list_0 = [str_0]
        list_1 = [list_0]
        optional_0 = module_0.get_token()
        github_0 = module_0.Github(*list_1)
    except BaseException:
        pass

def test_case_7():
    try:
        bool_0 = module_0.check_token()
        str_0 = 'aA0^Z|L$z1:p2(H,]'
        str_1 = 'L\x0cx_-n@_ ECR!5Isy'
        dict_0 = {str_0: str_0, str_1: bool_0, str_1: str_1, str_1: bool_0}
        base_0 = module_0.Base(**dict_0)
    except BaseException:
        pass

def test_case_8():
    try:
        gitlab_0 = module_0.Gitlab()
        str_0 = 'R<J|LAo7t1'
        str_1 = 'fYtXw088yo*ntE'
        str_2 = '--noop'
        str_3 = 'breaking_descriptions'
        bool_0 = module_0.post_changelog(str_1, str_2, str_3, str_0)
        str_4 = 'D<J)AkApMZ\ruL?\n9'
        str_5 = None
        str_6 = 'p,OCO<%z`R\x0b!wb\rMJD'
        str_7 = gitlab_0.domain()
        bool_1 = module_0.check_token()
        bool_2 = gitlab_0.check_build_status(str_4, str_5, str_6)
    except BaseException:
        pass