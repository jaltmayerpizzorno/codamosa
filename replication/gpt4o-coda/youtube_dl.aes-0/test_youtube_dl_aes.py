# Automatically generated by Pynguin.
import youtube_dl.aes as module_0

def test_case_0():
    pass

def test_case_1():
    str_0 = 'y|d\x0b\x0c7M#9'
    tuple_0 = ()
    var_0 = module_0.aes_encrypt(str_0, tuple_0)

def test_case_2():
    str_0 = 'Te>@\n3+2k}V7{z/'
    list_0 = []
    var_0 = module_0.aes_decrypt(str_0, list_0)

def test_case_3():
    bytes_0 = b'\xe1\x0c\xcb\xb0L!\xb5\xde6\xb9\xaeE\xe8\xd6\xc1\x81\x9d\x83\xab'
    var_0 = module_0.mix_columns(bytes_0)

def test_case_4():
    int_0 = -3379
    list_0 = [int_0, int_0, int_0]
    bytes_0 = b'g'
    var_0 = module_0.aes_encrypt(list_0, bytes_0)

def test_case_5():
    int_0 = 91
    tuple_0 = ()
    bool_0 = True
    list_0 = [int_0, int_0, bool_0, int_0, int_0]
    set_0 = None
    var_0 = module_0.aes_ctr_decrypt(tuple_0, list_0, set_0)

def test_case_6():
    str_0 = '2d~8W'
    list_0 = []
    var_0 = module_0.aes_decrypt(str_0, list_0)
    list_1 = []
    var_1 = module_0.inc(list_1)

def test_case_7():
    str_0 = 'lf5oSTXz0sF!l@f&;} S'
    bool_0 = False
    str_1 = '('
    set_0 = {str_1, str_0, bool_0}
    var_0 = module_0.rijndael_mul(set_0, bool_0)

def test_case_8():
    int_0 = 50
    list_0 = [int_0]
    var_0 = module_0.inc(list_0)