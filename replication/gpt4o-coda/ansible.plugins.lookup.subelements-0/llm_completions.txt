

# Generated at 2024-06-01 09:37:57.162498
```python
    lookup = LookupModule()

    # Test case 1: Basic functionality
    terms = [
        [{'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}],
        'authorized'
    ]
    result = lookup.run(terms, {})
    assert result == [
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/onekey.pub'),
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/twokey.pub')
    ]

    # Test case 2: Nested keys
    terms = [
        [{'name': 'alice', 'mysql': {'hosts': ['%', '127.0.0.1']}}],
        'mysql.hosts

# Generated at 2024-06-01 09:38:01.240741
```python
    lookup = LookupModule()

    # Test case 1: Basic functionality
    terms = [
        [{'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}],
        'authorized'
    ]
    result = lookup.run(terms, {})
    assert result == [
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/onekey.pub'),
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/twokey.pub')
    ]

    # Test case 2: Nested keys
    terms = [
        [{'name': 'alice', 'mysql': {'hosts': ['%', '127.0.0.1']}}],
        'mysql.hosts

# Generated at 2024-06-01 09:38:04.166630
```python
    lookup = LookupModule()

    # Test case 1: Basic functionality
    terms = [
        [{'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}],
        'authorized'
    ]
    result = lookup.run(terms, {})
    assert result == [
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/onekey.pub'),
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/twokey.pub')
    ]

    # Test case 2: Nested keys
    terms = [
        [{'name': 'alice', 'mysql': {'hosts': ['%', '127.0.0.1']}}],
        'mysql.hosts

# Generated at 2024-06-01 09:38:06.956696
```python
    lookup = LookupModule()

    # Test case 1: Basic functionality
    terms = [
        [{'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}],
        'authorized'
    ]
    variables = {}
    result = lookup.run(terms, variables)
    assert result == [
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/onekey.pub'),
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/twokey.pub')
    ]

    # Test case 2: Nested keys
    terms = [
        [{'name': 'alice', 'mysql': {'hosts': ['%', '127.0.0.1']}}],


# Generated at 2024-06-01 09:38:10.402223
```python
    lookup = LookupModule()

    # Test case 1: Basic functionality
    terms = [
        [{'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}],
        'authorized'
    ]
    result = lookup.run(terms, {})
    assert result == [
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/onekey.pub'),
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/twokey.pub')
    ]

    # Test case 2: Nested keys
    terms = [
        [{'name': 'alice', 'mysql': {'hosts': ['%', '127.0.0.1']}}],
        'mysql.hosts

# Generated at 2024-06-01 09:38:13.513950
```python
    lookup = LookupModule()

    # Test case 1: Basic functionality
    terms = [
        [{'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}],
        'authorized'
    ]
    result = lookup.run(terms, {})
    assert result == [
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/onekey.pub'),
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/twokey.pub')
    ]

    # Test case 2: Nested keys
    terms = [
        [{'name': 'alice', 'mysql': {'hosts': ['%', '127.0.0.1']}}],
        'mysql.hosts

# Generated at 2024-06-01 09:38:17.062087
```python
    lookup = LookupModule()

    # Test case 1: Basic functionality
    terms = [
        [{'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}],
        'authorized'
    ]
    result = lookup.run(terms, {})
    assert result == [
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/onekey.pub'),
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/twokey.pub')
    ]

    # Test case 2: Nested keys
    terms = [
        [{'name': 'alice', 'mysql': {'hosts': ['%', '127.0.0.1']}}],
        'mysql.hosts

# Generated at 2024-06-01 09:38:20.405230
```python
    lookup = LookupModule()

    # Test case 1: Basic functionality
    terms = [
        [{'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}],
        'authorized'
    ]
    result = lookup.run(terms, {})
    assert result == [
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/onekey.pub'),
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/twokey.pub')
    ]

    # Test case 2: Nested subkey
    terms = [
        [{'name': 'alice', 'mysql': {'hosts': ['%', '127.0.0.1']}}],
        'mysql.host

# Generated at 2024-06-01 09:38:23.576120
```python
    lookup = LookupModule()

    # Test case 1: Basic functionality
    terms = [
        [{'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}],
        'authorized'
    ]
    result = lookup.run(terms, {})
    assert result == [
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/onekey.pub'),
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/twokey.pub')
    ]

    # Test case 2: Nested keys
    terms = [
        [{'name': 'alice', 'mysql': {'hosts': ['%', '127.0.0.1']}}],
        'mysql.hosts

# Generated at 2024-06-01 09:38:27.296407
```python
    lookup = LookupModule()

    # Test case 1: Basic functionality
    terms = [
        [{'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}],
        'authorized'
    ]
    result = lookup.run(terms, {})
    assert result == [
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/onekey.pub'),
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/twokey.pub')
    ]

    # Test case 2: Nested keys
    terms = [
        [{'name': 'alice', 'mysql': {'hosts': ['%', '127.0.0.1']}}],
        'mysql.hosts

# Generated at 2024-06-01 09:38:47.580676
```python
    lookup = LookupModule()

    # Test case 1: Basic functionality
    terms = [
        [{'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}],
        'authorized'
    ]
    result = lookup.run(terms, {})
    assert result == [
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/onekey.pub'),
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/twokey.pub')
    ]

    # Test case 2: Nested keys
    terms = [
        [{'name': 'alice', 'mysql': {'hosts': ['%', '127.0.0.1']}}],
        'mysql.hosts

# Generated at 2024-06-01 09:38:50.193051
```python
    lookup = LookupModule()

    # Test case 1: Basic functionality
    terms = [
        [{'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}],
        'authorized'
    ]
    result = lookup.run(terms, {})
    assert result == [
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/onekey.pub'),
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/twokey.pub')
    ]

    # Test case 2: Nested keys
    terms = [
        [{'name': 'alice', 'mysql': {'hosts': ['%', '127.0.0.1']}}],
        'mysql.hosts

# Generated at 2024-06-01 09:38:53.197072
```python
    lookup = LookupModule()

    # Test case 1: Basic functionality
    terms = [
        [{'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}],
        'authorized'
    ]
    result = lookup.run(terms, {})
    assert result == [
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/onekey.pub'),
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/twokey.pub')
    ]

    # Test case 2: Nested keys
    terms = [
        [{'name': 'alice', 'mysql': {'hosts': ['%', '127.0.0.1']}}],
        'mysql.hosts

# Generated at 2024-06-01 09:38:55.960460
```python
    lookup = LookupModule()

    # Test case 1: Basic functionality
    terms = [
        [{'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}],
        'authorized'
    ]
    result = lookup.run(terms, {})
    assert result == [
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/onekey.pub'),
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/twokey.pub')
    ]

    # Test case 2: Nested keys
    terms = [
        [{'name': 'alice', 'mysql': {'hosts': ['%', '127.0.0.1']}}],
        'mysql.hosts

# Generated at 2024-06-01 09:38:59.277276
```python
    lookup = LookupModule()

    # Test case 1: Basic functionality
    terms = [
        [{'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}],
        'authorized'
    ]
    result = lookup.run(terms, {})
    assert result == [
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/onekey.pub'),
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/twokey.pub')
    ]

    # Test case 2: Nested keys
    terms = [
        [{'name': 'alice', 'mysql': {'hosts': ['%', '127.0.0.1']}}],
        'mysql.hosts

# Generated at 2024-06-01 09:39:02.297067
```python
    lookup = LookupModule()

    # Test case 1: Basic functionality
    terms = [
        [{'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}],
        'authorized'
    ]
    result = lookup.run(terms, {})
    assert result == [
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/onekey.pub'),
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/twokey.pub')
    ]

    # Test case 2: Nested keys
    terms = [
        [{'name': 'alice', 'mysql': {'hosts': ['%', '127.0.0.1']}}],
        'mysql.hosts

# Generated at 2024-06-01 09:39:05.898793
```python
    lookup = LookupModule()

    # Test case 1: Basic functionality
    terms = [
        [{'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}],
        'authorized'
    ]
    result = lookup.run(terms, {})
    assert result == [
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/onekey.pub'),
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/twokey.pub')
    ]

    # Test case 2: Nested keys
    terms = [
        [{'name': 'alice', 'mysql': {'hosts': ['%', '127.0.0.1']}}],
        'mysql.hosts

# Generated at 2024-06-01 09:39:15.783812
```python
    lookup = LookupModule()

    # Test case 1: Basic functionality
    terms = [
        [{'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}],
        'authorized'
    ]
    result = lookup.run(terms, {})
    assert result == [
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/onekey.pub'),
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/twokey.pub')
    ]

    # Test case 2: Nested keys
    terms = [
        [{'name': 'alice', 'mysql': {'hosts': ['%', '127.0.0.1']}}],
        'mysql.hosts

# Generated at 2024-06-01 09:39:23.801199
```python
    lookup = LookupModule()

    # Test case 1: Basic functionality
    terms = [
        [{'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}],
        'authorized'
    ]
    result = lookup.run(terms, {})
    assert result == [
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/onekey.pub'),
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/twokey.pub')
    ]

    # Test case 2: Nested keys
    terms = [
        [{'name': 'alice', 'mysql': {'hosts': ['%', '127.0.0.1']}}],
        'mysql.hosts

# Generated at 2024-06-01 09:39:27.053787
```python
    lookup = LookupModule()

    # Test case 1: Basic functionality
    terms = [
        [{'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}],
        'authorized'
    ]
    result = lookup.run(terms, {})
    assert result == [
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/onekey.pub'),
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/twokey.pub')
    ]

    # Test case 2: Nested keys
    terms = [
        [{'name': 'alice', 'mysql': {'hosts': ['%', '127.0.0.1']}}],
        'mysql.hosts

# Generated at 2024-06-01 09:40:03.289419
```python
    lookup = LookupModule()

    # Test case 1: Basic functionality
    terms = [
        [{'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}],
        'authorized'
    ]
    result = lookup.run(terms, {})
    assert result == [
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/onekey.pub'),
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/twokey.pub')
    ]

    # Test case 2: Nested keys
    terms = [
        [{'name': 'alice', 'mysql': {'hosts': ['%', '127.0.0.1']}}],
        'mysql.hosts

# Generated at 2024-06-01 09:40:06.916456
```python
    lookup = LookupModule()

    # Test case 1: Basic functionality
    terms = [
        [{'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}],
        'authorized'
    ]
    result = lookup.run(terms, {})
    assert result == [
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/onekey.pub'),
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/twokey.pub')
    ]

    # Test case 2: Nested keys
    terms = [
        [{'name': 'alice', 'mysql': {'hosts': ['%', '127.0.0.1']}}],
        'mysql.hosts

# Generated at 2024-06-01 09:40:10.552092
```python
    lookup = LookupModule()

    # Test case 1: Basic functionality
    terms = [
        [{'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}],
        'authorized'
    ]
    result = lookup.run(terms, {})
    assert result == [
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/onekey.pub'),
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/twokey.pub')
    ]

    # Test case 2: Nested keys
    terms = [
        [{'name': 'alice', 'mysql': {'hosts': ['%', '127.0.0.1']}}],
        'mysql.hosts

# Generated at 2024-06-01 09:40:13.868928
```python
    lookup = LookupModule()

    # Test case 1: Basic functionality
    terms = [
        [{'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}],
        'authorized'
    ]
    result = lookup.run(terms, {})
    assert result == [
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/onekey.pub'),
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/twokey.pub')
    ]

    # Test case 2: Nested keys
    terms = [
        [{'name': 'alice', 'mysql': {'hosts': ['%', '127.0.0.1']}}],
        'mysql.hosts

# Generated at 2024-06-01 09:40:17.723299
```python
    lookup = LookupModule()

    # Test case 1: Basic functionality
    terms = [
        [{'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}],
        'authorized'
    ]
    result = lookup.run(terms, {})
    assert result == [
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/onekey.pub'),
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/twokey.pub')
    ]

    # Test case 2: Nested keys
    terms = [
        [{'name': 'alice', 'mysql': {'hosts': ['%', '127.0.0.1']}}],
        'mysql.hosts

# Generated at 2024-06-01 09:40:21.803109
```python
    lookup = LookupModule()

    # Test case 1: Basic functionality
    terms = [
        [{'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}],
        'authorized'
    ]
    result = lookup.run(terms, {})
    assert result == [
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/onekey.pub'),
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/twokey.pub')
    ]

    # Test case 2: Nested keys
    terms = [
        [{'name': 'alice', 'mysql': {'hosts': ['%', '127.0.0.1']}}],
        'mysql.hosts

# Generated at 2024-06-01 09:40:25.551688
```python
    lookup = LookupModule()

    # Test case 1: Basic functionality
    terms = [
        [{'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}],
        'authorized'
    ]
    result = lookup.run(terms, {})
    assert result == [
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/onekey.pub'),
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/twokey.pub')
    ]

    # Test case 2: Nested keys
    terms = [
        [{'name': 'alice', 'mysql': {'hosts': ['%', '127.0.0.1']}}],
        'mysql.hosts

# Generated at 2024-06-01 09:40:29.678390
```python
    lookup = LookupModule()

    # Test case 1: Basic functionality
    terms = [
        [{'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}],
        'authorized'
    ]
    result = lookup.run(terms, {})
    assert result == [
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/onekey.pub'),
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/twokey.pub')
    ]

    # Test case 2: Nested keys
    terms = [
        [{'name': 'alice', 'mysql': {'hosts': ['%', '127.0.0.1']}}],
        'mysql.hosts

# Generated at 2024-06-01 09:40:34.608480
```python
    lookup = LookupModule()

    # Test case 1: Basic functionality
    terms = [
        [{'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}],
        'authorized'
    ]
    result = lookup.run(terms, {})
    assert result == [
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/onekey.pub'),
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/twokey.pub')
    ]

    # Test case 2: Nested keys
    terms = [
        [{'name': 'alice', 'mysql': {'hosts': ['%', '127.0.0.1']}}],
        'mysql.hosts

# Generated at 2024-06-01 09:40:37.940621
```python
    lookup = LookupModule()

    # Test case 1: Basic functionality
    terms = [
        [{'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}],
        'authorized'
    ]
    result = lookup.run(terms, {})
    assert result == [
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/onekey.pub'),
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/twokey.pub')
    ]

    # Test case 2: Nested keys
    terms = [
        [{'name': 'alice', 'mysql': {'hosts': ['%', '127.0.0.1']}}],
        'mysql.hosts

# Generated at 2024-06-01 09:41:50.318704
```python
    lookup = LookupModule()

    # Test case 1: Basic functionality
    terms = [
        [{'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}],
        'authorized'
    ]
    result = lookup.run(terms, {})
    assert result == [
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/onekey.pub'),
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/twokey.pub')
    ]

    # Test case 2: Nested keys
    terms = [
        [{'name': 'alice', 'mysql': {'hosts': ['%', '127.0.0.1']}}],
        'mysql.hosts

# Generated at 2024-06-01 09:41:53.307135
```python
    lookup = LookupModule()

    # Test case 1: Basic functionality
    terms = [
        [{'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}],
        'authorized'
    ]
    result = lookup.run(terms, {})
    assert result == [
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/onekey.pub'),
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/twokey.pub')
    ]

    # Test case 2: Nested keys
    terms = [
        [{'name': 'alice', 'mysql': {'hosts': ['%', '127.0.0.1']}}],
        'mysql.hosts

# Generated at 2024-06-01 09:41:56.550863
```python
    lookup = LookupModule()

    # Test case 1: Basic functionality
    terms = [
        [{'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}],
        'authorized'
    ]
    result = lookup.run(terms, {})
    assert result == [
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/onekey.pub'),
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/twokey.pub')
    ]

    # Test case 2: Nested keys
    terms = [
        [{'name': 'alice', 'mysql': {'hosts': ['%', '127.0.0.1']}}],
        'mysql.hosts

# Generated at 2024-06-01 09:41:59.446888
```python
    lookup = LookupModule()

    # Test case 1: Basic functionality
    terms = [
        [{'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}],
        'authorized'
    ]
    result = lookup.run(terms, {})
    assert result == [
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/onekey.pub'),
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/twokey.pub')
    ]

    # Test case 2: Nested keys
    terms = [
        [{'name': 'alice', 'mysql': {'hosts': ['%', '127.0.0.1']}}],
        'mysql.hosts

# Generated at 2024-06-01 09:42:02.210906
```python
    lookup = LookupModule()

    # Test case 1: Basic functionality
    terms = [
        [{'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}],
        'authorized'
    ]
    result = lookup.run(terms, {})
    assert result == [
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/onekey.pub'),
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/twokey.pub')
    ]

    # Test case 2: Nested keys
    terms = [
        [{'name': 'alice', 'mysql': {'hosts': ['%', '127.0.0.1']}}],
        'mysql.hosts

# Generated at 2024-06-01 09:42:05.063829
```python
    lookup = LookupModule()

    # Test case 1: Basic functionality
    terms = [
        [{'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}],
        'authorized'
    ]
    result = lookup.run(terms, {})
    assert result == [
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/onekey.pub'),
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/twokey.pub')
    ]

    # Test case 2: Nested keys
    terms = [
        [{'name': 'alice', 'mysql': {'hosts': ['%', '127.0.0.1']}}],
        'mysql.hosts

# Generated at 2024-06-01 09:42:08.523993
```python
    lookup = LookupModule()

    # Test case 1: Basic functionality
    terms = [
        [
            {'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']},
            {'name': 'bob', 'authorized': ['/tmp/bob/id_rsa.pub']}
        ],
        'authorized'
    ]
    result = lookup.run(terms, {})
    assert result == [
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/onekey.pub'),
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/twokey.pub'),
        ({'name': 'bob', 'authorized': ['/tmp/bob/id_rsa.pub']}, '/tmp

# Generated at 2024-06-01 09:42:11.507814
```python
    lookup = LookupModule()

    # Test case 1: Basic functionality
    terms = [
        [{'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}],
        'authorized'
    ]
    result = lookup.run(terms, {})
    assert result == [
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/onekey.pub'),
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/twokey.pub')
    ]

    # Test case 2: Nested subkey
    terms = [
        [{'name': 'alice', 'mysql': {'hosts': ['%', '127.0.0.1']}}],
        'mysql.host

# Generated at 2024-06-01 09:42:14.705193
```python
    lookup = LookupModule()

    # Test case 1: Basic functionality
    terms = [
        [{'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}],
        'authorized'
    ]
    result = lookup.run(terms, {})
    assert result == [({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/onekey.pub'),
                      ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/twokey.pub')]

    # Test case 2: Nested keys
    terms = [
        [{'name': 'alice', 'mysql': {'hosts': ['%', '127.0.0.1']}}],
        'mysql.hosts'
    ]


# Generated at 2024-06-01 09:42:18.172128
```python
    lookup = LookupModule()

    # Test case 1: Basic functionality
    terms = [
        [{'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}],
        'authorized'
    ]
    result = lookup.run(terms, {})
    assert result == [
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/onekey.pub'),
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/twokey.pub')
    ]

    # Test case 2: Nested subkey
    terms = [
        [{'name': 'alice', 'mysql': {'hosts': ['%', '127.0.0.1']}}],
        'mysql.host

# Generated at 2024-06-01 09:44:26.643292
```python
    lookup = LookupModule()

    # Test case 1: Basic functionality
    terms = [
        [
            {'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']},
            {'name': 'bob', 'authorized': ['/tmp/bob/id_rsa.pub']}
        ],
        'authorized'
    ]
    result = lookup.run(terms, {})
    assert result == [
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/onekey.pub'),
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/twokey.pub'),
        ({'name': 'bob', 'authorized': ['/tmp/bob/id_rsa.pub']}, '/tmp

# Generated at 2024-06-01 09:44:29.597103
```python
    lookup = LookupModule()

    # Test case 1: Basic functionality
    terms = [
        [{'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}],
        'authorized'
    ]
    result = lookup.run(terms, {})
    assert result == [
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/onekey.pub'),
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/twokey.pub')
    ]

    # Test case 2: Nested keys
    terms = [
        [{'name': 'alice', 'mysql': {'hosts': ['%', '127.0.0.1']}}],
        'mysql.hosts

# Generated at 2024-06-01 09:44:33.416140
```python
    lookup = LookupModule()

    # Test case 1: Basic functionality
    terms = [
        [{'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}],
        'authorized'
    ]
    result = lookup.run(terms, {})
    assert result == [
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/onekey.pub'),
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/twokey.pub')
    ]

    # Test case 2: Nested keys
    terms = [
        [{'name': 'alice', 'mysql': {'hosts': ['%', '127.0.0.1']}}],
        'mysql.hosts

# Generated at 2024-06-01 09:44:37.147545
```python
    lookup = LookupModule()

    # Test case 1: Basic functionality
    terms = [
        [{'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}],
        'authorized'
    ]
    result = lookup.run(terms, {})
    assert result == [
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/onekey.pub'),
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/twokey.pub')
    ]

    # Test case 2: Nested keys
    terms = [
        [{'name': 'alice', 'mysql': {'hosts': ['%', '127.0.0.1']}}],
        'mysql.hosts

# Generated at 2024-06-01 09:44:40.567092
```python
    lookup = LookupModule()

    # Test case 1: Basic functionality
    terms = [
        [{'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}],
        'authorized'
    ]
    result = lookup.run(terms, {})
    assert result == [
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/onekey.pub'),
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/twokey.pub')
    ]

    # Test case 2: Nested keys
    terms = [
        [{'name': 'alice', 'mysql': {'hosts': ['%', '127.0.0.1']}}],
        'mysql.hosts

# Generated at 2024-06-01 09:44:43.405676
```python
    lookup = LookupModule()

    # Test case 1: Basic functionality
    terms = [
        [{'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}],
        'authorized'
    ]
    result = lookup.run(terms, {})
    assert result == [
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/onekey.pub'),
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/twokey.pub')
    ]

    # Test case 2: Nested keys
    terms = [
        [{'name': 'alice', 'mysql': {'hosts': ['%', '127.0.0.1']}}],
        'mysql.hosts

# Generated at 2024-06-01 09:44:47.481272
```python
    lookup = LookupModule()

    # Test case 1: Basic functionality
    terms = [
        [{'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}],
        'authorized'
    ]
    result = lookup.run(terms, {})
    assert result == [
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/onekey.pub'),
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/twokey.pub')
    ]

    # Test case 2: Nested keys
    terms = [
        [{'name': 'alice', 'mysql': {'hosts': ['%', '127.0.0.1']}}],
        'mysql.hosts

# Generated at 2024-06-01 09:44:51.305517
```python
    lookup = LookupModule()

    # Test case 1: Basic functionality
    terms = [
        [{'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}],
        'authorized'
    ]
    result = lookup.run(terms, {})
    assert result == [
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/onekey.pub'),
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/twokey.pub')
    ]

    # Test case 2: Nested keys
    terms = [
        [{'name': 'alice', 'mysql': {'hosts': ['%', '127.0.0.1']}}],
        'mysql.hosts

# Generated at 2024-06-01 09:44:56.299409
```python
    lookup = LookupModule()

    # Test case 1: Basic functionality
    terms = [
        [{'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}],
        'authorized'
    ]
    result = lookup.run(terms, {})
    assert result == [
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/onekey.pub'),
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/twokey.pub')
    ]

    # Test case 2: Nested keys
    terms = [
        [{'name': 'alice', 'mysql': {'hosts': ['%', '127.0.0.1']}}],
        'mysql.hosts

# Generated at 2024-06-01 09:45:00.947512
```python
    lookup = LookupModule()

    # Test case 1: Basic functionality
    terms = [
        [{'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}],
        'authorized'
    ]
    result = lookup.run(terms, {})
    assert result == [
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/onekey.pub'),
        ({'name': 'alice', 'authorized': ['/tmp/alice/onekey.pub', '/tmp/alice/twokey.pub']}, '/tmp/alice/twokey.pub')
    ]

    # Test case 2: Nested keys
    terms = [
        [{'name': 'alice', 'mysql': {'hosts': ['%', '127.0.0.1']}}],
        'mysql.hosts