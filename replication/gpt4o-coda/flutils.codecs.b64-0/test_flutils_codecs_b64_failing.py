# Automatically generated by Pynguin.
import flutils.codecs.b64 as module_0
import collections as module_1

def test_case_0():
    try:
        str_0 = ']}Xw$4\x0c8>QMB-~['
        tuple_0 = module_0.encode(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        byte_string_0 = None
        tuple_0 = module_0.decode(byte_string_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b'\x13|\xa1U\x95\xc2\x957\x1c'
        tuple_0 = module_0.decode(bytes_0)
        module_0.register()
        user_string_0 = None
        tuple_1 = module_0.encode(user_string_0)
    except BaseException:
        pass

def test_case_3():
    try:
        module_0.register()
        module_0.register()
        module_0.register()
        module_0.register()
        byte_string_0 = None
        str_0 = '2xUr'
        tuple_0 = module_0.encode(str_0, str_0)
        tuple_1 = module_0.decode(byte_string_0)
    except BaseException:
        pass

def test_case_4():
    try:
        dict_0 = {}
        module_0.register()
        list_0 = [dict_0, dict_0, dict_0, dict_0]
        user_string_0 = module_1.UserString(list_0)
        tuple_0 = module_0.encode(user_string_0)
        tuple_1 = module_0.encode(user_string_0)
        tuple_2 = module_0.encode(user_string_0)
        user_string_1 = module_1.UserString(dict_0)
        user_string_2 = module_1.UserString(user_string_1)
        tuple_3 = module_0.encode(user_string_2, user_string_2)
        str_0 = '/~/ov|(XT'
        tuple_4 = module_0.encode(user_string_0, str_0)
        var_0 = user_string_1.encode(str_0)
    except BaseException:
        pass