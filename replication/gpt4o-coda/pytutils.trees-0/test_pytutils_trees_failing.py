# Automatically generated by Pynguin.
import pytutils.trees as module_0

def test_case_0():
    try:
        str_0 = '%H:%M:%S'
        tree_0 = module_0.Tree()
        var_0 = tree_0.__getitem__(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        tree_0 = module_0.Tree()
        var_0 = tree_0.__getitem__(tree_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'mPf~wv7:kP$If7\x0bU$'
        list_0 = [str_0, str_0]
        float_0 = -4448.9
        bytes_0 = b'\x00{\xbaj\xcd1k\x83\xcd\t\xd1'
        var_0 = module_0.set_tree_node(list_0, float_0, bytes_0)
    except BaseException:
        pass

def test_case_3():
    try:
        tree_0 = module_0.Tree()
        registry_tree_0 = module_0.RegistryTree()
        str_0 = 'KdEm<{:o|6}\\.VJ`'
        var_0 = tree_0.__setitem__(str_0, tree_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'DeD-\t,m'
        tree_0 = module_0.Tree(str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        tree_0 = module_0.Tree()
        set_0 = set()
        var_0 = module_0.tree()
        float_0 = None
        registry_tree_0 = module_0.RegistryTree()
        bytes_0 = b'\xd2\n\xb30\x16\x89'
        var_1 = tree_0.__setitem__(float_0, set_0, bytes_0)
    except BaseException:
        pass

def test_case_6():
    try:
        int_0 = None
        registry_tree_0 = module_0.RegistryTree(int_0)
        bool_0 = True
        tuple_0 = (bool_0, bool_0)
        str_0 = None
        bool_1 = True
        registry_tree_1 = module_0.RegistryTree(tuple_0, str_0, bool_1)
    except BaseException:
        pass

def test_case_7():
    try:
        var_0 = module_0.tree()
        set_0 = set()
        str_0 = '}kDVXbLQ>j(%Md<p\x0b\nJ,'
        bytes_0 = b'-\xf5\x8c\x0e;\x0b\xa2\xee\xfa'
        tree_0 = module_0.Tree(set_0)
        str_1 = '*&u]=k0sZk&5B'
        var_1 = module_0.get_tree_node(set_0, str_0, bytes_0, str_1)
    except BaseException:
        pass