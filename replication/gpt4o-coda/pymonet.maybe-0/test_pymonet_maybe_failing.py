# Automatically generated by Pynguin.
import pymonet.maybe as module_0
import builtins as module_1

def test_case_0():
    try:
        dict_0 = {}
        list_0 = [dict_0, dict_0]
        int_0 = -3306
        bool_0 = False
        maybe_0 = module_0.Maybe(int_0, bool_0)
        var_0 = maybe_0.map(list_0)
    except BaseException:
        pass

def test_case_1():
    try:
        object_0 = module_1.object()
        bool_0 = True
        bytes_0 = None
        list_0 = [object_0, bool_0, object_0, bool_0]
        maybe_0 = module_0.Maybe(list_0, bool_0)
        var_0 = maybe_0.get_or_else(bytes_0)
        maybe_1 = module_0.Maybe(bool_0, bool_0)
        maybe_2 = module_0.Maybe(maybe_1, bool_0)
        bool_1 = False
        bool_2 = False
        maybe_3 = module_0.Maybe(bool_1, bool_2)
        var_1 = maybe_3.ap(maybe_2)
        float_0 = -1307.946338
        list_1 = [object_0]
        var_2 = None
        var_3 = maybe_2.get_or_else(var_2)
        var_4 = maybe_3.to_validation()
        maybe_4 = module_0.Maybe(list_1, bool_1)
        var_5 = None
        var_6 = maybe_2.filter(var_5)
        var_7 = maybe_4.filter(float_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b'\xc3\t\xe4m?\xd5\x1aqG\xaf<\x87\xe1e\x1c\xdazJ-\x00'
        list_0 = [bytes_0]
        list_1 = []
        bool_0 = True
        str_0 = ''
        maybe_0 = module_0.Maybe(str_0, bool_0)
        str_1 = 'APT;Q{q}4wId`db7C'
        maybe_1 = module_0.Maybe(str_1, bool_0)
        var_0 = maybe_0.to_box()
        var_1 = maybe_0.to_lazy()
        maybe_2 = module_0.Maybe(list_1, bool_0)
        var_2 = maybe_2.to_box()
        bool_1 = False
        maybe_3 = module_0.Maybe(list_0, bool_1)
        var_3 = maybe_3.to_try()
        callable_0 = None
        var_4 = maybe_3.bind(callable_0)
    except BaseException:
        pass

def test_case_3():
    try:
        tuple_0 = ()
        bool_0 = False
        maybe_0 = module_0.Maybe(tuple_0, bool_0)
        dict_0 = {}
        tuple_1 = (dict_0,)
        bool_1 = False
        maybe_1 = module_0.Maybe(tuple_1, bool_1)
        var_0 = maybe_1.ap(maybe_0)
    except BaseException:
        pass

def test_case_4():
    try:
        var_0 = None
        var_1 = None
        list_0 = []
        bool_0 = True
        maybe_0 = module_0.Maybe(list_0, bool_0)
        var_2 = maybe_0.get_or_else(var_1)
        list_1 = [var_2, var_2, maybe_0]
        bool_1 = True
        maybe_1 = module_0.Maybe(list_1, bool_1)
        var_3 = maybe_1.ap(var_0)
        str_0 = 'c$'
        set_0 = {str_0, bool_1}
        str_1 = 'u:cs@K~S+\tlotQDb'
        dict_0 = {str_0: maybe_0, str_0: set_0, str_1: set_0}
        object_0 = module_1.object(*list_1, **dict_0)
    except BaseException:
        pass

def test_case_5():
    try:
        int_0 = True
        bool_0 = False
        maybe_0 = module_0.Maybe(int_0, bool_0)
        var_0 = maybe_0.to_box()
        var_1 = maybe_0.to_either()
        list_0 = [bool_0]
        str_0 = '#A;2%'
        dict_0 = {str_0: bool_0, str_0: var_0}
        object_0 = module_1.object(*list_0, **dict_0)
    except BaseException:
        pass

def test_case_6():
    try:
        int_0 = 54
        bool_0 = True
        str_0 = None
        dict_0 = {str_0: str_0, str_0: int_0}
        maybe_0 = module_0.Maybe(dict_0, bool_0)
        callable_0 = None
        var_0 = maybe_0.filter(callable_0)
        var_1 = None
        bool_1 = False
        maybe_1 = module_0.Maybe(var_1, bool_1)
        var_2 = maybe_1.filter(callable_0)
    except BaseException:
        pass