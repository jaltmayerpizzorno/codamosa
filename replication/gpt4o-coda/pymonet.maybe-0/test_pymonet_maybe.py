# Automatically generated by Pynguin.
import pymonet.maybe as module_0
import builtins as module_1

def test_case_0():
    pass

def test_case_1():
    list_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.bind(list_0)

def test_case_2():
    object_0 = module_1.object()
    bool_0 = False
    maybe_0 = module_0.Maybe(object_0, bool_0)
    var_0 = maybe_0.to_either()

def test_case_3():
    object_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(object_0)

def test_case_4():
    bytes_0 = b"\xe0\xa4\x13'\x0f\xb6J)\xef\t"
    callable_0 = None
    int_0 = 410
    list_0 = [int_0, int_0]
    bool_0 = True
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.filter(callable_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(bytes_0, bool_1)
    var_1 = maybe_1.to_either()

def test_case_5():
    list_0 = None
    set_0 = {list_0, list_0, list_0}
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.get_or_else(set_0)

def test_case_6():
    str_0 = 'k\\@)\nz 9&lXj%'
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    float_0 = 197.93161
    var_0 = maybe_0.get_or_else(float_0)

def test_case_7():
    callable_0 = None
    int_0 = 410
    list_0 = [int_0, int_0]
    bool_0 = True
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.filter(callable_0)
    var_1 = maybe_0.to_box()
    var_2 = maybe_0.to_box()
    var_3 = maybe_0.to_box()
    var_4 = maybe_0.filter(callable_0)

def test_case_8():
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_validation()
    var_2 = maybe_0.to_box()
    var_3 = maybe_0.to_either()
    object_0 = module_1.object()
    bool_1 = maybe_0.__eq__(object_0)
    var_4 = maybe_0.to_lazy()

def test_case_9():
    int_0 = 2572
    set_0 = {int_0, int_0, int_0}
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_0 = maybe_1.to_lazy()

def test_case_10():
    bool_0 = True
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    var_0 = maybe_0.to_try()
    var_1 = maybe_0.to_validation()
    var_2 = maybe_0.to_box()
    var_3 = maybe_0.to_either()
    object_0 = module_1.object()
    bool_1 = maybe_0.__eq__(object_0)
    var_4 = maybe_0.to_lazy()