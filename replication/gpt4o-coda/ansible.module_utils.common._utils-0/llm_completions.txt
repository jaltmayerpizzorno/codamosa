

# Generated at 2024-05-30 23:27:23.122708
def test_get_all_subclasses():
    class A:
        pass

    class B(A):
        pass

    class C(A):
        pass

    class D(B):
        pass

    class E(C):
        pass

    expected_subclasses = {B, C, D, E}
    assert get_all_subclasses(A) == expected_subclasses

    expected_subclasses_B = {D}
    assert get_all_subclasses(B) == expected_subclasses_B

    expected_subclasses_C = {E}
    assert get_all_subclasses(C) == expected_subclasses_C

    assert get_all_subclasses(D) == set()
    assert get_all_subclasses(E) == set()

# Generated at 2024-05-30 23:27:26.151903
def test_get_all_subclasses():
    class A:
        pass

    class B(A):
        pass

    class C(A):
        pass

    class D(B):
        pass

    class E(C):
        pass

    expected_subclasses = {B, C, D, E}
    assert get_all_subclasses(A) == expected_subclasses

    expected_subclasses_b = {D}
    assert get_all_subclasses(B) == expected_subclasses_b

    expected_subclasses_c = {E}
    assert get_all_subclasses(C) == expected_subclasses_c

    expected_subclasses_d = set()
    assert get_all_subclasses(D) == expected_subclasses_d

    expected_subclasses_e = set()
    assert get_all_subclasses(E) == expected_subclasses_e

# Generated at 2024-05-30 23:27:28.524710

    class A:
        pass

    class B(A):
        pass

    class C(A):
        pass

    class D(B):
        pass

    class E(C):
        pass

    expected_subclasses = {B, C, D, E}
    assert get_all_subclasses(A) == expected_subclasses

    expected_subclasses_B = {D}
    assert get_all_subclasses(B) == expected_subclasses_B

    expected_subclasses_C = {E}
    assert get_all_subclasses(C) == expected_subclasses_C

    assert get_all_subclasses(D) == set()
    assert get_all_subclasses(E) == set()

# Generated at 2024-05-30 23:27:31.090227

    class A:
        pass

    class B(A):
        pass

    class C(B):
        pass

    class D(A):
        pass

    result = get_all_subclasses(A)
    expected = {B, C, D}
    assert result == expected, f"Expected {expected}, but got {result}"

    result = get_all_subclasses(B)
    expected = {C}
    assert result == expected, f"Expected {expected}, but got {result}"

    result = get_all_subclasses(C)
    expected = set()
    assert result == expected, f"Expected {expected}, but got {result}"

    result = get_all_subclasses(D)
    expected = set()
    assert result == expected, f"Expected {expected}, but got {result}"

# Generated at 2024-05-30 23:27:32.508640

    class A:
        pass

    class B(A):
        pass

    class C(A):
        pass

    class D(B):
        pass

    class E(C):
        pass

    result = get_all_subclasses(A)
    expected = {B, C, D, E}

    assert result == expected, f"Expected {expected}, but got {result}"

# Generated at 2024-05-30 23:27:34.087309
def test_get_all_subclasses():
    class A:
        pass

    class B(A):
        pass

    class C(A):
        pass

    class D(B):
        pass

    result = get_all_subclasses(A)
    expected = {B, C, D}

    assert result == expected, f"Expected {expected}, but got {result}"

# Generated at 2024-05-30 23:27:36.439598
def test_get_all_subclasses():
    class A:
        pass

    class B(A):
        pass

    class C(A):
        pass

    class D(B):
        pass

    class E(C):
        pass

    expected_subclasses = {B, C, D, E}
    assert get_all_subclasses(A) == expected_subclasses

    expected_subclasses_b = {D}
    assert get_all_subclasses(B) == expected_subclasses_b

    expected_subclasses_c = {E}
    assert get_all_subclasses(C) == expected_subclasses_c

    expected_subclasses_d = set()
    assert get_all_subclasses(D) == expected_subclasses_d

    expected_subclasses_e = set()
    assert get_all_subclasses(E) == expected_subclasses_e

# Generated at 2024-05-30 23:27:37.708548

    class A:
        pass

    class B(A):
        pass

    class C(A):
        pass

    class D(B):
        pass

    class E(C):
        pass

    result = get_all_subclasses(A)
    expected = {B, C, D, E}

    assert result == expected, f"Expected {expected}, but got {result}"

# Generated at 2024-05-30 23:27:40.696958
```python
    class A:
        pass

    class B(A):
        pass

    class C(A):
        pass

    class D(B):
        pass

    class E(C):
        pass

    result = get_all_subclasses(A)
    expected = {B, C, D, E}

    assert result == expected, f"Expected {expected}, but got {result}"

    result = get_all_subclasses(B)
    expected = {D}

    assert result == expected, f"Expected {expected}, but got {result}"

    result = get_all_subclasses(C)
    expected = {E}

    assert result == expected, f"Expected {expected}, but got {result}"

    result = get_all_subclasses(D)
    expected = set()

    assert result == expected, f"Expected {expected}, but got {result}"

    result = get_all_subclasses(E)
    expected = set()

    assert result == expected, f"Expected {expected

# Generated at 2024-05-30 23:27:42.532936

    class A:
        pass

    class B(A):
        pass

    class C(A):
        pass

    class D(B):
        pass

    class E(C):
        pass

    result = get_all_subclasses(A)
    expected = {B, C, D, E}

    assert result == expected, f"Expected {expected}, but got {result}"

# Generated at 2024-05-30 23:27:49.252642

    class A:
        pass

    class B(A):
        pass

    class C(A):
        pass

    class D(B):
        pass

    class E(C):
        pass

    result = get_all_subclasses(A)
    expected = {B, C, D, E}

    assert result == expected, f"Expected {expected}, but got {result}"

# Generated at 2024-05-30 23:27:52.448766
```python
    class A:
        pass

    class B(A):
        pass

    class C(A):
        pass

    class D(B):
        pass

    class E(C):
        pass

    result = get_all_subclasses(A)
    expected = {B, C, D, E}

    assert result == expected, f"Expected {expected}, but got {result}"

    result = get_all_subclasses(B)
    expected = {D}

    assert result == expected, f"Expected {expected}, but got {result}"

    result = get_all_subclasses(C)
    expected = {E}

    assert result == expected, f"Expected {expected}, but got {result}"

    result = get_all_subclasses(D)
    expected = set()

    assert result == expected, f"Expected {expected}, but got {result}"

    result = get_all_subclasses(E)
    expected = set()

    assert result == expected, f"Expected {expected

# Generated at 2024-05-30 23:27:55.408690
def test_get_all_subclasses():
    class A:
        pass

    class B(A):
        pass

    class C(A):
        pass

    class D(B):
        pass

    class E(C):
        pass

    expected_subclasses = {B, C, D, E}
    assert get_all_subclasses(A) == expected_subclasses

    expected_subclasses_b = {D}
    assert get_all_subclasses(B) == expected_subclasses_b

    expected_subclasses_c = {E}
    assert get_all_subclasses(C) == expected_subclasses_c

    expected_subclasses_d = set()
    assert get_all_subclasses(D) == expected_subclasses_d

    expected_subclasses_e = set()
    assert get_all_subclasses(E) == expected_subclasses_e

# Generated at 2024-05-30 23:27:56.842476
def test_get_all_subclasses():
    class A:
        pass

    class B(A):
        pass

    class C(A):
        pass

    class D(B):
        pass

    subclasses = get_all_subclasses(A)
    assert B in subclasses
    assert C in subclasses
    assert D in subclasses
    assert len(subclasses) == 3

# Generated at 2024-05-30 23:27:58.375599

    class A:
        pass

    class B(A):
        pass

    class C(A):
        pass

    class D(B):
        pass

    class E(C):
        pass

    result = get_all_subclasses(A)
    expected = {B, C, D, E}

    assert result == expected, f"Expected {expected}, but got {result}"

# Generated at 2024-05-30 23:28:02.289499
```python
    class A:
        pass

    class B(A):
        pass

    class C(B):
        pass

    class D(A):
        pass

    result = get_all_subclasses(A)
    expected = {B, C, D}

    assert result == expected, f"Expected {expected}, but got {result}"

    result = get_all_subclasses(B)
    expected = {C}

    assert result == expected, f"Expected {expected}, but got {result}"

    result = get_all_subclasses(C)
    expected = set()

    assert result == expected, f"Expected {expected}, but got {result}"
```

# Generated at 2024-05-30 23:28:04.014281

    class A:
        pass

    class B(A):
        pass

    class C(A):
        pass

    class D(B):
        pass

    class E(C):
        pass

    result = get_all_subclasses(A)
    expected = {B, C, D, E}

    assert result == expected, f"Expected {expected}, but got {result}"

# Generated at 2024-05-30 23:28:07.783064

    class A:
        pass

    class B(A):
        pass

    class C(A):
        pass

    class D(B):
        pass

    class E(C):
        pass

    result = get_all_subclasses(A)
    expected = {B, C, D, E}
    assert result == expected, f"Expected {expected}, but got {result}"

    result = get_all_subclasses(B)
    expected = {D}
    assert result == expected, f"Expected {expected}, but got {result}"

    result = get_all_subclasses(C)
    expected = {E}
    assert result == expected, f"Expected {expected}, but got {result}"

    result = get_all_subclasses(D)
    expected = set()
    assert result == expected, f"Expected {expected}, but got {result}"

    result = get_all_subclasses(E)
    expected = set()
    assert result == expected, f"Expected {expected}, but

# Generated at 2024-05-30 23:28:09.270361

    class A:
        pass

    class B(A):
        pass

    class C(A):
        pass

    class D(B):
        pass

    class E(C):
        pass

    result = get_all_subclasses(A)
    expected = {B, C, D, E}

    assert result == expected, f"Expected {expected}, but got {result}"

# Generated at 2024-05-30 23:28:10.976679
def test_get_all_subclasses():
    class A:
        pass

    class B(A):
        pass

    class C(A):
        pass

    class D(B):
        pass

    subclasses = get_all_subclasses(A)
    assert B in subclasses
    assert C in subclasses
    assert D in subclasses
    assert len(subclasses) == 3

# Generated at 2024-05-30 23:28:23.083421

    class A:
        pass

    class B(A):
        pass

    class C(A):
        pass

    class D(B):
        pass

    class E(C):
        pass

    result = get_all_subclasses(A)
    expected = {B, C, D, E}
    assert result == expected, f"Expected {expected}, but got {result}"

    result = get_all_subclasses(B)
    expected = {D}
    assert result == expected, f"Expected {expected}, but got {result}"

    result = get_all_subclasses(C)
    expected = {E}
    assert result == expected, f"Expected {expected}, but got {result}"

    result = get_all_subclasses(D)
    expected = set()
    assert result == expected, f"Expected {expected}, but got {result}"

    result = get_all_subclasses(E)
    expected = set()
    assert result == expected, f"Expected {expected}, but

# Generated at 2024-05-30 23:28:25.681467
def test_get_all_subclasses():
    class A:
        pass

    class B(A):
        pass

    class C(A):
        pass

    class D(B):
        pass

    subclasses = get_all_subclasses(A)
    assert B in subclasses
    assert C in subclasses
    assert D in subclasses
    assert len(subclasses) == 3

    subclasses_b = get_all_subclasses(B)
    assert D in subclasses_b
    assert len(subclasses_b) == 1

    subclasses_c = get_all_subclasses(C)
    assert len(subclasses_c) == 0

# Generated at 2024-05-30 23:28:28.982802
def test_get_all_subclasses():
    class A:
        pass

    class B(A):
        pass

    class C(A):
        pass

    class D(B):
        pass

    class E(C):
        pass

    subclasses = get_all_subclasses(A)
    assert B in subclasses
    assert C in subclasses
    assert D in subclasses
    assert E in subclasses
    assert A not in subclasses

    subclasses_b = get_all_subclasses(B)
    assert D in subclasses_b
    assert B not in subclasses_b
    assert A not in subclasses_b

    subclasses_c = get_all_subclasses(C)
    assert E in subclasses_c
    assert C not in subclasses_c
    assert A not in subclasses_c

# Generated at 2024-05-30 23:28:31.253811
def test_get_all_subclasses():
    class A:
        pass

    class B(A):
        pass

    class C(A):
        pass

    class D(B):
        pass

    class E(C):
        pass

    expected_subclasses = {B, C, D, E}
    assert get_all_subclasses(A) == expected_subclasses

    expected_subclasses_B = {D}
    assert get_all_subclasses(B) == expected_subclasses_B

    expected_subclasses_C = {E}
    assert get_all_subclasses(C) == expected_subclasses_C

    assert get_all_subclasses(D) == set()
    assert get_all_subclasses(E) == set()

# Generated at 2024-05-30 23:28:34.268521

    class A:
        pass

    class B(A):
        pass

    class C(A):
        pass

    class D(B):
        pass

    class E(C):
        pass

    result = get_all_subclasses(A)
    expected = {B, C, D, E}

    assert result == expected, f"Expected {expected}, but got {result}"

# Generated at 2024-05-30 23:28:36.091998
```python
    class A:
        pass

    class B(A):
        pass

    class C(A):
        pass

    class D(B):
        pass

    class E(C):
        pass

    expected_subclasses = {B, C, D, E}
    assert get_all_subclasses(A) == expected_subclasses
```

# Generated at 2024-05-30 23:28:38.793371
def test_get_all_subclasses():
    class A:
        pass

    class B(A):
        pass

    class C(A):
        pass

    class D(B):
        pass

    class E(C):
        pass

    expected_subclasses = {B, C, D, E}
    assert get_all_subclasses(A) == expected_subclasses

    expected_subclasses_B = {D}
    assert get_all_subclasses(B) == expected_subclasses_B

    expected_subclasses_C = {E}
    assert get_all_subclasses(C) == expected_subclasses_C

    expected_subclasses_D = set()
    assert get_all_subclasses(D) == expected_subclasses_D

    expected_subclasses_E = set()
    assert get_all_subclasses(E) == expected_subclasses_E

# Generated at 2024-05-30 23:28:40.364895

    class A:
        pass

    class B(A):
        pass

    class C(A):
        pass

    class D(B):
        pass

    class E(C):
        pass

    result = get_all_subclasses(A)
    expected = {B, C, D, E}

    assert result == expected, f"Expected {expected}, but got {result}"

# Generated at 2024-05-30 23:28:43.788743
```python
    class A:
        pass

    class B(A):
        pass

    class C(A):
        pass

    class D(B):
        pass

    class E(C):
        pass

    result = get_all_subclasses(A)
    expected = {B, C, D, E}

    assert result == expected, f"Expected {expected}, but got {result}"

    result = get_all_subclasses(B)
    expected = {D}

    assert result == expected, f"Expected {expected}, but got {result}"

    result = get_all_subclasses(C)
    expected = {E}

    assert result == expected, f"Expected {expected}, but got {result}"

    result = get_all_subclasses(D)
    expected = set()

    assert result == expected, f"Expected {expected}, but got {result}"

    result = get_all_subclasses(E)
    expected = set()

    assert result == expected, f"Expected {expected

# Generated at 2024-05-30 23:28:45.289257

    class A:
        pass

    class B(A):
        pass

    class C(A):
        pass

    class D(B):
        pass

    class E(C):
        pass

    result = get_all_subclasses(A)
    expected = {B, C, D, E}

    assert result == expected, f"Expected {expected}, but got {result}"

# Generated at 2024-05-30 23:28:55.703000

    class A:
        pass

    class B(A):
        pass

    class C(A):
        pass

    class D(B):
        pass

    class E(C):
        pass

    result = get_all_subclasses(A)
    expected = {B, C, D, E}

    assert result == expected, f"Expected {expected}, but got {result}"

# Generated at 2024-05-30 23:28:57.710887

    class A:
        pass

    class B(A):
        pass

    class C(A):
        pass

    class D(B):
        pass

    class E(C):
        pass

    result = get_all_subclasses(A)
    expected = {B, C, D, E}

    assert result == expected, f"Expected {expected}, but got {result}"

# Generated at 2024-05-30 23:29:01.115103

    class A:
        pass

    class B(A):
        pass

    class C(A):
        pass

    class D(B):
        pass

    class E(C):
        pass

    result = get_all_subclasses(A)
    expected = {B, C, D, E}
    assert result == expected, f"Expected {expected}, but got {result}"

    result = get_all_subclasses(B)
    expected = {D}
    assert result == expected, f"Expected {expected}, but got {result}"

    result = get_all_subclasses(C)
    expected = {E}
    assert result == expected, f"Expected {expected}, but got {result}"

    result = get_all_subclasses(D)
    expected = set()
    assert result == expected, f"Expected {expected}, but got {result}"

    result = get_all_subclasses(E)
    expected = set()
    assert result == expected, f"Expected {expected}, but

# Generated at 2024-05-30 23:29:04.525065
def test_get_all_subclasses():
    class A:
        pass

    class B(A):
        pass

    class C(A):
        pass

    class D(B):
        pass

    class E(C):
        pass

    expected_subclasses = {B, C, D, E}
    assert get_all_subclasses(A) == expected_subclasses

    expected_subclasses_b = {D}
    assert get_all_subclasses(B) == expected_subclasses_b

    expected_subclasses_c = {E}
    assert get_all_subclasses(C) == expected_subclasses_c

    expected_subclasses_d = set()
    assert get_all_subclasses(D) == expected_subclasses_d

    expected_subclasses_e = set()
    assert get_all_subclasses(E) == expected_subclasses_e

# Generated at 2024-05-30 23:29:06.235009

    class A:
        pass

    class B(A):
        pass

    class C(A):
        pass

    class D(B):
        pass

    class E(C):
        pass

    result = get_all_subclasses(A)
    expected = {B, C, D, E}

    assert result == expected, f"Expected {expected}, but got {result}"

# Generated at 2024-05-30 23:29:08.214535

    class A:
        pass

    class B(A):
        pass

    class C(A):
        pass

    class D(B):
        pass

    class E(C):
        pass

    result = get_all_subclasses(A)
    expected = {B, C, D, E}

    assert result == expected, f"Expected {expected}, but got {result}"

# Generated at 2024-05-30 23:29:09.855332

    class A:
        pass

    class B(A):
        pass

    class C(A):
        pass

    class D(B):
        pass

    class E(C):
        pass

    result = get_all_subclasses(A)
    expected = {B, C, D, E}

    assert result == expected, f"Expected {expected}, but got {result}"

# Generated at 2024-05-30 23:29:11.265476

    class A:
        pass

    class B(A):
        pass

    class C(A):
        pass

    class D(B):
        pass

    class E(C):
        pass

    result = get_all_subclasses(A)
    expected = {B, C, D, E}

    assert result == expected, f"Expected {expected}, but got {result}"

# Generated at 2024-05-30 23:29:14.396231

    class A:
        pass

    class B(A):
        pass

    class C(A):
        pass

    class D(B):
        pass

    class E(C):
        pass

    result = get_all_subclasses(A)
    expected = {B, C, D, E}
    assert result == expected, f"Expected {expected}, but got {result}"

    result = get_all_subclasses(B)
    expected = {D}
    assert result == expected, f"Expected {expected}, but got {result}"

    result = get_all_subclasses(C)
    expected = {E}
    assert result == expected, f"Expected {expected}, but got {result}"

    result = get_all_subclasses(D)
    expected = set()
    assert result == expected, f"Expected {expected}, but got {result}"

    result = get_all_subclasses(E)
    expected = set()
    assert result == expected, f"Expected {expected}, but

# Generated at 2024-05-30 23:29:15.896562

    class A:
        pass

    class B(A):
        pass

    class C(A):
        pass

    class D(B):
        pass

    class E(C):
        pass

    result = get_all_subclasses(A)
    expected = {B, C, D, E}

    assert result == expected, f"Expected {expected}, but got {result}"

# Generated at 2024-05-30 23:29:32.749552

    class A:
        pass

    class B(A):
        pass

    class C(A):
        pass

    class D(B):
        pass

    class E(C):
        pass

    result = get_all_subclasses(A)
    expected = {B, C, D, E}

    assert result == expected, f"Expected {expected}, but got {result}"

# Generated at 2024-05-30 23:29:34.150010

    class A:
        pass

    class B(A):
        pass

    class C(A):
        pass

    class D(B):
        pass

    class E(C):
        pass

    result = get_all_subclasses(A)
    expected = {B, C, D, E}

    assert result == expected, f"Expected {expected}, but got {result}"

# Generated at 2024-05-30 23:29:35.971237

    class A:
        pass

    class B(A):
        pass

    class C(A):
        pass

    class D(B):
        pass

    class E(C):
        pass

    result = get_all_subclasses(A)
    expected = {B, C, D, E}

    assert result == expected, f"Expected {expected}, but got {result}"

# Generated at 2024-05-30 23:29:38.064842

    class A:
        pass

    class B(A):
        pass

    class C(A):
        pass

    class D(B):
        pass

    class E(C):
        pass

    result = get_all_subclasses(A)
    expected = {B, C, D, E}

    assert result == expected, f"Expected {expected}, but got {result}"

# Generated at 2024-05-30 23:29:41.618293
```python
    class A:
        pass

    class B(A):
        pass

    class C(A):
        pass

    class D(B):
        pass

    class E(C):
        pass

    result = get_all_subclasses(A)
    expected = {B, C, D, E}

    assert result == expected, f"Expected {expected}, but got {result}"

    result = get_all_subclasses(B)
    expected = {D}

    assert result == expected, f"Expected {expected}, but got {result}"

    result = get_all_subclasses(C)
    expected = {E}

    assert result == expected, f"Expected {expected}, but got {result}"

    result = get_all_subclasses(D)
    expected = set()

    assert result == expected, f"Expected {expected}, but got {result}"

    result = get_all_subclasses(E)
    expected = set()

    assert result == expected, f"Expected {expected

# Generated at 2024-05-30 23:29:45.314385
```python
    class A:
        pass

    class B(A):
        pass

    class C(A):
        pass

    class D(B):
        pass

    class E(C):
        pass

    result = get_all_subclasses(A)
    expected = {B, C, D, E}

    assert result == expected, f"Expected {expected}, but got {result}"

    result = get_all_subclasses(B)
    expected = {D}

    assert result == expected, f"Expected {expected}, but got {result}"

    result = get_all_subclasses(C)
    expected = {E}

    assert result == expected, f"Expected {expected}, but got {result}"

    result = get_all_subclasses(D)
    expected = set()

    assert result == expected, f"Expected {expected}, but got {result}"

    result = get_all_subclasses(E)
    expected = set()

    assert result == expected, f"Expected {expected

# Generated at 2024-05-30 23:29:48.293922

    class A:
        pass

    class B(A):
        pass

    class C(A):
        pass

    class D(B):
        pass

    class E(C):
        pass

    result = get_all_subclasses(A)
    expected = {B, C, D, E}

    assert result == expected, f"Expected {expected}, but got {result}"

# Generated at 2024-05-30 23:29:54.202746

    class A:
        pass

    class B(A):
        pass

    class C(A):
        pass

    class D(B):
        pass

    class E(C):
        pass

    subclasses_of_a = get_all_subclasses(A)
    assert B in subclasses_of_a
    assert C in subclasses_of_a
    assert D in subclasses_of_a
    assert E in subclasses_of_a
    assert len(subclasses_of_a) == 4

    subclasses_of_b = get_all_subclasses(B)
    assert D in subclasses_of_b
    assert len(subclasses_of_b) == 1

    subclasses_of_c = get_all_subclasses(C)
    assert E in subclasses_of_c
    assert len(subclasses_of_c) == 1

    subclasses_of_d = get_all_subclasses(D)
    assert len(subclasses_of_d) == 0

    subclasses_of_e = get_all_subclasses(E)
    assert len(subclasses_of_e) ==

# Generated at 2024-05-30 23:29:55.940966

    class A:
        pass

    class B(A):
        pass

    class C(A):
        pass

    class D(B):
        pass

    class E(C):
        pass

    result = get_all_subclasses(A)
    expected = {B, C, D, E}

    assert result == expected, f"Expected {expected}, but got {result}"

# Generated at 2024-05-30 23:29:58.372200

    class A:
        pass

    class B(A):
        pass

    class C(A):
        pass

    class D(B):
        pass

    class E(C):
        pass

    result = get_all_subclasses(A)
    expected = {B, C, D, E}

    assert result == expected, f"Expected {expected}, but got {result}"