# Automatically generated by Pynguin.
import blib2to3.pgen2.grammar as module_0
import os as module_1

def test_case_0():
    try:
        bytes_0 = b'\x9a\xe2\xf3'
        str_0 = 'XtMcDfF'
        grammar_0 = module_0.Grammar()
        grammar_0.dump(str_0)
        grammar_1 = module_0.Grammar()
        grammar_1.load(str_0)
        grammar_2 = module_0.Grammar()
        grammar_3 = module_0.Grammar()
        grammar_3.loads(bytes_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = None
        grammar_0 = module_0.Grammar()
        grammar_0.load(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b'`<u\xa9-\x16\x84\xdb$W\x9ed'
        grammar_0 = module_0.Grammar()
        grammar_0.loads(bytes_0)
    except BaseException:
        pass

def test_case_3():
    try:
        grammar_0 = module_0.Grammar()
        var_0 = grammar_0.copy()
        grammar_1 = module_0.Grammar()
        grammar_1.report()
        grammar_2 = module_0.Grammar()
        path_like_0 = module_1.PathLike()
    except BaseException:
        pass

def test_case_4():
    try:
        grammar_0 = module_0.Grammar()
        grammar_0.report()
        grammar_1 = module_0.Grammar()
        grammar_2 = module_0.Grammar()
        bytes_0 = b'\xfaWE\x93\xde\xc1\x95z\x89|\xc3'
        grammar_2.loads(bytes_0)
    except BaseException:
        pass