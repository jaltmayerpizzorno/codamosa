# Automatically generated by Pynguin.
import ansible.utils.context_objects as module_0

def test_case_0():
    try:
        str_0 = 'deUBq'
        c_l_i_args_0 = module_0.CLIArgs(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = -1230
        global_c_l_i_args_0 = module_0.GlobalCLIArgs(int_0)
        bool_0 = True
        dict_0 = {bool_0: bool_0}
        c_l_i_args_0 = module_0.CLIArgs(global_c_l_i_args_0)
        dict_1 = {int_0: global_c_l_i_args_0, global_c_l_i_args_0: dict_0}
        c_l_i_args_1 = module_0.CLIArgs(dict_1)
        str_0 = None
        c_l_i_args_2 = module_0.CLIArgs(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        tuple_0 = ()
        tuple_1 = (tuple_0, tuple_0)
        float_0 = -1338.2492
        global_c_l_i_args_0 = module_0.GlobalCLIArgs(float_0)
        set_0 = {tuple_1, tuple_0, tuple_0, float_0, tuple_0, tuple_0, tuple_1}
        str_0 = 'q%m;*c*98F?'
        bytes_0 = b'\n\x8d\xf6'
        dict_0 = {tuple_0: str_0, bytes_0: tuple_0, tuple_0: set_0, tuple_1: set_0}
        str_1 = 'p\r97;ch8p}$\tV\x0b>Gl7i5'
        global_c_l_i_args_1 = module_0.GlobalCLIArgs(str_1)
        c_l_i_args_0 = module_0.CLIArgs(dict_0)
        a_b_c_singleton_0 = module_0._ABCSingleton(set_0, bytes_0, set_0, dict_0)
    except BaseException:
        pass