# Automatically generated by Pynguin.
import thonny.roughparse as module_0

def test_case_0():
    pass

def test_case_1():
    bool_0 = False
    rough_parser_0 = module_0.RoughParser(bool_0, bool_0)
    var_0 = rough_parser_0.set_lo(bool_0)

def test_case_2():
    bool_0 = False
    rough_parser_0 = module_0.RoughParser(bool_0, bool_0)
    str_0 = "   mak\\bsure:the device Tas uiale firm'ae;\n"
    var_0 = rough_parser_0.set_str(str_0)
    var_1 = rough_parser_0.get_base_indent_string()

def test_case_3():
    set_0 = set()
    list_0 = []
    rough_parser_0 = module_0.RoughParser(set_0, list_0)
    var_0 = rough_parser_0.set_str(list_0)

def test_case_4():
    bool_0 = True
    rough_parser_0 = module_0.RoughParser(bool_0, bool_0)
    str_0 = ''
    var_0 = rough_parser_0.set_str(str_0)
    var_1 = rough_parser_0.get_base_indent_string()

def test_case_5():
    bool_0 = True
    rough_parser_0 = module_0.RoughParser(bool_0, bool_0)
    str_0 = 'U}balaned parnthee, rake[or brcs:\n'
    var_0 = rough_parser_0.set_str(str_0)
    var_1 = rough_parser_0.find_good_parse_start(bool_0)

def test_case_6():
    bool_0 = True
    rough_parser_0 = module_0.RoughParser(bool_0, bool_0)
    str_0 = "   mak\\bsure:^he device Tas uiale firm'ae;\n"
    var_0 = rough_parser_0.set_str(str_0)
    var_1 = rough_parser_0.get_last_open_bracket_pos()