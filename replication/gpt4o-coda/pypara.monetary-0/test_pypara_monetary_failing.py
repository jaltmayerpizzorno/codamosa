# Automatically generated by Pynguin.
import pypara.currencies as module_0
import decimal as module_1
import pypara.monetary as module_2
import datetime as module_3

def test_case_0():
    try:
        str_0 = '<H'
        int_0 = -1894
        currency_type_0 = module_0.CurrencyType.ALTERNATIVE
        decimal_0 = module_1.Decimal()
        int_1 = -6248
        currency_0 = module_0.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_1)
        incompatible_currency_error_0 = module_2.IncompatibleCurrencyError(currency_0, currency_0, str_0)
        price_0 = module_2.Price()
        price_1 = price_0.negative()
    except BaseException:
        pass

def test_case_1():
    try:
        bool_0 = False
        none_price_0 = module_2.NonePrice()
        money_0 = none_price_0.times(bool_0)
        int_0 = -3102
        list_0 = [int_0, int_0, int_0]
        some_money_0 = module_2.SomeMoney(*list_0)
        currency_type_0 = None
        money_1 = money_0.abs()
        some_price_0 = module_2.SomePrice(*list_0)
        bool_1 = some_money_0.lt(money_0)
        bool_2 = some_money_0.gte(money_0)
        str_0 = "JfA!:@Ku43'Z1G\r)0op"
        bool_3 = some_money_0.lte(money_0)
        none_money_0 = module_2.NoneMoney()
        money_2 = some_money_0.add(money_0)
        money_3 = money_2.__abs__()
        money_4 = money_2.subtract(money_2)
        bool_4 = money_3.__gt__(money_3)
        decimal_0 = module_1.Decimal()
        currency_0 = module_0.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        bool_5 = False
        price_0 = some_price_0.convert(currency_0, bool_5)
    except BaseException:
        pass

def test_case_2():
    try:
        bool_0 = False
        none_price_0 = module_2.NonePrice()
        money_0 = none_price_0.times(bool_0)
        int_0 = -3080
        list_0 = [int_0, int_0, int_0]
        var_0 = None
        money_1 = money_0.__mul__(var_0)
        some_price_0 = module_2.SomePrice(*list_0)
        price_0 = some_price_0.positive()
        price_1 = none_price_0.round()
        some_price_1 = module_2.SomePrice(*list_0)
        price_2 = some_price_1.abs()
        price_3 = price_2.__add__(price_2)
        price_4 = some_price_0.round(int_0)
        bool_1 = some_price_1.lt(price_3)
        bool_2 = some_price_1.gt(price_2)
        bool_3 = some_price_1.lte(price_2)
        currency_0 = None
        none_money_0 = module_2.NoneMoney()
        money_2 = none_money_0.positive()
        money_3 = money_0.positive()
        money_4 = money_0.convert(currency_0)
        price_5 = some_price_1.convert(currency_0)
    except BaseException:
        pass

def test_case_3():
    try:
        price_0 = None
        price_1 = module_2.Price()
        price_2 = price_1.add(price_0)
    except BaseException:
        pass

def test_case_4():
    try:
        int_0 = -3102
        list_0 = [int_0, int_0, int_0]
        some_money_0 = module_2.SomeMoney(*list_0)
        some_price_0 = module_2.SomePrice(*list_0)
        price_0 = some_price_0.abs()
        price_1 = price_0.__add__(price_0)
        bool_0 = some_price_0.gte(price_0)
        bool_1 = price_1.gt(price_0)
        price_2 = price_1.__neg__()
        none_money_0 = module_2.NoneMoney()
        int_1 = price_2.as_integer()
        var_0 = None
        price_3 = price_0.subtract(price_0)
        price_4 = price_1.scalar_subtract(var_0)
    except BaseException:
        pass

def test_case_5():
    try:
        float_0 = -591.24
        list_0 = []
        var_0 = None
        none_price_0 = module_2.NonePrice(*list_0)
        price_0 = none_price_0.negative()
        price_1 = price_0.floor_divide(var_0)
        price_2 = price_0.scalar_add(var_0)
        str_0 = 'B&blVDxEUj(\x0cSm53hU'
        str_1 = '+,X\n\\o3?S5 @f?B'
        str_2 = None
        dict_0 = {str_1: float_0, str_0: price_0, str_1: list_0, str_2: price_1}
        decimal_0 = module_1.Decimal(**dict_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = '#x\n3X$E3Lj!@)t\x0bypA3/'
        price_0 = module_2.Price()
        price_1 = price_0.__abs__()
        dict_0 = {str_0: str_0, str_0: str_0}
        none_money_0 = module_2.NoneMoney(**dict_0)
    except BaseException:
        pass

def test_case_7():
    try:
        var_0 = None
        none_price_0 = module_2.NonePrice()
        price_0 = none_price_0.divide(var_0)
        none_price_1 = module_2.NonePrice()
        list_0 = [none_price_1, none_price_1, none_price_1]
        str_0 = '\n    Computes the day count fraction for the "Act/365A" convention.\n\n    :param start: The start date of the period.\n    :param asof: The date which the day count fraction to be calculated as of.\n    :param end: The end date of the period (a.k.a. termination date).\n    :return: Day count fraction.\n\n    >>> ex1_start, ex1_asof = datetime.date(2007, 12, 28), datetime.date(2008, 2, 28)\n    >>> ex2_start, ex2_asof = datetime.date(2007, 12, 28), datetime.date(2008, 2, 29)\n    >>> ex3_start, ex3_asof = datetime.date(2007, 10, 31), datetime.date(2008, 11, 30)\n    >>> ex4_start, ex4_asof = datetime.date(2008, 2, 1), datetime.date(2009, 5, 31)\n    >>> round(dcfc_act_365_a(start=ex1_start, asof=ex1_asof, end=ex1_asof), 14)\n    Decimal(\'0.16986301369863\')\n    >>> round(dcfc_act_365_a(start=ex2_start, asof=ex2_asof, end=ex2_asof), 14)\n    Decimal(\'0.17213114754098\')\n    >>> round(dcfc_act_365_a(start=ex3_start, asof=ex3_asof, end=ex3_asof), 14)\n    Decimal(\'1.08196721311475\')\n    >>> round(dcfc_act_365_a(start=ex4_start, asof=ex4_asof, end=ex4_asof), 14)\n    Decimal(\'1.32513661202186\')\n    '
        dict_0 = {str_0: list_0}
        price_1 = module_2.Price(*list_0, **dict_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = '?yW/suh\\'
        none_price_0 = module_2.NonePrice()
        price_0 = none_price_0.multiply(str_0)
        price_1 = price_0.add(price_0)
        decimal_0 = module_1.Decimal()
        some_price_0 = module_2.SomePrice()
    except BaseException:
        pass

def test_case_9():
    try:
        dict_0 = {}
        price_0 = module_2.Price(**dict_0)
        bool_0 = price_0.__bool__()
        decimal_0 = module_1.Decimal()
        none_money_0 = module_2.NoneMoney()
        money_0 = none_money_0.with_qty(decimal_0)
        none_money_1 = module_2.NoneMoney()
        money_1 = none_money_1.subtract(money_0)
        bool_1 = money_1.as_boolean()
        list_0 = []
        none_money_2 = module_2.NoneMoney(*list_0)
        int_0 = none_money_2.as_integer()
    except BaseException:
        pass

def test_case_10():
    try:
        float_0 = -591.24
        list_0 = []
        var_0 = None
        none_price_0 = module_2.NonePrice(*list_0)
        price_0 = none_price_0.negative()
        price_1 = price_0.floor_divide(var_0)
        price_2 = price_0.scalar_add(var_0)
        bool_0 = none_price_0.is_equal(price_1)
        str_0 = 'B&blVDxEUj(\x0cSm53hU'
        str_1 = '+,X\n\\o3?S5 @f?B'
        str_2 = None
        dict_0 = {str_1: float_0, str_0: price_0, str_1: list_0, str_2: price_1}
        decimal_0 = module_1.Decimal(**dict_0)
    except BaseException:
        pass

def test_case_11():
    try:
        none_price_0 = module_2.NonePrice()
        price_0 = none_price_0.abs()
        bool_0 = none_price_0.as_boolean()
        bool_1 = price_0.__lt__(price_0)
        some_price_0 = module_2.SomePrice()
    except BaseException:
        pass

def test_case_12():
    try:
        bool_0 = False
        none_price_0 = module_2.NonePrice()
        money_0 = none_price_0.times(bool_0)
        bool_1 = None
        money_1 = money_0.__mul__(bool_1)
        var_0 = money_0.__round__()
        none_money_0 = module_2.NoneMoney()
        money_2 = money_0.add(money_1)
        bool_2 = money_2.__lt__(money_1)
        money_3 = money_2.positive()
        price_0 = none_price_0.round()
        price_1 = price_0.positive()
        var_1 = price_1.__round__()
    except BaseException:
        pass

def test_case_13():
    try:
        list_0 = None
        list_1 = [list_0, list_0, list_0]
        some_price_0 = module_2.SomePrice(*list_1)
        price_0 = some_price_0.positive()
    except BaseException:
        pass

def test_case_14():
    try:
        int_0 = -3072
        list_0 = [int_0, int_0, int_0]
        some_money_0 = module_2.SomeMoney(*list_0)
        some_price_0 = module_2.SomePrice(*list_0)
        currency_0 = None
        price_0 = some_price_0.convert(currency_0)
    except BaseException:
        pass

def test_case_15():
    try:
        bool_0 = False
        none_price_0 = module_2.NonePrice()
        money_0 = none_price_0.times(bool_0)
        var_0 = money_0.__round__()
        currency_type_0 = module_0.CurrencyType.CRYPTO
        none_money_0 = module_2.NoneMoney()
        currency_0 = None
        none_money_1 = module_2.NoneMoney()
        money_1 = none_money_1.positive()
        var_1 = None
        money_2 = none_money_1.scalar_subtract(var_1)
        list_0 = [money_1, currency_0, currency_type_0]
        some_price_0 = module_2.SomePrice(*list_0)
        price_0 = some_price_0.convert(currency_0)
    except BaseException:
        pass

def test_case_16():
    try:
        bool_0 = False
        none_price_0 = module_2.NonePrice()
        money_0 = none_price_0.times(bool_0)
        int_0 = -3102
        list_0 = [int_0, int_0, int_0]
        some_money_0 = module_2.SomeMoney(*list_0)
        some_price_0 = module_2.SomePrice(*list_0)
        price_0 = some_price_0.abs()
        price_1 = price_0.__add__(price_0)
        bool_1 = some_money_0.lt(money_0)
        bool_2 = some_money_0.gte(money_0)
        bool_3 = price_1.gt(price_0)
        none_money_0 = module_2.NoneMoney()
        price_2 = price_1.__neg__()
        bool_4 = money_0.gte(money_0)
        money_1 = none_money_0.positive()
        money_2 = money_1.positive()
        money_3 = some_money_0.add(money_2)
        money_4 = none_money_0.add(money_3)
        money_5 = money_4.subtract(money_4)
        some_price_1 = module_2.SomePrice()
    except BaseException:
        pass

def test_case_17():
    try:
        decimal_0 = module_1.Decimal()
        price_0 = module_2.Price()
        price_1 = price_0.__neg__()
        price_2 = price_0.divide(decimal_0)
    except BaseException:
        pass

def test_case_18():
    try:
        currency_type_0 = module_0.CurrencyType.MONEY
        currency_0 = None
        none_money_0 = module_2.NoneMoney()
        var_0 = None
        money_0 = none_money_0.floor_divide(var_0)
        int_0 = -342
        money_1 = money_0.round(int_0)
        money_2 = money_0.__mul__(var_0)
        list_0 = [money_2, currency_0, currency_type_0]
        some_price_0 = module_2.SomePrice(*list_0)
        some_money_0 = module_2.SomeMoney(*list_0)
        money_3 = some_money_0.multiply(var_0)
    except BaseException:
        pass

def test_case_19():
    try:
        str_0 = '\\>'
        money_0 = module_2.Money()
        money_1 = money_0.__floordiv__(str_0)
        dict_0 = {}
        none_price_0 = module_2.NonePrice(**dict_0)
        money_2 = none_price_0.times(money_1)
        float_0 = money_2.as_float()
    except BaseException:
        pass

def test_case_20():
    try:
        bool_0 = False
        none_price_0 = module_2.NonePrice()
        money_0 = none_price_0.times(bool_0)
        var_0 = money_0.__round__()
        int_0 = -3102
        list_0 = [var_0, int_0, var_0]
        some_money_0 = module_2.SomeMoney(*list_0)
        bool_1 = some_money_0.lt(money_0)
        int_1 = some_money_0.as_integer()
        currency_0 = None
        none_money_0 = module_2.NoneMoney()
        money_1 = none_money_0.with_ccy(currency_0)
        price_0 = none_price_0.abs()
        currency_1 = None
        none_money_1 = module_2.NoneMoney()
        money_2 = none_money_1.positive()
        var_1 = None
        money_3 = money_2.positive()
        int_2 = -342
        money_4 = money_3.round(int_2)
        money_5 = money_0.divide(var_1)
        money_6 = money_2.subtract(money_2)
        some_price_0 = module_2.SomePrice(*list_0)
        price_1 = some_price_0.convert(currency_1)
    except BaseException:
        pass

def test_case_21():
    try:
        currency_type_0 = module_0.CurrencyType.ALTERNATIVE
        currency_0 = None
        none_money_0 = module_2.NoneMoney()
        money_0 = none_money_0.positive()
        var_0 = None
        money_1 = none_money_0.floor_divide(var_0)
        money_2 = money_1.__mul__(var_0)
        list_0 = [money_0, currency_0, currency_type_0]
        some_price_0 = module_2.SomePrice(*list_0)
        price_0 = some_price_0.scalar_add(var_0)
    except BaseException:
        pass

def test_case_22():
    try:
        bool_0 = False
        none_price_0 = module_2.NonePrice()
        money_0 = none_price_0.times(bool_0)
        int_0 = -3102
        list_0 = [int_0, int_0, int_0]
        some_money_0 = module_2.SomeMoney(*list_0)
        some_price_0 = module_2.SomePrice(*list_0)
        bool_1 = some_money_0.lt(money_0)
        bool_2 = some_money_0.gte(money_0)
        bool_3 = some_money_0.lte(money_0)
        none_money_0 = module_2.NoneMoney()
        var_0 = None
        money_1 = some_money_0.add(money_0)
        money_2 = money_0.positive()
        money_3 = some_money_0.add(money_1)
        money_4 = some_money_0.subtract(money_2)
        str_0 = '&7"^=o'
        bool_4 = money_0.__eq__(str_0)
        price_0 = some_price_0.divide(var_0)
    except BaseException:
        pass

def test_case_23():
    try:
        var_0 = None
        none_price_0 = module_2.NonePrice()
        price_0 = none_price_0.scalar_subtract(var_0)
        bool_0 = none_price_0.lte(price_0)
        date_0 = module_3.date()
    except BaseException:
        pass

def test_case_24():
    try:
        none_money_0 = module_2.NoneMoney()
        money_0 = none_money_0.negative()
        str_0 = 'G~yA!_h0Gy+?'
        tuple_0 = (str_0,)
        bool_0 = none_money_0.gte(money_0)
        price_0 = module_2.Price()
        price_1 = price_0.__neg__()
        list_0 = [tuple_0]
        bool_1 = price_0.__gt__(price_0)
        str_1 = '~\nu\ti{X&w9\\WZw[6'
        dict_0 = {str_0: str_0, str_1: str_1, str_0: str_0}
        none_money_1 = module_2.NoneMoney(*list_0, **dict_0)
    except BaseException:
        pass

def test_case_25():
    try:
        bool_0 = False
        none_price_0 = module_2.NonePrice()
        money_0 = none_price_0.times(bool_0)
        var_0 = money_0.__round__()
        int_0 = -3104
        list_0 = [var_0, int_0, var_0]
        some_money_0 = module_2.SomeMoney(*list_0)
        str_0 = '$m;Y\ngffL=HNd~K'
        some_price_0 = module_2.SomePrice(*list_0)
        price_0 = some_price_0.round(int_0)
        money_1 = money_0.subtract(money_0)
        money_2 = some_money_0.subtract(money_0)
        none_money_0 = module_2.NoneMoney()
        bool_1 = price_0.__eq__(str_0)
        money_3 = some_money_0.subtract(money_0)
        price_1 = price_0.__neg__()
        none_money_1 = module_2.NoneMoney()
        money_4 = some_money_0.positive()
        money_5 = some_money_0.add(money_4)
        money_6 = none_money_1.add(money_4)
        money_7 = money_4.subtract(money_4)
        price_2 = none_price_0.positive()
        float_0 = price_2.__float__()
    except BaseException:
        pass

def test_case_26():
    try:
        none_price_0 = module_2.NonePrice()
        currency_type_0 = module_0.CurrencyType.CRYPTO
        currency_0 = None
        none_money_0 = module_2.NoneMoney()
        money_0 = none_money_0.with_ccy(currency_0)
        currency_1 = None
        none_money_1 = module_2.NoneMoney()
        money_1 = none_money_1.positive()
        var_0 = None
        money_2 = money_1.positive()
        money_3 = money_1.round()
        money_4 = money_1.subtract(money_1)
        list_0 = [money_1, currency_1, currency_type_0]
        some_price_0 = module_2.SomePrice(*list_0)
        price_0 = some_price_0.floor_divide(var_0)
    except BaseException:
        pass

def test_case_27():
    try:
        money_0 = module_2.Money()
        bool_0 = money_0.gt(money_0)
        none_money_0 = module_2.NoneMoney()
        money_1 = money_0.negative()
    except BaseException:
        pass

def test_case_28():
    try:
        money_0 = module_2.Money()
        bool_0 = money_0.gt(money_0)
        none_money_0 = module_2.NoneMoney()
        money_1 = money_0.__abs__()
        money_2 = money_0.abs()
    except BaseException:
        pass

def test_case_29():
    try:
        currency_type_0 = module_0.CurrencyType.MONEY
        currency_0 = None
        none_money_0 = module_2.NoneMoney()
        money_0 = none_money_0.positive()
        var_0 = None
        none_price_0 = module_2.NonePrice()
        price_0 = none_price_0.positive()
        money_1 = none_money_0.scalar_add(var_0)
        var_1 = None
        money_2 = none_money_0.floor_divide(var_1)
        date_0 = None
        money_3 = money_2.with_dov(date_0)
        int_0 = -361
        money_4 = money_2.round(int_0)
        list_0 = [money_0, currency_0, currency_type_0]
        some_price_0 = module_2.SomePrice(*list_0)
        price_1 = some_price_0.convert(currency_0)
    except BaseException:
        pass

def test_case_30():
    try:
        int_0 = -3072
        list_0 = [int_0, int_0, int_0]
        some_money_0 = module_2.SomeMoney(*list_0)
        str_0 = '$m;Y\ngffL=HNd~K'
        some_price_0 = module_2.SomePrice(*list_0)
        price_0 = some_price_0.abs()
        price_1 = price_0.__add__(price_0)
        bool_0 = some_price_0.gt(price_0)
        bool_1 = some_price_0.lte(price_1)
        currency_0 = None
        bool_2 = price_0.__eq__(str_0)
        price_2 = some_price_0.with_ccy(currency_0)
        price_3 = price_0.round(int_0)
        price_4 = some_price_0.convert(currency_0)
    except BaseException:
        pass

def test_case_31():
    try:
        int_0 = -3072
        list_0 = [int_0, int_0, int_0]
        some_money_0 = module_2.SomeMoney(*list_0)
        money_0 = some_money_0.abs()
        some_price_0 = module_2.SomePrice(*list_0)
        bool_0 = some_money_0.lte(money_0)
        bool_1 = some_money_0.gte(money_0)
        none_price_0 = module_2.NonePrice()
        int_1 = none_price_0.as_integer()
    except BaseException:
        pass

def test_case_32():
    try:
        bool_0 = False
        none_price_0 = module_2.NonePrice()
        money_0 = none_price_0.times(bool_0)
        var_0 = money_0.__round__()
        currency_type_0 = module_0.CurrencyType.CRYPTO
        price_0 = none_price_0.negative()
        bool_1 = none_price_0.gte(price_0)
        currency_0 = None
        none_money_0 = module_2.NoneMoney()
        money_1 = none_money_0.with_ccy(currency_0)
        currency_1 = None
        none_money_1 = module_2.NoneMoney()
        money_2 = none_money_1.positive()
        var_1 = None
        money_3 = money_2.positive()
        int_0 = -342
        money_4 = money_3.round(int_0)
        money_5 = money_0.floor_divide(var_1)
        money_6 = money_2.round()
        money_7 = money_2.subtract(money_2)
        list_0 = [money_2, currency_1, currency_type_0]
        some_price_0 = module_2.SomePrice(*list_0)
        price_1 = some_price_0.convert(currency_1)
    except BaseException:
        pass

def test_case_33():
    try:
        bool_0 = False
        none_price_0 = module_2.NonePrice()
        money_0 = none_price_0.times(bool_0)
        int_0 = -3104
        list_0 = [int_0, int_0, int_0]
        some_money_0 = module_2.SomeMoney(*list_0)
        bool_1 = some_money_0.gt(money_0)
        decimal_0 = module_1.Decimal()
        some_price_0 = module_2.SomePrice(*list_0)
        bool_2 = some_money_0.lt(money_0)
        none_money_0 = module_2.NoneMoney()
        set_0 = None
        money_1 = none_money_0.scalar_add(set_0)
        float_0 = some_price_0.as_float()
        some_money_1 = module_2.SomeMoney(*list_0)
        money_2 = some_money_0.subtract(money_0)
        price_0 = some_price_0.with_qty(decimal_0)
        bool_3 = some_price_0.as_boolean()
        bool_4 = money_0.__gt__(money_2)
        money_3 = money_2.__abs__()
        money_4 = money_3.subtract(money_3)
        money_5 = some_money_1.floor_divide(set_0)
    except BaseException:
        pass

def test_case_34():
    try:
        bool_0 = False
        none_price_0 = module_2.NonePrice()
        money_0 = none_price_0.times(bool_0)
        var_0 = money_0.__round__()
        currency_type_0 = module_0.CurrencyType.CRYPTO
        str_0 = "JfA!:@Ku43'Z1G\r)0op"
        currency_0 = None
        none_money_0 = module_2.NoneMoney()
        money_1 = none_money_0.with_ccy(currency_0)
        currency_1 = None
        none_money_1 = module_2.NoneMoney()
        money_2 = none_money_1.positive()
        money_3 = money_2.positive()
        int_0 = -342
        money_4 = money_3.round(int_0)
        money_5 = money_2.round()
        money_6 = money_2.subtract(money_2)
        list_0 = [money_2, currency_1, currency_type_0]
        some_price_0 = module_2.SomePrice(*list_0)
        str_1 = '\rsB$r@vkAvxf,KI\n 7H'
        dict_0 = {str_0: money_0, str_1: none_money_1, str_0: some_price_0}
        price_0 = some_price_0.convert(currency_1, dict_0)
    except BaseException:
        pass

def test_case_35():
    try:
        bool_0 = False
        none_price_0 = module_2.NonePrice()
        money_0 = none_price_0.times(bool_0)
        var_0 = money_0.__round__()
        int_0 = -3102
        list_0 = [var_0, int_0, var_0]
        some_money_0 = module_2.SomeMoney(*list_0)
        int_1 = some_money_0.as_integer()
        currency_type_0 = module_0.CurrencyType.CRYPTO
        currency_0 = None
        none_money_0 = module_2.NoneMoney()
        money_1 = none_money_0.with_ccy(currency_0)
        price_0 = none_price_0.abs()
        currency_1 = None
        var_1 = money_0.__round__(int_1)
        none_money_1 = module_2.NoneMoney()
        money_2 = none_money_1.positive()
        money_3 = money_2.positive()
        int_2 = -342
        money_4 = money_3.round(int_2)
        money_5 = money_2.round()
        money_6 = money_2.subtract(money_2)
        list_1 = [money_2, currency_1, currency_type_0]
        some_price_0 = module_2.SomePrice(*list_1)
        price_1 = some_price_0.convert(currency_1)
    except BaseException:
        pass

def test_case_36():
    try:
        bool_0 = False
        none_price_0 = module_2.NonePrice()
        money_0 = none_price_0.times(bool_0)
        var_0 = money_0.__round__()
        int_0 = -3102
        list_0 = [var_0, int_0, var_0]
        some_money_0 = module_2.SomeMoney(*list_0)
        int_1 = some_money_0.as_integer()
        currency_0 = None
        none_money_0 = module_2.NoneMoney()
        money_1 = none_money_0.with_ccy(currency_0)
        price_0 = none_price_0.abs()
        none_money_1 = module_2.NoneMoney()
        money_2 = some_money_0.with_ccy(currency_0)
        money_3 = money_2.positive()
        int_2 = -342
        money_4 = money_3.round(int_2)
    except BaseException:
        pass

def test_case_37():
    try:
        bool_0 = False
        none_price_0 = module_2.NonePrice()
        money_0 = none_price_0.times(bool_0)
        var_0 = money_0.__round__()
        int_0 = -3102
        list_0 = [var_0, int_0, var_0]
        some_money_0 = module_2.SomeMoney(*list_0)
        str_0 = '$m;Y\ngffL=HNd~K'
        int_1 = 2781
        currency_type_0 = None
        decimal_0 = module_1.Decimal()
        currency_0 = module_0.Currency(str_0, str_0, int_1, currency_type_0, decimal_0, int_0)
        some_price_0 = module_2.SomePrice(*list_0)
        price_0 = some_price_0.positive()
        price_1 = price_0.with_ccy(currency_0)
        bool_1 = some_money_0.lt(money_0)
        int_2 = some_money_0.as_integer()
        currency_1 = None
        none_money_0 = module_2.NoneMoney()
        money_1 = money_0.scalar_add(money_0)
        money_2 = none_money_0.with_ccy(currency_1)
        bool_2 = none_money_0.gt(money_1)
        price_2 = none_price_0.abs()
        none_money_1 = module_2.NoneMoney()
        money_3 = none_money_1.positive()
        var_1 = None
        money_4 = money_3.positive()
        money_5 = some_price_0.times(var_1)
    except BaseException:
        pass

def test_case_38():
    try:
        int_0 = -3072
        list_0 = [int_0, int_0, int_0]
        some_money_0 = module_2.SomeMoney(*list_0)
        money_0 = some_money_0.abs()
        money_1 = some_money_0.add(money_0)
        some_price_0 = module_2.SomePrice(*list_0)
        bool_0 = some_money_0.lte(money_0)
        none_price_0 = module_2.NonePrice()
        int_1 = none_price_0.as_integer()
    except BaseException:
        pass

def test_case_39():
    try:
        int_0 = -3072
        list_0 = [int_0, int_0, int_0]
        some_money_0 = module_2.SomeMoney(*list_0)
        some_price_0 = module_2.SomePrice(*list_0)
        price_0 = some_price_0.abs()
        price_1 = some_price_0.add(price_0)
        bool_0 = some_price_0.gt(price_0)
        bool_1 = some_price_0.lte(price_1)
        bool_2 = price_1.__bool__()
        currency_0 = None
        price_2 = price_0.round(int_0)
        price_3 = some_price_0.convert(currency_0)
    except BaseException:
        pass

def test_case_40():
    try:
        none_money_0 = module_2.NoneMoney()
        currency_type_0 = module_0.CurrencyType.CRYPTO
        list_0 = [none_money_0, none_money_0, none_money_0]
        some_money_0 = module_2.SomeMoney(*list_0)
        money_0 = some_money_0.floor_divide(currency_type_0)
    except BaseException:
        pass

def test_case_41():
    try:
        none_price_0 = module_2.NonePrice()
        int_0 = -3102
        list_0 = [int_0, int_0, int_0]
        some_money_0 = module_2.SomeMoney(*list_0)
        some_price_0 = module_2.SomePrice(*list_0)
        price_0 = some_price_0.abs()
        price_1 = price_0.__add__(price_0)
        money_0 = some_money_0.positive()
        bool_0 = some_money_0.lt(money_0)
        int_1 = some_money_0.as_integer()
        none_money_0 = module_2.NoneMoney()
        price_2 = price_0.negative()
        money_1 = None
        money_2 = money_0.scalar_add(money_1)
    except BaseException:
        pass

def test_case_42():
    try:
        bool_0 = False
        none_price_0 = module_2.NonePrice()
        money_0 = none_price_0.times(bool_0)
        var_0 = money_0.__round__()
        int_0 = -3072
        list_0 = [var_0, int_0, var_0]
        some_money_0 = module_2.SomeMoney(*list_0)
        bool_1 = some_money_0.gt(money_0)
        var_1 = None
        money_1 = money_0.__mul__(var_1)
        some_price_0 = module_2.SomePrice(*list_0)
        bool_2 = some_money_0.lt(money_0)
        none_money_0 = module_2.NoneMoney()
        money_2 = none_money_0.positive()
        money_3 = money_1.positive()
        money_4 = some_money_0.add(money_0)
        money_5 = none_money_0.add(money_4)
        money_6 = money_4.subtract(money_5)
        some_price_1 = module_2.SomePrice(*list_0)
        float_0 = some_price_1.as_float()
        money_7 = money_5.__truediv__(var_1)
    except BaseException:
        pass

def test_case_43():
    try:
        bool_0 = False
        none_price_0 = module_2.NonePrice()
        money_0 = none_price_0.times(bool_0)
        var_0 = money_0.__round__()
        int_0 = -3102
        list_0 = [var_0, int_0, var_0]
        some_money_0 = module_2.SomeMoney(*list_0)
        decimal_0 = module_1.Decimal()
        some_price_0 = module_2.SomePrice(*list_0)
        price_0 = some_price_0.abs()
        price_1 = price_0.__add__(price_0)
        bool_1 = some_money_0.lt(money_0)
        money_1 = some_money_0.with_qty(decimal_0)
    except BaseException:
        pass

def test_case_44():
    try:
        int_0 = -3072
        list_0 = [int_0, int_0, int_0]
        str_0 = '$m;Y\ngffL=HNd~K'
        some_price_0 = module_2.SomePrice(*list_0)
        price_0 = some_price_0.abs()
        price_1 = price_0.__add__(price_0)
        bool_0 = some_price_0.gt(price_0)
        bool_1 = some_price_0.lte(price_1)
        currency_0 = None
        bool_2 = price_0.__eq__(str_0)
        price_2 = some_price_0.convert(currency_0)
    except BaseException:
        pass

def test_case_45():
    try:
        bool_0 = False
        none_price_0 = module_2.NonePrice()
        money_0 = none_price_0.times(bool_0)
        var_0 = money_0.__round__()
        int_0 = -3072
        list_0 = [var_0, int_0, var_0]
        some_money_0 = module_2.SomeMoney(*list_0)
        money_1 = some_money_0.subtract(money_0)
        some_price_0 = module_2.SomePrice(*list_0)
        bool_1 = some_money_0.lte(money_1)
        bool_2 = some_money_0.lt(money_0)
        currency_0 = None
        money_2 = money_0.with_ccy(currency_0)
        bool_3 = some_money_0.is_equal(var_0)
        none_money_0 = module_2.NoneMoney()
        money_3 = some_money_0.add(money_2)
        none_money_1 = module_2.NoneMoney()
        bool_4 = some_money_0.lt(money_3)
        var_1 = None
        money_4 = some_money_0.scalar_subtract(var_1)
    except BaseException:
        pass

def test_case_46():
    try:
        bool_0 = False
        none_price_0 = module_2.NonePrice()
        money_0 = none_price_0.times(bool_0)
        var_0 = money_0.__round__()
        int_0 = -3104
        list_0 = [var_0, int_0, var_0]
        some_money_0 = module_2.SomeMoney(*list_0)
        str_0 = '$m;Y\ngffL=HNd~K'
        bool_1 = some_money_0.gt(money_0)
        decimal_0 = module_1.Decimal()
        some_price_0 = module_2.SomePrice(*list_0)
        price_0 = none_price_0.positive()
        price_1 = price_0.__add__(price_0)
        bool_2 = some_money_0.lt(money_0)
        bool_3 = some_price_0.gt(price_0)
        currency_0 = None
        none_money_0 = module_2.NoneMoney()
        bool_4 = price_0.__eq__(str_0)
        set_0 = None
        money_1 = none_money_0.scalar_add(set_0)
        float_0 = some_price_0.as_float()
        some_money_1 = module_2.SomeMoney(*list_0)
        money_2 = some_money_0.subtract(money_0)
        price_2 = price_1.positive()
        bool_5 = some_price_0.as_boolean()
        date_0 = None
        price_3 = none_price_0.with_dov(date_0)
        bool_6 = money_2.__gt__(money_2)
        bool_7 = price_0.lt(price_0)
        bool_8 = price_1.__ge__(price_2)
        none_money_1 = module_2.NoneMoney()
        bool_9 = some_money_0.gte(money_2)
        money_3 = some_money_0.add(money_2)
        money_4 = none_money_1.add(money_0)
        price_4 = some_price_0.convert(currency_0, bool_9)
    except BaseException:
        pass

def test_case_47():
    try:
        bool_0 = False
        none_price_0 = module_2.NonePrice()
        money_0 = none_price_0.times(bool_0)
        int_0 = -3080
        list_0 = [int_0, int_0, int_0]
        some_money_0 = module_2.SomeMoney(*list_0)
        bool_1 = some_money_0.gt(money_0)
        var_0 = None
        some_price_0 = module_2.SomePrice(*list_0)
        price_0 = some_price_0.positive()
        price_1 = none_price_0.round()
        some_price_1 = module_2.SomePrice(*list_0)
        price_2 = price_1.__add__(price_1)
        bool_2 = some_money_0.lt(money_0)
        bool_3 = some_price_1.lt(price_2)
        bool_4 = some_price_1.gt(price_0)
        bool_5 = some_price_1.lte(price_1)
        currency_0 = None
        bool_6 = price_2.__eq__(bool_2)
        none_money_0 = module_2.NoneMoney()
        money_1 = money_0.__floordiv__(var_0)
        money_2 = money_0.positive()
        money_3 = some_money_0.add(money_2)
        money_4 = some_money_0.subtract(money_1)
        money_5 = some_money_0.subtract(money_2)
        bool_7 = some_money_0.gte(money_5)
        money_6 = some_money_0.add(money_4)
        price_3 = some_price_1.convert(currency_0)
    except BaseException:
        pass

def test_case_48():
    try:
        bool_0 = True
        none_price_0 = module_2.NonePrice()
        money_0 = none_price_0.times(bool_0)
        int_0 = -3102
        list_0 = [money_0, int_0, money_0]
        decimal_0 = module_1.Decimal()
        some_price_0 = module_2.SomePrice(*list_0)
        price_0 = some_price_0.abs()
        none_price_1 = module_2.NonePrice()
        price_1 = none_price_1.with_qty(decimal_0)
        bool_1 = price_0.lte(price_1)
        price_2 = price_0.__add__(price_0)
        none_money_0 = module_2.NoneMoney()
        money_1 = money_0.scalar_add(money_0)
        price_3 = price_2.__neg__()
        currency_0 = None
        none_money_1 = module_2.NoneMoney()
        money_2 = none_money_1.positive()
        money_3 = money_2.positive()
        int_1 = -342
        money_4 = money_3.round(int_1)
        money_5 = none_money_1.add(money_2)
        money_6 = money_2.subtract(money_2)
        bool_2 = money_4.__bool__()
        some_price_1 = module_2.SomePrice(*list_0)
        float_0 = some_price_1.as_float()
        price_4 = none_price_0.positive()
        some_price_2 = module_2.SomePrice(*list_0)
        price_5 = some_price_2.convert(currency_0)
    except BaseException:
        pass

def test_case_49():
    try:
        list_0 = []
        price_0 = module_2.Price(*list_0)
        price_1 = price_0.__pos__()
        var_0 = price_1.__round__()
    except BaseException:
        pass

def test_case_50():
    try:
        bool_0 = False
        none_price_0 = module_2.NonePrice()
        money_0 = none_price_0.times(bool_0)
        var_0 = money_0.__round__()
        int_0 = -3072
        list_0 = [var_0, int_0, var_0]
        some_money_0 = module_2.SomeMoney(*list_0)
        currency_type_0 = None
        decimal_0 = module_1.Decimal()
        some_price_0 = module_2.SomePrice(*list_0)
        bool_1 = some_money_0.lt(money_0)
        currency_0 = None
        none_money_0 = module_2.NoneMoney()
        money_1 = money_0.with_ccy(currency_0)
        none_money_1 = module_2.NoneMoney()
        money_2 = none_money_1.positive()
        var_1 = None
        money_3 = money_2.positive()
        price_0 = none_price_0.positive()
        money_4 = some_money_0.add(money_2)
        money_5 = some_money_0.add(money_0)
        money_6 = none_money_1.subtract(money_0)
        some_price_1 = module_2.SomePrice(*list_0)
        float_0 = some_price_1.as_float()
        money_7 = money_2.__truediv__(var_1)
        bool_2 = money_4.__eq__(money_5)
        list_1 = [money_2, currency_0, currency_type_0]
        some_price_2 = module_2.SomePrice(*list_1)
        price_1 = some_price_2.convert(currency_0)
    except BaseException:
        pass

def test_case_51():
    try:
        bool_0 = True
        none_price_0 = module_2.NonePrice()
        money_0 = none_price_0.times(bool_0)
        int_0 = -3070
        list_0 = [int_0, int_0, int_0]
        some_money_0 = module_2.SomeMoney(*list_0)
        str_0 = '$mY\nff=HNd~K'
        bool_1 = some_money_0.gt(money_0)
        decimal_0 = module_1.Decimal()
        some_price_0 = module_2.SomePrice(*list_0)
        price_0 = some_price_0.round(int_0)
        price_1 = price_0.__abs__()
        bool_2 = some_money_0.lt(money_0)
        bool_3 = some_price_0.gt(price_0)
        currency_0 = None
        none_money_0 = module_2.NoneMoney()
        bool_4 = price_0.__eq__(str_0)
        set_0 = None
        money_1 = none_money_0.scalar_add(set_0)
        money_2 = some_money_0.subtract(money_0)
        price_2 = none_price_0.with_ccy(currency_0)
        bool_5 = money_2.__gt__(money_2)
        bool_6 = price_1.__ge__(price_2)
        none_money_1 = module_2.NoneMoney()
        bool_7 = some_money_0.gte(money_2)
        var_0 = None
        money_3 = money_1.positive()
        money_4 = some_money_0.add(money_0)
        money_5 = money_2.__abs__()
        money_6 = some_money_0.positive()
        money_7 = money_3.__truediv__(var_0)
        price_3 = price_1.subtract(price_1)
        price_4 = price_1.round(int_0)
        money_8 = some_money_0.floor_divide(var_0)
    except BaseException:
        pass

def test_case_52():
    try:
        bool_0 = False
        none_price_0 = module_2.NonePrice()
        money_0 = none_price_0.times(bool_0)
        var_0 = money_0.__round__()
        int_0 = -3072
        list_0 = [var_0, int_0, var_0]
        some_money_0 = module_2.SomeMoney(*list_0)
        bool_1 = some_money_0.gt(money_0)
        var_1 = None
        money_1 = some_money_0.subtract(money_0)
        some_price_0 = module_2.SomePrice(*list_0)
        price_0 = some_price_0.abs()
        price_1 = price_0.__add__(price_0)
        bool_2 = some_money_0.lte(money_1)
        bool_3 = some_money_0.lt(money_0)
        bool_4 = some_price_0.gt(price_0)
        bool_5 = some_price_0.lte(price_1)
        none_money_0 = module_2.NoneMoney()
        bool_6 = some_money_0.gte(money_1)
        money_2 = none_money_0.floor_divide(var_1)
        price_2 = price_1.__neg__()
        var_2 = price_2.__round__(int_0)
        bool_7 = some_money_0.is_equal(var_0)
        none_money_1 = module_2.NoneMoney()
        money_3 = some_money_0.add(money_2)
        bool_8 = price_2.__ge__(price_0)
        none_money_2 = module_2.NoneMoney()
        bool_9 = price_2.__eq__(some_price_0)
        bool_10 = some_money_0.lt(money_3)
        money_4 = money_2.subtract(money_1)
        price_3 = price_2.subtract(price_2)
        price_4 = price_2.round()
        money_5 = some_money_0.floor_divide(var_1)
    except BaseException:
        pass

def test_case_53():
    try:
        bool_0 = False
        none_price_0 = module_2.NonePrice()
        money_0 = none_price_0.times(bool_0)
        var_0 = money_0.__round__()
        int_0 = -3072
        list_0 = [var_0, int_0, var_0]
        some_money_0 = module_2.SomeMoney(*list_0)
        money_1 = some_money_0.subtract(money_0)
        some_price_0 = module_2.SomePrice(*list_0)
        price_0 = some_price_0.abs()
        price_1 = price_0.__add__(price_0)
        bool_1 = some_money_0.lte(money_1)
        bool_2 = some_money_0.lt(money_0)
        bool_3 = some_price_0.lte(price_1)
        currency_0 = None
        money_2 = money_0.with_ccy(currency_0)
        price_2 = price_1.__neg__()
        bool_4 = some_money_0.is_equal(var_0)
        none_money_0 = module_2.NoneMoney()
        money_3 = some_money_0.add(money_2)
        bool_5 = price_0.__ge__(price_0)
        bool_6 = price_2.__ge__(price_0)
        none_money_1 = module_2.NoneMoney()
        bool_7 = price_2.__eq__(some_price_0)
        bool_8 = some_money_0.lt(money_3)
        price_3 = some_price_0.convert(currency_0)
    except BaseException:
        pass

def test_case_54():
    try:
        bool_0 = False
        none_price_0 = module_2.NonePrice()
        money_0 = none_price_0.times(bool_0)
        var_0 = money_0.__round__()
        int_0 = -3104
        list_0 = [var_0, int_0, var_0]
        some_money_0 = module_2.SomeMoney(*list_0)
        currency_0 = None
        list_1 = [int_0, int_0, money_0]
        monetary_operation_exception_0 = module_2.MonetaryOperationException(*list_1)
        money_1 = some_money_0.convert(currency_0, monetary_operation_exception_0)
    except BaseException:
        pass

def test_case_55():
    try:
        none_price_0 = module_2.NonePrice()
        int_0 = -3104
        list_0 = [int_0, int_0, int_0]
        some_money_0 = module_2.SomeMoney(*list_0)
        str_0 = '$m;Y\ngffL=HNd~K'
        decimal_0 = module_1.Decimal()
        some_price_0 = module_2.SomePrice(*list_0)
        price_0 = some_price_0.round(int_0)
        price_1 = price_0.__add__(price_0)
        bool_0 = some_price_0.gt(price_0)
        currency_0 = None
        none_money_0 = module_2.NoneMoney()
        bool_1 = price_0.__eq__(str_0)
        set_0 = None
        money_0 = none_money_0.scalar_add(set_0)
        bool_2 = price_0.__ge__(price_0)
        float_0 = some_price_0.as_float()
        some_money_1 = module_2.SomeMoney(*list_0)
        money_1 = some_money_0.subtract(money_0)
        price_2 = some_price_0.with_qty(decimal_0)
        bool_3 = some_price_0.as_boolean()
        bool_4 = money_1.__gt__(money_1)
        bool_5 = price_0.lt(price_0)
        price_3 = none_price_0.add(price_2)
        bool_6 = price_1.__ge__(price_2)
        money_2 = some_money_0.convert(currency_0, bool_0)
    except BaseException:
        pass

def test_case_56():
    try:
        bool_0 = False
        none_price_0 = module_2.NonePrice()
        money_0 = none_price_0.times(bool_0)
        var_0 = money_0.__round__()
        int_0 = -3072
        list_0 = [var_0, int_0, var_0]
        some_money_0 = module_2.SomeMoney(*list_0)
        bool_1 = some_money_0.gt(money_0)
        var_1 = None
        money_1 = money_0.__mul__(var_1)
        some_price_0 = module_2.SomePrice(*list_0)
        price_0 = some_price_0.abs()
        price_1 = price_0.__add__(price_0)
        bool_2 = some_money_0.lt(money_0)
        bool_3 = some_price_0.gt(price_0)
        bool_4 = some_price_0.lte(price_1)
        currency_0 = None
        bool_5 = price_0.__eq__(int_0)
        price_2 = price_1.__neg__()
        none_money_0 = module_2.NoneMoney()
        int_1 = price_2.as_integer()
        money_2 = none_money_0.positive()
        money_3 = money_1.positive()
        money_4 = money_3.__abs__()
        money_5 = some_money_0.add(money_4)
        money_6 = money_1.__abs__()
        money_7 = money_1.subtract(money_5)
        some_price_1 = module_2.SomePrice(*list_0)
        float_0 = some_price_0.as_float()
        price_3 = some_price_1.with_ccy(currency_0)
        price_4 = price_3.subtract(price_0)
    except BaseException:
        pass

def test_case_57():
    try:
        bool_0 = False
        none_price_0 = module_2.NonePrice()
        money_0 = none_price_0.times(bool_0)
        var_0 = money_0.__round__()
        int_0 = -3104
        list_0 = [var_0, int_0, var_0]
        some_money_0 = module_2.SomeMoney(*list_0)
        str_0 = '$m;Y\ngffL=HNd~K'
        bool_1 = some_money_0.gt(money_0)
        some_price_0 = module_2.SomePrice(*list_0)
        price_0 = some_price_0.round(int_0)
        money_1 = money_0.subtract(money_0)
        price_1 = price_0.__add__(price_0)
        price_2 = none_price_0.negative()
        bool_2 = price_1.__gt__(price_2)
        none_money_0 = module_2.NoneMoney()
        bool_3 = price_0.__eq__(str_0)
        money_2 = some_money_0.subtract(money_0)
        price_3 = price_1.__neg__()
        none_money_1 = module_2.NoneMoney()
        money_3 = money_2.__neg__()
        money_4 = money_3.positive()
        int_1 = -312
        money_5 = some_money_0.add(money_3)
        money_6 = none_money_0.add(money_3)
        str_1 = 'gu_-&y\x0b\t?Nr'
        currency_type_0 = module_0.CurrencyType.ALTERNATIVE
        decimal_0 = None
        currency_0 = module_0.Currency(str_0, str_1, int_1, currency_type_0, decimal_0, int_1)
        money_7 = money_4.with_ccy(currency_0)
        money_8 = money_2.subtract(money_7)
    except BaseException:
        pass

def test_case_58():
    try:
        bool_0 = False
        none_price_0 = module_2.NonePrice()
        money_0 = none_price_0.times(bool_0)
        var_0 = money_0.__round__()
        int_0 = -3072
        date_0 = None
        price_0 = none_price_0.with_dov(date_0)
        price_1 = none_price_0.add(price_0)
        bool_1 = none_price_0.gte(price_1)
        list_0 = [var_0, int_0, var_0]
        some_money_0 = module_2.SomeMoney(*list_0)
        bool_2 = some_money_0.gt(money_0)
        var_1 = None
        money_1 = money_0.__mul__(var_1)
        some_price_0 = module_2.SomePrice(*list_0)
        price_2 = some_price_0.abs()
        price_3 = price_2.__add__(price_2)
        bool_3 = some_money_0.lt(money_0)
        bool_4 = some_price_0.gt(price_2)
        bool_5 = some_price_0.lte(price_3)
        currency_0 = None
        bool_6 = price_2.__eq__(int_0)
        price_4 = price_3.__neg__()
        none_money_0 = module_2.NoneMoney()
        int_1 = price_2.as_integer()
        money_2 = none_money_0.positive()
        money_3 = money_1.positive()
        money_4 = some_money_0.add(money_0)
        money_5 = money_3.__abs__()
        money_6 = money_4.subtract(money_5)
        price_5 = price_4.subtract(price_4)
        price_6 = price_3.round(int_1)
        bool_7 = False
        price_7 = some_price_0.convert(currency_0, bool_7)
    except BaseException:
        pass

def test_case_59():
    try:
        bool_0 = False
        none_price_0 = module_2.NonePrice()
        money_0 = none_price_0.times(bool_0)
        var_0 = money_0.__round__()
        int_0 = -3104
        list_0 = [var_0, int_0, var_0]
        some_money_0 = module_2.SomeMoney(*list_0)
        str_0 = '$m;Y\ngffL=HNd~K'
        bool_1 = some_money_0.gt(money_0)
        decimal_0 = module_1.Decimal()
        some_price_0 = module_2.SomePrice(*list_0)
        price_0 = some_price_0.round(int_0)
        money_1 = some_money_0.abs()
        price_1 = price_0.__add__(price_0)
        bool_2 = some_money_0.lt(money_0)
        bool_3 = some_price_0.gt(price_0)
        currency_0 = None
        none_money_0 = module_2.NoneMoney()
        bool_4 = price_0.__eq__(str_0)
        money_2 = some_money_0.with_ccy(currency_0)
        price_2 = price_0.abs()
        bool_5 = money_2.__gt__(money_2)
        none_money_1 = module_2.NoneMoney()
        bool_6 = some_money_0.gte(money_0)
        float_0 = price_1.__float__()
        money_3 = money_2.positive()
        money_4 = some_money_0.add(money_3)
    except BaseException:
        pass

def test_case_60():
    try:
        bool_0 = False
        none_price_0 = module_2.NonePrice()
        money_0 = none_price_0.times(bool_0)
        var_0 = money_0.__round__()
        list_0 = [none_price_0, none_price_0, none_price_0]
        some_money_0 = module_2.SomeMoney(*list_0)
        bool_1 = some_money_0.lte(money_0)
        int_0 = -3104
        list_1 = [var_0, int_0, var_0]
        some_money_1 = module_2.SomeMoney(*list_1)
        str_0 = '$m;Y\ngffL=HNd~K'
        bool_2 = some_money_1.gt(money_0)
        decimal_0 = module_1.Decimal()
        some_price_0 = module_2.SomePrice(*list_1)
        price_0 = some_price_0.round(int_0)
        money_1 = some_money_1.abs()
        price_1 = price_0.__add__(price_0)
        bool_3 = some_money_1.lt(money_0)
        bool_4 = some_price_0.gt(price_0)
        currency_0 = None
        none_money_0 = module_2.NoneMoney()
        bool_5 = price_0.__eq__(str_0)
        money_2 = some_money_1.subtract(money_0)
        price_2 = price_0.abs()
        bool_6 = money_2.__gt__(money_2)
        none_money_1 = module_2.NoneMoney()
        bool_7 = some_money_1.gte(money_0)
        money_3 = money_1.divide(bool_1)
        float_0 = price_1.__float__()
        money_4 = some_money_1.add(money_0)
        money_5 = none_money_1.add(money_1)
        money_6 = some_money_1.negative()
        price_3 = price_2.subtract(price_1)
        price_4 = price_0.round()
        price_5 = some_price_0.convert(currency_0)
    except BaseException:
        pass

def test_case_61():
    try:
        bool_0 = False
        none_price_0 = module_2.NonePrice()
        money_0 = none_price_0.times(bool_0)
        var_0 = money_0.__round__()
        int_0 = -3104
        list_0 = [var_0, int_0, var_0]
        some_money_0 = module_2.SomeMoney(*list_0)
        str_0 = '$m;Y\ngffL=HNd~K'
        bool_1 = some_money_0.gt(money_0)
        decimal_0 = module_1.Decimal()
        some_price_0 = module_2.SomePrice(*list_0)
        price_0 = some_price_0.round(int_0)
        price_1 = price_0.__add__(price_0)
        bool_2 = some_money_0.lt(money_0)
        bool_3 = some_price_0.gt(price_0)
        currency_0 = None
        none_money_0 = module_2.NoneMoney()
        bool_4 = price_0.__eq__(str_0)
        money_1 = some_money_0.subtract(money_0)
        price_2 = some_price_0.divide(str_0)
        price_3 = price_0.abs()
        bool_5 = money_1.__gt__(money_1)
        none_money_1 = module_2.NoneMoney()
        bool_6 = some_money_0.gte(money_1)
        money_2 = none_money_0.with_ccy(currency_0)
        money_3 = none_money_0.subtract(money_2)
        money_4 = some_money_0.add(money_2)
        money_5 = money_2.__abs__()
        money_6 = money_2.subtract(money_2)
        price_4 = price_0.subtract(price_1)
        price_5 = price_4.round()
        price_6 = some_price_0.convert(currency_0, none_price_0)
    except BaseException:
        pass

def test_case_62():
    try:
        bool_0 = False
        none_price_0 = module_2.NonePrice()
        money_0 = none_price_0.times(bool_0)
        var_0 = money_0.__round__()
        int_0 = -3104
        list_0 = [var_0, int_0, var_0]
        some_money_0 = module_2.SomeMoney(*list_0)
        str_0 = '$m;Y\ngffL=HNd~K'
        bool_1 = some_money_0.gt(money_0)
        decimal_0 = module_1.Decimal()
        some_price_0 = module_2.SomePrice(*list_0)
        price_0 = some_price_0.round(int_0)
        price_1 = price_0.__add__(price_0)
        bool_2 = some_money_0.lt(money_0)
        bool_3 = some_price_0.gt(price_0)
        none_money_0 = module_2.NoneMoney()
        bool_4 = price_0.__eq__(str_0)
        set_0 = None
        money_1 = none_money_0.scalar_add(set_0)
        float_0 = some_price_0.as_float()
        money_2 = some_money_0.subtract(money_0)
        price_2 = price_1.positive()
        bool_5 = money_2.__gt__(money_2)
        price_3 = price_0.abs()
        bool_6 = price_1.__ge__(price_2)
        none_money_1 = module_2.NoneMoney()
        bool_7 = some_money_0.gte(money_2)
        var_1 = None
        float_1 = some_money_0.as_float()
        money_3 = some_money_0.add(money_2)
        money_4 = none_money_1.add(money_0)
        price_4 = some_price_0.floor_divide(var_1)
    except BaseException:
        pass

def test_case_63():
    try:
        bool_0 = True
        none_price_0 = module_2.NonePrice()
        money_0 = none_price_0.times(bool_0)
        int_0 = -3102
        list_0 = [int_0, int_0, int_0]
        some_money_0 = module_2.SomeMoney(*list_0)
        some_price_0 = module_2.SomePrice(*list_0)
        float_0 = some_money_0.as_float()
        price_0 = some_price_0.abs()
        price_1 = price_0.__add__(price_0)
        bool_1 = some_money_0.lt(money_0)
        bool_2 = some_price_0.gte(price_0)
        bool_3 = some_money_0.gte(money_0)
        bool_4 = price_1.gt(price_0)
        bool_5 = some_money_0.lte(money_0)
        price_2 = price_1.__neg__()
        none_money_0 = module_2.NoneMoney()
        bool_6 = some_price_0.lte(price_2)
        int_1 = price_2.as_integer()
        var_0 = None
        money_1 = some_money_0.add(money_0)
        money_2 = money_0.positive()
        money_3 = some_money_0.add(money_1)
        money_4 = money_1.__abs__()
        money_5 = some_money_0.subtract(money_4)
        price_3 = price_2.subtract(price_2)
        price_4 = price_2.round()
        date_0 = None
        money_6 = money_0.multiply(var_0)
        money_7 = some_money_0.with_dov(date_0)
        price_5 = some_price_0.floor_divide(var_0)
    except BaseException:
        pass

def test_case_64():
    try:
        money_0 = module_2.Money()
        bool_0 = money_0.__gt__(money_0)
        money_1 = money_0.negative()
    except BaseException:
        pass

def test_case_65():
    try:
        money_0 = module_2.Money()
        bool_0 = money_0.__lt__(money_0)
        bool_1 = money_0.gt(money_0)
        none_money_0 = module_2.NoneMoney()
        money_1 = money_0.__abs__()
        money_2 = money_0.abs()
    except BaseException:
        pass

def test_case_66():
    try:
        bool_0 = False
        none_price_0 = module_2.NonePrice()
        money_0 = none_price_0.times(bool_0)
        int_0 = -3102
        list_0 = [int_0, int_0, int_0]
        some_money_0 = module_2.SomeMoney(*list_0)
        some_price_0 = module_2.SomePrice(*list_0)
        price_0 = some_price_0.abs()
        bool_1 = some_money_0.lt(money_0)
        bool_2 = some_price_0.gte(price_0)
        bool_3 = some_money_0.gte(money_0)
        bool_4 = price_0.gt(price_0)
        bool_5 = some_money_0.lte(money_0)
        none_money_0 = module_2.NoneMoney()
        bool_6 = some_price_0.lte(price_0)
        int_1 = price_0.as_integer()
        money_1 = money_0.__abs__()
        money_2 = money_0.subtract(money_1)
        bool_7 = money_1.__gt__(money_2)
        price_1 = module_2.Price()
        price_2 = price_1.subtract(price_0)
    except BaseException:
        pass

def test_case_67():
    try:
        money_0 = module_2.Money()
        currency_type_0 = module_0.CurrencyType.MONEY
        bool_0 = money_0.is_equal(currency_type_0)
    except BaseException:
        pass

def test_case_68():
    try:
        bool_0 = True
        none_price_0 = module_2.NonePrice()
        money_0 = none_price_0.times(bool_0)
        int_0 = -3072
        list_0 = [int_0, int_0, int_0]
        some_money_0 = module_2.SomeMoney(*list_0)
        price_0 = none_price_0.positive()
        str_0 = '$m;Y\ngffL=HNd~K'
        bool_1 = some_money_0.gt(money_0)
        money_1 = some_money_0.subtract(money_0)
        some_price_0 = module_2.SomePrice(*list_0)
        price_1 = some_price_0.abs()
        price_2 = price_1.__add__(price_1)
        bool_2 = some_money_0.lte(money_1)
        bool_3 = some_money_0.lte(money_1)
        bool_4 = some_money_0.lt(money_0)
        date_0 = None
        price_3 = price_1.with_dov(date_0)
        bool_5 = some_price_0.lte(price_3)
        currency_0 = None
        money_2 = money_1.with_ccy(currency_0)
        price_4 = price_3.__neg__()
        bool_6 = some_money_0.is_equal(price_2)
        dict_0 = {str_0: some_price_0}
        none_money_0 = module_2.NoneMoney(**dict_0)
    except BaseException:
        pass

def test_case_69():
    try:
        money_0 = module_2.Money()
        money_1 = money_0.positive()
    except BaseException:
        pass

def test_case_70():
    try:
        list_0 = []
        price_0 = module_2.Price(*list_0)
        price_1 = module_2.Price()
        int_0 = price_1.__int__()
        price_2 = price_1.__floordiv__(int_0)
        bool_0 = price_1.__eq__(price_1)
    except BaseException:
        pass

def test_case_71():
    try:
        price_0 = module_2.Price()
        price_1 = price_0.__abs__()
        var_0 = None
        price_2 = price_0.scalar_subtract(var_0)
    except BaseException:
        pass

def test_case_72():
    try:
        price_0 = module_2.Price()
        var_0 = None
        bool_0 = price_0.is_equal(var_0)
    except BaseException:
        pass

def test_case_73():
    try:
        price_0 = module_2.Price()
        var_0 = price_0.__round__()
    except BaseException:
        pass

def test_case_74():
    try:
        int_0 = -264
        money_0 = module_2.Money()
        money_1 = money_0.round(int_0)
    except BaseException:
        pass

def test_case_75():
    try:
        price_0 = module_2.Price()
        price_1 = price_0.positive()
    except BaseException:
        pass

def test_case_76():
    try:
        price_0 = module_2.Price()
        price_1 = price_0.abs()
    except BaseException:
        pass

def test_case_77():
    try:
        none_money_0 = module_2.NoneMoney()
        int_0 = 12
        money_0 = module_2.Money()
        money_1 = money_0.multiply(int_0)
    except BaseException:
        pass

def test_case_78():
    try:
        none_money_0 = module_2.NoneMoney()
        money_0 = none_money_0.positive()
        price_0 = module_2.Price()
        bool_0 = money_0.__eq__(none_money_0)
        money_1 = money_0.subtract(money_0)
        bool_1 = price_0.__ge__(price_0)
        bool_2 = price_0.__gt__(price_0)
        int_0 = money_1.__int__()
    except BaseException:
        pass

def test_case_79():
    try:
        decimal_0 = module_1.Decimal()
        price_0 = module_2.Price()
        price_1 = price_0.with_qty(decimal_0)
        price_2 = price_0.__neg__()
        price_3 = price_0.divide(decimal_0)
    except BaseException:
        pass

def test_case_80():
    try:
        money_0 = module_2.Money()
        money_1 = money_0.add(money_0)
    except BaseException:
        pass

def test_case_81():
    try:
        none_price_0 = module_2.NonePrice()
        int_0 = -3057
        list_0 = [none_price_0, int_0, int_0]
        some_money_0 = module_2.SomeMoney(*list_0)
        money_0 = some_money_0.abs()
        currency_type_0 = None
        some_price_0 = module_2.SomePrice(*list_0)
        price_0 = module_2.Price()
        price_1 = none_price_0.add(price_0)
        float_0 = price_1.__float__()
        price_2 = some_price_0.abs()
        bool_0 = some_price_0.gte(price_2)
        bool_1 = some_money_0.gte(money_0)
        bool_2 = price_2.gt(price_2)
        none_money_0 = module_2.NoneMoney()
        bool_3 = money_0.__le__(money_0)
        bool_4 = some_price_0.lte(price_2)
        money_1 = some_money_0.add(money_0)
        money_2 = money_1.__abs__()
        bool_5 = price_2.__lt__(price_2)
        money_3 = money_1.subtract(money_1)
        bool_6 = money_2.__gt__(money_2)
        price_3 = price_2.subtract(price_2)
        price_4 = some_price_0.add(price_3)
        money_4 = some_money_0.add(money_0)
        bool_7 = money_3.__lt__(money_3)
        str_0 = 'Lilangeni'
        list_1 = []
        decimal_0 = module_1.Decimal(*list_1)
        currency_0 = module_0.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        price_5 = some_price_0.convert(currency_0, bool_6)
    except BaseException:
        pass

def test_case_82():
    try:
        list_0 = []
        price_0 = module_2.Price(*list_0)
        price_1 = module_2.Price()
        int_0 = price_1.__int__()
        price_2 = price_0.__sub__(price_0)
        bool_0 = price_1.__eq__(price_1)
    except BaseException:
        pass

def test_case_83():
    try:
        none_price_0 = module_2.NonePrice()
        int_0 = -3057
        list_0 = [none_price_0, int_0, int_0]
        some_money_0 = module_2.SomeMoney(*list_0)
        money_0 = some_money_0.negative()
        some_price_0 = module_2.SomePrice(*list_0)
        price_0 = module_2.Price()
        price_1 = none_price_0.add(price_0)
        float_0 = price_1.__float__()
        price_2 = some_price_0.abs()
        bool_0 = some_price_0.gte(price_2)
        bool_1 = some_money_0.gte(money_0)
        bool_2 = price_2.gt(price_2)
        none_money_0 = module_2.NoneMoney()
        bool_3 = money_0.__le__(money_0)
        bool_4 = some_price_0.lte(price_2)
        bool_5 = some_money_0.lte(money_0)
        money_1 = some_money_0.add(money_0)
        money_2 = money_1.__abs__()
        bool_6 = price_2.__lt__(price_2)
        money_3 = money_1.subtract(money_1)
        bool_7 = money_2.__gt__(money_2)
        price_3 = price_2.subtract(price_2)
        var_0 = None
        price_4 = some_price_0.add(price_3)
        money_4 = price_1.times(var_0)
    except BaseException:
        pass

def test_case_84():
    try:
        none_price_0 = module_2.NonePrice()
        int_0 = -3057
        list_0 = [none_price_0, int_0, int_0]
        some_money_0 = module_2.SomeMoney(*list_0)
        money_0 = some_money_0.negative()
        currency_type_0 = None
        some_price_0 = module_2.SomePrice(*list_0)
        price_0 = module_2.Price()
        price_1 = none_price_0.add(price_0)
        float_0 = price_1.__float__()
        price_2 = some_price_0.abs()
        bool_0 = some_price_0.gte(price_2)
        bool_1 = some_money_0.gte(money_0)
        bool_2 = price_2.gt(price_2)
        none_money_0 = module_2.NoneMoney()
        bool_3 = money_0.__le__(money_0)
        bool_4 = some_price_0.lte(price_2)
        var_0 = None
        bool_5 = some_money_0.lte(money_0)
        money_1 = some_money_0.add(money_0)
        money_2 = money_1.__abs__()
        bool_6 = price_2.__lt__(price_2)
        money_3 = money_1.subtract(money_1)
        bool_7 = money_2.__gt__(money_2)
        price_3 = price_2.subtract(price_2)
        price_4 = some_price_0.add(price_3)
        money_4 = some_money_0.add(money_0)
        bool_8 = money_3.__lt__(money_3)
        str_0 = 'Lilangeni'
        list_1 = []
        decimal_0 = module_1.Decimal(*list_1)
        currency_0 = module_0.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        price_5 = price_1.multiply(var_0)
    except BaseException:
        pass

def test_case_85():
    try:
        money_0 = module_2.Money()
        int_0 = money_0.as_integer()
    except BaseException:
        pass

def test_case_86():
    try:
        none_price_0 = module_2.NonePrice()
        int_0 = -3057
        list_0 = [none_price_0, int_0, int_0]
        some_money_0 = module_2.SomeMoney(*list_0)
        money_0 = some_money_0.negative()
        currency_type_0 = None
        some_price_0 = module_2.SomePrice(*list_0)
        price_0 = module_2.Price()
        price_1 = none_price_0.add(price_0)
        float_0 = price_1.__float__()
        price_2 = some_price_0.abs()
        bool_0 = some_price_0.gte(price_2)
        bool_1 = some_money_0.gte(money_0)
        bool_2 = price_2.gt(price_2)
        none_money_0 = module_2.NoneMoney()
        bool_3 = money_0.__le__(money_0)
        bool_4 = some_price_0.lte(price_2)
        bool_5 = some_money_0.lte(money_0)
        money_1 = some_money_0.add(money_0)
        money_2 = money_1.__abs__()
        price_3 = None
        bool_6 = price_0.__lt__(price_3)
        money_3 = money_1.subtract(money_1)
        bool_7 = money_2.__gt__(money_2)
        price_4 = price_2.subtract(price_2)
        price_5 = some_price_0.add(price_4)
        money_4 = some_money_0.add(money_0)
        bool_8 = money_3.__lt__(money_3)
        str_0 = 'Lilangeni'
        list_1 = []
        decimal_0 = module_1.Decimal(*list_1)
        currency_0 = module_0.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        price_6 = some_price_0.convert(currency_0, bool_7)
    except BaseException:
        pass

def test_case_87():
    try:
        monetary_operation_exception_0 = module_2.MonetaryOperationException()
        tuple_0 = (monetary_operation_exception_0,)
        money_0 = module_2.Money()
        money_1 = money_0.scalar_subtract(tuple_0)
    except BaseException:
        pass

def test_case_88():
    try:
        price_0 = module_2.Price()
        str_0 = 'Sw^N9;X%pp6'
        int_0 = 29
        currency_type_0 = module_0.CurrencyType.MONEY
        decimal_0 = module_1.Decimal()
        int_1 = -3069
        currency_0 = module_0.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_1)
        price_1 = price_0.with_ccy(currency_0)
        dict_0 = {str_0: str_0}
        some_price_0 = module_2.SomePrice(**dict_0)
    except BaseException:
        pass