# Automatically generated by Pynguin.
import typed_ast._ast3 as module_0
import py_backwards.transformers.starred_unpacking as module_1
import typed_ast.ast3 as module_2

def test_case_0():
    try:
        list_0 = module_0.List()
        a_s_t_0 = module_0.AST()
        starred_unpacking_transformer_0 = module_1.StarredUnpackingTransformer(a_s_t_0)
        list_1 = starred_unpacking_transformer_0.visit_List(list_0)
    except BaseException:
        pass

def test_case_1():
    try:
        call_0 = module_0.Call()
        a_s_t_0 = module_0.AST()
        starred_unpacking_transformer_0 = module_1.StarredUnpackingTransformer(a_s_t_0)
        call_1 = starred_unpacking_transformer_0.visit_Call(call_0)
    except BaseException:
        pass

def test_case_2():
    try:
        int_0 = 0
        str_0 = 'print(*range(1), *range(3))'
        var_0 = module_2.parse(str_0)
        str_1 = 'print(*(list(range(1)) + list(range(3))))'
        var_1 = module_2.parse(str_1)
        var_2 = var_1.body[int_0]
        var_3 = print(var_2)
        var_4 = None
        starred_unpacking_transformer_0 = module_1.StarredUnpackingTransformer(var_4)
        var_5 = starred_unpacking_transformer_0.visit(var_2)
        var_6 = module_2.dump(var_5)
        a_s_t_0 = None
        var_7 = starred_unpacking_transformer_0.visit(a_s_t_0)
    except BaseException:
        pass