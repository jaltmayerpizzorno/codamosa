# Automatically generated by Pynguin.
import ansible.module_utils.api as module_0

def test_case_0():
    try:
        bytes_0 = b'\x9b\xa0\xc7@'
        int_0 = -4176
        var_0 = module_0.retry_never(int_0)
        bytes_1 = b"\xf2\xe0\xc8\xa4'6\xf5D\x1d\x1e\xe0\x97+\x00"
        var_1 = module_0.retry_with_delays_and_condition(bytes_1)
        var_2 = module_0.retry_never(bytes_0)
        str_0 = '1&Ck3BJ6ied+4c_.X)/&'
        set_0 = {str_0, var_2}
        var_3 = module_0.rate_limit(set_0)
        tuple_0 = None
        var_4 = module_0.retry_argument_spec()
        float_0 = 1152.0
        var_5 = module_0.retry_with_delays_and_condition(tuple_0, float_0)
        bytes_2 = None
        var_6 = module_0.retry_with_delays_and_condition(float_0, bytes_2)
        bool_0 = True
        var_7 = module_0.rate_limit_argument_spec(bool_0)
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = 1294
        var_0 = module_0.retry_argument_spec(int_0)
    except BaseException:
        pass

def test_case_2():
    try:
        var_0 = module_0.retry()
        float_0 = 2234.9789
        var_1 = module_0.basic_auth_argument_spec(float_0)
    except BaseException:
        pass

def test_case_3():
    try:
        int_0 = 1741
        dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
        bool_0 = False
        var_0 = module_0.rate_limit(dict_0, bool_0)
    except BaseException:
        pass