# Automatically generated by Pynguin.
import string_utils.generation as module_0

def test_case_0():
    try:
        int_0 = -1262
        str_0 = module_0.random_string(int_0)
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = -1250
        str_0 = module_0.secure_random_hex(int_0)
    except BaseException:
        pass

def test_case_2():
    try:
        int_0 = 12
        generator_0 = module_0.roman_range(int_0, int_0)
    except BaseException:
        pass

def test_case_3():
    try:
        int_0 = -1630
        generator_0 = module_0.roman_range(int_0)
    except BaseException:
        pass

def test_case_4():
    try:
        int_0 = 2
        generator_0 = module_0.roman_range(int_0)
        var_0 = list(generator_0)
        int_1 = 3
        int_2 = None
        generator_1 = module_0.roman_range(int_0, int_1, int_2)
    except BaseException:
        pass

def test_case_5():
    try:
        int_0 = None
        str_0 = module_0.random_string(int_0)
    except BaseException:
        pass

def test_case_6():
    try:
        int_0 = None
        str_0 = module_0.secure_random_hex(int_0)
    except BaseException:
        pass

def test_case_7():
    try:
        int_0 = 1522
        generator_0 = module_0.roman_range(int_0)
        var_0 = list(generator_0)
        int_1 = 3
        int_2 = -1
        generator_1 = module_0.roman_range(int_0, int_1, int_2)
    except BaseException:
        pass

def test_case_8():
    try:
        int_0 = 4205
        generator_0 = module_0.roman_range(int_0)
    except BaseException:
        pass

def test_case_9():
    try:
        int_0 = 2
        generator_0 = module_0.roman_range(int_0)
        var_0 = list(generator_0)
        int_1 = 3
        generator_1 = module_0.roman_range(int_0, int_1, int_1)
    except BaseException:
        pass