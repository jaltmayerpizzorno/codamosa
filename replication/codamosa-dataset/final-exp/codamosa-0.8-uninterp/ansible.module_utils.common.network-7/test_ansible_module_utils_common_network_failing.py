# Automatically generated by Pynguin.
import ansible.module_utils.common.network as module_0

def test_case_0():
    try:
        dict_0 = None
        var_0 = module_0.to_ipv6_network(dict_0)
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = -139
        var_0 = module_0.to_masklen(int_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'f`jwjg\x0bY@^F'
        var_0 = module_0.to_netmask(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bool_0 = True
        var_0 = module_0.to_netmask(bool_0)
        int_0 = -139
        var_1 = module_0.to_masklen(int_0)
    except BaseException:
        pass

def test_case_4():
    try:
        int_0 = 519
        float_0 = 138.57
        var_0 = module_0.to_subnet(int_0, float_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'SgF@_+h$'
        var_0 = module_0.to_ipv6_network(str_0)
        tuple_0 = ()
        bool_0 = True
        var_1 = module_0.to_subnet(tuple_0, bool_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = '6mdI=reS}Jm'
        var_0 = module_0.to_bits(str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'CGV^27$'
        var_0 = module_0.is_mac(str_0)
        int_0 = -139
        var_1 = module_0.to_masklen(int_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = '<:QUv?/R_uUs4& + hmj'
        set_0 = {str_0}
        var_0 = module_0.to_netmask(set_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = ''
        float_0 = -2807.28
        var_0 = module_0.to_subnet(str_0, float_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = 'SgF@_+h$'
        var_0 = module_0.to_ipv6_network(str_0)
        dict_0 = {}
        var_1 = module_0.to_subnet(dict_0, dict_0)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = 'Sg@_h$'
        var_0 = module_0.to_ipv6_network(str_0)
        str_1 = ''
        var_1 = module_0.is_mac(str_1)
        bool_0 = False
        str_2 = 'O'
        float_0 = 0.2
        var_2 = module_0.to_subnet(str_2, float_0, bool_0)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = '25i5.255.0.0'
        var_0 = module_0.to_masklen(str_0)
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = 'Y'
        var_0 = module_0.to_ipv6_network(str_0)
        str_1 = 'EKQ)o'
        var_1 = module_0.to_ipv6_subnet(str_1)
        str_2 = 'Failed to install service. rc: %s, out: %s, err: %s'
        var_2 = module_0.to_ipv6_subnet(str_2)
        str_3 = 'piDSYi'
        var_3 = module_0.is_masklen(str_3)
        str_4 = '2\x0bCw"8(<R+1@m[~[NMIu'
        set_0 = None
        var_4 = module_0.to_subnet(str_4, set_0)
    except BaseException:
        pass

def test_case_14():
    try:
        str_0 = '55.255..'
        var_0 = module_0.to_masklen(str_0)
    except BaseException:
        pass

def test_case_15():
    try:
        str_0 = 'testing to_subnet'
        var_0 = print(str_0)
        str_1 = '127.0.0.1'
        str_2 = '255.255.255.0'
        var_1 = module_0.to_subnet(str_1, str_2)
        str_3 = '24'
        var_2 = module_0.to_subnet(str_1, str_3)
        str_4 = '192.168.0.1'
        bool_0 = True
        var_3 = module_0.to_subnet(str_4, str_2, bool_0)
        str_5 = '192.168.1.1'
        str_6 = '255.255.0.0'
        var_4 = module_0.to_subnet(str_5, str_6)
        var_5 = module_0.to_ipv6_network(bool_0)
    except BaseException:
        pass

def test_case_16():
    try:
        str_0 = '255.255..'
        var_0 = module_0.to_masklen(str_0)
    except BaseException:
        pass