# Automatically generated by Pynguin.
import ansible.parsing.splitter as module_0

def test_case_0():
    pass

def test_case_1():
    str_0 = '5?A .m{/%\\u'
    var_0 = module_0.parse_kv(str_0)

def test_case_2():
    str_0 = "a=b c='d e' f=g"
    var_0 = module_0.parse_kv(str_0)

def test_case_3():
    str_0 = '/\nxAuh_f}{'
    var_0 = module_0.parse_kv(str_0)

def test_case_4():
    bool_0 = None
    list_0 = [bool_0]
    var_0 = module_0.parse_kv(bool_0, list_0)

def test_case_5():
    str_0 = '*cho {{ foo }} "{{ bar }}"'
    var_0 = module_0.parse_kv(str_0)

def test_case_6():
    str_0 = 'foo=bar \\ --baz'
    var_0 = module_0.split_args(str_0)
    var_1 = module_0.split_args(str_0)
    str_1 = 'foo="{{ bar }}"'
    var_2 = module_0.split_args(str_1)
    str_2 = 'foo="{{ bar }} \\" "'
    var_3 = module_0.split_args(str_2)

def test_case_7():
    str_0 = 'foo="bar\nbaz" fiz=biz'
    var_0 = module_0.parse_kv(str_0)

def test_case_8():
    str_0 = 'foo=bar \\ --baz'
    var_0 = module_0.split_args(str_0)
    var_1 = module_0.split_args(str_0)
    str_1 = 'foo="{{ bar }}"'
    var_2 = module_0.split_args(str_1)

def test_case_9():
    str_0 = 'key value with space'
    var_0 = module_0.parse_kv(str_0)
    str_1 = 'key "value with space"'
    var_1 = module_0.parse_kv(str_1)
    str_2 = 'key=value val=value'
    var_2 = module_0.parse_kv(str_2)
    str_3 = 'key=value val\\=ue'
    var_3 = module_0.parse_kv(str_3)
    str_4 = 'key=\'value\' val="value"'
    var_4 = module_0.parse_kv(str_4)

def test_case_10():
    str_0 = 'foo=bar baz=qux biz="boz"'
    bool_0 = True
    var_0 = module_0.parse_kv(str_0, bool_0)

def test_case_11():
    str_0 = 'a=b c=\'d e\' f="g h" i=\\"j k\\"'
    var_0 = module_0.parse_kv(str_0)
    var_1 = print(var_0)