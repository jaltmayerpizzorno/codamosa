# Automatically generated by Pynguin.
import pymonet.lazy as module_0

def test_case_0():
    try:
        bytes_0 = b'\xb0\xdf"R\xd6\x0eR,\xa2\xb3\xeaFa\xa6H?\xe3'
        lazy_0 = module_0.Lazy(bytes_0)
        var_0 = lazy_0.to_box()
    except BaseException:
        pass

def test_case_1():
    try:
        callable_0 = None
        lazy_0 = module_0.Lazy(callable_0)
        int_0 = -586
        var_0 = lazy_0.ap(int_0)
        var_1 = lazy_0.to_maybe()
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b'\x13\x1f\xe2\x7f\x90\xa5\\\x11\xa0\x88-\xc08\xcd\xe7A\xe8se'
        list_0 = [bytes_0, bytes_0, bytes_0]
        int_0 = 228
        lazy_0 = module_0.Lazy(int_0)
        var_0 = lazy_0.bind(list_0)
        tuple_0 = (bytes_0,)
        lazy_1 = module_0.Lazy(tuple_0)
        str_0 = lazy_1.__str__()
        var_1 = lazy_1.to_maybe(*list_0)
    except BaseException:
        pass

def test_case_3():
    try:
        float_0 = -265.15978
        lazy_0 = module_0.Lazy(float_0)
        var_0 = lazy_0.to_either()
    except BaseException:
        pass

def test_case_4():
    try:
        int_0 = 10
        lazy_0 = module_0.Lazy(int_0)
        var_0 = lazy_0.to_maybe()
    except BaseException:
        pass

def test_case_5():
    try:
        int_0 = -631
        lazy_0 = module_0.Lazy(int_0)
        var_0 = lazy_0.to_validation()
    except BaseException:
        pass

def test_case_6():
    try:
        var_0 = lambda x: x
        lazy_0 = module_0.Lazy(var_0)
        list_0 = [var_0]
        var_1 = lazy_0.get(*list_0)
        lazy_1 = module_0.Lazy(list_0)
        var_2 = lazy_0 == lazy_1
        var_3 = lambda x: x
        lazy_2 = module_0.Lazy(var_3)
        list_1 = None
        var_4 = lazy_1.get(*list_1)
    except BaseException:
        pass