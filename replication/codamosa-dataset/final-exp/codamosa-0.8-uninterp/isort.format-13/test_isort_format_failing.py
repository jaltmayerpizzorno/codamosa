# Automatically generated by Pynguin.
import isort.format as module_0
import typing as module_1
import pathlib as module_2

def test_case_0():
    try:
        str_0 = ''
        basic_printer_0 = module_0.BasicPrinter()
        basic_printer_0.error(str_0)
        str_1 = module_0.format_natural(str_0)
        basic_printer_1 = module_0.BasicPrinter()
        bool_0 = True
        var_0 = module_0.create_terminal_printer(bool_0)
        bool_1 = module_0.ask_whether_to_apply_changes_to_file(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        basic_printer_0 = module_0.BasicPrinter()
        str_0 = 'remove_redundant_aliases'
        basic_printer_0.error(str_0)
        str_1 = 'T\n`\x0b].h0yaBR$d/'
        str_2 = module_0.format_simplified(str_1)
        str_3 = module_0.format_natural(str_1)
        basic_printer_1 = module_0.BasicPrinter()
        bool_0 = True
        text_i_o_0 = module_1.TextIO()
        var_0 = module_0.create_terminal_printer(bool_0, text_i_o_0)
        colorama_printer_0 = module_0.ColoramaPrinter(text_i_o_0)
        str_4 = 'ext_format'
        str_5 = colorama_printer_0.style_text(str_4)
        str_6 = "w?gO\rl_'/\x0c%6o6"
        basic_printer_0.diff_line(str_6)
        str_7 = "YjiJ3&sy3bm T)'ZTi5"
        bool_1 = module_0.ask_whether_to_apply_changes_to_file(str_7)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'c=\n'
        bool_0 = module_0.ask_whether_to_apply_changes_to_file(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'zt\r #!.'
        bool_0 = True
        colorama_printer_0 = module_0.ColoramaPrinter(bool_0)
        colorama_printer_0.diff_line(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = '{UOl$2t8^$yj'
        str_1 = '/r]'
        str_2 = 'H'
        path_0 = module_2.Path()
        bool_0 = True
        var_0 = module_0.show_unified_diff(file_input=str_1, file_output=str_2, file_path=path_0, color_output=bool_0)
        basic_printer_0 = module_0.BasicPrinter()
        basic_printer_0.diff_line(str_0)
        str_3 = '_eLdi$}sr&]ft2y t'
        basic_printer_1 = module_0.BasicPrinter()
        bool_1 = module_0.ask_whether_to_apply_changes_to_file(str_3)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'kDu-AER2[@j\x0bv<\x0b;6N.\x0b'
        str_1 = module_0.format_natural(str_0)
        str_2 = 'v'
        str_3 = module_0.remove_whitespace(str_2)
        colorama_printer_0 = module_0.ColoramaPrinter()
        colorama_printer_0.diff_line(str_2)
        str_4 = colorama_printer_0.style_text(str_1)
        str_5 = 'dr4ZY\\EZ"eFDm|DvJ\x0b\ni'
        str_6 = colorama_printer_0.style_text(str_3, str_5)
        colorama_printer_1 = module_0.ColoramaPrinter()
        str_7 = '<~U#a='
        str_8 = colorama_printer_0.style_text(str_7, str_7)
        colorama_printer_0.diff_line(str_2)
        str_9 = colorama_printer_0.style_text(str_1, str_1)
        str_10 = module_0.format_simplified(str_2)
        str_11 = ' if unsure.\n\nSee: https://pycqa.github.io/isort/#custom-sections-and-ordering.'
        path_0 = None
        str_12 = colorama_printer_1.style_text(str_11)
        colorama_printer_2 = module_0.ColoramaPrinter()
        str_13 = colorama_printer_1.style_text(str_2)
        var_0 = module_0.show_unified_diff(file_input=str_2, file_output=str_11, file_path=path_0)
        list_0 = [str_6, str_13]
        text_i_o_0 = module_1.TextIO(*list_0)
    except BaseException:
        pass

def test_case_6():
    try:
        basic_printer_0 = module_0.BasicPrinter()
        str_0 = "{;`S7}Gu|j\\\n{TM\r4\\'0"
        str_1 = module_0.format_simplified(str_0)
        str_2 = module_0.format_natural(str_0)
        basic_printer_1 = module_0.BasicPrinter()
        bool_0 = True
        var_0 = module_0.create_terminal_printer(bool_0)
        str_3 = 'J\\EV]#ukI?Dpv%;C'
        basic_printer_1.diff_line(str_0)
        colorama_printer_0 = module_0.ColoramaPrinter()
        str_4 = module_0.format_natural(str_2)
        basic_printer_0.success(str_4)
        basic_printer_0.error(str_0)
        colorama_printer_0.diff_line(str_3)
        bool_1 = module_0.ask_whether_to_apply_changes_to_file(str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        basic_printer_0 = module_0.BasicPrinter()
        str_0 = 'remove_redundant_aliases'
        basic_printer_0.error(str_0)
        str_1 = 'T\n`\x0b].h0yaBR$d/'
        str_2 = module_0.format_simplified(str_1)
        str_3 = module_0.format_natural(str_1)
        bool_0 = True
        text_i_o_0 = module_1.TextIO()
        var_0 = module_0.create_terminal_printer(bool_0, text_i_o_0)
        colorama_printer_0 = module_0.ColoramaPrinter(text_i_o_0)
        str_4 = 'ext_format'
        str_5 = colorama_printer_0.style_text(str_4)
        str_6 = "w?gO\rl_'/\x0c%6o6"
        basic_printer_0.diff_line(str_6)
        colorama_printer_1 = module_0.ColoramaPrinter()
        basic_printer_1 = module_0.BasicPrinter()
        str_7 = module_0.format_natural(str_3)
        str_8 = 'iC/Q\t@@%T)'
        basic_printer_0.error(str_8)
        basic_printer_2 = module_0.BasicPrinter(text_i_o_0)
        basic_printer_2.success(str_2)
        colorama_printer_0.diff_line(str_1)
        str_9 = 'zKl#g3-'
        bool_1 = module_0.ask_whether_to_apply_changes_to_file(str_9)
    except BaseException:
        pass