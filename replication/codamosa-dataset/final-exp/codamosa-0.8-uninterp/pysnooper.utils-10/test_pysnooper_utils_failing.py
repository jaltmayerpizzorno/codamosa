# Automatically generated by Pynguin.
import pysnooper.utils as module_0

def test_case_0():
    try:
        bool_0 = False
        var_0 = module_0.shitcode(bool_0)
    except BaseException:
        pass

def test_case_1():
    try:
        dict_0 = {}
        var_0 = module_0.normalize_repr(dict_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'TrMOr\x0bsUM'
        dict_0 = {str_0: str_0, str_0: str_0}
        list_0 = []
        bytes_0 = b'\xc6>\xa42\xaa\xa0\xea\x8e\xcd\xf5\xde\xcf\xa2'
        var_0 = module_0.get_shortish_repr(dict_0, list_0, bytes_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'TrMOr\x0bsUM'
        set_0 = {str_0, str_0}
        int_0 = 18
        var_0 = module_0.truncate(set_0, int_0)
        dict_0 = {str_0: str_0, str_0: str_0}
        list_0 = []
        bytes_0 = b'\xc6>\xa42\xaa\xa0\xea\x8e\xcd\xf5\xde\xcf\xa2'
        var_1 = module_0.get_shortish_repr(dict_0, list_0, bytes_0)
    except BaseException:
        pass

def test_case_4():
    try:
        bytes_0 = b'D\x9a\x14'
        str_0 = 'b}B\r<4fyLdE.'
        var_0 = module_0.truncate(bytes_0, str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        float_0 = None
        list_0 = [float_0, float_0, float_0]
        int_0 = -3089
        var_0 = module_0.truncate(list_0, int_0)
        var_1 = module_0.shitcode(float_0)
    except BaseException:
        pass

def test_case_6():
    try:
        int_0 = 2
        var_0 = module_0.ensure_tuple(int_0)
        writable_stream_0 = module_0.WritableStream()
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'path'
        set_0 = {str_0}
        var_0 = module_0.get_repr_function(str_0, set_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = '__slots__'
        var_0 = module_0.ensure_tuple(str_0)
        set_0 = None
        tuple_0 = ()
        var_1 = module_0.shitcode(tuple_0)
        float_0 = 1034.2951
        var_2 = module_0.get_shortish_repr(set_0, float_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'hello, world!'
        bool_0 = True
        dict_0 = {bool_0: str_0, str_0: str_0, str_0: str_0, bool_0: bool_0}
        list_0 = [dict_0]
        var_0 = module_0.get_repr_function(bool_0, list_0)
    except BaseException:
        pass

def test_case_10():
    try:
        tuple_0 = None
        bytes_0 = b'\xd6\x07@\xf84>+\xca\xbb\x88\x88\xb8\xfbX'
        list_0 = []
        dict_0 = {}
        list_1 = [list_0, tuple_0]
        var_0 = module_0.ensure_tuple(dict_0)
        var_1 = module_0.get_shortish_repr(bytes_0, list_0, dict_0, list_1)
        writable_stream_0 = module_0.WritableStream()
    except BaseException:
        pass