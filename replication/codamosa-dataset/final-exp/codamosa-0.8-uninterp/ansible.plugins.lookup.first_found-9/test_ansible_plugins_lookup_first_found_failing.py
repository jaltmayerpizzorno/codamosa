# Automatically generated by Pynguin.
import ansible.plugins.lookup.first_found as module_0

def test_case_0():
    try:
        str_0 = '"jw99ArC_kNxKMZ1!HAk'
        list_0 = [str_0, str_0]
        list_1 = [list_0, str_0]
        lookup_module_0 = module_0.LookupModule(list_0)
        var_0 = lookup_module_0.run(list_1, lookup_module_0)
    except BaseException:
        pass

def test_case_1():
    try:
        lookup_module_0 = module_0.LookupModule()
        var_0 = []
        var_1 = lookup_module_0.run(var_0, lookup_module_0)
    except BaseException:
        pass

def test_case_2():
    try:
        lookup_module_0 = module_0.LookupModule()
        int_0 = -3452
        bytes_0 = b'\x84\x9e\xd8\xaa\xde?\x8a\x81\xf3q\xea\x1aNr\xe2'
        tuple_0 = (int_0, bytes_0)
        lookup_module_1 = module_0.LookupModule()
        bytes_1 = b'\xa0\x0c~Nt\x1dq\x99\xdb-\xd6I\x80\x07?\x9c\x1c\x0e'
        var_0 = lookup_module_0.run(tuple_0, bytes_1)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'aUEETbeJ/P3s[/'
        list_0 = [str_0, str_0, str_0]
        dict_0 = {}
        lookup_module_0 = module_0.LookupModule()
        var_0 = lookup_module_0.run(str_0, list_0, **dict_0)
    except BaseException:
        pass

def test_case_4():
    try:
        int_0 = -127
        bool_0 = None
        dict_0 = {int_0: int_0, bool_0: int_0, int_0: int_0, bool_0: bool_0}
        list_0 = [dict_0, int_0, int_0]
        float_0 = None
        str_0 = '--src-range'
        str_1 = '}x(Ag@nM'
        dict_1 = {str_0: str_1, str_0: dict_0}
        str_2 = '9^!<2\tF/bRxQ'
        str_3 = '{5nV}&)<sR`wdGS\rq[t'
        dict_2 = {str_2: str_2, str_3: str_2}
        lookup_module_0 = module_0.LookupModule(**dict_2)
        var_0 = lookup_module_0.run(list_0, float_0, **dict_1)
    except BaseException:
        pass

def test_case_5():
    try:
        list_0 = []
        list_1 = [list_0]
        int_0 = 973
        lookup_module_0 = module_0.LookupModule()
        var_0 = lookup_module_0.run(list_1, int_0)
    except BaseException:
        pass