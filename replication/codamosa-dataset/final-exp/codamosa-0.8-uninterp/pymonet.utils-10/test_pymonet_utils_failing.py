# Automatically generated by Pynguin.
import pymonet.utils as module_0

def test_case_0():
    try:
        var_0 = module_0.fn()
    except BaseException:
        pass

def test_case_1():
    try:
        var_0 = None
        var_1 = module_0.identity(var_0)
        list_0 = [var_1]
        var_2 = module_0.fn(*list_0)
    except BaseException:
        pass

def test_case_2():
    try:
        callable_0 = None
        callable_1 = module_0.memoize(callable_0)
        list_0 = [callable_1]
        var_0 = module_0.compose(callable_0, *list_0)
    except BaseException:
        pass

def test_case_3():
    try:
        callable_0 = None
        callable_1 = module_0.memoize(callable_0)
        callable_2 = module_0.memoize(callable_1)
        list_0 = [callable_2]
        list_1 = [list_0, callable_2]
        bool_0 = False
        int_0 = 1102
        var_0 = module_0.curry(bool_0, int_0)
        var_1 = module_0.compose(callable_0, *list_1)
    except BaseException:
        pass

def test_case_4():
    try:
        int_0 = 386
        int_1 = module_0.increase(int_0)
        callable_0 = None
        callable_1 = module_0.memoize(callable_0)
        callable_2 = module_0.memoize(callable_1)
        list_0 = [callable_2, callable_1, callable_0]
        var_0 = module_0.pipe(list_0, *list_0)
    except BaseException:
        pass