# Automatically generated by Pynguin.
import youtube_dl.downloader.f4m as module_0
import youtube_dl.compat as module_1

def test_case_0():
    try:
        flv_reader_0 = module_0.FlvReader()
        var_0 = flv_reader_0.read_bootstrap_info()
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = b'\x00\x00\x00\x17asrt\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x02'
        list_0 = [bytes_0]
        flv_reader_0 = module_0.FlvReader(*list_0)
        var_0 = flv_reader_0.read_afrt()
        var_1 = flv_reader_0.read_bootstrap_info()
    except BaseException:
        pass

def test_case_2():
    try:
        flv_reader_0 = module_0.FlvReader()
        var_0 = flv_reader_0.read_abst()
    except BaseException:
        pass

def test_case_3():
    try:
        flv_reader_0 = module_0.FlvReader()
        var_0 = flv_reader_0.read_asrt()
    except BaseException:
        pass

def test_case_4():
    try:
        bytes_0 = b'\xb7\xdb\x15\x9e\x9b\xfdk\x9b\x92\x18(r\xc3r\xfeg\xb3\x1a'
        var_0 = module_0.read_bootstrap_info(bytes_0)
    except BaseException:
        pass

def test_case_5():
    try:
        list_0 = None
        bool_0 = False
        var_0 = module_0.write_unsigned_int(list_0, bool_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = None
        dict_0 = {str_0: str_0}
        data_truncated_error_0 = module_0.DataTruncatedError()
        var_0 = module_0.write_unsigned_int_24(dict_0, data_truncated_error_0)
    except BaseException:
        pass

def test_case_7():
    try:
        flv_reader_0 = module_0.FlvReader()
        var_0 = module_0.write_flv_header(flv_reader_0)
        bytes_0 = b'\xe8\x02\xe5\x88x]8\xd0\xb3\xf2\x82'
        list_0 = [var_0, var_0, var_0]
        var_1 = module_0.write_metadata_tag(bytes_0, list_0)
    except BaseException:
        pass

def test_case_8():
    try:
        flv_reader_0 = module_0.FlvReader()
        list_0 = [flv_reader_0, flv_reader_0, flv_reader_0, flv_reader_0]
        var_0 = module_0.write_metadata_tag(flv_reader_0, list_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = '<manifest xmlns="http://ns.adobe.comf4m/.0">  <baseURL>http://example.com/dir1/dir2/</baseURL></manifest>'
        var_0 = module_1.compat_etree_fromstring(str_0)
        list_0 = [var_0, str_0]
        var_1 = module_0.remove_encrypted_media(list_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = 'vTA\x0c~jT&]Mu\tcjzA'
        var_0 = module_0.get_base_url(str_0)
    except BaseException:
        pass

def test_case_11():
    try:
        bytes_0 = b'\x00\x00\x00\x17asrt\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x02'
        list_0 = [bytes_0]
        flv_reader_0 = module_0.FlvReader(*list_0)
        var_0 = flv_reader_0.read_afrt()
        var_1 = flv_reader_0.read_asrt()
        bool_0 = None
        bytes_1 = b'\xc0[\xa4\x85FA~\x1e\x9d\xf1\x9c\xb7\xd0\x83nb\xc64\r'
        f4m_f_d_0 = module_0.F4mFD(bytes_0, bytes_1)
        var_2 = f4m_f_d_0.real_download(bytes_1, bool_0)
    except BaseException:
        pass

def test_case_12():
    try:
        bytes_0 = b'\x00\x00\x00\x17asrt\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x02'
        list_0 = [bytes_0]
        flv_reader_0 = module_0.FlvReader(*list_0)
        var_0 = flv_reader_0.read_string()
        var_1 = flv_reader_0.read_bootstrap_info()
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = '<manifest xmlns="http://ns.adobe.comf4m/.0">  <baseURL>http://example.com/dir1/dir2/</baseURL></manifest>'
        var_0 = module_1.compat_etree_fromstring(str_0)
        list_0 = []
        flv_reader_0 = None
        var_1 = module_0.write_metadata_tag(list_0, flv_reader_0)
        var_2 = module_0.get_base_url(var_0)
        str_1 = 'http://www.nbcnews.com/nightly-news/video/nightly-news-with-brian-williams-full-broadcast-february-4-394064451844'
        data_truncated_error_0 = module_0.DataTruncatedError()
        list_1 = [var_0, str_1]
        var_3 = module_0.remove_encrypted_media(list_1)
    except BaseException:
        pass

def test_case_14():
    try:
        dict_0 = {}
        var_0 = module_0.build_fragments_list(dict_0)
    except BaseException:
        pass

def test_case_15():
    try:
        bytes_0 = b'\x00\x00\x00\x17asrt\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x02'
        list_0 = [bytes_0]
        flv_reader_0 = module_0.FlvReader(*list_0)
        var_0 = flv_reader_0.read_asrt()
    except BaseException:
        pass

def test_case_16():
    try:
        bytes_0 = b'\x11\xfb#\x128\r\xbc\x91\xbf\xa0g\xaer\xe4*5'
        list_0 = [bytes_0]
        flv_reader_0 = module_0.FlvReader(*list_0)
        var_0 = flv_reader_0.read_afrt()
    except BaseException:
        pass

def test_case_17():
    try:
        bytes_0 = b'\x00\x00\x00\x17asrt\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x02'
        list_0 = [bytes_0]
        flv_reader_0 = module_0.FlvReader(*list_0)
        var_0 = flv_reader_0.read_abst()
    except BaseException:
        pass

def test_case_18():
    try:
        str_0 = '<manifest xmlns="http://ns.adobe.comf4m/.0">  <baseURL>http://example.com/dir1/dir2/</baseURL></manifest>'
        var_0 = module_1.compat_etree_fromstring(str_0)
        var_1 = module_0.get_base_url(var_0)
        str_1 = 'http://www.nbcnews.com/nightly-news/video/nightly-news-with-brian-williams-full-broadcast-february-4-394064451844'
        var_2 = module_1.compat_etree_fromstring(str_1)
    except BaseException:
        pass

def test_case_19():
    try:
        bytes_0 = b'\x00\x00\x00\x17asrt\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x02'
        list_0 = [bytes_0]
        flv_reader_0 = module_0.FlvReader(*list_0)
        var_0 = flv_reader_0.read_bootstrap_info()
    except BaseException:
        pass

def test_case_20():
    try:
        bytes_0 = b'\x00\x00\x00\x17asrt\x00)\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x02'
        list_0 = [bytes_0]
        flv_reader_0 = module_0.FlvReader(*list_0)
        var_0 = flv_reader_0.read_afrt()
    except BaseException:
        pass

def test_case_21():
    try:
        bytes_0 = b'\x00\x00\x17srt\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x02'
        list_0 = [bytes_0]
        flv_reader_0 = module_0.FlvReader(*list_0)
        var_0 = flv_reader_0.read_afrt()
        var_1 = flv_reader_0.read_asrt()
    except BaseException:
        pass