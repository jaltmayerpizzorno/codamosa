# Automatically generated by Pynguin.
import pytutils.trees as module_0

def test_case_0():
    try:
        int_0 = -3238
        bytes_0 = b'\xf4oe\x9d\xfc'
        list_0 = []
        tree_0 = module_0.Tree(list_0)
        var_0 = tree_0.__setitem__(tree_0, int_0, bytes_0)
    except BaseException:
        pass

def test_case_1():
    try:
        tree_0 = module_0.Tree()
        float_0 = 422.9
        var_0 = tree_0.__getitem__(float_0)
    except BaseException:
        pass

def test_case_2():
    try:
        tree_0 = module_0.Tree()
        bytes_0 = b'\x9a/|\x03\xa4'
        var_0 = tree_0.__setitem__(bytes_0, tree_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bool_0 = False
        registry_tree_0 = module_0.RegistryTree(bool_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = "Return a member from the proxied regex object.\n\n        If the regex hasn't been compiled yet, compile it\n        "
        set_0 = set()
        bool_0 = True
        tree_0 = module_0.Tree(str_0, set_0, bool_0)
    except BaseException:
        pass

def test_case_5():
    try:
        int_0 = 3475
        list_0 = [int_0, int_0, int_0]
        str_0 = '85kY]ZU\rb/weK\x0b'
        tuple_0 = None
        bytes_0 = b'\xd6G\x80\xd3~'
        var_0 = module_0.get_tree_node(list_0, str_0, tuple_0, bytes_0)
    except BaseException:
        pass