# Automatically generated by Pynguin.
import ansible.module_utils.common.arg_spec as module_0

def test_case_0():
    pass

def test_case_1():
    str_0 = 'LhG9WE,uQ:hqKtl<X;'
    validation_result_0 = module_0.ValidationResult(str_0)

def test_case_2():
    dict_0 = {}
    list_0 = [dict_0, dict_0, dict_0, dict_0]
    module_argument_spec_validator_0 = module_0.ModuleArgumentSpecValidator(*list_0)

def test_case_3():
    str_0 = 'name'
    str_1 = 'type'
    str_2 = 'str'
    str_3 = {str_1: str_2}
    str_4 = {str_0: str_3}
    argument_spec_validator_0 = module_0.ArgumentSpecValidator(str_4)

def test_case_4():
    dict_0 = {}
    str_0 = '(B-'
    list_0 = [dict_0, str_0, dict_0, str_0]
    argument_spec_validator_0 = module_0.ArgumentSpecValidator(dict_0, list_0)
    var_0 = argument_spec_validator_0.validate(dict_0, *list_0)

def test_case_5():
    dict_0 = {}
    list_0 = [dict_0, dict_0, dict_0, dict_0]
    module_argument_spec_validator_0 = module_0.ModuleArgumentSpecValidator(*list_0)
    str_0 = '7Br'
    dict_1 = {str_0: module_argument_spec_validator_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_argument_spec_validator_0.validate(dict_1)

def test_case_6():
    dict_0 = {}
    str_0 = '(B-'
    list_0 = [dict_0, str_0]
    list_1 = [dict_0, str_0, dict_0, str_0, dict_0, list_0]
    argument_spec_validator_0 = module_0.ArgumentSpecValidator(dict_0, list_1)
    var_0 = argument_spec_validator_0.validate(dict_0, *list_0)

def test_case_7():
    str_0 = 'req_param'
    str_1 = 'required'
    str_2 = 'type'
    bool_0 = True
    str_3 = 'str'
    var_0 = {str_1: bool_0, str_2: str_3}
    var_1 = {str_0: var_0, str_2: var_0}
    str_4 = 'hi'
    str_5 = {str_4: str_4}
    argument_spec_validator_0 = module_0.ArgumentSpecValidator(var_1)
    var_2 = argument_spec_validator_0.validate(str_5)

def test_case_8():
    str_0 = 'age'
    str_1 = 'type'
    str_2 = 'str'
    str_3 = {str_1: str_2}
    str_4 = 'int'
    str_5 = {str_1: str_4}
    str_6 = {str_4: str_3, str_0: str_5}
    str_7 = 'bo'
    str_8 = '42'
    str_9 = {str_8: str_7, str_0: str_8}
    argument_spec_validator_0 = module_0.ArgumentSpecValidator(str_6)
    var_0 = argument_spec_validator_0.validate(str_9)
    var_1 = var_0.error_messages
    var_2 = var_0.validated_parameters