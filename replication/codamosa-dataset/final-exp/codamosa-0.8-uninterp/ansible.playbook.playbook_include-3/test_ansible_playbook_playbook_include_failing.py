# Automatically generated by Pynguin.
import ansible.playbook.playbook_include as module_0
import ansible.parsing.yaml.objects as module_1

def test_case_0():
    try:
        bool_0 = True
        float_0 = 1904.911
        playbook_include_0 = module_0.PlaybookInclude()
        var_0 = playbook_include_0.load(bool_0, float_0)
    except BaseException:
        pass

def test_case_1():
    try:
        playbook_include_0 = module_0.PlaybookInclude()
        str_0 = '28>D;nW3B'
        dict_0 = {playbook_include_0: playbook_include_0, str_0: playbook_include_0, playbook_include_0: str_0, playbook_include_0: playbook_include_0}
        var_0 = playbook_include_0.load_data(dict_0, str_0, dict_0)
    except BaseException:
        pass

def test_case_2():
    try:
        playbook_include_0 = module_0.PlaybookInclude()
        var_0 = {}
        var_1 = playbook_include_0.load_data(var_0, var_0)
    except BaseException:
        pass

def test_case_3():
    try:
        playbook_include_0 = module_0.PlaybookInclude()
        str_0 = 'import_playbook'
        str_1 = {str_0: str_0, str_0: str_0}
        var_0 = playbook_include_0.load_data(str_1, str_0, playbook_include_0)
    except BaseException:
        pass

def test_case_4():
    try:
        playbook_include_0 = module_0.PlaybookInclude()
        str_0 = 'vars'
        str_1 = {}
        str_2 = {str_0: str_1, str_0: str_1}
        var_0 = playbook_include_0.load_data(str_2, str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        playbook_include_0 = module_0.PlaybookInclude()
        ansible_mapping_0 = module_1.AnsibleMapping()
        int_0 = None
        var_0 = playbook_include_0.load_data(ansible_mapping_0, int_0)
    except BaseException:
        pass

def test_case_6():
    try:
        playbook_include_0 = module_0.PlaybookInclude()
        str_0 = 'vars'
        str_1 = 'p*laybook.yml'
        str_2 = {str_1: playbook_include_0, str_0: str_1, str_0: str_1}
        var_0 = playbook_include_0.load_data(str_2, str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        playbook_include_0 = module_0.PlaybookInclude()
        str_0 = 'import_playbook'
        str_1 = {str_0: str_0, str_0: str_0}
        var_0 = playbook_include_0.load_data(str_1, str_0)
    except BaseException:
        pass

def test_case_8():
    try:
        playbook_include_0 = module_0.PlaybookInclude()
        str_0 = 'import_playbook'
        str_1 = {str_0: playbook_include_0}
        var_0 = playbook_include_0.load_data(str_1, str_0)
    except BaseException:
        pass

def test_case_9():
    try:
        playbook_include_0 = module_0.PlaybookInclude()
        str_0 = 'import_playbook'
        str_1 = 'vars'
        str_2 = ''
        str_3 = {str_1: str_2}
        str_4 = {str_0: str_2, str_1: str_3}
        str_5 = ''
        var_0 = playbook_include_0.load_data(str_4, str_5)
    except BaseException:
        pass

def test_case_10():
    try:
        playbook_include_0 = module_0.PlaybookInclude()
        str_0 = 'import_playbook'
        str_1 = 'vars'
        str_2 = 'test_var'
        str_3 = {str_2: str_2}
        str_4 = 'Unable to encrpt: %s'
        dict_0 = {str_2: str_1, str_2: str_1, str_0: str_4, str_1: str_3}
        var_0 = playbook_include_0.preprocess_data(dict_0)
    except BaseException:
        pass

def test_case_11():
    try:
        playbook_include_0 = module_0.PlaybookInclude()
        str_0 = 'import_playbook'
        str_1 = 'vars'
        str_2 = {str_0: str_0}
        str_3 = '.p^#'
        str_4 = 'UnabVehtV encrypt: %s'
        dict_0 = {str_1: str_1, str_3: str_1, str_0: str_4, str_1: str_2}
        var_0 = playbook_include_0.preprocess_data(dict_0)
    except BaseException:
        pass

def test_case_12():
    try:
        playbook_include_0 = module_0.PlaybookInclude()
        str_0 = 'import_playbook'
        str_1 = 'vars'
        str_2 = 'varB'
        str_3 = ''
        str_4 = None
        str_5 = 'layers'
        playbook_include_1 = module_0.PlaybookInclude()
        dict_0 = {str_4: str_2, str_5: playbook_include_1, str_0: str_4}
        set_0 = {str_3, str_1}
        float_0 = None
        var_0 = playbook_include_0.load_data(dict_0, set_0, float_0)
    except BaseException:
        pass