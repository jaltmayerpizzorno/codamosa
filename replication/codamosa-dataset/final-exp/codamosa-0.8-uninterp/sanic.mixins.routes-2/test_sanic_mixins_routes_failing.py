# Automatically generated by Pynguin.
import sanic.mixins.routes as module_0
import pathlib as module_1

def test_case_0():
    try:
        route_mixin_0 = module_0.RouteMixin()
        str_0 = '\x0c"J5rUE.RgQ'
        bool_0 = True
        var_0 = route_mixin_0.static(str_0, str_0, bool_0)
    except BaseException:
        pass

def test_case_1():
    try:
        float_0 = 1043.6942
        str_0 = 'a:Cg%r\\H\\ m\x0c7Kr/'
        tuple_0 = (float_0, str_0)
        set_0 = {float_0, str_0, str_0, str_0}
        float_1 = 0.001
        list_0 = [float_1, float_1, float_1, float_1]
        str_1 = 'd),TP'
        dict_0 = {str_1: str_1, str_1: float_1}
        route_mixin_0 = module_0.RouteMixin(*list_0, **dict_0)
        var_0 = route_mixin_0.add_websocket_route(tuple_0, str_0, set_0, str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '6wN\\E%_]j|V+%'
        iterable_0 = None
        dict_0 = {}
        route_mixin_0 = module_0.RouteMixin(**dict_0)
        var_0 = route_mixin_0.add_route(str_0, str_0, iterable_0, str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '5@oT$Y91'
        route_mixin_0 = module_0.RouteMixin()
        dict_0 = {route_mixin_0: str_0}
        var_0 = route_mixin_0.add_route(dict_0, str_0, dict_0)
    except BaseException:
        pass

def test_case_4():
    try:
        dict_0 = None
        bool_0 = False
        str_0 = 'Invalid route: '
        complex_0 = None
        tuple_0 = (dict_0, bool_0, str_0, complex_0)
        bytes_0 = b'jt\r\xe4a\xff\xbeA\xc0\t\xeb'
        route_mixin_0 = module_0.RouteMixin()
        var_0 = route_mixin_0.head(str_0)
        var_1 = route_mixin_0.static(str_0, str_0, tuple_0, bytes_0, route_mixin_0)
    except BaseException:
        pass

def test_case_5():
    try:
        int_0 = -190
        str_0 = ''
        bool_0 = True
        route_mixin_0 = module_0.RouteMixin()
        var_0 = route_mixin_0.delete(str_0, int_0, bool_0)
        list_0 = [int_0, int_0, int_0]
        str_1 = None
        dict_0 = {str_1: str_1, str_1: int_0, str_1: int_0, str_1: int_0}
        pure_path_0 = module_1.PurePath(*list_0, **dict_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = "[rq+x~\x0b=\\bP(6`0k'Sj"
        route_mixin_0 = module_0.RouteMixin()
        var_0 = route_mixin_0.options(str_0)
        list_0 = [var_0, route_mixin_0, route_mixin_0]
        var_1 = route_mixin_0.add_websocket_route(list_0, str_0, str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'qLeVuL/xL?Kj;]Y'
        tuple_0 = ()
        int_0 = -1909
        bytes_0 = b'\xff\x02\x1b\x13\xdbn 0#\xef\x8c\xd9\xc9\x00\x06\xda\x14'
        list_0 = [bytes_0]
        route_mixin_0 = module_0.RouteMixin(*list_0)
        var_0 = route_mixin_0.patch(str_0, str_0, tuple_0, int_0)
        dict_0 = {}
        var_1 = route_mixin_0.put(str_0, int_0)
        str_1 = 'q8N=IwsPVN3?'
        var_2 = route_mixin_0.post(str_1)
        route_mixin_1 = module_0.RouteMixin(**dict_0)
        str_2 = '}ar/NWnrr&\\bZO\\t'
        route_mixin_2 = module_0.RouteMixin(**dict_0)
        var_3 = route_mixin_2.add_websocket_route(str_2, str_2, tuple_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = '~DK4)s/O%B'
        bool_0 = None
        int_0 = 638
        list_0 = [str_0, str_0, str_0]
        dict_0 = {str_0: list_0}
        route_mixin_0 = module_0.RouteMixin(*list_0, **dict_0)
        var_0 = route_mixin_0.add_websocket_route(str_0, str_0, str_0, bool_0, int_0)
    except BaseException:
        pass

def test_case_9():
    try:
        list_0 = None
        str_0 = "^G)!u*Jw\\,z5OBR'U"
        int_0 = 2007
        bool_0 = True
        route_mixin_0 = module_0.RouteMixin()
        var_0 = route_mixin_0.add_route(list_0, str_0, int_0, str_0, bool_0)
    except BaseException:
        pass

def test_case_10():
    try:
        pure_path_0 = module_1.PurePath()
        str_0 = '_repr_html_'
        float_0 = 2214.4514
        route_mixin_0 = module_0.RouteMixin()
        var_0 = route_mixin_0.add_route(pure_path_0, str_0, float_0)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = '\t5-#eLOSVj='
        str_1 = 'CR#h\\_d'
        list_0 = [str_0]
        tuple_0 = (str_0, list_0)
        bool_0 = True
        route_mixin_0 = module_0.RouteMixin()
        var_0 = route_mixin_0.add_route(str_1, str_1, str_0, tuple_0, bool_0)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = 'DIE{s;pB9'
        pure_path_0 = module_1.PurePath()
        str_1 = '/;)'
        int_0 = None
        str_2 = '\'g]6 "l2pD'
        route_mixin_0 = module_0.RouteMixin()
        var_0 = route_mixin_0.post(str_1, int_0, str_0)
        str_3 = ''
        var_1 = route_mixin_0.options(str_3, str_1)
        var_2 = route_mixin_0.post(str_2, str_0)
        route_mixin_1 = module_0.RouteMixin()
        str_4 = 'N3+_\tki>I\t5(3Uaw.z'
        float_0 = -1585.81
        str_5 = ''
        tuple_0 = (str_5,)
        bytes_0 = None
        var_3 = route_mixin_1.static(str_4, str_1, float_0, tuple_0, bytes_0)
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = '_scheme'
        str_1 = None
        bool_0 = True
        dict_0 = {str_0: str_1}
        route_mixin_0 = module_0.RouteMixin(**dict_0)
        dict_1 = {}
        list_0 = [bool_0, bool_0, dict_1]
        route_mixin_1 = module_0.RouteMixin(**dict_0)
        var_0 = route_mixin_1.static(list_0, str_1, str_1)
    except BaseException:
        pass