# Automatically generated by Pynguin.
import ansible.module_utils.facts.hardware.sunos as module_0

def test_case_0():
    try:
        int_0 = None
        str_0 = 'fatal: [%s]: FAILED! => %s'
        sun_o_s_hardware_0 = module_0.SunOSHardware(str_0)
        sun_o_s_hardware_1 = module_0.SunOSHardware(sun_o_s_hardware_0)
        sun_o_s_hardware_2 = module_0.SunOSHardware(sun_o_s_hardware_1)
        var_0 = sun_o_s_hardware_2.populate(int_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = b't\xe3\x1e\xddqM+\xee\x08P\xf5'
        str_0 = "n0&-/8\x0c~$wQ'v&M2l\n2"
        sun_o_s_hardware_0 = module_0.SunOSHardware(bytes_0, str_0)
        var_0 = sun_o_s_hardware_0.get_cpu_facts()
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'groups_inventory'
        sun_o_s_hardware_0 = module_0.SunOSHardware(str_0)
        var_0 = sun_o_s_hardware_0.get_memory_facts()
    except BaseException:
        pass

def test_case_3():
    try:
        dict_0 = {}
        sun_o_s_hardware_0 = module_0.SunOSHardware(dict_0)
        var_0 = sun_o_s_hardware_0.get_dmi_facts()
    except BaseException:
        pass

def test_case_4():
    try:
        bytes_0 = b'=\xfe\xb9\x8c'
        str_0 = '[\n'
        sun_o_s_hardware_0 = module_0.SunOSHardware(bytes_0, str_0)
        var_0 = sun_o_s_hardware_0.get_device_facts()
    except BaseException:
        pass

def test_case_5():
    try:
        bytes_0 = b']\x89olB\xf2\x9b4\xfa\xde5G\xf7+`D\x00\xd5\xf0'
        sun_o_s_hardware_0 = module_0.SunOSHardware(bytes_0)
        var_0 = sun_o_s_hardware_0.get_uptime_facts()
    except BaseException:
        pass

def test_case_6():
    try:
        bytes_0 = b'\n\x97Q\xadL\xca\x03\x1e\xa2\x86\xc9\xbc#\xce\xf3'
        bytes_1 = b'3\xb0+L\xc3\x13\xfbL\x88\xf2[H'
        bool_0 = False
        set_0 = {bool_0, bool_0, bool_0}
        float_0 = -272.0
        tuple_0 = (bool_0, set_0, float_0, set_0)
        sun_o_s_hardware_0 = module_0.SunOSHardware(bytes_1, tuple_0)
        var_0 = sun_o_s_hardware_0.get_cpu_facts(bytes_0)
    except BaseException:
        pass