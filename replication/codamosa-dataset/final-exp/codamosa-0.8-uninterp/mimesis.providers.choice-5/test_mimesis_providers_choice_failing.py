# Automatically generated by Pynguin.
import mimesis.providers.choice as module_0

def test_case_0():
    try:
        dict_0 = {}
        str_0 = 'wbZd@a,r#tc8Ml2}T)C'
        int_0 = 2275
        choice_0 = module_0.Choice(**dict_0)
        var_0 = choice_0.__call__(str_0, int_0)
        sequence_0 = None
        var_1 = choice_0.__call__(sequence_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = b'\xc0\x18#a_\xa1\xfe\x83\x13\x1e\x91'
        tuple_0 = (bytes_0,)
        tuple_1 = (tuple_0,)
        int_0 = -3255
        choice_0 = module_0.Choice()
        var_0 = choice_0.__call__(tuple_1, int_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bool_0 = False
        choice_0 = module_0.Choice()
        var_0 = choice_0.__call__(bool_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '[^<XgqiX>Drw'
        choice_0 = module_0.Choice()
        list_0 = []
        choice_1 = module_0.Choice(*list_0)
        var_0 = choice_1.__call__(str_0)
        var_1 = choice_0.__call__(list_0)
    except BaseException:
        pass

def test_case_4():
    try:
        choice_0 = module_0.Choice()
        str_0 = '\x0bhS_Fd[>6D'
        var_0 = choice_0.__call__(str_0)
        sequence_0 = None
        bool_0 = None
        var_1 = choice_0.__call__(sequence_0, bool_0)
    except BaseException:
        pass

def test_case_5():
    try:
        dict_0 = {}
        list_0 = [dict_0, dict_0, dict_0]
        bool_0 = True
        choice_0 = module_0.Choice(**dict_0)
        var_0 = choice_0.__call__(list_0, bool_0)
        int_0 = 2275
        choice_1 = module_0.Choice(**dict_0)
        list_1 = [choice_1]
        var_1 = choice_0.__call__(list_1)
        bool_1 = True
        var_2 = choice_1.__call__(list_1, int_0, bool_1)
    except BaseException:
        pass