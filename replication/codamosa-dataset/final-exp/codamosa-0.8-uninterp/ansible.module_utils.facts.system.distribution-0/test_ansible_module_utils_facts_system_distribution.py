# Automatically generated by Pynguin.
import ansible.module_utils.facts.system.distribution as module_0

def test_case_0():
    pass

def test_case_1():
    str_0 = 'Fi9'
    distribution_0 = module_0.Distribution(str_0)
    var_0 = distribution_0.get_distribution_facts()

def test_case_2():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    set_0 = set()
    bytes_0 = None
    distribution_0 = module_0.Distribution(bytes_0)
    int_0 = 310
    distribution_files_0 = module_0.DistributionFiles(int_0)
    var_0 = distribution_files_0.parse_distribution_file_Slackware(bool_0, dict_0, set_0, distribution_0)

def test_case_3():
    str_0 = 'Z!nZ'
    bool_0 = False
    bytes_0 = b''
    tuple_0 = (bytes_0,)
    set_0 = set()
    distribution_fact_collector_0 = module_0.DistributionFactCollector()
    float_0 = 1948.0
    set_1 = {str_0, bool_0, str_0, float_0, float_0}
    distribution_files_0 = module_0.DistributionFiles(tuple_0)
    var_0 = distribution_files_0.parse_distribution_file_Debian(set_1, set_1, distribution_files_0, float_0)
    distribution_fact_collector_1 = module_0.DistributionFactCollector()
    var_1 = distribution_files_0.parse_distribution_file_OpenWrt(float_0, str_0, distribution_files_0, bool_0)
    distribution_fact_collector_2 = module_0.DistributionFactCollector(distribution_files_0, distribution_fact_collector_1)
    distribution_files_1 = module_0.DistributionFiles(tuple_0)
    bool_1 = True
    var_2 = distribution_files_0.parse_distribution_file_Alpine(distribution_files_0, distribution_files_0, bool_1, set_0)
    distribution_0 = module_0.Distribution(bool_0)
    var_3 = distribution_0.get_distribution_facts()

def test_case_4():
    int_0 = 4320
    dict_0 = {int_0: int_0}
    str_0 = '=ab8\r^BIT~dU/'
    float_0 = 674.802525
    float_1 = None
    bytes_0 = b'\xec\xbc\xdc\xa8ykq\xe2'
    set_0 = {bytes_0}
    distribution_fact_collector_0 = module_0.DistributionFactCollector(bytes_0, set_0)
    distribution_files_0 = module_0.DistributionFiles(distribution_fact_collector_0)
    var_0 = distribution_files_0.parse_distribution_file_Debian(dict_0, str_0, float_0, float_1)
    str_1 = ''
    distribution_files_1 = module_0.DistributionFiles(str_1)

def test_case_5():
    str_0 = 'xgNbW\n-M\\9\rWB%}4_>'
    distribution_0 = module_0.Distribution(str_0)
    str_1 = '2:.mRUU(:w'
    distribution_files_0 = module_0.DistributionFiles(str_0)
    var_0 = distribution_files_0.parse_distribution_file_NA(str_0, str_1, str_1, distribution_files_0)

def test_case_6():
    float_0 = None
    dict_0 = {float_0: float_0}
    str_0 = 'NA'
    distribution_files_0 = module_0.DistributionFiles(str_0)
    var_0 = distribution_files_0.parse_distribution_file_Coreos(float_0, dict_0, float_0, str_0)

def test_case_7():
    distribution_fact_collector_0 = module_0.DistributionFactCollector()
    tuple_0 = (distribution_fact_collector_0,)
    list_0 = None
    float_0 = -1801.0
    distribution_files_0 = module_0.DistributionFiles(float_0)
    var_0 = distribution_files_0.parse_distribution_file_Flatcar(tuple_0, list_0, distribution_fact_collector_0, tuple_0)

def test_case_8():
    distribution_fact_collector_0 = module_0.DistributionFactCollector()
    distribution_0 = module_0.Distribution(distribution_fact_collector_0)
    var_0 = distribution_0.get_distribution_FreeBSD()

def test_case_9():
    distribution_fact_collector_0 = module_0.DistributionFactCollector()
    var_0 = distribution_fact_collector_0.collect()

def test_case_10():
    str_0 = ' %s'
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    bytes_0 = b''
    tuple_0 = (bytes_0,)
    set_0 = set()
    distribution_files_0 = module_0.DistributionFiles(set_0)
    distribution_fact_collector_0 = module_0.DistributionFactCollector()
    var_0 = distribution_fact_collector_0.collect(tuple_0, distribution_files_0)
    distribution_fact_collector_1 = module_0.DistributionFactCollector(dict_0)
    bool_1 = False
    float_0 = 1948.0
    set_1 = {str_0, bool_1, str_0, float_0}
    var_1 = distribution_files_0.parse_distribution_file_Debian(set_1, set_1, distribution_files_0, float_0)
    bytes_1 = None
    distribution_0 = module_0.Distribution(bytes_1)
    var_2 = distribution_0.get_distribution_facts()

def test_case_11():
    distribution_fact_collector_0 = module_0.DistributionFactCollector()
    set_0 = {distribution_fact_collector_0}
    list_0 = None
    bool_0 = True
    bytes_0 = b'a\xeaw7\xd2,\x17'
    set_1 = {bytes_0, bytes_0, bytes_0}
    distribution_files_0 = module_0.DistributionFiles(set_1)
    var_0 = distribution_files_0.parse_distribution_file_CentOS(distribution_fact_collector_0, set_0, list_0, bool_0)