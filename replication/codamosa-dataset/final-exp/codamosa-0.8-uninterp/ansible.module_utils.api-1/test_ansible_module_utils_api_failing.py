# Automatically generated by Pynguin.
import ansible.module_utils.api as module_0

def test_case_0():
    try:
        set_0 = None
        set_1 = {set_0, set_0, set_0, set_0}
        var_0 = module_0.rate_limit_argument_spec(set_1)
    except BaseException:
        pass

def test_case_1():
    try:
        var_0 = module_0.retry()
        var_1 = module_0.retry()
        str_0 = 'Qrj+; A'
        var_2 = module_0.retry_argument_spec(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        float_0 = 1054.29
        dict_0 = {}
        var_0 = module_0.retry_never(dict_0)
        float_1 = -681.68821
        float_2 = 1.5
        tuple_0 = (float_0, float_1, float_2)
        var_1 = module_0.basic_auth_argument_spec(tuple_0)
    except BaseException:
        pass

def test_case_3():
    try:
        int_0 = -2118
        var_0 = module_0.retry_argument_spec()
        str_0 = 'y?3^o049?'
        var_1 = module_0.retry_with_delays_and_condition(int_0, str_0)
        bytes_0 = b'i'
        var_2 = module_0.retry_with_delays_and_condition(bytes_0)
        var_3 = module_0.retry_argument_spec()
        set_0 = {var_2, var_2}
        int_1 = 1923
        var_4 = module_0.rate_limit(set_0, int_1)
    except BaseException:
        pass

def test_case_4():
    try:
        int_0 = -2118
        var_0 = module_0.retry_argument_spec()
        str_0 = 'y?3^o049?'
        var_1 = module_0.retry_with_delays_and_condition(int_0, str_0)
        bytes_0 = b''
        var_2 = module_0.retry_with_delays_and_condition(bytes_0)
        list_0 = None
        var_3 = module_0.retry_argument_spec()
        var_4 = module_0.retry_never(list_0)
        var_5 = module_0.generate_jittered_backoff()
        var_6 = module_0.rate_limit_argument_spec()
        var_7 = module_0.generate_jittered_backoff()
        var_8 = module_0.generate_jittered_backoff(list_0)
        str_1 = 'Y.U0tM|vQmuI%1u)(;.'
        var_9 = module_0.rate_limit(str_1)
        var_10 = module_0.retry_argument_spec()
        set_0 = {var_7}
        var_11 = module_0.basic_auth_argument_spec(set_0)
    except BaseException:
        pass