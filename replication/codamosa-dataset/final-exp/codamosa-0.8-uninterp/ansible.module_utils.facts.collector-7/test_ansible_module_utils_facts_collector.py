# Automatically generated by Pynguin.
import ansible.module_utils.facts.collector as module_0
import collections as module_1

def test_case_0():
    pass

def test_case_1():
    base_fact_collector_0 = module_0.BaseFactCollector()

def test_case_2():
    base_fact_collector_0 = module_0.BaseFactCollector()
    var_0 = base_fact_collector_0.collect_with_namespace()

def test_case_3():
    var_0 = module_0.collector_classes_from_gather_subset()

def test_case_4():
    str_0 = "lZm_'igoR:7."
    str_1 = '+\tX;.eFl@dB=YfBpo+'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_1: str_0}
    defaultdict_0 = module_1.defaultdict(**dict_0)
    var_0 = module_0.select_collector_classes(defaultdict_0, dict_0)

def test_case_5():
    defaultdict_0 = module_1.defaultdict()
    bool_0 = None
    str_0 = 'E\r\r\r}C_'
    float_0 = -3491.14169253162
    tuple_0 = (str_0, float_0)
    var_0 = module_0.collector_classes_from_gather_subset(defaultdict_0, bool_0, tuple_0)

def test_case_6():
    base_fact_collector_0 = module_0.BaseFactCollector()
    str_0 = '\r*rwk+rCAW1'
    str_1 = None
    dict_0 = {str_0: base_fact_collector_0, str_1: str_1}
    list_0 = [str_1, str_0, str_0, base_fact_collector_0]
    var_0 = module_0.resolve_requires(dict_0, list_0)
    base_fact_collector_1 = module_0.BaseFactCollector()
    var_1 = module_0.get_collector_names()
    list_1 = []
    cycle_found_in_fact_deps_0 = module_0.CycleFoundInFactDeps(*list_1)

def test_case_7():
    var_0 = module_0.collector_classes_from_gather_subset()
    str_0 = ''
    dict_0 = {str_0: str_0}
    var_1 = module_0.tsort(dict_0)

def test_case_8():
    collector_not_found_error_0 = module_0.CollectorNotFoundError()
    base_fact_collector_0 = module_0.BaseFactCollector(collector_not_found_error_0)

def test_case_9():
    str_0 = 'insertbefore'
    str_1 = [str_0, str_0]
    str_2 = [str_0]
    var_0 = module_0.get_collector_names(str_1, str_1, str_2)

def test_case_10():
    str_0 = 'Jbl\rn5HfG;.'
    dict_0 = {str_0: str_0}
    var_0 = module_0.tsort(dict_0)

def test_case_11():
    collector_not_found_error_0 = module_0.CollectorNotFoundError()
    base_fact_collector_0 = module_0.BaseFactCollector(collector_not_found_error_0, collector_not_found_error_0)
    var_0 = base_fact_collector_0.collect_with_namespace()

def test_case_12():
    str_0 = 'c'
    var_0 = set(str_0)
    var_1 = set(str_0)
    str_1 = 'd'
    var_2 = set(str_1)
    str_2 = 'e'
    var_3 = set(str_2)
    var_4 = set()
    var_5 = set()
    var_6 = dict(a=var_0, b=var_1, c=var_2, d=var_3, e=var_4, g=var_5)
    var_7 = module_0.tsort(var_6)

def test_case_13():
    str_0 = 'min'
    str_1 = '!minqv'
    str_2 = [str_1]
    var_0 = module_0.get_collector_names(str_0, str_1, str_2)

def test_case_14():
    str_0 = 'dmtqS%'
    str_1 = '!min'
    str_2 = [str_1]
    var_0 = module_0.get_collector_names(str_0, str_1, str_2)