# Automatically generated by Pynguin.
import ansible.plugins.lookup.sequence as module_0

def test_case_0():
    try:
        lookup_module_0 = module_0.LookupModule()
        list_0 = [lookup_module_0, lookup_module_0, lookup_module_0]
        var_0 = lookup_module_0.parse_kv_args(list_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = ')pez|g\\in7R'
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
        lookup_module_0 = module_0.LookupModule()
        int_0 = 2798
        var_0 = lookup_module_0.run(dict_0, int_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = ''
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
        lookup_module_0 = module_0.LookupModule()
        int_0 = 2813
        var_0 = lookup_module_0.run(dict_0, int_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '1-5'
        lookup_module_0 = module_0.LookupModule()
        list_0 = [str_0, str_0, lookup_module_0]
        float_0 = 2.0
        var_0 = lookup_module_0.run(list_0, float_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'c|y{7\rhro0JP8OuO5v'
        dict_0 = {str_0: str_0}
        dict_1 = {str_0: dict_0, str_0: str_0, str_0: dict_0}
        lookup_module_0 = module_0.LookupModule(**dict_1)
        lookup_module_1 = module_0.LookupModule(lookup_module_0, **dict_1)
        bool_0 = False
        var_0 = lookup_module_0.run(str_0, bool_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = ''
        dict_0 = {str_0: str_0}
        dict_1 = {str_0: dict_0, str_0: str_0, str_0: dict_0}
        lookup_module_0 = module_0.LookupModule(**dict_1)
        lookup_module_1 = module_0.LookupModule(lookup_module_0, **dict_1)
        str_1 = '0.0'
        list_0 = None
        var_0 = lookup_module_0.run(str_1, list_0)
    except BaseException:
        pass

def test_case_6():
    try:
        lookup_module_0 = module_0.LookupModule()
        str_0 = 'start'
        str_1 = 'stride'
        str_2 = 'format'
        str_3 = '0x0f01'
        str_4 = '0x0f02'
        str_5 = '0x0f03'
        str_6 = '%04x'
        str_7 = {str_0: str_3, str_3: str_4, str_1: str_5, str_2: str_6}
        var_0 = lookup_module_0.parse_kv_args(str_7)
    except BaseException:
        pass

def test_case_7():
    try:
        lookup_module_0 = module_0.LookupModule()
        var_0 = lookup_module_0.reset()
        str_0 = '1'
        str_1 = '11'
        str_2 = '12'
        str_3 = '0x%02x'
        var_1 = dict(start=str_0, end=str_1, stride=str_2, format=str_3)
        var_2 = lookup_module_0.parse_kv_args(var_1)
        var_3 = lookup_module_0.reset()
        str_4 = '1'
        str_5 = 'a'
        str_6 = '12'
        var_4 = dict(start=str_4, end=str_5, stride=str_6)
        var_5 = lookup_module_0.parse_kv_args(var_4)
    except BaseException:
        pass