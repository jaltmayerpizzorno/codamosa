# Automatically generated by Pynguin.
import ansible.galaxy.api as module_0
import urllib.error as module_1

def test_case_0():
    pass

def test_case_1():
    float_0 = 2.0
    var_0 = module_0.is_rate_limit_exception(float_0)

def test_case_2():
    str_0 = 'http://localhost:8080/api/'
    var_0 = module_0.get_cache_id(str_0)
    str_1 = 'https://localhost:8080/api/'
    var_1 = module_0.get_cache_id(str_1)

def test_case_3():
    str_0 = 'nothing to do'
    int_0 = 1953
    h_t_t_p_error_0 = module_1.HTTPError(str_0, int_0, str_0, int_0, int_0)
    galaxy_error_0 = module_0.GalaxyError(h_t_t_p_error_0, str_0)
    h_t_t_p_error_1 = module_1.HTTPError(str_0, int_0, str_0, galaxy_error_0, galaxy_error_0)

def test_case_4():
    dict_0 = None
    var_0 = module_0.get_cache_id(dict_0)
    tuple_0 = ()
    collection_metadata_0 = None
    str_0 = 'exclude'
    float_0 = -602.314
    collection_version_metadata_0 = module_0.CollectionVersionMetadata(tuple_0, collection_metadata_0, str_0, float_0, str_0, dict_0)
    str_1 = '*p[uG/da~Ys,;EY@SJQE'
    var_1 = module_0.get_cache_id(str_1)

def test_case_5():
    str_0 = 'username'
    galaxy_a_p_i_0 = module_0.GalaxyAPI(str_0, str_0, str_0)

def test_case_6():
    str_0 = 'aN'
    str_1 = '\n        This method does the low-level evaluation of each conditional\n        set on this object, using jinja2 to wrap the conditionals for\n        evaluation.\n        '
    int_0 = 128
    list_0 = [str_0, str_1, str_0]
    galaxy_a_p_i_0 = module_0.GalaxyAPI(str_0, str_1, int_0, str_0, list_0)
    var_0 = galaxy_a_p_i_0.__str__()

def test_case_7():
    str_0 = "<t3iKQ/-GwOH'e D"
    float_0 = 3411.312224
    str_1 = '.FF\t6o5R*t&;}6'
    galaxy_a_p_i_0 = module_0.GalaxyAPI(str_0, float_0, str_1, str_0, str_1)
    var_0 = galaxy_a_p_i_0.__unicode__()

def test_case_8():
    float_0 = -2884.4
    str_0 = 'Lu&I.w%s\t\x0b[]h/'
    dict_0 = {str_0: str_0}
    bytes_0 = b'{M\x1e\x1d\xbc\xe3\xc7\xac\xc4f\x9b'
    bytes_1 = b'y\x961o\x17%\x03\x12=\x11'
    galaxy_a_p_i_0 = module_0.GalaxyAPI(float_0, dict_0, bytes_0, bytes_1, bytes_0, float_0)
    var_0 = galaxy_a_p_i_0.__repr__()

def test_case_9():
    str_0 = "<t3iKQ/-GwOH'e D"
    float_0 = 3411.312224
    str_1 = '.FF\t6o5R*t&;}6'
    galaxy_a_p_i_0 = module_0.GalaxyAPI(str_0, float_0, str_1, str_0, str_1)
    var_0 = galaxy_a_p_i_0.__unicode__()
    str_2 = 'C\r\x0cNS@9vA}"\'Ztf7\tb?X'
    var_1 = galaxy_a_p_i_0.__lt__(str_2)

def test_case_10():
    str_0 = 'nothing to do'
    int_0 = 500
    str_1 = 'unknon'
    h_t_t_p_error_0 = module_1.HTTPError(str_0, int_0, str_1, int_0, int_0)
    str_2 = 'message'
    galaxy_error_0 = module_0.GalaxyError(h_t_t_p_error_0, str_2)
    str_3 = 'url/v2/'
    h_t_t_p_error_1 = module_1.HTTPError(str_3, int_0, str_1, galaxy_error_0, galaxy_error_0)
    galaxy_error_1 = module_0.GalaxyError(h_t_t_p_error_1, str_2)
    str_4 = 'url/v3/'
    h_t_t_p_error_2 = module_1.HTTPError(str_4, int_0, str_1, galaxy_error_1, galaxy_error_1)

def test_case_11():
    str_0 = 'http://localhost:99/api/v3/collections/'
    str_1 = 'Collectionnot found.'
    str_2 = 'not_found'
    int_0 = 391
    h_t_t_p_error_0 = module_1.HTTPError(str_0, int_0, str_1, str_0, str_2)
    galaxy_error_0 = module_0.GalaxyError(h_t_t_p_error_0, str_1)