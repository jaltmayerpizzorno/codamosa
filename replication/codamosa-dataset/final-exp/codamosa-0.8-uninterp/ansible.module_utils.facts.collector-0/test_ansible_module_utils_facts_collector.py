# Automatically generated by Pynguin.
import ansible.module_utils.facts.collector as module_0

def test_case_0():
    pass

def test_case_1():
    base_fact_collector_0 = module_0.BaseFactCollector()

def test_case_2():
    collector_not_found_error_0 = module_0.CollectorNotFoundError()
    dict_0 = {collector_not_found_error_0: collector_not_found_error_0, collector_not_found_error_0: collector_not_found_error_0, collector_not_found_error_0: collector_not_found_error_0, collector_not_found_error_0: collector_not_found_error_0}
    base_fact_collector_0 = module_0.BaseFactCollector(dict_0, dict_0)
    var_0 = base_fact_collector_0.collect_with_namespace()

def test_case_3():
    var_0 = module_0.collector_classes_from_gather_subset()

def test_case_4():
    list_0 = []
    tuple_0 = ()
    bytes_0 = b'b4\x91\xe5\xd0'
    var_0 = module_0.collector_classes_from_gather_subset(list_0, tuple_0, bytes_0)

def test_case_5():
    cycle_found_in_fact_deps_0 = None
    var_0 = module_0.collector_classes_from_gather_subset()
    base_fact_collector_0 = module_0.BaseFactCollector()
    list_0 = [cycle_found_in_fact_deps_0]
    var_1 = module_0.resolve_requires(list_0, list_0)

def test_case_6():
    str_0 = 'oW(;{K\nI{xF8K~#{Y'
    dict_0 = {str_0: str_0}
    var_0 = module_0.tsort(dict_0)

def test_case_7():
    collector_not_found_error_0 = module_0.CollectorNotFoundError()
    set_0 = None
    str_0 = 'Rgo6{l'
    var_0 = module_0.collector_classes_from_gather_subset(set_0, collector_not_found_error_0, str_0)

def test_case_8():
    str_0 = 'network'
    str_1 = 'min'
    str_2 = '!network'
    str_3 = (str_2, str_2)
    str_4 = (str_1,)
    var_0 = module_0.get_collector_names(str_0, str_4, str_3)

def test_case_9():
    str_0 = 'Bplatform'
    str_1 = 'Dplatform'
    str_2 = 'WED&\x0b'
    bool_0 = False
    cycle_found_in_fact_deps_0 = None
    complex_0 = None
    list_0 = [str_1, str_2, str_0]
    base_fact_collector_0 = module_0.BaseFactCollector()
    int_0 = 200
    tuple_0 = (complex_0, list_0, base_fact_collector_0, int_0)
    var_0 = module_0.get_collector_names(str_2, bool_0, cycle_found_in_fact_deps_0, tuple_0)

def test_case_10():
    str_0 = 'foo'
    str_1 = 'bar'
    str_2 = 'baz'
    str_3 = 'quux'
    str_4 = 'quuux'
    str_5 = [str_1]
    var_0 = set(str_5)
    str_6 = [str_2]
    var_1 = set(str_6)
    var_2 = set()
    str_7 = [str_4]
    var_3 = set(str_7)
    var_4 = set()
    var_5 = {str_0: var_0, str_1: var_1, str_2: var_2, str_3: var_3, str_4: var_4}
    var_6 = module_0.tsort(var_5)
    var_7 = len(str_0)

def test_case_11():
    str_0 = 'all'
    str_1 = 'network'
    str_2 = 'virtual'
    str_3 = 'min'
    str_4 = 'disks'
    str_5 = (str_0, str_2, str_1, str_2, str_3, str_4)
    str_6 = '!network'
    str_7 = (str_6, str_4)
    str_8 = (str_3,)
    var_0 = module_0.get_collector_names(str_5, str_8, str_7)
    str_9 = (str_0, str_8, str_1, str_2, str_3, str_4)
    str_10 = (str_6, str_4)
    str_11 = (str_3,)
    var_1 = module_0.get_collector_names(str_9, str_11, str_10)