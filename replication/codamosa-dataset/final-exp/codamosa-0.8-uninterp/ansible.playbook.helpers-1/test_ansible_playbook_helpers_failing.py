# Automatically generated by Pynguin.
import ansible.playbook.helpers as module_0

def test_case_0():
    try:
        float_0 = -1538.50105
        dict_0 = {float_0: float_0, float_0: float_0, float_0: float_0, float_0: float_0}
        list_0 = [dict_0, float_0]
        tuple_0 = ()
        float_1 = -904.775165
        var_0 = module_0.load_list_of_blocks(list_0, tuple_0, float_1, float_1, dict_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = None
        set_0 = {str_0, str_0, str_0}
        float_0 = -2590.36493
        str_1 = "'state' cannot be specified on a template"
        list_0 = [str_0, str_0, str_1, str_1]
        var_0 = module_0.load_list_of_blocks(set_0, str_0, float_0, list_0, list_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'action'
        str_1 = ',r-'
        str_2 = "--uid-ow'e{"
        str_3 = 'test.txt'
        bytes_0 = None
        var_0 = module_0.load_list_of_blocks(bytes_0, str_3)
        str_4 = {str_0: str_1}
        str_5 = {str_0: str_2}
        str_6 = 'static'
        str_7 = 'hG-j^z$Yn'
        str_8 = {str_0: str_0, str_6: str_7}
        str_9 = [str_4, str_4, str_5, str_8]
        var_1 = module_0.load_list_of_tasks(str_9, str_5, str_4, str_4)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '%s %s enable %s'
        dict_0 = {}
        list_0 = [dict_0, dict_0, str_0]
        int_0 = 18
        bytes_0 = b'\xa36\x97\xf5"\x96'
        tuple_0 = (list_0, int_0, bytes_0)
        list_1 = [dict_0, tuple_0, dict_0]
        var_0 = module_0.load_list_of_tasks(str_0, dict_0, list_1, tuple_0)
    except BaseException:
        pass

def test_case_4():
    try:
        var_0 = []
        var_1 = None
        var_2 = module_0.load_list_of_tasks(var_0, var_1, var_1)
        str_0 = 'sample'
        str_1 = [str_0]
        var_3 = module_0.load_list_of_tasks(str_1, var_1, var_1)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = ',XE~\x0c\x0b\tB~'
        tuple_0 = (str_0,)
        list_0 = [tuple_0, str_0, str_0, str_0]
        bool_0 = True
        var_0 = module_0.load_list_of_roles(list_0, list_0, bool_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'Failed to remove service. rc: %s, out: %s, err: %s'
        var_0 = module_0.load_list_of_roles(str_0, str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'action'
        str_1 = {str_0: str_0}
        str_2 = 'impwrt_tasks7'
        str_3 = 'hG-j^z$Yn'
        str_4 = {str_0: str_0, str_3: str_3}
        str_5 = [str_1, str_1, str_1, str_4]
        var_0 = module_0.load_list_of_tasks(str_5, str_2, str_1, str_1)
    except BaseException:
        pass

def test_case_8():
    try:
        int_0 = 2177
        bool_0 = True
        set_0 = {bool_0}
        bytes_0 = b'\xb9\xf0E\xceZ\x9a3\n\xd0h\x80\x80\xd1m'
        list_0 = []
        str_0 = 'Ek|BDS^#X'
        var_0 = module_0.load_list_of_roles(list_0, int_0, str_0, list_0)
        var_1 = module_0.load_list_of_blocks(int_0, bool_0, set_0, bytes_0, bytes_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'action'
        str_1 = {str_0: str_0}
        str_2 = {}
        str_3 = [str_1, str_1, str_2, str_2]
        var_0 = module_0.load_list_of_tasks(str_3, str_0, str_1, str_1)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = "E'\x0bpE"
        int_0 = None
        bool_0 = True
        list_0 = [int_0]
        int_1 = 816
        str_1 = '2u'
        var_0 = module_0.load_list_of_blocks(list_0, bool_0, str_0, int_1, str_1)
        complex_0 = None
        str_2 = 'OlVEdY=~`jowE'
        str_3 = ', yXa'
        bytes_0 = None
        var_1 = module_0.load_list_of_roles(complex_0, str_2, str_3, bytes_0)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = 'dest'
        str_1 = 'test.tt'
        str_2 = 'test.txt'
        str_3 = 'block'
        str_4 = {str_2: str_3, str_2: str_1, str_0: str_2}
        str_5 = [str_4]
        str_6 = {str_3: str_5}
        str_7 = {str_2: str_5, str_3: str_6}
        str_8 = [str_6, str_6, str_0, str_7]
        str_9 = 'role'
        var_0 = module_0.load_list_of_tasks(str_8, str_4, str_6, str_9)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = 'action'
        str_1 = 'dest'
        str_2 = 'copy'
        str_3 = 'test.txt'
        str_4 = 'test.txt'
        str_5 = 'block'
        str_6 = {str_0: str_2, str_2: str_3, str_1: str_4}
        str_7 = []
        str_8 = {str_5: str_7}
        str_9 = 'import_tasks'
        str_10 = 'test.yml'
        str_11 = {str_0: str_9, str_3: str_10}
        str_12 = 'static'
        str_13 = {str_0: str_7, str_12: str_6}
        str_14 = [str_8, str_8, str_11, str_13]
        str_15 = 'role'
        var_0 = module_0.load_list_of_tasks(str_14, str_11, str_8, str_15)
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = 'action'
        str_1 = ',r-'
        bytes_0 = None
        var_0 = module_0.load_list_of_blocks(bytes_0, str_0)
        float_0 = 463.0
        str_2 = {str_0: str_1}
        str_3 = 'hG-j^z$Yn'
        list_0 = [str_2, str_3]
        str_4 = '_uses_shell'
        bool_0 = True
        int_0 = None
        bool_1 = True
        int_1 = -781
        var_1 = module_0.load_list_of_tasks(list_0, str_4, bool_0, int_0, float_0, bool_1, int_1)
    except BaseException:
        pass