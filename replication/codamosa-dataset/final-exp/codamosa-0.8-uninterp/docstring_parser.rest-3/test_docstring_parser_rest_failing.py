# Automatically generated by Pynguin.
import docstring_parser.rest as module_0

def test_case_0():
    try:
        str_0 = '\n    This is the short description.\n\n    This is the long description. It can span\n    multiple lines.\n\n    :param int foo: Foo description\n    :type foo: List of ints\n    :param bar: Bar description\n    :typ bar: List of str\n    :returns: Return description\n    :rtype: List of str\n    :return something: Something description\n    :rtype something: List of str\n    :yields: Yield description\n    :ytype: List of str\n    :yield an_item  An item description\n    :ytype an_item: List of str\n    :raises Exception: Raises description\n    :raises TypeError: Raises description\n    :raises:Raises description\n    :raises TypeError: Raises description\n    '
        docstring_0 = module_0.parse(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = ': \x0b+E\t(&I'
        docstring_0 = module_0.parse(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '\n    This is the short description.\n\n    This is the long description. It can span\n    multiple lines.\n\n    :param int foo: Foo description\n    :type foo: List of ints\n    :param bar: Bar description\n    :type bar: List of str\n    :returns: Retuen description\n    :rtype: List of str\n    :return so\x0bething: Something description\n    :rtype something: List of str\n    :yields: Yield description\n    :ytype: List of str\n    :yield an_item: An item description\n    :ytype an_item: List of str\n    :raises Exception: Raises description\n    :raises TypeError: Raises description\n    :raises: Raises description\n    :raises TypeError: Raises description\n    '
        docstring_0 = module_0.parse(str_0)
    except BaseException:
        pass