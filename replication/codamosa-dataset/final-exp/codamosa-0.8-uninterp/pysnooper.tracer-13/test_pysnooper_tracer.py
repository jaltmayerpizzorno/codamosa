# Automatically generated by Pynguin.
import pysnooper.tracer as module_0
import inspect as module_1

def test_case_0():
    pass

def test_case_1():
    tracer_0 = module_0.Tracer()
    var_0 = tracer_0.__enter__()

def test_case_2():
    tracer_0 = module_0.Tracer()

def test_case_3():
    int_0 = 2
    dict_0 = {int_0: int_0}
    tracer_0 = module_0.Tracer()
    var_0 = tracer_0.write(dict_0)
    var_1 = tracer_0.__enter__()
    str_0 = 'b5^!!i$b\na0mFXE~O'
    str_1 = "PSDS+.Y/V'EJ&GQ"
    var_2 = module_0.get_write_function(str_0, str_1)

def test_case_4():
    var_0 = module_1.currentframe()
    var_1 = var_0.f_back
    var_2 = var_1.f_back
    var_3 = var_2.f_back
    var_4 = module_0.get_path_and_source_from_frame(var_3)

def test_case_5():
    int_0 = 2
    dict_0 = {int_0: int_0}
    tracer_0 = module_0.Tracer()
    var_0 = tracer_0.write(dict_0)
    var_1 = tracer_0.__enter__()
    unavailable_source_0 = module_0.UnavailableSource()

def test_case_6():
    tracer_0 = module_0.Tracer()
    var_0 = tracer_0.__enter__()
    var_1 = tracer_0.__enter__()

def test_case_7():
    tracer_0 = module_0.Tracer()
    var_0 = tracer_0.__enter__()
    var_1 = tracer_0.__enter__()
    bytes_0 = None
    str_0 = 'open'
    list_0 = [str_0]
    tracer_1 = module_0.Tracer(bytes_0, list_0)
    var_2 = tracer_1.__enter__()