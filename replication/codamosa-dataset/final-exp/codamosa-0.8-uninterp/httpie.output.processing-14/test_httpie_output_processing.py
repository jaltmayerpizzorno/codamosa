# Automatically generated by Pynguin.
import httpie.output.processing as module_0

def test_case_0():
    pass

def test_case_1():
    str_0 = 'h:<rf+H/L,:'
    conversion_0 = module_0.Conversion()
    optional_0 = conversion_0.get_converter(str_0)

def test_case_2():
    list_0 = []
    formatting_0 = module_0.Formatting(list_0)

def test_case_3():
    str_0 = []
    str_1 = 'a=b'
    str_2 = 'text/plain; charset=utf-8'
    formatting_0 = module_0.Formatting(str_0)
    str_3 = formatting_0.format_body(str_1, str_2)

def test_case_4():
    str_0 = 'Invalid Content-Range returned: %r'
    conversion_0 = module_0.Conversion()
    optional_0 = conversion_0.get_converter(str_0)
    str_1 = 'v~>yIN3S'
    optional_1 = conversion_0.get_converter(str_1)
    str_2 = None
    optional_2 = conversion_0.get_converter(str_2)

def test_case_5():
    str_0 = "The same as :class:`PrettyStream` except that the body is fully\n    fetched before it's processed.\n\n    Suitable regular HTTP responses.\n\n    "
    list_0 = []
    conversion_0 = module_0.Conversion(*list_0)
    optional_0 = conversion_0.get_converter(str_0)

def test_case_6():
    str_0 = None
    list_0 = []
    int_0 = 2597
    formatting_0 = module_0.Formatting(list_0, int_0)
    str_1 = 'append'
    str_2 = formatting_0.format_body(str_0, str_1)

def test_case_7():
    str_0 = 'w9gK\x0c/m\x0ce1jB]YadD- j'
    list_0 = []
    formatting_0 = module_0.Formatting(list_0)
    str_1 = formatting_0.format_headers(str_0)