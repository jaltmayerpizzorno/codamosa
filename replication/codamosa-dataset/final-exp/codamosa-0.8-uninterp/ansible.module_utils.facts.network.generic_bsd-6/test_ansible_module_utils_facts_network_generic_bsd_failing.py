# Automatically generated by Pynguin.
import ansible.module_utils.facts.network.generic_bsd as module_0

def test_case_0():
    try:
        int_0 = 9
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(int_0, int_0)
        str_0 = '~f\x0bQhL<1;bbO*'
        var_0 = generic_bsd_ifconfig_network_0.get_options(str_0)
        str_1 = 'prefixlen'
        int_1 = 329
        bytes_0 = b'\xb5\x14\xd3\x82\xe9q\xcc\xa2\x03tov\xf1'
        var_1 = generic_bsd_ifconfig_network_0.merge_default_interface(str_1, int_1, bytes_0)
        bool_0 = True
        generic_bsd_ifconfig_network_1 = module_0.GenericBsdIfconfigNetwork(bool_0)
        var_2 = generic_bsd_ifconfig_network_1.populate()
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'q^{6\t<=S#G'
        bytes_0 = b'\x04\x96R\xe7\x81l\x81\xd2\x88\x1f\xc1\x92\xd7\x07]'
        tuple_0 = (str_0, bytes_0)
        float_0 = -4053.1427
        dict_0 = {float_0: float_0}
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(dict_0)
        var_0 = generic_bsd_ifconfig_network_0.detect_type_media(tuple_0)
    except BaseException:
        pass

def test_case_2():
    try:
        float_0 = 100.0
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(float_0)
        var_0 = generic_bsd_ifconfig_network_0.get_default_interfaces(float_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'L~5n(gS'
        float_0 = -1872.8707
        list_0 = [str_0, str_0, str_0, float_0]
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(list_0)
        int_0 = -3462
        float_1 = 0.0
        tuple_0 = (int_0, float_1)
        generic_bsd_ifconfig_network_1 = module_0.GenericBsdIfconfigNetwork(tuple_0)
        var_0 = generic_bsd_ifconfig_network_1.get_interfaces_info(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        int_0 = 220
        int_1 = 9
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(int_0, int_1)
        str_0 = 'prefixlen'
        int_2 = 329
        bytes_0 = b'\xb5\x14\xd3\x82\xe9q\xcc\xa2\x03tov\xf1'
        var_0 = generic_bsd_ifconfig_network_0.merge_default_interface(str_0, int_2, bytes_0)
        str_1 = 'W|'
        str_2 = 'm|LU`.t'
        float_0 = -1798.147555
        var_1 = generic_bsd_ifconfig_network_0.parse_options_line(str_1, str_2, float_0)
    except BaseException:
        pass

def test_case_5():
    try:
        generic_bsd_ifconfig_network_0 = None
        float_0 = -212.1197
        str_0 = ' Return a secure hash hex digest of local file, None if file is not present or a directory. '
        bytes_0 = b'\xf2K\xd5\xa9\xd2\x98L\x1f\x8c\xa6\xde\x8bd\xc0'
        generic_bsd_ifconfig_network_1 = module_0.GenericBsdIfconfigNetwork(bytes_0)
        var_0 = generic_bsd_ifconfig_network_1.parse_nd6_line(generic_bsd_ifconfig_network_0, float_0, str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        tuple_0 = None
        bytes_0 = b'\xc8\xb8\x16/\x86Y\xf3\x13X\xe3\xaa\xff'
        dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0, tuple_0: bytes_0, tuple_0: tuple_0}
        str_0 = 'scopeid'
        list_0 = []
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(tuple_0, list_0)
        float_0 = -3335.771
        var_0 = generic_bsd_ifconfig_network_0.detect_type_media(list_0)
        generic_bsd_ifconfig_network_1 = module_0.GenericBsdIfconfigNetwork(float_0)
        var_1 = generic_bsd_ifconfig_network_1.parse_interface_line(str_0)
        generic_bsd_ifconfig_network_2 = module_0.GenericBsdIfconfigNetwork(tuple_0)
        var_2 = generic_bsd_ifconfig_network_2.parse_media_line(str_0, dict_0, str_0)
        int_0 = 9
        var_3 = generic_bsd_ifconfig_network_2.merge_default_interface(dict_0, int_0, generic_bsd_ifconfig_network_2)
        float_1 = 0.1
        str_1 = '+5S\\)lIs'
        var_4 = generic_bsd_ifconfig_network_0.parse_ether_line(float_1, str_1, list_0)
    except BaseException:
        pass

def test_case_7():
    try:
        tuple_0 = None
        bytes_0 = b'\xaazD\\\x93\x9fa\xb4\x17'
        tuple_1 = (bytes_0,)
        dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0, tuple_1: bytes_0, tuple_1: tuple_1}
        int_0 = 220
        str_0 = '&$uXPevj'
        str_1 = 'scopeid'
        float_0 = 1050.0676709686675
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(float_0)
        var_0 = generic_bsd_ifconfig_network_0.parse_media_line(str_0, dict_0, str_1)
        int_1 = 9
        generic_bsd_ifconfig_network_1 = module_0.GenericBsdIfconfigNetwork(int_0, int_1)
        var_1 = generic_bsd_ifconfig_network_0.merge_default_interface(dict_0, int_1, generic_bsd_ifconfig_network_1)
        var_2 = generic_bsd_ifconfig_network_1.parse_status_line(dict_0, generic_bsd_ifconfig_network_0, generic_bsd_ifconfig_network_1)
    except BaseException:
        pass

def test_case_8():
    try:
        int_0 = 220
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(int_0, int_0)
        str_0 = 'prefixlen'
        var_0 = generic_bsd_ifconfig_network_0.parse_inet_line(str_0, generic_bsd_ifconfig_network_0, generic_bsd_ifconfig_network_0)
    except BaseException:
        pass

def test_case_9():
    try:
        int_0 = 223
        list_0 = [int_0, int_0, int_0, int_0]
        str_0 = 'wMb;,w\t"g1xPJ&ki&'
        str_1 = 'T\x0bVh\tIEhg"^1$I$st'
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(str_1)
        var_0 = generic_bsd_ifconfig_network_0.parse_inet6_line(int_0, list_0, str_0)
    except BaseException:
        pass

def test_case_10():
    try:
        bytes_0 = b'\xaazD\\\x93\x9fa\xb4\x17'
        tuple_0 = (bytes_0,)
        int_0 = 9
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(int_0, int_0)
        str_0 = 'prefixlen'
        var_0 = generic_bsd_ifconfig_network_0.merge_default_interface(str_0, int_0, bytes_0)
        str_1 = '%s.%d'
        float_0 = 1.0
        set_0 = set()
        var_1 = generic_bsd_ifconfig_network_0.parse_unknown_line(float_0, tuple_0, set_0)
        var_2 = generic_bsd_ifconfig_network_0.parse_inet_line(str_1, generic_bsd_ifconfig_network_0, generic_bsd_ifconfig_network_0)
    except BaseException:
        pass

def test_case_11():
    try:
        int_0 = 3749
        set_0 = set()
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(set_0)
        var_0 = generic_bsd_ifconfig_network_0.get_options(int_0)
    except BaseException:
        pass

def test_case_12():
    try:
        bytes_0 = b'\xaazD\\\x93\x9fa\xb4\x17'
        int_0 = 225
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(int_0, int_0)
        str_0 = 'eS'
        var_0 = generic_bsd_ifconfig_network_0.merge_default_interface(str_0, int_0, bytes_0)
        str_1 = '%s.%d'
        var_1 = generic_bsd_ifconfig_network_0.parse_inet_line(str_1, generic_bsd_ifconfig_network_0, generic_bsd_ifconfig_network_0)
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = 'l('
        dict_0 = {}
        bool_0 = False
        float_0 = 2108.158
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(float_0)
        var_0 = generic_bsd_ifconfig_network_0.parse_media_line(str_0, dict_0, bool_0)
        str_1 = 'prefixlen'
        tuple_0 = (str_1,)
        set_0 = {float_0, float_0}
        var_1 = generic_bsd_ifconfig_network_0.parse_lladdr_line(tuple_0, set_0, float_0)
    except BaseException:
        pass

def test_case_14():
    try:
        str_0 = 'a_{}Mj=9[p}`'
        complex_0 = None
        float_0 = -1908.0
        tuple_0 = ()
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(tuple_0)
        var_0 = generic_bsd_ifconfig_network_0.parse_inet6_line(str_0, complex_0, float_0)
    except BaseException:
        pass

def test_case_15():
    try:
        int_0 = 3405
        str_0 = 'env:Body'
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(int_0, str_0)
        str_1 = 'alias'
        str_2 = 'v6'
        str_3 = '/usr/local/bin'
        var_0 = generic_bsd_ifconfig_network_0.parse_tunnel_line(str_1, str_2, str_3)
    except BaseException:
        pass

def test_case_16():
    try:
        bool_0 = False
        str_0 = None
        tuple_0 = ()
        set_0 = {str_0, tuple_0, str_0, str_0}
        complex_0 = None
        tuple_1 = (tuple_0, set_0, complex_0)
        str_1 = '|vXH$t@<wtn9('
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(str_1)
        tuple_2 = (str_0, tuple_1, complex_0, generic_bsd_ifconfig_network_0)
        bytes_0 = b'y\x87\xb8hQ[Hy*\xa4ZVN\x96\xc2\x92\x9b\x08\xed'
        generic_bsd_ifconfig_network_1 = module_0.GenericBsdIfconfigNetwork(bytes_0)
        var_0 = generic_bsd_ifconfig_network_1.parse_inet6_line(tuple_2, bool_0, tuple_0)
    except BaseException:
        pass

def test_case_17():
    try:
        generic_bsd_ifconfig_network_0 = None
        str_0 = ' holds stats about per-host activity during playbook runs '
        float_0 = 1.5
        tuple_0 = (generic_bsd_ifconfig_network_0, str_0, float_0)
        bytes_0 = b''
        dict_0 = {generic_bsd_ifconfig_network_0: generic_bsd_ifconfig_network_0, str_0: generic_bsd_ifconfig_network_0, bytes_0: tuple_0, str_0: bytes_0}
        bool_0 = True
        bytes_1 = b''
        list_0 = [bytes_1, bytes_1]
        generic_bsd_ifconfig_network_1 = module_0.GenericBsdIfconfigNetwork(list_0)
        var_0 = generic_bsd_ifconfig_network_1.parse_ether_line(tuple_0, dict_0, bool_0)
    except BaseException:
        pass

def test_case_18():
    try:
        str_0 = ']\niw,=-oB<$9e;}'
        list_0 = [str_0, str_0, str_0]
        str_1 = 'V.'
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(str_1)
        var_0 = generic_bsd_ifconfig_network_0.parse_interface_line(list_0)
    except BaseException:
        pass

def test_case_19():
    try:
        int_0 = 9
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(int_0, int_0)
        str_0 = '~f\x0bQhL<1;b)O*3'
        var_0 = generic_bsd_ifconfig_network_0.get_options(str_0)
        var_1 = generic_bsd_ifconfig_network_0.get_default_interfaces(generic_bsd_ifconfig_network_0)
    except BaseException:
        pass

def test_case_20():
    try:
        int_0 = -1374
        dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
        bool_0 = True
        float_0 = -729.94342
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(float_0)
        var_0 = generic_bsd_ifconfig_network_0.parse_tunnel_line(int_0, dict_0, bool_0)
        generic_bsd_ifconfig_network_1 = None
        dict_1 = {generic_bsd_ifconfig_network_1: generic_bsd_ifconfig_network_1, generic_bsd_ifconfig_network_1: generic_bsd_ifconfig_network_1}
        int_1 = None
        tuple_0 = (generic_bsd_ifconfig_network_1, dict_1, int_1)
        bool_1 = None
        int_2 = 3268
        bytes_0 = b'\xb6\xfc\xb8\xcc\x83\x8f\x82\xd7\xb4F\x14\xa7\xb4\xc7u\x9d\xd7\xf2-'
        generic_bsd_ifconfig_network_2 = module_0.GenericBsdIfconfigNetwork(bytes_0)
        var_1 = generic_bsd_ifconfig_network_2.parse_inet6_line(tuple_0, bool_1, int_2)
    except BaseException:
        pass

def test_case_21():
    try:
        tuple_0 = None
        bytes_0 = b'\xaazD\\\x93\x9fa\xb4\x17'
        dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0, tuple_0: bytes_0, tuple_0: tuple_0}
        int_0 = 9
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(int_0, int_0)
        str_0 = '&0""+S|%jw\x0bi\t'
        var_0 = generic_bsd_ifconfig_network_0.parse_inet_line(str_0, tuple_0, dict_0)
    except BaseException:
        pass

def test_case_22():
    try:
        tuple_0 = None
        int_0 = -2005
        float_0 = -951.6
        str_0 = ''
        dict_0 = {tuple_0: int_0, int_0: float_0, float_0: str_0, tuple_0: str_0}
        str_1 = '>1K%oBK!"{'
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(str_1)
        var_0 = generic_bsd_ifconfig_network_0.detect_type_media(dict_0)
    except BaseException:
        pass