# Automatically generated by Pynguin.
import httpie.cli.argtypes as module_0
import httpie.cli.requestitems as module_1

def test_case_0():
    try:
        str_0 = None
        key_value_arg_0 = module_0.KeyValueArg(str_0, str_0, str_0, str_0)
        str_1 = module_1.process_empty_header_arg(key_value_arg_0)
        var_0 = module_1.process_data_embed_raw_json_file_arg(key_value_arg_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '""$-C|c'
        key_value_arg_0 = module_0.KeyValueArg(str_0, str_0, str_0, str_0)
        str_1 = module_1.process_empty_header_arg(key_value_arg_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = ';type='
        key_value_arg_0 = module_0.KeyValueArg(str_0, str_0, str_0, str_0)
        tuple_0 = module_1.process_file_upload_arg(key_value_arg_0)
    except BaseException:
        pass

def test_case_3():
    try:
        key_value_arg_0 = None
        str_0 = module_1.process_data_item_arg(key_value_arg_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = None
        key_value_arg_0 = module_0.KeyValueArg(str_0, str_0, str_0, str_0)
        str_1 = module_1.process_data_embed_file_contents_arg(key_value_arg_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = None
        key_value_arg_0 = module_0.KeyValueArg(str_0, str_0, str_0, str_0)
        var_0 = module_1.process_data_embed_raw_json_file_arg(key_value_arg_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = '_K>g'
        str_1 = None
        key_value_arg_0 = module_0.KeyValueArg(str_1, str_0, str_0, str_1)
        var_0 = module_1.process_data_embed_raw_json_file_arg(key_value_arg_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'SlI%.AAX.$IVrzBb"K@'
        key_value_arg_0 = module_0.KeyValueArg(str_0, str_0, str_0, str_0)
        str_1 = ',Z?\x0c'
        var_0 = module_1.load_json(key_value_arg_0, str_1)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = None
        str_1 = None
        str_2 = '\n        Sorts headers by name while retaining relative\n        order of multiple headers with the same name.\n\n        '
        key_value_arg_0 = module_0.KeyValueArg(str_0, str_0, str_1, str_2)
        optional_0 = module_1.process_header_arg(key_value_arg_0)
        key_value_arg_1 = module_0.KeyValueArg(str_0, str_0, str_0, str_0)
        var_0 = module_1.process_data_embed_raw_json_file_arg(key_value_arg_1)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = "WO8'Nh"
        key_value_arg_0 = module_0.KeyValueArg(str_0, str_0, str_0, str_0)
        tuple_0 = module_1.process_file_upload_arg(key_value_arg_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = '0g>S6'
        str_1 = None
        key_value_arg_0 = module_0.KeyValueArg(str_0, str_1, str_1, str_0)
        var_0 = module_1.load_json(key_value_arg_0, str_1)
    except BaseException:
        pass

def test_case_11():
    try:
        bytes_0 = b'U\xb6\xef_\xe3\xc9j\x94\xcbzb\xea\x98\xd1\x80'
        request_items_0 = module_1.RequestItems(bytes_0)
        str_0 = 'B'
        str_1 = '#\n\nGxZjQlR>\r)it'
        key_value_arg_0 = module_0.KeyValueArg(str_0, str_0, str_1, str_1)
        tuple_0 = module_1.process_file_upload_arg(key_value_arg_0)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = 'test.txt'
        str_1 = 'test.txt'
        str_2 = "' request headers\n        '"
        key_value_arg_0 = module_0.KeyValueArg(str_0, str_1, str_2, str_1)
        var_0 = module_1.process_data_embed_raw_json_file_arg(key_value_arg_0)
    except BaseException:
        pass