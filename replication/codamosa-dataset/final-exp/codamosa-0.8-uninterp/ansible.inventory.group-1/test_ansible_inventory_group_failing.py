# Automatically generated by Pynguin.
import ansible.inventory.group as module_0

def test_case_0():
    try:
        list_0 = None
        group_0 = module_0.Group()
        var_0 = group_0.__setstate__(list_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'test'
        group_0 = module_0.Group(str_0)
        var_0 = group_0.add_host(group_0)
    except BaseException:
        pass

def test_case_2():
    try:
        group_0 = module_0.Group()
        var_0 = group_0.serialize()
        str_0 = ',PM-bT( '
        group_1 = module_0.Group()
        var_1 = group_1.set_priority(group_1)
        var_2 = group_1.remove_host(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        group_0 = module_0.Group()
        var_0 = group_0.remove_host(group_0)
        var_1 = group_0.get_hosts()
        group_1 = module_0.Group()
        var_2 = group_0.add_child_group(group_1)
        var_3 = group_1.get_vars()
        group_2 = module_0.Group()
        var_4 = group_2.__repr__()
        var_5 = group_1.get_vars()
        var_6 = group_0.get_hosts()
        var_7 = group_0.get_name()
        var_8 = group_0.clear_hosts_cache()
        bytes_0 = b'"\xf8\x86\xa2\x99\x0e'
        list_0 = []
        var_9 = group_1.set_variable(bytes_0, list_0)
        var_10 = group_1.__getstate__()
        str_0 = 'F\tYUN<nI:KYE}<b-GD'
        str_1 = 'SsNG@eOz<M! Tz~qsy1i'
        group_3 = module_0.Group(str_1)
        var_11 = group_3.set_priority(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'PQ,00DIR0 jAs,kO'
        group_0 = module_0.Group(str_0)
        str_1 = 'E'
        group_1 = module_0.Group(str_1)
        str_2 = 'F'
        group_2 = module_0.Group(str_2)
        var_0 = group_2.add_child_group(group_0)
        var_1 = group_2.add_child_group(group_0)
        var_2 = group_1.add_child_group(group_0)
        var_3 = group_2.add_child_group(group_2)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'B'
        group_0 = module_0.Group(str_0)
        var_0 = group_0.get_descendants()
        str_1 = 'E'
        group_1 = module_0.Group(str_1)
        var_1 = group_0.remove_host(group_0)
        group_2 = module_0.Group(str_1)
        dict_0 = {}
        var_2 = group_1.deserialize(dict_0)
        var_3 = group_2.add_child_group(group_0)
        bool_0 = False
        var_4 = group_1.set_priority(bool_0)
        var_5 = group_2.add_child_group(group_0)
        var_6 = group_1.add_child_group(group_0)
        var_7 = group_1.add_child_group(group_2)
        var_8 = group_2.serialize()
        var_9 = group_0.add_host(group_1)
    except BaseException:
        pass

def test_case_6():
    try:
        group_0 = module_0.Group()
        var_0 = group_0.remove_host(group_0)
        var_1 = group_0.add_host(group_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'AS>9gMGL|\r~a%+f'
        group_0 = module_0.Group(str_0)
        str_1 = 'E'
        group_1 = module_0.Group(str_1)
        group_2 = module_0.Group(str_1)
        var_0 = group_2.add_child_group(group_0)
        var_1 = group_2.add_child_group(group_0)
        var_2 = group_1.add_child_group(group_0)
        var_3 = group_0.add_child_group(group_2)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = 'AS>9gMGL|\r~a%+f'
        int_0 = 302
        list_0 = []
        list_1 = [int_0, int_0, list_0]
        group_0 = module_0.Group()
        var_0 = group_0.__getstate__()
        group_1 = module_0.Group()
        var_1 = group_1.get_hosts()
        var_2 = group_1.remove_host(group_0)
        str_1 = '%04o'
        str_2 = 'T%aOX=J>>'
        dict_0 = {str_1: var_2, str_2: list_1}
        var_3 = group_0.deserialize(dict_0)
        group_2 = module_0.Group(str_0)
        var_4 = group_1.__str__()
        var_5 = group_2.get_descendants()
        dict_1 = {}
        var_6 = group_2.deserialize(dict_1)
        var_7 = group_0.add_child_group(group_2)
        var_8 = group_1.add_child_group(group_2)
        var_9 = group_2.serialize()
        var_10 = group_2.add_child_group(group_1)
    except BaseException:
        pass