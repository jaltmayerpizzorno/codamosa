# Automatically generated by Pynguin.
import ansible.module_utils.facts.hardware.openbsd as module_0

def test_case_0():
    try:
        bool_0 = True
        open_b_s_d_hardware_0 = module_0.OpenBSDHardware(bool_0)
        var_0 = open_b_s_d_hardware_0.populate()
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = b'\xdd\xb5\x1c\rv\x98\xc9;,\xe9\xb7'
        open_b_s_d_hardware_0 = module_0.OpenBSDHardware(bytes_0)
        var_0 = open_b_s_d_hardware_0.get_memory_facts()
    except BaseException:
        pass

def test_case_2():
    try:
        bool_0 = True
        open_b_s_d_hardware_0 = module_0.OpenBSDHardware(bool_0, bool_0)
        var_0 = open_b_s_d_hardware_0.get_uptime_facts()
    except BaseException:
        pass

def test_case_3():
    try:
        bool_0 = False
        open_b_s_d_hardware_0 = module_0.OpenBSDHardware(bool_0)
        str_0 = "Z'JtBK8Gj6!h"
        open_b_s_d_hardware_1 = module_0.OpenBSDHardware(str_0)
        var_0 = open_b_s_d_hardware_1.get_processor_facts()
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = ')"r>nAK'
        open_b_s_d_hardware_0 = module_0.OpenBSDHardware(str_0)
        var_0 = open_b_s_d_hardware_0.get_device_facts()
    except BaseException:
        pass

def test_case_5():
    try:
        bool_0 = True
        open_b_s_d_hardware_0 = module_0.OpenBSDHardware(bool_0)
        var_0 = open_b_s_d_hardware_0.get_dmi_facts()
    except BaseException:
        pass