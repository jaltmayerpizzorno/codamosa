# Automatically generated by Pynguin.
import ansible.playbook.helpers as module_0
import ansible.utils.display as module_1

def test_case_0():
    try:
        tuple_0 = ()
        bytes_0 = None
        bool_0 = True
        tuple_1 = ()
        list_0 = [bytes_0, tuple_1]
        var_0 = module_0.load_list_of_blocks(tuple_0, bytes_0, bool_0, list_0)
    except BaseException:
        pass

def test_case_1():
    try:
        float_0 = -2211.0
        str_0 = None
        var_0 = module_0.load_list_of_tasks(float_0, str_0, str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '\n    Unit test for load_list_of_tasks\n\n    '
        list_0 = [str_0, str_0]
        bytes_0 = b'\xa9\xdas\x1d\xc7Oo\xe5'
        dict_0 = None
        var_0 = module_0.load_list_of_blocks(list_0, bytes_0, dict_0, list_0)
    except BaseException:
        pass

def test_case_3():
    try:
        int_0 = 4096
        float_0 = 897.997
        bool_0 = None
        bytes_0 = b'\xc4r\xb6.#Rio\x16Z\x8aYo\xf7\x17\x7f\x82)9{'
        str_0 = '*QfEA;nOdm)Yi)A25D'
        tuple_0 = (int_0, bytes_0, str_0)
        list_0 = [int_0, float_0, bool_0]
        set_0 = {bytes_0}
        str_1 = '/etc/yum.conf'
        var_0 = module_0.load_list_of_roles(list_0, set_0, str_1, tuple_0)
    except BaseException:
        pass

def test_case_4():
    try:
        tuple_0 = ()
        bool_0 = False
        float_0 = None
        int_0 = None
        var_0 = module_0.load_list_of_roles(tuple_0, bool_0, float_0, int_0)
    except BaseException:
        pass

def test_case_5():
    try:
        list_0 = []
        bytes_0 = b'f\xe1\xfeZ\xa8\xe3L'
        display_0 = module_1.Display()
        bool_0 = True
        var_0 = module_0.load_list_of_roles(list_0, bytes_0, display_0, bool_0)
        str_0 = 'ndEce'
        str_1 = '%DSm{I=V'
        str_2 = {str_0: str_1}
        str_3 = {}
        str_4 = [str_2, str_3]
        var_1 = None
        bool_1 = True
        var_2 = module_0.load_list_of_tasks(str_4, var_1, var_1, var_1, var_1, bool_1, var_1, var_1)
    except BaseException:
        pass

def test_case_6():
    try:
        var_0 = {}
        var_1 = [var_0, var_0]
        var_2 = None
        bool_0 = False
        var_3 = module_0.load_list_of_tasks(var_1, var_2, var_2, bool_0, var_2)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = '/ok'
        str_1 = {str_0: str_0}
        str_2 = [str_1, str_0]
        bool_0 = True
        var_0 = module_0.load_list_of_tasks(str_2, bool_0, bool_0, bool_0, bool_0, bool_0, bool_0, bool_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = 'nEme'
        str_1 = '%DSm{I=V'
        str_2 = {str_0: str_1}
        str_3 = [str_2, str_0]
        bool_0 = True
        var_0 = module_0.load_list_of_tasks(str_3, str_3, str_3, str_3, str_3, bool_0, str_3, str_3)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'n3mEe'
        str_1 = '%DSm{I=V'
        str_2 = {str_0: str_1}
        str_3 = [str_2, str_0]
        bool_0 = False
        var_0 = module_0.load_list_of_tasks(str_3, str_3, str_3, str_3, str_3, bool_0, str_3, str_3)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = 'action'
        str_1 = 'ping'
        str_2 = {str_0: str_1}
        str_3 = [str_2]
        bool_0 = False
        var_0 = module_0.load_list_of_tasks(str_3, str_0, str_0, str_0, str_0, bool_0, str_0, str_0)
        var_1 = var_0[bool_0]
        str_4 = 'include'
        str_5 = {str_4: str_2}
        str_6 = [str_5]
        var_2 = module_0.load_list_of_tasks(str_6, var_0, var_0, var_0, var_0, bool_0, var_0, var_0)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = 'action'
        str_1 = 'ping'
        str_2 = {str_0: str_1}
        str_3 = [str_2]
        bool_0 = True
        var_0 = module_0.load_list_of_tasks(str_3, str_3, str_3, str_3, str_3, bool_0, str_3, str_3)
        str_4 = 'include'
        str_5 = 'foobar.yaml'
        str_6 = {str_4: str_5}
        str_7 = [str_6]
        var_1 = module_0.load_list_of_tasks(str_7, var_0, var_0, var_0, var_0, bool_0, var_0, var_0)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = 'action'
        str_1 = 'ping'
        str_2 = {str_0: str_1}
        str_3 = [str_2]
        var_0 = None
        bool_0 = True
        var_1 = module_0.load_list_of_tasks(str_3, var_0, var_0, var_0, var_0, bool_0, var_0, var_0)
        str_4 = 'include'
        str_5 = {str_4: str_2}
        str_6 = [str_5]
        var_2 = module_0.load_list_of_tasks(str_6, var_0, var_0, var_0, var_0, bool_0, var_0, var_0)
    except BaseException:
        pass