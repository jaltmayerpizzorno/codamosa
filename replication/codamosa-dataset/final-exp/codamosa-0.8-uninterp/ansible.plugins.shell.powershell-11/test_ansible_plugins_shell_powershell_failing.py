# Automatically generated by Pynguin.
import ansible.plugins.shell.powershell as module_0

def test_case_0():
    try:
        dict_0 = {}
        shell_module_0 = module_0.ShellModule()
        var_0 = shell_module_0.expand_user(dict_0)
        int_0 = 1885
        var_1 = shell_module_0.get_remote_filename(int_0)
    except BaseException:
        pass

def test_case_1():
    try:
        shell_module_0 = module_0.ShellModule()
        var_0 = shell_module_0.path_has_trailing_slash(shell_module_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'z9fn;_^8jU'
        bool_0 = None
        bytes_0 = b''
        shell_module_0 = module_0.ShellModule()
        tuple_0 = (bool_0, bytes_0, shell_module_0)
        shell_module_1 = module_0.ShellModule()
        var_0 = shell_module_1.chmod(str_0, tuple_0)
    except BaseException:
        pass

def test_case_3():
    try:
        shell_module_0 = module_0.ShellModule()
        bytes_0 = b'7=\r\xb6'
        str_0 = 'f)C\\^'
        var_0 = shell_module_0.chown(bytes_0, str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = "Gz5}L^fUG'\x0baKJ"
        float_0 = 3287.33
        shell_module_0 = module_0.ShellModule()
        var_0 = shell_module_0.exists(float_0)
        int_0 = 121
        list_0 = []
        dict_0 = {str_0: str_0, str_0: list_0}
        shell_module_1 = module_0.ShellModule()
        var_1 = shell_module_1.expand_user(dict_0)
        var_2 = shell_module_1.remove(shell_module_1)
        shell_module_2 = module_0.ShellModule()
        set_0 = {int_0}
        var_3 = shell_module_2.checksum(set_0)
        float_1 = 2.0
        str_1 = 'o-!)|G}jx~'
        var_4 = shell_module_2.build_module_command(float_1, str_0, str_1)
        bytes_0 = b'a'
        var_5 = shell_module_2.set_user_facl(bytes_0, set_0, bytes_0)
    except BaseException:
        pass

def test_case_5():
    try:
        shell_module_0 = module_0.ShellModule()
        var_0 = shell_module_0.mkdtemp()
    except BaseException:
        pass

def test_case_6():
    try:
        bool_0 = False
        list_0 = [bool_0]
        shell_module_0 = module_0.ShellModule()
        var_0 = shell_module_0.mkdtemp(list_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'bSsl!'
        str_1 = "Gz5}L^fUG'\x0baKJ"
        int_0 = 112
        shell_module_0 = module_0.ShellModule()
        var_0 = shell_module_0.remove(int_0)
        float_0 = -417.48845
        list_0 = [float_0, float_0, float_0]
        str_2 = '/'
        bool_0 = None
        var_1 = shell_module_0.build_module_command(list_0, str_2, bool_0)
        set_0 = set()
        float_1 = 2.0
        list_1 = [str_0, set_0, str_1, set_0]
        var_2 = shell_module_0.exists(list_1)
        str_3 = 'o-!)|G}jx~'
        var_3 = shell_module_0.build_module_command(float_1, set_0, str_3)
    except BaseException:
        pass

def test_case_8():
    try:
        int_0 = 113
        shell_module_0 = module_0.ShellModule()
        var_0 = shell_module_0.remove(int_0)
        set_0 = set()
        str_0 = 'D}<\ror-z~$AV'
        str_1 = ''
        var_1 = shell_module_0.build_module_command(str_0, set_0, str_1)
        var_2 = shell_module_0.checksum(set_0)
        float_0 = 2.0
        str_2 = 'o-!)|G}jx~'
        shell_module_1 = module_0.ShellModule()
        var_3 = shell_module_1.build_module_command(float_0, set_0, str_2)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'Z7,>`cRW\x0cxr'
        str_1 = "Gz5}L^fUG'\x0baKJ"
        shell_module_0 = module_0.ShellModule()
        float_0 = 3.030167058088711
        str_2 = '1@j~:!7i$e\tpbc'
        shell_module_1 = module_0.ShellModule()
        var_0 = shell_module_1.get_remote_filename(str_2)
        dict_0 = None
        var_1 = shell_module_0.expand_user(dict_0)
        var_2 = shell_module_0.remove(float_0)
        shell_module_2 = module_0.ShellModule()
        set_0 = set()
        list_0 = [set_0, str_0, str_1, set_0]
        shell_module_3 = module_0.ShellModule()
        shell_module_4 = module_0.ShellModule()
        var_3 = shell_module_0.expand_user(shell_module_3)
        tuple_0 = ()
        var_4 = shell_module_2.mkdtemp(list_0, list_0, tuple_0, list_0)
        shell_module_5 = module_0.ShellModule()
        float_1 = 280.54
        var_5 = shell_module_1.path_has_trailing_slash(float_1)
    except BaseException:
        pass

def test_case_10():
    try:
        shell_module_0 = module_0.ShellModule()
        str_0 = 'bHTkmI#xyr)'
        str_1 = '#!poweVshell'
        var_0 = shell_module_0.build_module_command(str_0, str_1, str_0)
        var_1 = shell_module_0.checksum(shell_module_0)
        var_2 = type(shell_module_0)
        shell_module_1 = module_0.ShellModule()
        shell_module_2 = module_0.ShellModule()
        str_2 = '/(%1\nW?\x0b?keZCxBiyty'
        shell_module_3 = module_0.ShellModule()
        var_3 = shell_module_3.remove(str_2)
        shell_module_4 = module_0.ShellModule()
        str_3 = '0za'
        set_0 = set()
        var_4 = shell_module_3.expand_user(set_0)
        str_4 = ']Q.4]qZ&zvKI?M{O'
        dict_0 = {str_3: str_3, str_4: str_4}
        var_5 = shell_module_4.path_has_trailing_slash(dict_0)
    except BaseException:
        pass

def test_case_11():
    try:
        shell_module_0 = module_0.ShellModule()
        str_0 = '/tmp/'
        var_0 = shell_module_0.path_has_trailing_slash(str_0)
        str_1 = '/tmp'
        var_1 = shell_module_0.path_has_trailing_slash(str_1)
    except BaseException:
        pass