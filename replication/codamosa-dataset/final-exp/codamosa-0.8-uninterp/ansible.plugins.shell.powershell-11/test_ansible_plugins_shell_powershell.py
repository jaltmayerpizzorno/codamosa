# Automatically generated by Pynguin.
import ansible.plugins.shell.powershell as module_0

def test_case_0():
    pass

def test_case_1():
    shell_module_0 = module_0.ShellModule()
    var_0 = shell_module_0.env_prefix()
    list_0 = [shell_module_0, shell_module_0]
    list_1 = [list_0]
    var_1 = shell_module_0.join_path(*list_1)

def test_case_2():
    set_0 = set()
    str_0 = '\x0cZ'
    shell_module_0 = module_0.ShellModule()
    var_0 = shell_module_0.get_remote_filename(str_0)
    shell_module_1 = module_0.ShellModule()
    var_1 = shell_module_1.remove(set_0)

def test_case_3():
    set_0 = set()
    shell_module_0 = module_0.ShellModule()
    var_0 = shell_module_0.remove(set_0)

def test_case_4():
    list_0 = []
    shell_module_0 = module_0.ShellModule()
    var_0 = shell_module_0.expand_user(list_0)

def test_case_5():
    shell_module_0 = module_0.ShellModule()
    var_0 = shell_module_0.exists(shell_module_0)

def test_case_6():
    int_0 = None
    list_0 = [int_0, int_0, int_0]
    str_0 = '$:-Hs_?f,\t'
    bool_0 = True
    dict_0 = {str_0: bool_0, str_0: list_0}
    shell_module_0 = module_0.ShellModule()
    var_0 = shell_module_0.checksum(list_0, **dict_0)

def test_case_7():
    str_0 = '#!powershell'
    shell_module_0 = module_0.ShellModule()
    var_0 = shell_module_0.build_module_command(str_0, str_0, str_0)

def test_case_8():
    shell_module_0 = module_0.ShellModule()
    str_0 = '3'
    var_0 = shell_module_0.wrap_for_exec(str_0)
    bool_0 = True
    var_1 = shell_module_0.expand_user(bool_0)

def test_case_9():
    int_0 = 1652
    shell_module_0 = module_0.ShellModule()
    set_0 = {shell_module_0, int_0}
    var_0 = shell_module_0.expand_user(set_0)
    str_0 = 'n\\'
    shell_module_1 = module_0.ShellModule()
    var_1 = shell_module_0.remove(str_0, shell_module_1)

def test_case_10():
    str_0 = "\n            Try\n            {\n                [-3458.8542204806636, 'PowerShell -NoProfile -NonInteractive -ExecutionPolicy Unrestricted -EncodedCommand UwBlAHQALQBTAHQAcgBpAGMAdABNAG8AZABlACAALQBWAGUAcgBzAGkAbwBuACAATABhAHQAZQBzAHQACgBSAGUAbQBvAHYAZQAtAEkAdABlAG0AIAAnADEAMQAyACcAIAAtAEYAbwByAGMAZQA7AAoASQBmACAAKAAtAG4AbwB0ACAAJAA/ACkAIAB7ACAASQBmACAAKABHAGUAdAAtAFYAYQByAGkAYQBiAGwAZQAgAEwAQQBTAFQARQBYAEkAVABDAE8ARABFACAALQBFAHIAcgBvAHIAQQBjAHQAaQBvAG4AIABTAGkAbABlAG4AdABsAHkAQwBvAG4AdABpAG4AdQBlACkAIAB7ACAAZQB4AGkAdAAgACQATABBAFMAVABFAFgASQBUAEMATwBEAEUAIAB9ACAARQBsAHMAZQAgAHsAIABlAHgAaQB0ACAAMQAgAH0AIAB9AA==', 'bGsl!', -3458.8542204806636, 112, 112]\n                \n            }\n            Catch\n            {\n                $_obj = @{ failed = $true }\n                If ($_.Exception.GetType)\n                {\n                    $_obj.Add('msg', $_.Exception.Message)\n                }\n                Else\n                {\n                    $_obj.Add('msg', $_.ToString())\n                }\n                If ($_.InvocationInfo.PositionMessage)\n                {\n                    $_obj.Add('exception', $_.InvocationInfo.PositionMessage)\n                }\n                ElseIf ($_.ScriptStackTrace)\n                {\n                    $_obj.Add('exception', $_.ScriptStackTrace)\n                }\n                Try\n                {\n                    $_obj.Add('error_record', ($_ | ConvertTo-Json | ConvertFrom-Json))\n                }\n                Catch\n                {\n                }\n                Echo $_obj | ConvertTo-Json -Compress -Depth 99\n                Exit 1\n            }\n        "
    shell_module_0 = module_0.ShellModule()
    var_0 = shell_module_0.build_module_command(str_0, str_0, str_0)
    tuple_0 = ()
    var_1 = shell_module_0.expand_user(tuple_0)

def test_case_11():
    int_0 = 43
    dict_0 = {int_0: int_0}
    shell_module_0 = module_0.ShellModule()
    var_0 = shell_module_0.remove(dict_0)
    list_0 = [var_0, shell_module_0]
    var_1 = shell_module_0.join_path(*list_0)
    shell_module_1 = module_0.ShellModule()
    var_2 = frozenset()

def test_case_12():
    var_0 = None
    shell_module_0 = module_0.ShellModule()
    str_0 = '~/test'
    var_1 = shell_module_0.env_prefix()
    var_2 = shell_module_0.expand_user(str_0)
    str_1 = '~\\test'
    var_3 = shell_module_0.expand_user(str_1)
    str_2 = '~'
    var_4 = shell_module_0.expand_user(str_2)
    var_5 = shell_module_0.expand_user(str_2)

def test_case_13():
    var_0 = None
    shell_module_0 = module_0.ShellModule()
    str_0 = '~/test'
    var_1 = shell_module_0.expand_user(str_0)
    str_1 = '~\\test'
    var_2 = shell_module_0.expand_user(str_1)
    shell_module_1 = module_0.ShellModule()

def test_case_14():
    var_0 = None
    shell_module_0 = module_0.ShellModule()
    str_0 = '/tmp/demo.exe'
    var_1 = shell_module_0.get_remote_filename(str_0)
    str_1 = '/tmp/demo.txt'
    var_2 = shell_module_0.get_remote_filename(str_1)
    str_2 = '/tmp/demo'
    var_3 = shell_module_0.get_remote_filename(str_2)