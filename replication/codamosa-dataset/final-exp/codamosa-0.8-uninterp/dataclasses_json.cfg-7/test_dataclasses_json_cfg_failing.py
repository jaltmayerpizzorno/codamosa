# Automatically generated by Pynguin.
import dataclasses_json.cfg as module_0

def test_case_0():
    try:
        optional_0 = None
        dict_0 = {optional_0: optional_0, optional_0: optional_0}
        bool_0 = False
        global_config_0 = module_0._GlobalConfig()
        complex_0 = None
        dict_1 = module_0.config(encoder=optional_0, decoder=dict_0, mm_field=bool_0, letter_case=complex_0)
        global_config_1 = module_0._GlobalConfig()
        exclude_0 = module_0.Exclude()
        list_0 = []
        dict_2 = module_0.config(exclude=list_0)
    except BaseException:
        pass

def test_case_1():
    try:
        optional_0 = None
        dict_0 = {optional_0: optional_0, optional_0: optional_0}
        bool_0 = False
        global_config_0 = module_0._GlobalConfig()
        complex_0 = None
        dict_1 = module_0.config(encoder=optional_0, decoder=dict_0, mm_field=bool_0, letter_case=complex_0)
        global_config_1 = module_0._GlobalConfig()
        exclude_0 = module_0.Exclude()
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '3l!^b=.(#*G[L'
        dict_0 = None
        dict_1 = module_0.config(dict_0, undefined=str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'bN!2#To ejmzQV8,z'
        dict_0 = module_0.config(field_name=str_0)
        dict_1 = None
        dict_2 = module_0.config(dict_1, undefined=str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        global_config_0 = module_0._GlobalConfig()
        bytes_0 = None
        bytes_1 = b'7\xb4\xed\xa8\x87'
        optional_0 = None
        var_0 = None
        str_0 = ' with either the `dataclass_json` decorator or mixin.'
        str_1 = ' detected when decoding '
        str_2 = 'RyrHLOm6\\84K'
        dict_0 = {str_0: var_0, str_1: bytes_0, str_2: var_0}
        dict_1 = module_0.config(bytes_0, encoder=global_config_0, decoder=bytes_1, mm_field=optional_0, undefined=var_0, field_name=dict_0)
        exclude_0 = module_0.Exclude(**dict_0)
    except BaseException:
        pass

def test_case_5():
    try:
        global_config_0 = module_0._GlobalConfig()
        optional_0 = None
        bytes_0 = b'o\x9ao\xe0\\'
        str_0 = 'oEx"\'.7&?CS$37g!'
        dict_0 = module_0.config(decoder=optional_0, undefined=bytes_0, field_name=str_0)
        global_config_1 = module_0._GlobalConfig()
        dict_1 = {global_config_0: bytes_0, bytes_0: global_config_0, bytes_0: global_config_0}
        dict_2 = module_0.config(decoder=dict_1, undefined=str_0, exclude=str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        exclude_0 = module_0.Exclude()
        optional_0 = None
        str_0 = "jYo)u|'w\tNL\\>."
        dict_0 = module_0.config(exclude_0, decoder=optional_0, field_name=str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        dict_0 = {}
        exclude_0 = module_0.Exclude(**dict_0)
        str_0 = 'yD|PIngHYh<,tsqJI'
        dict_1 = module_0.config(letter_case=exclude_0, undefined=str_0, field_name=str_0)
    except BaseException:
        pass