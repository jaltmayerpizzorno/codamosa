# Automatically generated by Pynguin.
import docstring_parser.numpydoc as module_0

def test_case_0():
    try:
        str_0 = '\nva@V.\\'
        section_0 = module_0.Section(str_0, str_0)
        str_1 = "'Vcpx"
        str_2 = 'GB{l'
        iterable_0 = section_0.parse(str_2)
        deprecation_section_0 = module_0.DeprecationSection(str_0, str_2)
        iterable_1 = deprecation_section_0.parse(str_1)
        numpydoc_parser_0 = module_0.NumpydocParser(iterable_1)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'keyword'
        section_0 = module_0.Section(str_0, str_0)
        str_1 = 'A}e<SO9'
        iterable_0 = section_0.parse(str_1)
        str_2 = ''
        str_3 = ';ft-)'
        str_4 = None
        str_5 = '=l[s\x0cD\x0bS\x0cDACt\rEl5'
        sphinx_section_0 = module_0._SphinxSection(str_4, str_5)
        str_6 = 'raise'
        yields_section_0 = module_0.YieldsSection(str_0, str_6)
        dict_0 = {str_0: section_0, str_0: section_0, str_2: section_0, str_3: section_0}
        numpydoc_parser_0 = module_0.NumpydocParser(dict_0)
    except BaseException:
        pass

def test_case_2():
    try:
        numpydoc_parser_0 = module_0.NumpydocParser()
        numpydoc_parser_1 = module_0.NumpydocParser()
        str_0 = 'Parse ``DocstringMeta`` objects rom the body of this section.\n\n        :param text: section body text. Should be cleaned with\n                     ``inspect.cleandoc`` before parsing.\n        '
        deprecation_section_0 = module_0.DeprecationSection(str_0, str_0)
        str_1 = ',-*'
        str_2 = 'et:kx`JQ^@\r+_$b'
        param_section_0 = module_0.ParamSection(str_0, str_2)
        str_3 = 'argument'
        docstring_0 = module_0.parse(str_3)
        str_4 = ':'
        str_5 = '=_ry7j{\n//bBmXR0H)_'
        k_v_section_0 = module_0._KVSection(str_5, str_5)
        iterable_0 = k_v_section_0.parse(str_4)
        docstring_1 = numpydoc_parser_1.parse(str_4)
        str_6 = 'v?'
        param_section_1 = module_0.ParamSection(str_6, str_2)
        docstring_2 = module_0.parse(str_5)
        docstring_3 = numpydoc_parser_0.parse(str_1)
        str_7 = 'pQbR60/tWrssQ]'
        str_8 = "IUv#@$dft'"
        section_0 = module_0.Section(str_7, str_8)
        str_9 = 'a!K@B,'
        section_1 = module_0.Section(str_8, str_9)
        numpydoc_parser_2 = module_0.NumpydocParser(iterable_0)
    except BaseException:
        pass