# Automatically generated by Pynguin.
import isort.format as module_0
import pathlib as module_1
import typing as module_2

def test_case_0():
    colorama_printer_0 = module_0.ColoramaPrinter()

def test_case_1():
    basic_printer_0 = module_0.BasicPrinter()
    str_0 = 'P!dQ?f*4\r'
    basic_printer_0.success(str_0)
    basic_printer_0.diff_line(str_0)
    str_1 = 'YYPiJ\rIxY7'
    str_2 = module_0.format_simplified(str_1)
    basic_printer_0.diff_line(str_0)
    str_3 = 'resource'
    str_4 = module_0.remove_whitespace(str_3, str_3)
    basic_printer_0.error(str_0)

def test_case_2():
    text_i_o_0 = None
    str_0 = ':5M43Q\tD^\n)X\t=|'
    str_1 = module_0.format_natural(str_0)
    colorama_printer_0 = module_0.ColoramaPrinter(text_i_o_0)

def test_case_3():
    str_0 = 'Sorts the literal present within the provided code against the provided sort type,\n    returning the sorted representation of the source code.\n    '
    str_1 = module_0.format_natural(str_0)
    str_2 = '#)Y_2d!Ni3@$7lN^g'
    str_3 = module_0.format_simplified(str_2)
    colorama_printer_0 = module_0.ColoramaPrinter()
    list_0 = []
    path_0 = module_1.Path(*list_0)
    var_0 = path_0.is_socket()
    basic_printer_0 = module_0.BasicPrinter()
    bool_0 = True
    str_4 = '\\z>Mk24>%,t8AukO}\x0b&'
    var_1 = module_0.show_unified_diff(file_input=str_4, file_output=str_4, file_path=path_0, color_output=bool_0)

def test_case_4():
    str_0 = '-'
    path_0 = module_1.Path()
    bool_0 = True
    var_0 = module_0.show_unified_diff(file_input=str_0, file_output=str_0, file_path=path_0, color_output=bool_0)

def test_case_5():
    str_0 = "[?b-[&a/i'gz^jq\nisx"
    path_0 = module_1.Path()
    var_0 = path_0.is_socket()
    basic_printer_0 = module_0.BasicPrinter()
    str_1 = 'D'
    bool_0 = True
    var_1 = module_0.show_unified_diff(file_input=str_0, file_output=str_1, file_path=path_0, color_output=bool_0)

def test_case_6():
    str_0 = None
    text_i_o_0 = module_2.TextIO()
    basic_printer_0 = module_0.BasicPrinter(text_i_o_0)
    basic_printer_0.diff_line(str_0)
    bool_0 = True
    str_1 = 'H '
    basic_printer_1 = module_0.BasicPrinter()
    basic_printer_1.diff_line(str_1)
    basic_printer_1.success(str_1)
    var_0 = module_0.create_terminal_printer(bool_0)

def test_case_7():
    str_0 = ',``K\rx3opm7^2-%C"='
    basic_printer_0 = module_0.BasicPrinter()
    basic_printer_0.error(str_0)

def test_case_8():
    str_0 = '/;Ju!T\rw'
    colorama_printer_0 = module_0.ColoramaPrinter()
    colorama_printer_0.diff_line(str_0)

def test_case_9():
    bool_0 = True
    var_0 = module_0.create_terminal_printer(bool_0)

def test_case_10():
    bool_0 = True
    bytes_0 = b"\x15(/'+m}b0m\x05kC\xae\xf7"
    var_0 = module_0.create_terminal_printer(bool_0, bytes_0)

def test_case_11():
    bool_0 = False
    var_0 = module_0.create_terminal_printer(bool_0)
    bool_1 = True
    var_1 = module_0.create_terminal_printer(bool_1)