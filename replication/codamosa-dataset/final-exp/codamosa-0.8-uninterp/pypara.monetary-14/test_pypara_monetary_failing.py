# Automatically generated by Pynguin.
import pypara.monetary as module_0
import pypara.currencies as module_1
import decimal as module_2
import datetime as module_3

def test_case_0():
    try:
        money_0 = None
        list_0 = [money_0]
        complex_0 = None
        dict_0 = {}
        none_money_0 = module_0.NoneMoney(**dict_0)
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.positive()
        price_1 = price_0.__truediv__(complex_0)
        price_2 = price_1.round()
        money_1 = none_money_0.abs()
        money_2 = money_1.__truediv__(complex_0)
        none_price_1 = module_0.NonePrice(*list_0)
    except BaseException:
        pass

def test_case_1():
    try:
        list_0 = []
        dict_0 = {}
        none_money_0 = module_0.NoneMoney(*list_0, **dict_0)
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.multiply(none_money_0)
        float_0 = price_0.__float__()
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b'2\x13\xd4\xb8\x8e\xba>uv\xfdS\x84P\xa6T\xe90'
        none_money_0 = module_0.NoneMoney()
        list_0 = [bytes_0, none_money_0]
        monetary_operation_exception_0 = module_0.MonetaryOperationException(*list_0)
        str_0 = 'W)'
        currency_type_0 = module_1.CurrencyType.ALTERNATIVE
        decimal_0 = module_2.Decimal()
        int_0 = -10
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        money_0 = none_money_0.with_ccy(currency_0)
        bool_0 = money_0.lte(money_0)
        money_1 = none_money_0.subtract(money_0)
        list_1 = [monetary_operation_exception_0, monetary_operation_exception_0, none_money_0]
        money_2 = money_1.round()
        var_0 = None
        money_3 = none_money_0.convert(currency_0, bool_0)
        money_4 = money_0.floor_divide(var_0)
        money_5 = money_3.divide(var_0)
        dict_0 = {}
        some_money_0 = module_0.SomeMoney(*list_1, **dict_0)
        bool_1 = some_money_0.lte(money_1)
        money_6 = some_money_0.subtract(money_4)
        money_7 = some_money_0.add(money_6)
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'2\x13\xd4\xb8\x8e\xba>uv\xfdS\x84P\xa64\x9bT0'
        none_money_0 = module_0.NoneMoney()
        list_0 = [bytes_0, none_money_0]
        monetary_operation_exception_0 = module_0.MonetaryOperationException(*list_0)
        str_0 = 'W)'
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        int_0 = -10
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        list_1 = [monetary_operation_exception_0, monetary_operation_exception_0, none_money_0]
        var_0 = None
        money_0 = none_money_0.scalar_subtract(var_0)
        dict_0 = {}
        some_money_0 = module_0.SomeMoney(*list_1, **dict_0)
        money_1 = some_money_0.subtract(money_0)
        money_2 = some_money_0.add(money_1)
    except BaseException:
        pass

def test_case_4():
    try:
        bytes_0 = b'2\x13\xd4\xb8\x8e\xba>uv\xfdS\x84P\xa64\x9bT0'
        none_money_0 = module_0.NoneMoney()
        list_0 = [bytes_0, none_money_0]
        monetary_operation_exception_0 = module_0.MonetaryOperationException(*list_0)
        list_1 = [monetary_operation_exception_0, monetary_operation_exception_0, none_money_0]
        var_0 = None
        some_money_0 = module_0.SomeMoney(*list_1)
        money_0 = some_money_0.floor_divide(var_0)
    except BaseException:
        pass

def test_case_5():
    try:
        bytes_0 = b'2\x13\xd4\xb8\x8e\xba>uv\xfdS\x84P\xa64\x9bT0'
        none_money_0 = module_0.NoneMoney()
        list_0 = [bytes_0, none_money_0]
        monetary_operation_exception_0 = module_0.MonetaryOperationException(*list_0)
        money_0 = none_money_0.positive()
        decimal_0 = module_2.Decimal()
        money_1 = none_money_0.negative()
        list_1 = [monetary_operation_exception_0, monetary_operation_exception_0, none_money_0]
        var_0 = None
        dict_0 = {}
        some_money_0 = module_0.SomeMoney(*list_1, **dict_0)
        money_2 = some_money_0.add(money_1)
        money_3 = some_money_0.floor_divide(var_0)
    except BaseException:
        pass

def test_case_6():
    try:
        none_money_0 = module_0.NoneMoney()
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.abs()
        dict_0 = {}
        some_price_0 = module_0.SomePrice(**dict_0)
    except BaseException:
        pass

def test_case_7():
    try:
        bytes_0 = b'2\x13\xd4\xb8\x8e\xba>uv\xfdS\x84P\xa64\x9bT0'
        none_money_0 = module_0.NoneMoney()
        list_0 = [bytes_0, none_money_0, none_money_0]
        monetary_operation_exception_0 = module_0.MonetaryOperationException(*list_0)
        str_0 = 'W)'
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        int_0 = 31
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        dict_0 = {}
        some_money_0 = module_0.SomeMoney(*list_0, **dict_0)
        some_money_1 = module_0.SomeMoney(*list_0)
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.with_ccy(currency_0)
        some_price_0 = module_0.SomePrice(*list_0)
        price_1 = some_price_0.subtract(price_0)
        price_2 = price_1.convert(currency_0)
    except BaseException:
        pass

def test_case_8():
    try:
        bytes_0 = b'2\x13\xd4\xb8\x8e\xba>uv\xfdS\x84P\xa64\x9bT0'
        none_money_0 = module_0.NoneMoney()
        list_0 = [bytes_0, none_money_0]
        monetary_operation_exception_0 = module_0.MonetaryOperationException(*list_0)
        str_0 = "Zh'}$3Xih"
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        int_0 = -10
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        money_0 = none_money_0.with_ccy(currency_0)
        bool_0 = money_0.lte(money_0)
        money_1 = none_money_0.subtract(money_0)
        list_1 = [monetary_operation_exception_0, monetary_operation_exception_0, none_money_0]
        var_0 = None
        money_2 = none_money_0.convert(currency_0, bool_0)
        money_3 = none_money_0.multiply(var_0)
        money_4 = money_2.divide(var_0)
        dict_0 = {}
        some_money_0 = module_0.SomeMoney(*list_1, **dict_0)
        bool_1 = some_money_0.lte(money_1)
        money_5 = some_money_0.with_ccy(currency_0)
        money_6 = some_money_0.add(money_5)
    except BaseException:
        pass

def test_case_9():
    try:
        bytes_0 = b'2\x13\xd4\xb8\x8e\xba>uv\xfdS\x84P\xa64\x9bT0'
        none_money_0 = module_0.NoneMoney()
        list_0 = [bytes_0, none_money_0]
        monetary_operation_exception_0 = module_0.MonetaryOperationException(*list_0)
        decimal_0 = module_2.Decimal()
        list_1 = [monetary_operation_exception_0, monetary_operation_exception_0, none_money_0]
        var_0 = None
        money_0 = none_money_0.multiply(var_0)
        some_money_0 = module_0.SomeMoney(*list_1)
        money_1 = some_money_0.floor_divide(var_0)
    except BaseException:
        pass

def test_case_10():
    try:
        dict_0 = {}
        none_money_0 = module_0.NoneMoney()
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.positive()
        price_1 = price_0.__add__(price_0)
        int_0 = 408
        price_2 = price_0.round(int_0)
        none_money_1 = module_0.NoneMoney()
        money_0 = none_money_1.abs()
        float_0 = -704.17
        money_1 = money_0.__truediv__(float_0)
        none_price_1 = module_0.NonePrice()
        none_price_2 = module_0.NonePrice(**dict_0)
        some_price_0 = module_0.SomePrice()
    except BaseException:
        pass

def test_case_11():
    try:
        none_money_0 = module_0.NoneMoney()
        var_0 = None
        money_0 = none_money_0.floor_divide(var_0)
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.abs()
        bool_0 = money_0.__bool__()
        price_1 = price_0.abs()
        some_price_0 = module_0.SomePrice()
    except BaseException:
        pass

def test_case_12():
    try:
        money_0 = None
        none_money_0 = module_0.NoneMoney()
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.positive()
        price_1 = price_0.__add__(price_0)
        int_0 = 408
        price_2 = price_0.round(int_0)
        none_money_1 = module_0.NoneMoney()
        bool_0 = none_price_0.gt(price_2)
        list_0 = [int_0, money_0, none_price_0]
        none_price_1 = module_0.NonePrice(*list_0)
    except BaseException:
        pass

def test_case_13():
    try:
        bytes_0 = b'2\x13\xd4\xb8\x8e\xba>uv\xfdS\x84P\xa64\x9bT0'
        none_money_0 = module_0.NoneMoney()
        var_0 = None
        money_0 = none_money_0.positive()
        list_0 = [bytes_0, none_money_0, none_money_0]
        money_1 = none_money_0.scalar_add(var_0)
        monetary_operation_exception_0 = module_0.MonetaryOperationException(*list_0)
        none_price_0 = None
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        var_1 = None
        dict_0 = {}
        some_money_0 = module_0.SomeMoney(*list_0, **dict_0)
        bool_0 = some_money_0.lte(money_0)
        money_2 = some_money_0.subtract(money_0)
        money_3 = some_money_0.add(money_2)
        bool_1 = money_3.__ge__(money_3)
        int_0 = None
        none_price_1 = module_0.NonePrice(**dict_0)
        some_price_0 = module_0.SomePrice(*list_0, **dict_0)
        some_price_1 = module_0.SomePrice(*list_0)
        money_4 = some_money_0.add(money_0)
        money_5 = money_3.__sub__(money_2)
        bool_2 = money_4.gt(money_3)
        str_0 = 'Ds]5F\\)65"=!%<!n}\\'
        str_1 = 'k'
        currency_0 = module_1.Currency(str_0, str_1, int_0, currency_type_0, decimal_0, int_0)
        price_0 = none_price_1.multiply(var_1)
        price_1 = price_0.scalar_subtract(var_1)
        price_2 = none_price_0.positive()
    except BaseException:
        pass

def test_case_14():
    try:
        str_0 = '=f:,'
        list_0 = [str_0, str_0, str_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        none_price_0 = module_0.NonePrice()
        some_money_1 = module_0.SomeMoney(*list_0)
        money_0 = some_money_1.scalar_subtract(none_price_0)
    except BaseException:
        pass

def test_case_15():
    try:
        bytes_0 = b'2\x13\xd4\xb8\x8e\xba>uv\xfdS\x84P\xa64\x9bT0'
        incompatible_currency_error_0 = None
        set_0 = {bytes_0, bytes_0, bytes_0}
        list_0 = [bytes_0, set_0, bytes_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.floor_divide(incompatible_currency_error_0)
    except BaseException:
        pass

def test_case_16():
    try:
        bytes_0 = b'2\x13\xd4\xb8\x8e\xba>uv\xfdS\x84P\xa64\x9bT0'
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.abs()
        none_money_0 = module_0.NoneMoney()
        bool_0 = False
        bool_1 = price_0.__bool__()
        money_0 = none_money_0.multiply(bool_0)
        list_0 = [bytes_0, none_money_0]
        monetary_operation_exception_0 = module_0.MonetaryOperationException(*list_0)
        bool_2 = price_0.__le__(price_0)
        str_0 = 'W)'
        int_0 = -289
        var_0 = price_0.__round__(int_0)
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        int_1 = -25
        currency_0 = module_1.Currency(str_0, str_0, int_1, currency_type_0, decimal_0, int_1)
        money_1 = none_money_0.with_ccy(currency_0)
        bool_3 = money_1.lte(money_1)
        money_2 = none_money_0.with_ccy(currency_0)
        list_1 = [monetary_operation_exception_0, monetary_operation_exception_0, none_money_0]
        var_1 = None
        money_3 = none_money_0.convert(currency_0, bool_3)
        money_4 = none_money_0.subtract(money_3)
        money_5 = money_3.divide(var_1)
        dict_0 = {}
        some_money_0 = module_0.SomeMoney(*list_1, **dict_0)
        bool_4 = some_money_0.lte(money_1)
        currency_1 = None
        str_1 = 'Y(Ep~v3'
        money_6 = some_money_0.convert(currency_1, str_1, bool_4)
    except BaseException:
        pass

def test_case_17():
    try:
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.negative()
        some_price_0 = module_0.SomePrice()
    except BaseException:
        pass

def test_case_18():
    try:
        none_money_0 = module_0.NoneMoney()
        none_price_0 = None
        str_0 = 'W)'
        int_0 = 2060
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        int_1 = 31
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_1)
        money_0 = none_money_0.with_ccy(currency_0)
        str_1 = '<'
        str_2 = '+L8dkVP"\x0bS'
        money_1 = none_money_0.with_ccy(currency_0)
        var_0 = money_1.__round__(int_1)
        dict_0 = {int_1: str_0, int_0: var_0}
        str_3 = 'B;d\tb{+S:*P\\D"4`\\S'
        dict_1 = {str_1: str_1, str_2: dict_0, str_0: none_price_0, str_3: str_0}
        date_0 = module_3.date(**dict_1)
    except BaseException:
        pass

def test_case_19():
    try:
        monetary_operation_exception_0 = module_0.MonetaryOperationException()
        float_0 = 1446.8686
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.scalar_subtract(monetary_operation_exception_0)
        money_1 = money_0.__mul__(float_0)
        none_price_0 = module_0.NonePrice()
        bool_0 = none_price_0.is_equal(monetary_operation_exception_0)
        date_0 = None
        price_0 = none_price_0.with_dov(date_0)
        int_0 = none_price_0.as_integer()
    except BaseException:
        pass

def test_case_20():
    try:
        bytes_0 = b"\xa5\x193\x9ef\xc7:ma~{\x9c's\xc8j"
        none_money_0 = module_0.NoneMoney()
        bool_0 = none_money_0.is_equal(none_money_0)
        list_0 = [bytes_0, none_money_0]
        monetary_operation_exception_0 = module_0.MonetaryOperationException(*list_0)
        str_0 = 'W)'
        int_0 = 2060
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        int_1 = 31
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_1)
        money_0 = none_money_0.with_ccy(currency_0)
        list_1 = [monetary_operation_exception_0, monetary_operation_exception_0, none_money_0]
        some_money_0 = module_0.SomeMoney(*list_1)
        money_1 = some_money_0.floor_divide(money_0)
    except BaseException:
        pass

def test_case_21():
    try:
        bytes_0 = b'2\x13\xd4\xb8\x8e\xba>uv\xfdS\x84P\xa64\x9bT0'
        none_money_0 = module_0.NoneMoney()
        list_0 = [bytes_0, none_money_0]
        monetary_operation_exception_0 = module_0.MonetaryOperationException(*list_0)
        int_0 = none_money_0.as_integer()
    except BaseException:
        pass

def test_case_22():
    try:
        str_0 = None
        str_1 = '/%:sf\\V2$z#'
        int_0 = -1417
        currency_type_0 = module_1.CurrencyType.CRYPTO
        decimal_0 = module_2.Decimal()
        currency_0 = module_1.Currency(str_0, str_1, int_0, currency_type_0, decimal_0, int_0)
        list_0 = [currency_0, decimal_0, str_0, currency_type_0]
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.scalar_add(list_0)
        float_0 = money_0.as_float()
    except BaseException:
        pass

def test_case_23():
    try:
        bytes_0 = b'2\x13\xd4\xb8\x8e\xba>uv\xfdS\x84P\xa64\x9bT0'
        none_money_0 = module_0.NoneMoney()
        var_0 = None
        money_0 = none_money_0.scalar_add(var_0)
        list_0 = [bytes_0, none_money_0]
        monetary_operation_exception_0 = module_0.MonetaryOperationException(*list_0)
        none_price_0 = module_0.NonePrice()
        str_0 = 'W)'
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        int_0 = 4
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        money_1 = none_money_0.with_ccy(currency_0)
        bool_0 = money_1.lte(money_1)
        list_1 = [monetary_operation_exception_0, monetary_operation_exception_0, none_money_0]
        var_1 = None
        money_2 = none_money_0.convert(currency_0, bool_0)
        money_3 = money_2.divide(var_1)
        bool_1 = none_money_0.gte(money_2)
        some_money_0 = module_0.SomeMoney(*list_1)
        bool_2 = some_money_0.lte(money_1)
        bool_3 = some_money_0.is_equal(money_1)
        price_0 = none_price_0.floor_divide(var_0)
        price_1 = none_price_0.subtract(price_0)
        money_4 = some_money_0.floor_divide(money_1)
    except BaseException:
        pass

def test_case_24():
    try:
        bytes_0 = b'2\x13\xd4\xb8\x8e\xba>uv\xfdS\x84P\xa64\x9bT0'
        none_money_0 = module_0.NoneMoney()
        list_0 = [bytes_0, none_money_0]
        monetary_operation_exception_0 = module_0.MonetaryOperationException(*list_0)
        str_0 = 'W)'
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        int_0 = -29
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        list_1 = [monetary_operation_exception_0, monetary_operation_exception_0, none_money_0]
        var_0 = None
        some_money_0 = module_0.SomeMoney(*list_1)
        bool_0 = some_money_0.is_equal(monetary_operation_exception_0)
        money_0 = some_money_0.divide(var_0)
    except BaseException:
        pass

def test_case_25():
    try:
        none_price_0 = module_0.NonePrice()
        int_0 = none_price_0.as_integer()
    except BaseException:
        pass

def test_case_26():
    try:
        bytes_0 = b'2\x13\xd4\xb8\x8e\xba>uv\xfdS\x84P\xa64\x9bT0'
        none_money_0 = module_0.NoneMoney()
        list_0 = [bytes_0, none_money_0]
        monetary_operation_exception_0 = module_0.MonetaryOperationException(*list_0)
        decimal_0 = module_2.Decimal()
        str_0 = ':Yt'
        str_1 = '\n        Checks if the given name is ever registered before.\n        '
        int_0 = -668
        currency_type_0 = module_1.CurrencyType.ALTERNATIVE
        dict_0 = {}
        decimal_1 = module_2.Decimal(**dict_0)
        currency_0 = module_1.Currency(str_0, str_1, int_0, currency_type_0, decimal_1, int_0)
        decimal_2 = currency_0.quantize(decimal_0)
        money_0 = none_money_0.with_qty(decimal_2)
        str_2 = 'W)'
        currency_type_1 = module_1.CurrencyType.MONEY
        decimal_3 = module_2.Decimal()
        int_1 = -10
        currency_1 = module_1.Currency(str_2, str_2, int_1, currency_type_1, decimal_3, int_1)
        money_1 = none_money_0.with_ccy(currency_1)
        list_1 = [monetary_operation_exception_0, monetary_operation_exception_0, none_money_0]
        var_0 = None
        money_2 = money_1.divide(var_0)
        some_money_0 = module_0.SomeMoney(*list_1)
        bool_0 = some_money_0.lte(money_1)
        money_3 = some_money_0.add(money_2)
        money_4 = money_2.scalar_add(var_0)
        money_5 = some_money_0.divide(var_0)
    except BaseException:
        pass

def test_case_27():
    try:
        bytes_0 = b'2\x13\xd4\xb8\x8e\xba>uv\xfdS\x84P\xa64\x9bT0'
        none_money_0 = module_0.NoneMoney()
        var_0 = None
        money_0 = none_money_0.abs()
        list_0 = [bytes_0, none_money_0, none_money_0]
        monetary_operation_exception_0 = module_0.MonetaryOperationException(*list_0)
        money_1 = money_0.scalar_subtract(var_0)
        money_2 = money_0.scalar_add(var_0)
        decimal_0 = module_2.Decimal()
        var_1 = None
        dict_0 = {}
        some_money_0 = module_0.SomeMoney(*list_0, **dict_0)
        money_3 = some_money_0.subtract(money_0)
        money_4 = some_money_0.add(money_3)
        money_5 = money_2.scalar_add(var_1)
        bool_0 = money_4.__ge__(money_4)
        none_price_0 = module_0.NonePrice(**dict_0)
        bool_1 = money_4.__bool__()
        price_0 = none_price_0.abs()
        some_price_0 = module_0.SomePrice(*list_0, **dict_0)
        price_1 = some_price_0.subtract(price_0)
        price_2 = some_price_0.add(price_1)
        bool_2 = money_4.lt(money_4)
        money_6 = some_money_0.add(money_4)
        money_7 = none_price_0.times(var_1)
        money_8 = money_4.__sub__(money_3)
        bool_3 = price_1.lte(price_2)
        bool_4 = price_2.__ge__(price_2)
        bool_5 = some_price_0.lte(price_0)
        price_3 = some_price_0.subtract(price_1)
        bool_6 = price_2.lt(price_1)
        price_4 = some_price_0.floor_divide(var_1)
    except BaseException:
        pass

def test_case_28():
    try:
        bytes_0 = b'2\x13\xd4\xb8\x8e\xba>uv\xfdS\x84P\xa64\x9bT0'
        none_money_0 = module_0.NoneMoney()
        var_0 = None
        money_0 = none_money_0.scalar_add(var_0)
        list_0 = [bytes_0, none_money_0, none_money_0]
        monetary_operation_exception_0 = module_0.MonetaryOperationException(*list_0)
        str_0 = 'W)'
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        int_0 = -22
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        var_1 = None
        dict_0 = {}
        some_money_0 = module_0.SomeMoney(*list_0, **dict_0)
        bool_0 = some_money_0.lte(money_0)
        money_1 = some_money_0.subtract(money_0)
        money_2 = some_money_0.add(money_1)
        none_price_0 = module_0.NonePrice(**dict_0)
        price_0 = none_price_0.with_ccy(currency_0)
        some_price_0 = module_0.SomePrice(*list_0, **dict_0)
        price_1 = some_price_0.subtract(price_0)
        var_2 = money_0.__round__()
        some_price_1 = module_0.SomePrice(*list_0)
        price_2 = some_price_1.add(price_1)
        price_3 = price_2.__neg__()
        money_3 = some_money_0.add(money_0)
        bool_1 = some_money_0.lte(money_2)
        money_4 = some_money_0.positive()
        money_5 = some_money_0.positive()
        money_6 = some_money_0.abs()
        bool_2 = money_6.__ge__(money_1)
        money_7 = money_1.__truediv__(var_1)
    except BaseException:
        pass

def test_case_29():
    try:
        bytes_0 = b'2\x13\xd4\xb8\x8e\xba>uv\xfdS\x84P\xa64\x9bT0'
        none_money_0 = module_0.NoneMoney()
        list_0 = [bytes_0, none_money_0]
        monetary_operation_exception_0 = module_0.MonetaryOperationException(*list_0)
        date_0 = None
        money_0 = none_money_0.with_dov(date_0)
        str_0 = 'W)'
        int_0 = 2060
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        money_1 = none_money_0.with_ccy(currency_0)
        list_1 = [monetary_operation_exception_0, monetary_operation_exception_0, none_money_0]
        some_money_0 = module_0.SomeMoney(*list_1)
        bool_0 = some_money_0.is_equal(money_1)
        money_2 = some_money_0.floor_divide(money_1)
    except BaseException:
        pass

def test_case_30():
    try:
        bytes_0 = b'2\x13\xd4\xb8\x8e\xba>uv\xfdS\x84P\xa64\x9bT0'
        none_money_0 = module_0.NoneMoney()
        list_0 = [bytes_0, none_money_0, none_money_0]
        monetary_operation_exception_0 = module_0.MonetaryOperationException(*list_0)
        str_0 = 'W)'
        currency_type_0 = module_1.CurrencyType.METAL
        decimal_0 = module_2.Decimal()
        int_0 = -20
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        var_0 = None
        dict_0 = {}
        some_money_0 = module_0.SomeMoney(*list_0, **dict_0)
        none_price_0 = module_0.NonePrice(**dict_0)
        price_0 = none_price_0.abs()
        some_price_0 = module_0.SomePrice(*list_0, **dict_0)
        price_1 = some_price_0.subtract(price_0)
        some_price_1 = module_0.SomePrice(*list_0)
        price_2 = some_price_1.add(price_1)
        price_3 = none_price_0.multiply(var_0)
        bool_0 = price_1.lte(price_2)
        bool_1 = price_2.__ge__(price_2)
        bool_2 = some_price_1.lte(price_0)
        money_0 = some_money_0.with_ccy(currency_0)
        price_4 = some_price_0.subtract(price_1)
        bool_3 = some_price_1.gt(price_2)
        money_1 = some_money_0.convert(currency_0, price_3)
    except BaseException:
        pass

def test_case_31():
    try:
        bytes_0 = b'2\x13\xd4\xb8\x8e\xba>uv\xfdS\x84P\xa64\x9bT0'
        none_money_0 = module_0.NoneMoney()
        list_0 = [bytes_0, none_money_0]
        monetary_operation_exception_0 = module_0.MonetaryOperationException(*list_0)
        list_1 = [monetary_operation_exception_0, monetary_operation_exception_0, none_money_0]
        var_0 = None
        some_money_0 = module_0.SomeMoney(*list_1)
        money_0 = some_money_0.scalar_add(var_0)
    except BaseException:
        pass

def test_case_32():
    try:
        bytes_0 = b'2\x13\xd4\xb8\x8e\xba>uv\xfdS\x84P\xa64\x9bT0'
        none_money_0 = module_0.NoneMoney()
        list_0 = [bytes_0, none_money_0]
        monetary_operation_exception_0 = module_0.MonetaryOperationException(*list_0)
        str_0 = 'W)'
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        int_0 = 4
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        money_0 = none_money_0.with_ccy(currency_0)
        bool_0 = money_0.lte(money_0)
        list_1 = [monetary_operation_exception_0, monetary_operation_exception_0, none_money_0]
        some_money_0 = module_0.SomeMoney(*list_1)
        bool_1 = some_money_0.lt(money_0)
        money_1 = none_money_0.divide(currency_0)
        some_price_0 = module_0.SomePrice(*list_0)
    except BaseException:
        pass

def test_case_33():
    try:
        bytes_0 = b'2\x13\xd4\xb8\x8e\xba>uv\xfdS\x84P\xa64\x9bT0'
        none_money_0 = module_0.NoneMoney()
        list_0 = [bytes_0, none_money_0]
        monetary_operation_exception_0 = module_0.MonetaryOperationException(*list_0)
        decimal_0 = module_2.Decimal()
        list_1 = [monetary_operation_exception_0, monetary_operation_exception_0, none_money_0]
        var_0 = None
        some_money_0 = module_0.SomeMoney(*list_1)
        money_0 = some_money_0.divide(var_0)
    except BaseException:
        pass

def test_case_34():
    try:
        str_0 = ' VC\rbqIB?<_%d\x0cl'
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.scalar_add(str_0)
        list_0 = [str_0, none_price_0]
        some_money_0 = module_0.SomeMoney(*list_0)
    except BaseException:
        pass

def test_case_35():
    try:
        list_0 = []
        dict_0 = {}
        none_money_0 = module_0.NoneMoney(*list_0, **dict_0)
        none_price_0 = module_0.NonePrice()
        price_0 = module_0.Price()
        float_0 = price_0.__float__()
        str_0 = 'J,`p]"e\reowFY+5<i'
        dict_1 = {str_0: str_0}
        some_money_0 = module_0.SomeMoney(**dict_1)
    except BaseException:
        pass

def test_case_36():
    try:
        bytes_0 = b'2\x13\xd4\xb8\x8e\xba>uv\xfdS\x84P\xa64\x9bT0'
        none_money_0 = module_0.NoneMoney()
        list_0 = [bytes_0, none_money_0]
        monetary_operation_exception_0 = module_0.MonetaryOperationException(*list_0)
        str_0 = 'W)'
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        int_0 = -10
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        money_0 = none_money_0.with_ccy(currency_0)
        bool_0 = money_0.lte(money_0)
        money_1 = none_money_0.subtract(money_0)
        bool_1 = money_0.gte(money_1)
        list_1 = [monetary_operation_exception_0, monetary_operation_exception_0, none_money_0]
        var_0 = None
        money_2 = none_money_0.convert(currency_0, bool_0)
        none_money_1 = module_0.NoneMoney()
        money_3 = none_money_1.convert(currency_0)
        money_4 = money_3.divide(var_0)
        str_1 = 'Actual/Actual (ISDA)'
        var_1 = money_4.__round__()
        str_2 = '\n    Computes the day count fraction for the "30E/360" convention.\n\n    :param start: The start date of the period.\n    :param asof: The date which the day count fraction to be calculated as of.\n    :param end: The end date of the period (a.k.a. termination date).\n    :return: Day count fraction.\n\n    >>> ex1_start, ex1_asof = datetime.date(2007, 12, 28), datetime.date(2008, 2, 28)\n    >>> ex2_start, ex2_asof = datetime.date(2007, 12, 28), datetime.date(2008, 2, 29)\n    >>> ex3_start, ex3_asof = datetime.date(2007, 10, 31), datetime.date(2008, 11, 30)\n    >>> ex4_start, ex4_asof = datetime.date(2008, 2, 1), datetime.date(2009, 5, 31)\n    >>> round(dcfc_30_e_360(start=ex1_start, asof=ex1_asof, end=ex1_asof), 14)\n    Decimal(\'0.16666666666667\')\n    >>> round(dcfc_30_e_360(start=ex2_start, asof=ex2_asof, end=ex2_asof), 14)\n    Decimal(\'0.16944444444444\')\n    >>> round(dcfc_30_e_360(start=ex3_start, asof=ex3_asof, end=ex3_asof), 14)\n    Decimal(\'1.08333333333333\')\n    >>> round(dcfc_30_e_360(start=ex4_start, asof=ex4_asof, end=ex4_asof), 14)\n    Decimal(\'1.33055555555556\')\n    '
        str_3 = 'Mozambique Metical'
        dict_0 = {str_1: var_1, str_2: list_1, str_3: str_0, str_3: money_3}
        some_money_0 = module_0.SomeMoney(*list_1, **dict_0)
    except BaseException:
        pass

def test_case_37():
    try:
        bytes_0 = b'2\x13\xd4\xb8\x8e\xba>uv\xfdS\x84P\xa64\x9bT0'
        none_money_0 = module_0.NoneMoney()
        list_0 = [bytes_0, none_money_0]
        monetary_operation_exception_0 = module_0.MonetaryOperationException(*list_0)
        str_0 = 'W)'
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        int_0 = -32
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        money_0 = none_money_0.with_ccy(currency_0)
        bool_0 = money_0.lte(money_0)
        money_1 = none_money_0.subtract(money_0)
        bool_1 = money_0.gte(money_1)
        list_1 = [monetary_operation_exception_0, monetary_operation_exception_0, none_money_0]
        var_0 = None
        money_2 = none_money_0.convert(currency_0)
        money_3 = money_1.divide(var_0)
        some_money_0 = module_0.SomeMoney(*list_1)
        bool_2 = some_money_0.lte(money_0)
        money_4 = money_1.__mul__(var_0)
        bool_3 = some_money_0.is_equal(some_money_0)
        money_5 = some_money_0.divide(var_0)
    except BaseException:
        pass

def test_case_38():
    try:
        bytes_0 = b'2\x13\xd4\xb8\x8e\xba>uv\xfdS\x84P\xa64\x9bT0'
        none_money_0 = module_0.NoneMoney()
        list_0 = [bytes_0, none_money_0, none_money_0]
        str_0 = 'W)'
        currency_type_0 = module_1.CurrencyType.METAL
        decimal_0 = module_2.Decimal()
        int_0 = -20
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        dict_0 = {}
        some_money_0 = module_0.SomeMoney(*list_0, **dict_0)
        some_price_0 = module_0.SomePrice(*list_0, **dict_0)
        some_price_1 = module_0.SomePrice(*list_0)
        money_0 = some_money_0.convert(currency_0)
    except BaseException:
        pass

def test_case_39():
    try:
        price_0 = module_0.Price()
        float_0 = price_0.as_float()
    except BaseException:
        pass

def test_case_40():
    try:
        bytes_0 = b'2\x13\xd4\xb8\x8e\xba>uv\xfdS\x84P\xa64\x9bT0'
        none_money_0 = module_0.NoneMoney()
        var_0 = None
        money_0 = none_money_0.abs()
        list_0 = [bytes_0, none_money_0, none_money_0]
        monetary_operation_exception_0 = module_0.MonetaryOperationException(*list_0)
        money_1 = money_0.scalar_add(var_0)
        decimal_0 = module_2.Decimal()
        var_1 = None
        dict_0 = {}
        none_price_0 = module_0.NonePrice(**dict_0)
        price_0 = none_price_0.abs()
        some_price_0 = module_0.SomePrice(*list_0, **dict_0)
        price_1 = some_price_0.subtract(price_0)
        some_price_1 = module_0.SomePrice(*list_0)
        price_2 = none_price_0.multiply(var_1)
        price_3 = none_price_0.scalar_add(var_0)
        bool_0 = price_1.lte(price_2)
        bool_1 = price_2.__ge__(price_2)
        bool_2 = some_price_1.lte(price_0)
        price_4 = some_price_0.subtract(price_1)
        price_5 = price_1.__neg__()
        price_6 = price_1.__truediv__(var_0)
    except BaseException:
        pass

def test_case_41():
    try:
        dict_0 = {}
        none_money_0 = module_0.NoneMoney(**dict_0)
        money_0 = none_money_0.round()
        bytes_0 = b'2\x13\xd4\xb8\x8e\xba>uv\xfdS\x84P\xa64\x9bT0'
        none_money_1 = module_0.NoneMoney()
        list_0 = [bytes_0, none_money_1]
        monetary_operation_exception_0 = module_0.MonetaryOperationException(*list_0)
        str_0 = 'l'
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        int_0 = -42
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        money_1 = none_money_1.with_ccy(currency_0)
        bool_0 = money_1.lte(money_1)
        money_2 = none_money_1.subtract(money_1)
        list_1 = [monetary_operation_exception_0, monetary_operation_exception_0, none_money_1]
        var_0 = None
        money_3 = none_money_1.convert(currency_0, bool_0)
        money_4 = none_money_1.multiply(var_0)
        money_5 = module_0.Money()
        money_6 = money_3.divide(var_0)
        some_money_0 = module_0.SomeMoney(*list_1)
        bool_1 = some_money_0.lte(money_1)
        money_7 = some_money_0.add(money_2)
        money_8 = some_money_0.with_qty(decimal_0)
    except BaseException:
        pass

def test_case_42():
    try:
        dict_0 = {}
        none_money_0 = module_0.NoneMoney(**dict_0)
        money_0 = none_money_0.round()
        bytes_0 = b'2\x13\xd4\xb8\x8e\xba>uv\xfdS\x84P\xa64\x9bT0'
        none_money_1 = module_0.NoneMoney()
        list_0 = [bytes_0, none_money_1]
        monetary_operation_exception_0 = module_0.MonetaryOperationException(*list_0)
        str_0 = '.l'
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        int_0 = -42
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        bool_0 = money_0.lte(money_0)
        money_1 = none_money_1.subtract(money_0)
        var_0 = None
        money_2 = none_money_1.convert(currency_0, bool_0)
        money_3 = none_money_1.multiply(var_0)
        money_4 = module_0.Money()
        money_5 = money_4.__add__(money_4)
        money_6 = money_2.divide(var_0)
        str_1 = "+i'a=M"
        dict_1 = {str_1: list_0, str_1: none_money_1}
        some_money_0 = module_0.SomeMoney(**dict_1)
    except BaseException:
        pass

def test_case_43():
    try:
        bytes_0 = b'2\x13\xd4\xb8\x8e\xba>uv\xfdS\x84P\xa64\x9bT0'
        none_money_0 = module_0.NoneMoney()
        list_0 = [bytes_0, none_money_0]
        monetary_operation_exception_0 = module_0.MonetaryOperationException(*list_0)
        str_0 = 'W)'
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        int_0 = -10
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        money_0 = none_money_0.with_ccy(currency_0)
        bool_0 = money_0.lte(money_0)
        money_1 = none_money_0.subtract(money_0)
        list_1 = [monetary_operation_exception_0, monetary_operation_exception_0, none_money_0]
        var_0 = None
        money_2 = none_money_0.convert(currency_0, bool_0)
        money_3 = none_money_0.multiply(var_0)
        money_4 = money_2.divide(var_0)
        dict_0 = {}
        some_money_0 = module_0.SomeMoney(*list_1, **dict_0)
        bool_1 = some_money_0.lte(money_1)
        bool_2 = True
        money_5 = some_money_0.convert(currency_0, bool_2)
    except BaseException:
        pass

def test_case_44():
    try:
        bytes_0 = b'2\x13\xd4\xb8\x8e\xba>uv\xfdS\x84P\xa64\x9bT0'
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.divide(bytes_0)
        none_money_0 = module_0.NoneMoney()
        list_0 = [bytes_0, none_money_0]
        monetary_operation_exception_0 = module_0.MonetaryOperationException(*list_0)
        str_0 = 'W)'
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        int_0 = -10
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        money_0 = none_money_0.with_ccy(currency_0)
        bool_0 = money_0.lte(money_0)
        money_1 = none_money_0.subtract(money_0)
        list_1 = [monetary_operation_exception_0, monetary_operation_exception_0, none_money_0]
        var_0 = None
        money_2 = money_0.add(money_1)
        price_1 = price_0.with_qty(decimal_0)
        money_3 = none_money_0.multiply(var_0)
        money_4 = money_2.divide(var_0)
        dict_0 = {}
        some_money_0 = module_0.SomeMoney(*list_1, **dict_0)
        bool_1 = some_money_0.lte(money_1)
        money_5 = some_money_0.convert(currency_0)
    except BaseException:
        pass

def test_case_45():
    try:
        bytes_0 = b'2\x13\xd4\xb8\x8e\xba>uv\xfdS\x84P\xa64\x9bT0'
        none_money_0 = module_0.NoneMoney()
        list_0 = [bytes_0, none_money_0, none_money_0]
        monetary_operation_exception_0 = module_0.MonetaryOperationException(*list_0)
        str_0 = 'W)'
        currency_type_0 = module_1.CurrencyType.ALTERNATIVE
        decimal_0 = module_2.Decimal()
        int_0 = -37
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        dict_0 = {}
        some_money_0 = module_0.SomeMoney(*list_0, **dict_0)
        none_price_0 = module_0.NonePrice(**dict_0)
        price_0 = none_price_0.with_ccy(currency_0)
        some_price_0 = module_0.SomePrice(*list_0, **dict_0)
        price_1 = some_price_0.subtract(price_0)
        some_price_1 = module_0.SomePrice(*list_0)
        price_2 = some_price_1.add(price_1)
        money_0 = some_money_0.positive()
        currency_1 = None
        money_1 = some_money_0.convert(currency_1)
    except BaseException:
        pass

def test_case_46():
    try:
        bytes_0 = b'2\x13\xd4\xb8\x8e\xba>u\xfdS\x84P\xa64\x9bT0'
        none_money_0 = module_0.NoneMoney()
        list_0 = [bytes_0, none_money_0]
        monetary_operation_exception_0 = module_0.MonetaryOperationException(*list_0)
        str_0 = 'W)'
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        int_0 = -10
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        money_0 = none_money_0.with_ccy(currency_0)
        bool_0 = money_0.lte(money_0)
        money_1 = none_money_0.subtract(money_0)
        list_1 = [monetary_operation_exception_0, monetary_operation_exception_0, none_money_0]
        var_0 = None
        money_2 = none_money_0.convert(currency_0, bool_0)
        money_3 = none_money_0.multiply(var_0)
        money_4 = money_2.divide(var_0)
        dict_0 = {}
        some_money_0 = module_0.SomeMoney(*list_1, **dict_0)
        bool_1 = some_money_0.lte(money_3)
        var_1 = None
        money_5 = money_4.__mul__(var_1)
        currency_1 = None
        str_1 = 'R(.V\n?jCD>)I2g\x0b))vV.'
        int_1 = 3
        currency_2 = module_1.Currency(str_1, str_0, int_0, currency_type_0, decimal_0, int_1)
        money_6 = module_0.Money()
        money_7 = money_6.with_ccy(currency_2)
        bool_2 = some_money_0.lte(money_5)
        money_8 = some_money_0.convert(currency_1, bool_0)
    except BaseException:
        pass

def test_case_47():
    try:
        bytes_0 = b'2\x13\xd4\xb8\x8e\xba>uv\xfdS\x84P\xa64\x9bT0'
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.positive()
        list_0 = [bytes_0, none_money_0, none_money_0]
        monetary_operation_exception_0 = module_0.MonetaryOperationException(*list_0)
        str_0 = 'W)'
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        int_0 = -22
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        dict_0 = {}
        some_money_0 = module_0.SomeMoney(*list_0, **dict_0)
        bool_0 = some_money_0.lte(money_0)
        money_1 = some_money_0.subtract(money_0)
        money_2 = some_money_0.add(money_1)
        none_price_0 = module_0.NonePrice(**dict_0)
        price_0 = none_price_0.with_ccy(currency_0)
        some_price_0 = module_0.SomePrice(*list_0, **dict_0)
        price_1 = some_price_0.subtract(price_0)
        some_price_1 = module_0.SomePrice(*list_0)
        price_2 = some_price_1.add(price_1)
        price_3 = some_price_0.positive()
        money_3 = some_money_0.add(money_0)
        money_4 = money_2.__sub__(money_2)
        price_4 = some_price_0.subtract(price_3)
        price_5 = price_3.__neg__()
        price_6 = price_1.convert(currency_0, bool_0)
    except BaseException:
        pass

def test_case_48():
    try:
        bytes_0 = b'2\x13\xd4\xb5\x8e\xba>uv\xfdS\x84P\xa64_\x9bT0'
        list_0 = [bytes_0, bytes_0, bytes_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        float_0 = some_money_0.as_float()
    except BaseException:
        pass

def test_case_49():
    try:
        bytes_0 = b'2\x13\xd4\xb8\x8e\xba>uv\xfdS\x84P\xa64\x9bT0'
        none_money_0 = module_0.NoneMoney()
        list_0 = [bytes_0, none_money_0, none_money_0]
        str_0 = 'W)'
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        int_0 = -22
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        money_0 = none_money_0.with_ccy(currency_0)
        dict_0 = {}
        some_money_0 = module_0.SomeMoney(*list_0, **dict_0)
        bool_0 = some_money_0.lte(money_0)
        money_1 = some_money_0.subtract(money_0)
        some_money_1 = module_0.SomeMoney(*list_0)
        bool_1 = some_money_0.lte(money_1)
        money_2 = some_money_1.convert(currency_0)
    except BaseException:
        pass

def test_case_50():
    try:
        money_0 = module_0.Money()
        bool_0 = money_0.__eq__(money_0)
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.abs()
        money_1 = money_0.negative()
    except BaseException:
        pass

def test_case_51():
    try:
        dict_0 = {}
        none_money_0 = module_0.NoneMoney(**dict_0)
        money_0 = none_money_0.round()
        bytes_0 = b'2\x13\xd4\xb8\x8e\xba>uv\xfdS\x84P\xa64\x9bT0'
        str_0 = '{L+aB*cALP==V^a)^'
        str_1 = 'GK'
        dict_1 = {str_0: str_0, str_0: bytes_0, str_1: bytes_0}
        money_1 = none_money_0.divide(dict_1)
        none_money_1 = module_0.NoneMoney()
        list_0 = [bytes_0, none_money_1]
        monetary_operation_exception_0 = module_0.MonetaryOperationException(*list_0)
        str_2 = '.'
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        int_0 = -42
        currency_0 = module_1.Currency(str_2, str_2, int_0, currency_type_0, decimal_0, int_0)
        bool_0 = money_0.lte(money_0)
        money_2 = none_money_1.subtract(money_0)
        var_0 = None
        bool_1 = money_2.lt(money_0)
        money_3 = none_money_1.convert(currency_0, bool_0)
        money_4 = none_money_1.multiply(var_0)
        money_5 = module_0.Money()
        bool_2 = none_money_1.gte(money_4)
        money_6 = money_5.add(money_3)
    except BaseException:
        pass

def test_case_52():
    try:
        dict_0 = {}
        none_money_0 = module_0.NoneMoney(**dict_0)
        money_0 = none_money_0.round()
        list_0 = [money_0, dict_0, none_money_0]
        some_price_0 = module_0.SomePrice(*list_0)
        int_0 = some_price_0.as_integer()
    except BaseException:
        pass

def test_case_53():
    try:
        bytes_0 = b'v\x04\x17\x13\xcf\xb2\xfbP.5]@\x9a\xb0\n\xa8\xe4\xfe'
        money_0 = module_0.Money()
        money_1 = money_0.__pos__()
        money_2 = money_0.divide(bytes_0)
    except BaseException:
        pass

def test_case_54():
    try:
        bytes_0 = b'2\x13\xd4\xb8\x8e\xba>uv\xfdS\x84P\xa64\x9bT0'
        none_money_0 = module_0.NoneMoney()
        var_0 = None
        list_0 = [bytes_0, none_money_0, none_money_0]
        str_0 = 'W)'
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        int_0 = -22
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        money_0 = none_money_0.with_ccy(currency_0)
        bool_0 = money_0.lte(money_0)
        money_1 = none_money_0.with_ccy(currency_0)
        money_2 = none_money_0.convert(currency_0, bool_0)
        money_3 = money_2.scalar_add(var_0)
        dict_0 = {}
        some_money_0 = module_0.SomeMoney(*list_0, **dict_0)
        bool_1 = some_money_0.lte(money_1)
        money_4 = some_money_0.subtract(money_1)
        money_5 = money_3.__truediv__(var_0)
        some_money_1 = module_0.SomeMoney(*list_0)
        money_6 = some_money_0.add(money_4)
        bool_2 = some_money_0.lte(money_6)
        money_7 = some_money_1.round()
    except BaseException:
        pass

def test_case_55():
    try:
        bytes_0 = b'2\x13\xd4\xb8\x8e\xba>uv\xfdS\x84P\xa64\x9bT0'
        none_money_0 = module_0.NoneMoney()
        list_0 = [bytes_0, none_money_0]
        monetary_operation_exception_0 = module_0.MonetaryOperationException(*list_0)
        str_0 = 'W)'
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        int_0 = -10
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        money_0 = none_money_0.with_ccy(currency_0)
        bool_0 = money_0.lte(money_0)
        money_1 = none_money_0.subtract(money_0)
        list_1 = [monetary_operation_exception_0, monetary_operation_exception_0, none_money_0]
        var_0 = None
        money_2 = none_money_0.convert(currency_0, bool_0)
        money_3 = money_0.floor_divide(var_0)
        money_4 = money_2.divide(var_0)
        dict_0 = {}
        some_money_0 = module_0.SomeMoney(*list_1, **dict_0)
        bool_1 = some_money_0.lte(money_1)
        money_5 = some_money_0.multiply(var_0)
    except BaseException:
        pass

def test_case_56():
    try:
        bytes_0 = b'2\x13\xd4\xb8\x8e\xba>uv\xfdS\x84P\xa64\x9bT0'
        none_money_0 = module_0.NoneMoney()
        var_0 = None
        money_0 = none_money_0.scalar_add(var_0)
        list_0 = [bytes_0, none_money_0, none_money_0]
        monetary_operation_exception_0 = module_0.MonetaryOperationException(*list_0)
        str_0 = 'W)'
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        int_0 = -22
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        var_1 = None
        dict_0 = {}
        some_money_0 = module_0.SomeMoney(*list_0, **dict_0)
        bool_0 = some_money_0.lte(money_0)
        money_1 = some_money_0.subtract(money_0)
        money_2 = some_money_0.add(money_1)
        none_price_0 = module_0.NonePrice(**dict_0)
        price_0 = none_price_0.divide(var_1)
        some_price_0 = module_0.SomePrice(*list_0, **dict_0)
        price_1 = some_price_0.subtract(price_0)
        var_2 = money_0.__round__()
        some_price_1 = module_0.SomePrice(*list_0)
        price_2 = some_price_1.add(price_1)
        price_3 = price_2.__neg__()
        money_3 = some_money_0.add(money_0)
        bool_1 = some_money_0.lte(money_2)
        money_4 = some_money_0.positive()
        bool_2 = money_2.__ge__(money_3)
        price_4 = price_2.with_ccy(currency_0)
        price_5 = price_4.convert(currency_0, bool_2)
    except BaseException:
        pass

def test_case_57():
    try:
        bytes_0 = b'2\x13\xd4\xb8\x8e\xba>uv\xfdS\x84P\xa64\x9bT0'
        none_money_0 = module_0.NoneMoney()
        list_0 = [bytes_0, none_money_0, none_money_0]
        monetary_operation_exception_0 = module_0.MonetaryOperationException(*list_0)
        str_0 = 'W)'
        currency_type_0 = module_1.CurrencyType.ALTERNATIVE
        decimal_0 = module_2.Decimal()
        int_0 = -37
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        dict_0 = {}
        some_money_0 = module_0.SomeMoney(*list_0, **dict_0)
        none_price_0 = module_0.NonePrice(**dict_0)
        price_0 = none_price_0.with_ccy(currency_0)
        some_price_0 = module_0.SomePrice(*list_0, **dict_0)
        price_1 = some_price_0.subtract(price_0)
        some_price_1 = module_0.SomePrice(*list_0)
        price_2 = some_price_1.add(price_1)
        price_3 = price_2.with_qty(decimal_0)
        price_4 = price_3.abs()
        money_0 = some_money_0.positive()
        currency_1 = None
        money_1 = some_money_0.convert(currency_1)
    except BaseException:
        pass

def test_case_58():
    try:
        bytes_0 = b'2\x13\xd4\xb8\x8e\xba>uv\xfdS\x84P\xa64\x9bT0'
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.positive()
        list_0 = [bytes_0, none_money_0, none_money_0]
        monetary_operation_exception_0 = module_0.MonetaryOperationException(*list_0)
        price_0 = module_0.Price()
        str_0 = 'W)'
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        int_0 = -22
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        var_0 = None
        dict_0 = {}
        none_price_0 = module_0.NonePrice(**dict_0)
        price_1 = none_price_0.with_ccy(currency_0)
        some_price_0 = module_0.SomePrice(*list_0, **dict_0)
        price_2 = price_0.__mul__(var_0)
        some_price_1 = module_0.SomePrice(*list_0)
        price_3 = price_0.__neg__()
        price_4 = some_price_0.subtract(price_2)
    except BaseException:
        pass

def test_case_59():
    try:
        none_money_0 = module_0.NoneMoney()
        str_0 = 'W)'
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        int_0 = -10
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        money_0 = none_money_0.with_ccy(currency_0)
        bool_0 = money_0.lte(money_0)
        money_1 = none_money_0.subtract(money_0)
        var_0 = None
        money_2 = none_money_0.convert(currency_0, bool_0)
        money_3 = money_0.floor_divide(var_0)
        money_4 = money_2.divide(var_0)
        bool_1 = False
        price_0 = module_0.Price()
        price_1 = price_0.convert(currency_0, bool_1)
    except BaseException:
        pass

def test_case_60():
    try:
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.abs()
        none_money_0 = module_0.NoneMoney()
        bool_0 = price_0.lte(price_0)
        money_0 = module_0.Money()
        money_1 = money_0.positive()
    except BaseException:
        pass

def test_case_61():
    try:
        bytes_0 = b'2\x13\xd4\xb8\x8e\xba>uv\xfdS\x84P\xa64\x9bT0'
        none_money_0 = module_0.NoneMoney()
        var_0 = None
        money_0 = none_money_0.positive()
        list_0 = [bytes_0, none_money_0, none_money_0]
        monetary_operation_exception_0 = module_0.MonetaryOperationException(*list_0)
        money_1 = money_0.scalar_add(var_0)
        dict_0 = {}
        some_money_0 = module_0.SomeMoney(*list_0, **dict_0)
        bool_0 = some_money_0.lte(money_0)
        money_2 = some_money_0.subtract(money_0)
        money_3 = some_money_0.add(money_2)
        bool_1 = money_3.__ge__(money_3)
        none_price_0 = module_0.NonePrice(**dict_0)
        bool_2 = money_3.__bool__()
        some_price_0 = module_0.SomePrice(*list_0, **dict_0)
        some_price_1 = module_0.SomePrice(*list_0)
        money_4 = money_3.__sub__(money_2)
        bool_3 = money_4.gt(money_3)
        price_0 = some_price_0.floor_divide(var_0)
    except BaseException:
        pass

def test_case_62():
    try:
        money_0 = module_0.Money()
        bool_0 = money_0.as_boolean()
    except BaseException:
        pass

def test_case_63():
    try:
        bytes_0 = b'2\x13\xd4\xb8\x8e\xba>uv\xfdS\x84P\xa64\x9bT0'
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.abs()
        none_money_0 = module_0.NoneMoney()
        var_0 = None
        money_0 = none_money_0.scalar_add(var_0)
        list_0 = [bytes_0, none_money_0]
        monetary_operation_exception_0 = module_0.MonetaryOperationException(*list_0)
        str_0 = 'W)'
        int_0 = None
        var_1 = price_0.__round__(int_0)
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        int_1 = -25
        currency_0 = module_1.Currency(str_0, str_0, int_1, currency_type_0, decimal_0, int_1)
        money_1 = none_money_0.with_ccy(currency_0)
        bool_0 = money_1.lte(money_1)
        list_1 = [monetary_operation_exception_0, monetary_operation_exception_0, none_money_0]
        var_2 = None
        money_2 = none_money_0.convert(currency_0, bool_0)
        money_3 = none_money_0.subtract(money_2)
        money_4 = money_2.divide(var_2)
        dict_0 = {}
        some_money_0 = module_0.SomeMoney(*list_1, **dict_0)
        bool_1 = some_money_0.lte(money_3)
        money_5 = some_money_0.add(money_0)
        money_6 = some_money_0.subtract(money_0)
        money_7 = some_money_0.subtract(money_5)
    except BaseException:
        pass

def test_case_64():
    try:
        bytes_0 = b'2\x13\xd4\xb8\x8e\xba>uv\xfdS\x84P\xa64\x9bT0'
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.abs()
        list_0 = [bytes_0, none_money_0]
        monetary_operation_exception_0 = module_0.MonetaryOperationException(*list_0)
        decimal_0 = module_2.Decimal()
        bool_0 = money_0.__gt__(money_0)
        list_1 = [monetary_operation_exception_0, monetary_operation_exception_0, none_money_0]
        some_price_0 = module_0.SomePrice(*list_1)
        price_0 = some_price_0.abs()
    except BaseException:
        pass

def test_case_65():
    try:
        bytes_0 = b'2\x13\xd4\xb8\x8e\xba>uv\xfdS\x84P\xa64\x9bT0'
        none_money_0 = module_0.NoneMoney()
        list_0 = [bytes_0, none_money_0, none_money_0]
        monetary_operation_exception_0 = module_0.MonetaryOperationException(*list_0)
        str_0 = 'W)'
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        int_0 = 30
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        money_0 = none_money_0.with_ccy(currency_0)
        bool_0 = money_0.lte(money_0)
        money_1 = none_money_0.with_ccy(currency_0)
        var_0 = None
        money_2 = none_money_0.convert(currency_0, bool_0)
        money_3 = money_2.divide(var_0)
        dict_0 = {}
        money_4 = money_3.__floordiv__(var_0)
        money_5 = money_3.divide(var_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        money_6 = some_money_0.add(money_5)
        money_7 = some_money_0.subtract(money_6)
        none_price_0 = module_0.NonePrice(**dict_0)
        price_0 = none_price_0.with_ccy(currency_0)
        some_price_0 = module_0.SomePrice(*list_0, **dict_0)
        price_1 = some_price_0.subtract(price_0)
        price_2 = some_price_0.subtract(price_1)
        bool_1 = money_7.__ge__(money_4)
        price_3 = price_1.convert(currency_0)
    except BaseException:
        pass

def test_case_66():
    try:
        bytes_0 = b'2\x13\xd4\xb8\x8e\xba>uv\xfdS\x84P\xa64\x9bT0'
        none_money_0 = module_0.NoneMoney()
        list_0 = [bytes_0, none_money_0, none_money_0]
        monetary_operation_exception_0 = module_0.MonetaryOperationException(*list_0)
        decimal_0 = module_2.Decimal()
        var_0 = None
        dict_0 = {}
        some_money_0 = module_0.SomeMoney(*list_0, **dict_0)
        none_price_0 = module_0.NonePrice(**dict_0)
        price_0 = none_price_0.abs()
        some_price_0 = module_0.SomePrice(*list_0, **dict_0)
        price_1 = some_price_0.subtract(price_0)
        price_2 = some_price_0.add(price_1)
        bool_0 = price_1.lte(price_2)
        bool_1 = price_2.__ge__(price_2)
        bool_2 = some_price_0.lte(price_0)
        price_3 = some_price_0.subtract(price_1)
        bool_3 = price_2.lt(price_1)
        price_4 = some_price_0.floor_divide(var_0)
    except BaseException:
        pass

def test_case_67():
    try:
        bytes_0 = b'2\x13\xd4\xb8\x8e\xba>uv\xfdS\x84P\xa64\x9bT0'
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.positive()
        list_0 = [bytes_0, none_money_0, none_money_0]
        monetary_operation_exception_0 = module_0.MonetaryOperationException(*list_0)
        str_0 = 'W+qp\nApj-[rp'
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        int_0 = -22
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        money_1 = none_money_0.with_ccy(currency_0)
        bool_0 = money_1.lte(money_1)
        money_2 = none_money_0.with_ccy(currency_0)
        dict_0 = {}
        some_money_0 = module_0.SomeMoney(*list_0, **dict_0)
        bool_1 = some_money_0.lte(money_2)
        money_3 = some_money_0.subtract(money_2)
        bool_2 = some_money_0.gt(money_2)
        some_money_1 = module_0.SomeMoney(*list_0)
        bool_3 = some_money_0.lte(money_0)
        money_4 = some_money_1.add(money_3)
        money_5 = some_money_0.convert(currency_0)
    except BaseException:
        pass

def test_case_68():
    try:
        bytes_0 = b'2\x13\xd4\xb8\x8e\xba>uv\xfdS\x84P\xa64\x9bT0'
        none_money_0 = module_0.NoneMoney()
        list_0 = [bytes_0, none_money_0, none_money_0]
        str_0 = 'W)'
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        int_0 = -22
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        money_0 = none_money_0.with_ccy(currency_0)
        var_0 = None
        dict_0 = {}
        some_money_0 = module_0.SomeMoney(*list_0, **dict_0)
        bool_0 = some_money_0.lte(money_0)
        money_1 = some_money_0.subtract(money_0)
        some_money_1 = module_0.SomeMoney(*list_0)
        money_2 = some_money_0.add(money_1)
        bool_1 = some_money_0.lte(money_2)
        some_price_0 = module_0.SomePrice(*list_0, **dict_0)
        price_0 = some_price_0.multiply(var_0)
    except BaseException:
        pass

def test_case_69():
    try:
        bytes_0 = b'2\x13\xd4\xb8\x8e\xba>uv\xfdS\x84P\xa64\x9bT0'
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.positive()
        list_0 = [bytes_0, none_money_0, none_money_0]
        monetary_operation_exception_0 = module_0.MonetaryOperationException(*list_0)
        str_0 = 'W)'
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        int_0 = -22
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        money_1 = none_money_0.with_ccy(currency_0)
        money_2 = none_money_0.with_ccy(currency_0)
        dict_0 = {}
        some_money_0 = module_0.SomeMoney(*list_0, **dict_0)
        bool_0 = some_money_0.lte(money_2)
        money_3 = some_money_0.subtract(money_2)
        some_money_1 = module_0.SomeMoney(*list_0)
        bool_1 = some_money_0.lte(money_0)
        money_4 = none_money_0.positive()
        money_5 = some_money_1.add(money_3)
        none_price_0 = module_0.NonePrice(**dict_0)
        int_1 = money_3.__int__()
    except BaseException:
        pass

def test_case_70():
    try:
        bytes_0 = b'2\x13\xd4\xb8\x8e\xba>uv\xfdS\x84P\xa64\x9bT0'
        none_money_0 = module_0.NoneMoney()
        var_0 = None
        money_0 = none_money_0.positive()
        list_0 = [bytes_0, none_money_0, none_money_0]
        monetary_operation_exception_0 = module_0.MonetaryOperationException(*list_0)
        str_0 = 'W)'
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        int_0 = -22
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        money_1 = none_money_0.with_ccy(currency_0)
        bool_0 = money_1.lte(money_1)
        money_2 = none_money_0.with_ccy(currency_0)
        var_1 = None
        money_3 = none_money_0.convert(currency_0, bool_0)
        money_4 = money_3.divide(var_1)
        dict_0 = {}
        some_money_0 = module_0.SomeMoney(*list_0, **dict_0)
        bool_1 = some_money_0.lte(money_2)
        money_5 = some_money_0.subtract(money_2)
        money_6 = money_4.__truediv__(var_0)
        money_7 = money_4.divide(var_0)
        some_money_1 = module_0.SomeMoney(*list_0)
        money_8 = money_5.with_ccy(currency_0)
        bool_2 = some_money_0.lte(money_0)
        money_9 = some_money_1.add(money_5)
        money_10 = some_money_1.subtract(money_8)
    except BaseException:
        pass

def test_case_71():
    try:
        bytes_0 = b'2\x13\xd4\xb8\x8e\xba>uv\xfdS\x84P\xa64\x9bT0'
        none_money_0 = module_0.NoneMoney()
        bool_0 = False
        money_0 = none_money_0.multiply(bool_0)
        var_0 = None
        list_0 = [bytes_0, none_money_0, none_money_0]
        monetary_operation_exception_0 = module_0.MonetaryOperationException(*list_0)
        str_0 = 'W)'
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        int_0 = -22
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        money_1 = none_money_0.with_ccy(currency_0)
        bool_1 = money_1.lte(money_1)
        money_2 = none_money_0.with_ccy(currency_0)
        money_3 = none_money_0.convert(currency_0, bool_1)
        dict_0 = {}
        some_money_0 = module_0.SomeMoney(*list_0, **dict_0)
        bool_2 = some_money_0.lte(money_2)
        money_4 = some_money_0.subtract(money_2)
        bool_3 = money_4.gt(money_0)
        money_5 = money_0.__truediv__(var_0)
        some_money_1 = module_0.SomeMoney(*list_0)
        money_6 = money_2.abs()
        money_7 = some_money_0.add(money_4)
        money_8 = money_0.__floordiv__(var_0)
        bool_4 = money_4.__ge__(money_8)
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.round()
        price_1 = price_0.convert(currency_0)
    except BaseException:
        pass

def test_case_72():
    try:
        bytes_0 = b'2\x13\xd4\xb8\x8e\xba>uv\xfdS\x84P\xa64\x9bT0'
        none_money_0 = module_0.NoneMoney()
        var_0 = None
        money_0 = none_money_0.positive()
        list_0 = [bytes_0, none_money_0, none_money_0]
        monetary_operation_exception_0 = module_0.MonetaryOperationException(*list_0)
        str_0 = 'W)'
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        int_0 = -22
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        money_1 = none_money_0.with_ccy(currency_0)
        money_2 = none_money_0.with_ccy(currency_0)
        var_1 = None
        dict_0 = {}
        some_money_0 = module_0.SomeMoney(*list_0, **dict_0)
        bool_0 = some_money_0.lte(money_2)
        money_3 = some_money_0.subtract(money_2)
        money_4 = some_money_0.add(money_3)
        none_price_0 = module_0.NonePrice(**dict_0)
        price_0 = none_price_0.with_ccy(currency_0)
        some_price_0 = module_0.SomePrice(*list_0, **dict_0)
        price_1 = some_price_0.subtract(price_0)
        some_price_1 = module_0.SomePrice(*list_0)
        price_2 = some_price_1.add(price_1)
        price_3 = price_2.__neg__()
        money_5 = money_2.__floordiv__(var_1)
        price_4 = some_price_0.add(price_0)
        bool_1 = money_5.__ge__(money_5)
        str_1 = 'p'
        str_2 = 'O<F=4#?0(% w\x0b !$`\n'
        currency_type_1 = module_1.CurrencyType.MONEY
        int_1 = -2531
        currency_1 = module_1.Currency(str_1, str_2, int_0, currency_type_1, decimal_0, int_1)
        price_5 = price_3.scalar_add(var_0)
    except BaseException:
        pass

def test_case_73():
    try:
        bytes_0 = b'2\x13\xd4\xb8\x8e\xba>uv\xfdS\x84P\xa64\x9bT0'
        none_money_0 = module_0.NoneMoney()
        var_0 = None
        money_0 = none_money_0.positive()
        list_0 = [bytes_0, none_money_0, none_money_0]
        monetary_operation_exception_0 = module_0.MonetaryOperationException(*list_0)
        str_0 = 'W)'
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        int_0 = -22
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        money_1 = none_money_0.with_ccy(currency_0)
        money_2 = none_money_0.with_ccy(currency_0)
        dict_0 = {}
        some_money_0 = module_0.SomeMoney(*list_0, **dict_0)
        bool_0 = some_money_0.lte(money_2)
        money_3 = some_money_0.subtract(money_2)
        money_4 = some_money_0.add(money_3)
        none_price_0 = module_0.NonePrice(**dict_0)
        price_0 = none_price_0.with_ccy(currency_0)
        some_price_0 = module_0.SomePrice(*list_0, **dict_0)
        price_1 = some_price_0.scalar_subtract(var_0)
    except BaseException:
        pass

def test_case_74():
    try:
        bytes_0 = b'2\x13\xd4\xb8\x8e\xba>uv\xfdS\x84P\xa64\x9bT0'
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.positive()
        list_0 = [bytes_0, none_money_0, none_money_0]
        monetary_operation_exception_0 = module_0.MonetaryOperationException(*list_0)
        decimal_0 = module_2.Decimal()
        int_0 = -22
        price_0 = module_0.Price()
        bool_0 = price_0.is_equal(int_0)
    except BaseException:
        pass

def test_case_75():
    try:
        bytes_0 = b'2\x13\xd4\xb8\x8e\xba>uv\xfdS\x84P\xa64\x9bT0'
        none_money_0 = module_0.NoneMoney()
        var_0 = None
        money_0 = none_money_0.positive()
        list_0 = [bytes_0, none_money_0, none_money_0]
        monetary_operation_exception_0 = module_0.MonetaryOperationException(*list_0)
        str_0 = ''
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        int_0 = -22
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        money_1 = none_money_0.with_ccy(currency_0)
        money_2 = money_1.scalar_add(var_0)
        var_1 = None
        dict_0 = {}
        some_money_0 = module_0.SomeMoney(*list_0, **dict_0)
        bool_0 = some_money_0.lte(money_2)
        money_3 = some_money_0.subtract(money_2)
        money_4 = some_money_0.add(money_3)
        money_5 = money_0.scalar_subtract(var_0)
        none_price_0 = module_0.NonePrice(**dict_0)
        price_0 = none_price_0.with_ccy(currency_0)
        some_price_0 = module_0.SomePrice(*list_0, **dict_0)
        price_1 = some_price_0.subtract(price_0)
        price_2 = some_price_0.add(price_1)
        price_3 = price_2.__neg__()
        money_6 = some_money_0.positive()
        money_7 = some_price_0.times(var_1)
    except BaseException:
        pass

def test_case_76():
    try:
        bytes_0 = b'2\x13\xd4\xb8\x8e\xba>uv\xfdS\x84P\xa64\x9bT0'
        none_money_0 = module_0.NoneMoney()
        var_0 = None
        money_0 = none_money_0.positive()
        list_0 = [bytes_0, none_money_0, none_money_0]
        monetary_operation_exception_0 = module_0.MonetaryOperationException(*list_0)
        str_0 = 'W)'
        money_1 = money_0.scalar_add(var_0)
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        int_0 = -22
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        dict_0 = {}
        some_money_0 = module_0.SomeMoney(*list_0, **dict_0)
        bool_0 = some_money_0.lte(money_0)
        money_2 = some_money_0.subtract(money_0)
        bool_1 = money_0.__ge__(money_0)
        none_price_0 = module_0.NonePrice(**dict_0)
        bool_2 = money_0.__bool__()
        price_0 = none_price_0.with_ccy(currency_0)
        some_price_0 = module_0.SomePrice(*list_0, **dict_0)
        some_price_1 = module_0.SomePrice(*list_0, **dict_0)
        price_1 = some_price_0.add(price_0)
        price_2 = price_0.__neg__()
        money_3 = some_money_0.add(money_2)
        money_4 = none_money_0.floor_divide(var_0)
        bool_3 = some_price_0.lte(price_0)
        price_3 = some_price_1.subtract(price_1)
        price_4 = price_1.__neg__()
        money_5 = none_money_0.positive()
        bool_4 = money_0.gt(money_5)
        price_5 = price_3.__pos__()
        money_6 = some_money_0.convert(currency_0, price_5, bool_1)
    except BaseException:
        pass

def test_case_77():
    try:
        bytes_0 = b'2\x13\xd4\xb8\x8e\xba>uv\xfdS\x84P\xa64\x9bT0'
        none_money_0 = module_0.NoneMoney()
        var_0 = None
        money_0 = none_money_0.positive()
        list_0 = [bytes_0, none_money_0, none_money_0]
        money_1 = none_money_0.scalar_subtract(var_0)
        monetary_operation_exception_0 = module_0.MonetaryOperationException(*list_0)
        str_0 = 'W)'
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        int_0 = -22
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        dict_0 = {}
        some_money_0 = module_0.SomeMoney(*list_0, **dict_0)
        bool_0 = some_money_0.lte(money_0)
        money_2 = some_money_0.subtract(money_0)
        money_3 = some_money_0.add(money_2)
        none_price_0 = module_0.NonePrice()
        money_4 = money_2.with_ccy(currency_0)
        bool_1 = money_3.__le__(money_4)
    except BaseException:
        pass

def test_case_78():
    try:
        bytes_0 = b'2\x13\xd4\xb8\x8e\xba>uv\xfdS\x84P\xa64\x9bT0'
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.positive()
        list_0 = [bytes_0, none_money_0, none_money_0]
        monetary_operation_exception_0 = module_0.MonetaryOperationException(*list_0)
        decimal_0 = module_2.Decimal()
        dict_0 = {}
        price_0 = module_0.Price(**dict_0)
        price_1 = price_0.abs()
    except BaseException:
        pass

def test_case_79():
    try:
        bytes_0 = b'2\x13\xd4\xb8\x8e\xba>uv\xfdS\x84P\xa64\x9bT0'
        none_money_0 = module_0.NoneMoney()
        var_0 = None
        money_0 = none_money_0.positive()
        list_0 = [bytes_0, none_money_0, none_money_0]
        money_1 = none_money_0.scalar_add(var_0)
        monetary_operation_exception_0 = module_0.MonetaryOperationException(*list_0)
        str_0 = 'W)'
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        int_0 = -22
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        dict_0 = {}
        some_money_0 = module_0.SomeMoney(*list_0, **dict_0)
        bool_0 = some_money_0.lte(money_0)
        money_2 = some_money_0.add(money_1)
        bool_1 = money_2.__ge__(money_2)
        money_3 = some_money_0.with_ccy(currency_0)
        none_price_0 = module_0.NonePrice(**dict_0)
        price_0 = none_price_0.with_ccy(currency_0)
        some_price_0 = module_0.SomePrice(*list_0, **dict_0)
        price_1 = some_price_0.subtract(price_0)
        some_price_1 = module_0.SomePrice(*list_0)
        price_2 = some_price_1.add(price_1)
        price_3 = price_2.__neg__()
        money_4 = money_2.__sub__(money_0)
        price_4 = some_price_0.subtract(price_1)
        price_5 = price_4.__neg__()
        bool_2 = money_3.gt(money_2)
    except BaseException:
        pass

def test_case_80():
    try:
        bytes_0 = b'2\x13\xd4\xb8\x8e\xba>uv\xfdS\x84P\xa64\x9bT0'
        none_money_0 = module_0.NoneMoney()
        var_0 = None
        money_0 = none_money_0.positive()
        list_0 = [bytes_0, none_money_0, none_money_0]
        money_1 = none_money_0.scalar_add(var_0)
        monetary_operation_exception_0 = module_0.MonetaryOperationException(*list_0)
        price_0 = module_0.Price()
        price_1 = price_0.add(price_0)
    except BaseException:
        pass

def test_case_81():
    try:
        bytes_0 = b'2\x13\xd4\xb8\x8e\xba>uv\xfdS\x84P\xa64\x9bT0'
        none_money_0 = module_0.NoneMoney()
        var_0 = None
        money_0 = none_money_0.positive()
        list_0 = [bytes_0, none_money_0, none_money_0]
        money_1 = none_money_0.scalar_add(var_0)
        monetary_operation_exception_0 = module_0.MonetaryOperationException(*list_0)
        str_0 = 'W)'
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        int_0 = -22
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        dict_0 = {}
        some_money_0 = module_0.SomeMoney(*list_0, **dict_0)
        bool_0 = some_money_0.lte(money_0)
        money_2 = some_money_0.subtract(money_0)
        money_3 = module_0.Money()
        bool_1 = money_3.__ge__(money_3)
        money_4 = some_money_0.with_ccy(currency_0)
        none_price_0 = module_0.NonePrice(**dict_0)
        price_0 = none_price_0.with_ccy(currency_0)
        some_price_0 = module_0.SomePrice(*list_0, **dict_0)
        price_1 = some_price_0.subtract(price_0)
        price_2 = some_price_0.with_qty(decimal_0)
        some_price_1 = module_0.SomePrice(*list_0)
        price_3 = some_price_1.add(price_1)
        price_4 = price_3.__neg__()
        money_5 = some_money_0.add(money_0)
        money_6 = money_3.__sub__(money_2)
        price_5 = some_price_0.subtract(price_1)
        price_6 = price_5.__neg__()
        bool_2 = money_5.gt(money_3)
    except BaseException:
        pass

def test_case_82():
    try:
        bytes_0 = b'2\x13\xd4\xb8)\x8e\xba>uv\xfdS\x84P\xa64\x9bT0'
        none_money_0 = module_0.NoneMoney()
        var_0 = None
        money_0 = none_money_0.abs()
        list_0 = [bytes_0, none_money_0, none_money_0]
        monetary_operation_exception_0 = module_0.MonetaryOperationException(*list_0)
        str_0 = 'W)'
        money_1 = money_0.scalar_subtract(var_0)
        money_2 = none_money_0.divide(var_0)
        currency_type_0 = module_1.CurrencyType.METAL
        decimal_0 = module_2.Decimal()
        int_0 = -20
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        var_1 = None
        dict_0 = {}
        some_money_0 = module_0.SomeMoney(*list_0, **dict_0)
        bool_0 = some_money_0.lte(money_0)
        money_3 = some_money_0.subtract(money_0)
        money_4 = some_money_0.add(money_3)
        money_5 = money_2.scalar_add(var_1)
        bool_1 = money_4.__ge__(money_4)
        none_price_0 = module_0.NonePrice(**dict_0)
        bool_2 = money_4.__bool__()
        price_0 = none_price_0.abs()
        some_price_0 = module_0.SomePrice(*list_0, **dict_0)
        price_1 = some_price_0.subtract(price_0)
        bool_3 = price_1.__eq__(price_1)
        some_price_1 = module_0.SomePrice(*list_0)
        price_2 = some_price_1.add(price_1)
        price_3 = none_price_0.multiply(var_1)
        bool_4 = money_4.lt(money_4)
        money_6 = some_money_0.add(money_4)
        money_7 = money_4.__sub__(money_3)
        bool_5 = price_1.lte(price_2)
        bool_6 = price_2.__ge__(price_2)
        bool_7 = some_price_1.lte(price_0)
        money_8 = some_money_0.with_ccy(currency_0)
        price_4 = some_price_0.subtract(price_1)
        price_5 = price_1.convert(currency_0)
    except BaseException:
        pass

def test_case_83():
    try:
        bytes_0 = b'2\x13\xd4\xb8\x8e\xba>uv\xfdS\x84P\xa64\x9bT0'
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.positive()
        list_0 = [bytes_0, none_money_0, none_money_0]
        monetary_operation_exception_0 = module_0.MonetaryOperationException(*list_0)
        str_0 = 'W)'
        currency_type_0 = module_1.CurrencyType.METAL
        decimal_0 = module_2.Decimal()
        int_0 = -22
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        dict_0 = {}
        some_money_0 = module_0.SomeMoney(*list_0, **dict_0)
        bool_0 = some_money_0.lte(money_0)
        money_1 = some_money_0.subtract(money_0)
        money_2 = some_money_0.add(money_1)
        bool_1 = money_2.__ge__(money_2)
        none_price_0 = module_0.NonePrice(**dict_0)
        bool_2 = money_2.__bool__()
        price_0 = none_price_0.abs()
        some_price_0 = module_0.SomePrice(*list_0, **dict_0)
        price_1 = some_price_0.subtract(price_0)
        some_price_1 = module_0.SomePrice(*list_0)
        price_2 = some_price_1.add(price_0)
        price_3 = price_1.__neg__()
        bool_3 = money_0.__gt__(money_0)
        money_3 = some_money_0.add(money_2)
        money_4 = money_2.__sub__(money_3)
        bool_4 = price_2.__ge__(price_0)
        bool_5 = some_price_0.lte(price_3)
        price_4 = some_price_1.subtract(price_1)
        price_5 = price_2.__neg__()
        bool_6 = money_3.gt(money_3)
        price_6 = price_0.__neg__()
        date_0 = None
        money_5 = some_money_0.convert(currency_0, date_0)
    except BaseException:
        pass

def test_case_84():
    try:
        list_0 = []
        money_0 = module_0.Money(*list_0)
        none_money_0 = module_0.NoneMoney()
        money_1 = money_0.subtract(money_0)
    except BaseException:
        pass

def test_case_85():
    try:
        bytes_0 = b'2\x13\xd4\xb8\x8e\xba>uv\xfdS\x84P\xa64\x9bT0'
        none_money_0 = module_0.NoneMoney()
        var_0 = None
        money_0 = none_money_0.positive()
        list_0 = [bytes_0, none_money_0, none_money_0]
        monetary_operation_exception_0 = module_0.MonetaryOperationException(*list_0)
        money_1 = money_0.scalar_add(var_0)
        decimal_0 = module_2.Decimal()
        var_1 = None
        dict_0 = {}
        some_money_0 = module_0.SomeMoney(*list_0, **dict_0)
        bool_0 = some_money_0.lte(money_0)
        money_2 = some_money_0.subtract(money_0)
        money_3 = some_money_0.add(money_2)
        bool_1 = money_3.__ge__(money_3)
        money_4 = none_money_0.add(money_2)
        none_price_0 = module_0.NonePrice(**dict_0)
        bool_2 = money_3.__bool__()
        price_0 = none_price_0.abs()
        some_price_0 = module_0.SomePrice(*list_0, **dict_0)
        price_1 = some_price_0.subtract(price_0)
        some_price_1 = module_0.SomePrice(*list_0)
        price_2 = some_price_1.add(price_1)
        price_3 = none_price_0.multiply(var_1)
        price_4 = price_2.__neg__()
        money_5 = some_money_0.add(money_0)
        money_6 = money_3.__sub__(money_2)
        bool_3 = price_1.lte(price_2)
        bool_4 = price_2.__ge__(price_2)
        bool_5 = some_price_1.lte(price_0)
        money_7 = module_0.Money(**dict_0)
        price_5 = some_price_0.subtract(price_1)
        money_8 = money_7.scalar_add(var_1)
    except BaseException:
        pass

def test_case_86():
    try:
        price_0 = module_0.Price()
        price_1 = price_0.positive()
    except BaseException:
        pass

def test_case_87():
    try:
        str_0 = 'USD'
        float_0 = 0.56
        str_1 = '2020-04-26'
        price_0 = module_0.Price()
        price_1 = price_0.round()
    except BaseException:
        pass

def test_case_88():
    try:
        price_0 = module_0.Price()
        int_0 = price_0.as_integer()
    except BaseException:
        pass

def test_case_89():
    try:
        price_0 = module_0.Price()
        str_0 = '{{IJ)~07h6ov7xU'
        int_0 = 29
        currency_type_0 = module_1.CurrencyType.METAL
        decimal_0 = module_2.Decimal()
        int_1 = 1270
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_1)
        price_1 = price_0.with_ccy(currency_0)
        str_1 = ')v5'
        list_0 = [currency_0]
        dict_0 = {str_0: price_1, str_0: price_0, str_1: decimal_0, str_1: list_0}
        some_money_0 = module_0.SomeMoney(**dict_0)
    except BaseException:
        pass

def test_case_90():
    try:
        price_0 = module_0.Price()
        price_1 = price_0.subtract(price_0)
    except BaseException:
        pass

def test_case_91():
    try:
        price_0 = module_0.Price()
        some_money_0 = None
        price_1 = price_0.floor_divide(some_money_0)
    except BaseException:
        pass

def test_case_92():
    try:
        price_0 = module_0.Price()
        bool_0 = price_0.as_boolean()
    except BaseException:
        pass

def test_case_93():
    try:
        price_0 = module_0.Price()
        price_1 = price_0.__pos__()
        bool_0 = price_0.as_boolean()
    except BaseException:
        pass

def test_case_94():
    try:
        price_0 = module_0.Price()
        bool_0 = price_0.__lt__(price_0)
        bool_1 = price_0.as_boolean()
    except BaseException:
        pass

def test_case_95():
    try:
        price_0 = module_0.Price()
        int_0 = 3851
        price_1 = price_0.scalar_subtract(int_0)
    except BaseException:
        pass

def test_case_96():
    try:
        bytes_0 = b'2\x13\xd4\xb8\x8e\xba>uv\xfdS\x84P\xa64\x9bT0'
        none_money_0 = module_0.NoneMoney()
        var_0 = None
        money_0 = none_money_0.abs()
        list_0 = [bytes_0, none_money_0, none_money_0]
        monetary_operation_exception_0 = module_0.MonetaryOperationException(*list_0)
        money_1 = money_0.scalar_add(var_0)
        decimal_0 = module_2.Decimal()
        var_1 = None
        dict_0 = {}
        some_money_0 = module_0.SomeMoney(*list_0, **dict_0)
        bool_0 = some_money_0.lte(money_0)
        money_2 = some_money_0.subtract(money_0)
        money_3 = some_money_0.add(money_2)
        none_price_0 = module_0.NonePrice(**dict_0)
        bool_1 = money_3.__bool__()
        price_0 = none_price_0.abs()
        some_price_0 = module_0.SomePrice(*list_0, **dict_0)
        price_1 = some_price_0.subtract(price_0)
        some_price_1 = module_0.SomePrice(*list_0)
        price_2 = some_price_1.add(price_1)
        price_3 = none_price_0.multiply(var_1)
        bool_2 = money_3.lt(money_3)
        money_4 = some_money_0.add(money_3)
        money_5 = money_3.__sub__(money_2)
        bool_3 = price_1.lte(price_2)
        bool_4 = price_2.__ge__(price_2)
        bool_5 = some_price_1.lte(price_0)
        price_4 = some_price_0.subtract(price_1)
        bool_6 = money_4.gt(money_3)
        bool_7 = price_2.lt(price_3)
        price_5 = some_price_1.floor_divide(var_1)
    except BaseException:
        pass

def test_case_97():
    try:
        price_0 = module_0.Price()
        var_0 = None
        money_0 = price_0.times(var_0)
    except BaseException:
        pass

def test_case_98():
    try:
        price_0 = module_0.Price()
        int_0 = 1434
        price_1 = price_0.multiply(int_0)
    except BaseException:
        pass

def test_case_99():
    try:
        price_0 = module_0.Price()
        price_1 = price_0.scalar_add(price_0)
    except BaseException:
        pass

def test_case_100():
    try:
        price_0 = module_0.Price()
        var_0 = None
        price_1 = price_0.divide(var_0)
    except BaseException:
        pass

def test_case_101():
    try:
        price_0 = module_0.Price()
        bool_0 = price_0.__ge__(price_0)
        var_0 = None
        price_1 = price_0.divide(var_0)
    except BaseException:
        pass

def test_case_102():
    try:
        price_0 = module_0.Price()
        price_1 = price_0.negative()
    except BaseException:
        pass

def test_case_103():
    try:
        price_0 = module_0.Price()
        price_1 = price_0.__abs__()
        some_price_0 = module_0.SomePrice()
    except BaseException:
        pass

def test_case_104():
    try:
        bytes_0 = b'2\x13\xd4\xb8\x8e\xba>uv\xfdS\x84P\xa64\x9bT0'
        none_money_0 = module_0.NoneMoney()
        var_0 = None
        money_0 = none_money_0.abs()
        list_0 = [bytes_0, none_money_0, none_money_0]
        str_0 = 'W)'
        money_1 = money_0.scalar_subtract(var_0)
        money_2 = money_0.scalar_add(var_0)
        currency_type_0 = module_1.CurrencyType.METAL
        decimal_0 = module_2.Decimal()
        int_0 = -20
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        var_1 = None
        dict_0 = {}
        some_money_0 = module_0.SomeMoney(*list_0, **dict_0)
        bool_0 = some_money_0.lte(money_0)
        money_3 = some_money_0.subtract(money_0)
        money_4 = some_money_0.add(money_3)
        money_5 = money_2.scalar_add(var_1)
        bool_1 = money_4.__ge__(money_4)
        none_price_0 = module_0.NonePrice(**dict_0)
        bool_2 = money_4.__bool__()
        price_0 = none_price_0.abs()
        some_price_0 = module_0.SomePrice(*list_0, **dict_0)
        price_1 = some_price_0.subtract(price_0)
        some_price_1 = module_0.SomePrice(*list_0)
        price_2 = some_price_1.add(price_1)
        bool_3 = price_1.__lt__(price_2)
        price_3 = none_price_0.multiply(var_1)
        bool_4 = money_4.lt(money_4)
        money_6 = some_money_0.add(money_5)
        money_7 = money_4.__sub__(money_3)
        bool_5 = price_1.lte(price_2)
        bool_6 = price_2.__ge__(price_2)
        bool_7 = some_price_1.lte(price_0)
        bool_8 = some_price_1.gt(price_3)
        money_8 = some_money_0.convert(currency_0)
    except BaseException:
        pass

def test_case_105():
    try:
        money_0 = module_0.Money()
        money_1 = money_0.__abs__()
        list_0 = None
        str_0 = 'KHR'
        str_1 = '>?*zux9~a{XV).'
        str_2 = '*>S "F'
        dict_0 = {str_0: list_0, str_1: list_0, str_0: str_1, str_2: str_2}
        decimal_0 = module_2.Decimal(**dict_0)
    except BaseException:
        pass

def test_case_106():
    try:
        bytes_0 = b'2\x13\xd4\xb8\x8e\xba>uv\xfdS\x84P\xa64\x9bT0'
        none_money_0 = module_0.NoneMoney()
        var_0 = None
        money_0 = none_money_0.abs()
        list_0 = [bytes_0, none_money_0, none_money_0]
        monetary_operation_exception_0 = module_0.MonetaryOperationException(*list_0)
        str_0 = 'W)'
        money_1 = money_0.scalar_subtract(var_0)
        money_2 = money_0.scalar_add(var_0)
        currency_type_0 = module_1.CurrencyType.METAL
        decimal_0 = module_2.Decimal()
        int_0 = -20
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        var_1 = None
        dict_0 = {}
        some_money_0 = module_0.SomeMoney(*list_0, **dict_0)
        bool_0 = some_money_0.lte(money_0)
        money_3 = some_money_0.subtract(money_0)
        money_4 = module_0.Money(**dict_0)
        money_5 = money_2.scalar_add(var_1)
        bool_1 = money_4.__ge__(money_4)
        none_price_0 = module_0.NonePrice(**dict_0)
        bool_2 = money_4.__bool__()
        price_0 = none_price_0.abs()
        some_price_0 = module_0.SomePrice(*list_0, **dict_0)
        price_1 = some_price_0.subtract(price_0)
        some_price_1 = module_0.SomePrice(*list_0)
        price_2 = some_price_1.add(price_1)
        price_3 = none_price_0.multiply(var_1)
        bool_3 = money_4.lt(money_4)
        money_6 = some_money_0.add(money_4)
    except BaseException:
        pass

def test_case_107():
    try:
        bytes_0 = b'2\x13\xd4\xb8\x8e\xba>uv\xfdS\x84P\xa64\x9bT0'
        none_money_0 = module_0.NoneMoney()
        var_0 = None
        money_0 = none_money_0.abs()
        list_0 = [bytes_0, none_money_0, none_money_0]
        monetary_operation_exception_0 = module_0.MonetaryOperationException(*list_0)
        str_0 = 'W)'
        money_1 = money_0.scalar_subtract(var_0)
        money_2 = money_0.scalar_add(var_0)
        currency_type_0 = module_1.CurrencyType.METAL
        decimal_0 = module_2.Decimal()
        int_0 = -20
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        var_1 = None
        dict_0 = {}
        some_money_0 = module_0.SomeMoney(*list_0, **dict_0)
        bool_0 = some_money_0.lte(money_0)
        money_3 = some_money_0.subtract(money_0)
        money_4 = some_money_0.add(money_3)
        money_5 = money_1.__neg__()
        bool_1 = money_4.__ge__(money_4)
        none_price_0 = module_0.NonePrice(**dict_0)
        bool_2 = money_4.__bool__()
        price_0 = none_price_0.abs()
        some_price_0 = module_0.SomePrice(*list_0, **dict_0)
        some_price_1 = module_0.SomePrice(*list_0)
        price_1 = some_price_0.with_ccy(currency_0)
        price_2 = none_price_0.multiply(var_1)
        bool_3 = money_4.lt(money_4)
        money_6 = some_money_0.add(money_4)
        money_7 = money_4.__sub__(money_3)
        bool_4 = price_2.lte(price_1)
        bool_5 = price_0.gt(price_1)
        bool_6 = price_1.__ge__(price_1)
        bool_7 = some_price_1.lte(price_0)
        money_8 = some_money_0.with_ccy(currency_0)
        price_3 = price_2.__pos__()
        bool_8 = some_price_1.gt(price_1)
    except BaseException:
        pass

def test_case_108():
    try:
        money_0 = module_0.Money()
        int_0 = money_0.__int__()
        float_0 = money_0.as_float()
    except BaseException:
        pass

def test_case_109():
    try:
        list_0 = []
        money_0 = module_0.Money(*list_0)
        none_money_0 = module_0.NoneMoney()
        money_1 = none_money_0.add(money_0)
        money_2 = none_money_0.subtract(money_0)
        bool_0 = money_1.__le__(money_0)
        some_price_0 = module_0.SomePrice(*list_0)
    except BaseException:
        pass