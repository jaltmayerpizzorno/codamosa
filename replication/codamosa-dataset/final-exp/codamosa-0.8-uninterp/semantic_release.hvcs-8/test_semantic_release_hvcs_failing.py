# Automatically generated by Pynguin.
import semantic_release.hvcs as module_0

def test_case_0():
    try:
        base_0 = module_0.Base()
        str_0 = base_0.domain()
    except BaseException:
        pass

def test_case_1():
    try:
        base_0 = module_0.Base()
        str_0 = base_0.api_url()
    except BaseException:
        pass

def test_case_2():
    try:
        dict_0 = {}
        int_0 = -1236
        token_auth_0 = module_0.TokenAuth(int_0)
        str_0 = '\\'
        str_1 = '`qJis<8Sff'
        base_0 = module_0.Base(**dict_0)
        bool_0 = base_0.check_build_status(str_0, str_0, str_1)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '.'
        bool_0 = module_0.post_changelog(str_0, str_0, str_0, str_0)
        str_1 = 'S\x0bmFRf'
        dict_0 = {str_1: bool_0, str_0: str_1}
        bool_1 = False
        token_auth_0 = module_0.TokenAuth(bool_1)
        var_0 = token_auth_0.__call__(dict_0)
    except BaseException:
        pass

def test_case_4():
    try:
        gitlab_0 = module_0.Gitlab()
        optional_0 = gitlab_0.token()
        base_0 = module_0.Base()
        token_auth_0 = module_0.TokenAuth(base_0)
        github_0 = module_0.Github()
        optional_1 = github_0.auth()
        list_0 = [optional_1, gitlab_0, github_0]
        github_1 = module_0.Github(*list_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = None
        str_1 = "XJ8$sZk'LOxgeZgYj:i"
        gitlab_0 = module_0.Gitlab()
        bool_0 = gitlab_0.check_build_status(str_0, str_0, str_1)
    except BaseException:
        pass

def test_case_6():
    try:
        base_0 = module_0.get_hvcs()
        optional_0 = base_0.token()
        optional_1 = module_0.get_domain()
        str_0 = 'patch_without_tag'
        str_1 = ''
        dict_0 = {}
        github_0 = module_0.Github(**dict_0)
        str_2 = None
        bool_0 = module_0.post_changelog(str_0, str_0, str_1, str_2)
        base_1 = module_0.get_hvcs()
        str_3 = '!qd`~>o[_;\t|'
        bool_1 = module_0.upload_to_release(str_3, str_2, str_3, str_2)
        optional_2 = base_1.token()
        str_4 = 'm'
        str_5 = ' eb&[\n\n\r3YK7j'
        optional_3 = base_1.token()
        bool_2 = base_1.check_build_status(str_4, str_4, str_5)
        str_6 = base_1.api_url()
        str_7 = base_1.domain()
        str_8 = '-a'
        str_9 = '\\R\r7V&%^U,Y7\x0c)E`q$m'
        bool_3 = module_0.upload_to_release(str_8, str_6, str_9, str_2)
        base_2 = module_0.Base()
        base_3 = module_0.Base()
        session_0 = github_0.session()
        optional_4 = base_3.token()
    except BaseException:
        pass