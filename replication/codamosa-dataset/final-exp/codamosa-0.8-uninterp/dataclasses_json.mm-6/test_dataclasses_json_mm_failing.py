# Automatically generated by Pynguin.
import dataclasses_json.mm as module_0
import builtins as module_1

def test_case_0():
    try:
        set_0 = set()
        list_0 = [set_0, set_0, set_0]
        bool_0 = None
        list_1 = [set_0]
        union_field_0 = module_0._UnionField(set_0, list_0, bool_0, *list_1)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '%\\V(Z'
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
        schema_f_0 = module_0.SchemaF(**dict_0)
    except BaseException:
        pass

def test_case_2():
    try:
        schema_f_0 = module_0.SchemaF()
    except BaseException:
        pass

def test_case_3():
    try:
        iso_field_0 = None
        bool_0 = True
        str_0 = 'aQM4^vG'
        none_type_0 = None
        timestamp_field_0 = module_0._TimestampField(missing=bool_0, data_key=str_0, allow_none=bool_0, dump_only=bool_0, metadata=none_type_0)
        float_0 = None
        var_0 = module_0.build_type(iso_field_0, bool_0, timestamp_field_0, float_0, float_0)
    except BaseException:
        pass

def test_case_4():
    try:
        dict_0 = {}
        bytearray_0 = module_1.bytearray(**dict_0)
        str_0 = '&[V-7}wao\\#S1'
        var_0 = None
        bool_0 = True
        iso_field_0 = module_0._IsoField(dump_default=bytearray_0, data_key=str_0, validate=var_0, allow_none=bool_0, dump_only=bool_0, **dict_0)
        schema_f_0 = None
        float_0 = 1819.32
        str_1 = 'P<52v.vb ;\n0'
        str_2 = 'bG1GKn\n2e\nVq'
        set_0 = None
        dict_1 = {str_0: str_0, str_1: iso_field_0, str_2: set_0, str_0: schema_f_0}
        list_0 = [dict_1, dict_1]
        list_1 = []
        var_1 = module_0.schema(float_0, list_0, list_1)
    except BaseException:
        pass

def test_case_5():
    try:
        dict_0 = None
        bytes_0 = b'\xe6\xd4\x00=%\x8cb\xaa\xd0\xf64\xa9U\xf9+'
        list_0 = []
        bool_0 = True
        type_0 = module_0.build_schema(dict_0, bytes_0, list_0, bool_0)
    except BaseException:
        pass