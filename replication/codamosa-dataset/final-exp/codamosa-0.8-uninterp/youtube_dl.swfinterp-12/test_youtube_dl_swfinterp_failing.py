# Automatically generated by Pynguin.
import youtube_dl.swfinterp as module_0

def test_case_0():
    try:
        str_0 = 'CloseCurlyDoubleQuote;'
        s_w_f_interpreter_0 = module_0.SWFInterpreter(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'Gh3\x0cKg\tH}xoC"b[+@mLt'
        float_0 = 146.333
        tuple_0 = ()
        a_v_m_class__object_0 = module_0._AVMClass_Object(tuple_0)
        a_v_m_class_0 = module_0._AVMClass(float_0, a_v_m_class__object_0, tuple_0)
        var_0 = a_v_m_class_0.register_methods(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        undefined_0 = module_0._Undefined()
        var_0 = undefined_0.__bool__()
        var_1 = undefined_0.__hash__()
        list_0 = [var_0, undefined_0]
        str_0 = 'rnjWhsr.3+RHK'
        dict_0 = {str_0: str_0}
        a_v_m_class_0 = module_0._AVMClass(list_0, dict_0)
        a_v_m_class__object_0 = module_0._AVMClass_Object(a_v_m_class_0)
        var_2 = a_v_m_class__object_0.__repr__()
        var_3 = a_v_m_class_0.make_object()
        undefined_1 = module_0._Undefined()
        var_4 = undefined_0.__str__()
        s_w_f_interpreter_0 = module_0.SWFInterpreter(list_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'XYvq\x0beVB7Csw'
        set_0 = set()
        dict_0 = {str_0: set_0}
        bytes_0 = b'\tKl\xbcJR\x1b.\x82'
        set_1 = {str_0, str_0}
        a_v_m_class_0 = module_0._AVMClass(bytes_0, set_1)
        var_0 = a_v_m_class_0.make_object()
        var_1 = a_v_m_class_0.register_methods(dict_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'kIZ&GaN_E'
        str_1 = 'K\x0ckXCE\x0b)]"x[\nVP'
        dict_0 = {str_0: str_0, str_1: str_0, str_1: str_1}
        list_0 = [dict_0, dict_0, dict_0, str_1]
        a_v_m_class_0 = module_0._AVMClass(list_0, dict_0)
        var_0 = a_v_m_class_0.__repr__()
        float_0 = 1128.74
        var_1 = a_v_m_class_0.register_methods(float_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'XYvq\x0beVB7Csw'
        set_0 = set()
        dict_0 = {str_0: set_0}
        bytes_0 = b'\tKl\xbcJR\x1b.\x82'
        set_1 = {str_0, str_0}
        a_v_m_class_0 = module_0._AVMClass(bytes_0, set_1)
        var_0 = a_v_m_class_0.register_methods(dict_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'jXE'
        multiname_0 = module_0._Multiname(str_0)
        var_0 = multiname_0.__repr__()
    except BaseException:
        pass

def test_case_7():
    try:
        undefined_0 = module_0._Undefined()
        var_0 = undefined_0.__hash__()
        var_1 = undefined_0.__str__()
        bytes_0 = b'\x05\xe9[\xeb\xb3\x97e\x8f\xb9S\xd7q \xee\xcb\xd1\x08\xe9x\xac'
        var_2 = undefined_0.__bool__()
        s_w_f_interpreter_0 = module_0.SWFInterpreter(bytes_0)
    except BaseException:
        pass