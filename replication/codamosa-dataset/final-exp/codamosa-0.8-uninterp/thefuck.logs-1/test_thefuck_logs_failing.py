# Automatically generated by Pynguin.
import thefuck.logs as module_0

def test_case_0():
    try:
        bytes_0 = b'XZ\xea\x03-d\xd3\xd5\x92T\xe9o\xa1\x19'
        var_0 = module_0.already_configured(bytes_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = b'\xda\\\xf2\x1b0\x95\x1bi\xf2\x04k\xf9\xadK\xb3\xd2\xc7'
        list_0 = [bytes_0]
        float_0 = -1826.4
        var_0 = module_0.exception(list_0, float_0)
    except BaseException:
        pass

def test_case_2():
    try:
        list_0 = []
        float_0 = 1337.05195
        var_0 = module_0.warn(float_0)
        bytes_0 = b'\x1e\xec`p\xf1\x8f\x12\x8a\x1d\xa2\x13o\x98\x14\xfd\x17'
        list_1 = [bytes_0, list_0, var_0]
        list_2 = [bytes_0, var_0, list_0, list_1]
        bytes_1 = b'#\nk\xdd\xb8B@$1\xa2x\xb5\xd9\xd4f\xfd\x8e\xa5e'
        tuple_0 = None
        tuple_1 = (tuple_0,)
        tuple_2 = (list_2, bytes_1, tuple_1, bytes_1)
        var_1 = module_0.rule_failed(bytes_0, tuple_2)
    except BaseException:
        pass

def test_case_3():
    try:
        float_0 = 1185.0
        dict_0 = {float_0: float_0, float_0: float_0, float_0: float_0, float_0: float_0}
        var_0 = module_0.show_corrected_command(dict_0)
    except BaseException:
        pass

def test_case_4():
    try:
        tuple_0 = None
        set_0 = {tuple_0, tuple_0, tuple_0, tuple_0}
        var_0 = module_0.confirm_text(set_0)
    except BaseException:
        pass

def test_case_5():
    try:
        float_0 = 1900.4226514427069
        var_0 = module_0.how_to_configure_alias(float_0)
    except BaseException:
        pass

def test_case_6():
    try:
        bytes_0 = b'+'
        var_0 = module_0.configured_successfully(bytes_0)
    except BaseException:
        pass