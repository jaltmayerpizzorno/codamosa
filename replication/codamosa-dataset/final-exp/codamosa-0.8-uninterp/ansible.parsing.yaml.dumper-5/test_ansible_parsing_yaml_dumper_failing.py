# Automatically generated by Pynguin.
import ansible.parsing.yaml.dumper as module_0
import ansible.vars.hostvars as module_1
import ansible.template as module_2
import ansible.parsing.yaml.objects as module_3
import ansible.utils.unsafe_proxy as module_4

def test_case_0():
    try:
        int_0 = -2890
        dict_0 = {}
        float_0 = -2031.92627
        ansible_dumper_0 = module_0.AnsibleDumper(int_0, dict_0, dict_0, int_0, float_0)
        set_0 = set()
        bool_0 = False
        host_vars_vars_0 = module_1.HostVarsVars(set_0, bool_0)
        var_0 = ansible_dumper_0.represent_data(host_vars_vars_0)
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = -2920
        dict_0 = {}
        float_0 = -2031.92627
        ansible_dumper_0 = module_0.AnsibleDumper(int_0, dict_0, dict_0, int_0, float_0)
        set_0 = set()
        bool_0 = False
        host_vars_vars_0 = module_1.HostVarsVars(set_0, bool_0)
        ansible_undefined_0 = module_2.AnsibleUndefined()
        var_0 = ansible_dumper_0.represent_data(ansible_undefined_0)
    except BaseException:
        pass

def test_case_2():
    try:
        int_0 = -2890
        dict_0 = {}
        float_0 = -2031.92627
        ansible_dumper_0 = module_0.AnsibleDumper(int_0, dict_0, dict_0, int_0, float_0)
        host_vars_vars_0 = None
        ansible_vault_encrypted_unicode_0 = module_3.AnsibleVaultEncryptedUnicode(host_vars_vars_0)
        var_0 = ansible_dumper_0.represent_data(ansible_vault_encrypted_unicode_0)
        ansible_undefined_0 = module_2.AnsibleUndefined(float_0)
        var_1 = module_0.represent_binary(ansible_undefined_0)
    except BaseException:
        pass

def test_case_3():
    try:
        int_0 = -2890
        dict_0 = {}
        float_0 = -2031.92627
        ansible_dumper_0 = module_0.AnsibleDumper(int_0, dict_0, dict_0, int_0, float_0)
        set_0 = set()
        host_vars_vars_0 = None
        ansible_unicode_0 = module_3.AnsibleUnicode()
        var_0 = ansible_dumper_0.represent_data(ansible_unicode_0)
        ansible_vault_encrypted_unicode_0 = module_3.AnsibleVaultEncryptedUnicode(host_vars_vars_0)
        var_1 = ansible_dumper_0.represent_data(ansible_vault_encrypted_unicode_0)
        bool_0 = False
        ansible_undefined_0 = module_2.AnsibleUndefined(float_0)
        host_vars_vars_1 = module_1.HostVarsVars(set_0, bool_0)
        var_2 = ansible_dumper_0.represent_data(host_vars_vars_1)
    except BaseException:
        pass

def test_case_4():
    try:
        int_0 = -2484
        bytes_0 = None
        ansible_dumper_0 = module_0.AnsibleDumper(int_0, bytes_0, int_0)
        float_0 = None
        int_1 = 729
        ansible_unsafe_bytes_0 = module_4.AnsibleUnsafeBytes()
        var_0 = ansible_dumper_0.represent_data(ansible_unsafe_bytes_0)
        dict_0 = {float_0: float_0, float_0: int_1}
        var_1 = module_0.represent_undefined(dict_0)
    except BaseException:
        pass