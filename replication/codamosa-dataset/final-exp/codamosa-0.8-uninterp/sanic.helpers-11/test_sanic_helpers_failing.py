# Automatically generated by Pynguin.
import sanic.helpers as module_0

def test_case_0():
    try:
        bool_0 = True
        var_0 = module_0.is_entity_header(bool_0)
    except BaseException:
        pass

def test_case_1():
    try:
        complex_0 = None
        var_0 = module_0.is_hop_by_hop_header(complex_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'yfH'
        var_0 = module_0.remove_entity_headers(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        tuple_0 = None
        var_0 = module_0.import_string(tuple_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'tests.middleware'
        var_0 = module_0.import_string(str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = None
        dict_0 = {str_0: str_0}
        var_0 = module_0.remove_entity_headers(dict_0)
    except BaseException:
        pass

def test_case_6():
    try:
        bool_0 = True
        var_0 = module_0.has_message_body(bool_0)
        dict_0 = {}
        var_1 = module_0.remove_entity_headers(dict_0)
        bytes_0 = None
        str_0 = 'bF5*#\nIOk*%_nxzL`s}d'
        set_0 = {bytes_0}
        var_2 = module_0.remove_entity_headers(str_0, set_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'sanic.Sanic'
        var_0 = module_0.import_string(str_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = 'asyncio.events'
        var_0 = module_0.import_string(str_0)
        str_1 = 'test_utils.testing_str'
        var_1 = module_0.import_string(str_1)
    except BaseException:
        pass