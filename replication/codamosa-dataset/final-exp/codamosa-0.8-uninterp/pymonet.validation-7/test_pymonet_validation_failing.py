# Automatically generated by Pynguin.
import pymonet.validation as module_0

def test_case_0():
    try:
        bool_0 = True
        set_0 = {bool_0, bool_0}
        float_0 = 8.4811
        tuple_0 = (float_0, set_0)
        int_0 = -1380
        float_1 = -2999.82429
        float_2 = -503.7
        validation_0 = module_0.Validation(tuple_0, float_2)
        validation_1 = module_0.Validation(float_1, validation_0)
        int_1 = -2869
        validation_2 = module_0.Validation(validation_1, int_1)
        var_0 = validation_2.to_box()
        validation_3 = module_0.Validation(bool_0, int_0)
        var_1 = validation_3.__eq__(validation_3)
        var_2 = validation_3.is_fail()
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = -416
        int_1 = True
        validation_0 = module_0.Validation(int_0, int_1)
        tuple_0 = ()
        int_2 = 1389
        dict_0 = {tuple_0: int_2}
        validation_1 = module_0.Validation(tuple_0, dict_0)
        var_0 = validation_1.map(validation_0)
    except BaseException:
        pass

def test_case_2():
    try:
        float_0 = 60.646417
        int_0 = -1293
        bytes_0 = b'\x8a'
        validation_0 = module_0.Validation(int_0, bytes_0)
        var_0 = validation_0.bind(float_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'pD$*D2FyY0;d'
        str_1 = '>\t'
        int_0 = 0
        validation_0 = module_0.Validation(str_1, int_0)
        var_0 = validation_0.ap(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        bool_0 = True
        set_0 = {bool_0, bool_0, bool_0}
        bytes_0 = b'Mn\x0b\xc0\xfcH@\x88\xbb\x15<\x87g\xf8\x8dK\xf14\xcd\x89'
        int_0 = True
        validation_0 = module_0.Validation(bytes_0, int_0)
        var_0 = validation_0.__eq__(set_0)
        var_1 = validation_0.to_either()
    except BaseException:
        pass