# Automatically generated by Pynguin.
import sanic.headers as module_0

def test_case_0():
    pass

def test_case_1():
    str_0 = 'form-data; name=upload; filename="file.txt"'
    tuple_0 = module_0.parse_content_header(str_0)

def test_case_2():
    str_0 = 'pG\x0b3i\x0c\x0b\x0cju'
    tuple_0 = module_0.parse_content_header(str_0)
    str_1 = '\\DyQ\x0c|xy\x0bGdz?8N? '
    str_2 = module_0.fwd_normalize_address(str_1)

def test_case_3():
    str_0 = 'hs%}.Mwh='
    str_1 = module_0.fwd_normalize_address(str_0)

def test_case_4():
    str_0 = ' (most recent call last):</h2>'
    tuple_0 = module_0.parse_host(str_0)

def test_case_5():
    str_0 = 'x-forwarded-host'
    str_1 = 'x-forwarded-port'
    str_2 = '127.0.0.1:8000'
    str_3 = '@F2&\x0c[! ko_jehg<R'
    str_4 = '443'
    str_5 = {str_2: str_0, str_0: str_2, str_3: str_3, str_1: str_4, str_4: str_1}
    str_6 = 'Config'
    var_0 = ()
    str_7 = 'PROXIES_COUNT'
    str_8 = 'FORWARDED_FOR_HEADER'
    str_9 = 'REAL_IP_HEADER'
    int_0 = 2
    var_1 = {str_7: int_0, str_8: str_0, str_9: str_0}
    var_2 = type(str_6, var_0, var_1)
    optional_0 = module_0.parse_xforwarded(str_5, var_2)

def test_case_6():
    str_0 = '(J}b.\t\t8iYHZ~N+ j'
    str_1 = module_0.fwd_normalize_address(str_0)
    str_2 = 'Xaf`D@'
    str_3 = 'i}vs$6=ptv\nP+|sL9e'
    str_4 = module_0.fwd_normalize_address(str_3)
    str_5 = '&m4GO|@pQVApG`m\\bA('
    int_0 = 797
    dict_0 = {}
    bytes_0 = module_0.format_http1_response(int_0, dict_0)
    str_6 = module_0.fwd_normalize_address(str_5)
    tuple_0 = module_0.parse_content_header(str_2)
    str_7 = 'FA(9>EZmp^j'
    str_8 = module_0.fwd_normalize_address(str_7)
    str_9 = 'r(S>Oz8|Km\x0c,>2'
    str_10 = module_0.fwd_normalize_address(str_9)

def test_case_7():
    str_0 = 'by'
    str_1 = '90.98.968.8'
    str_2 = 'hostname'
    str_3 = (str_1, str_2)
    str_4 = [str_1, str_3]
    str_5 = '::1'
    str_6 = (str_0, str_5)
    str_7 = (str_5, str_2)
    str_8 = [str_6, str_7]
    dict_0 = module_0.fwd_normalize(str_8)
    str_9 = (str_0, str_1)
    str_10 = [str_9, str_4]
    dict_1 = module_0.fwd_normalize(str_10)

def test_case_8():
    str_0 = 'xYA{)]15 KZrTaWOg'
    tuple_0 = module_0.parse_content_header(str_0)
    str_1 = 'x-scheme'
    str_2 = 'x-forwarded-host'
    str_3 = 'x-forwarded-proto'
    str_4 = 'x-forwarded-port'
    str_5 = 'https'
    str_6 = '127.0.0.1:8000'
    str_7 = 'http'
    str_8 = {str_1: str_5, str_2: str_6, str_3: str_7, str_4: str_5, str_5: str_4}
    str_9 = 'Config'
    var_0 = ()
    str_10 = 'PROXIES_COUNT'
    str_11 = 'FORWARDED_FOR_HEADER'
    str_12 = 'REAL_IP_HEADER'
    int_0 = 2
    var_1 = {str_10: int_0, str_11: str_3, str_12: str_3}
    var_2 = type(str_9, var_0, var_1)
    optional_0 = module_0.parse_xforwarded(str_8, var_2)

def test_case_9():
    str_0 = 'www.example.com'
    tuple_0 = module_0.parse_host(str_0)
    str_1 = 'www.example.com:1234'
    tuple_1 = module_0.parse_host(str_1)
    tuple_2 = module_0.parse_content_header(str_1)

def test_case_10():
    str_0 = 'x-scheme'
    str_1 = module_0.fwd_normalize_address(str_0)
    tuple_0 = module_0.parse_host(str_1)
    str_2 = 'x-forwarded-port'
    str_3 = 'x-forwarded-path'
    str_4 = 'https'
    str_5 = '127.m-0.0.1:8000'
    str_6 = '443'
    str_7 = {str_0: str_4, str_0: str_5, str_0: str_4, str_2: str_6, str_3: str_2}
    str_8 = 'Config'
    var_0 = ()
    str_9 = 'PROXIES_COUNT'
    str_10 = ' instances is Neprecated aad will be removed in version 21.9. You should change your_'
    str_11 = 'REAL_IP_HEADER'
    int_0 = 2
    var_1 = {str_9: int_0, str_10: str_3, str_11: str_3}
    var_2 = type(str_8, var_0, var_1)
    optional_0 = module_0.parse_xforwarded(str_7, var_2)