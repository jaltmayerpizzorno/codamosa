# Automatically generated by Pynguin.
import ansible.plugins.filter.core as module_0

def test_case_0():
    var_0 = module_0.combine()

def test_case_1():
    float_0 = 356.75
    set_0 = {float_0, float_0}
    var_0 = module_0.to_yaml(set_0)
    float_1 = -956.0
    var_1 = module_0.mandatory(float_1)
    filter_module_0 = module_0.FilterModule()
    var_2 = filter_module_0.filters()
    var_3 = filter_module_0.filters()

def test_case_2():
    str_0 = '~'
    list_0 = []
    dict_0 = {str_0: str_0}
    complex_0 = None
    var_0 = module_0.to_bool(complex_0)
    var_1 = module_0.regex_search(str_0, str_0, *list_0, **dict_0)

def test_case_3():
    str_0 = 'k'
    var_0 = module_0.to_bool(str_0)

def test_case_4():
    str_0 = 'w'
    str_1 = 'a|'
    var_0 = module_0.quote(str_1)
    var_1 = module_0.fileglob(str_0)

def test_case_5():
    str_0 = 'a1'
    var_0 = module_0.fileglob(str_0)

def test_case_6():
    str_0 = 'hello world'
    var_0 = module_0.regex_search(str_0, str_0)

def test_case_7():
    str_0 = 'abc'
    var_0 = module_0.regex_escape(str_0)
    str_1 = 'a+b'
    var_1 = module_0.regex_escape(str_1)
    str_2 = '?[]'
    var_2 = module_0.regex_escape(str_2)
    str_3 = 'posix_basic'
    var_3 = module_0.regex_escape(str_0, str_3)
    var_4 = module_0.regex_escape(str_1, str_3)
    var_5 = module_0.regex_escape(str_2, str_3)

def test_case_8():
    str_0 = '~'
    list_0 = []
    dict_0 = {str_0: list_0}
    var_0 = module_0.regex_search(str_0, str_0, *list_0, **dict_0)
    filter_module_0 = module_0.FilterModule(*list_0)
    var_1 = filter_module_0.filters()
    var_2 = module_0.regex_escape(filter_module_0)

def test_case_9():
    list_0 = None
    var_0 = module_0.to_uuid(list_0)
    filter_module_0 = module_0.FilterModule()
    var_1 = module_0.from_yaml(filter_module_0)

def test_case_10():
    dict_0 = None
    var_0 = module_0.randomize_list(dict_0)

def test_case_11():
    str_0 = '~d'
    bool_0 = False
    tuple_0 = (bool_0,)
    list_0 = [str_0, tuple_0, tuple_0]
    var_0 = module_0.randomize_list(list_0, bool_0)
    list_1 = []
    dict_0 = {str_0: str_0}
    var_1 = module_0.regex_search(str_0, str_0, *list_1, **dict_0)

def test_case_12():
    str_0 = 'Cannot set fs attributes on a non-existent symlink target. follow should be set to False to avoid this.'
    var_0 = module_0.mandatory(str_0)

def test_case_13():
    str_0 = 'IQ2'
    var_0 = module_0.comment(str_0)

def test_case_14():
    str_0 = 'k'
    var_0 = module_0.to_bool(str_0)
    filter_module_0 = module_0.FilterModule()
    var_1 = filter_module_0.filters()

def test_case_15():
    filter_module_0 = module_0.FilterModule()
    set_0 = {filter_module_0, filter_module_0}
    list_0 = [set_0, set_0]
    var_0 = module_0.to_bool(list_0)

def test_case_16():
    var_0 = module_0.regex_replace()

def test_case_17():
    bool_0 = True
    float_0 = 1.0
    bool_1 = True
    var_0 = module_0.ternary(bool_0, float_0, bool_1)

def test_case_18():
    str_0 = 'V'
    list_0 = [str_0]
    var_0 = module_0.combine(*list_0)

def test_case_19():
    str_0 = 'qD3_;~0>y?lJ&;'
    set_0 = {str_0, str_0, str_0, str_0}
    var_0 = module_0.flatten(str_0, set_0)

def test_case_20():
    bytes_0 = None
    bool_0 = False
    list_0 = []
    str_0 = 'rN3'
    var_0 = module_0.to_bool(bool_0)
    list_1 = [bytes_0, list_0, str_0]
    var_1 = module_0.flatten(list_1)

def test_case_21():
    var_0 = module_0.combine()
    set_0 = set()
    float_0 = -312.215
    str_0 = '>(=k#X'
    var_1 = module_0.b64encode(str_0)
    float_1 = None
    list_0 = [float_1]
    var_2 = module_0.combine(*list_0)
    var_3 = module_0.ternary(set_0, float_0, float_1)

def test_case_22():
    str_0 = 'LEE.l]m+'
    str_1 = 'hello world'
    var_0 = module_0.regex_search(str_1, str_0)

def test_case_23():
    str_0 = 'V'
    var_0 = module_0.from_yaml_all(str_0)
    list_0 = []
    tuple_0 = ()
    var_1 = module_0.to_bool(tuple_0)
    str_1 = ']NT`^V,O+U]'
    dict_0 = {str_0: str_1}
    var_2 = module_0.regex_search(str_1, str_1, *list_0, **dict_0)
    str_2 = 'rGucX],6]rMtl&|x'
    var_3 = module_0.from_yaml(str_2)

def test_case_24():
    str_0 = '[S2'
    dict_0 = {}
    list_0 = [str_0]
    var_0 = module_0.subelements(dict_0, list_0)

def test_case_25():
    tuple_0 = ()
    var_0 = module_0.to_nice_yaml(tuple_0)
    set_0 = set()
    filter_module_0 = module_0.FilterModule()
    var_1 = module_0.to_bool(filter_module_0)
    var_2 = module_0.to_bool(set_0)
    var_3 = filter_module_0.filters()
    str_0 = 'Y'
    var_4 = filter_module_0.filters()
    dict_0 = {str_0: var_2, str_0: set_0, str_0: tuple_0, str_0: str_0}
    var_5 = module_0.mandatory(dict_0)
    float_0 = -3794.340193
    var_6 = module_0.list_of_dict_key_value_elements_to_dict(tuple_0)
    bool_0 = False
    var_7 = module_0.b64encode(bool_0)
    var_8 = module_0.regex_escape(float_0)

def test_case_26():
    filter_module_0 = None
    tuple_0 = ()
    str_0 = '\n'
    list_0 = [str_0, filter_module_0, tuple_0]
    var_0 = module_0.ternary(tuple_0, str_0, list_0)

def test_case_27():
    int_0 = 0
    int_1 = 1
    int_2 = 2
    int_3 = 3
    int_4 = 4
    int_5 = [int_3, int_4]
    int_6 = [int_2, int_5]
    int_7 = [int_0, int_1, int_6]
    var_0 = module_0.flatten(int_7)
    int_8 = [int_3, int_4]
    int_9 = [int_2, int_8]
    int_10 = [int_0, int_1, int_9]
    var_1 = module_0.flatten(int_10, int_1)
    int_11 = [int_3, int_4]
    int_12 = [int_2, int_11]
    int_13 = [int_0, int_1, int_12]
    var_2 = module_0.flatten(int_13, int_2)
    int_14 = [int_0, int_1, int_2]
    var_3 = module_0.flatten(int_14, int_0)

def test_case_28():
    str_0 = '/bin/ls'
    var_0 = module_0.fileglob(str_0)
    str_1 = '/bin'
    var_1 = module_0.fileglob(str_1)
    str_2 = '/b?n'
    var_2 = module_0.fileglob(str_2)