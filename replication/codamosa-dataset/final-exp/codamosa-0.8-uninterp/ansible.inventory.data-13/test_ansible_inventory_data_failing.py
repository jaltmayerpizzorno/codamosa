# Automatically generated by Pynguin.
import ansible.inventory.data as module_0

def test_case_0():
    try:
        inventory_data_0 = module_0.InventoryData()
        float_0 = 176.77161
        var_0 = inventory_data_0.remove_group(float_0)
        dict_0 = {inventory_data_0: inventory_data_0}
        var_1 = inventory_data_0.add_group(dict_0)
    except BaseException:
        pass

def test_case_1():
    try:
        inventory_data_0 = module_0.InventoryData()
        str_0 = 'group1'
        var_0 = inventory_data_0.add_group(str_0)
        var_1 = inventory_data_0.add_group(str_0)
        str_1 = 'group2'
        var_2 = inventory_data_0.add_group(str_1)
        str_2 = ''
        var_3 = inventory_data_0.add_group(str_2)
    except BaseException:
        pass

def test_case_2():
    try:
        inventory_data_0 = module_0.InventoryData()
        var_0 = inventory_data_0.get_groups_dict()
        var_1 = inventory_data_0.reconcile_inventory()
        float_0 = -846.7311
        var_2 = inventory_data_0.add_host(float_0)
    except BaseException:
        pass

def test_case_3():
    try:
        inventory_data_0 = module_0.InventoryData()
        var_0 = inventory_data_0.reconcile_inventory()
        var_1 = inventory_data_0.remove_host(inventory_data_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'Manage the integration between Galaxy and the given source.'
        set_0 = set()
        inventory_data_0 = module_0.InventoryData()
        str_1 = 'i386'
        var_0 = inventory_data_0.add_group(str_1)
        var_1 = inventory_data_0.set_variable(str_0, set_0, str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        bytes_0 = b'\x17]\xc6\x12\xde2\xa8\xf2\xa0\xc9\x8dhu\xd3i\xaa'
        int_0 = 255
        inventory_data_0 = module_0.InventoryData()
        var_0 = inventory_data_0.add_child(bytes_0, int_0)
    except BaseException:
        pass

def test_case_6():
    try:
        inventory_data_0 = module_0.InventoryData()
        bool_0 = False
        list_0 = []
        tuple_0 = (inventory_data_0, list_0, list_0)
        bool_1 = None
        var_0 = inventory_data_0.add_host(bool_0, tuple_0, bool_1)
    except BaseException:
        pass

def test_case_7():
    try:
        inventory_data_0 = module_0.InventoryData()
        var_0 = inventory_data_0.get_groups_dict()
        inventory_data_1 = module_0.InventoryData()
        str_0 = 'ungrouped'
        str_1 = 'mp1tE'
        var_1 = inventory_data_1.add_child(str_0, str_1)
    except BaseException:
        pass

def test_case_8():
    try:
        inventory_data_0 = module_0.InventoryData()
        str_0 = '127.0.0.1'
        var_0 = inventory_data_0.get_host(str_0)
        str_1 = 'localhost'
        var_1 = inventory_data_0.get_host(str_1)
        var_2 = inventory_data_0.add_host(str_1)
        str_2 = 'g1'
        var_3 = inventory_data_0.add_host(str_1)
        var_4 = inventory_data_0.add_host(str_1, str_2)
    except BaseException:
        pass

def test_case_9():
    try:
        inventory_data_0 = module_0.InventoryData()
        var_0 = inventory_data_0.get_groups_dict()
        str_0 = 'all'
        int_0 = 375
        tuple_0 = None
        var_1 = inventory_data_0.set_variable(str_0, int_0, tuple_0)
        var_2 = inventory_data_0.reconcile_inventory()
        float_0 = -846.7311
        var_3 = inventory_data_0.add_host(float_0)
    except BaseException:
        pass

def test_case_10():
    try:
        inventory_data_0 = module_0.InventoryData()
        str_0 = 'group1'
        var_0 = inventory_data_0.add_group(str_0)
        str_1 = 'group2'
        str_2 = 'group3'
        var_1 = inventory_data_0.add_group(str_2)
        str_3 = 'ho*st1'
        var_2 = inventory_data_0.add_host(str_3, str_0)
        var_3 = inventory_data_0.add_host(str_0, str_0)
        var_4 = inventory_data_0.add_host(str_3, str_1)
    except BaseException:
        pass

def test_case_11():
    try:
        bytes_0 = b'\xb2'
        inventory_data_0 = module_0.InventoryData()
        str_0 = 'all'
        var_0 = inventory_data_0.remove_group(str_0)
        var_1 = inventory_data_0.remove_host(bytes_0)
    except BaseException:
        pass

def test_case_12():
    try:
        inventory_data_0 = module_0.InventoryData()
        str_0 = '127.0.0.1'
        var_0 = inventory_data_0.get_host(str_0)
        str_1 = 'localhost'
        var_1 = inventory_data_0.get_host(str_1)
        var_2 = inventory_data_0.add_host(str_0)
        str_2 = 'g1'
        var_3 = inventory_data_0.add_host(str_1)
        var_4 = inventory_data_0.add_host(str_1, str_2)
    except BaseException:
        pass