# Automatically generated by Pynguin.
import ansible.module_utils.urls as module_0

def test_case_0():
    try:
        bytes_0 = b'\xbc\xfc\xce\x8f\xfa\x14\x19\xe8\xfaXCe'
        set_0 = {bytes_0, bytes_0, bytes_0}
        no_s_s_l_error_0 = module_0.NoSSLError()
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(bytes_0, set_0, no_s_s_l_error_0)
        dict_0 = None
        missing_module_error_0 = module_0.MissingModuleError(s_s_l_validation_handler_0, dict_0)
        var_0 = module_0.getpeercert(missing_module_error_0)
    except BaseException:
        pass

def test_case_1():
    try:
        custom_h_t_t_p_s_connection_0 = module_0.CustomHTTPSConnection()
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'Darwin'
        custom_h_t_t_p_s_handler_0 = module_0.CustomHTTPSHandler()
        var_0 = custom_h_t_t_p_s_handler_0.https_open(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        int_0 = 1076
        str_0 = None
        list_0 = [str_0, int_0]
        unix_h_t_t_p_connection_0 = module_0.UnixHTTPConnection(list_0)
        h_t_t_p_s_client_auth_handler_0 = module_0.HTTPSClientAuthHandler(unix_h_t_t_p_connection_0)
        var_0 = module_0.build_ssl_validation_error(int_0, str_0, h_t_t_p_s_client_auth_handler_0)
    except BaseException:
        pass

def test_case_4():
    try:
        h_t_t_p_s_client_auth_handler_0 = module_0.HTTPSClientAuthHandler()
        int_0 = -3512
        var_0 = h_t_t_p_s_client_auth_handler_0.https_open(int_0)
    except BaseException:
        pass

def test_case_5():
    try:
        tuple_0 = ()
        unix_h_t_t_p_s_connection_0 = module_0.UnixHTTPSConnection(tuple_0)
        var_0 = unix_h_t_t_p_s_connection_0.connect()
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'ieu~YB`Y:w:i('
        var_0 = module_0.generic_urlparse(str_0)
        no_s_s_l_error_0 = None
        unix_h_t_t_p_s_connection_0 = module_0.UnixHTTPSConnection(no_s_s_l_error_0)
        var_1 = unix_h_t_t_p_s_connection_0.__call__()
    except BaseException:
        pass

def test_case_7():
    try:
        var_0 = module_0.url_argument_spec()
        str_0 = ''
        unix_h_t_t_p_s_connection_0 = module_0.UnixHTTPSConnection(str_0)
        var_1 = unix_h_t_t_p_s_connection_0.connect()
    except BaseException:
        pass

def test_case_8():
    try:
        bool_0 = False
        dict_0 = {}
        unix_h_t_t_p_handler_0 = module_0.UnixHTTPHandler(dict_0, **dict_0)
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(bool_0, dict_0)
        var_0 = s_s_l_validation_handler_0.http_request(bool_0)
    except BaseException:
        pass

def test_case_9():
    try:
        int_0 = 9
        var_0 = module_0.generic_urlparse(int_0)
    except BaseException:
        pass

def test_case_10():
    try:
        request_0 = module_0.Request()
        str_0 = 'AE'
        var_0 = request_0.delete(str_0)
    except BaseException:
        pass

def test_case_11():
    try:
        request_0 = None
        bool_0 = None
        dict_0 = {request_0: request_0, bool_0: request_0}
        var_0 = module_0.build_ssl_validation_error(request_0, bool_0, dict_0)
    except BaseException:
        pass

def test_case_12():
    try:
        bool_0 = False
        dict_0 = {}
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(bool_0, dict_0)
        var_0 = s_s_l_validation_handler_0.http_request(bool_0)
    except BaseException:
        pass

def test_case_13():
    try:
        request_0 = module_0.Request()
        bool_0 = True
        var_0 = module_0.atexit_remove_file(bool_0)
        str_0 = 'NQ]l'
        bytes_0 = b']\xf6\x01\x1f\xbc\x9e~2\xaa\xa8'
        var_1 = module_0.generic_urlparse(bytes_0)
        list_0 = [str_0]
        dict_0 = {str_0: list_0, str_0: var_0}
        parse_result_dotted_dict_0 = module_0.ParseResultDottedDict(**dict_0)
        float_0 = 4562.0
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(request_0, list_0, float_0)
        var_2 = s_s_l_validation_handler_0.http_request(s_s_l_validation_handler_0)
    except BaseException:
        pass

def test_case_14():
    try:
        bool_0 = True
        var_0 = module_0.atexit_remove_file(bool_0)
        list_0 = []
        proxy_error_0 = None
        str_0 = 'xi\twU'
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(list_0, proxy_error_0, str_0)
        bool_1 = False
        bytes_0 = b'DJHr\xeaXu\xc0'
        h_t_t_p_s_client_auth_handler_0 = module_0.HTTPSClientAuthHandler(bytes_0)
        unix_h_t_t_p_s_connection_0 = module_0.UnixHTTPSConnection(list_0)
        tuple_0 = (h_t_t_p_s_client_auth_handler_0, unix_h_t_t_p_s_connection_0)
        unix_h_t_t_p_s_connection_1 = module_0.UnixHTTPSConnection(tuple_0)
        custom_h_t_t_p_s_handler_0 = module_0.CustomHTTPSHandler(s_s_l_validation_handler_0, bool_1, unix_h_t_t_p_s_connection_1)
        var_1 = module_0.rfc2822_date_string(custom_h_t_t_p_s_handler_0)
    except BaseException:
        pass

def test_case_15():
    try:
        float_0 = 395.736
        var_0 = module_0.prepare_multipart(float_0)
    except BaseException:
        pass

def test_case_16():
    try:
        float_0 = 1384.25451
        var_0 = module_0.get_channel_binding_cert_hash(float_0)
        int_0 = 867
        str_0 = 'OFDLu;*\x0bHWLp"C/Y 7H'
        list_0 = None
        connection_error_0 = module_0.ConnectionError()
        tuple_0 = (str_0, list_0, connection_error_0)
        unix_h_t_t_p_s_connection_0 = module_0.UnixHTTPSConnection(tuple_0)
        var_1 = module_0.basic_auth_header(int_0, unix_h_t_t_p_s_connection_0)
        var_2 = unix_h_t_t_p_s_connection_0.connect()
    except BaseException:
        pass

def test_case_17():
    try:
        str_0 = '\r\x0bA4?9'
        custom_h_t_t_p_s_handler_0 = module_0.CustomHTTPSHandler(str_0)
        h_t_t_p_s_client_auth_handler_0 = module_0.HTTPSClientAuthHandler()
        bool_0 = True
        float_0 = 1852.3958
        unix_h_t_t_p_handler_0 = module_0.UnixHTTPHandler(float_0)
        float_1 = 1429.928779
        no_s_s_l_error_0 = None
        unix_h_t_t_p_connection_0 = None
        float_2 = None
        str_1 = 'Pfs'
        tuple_0 = (no_s_s_l_error_0, unix_h_t_t_p_connection_0, float_2, str_1)
        str_2 = ''
        str_3 = '\nG\x0c<@*Pd<XWu9:'
        dict_0 = {str_2: unix_h_t_t_p_connection_0, str_3: custom_h_t_t_p_s_handler_0, str_2: bool_0}
        str_4 = '@^oDeYC^:\x0bf\x0b^}$'
        tuple_1 = (tuple_0, dict_0, str_4, bool_0)
        str_5 = 'ws,N&6C$zW\\1t(I]Z'
        request_with_method_0 = module_0.RequestWithMethod(unix_h_t_t_p_handler_0, float_1, tuple_1, str_5)
    except BaseException:
        pass

def test_case_18():
    try:
        int_0 = -1019
        var_0 = module_0.atexit_remove_file(int_0)
        list_0 = []
        unix_h_t_t_p_connection_0 = module_0.UnixHTTPConnection(list_0)
        dict_0 = {}
        connection_error_0 = module_0.ConnectionError(*list_0, **dict_0)
        request_0 = module_0.Request(unix_h_t_t_p_connection_0, list_0, connection_error_0, unix_h_t_t_p_connection_0)
    except BaseException:
        pass

def test_case_19():
    try:
        request_0 = module_0.Request()
        var_0 = request_0.delete(request_0)
    except BaseException:
        pass

def test_case_20():
    try:
        request_0 = None
        str_0 = '&lO8&1+$2\\$!fmyVWd'
        dict_0 = {str_0: str_0, str_0: request_0, str_0: request_0, str_0: request_0, str_0: str_0}
        list_0 = [str_0, str_0]
        unix_h_t_t_p_handler_0 = module_0.UnixHTTPHandler(list_0)
        unix_h_t_t_p_s_connection_0 = module_0.UnixHTTPSConnection(str_0)
        var_0 = module_0.open_url(request_0, dict_0, unix_h_t_t_p_handler_0, request_0, unix_h_t_t_p_s_connection_0, request_0, list_0)
    except BaseException:
        pass

def test_case_21():
    try:
        connection_error_0 = module_0.ConnectionError()
        list_0 = [connection_error_0, connection_error_0]
        h_t_t_p_s_client_auth_handler_0 = module_0.HTTPSClientAuthHandler()
        proxy_error_0 = module_0.ProxyError()
        str_0 = 'TH\x0c'
        dict_0 = {str_0: h_t_t_p_s_client_auth_handler_0}
        bool_0 = True
        custom_h_t_t_p_s_handler_0 = module_0.CustomHTTPSHandler()
        list_1 = [dict_0]
        var_0 = module_0.open_url(proxy_error_0, dict_0, bool_0, custom_h_t_t_p_s_handler_0, list_1, list_1, list_0)
    except BaseException:
        pass

def test_case_22():
    try:
        h_t_t_p_s_client_auth_handler_0 = module_0.HTTPSClientAuthHandler()
        set_0 = {h_t_t_p_s_client_auth_handler_0, h_t_t_p_s_client_auth_handler_0, h_t_t_p_s_client_auth_handler_0}
        bool_0 = False
        unix_h_t_t_p_connection_0 = module_0.UnixHTTPConnection(bool_0)
        str_0 = '|'
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(unix_h_t_t_p_connection_0, str_0)
        var_0 = s_s_l_validation_handler_0.make_context(h_t_t_p_s_client_auth_handler_0, set_0)
    except BaseException:
        pass

def test_case_23():
    try:
        parse_result_dotted_dict_0 = module_0.ParseResultDottedDict()
        var_0 = parse_result_dotted_dict_0.as_list()
        var_1 = parse_result_dotted_dict_0.as_list()
        list_0 = [parse_result_dotted_dict_0, var_1, var_1, var_1]
        var_2 = module_0.getpeercert(list_0)
    except BaseException:
        pass

def test_case_24():
    try:
        int_0 = 6
        h_t_t_p_s_client_auth_handler_0 = module_0.HTTPSClientAuthHandler()
        unix_h_t_t_p_connection_0 = module_0.UnixHTTPConnection(int_0)
        var_0 = unix_h_t_t_p_connection_0.__call__()
    except BaseException:
        pass

def test_case_25():
    try:
        str_0 = ']UM12w,[#'
        bytes_0 = b'T\xe84\xc5\xbf\xe7\xc0'
        var_0 = module_0.generic_urlparse(bytes_0)
        int_0 = 438
        unix_h_t_t_p_s_connection_0 = module_0.UnixHTTPSConnection(int_0)
        int_1 = 2209
        str_1 = '%J:4`r'
        missing_module_error_0 = module_0.MissingModuleError(int_1, str_1)
        list_0 = [str_0, var_0]
        set_0 = {int_1}
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(list_0, int_0, set_0)
        h_t_t_p_s_client_auth_handler_0 = None
        no_s_s_l_error_0 = module_0.NoSSLError()
        var_1 = s_s_l_validation_handler_0.make_context(h_t_t_p_s_client_auth_handler_0, no_s_s_l_error_0)
    except BaseException:
        pass

def test_case_26():
    try:
        bool_0 = False
        dict_0 = {}
        unix_h_t_t_p_handler_0 = module_0.UnixHTTPHandler(dict_0, **dict_0)
        str_0 = 'Lds*R3q$'
        int_0 = 3600
        list_0 = [str_0, str_0]
        custom_h_t_t_p_s_connection_0 = module_0.CustomHTTPSConnection(*list_0)
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(int_0, custom_h_t_t_p_s_connection_0)
        var_0 = unix_h_t_t_p_handler_0.http_open(bool_0)
    except BaseException:
        pass

def test_case_27():
    try:
        no_s_s_l_error_0 = module_0.NoSSLError()
        str_0 = 'VYPtxy~H}6/\nn\\'
        dict_0 = {str_0: str_0, str_0: no_s_s_l_error_0, str_0: no_s_s_l_error_0, str_0: no_s_s_l_error_0}
        var_0 = module_0.prepare_multipart(dict_0)
    except BaseException:
        pass

def test_case_28():
    try:
        s_s_l_validation_error_0 = module_0.SSLValidationError()
        str_0 = '@B& A"b'
        no_s_s_l_error_0 = module_0.NoSSLError()
        var_0 = module_0.get_channel_binding_cert_hash(no_s_s_l_error_0)
        int_0 = 173
        connection_error_0 = None
        dict_0 = {str_0: connection_error_0}
        custom_h_t_t_p_s_connection_0 = None
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(int_0, dict_0, custom_h_t_t_p_s_connection_0)
        proxy_error_0 = module_0.ProxyError()
        var_1 = s_s_l_validation_handler_0.detect_no_proxy(s_s_l_validation_handler_0)
        request_0 = module_0.Request()
        var_2 = request_0.options(request_0, **dict_0)
    except BaseException:
        pass

def test_case_29():
    try:
        unix_h_t_t_p_handler_0 = None
        str_0 = 'Darwin'
        bool_0 = True
        tuple_0 = (unix_h_t_t_p_handler_0,)
        h_t_t_p_s_client_auth_handler_0 = module_0.HTTPSClientAuthHandler()
        var_0 = module_0.fetch_url(unix_h_t_t_p_handler_0, str_0, bool_0, tuple_0, h_t_t_p_s_client_auth_handler_0)
    except BaseException:
        pass

def test_case_30():
    try:
        request_0 = module_0.Request()
        complex_0 = None
        var_0 = request_0.get(complex_0)
    except BaseException:
        pass

def test_case_31():
    try:
        request_0 = module_0.Request()
        connection_error_0 = module_0.ConnectionError()
        var_0 = request_0.get(connection_error_0)
    except BaseException:
        pass

def test_case_32():
    try:
        list_0 = []
        no_s_s_l_error_0 = module_0.NoSSLError(*list_0)
        h_t_t_p_s_client_auth_handler_0 = module_0.HTTPSClientAuthHandler()
        bool_0 = False
        list_1 = [h_t_t_p_s_client_auth_handler_0, h_t_t_p_s_client_auth_handler_0]
        proxy_error_0 = module_0.ProxyError(*list_1)
        float_0 = 25.0
        custom_h_t_t_p_s_handler_0 = module_0.CustomHTTPSHandler(float_0)
        unix_h_t_t_p_handler_0 = module_0.UnixHTTPHandler(custom_h_t_t_p_s_handler_0)
        var_0 = module_0.fetch_file(h_t_t_p_s_client_auth_handler_0, bool_0, proxy_error_0, unix_h_t_t_p_handler_0)
    except BaseException:
        pass

def test_case_33():
    try:
        request_0 = module_0.Request()
        float_0 = 1025.99
        no_s_s_l_error_0 = None
        dict_0 = {}
        s_s_l_validation_error_0 = module_0.SSLValidationError(**dict_0)
        parse_result_dotted_dict_0 = module_0.ParseResultDottedDict(**dict_0)
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(s_s_l_validation_error_0, parse_result_dotted_dict_0)
        var_0 = s_s_l_validation_handler_0.make_context(float_0, no_s_s_l_error_0)
    except BaseException:
        pass

def test_case_34():
    try:
        s_s_l_validation_error_0 = module_0.SSLValidationError()
        custom_h_t_t_p_s_handler_0 = module_0.CustomHTTPSHandler()
        dict_0 = {}
        int_0 = -411
        unix_h_t_t_p_handler_0 = module_0.UnixHTTPHandler(int_0)
        list_0 = []
        unix_h_t_t_p_handler_1 = module_0.UnixHTTPHandler(list_0)
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(unix_h_t_t_p_handler_1, list_0)
        var_0 = s_s_l_validation_handler_0.make_context(dict_0, unix_h_t_t_p_handler_0)
    except BaseException:
        pass

def test_case_35():
    try:
        s_s_l_validation_error_0 = module_0.SSLValidationError()
        request_0 = None
        unix_h_t_t_p_s_connection_0 = None
        custom_h_t_t_p_s_handler_0 = module_0.CustomHTTPSHandler()
        var_0 = module_0.open_url(request_0, unix_h_t_t_p_s_connection_0, custom_h_t_t_p_s_handler_0, unix_h_t_t_p_s_connection_0, unix_h_t_t_p_s_connection_0)
    except BaseException:
        pass

def test_case_36():
    try:
        no_s_s_l_error_0 = module_0.NoSSLError()
        list_0 = [no_s_s_l_error_0, no_s_s_l_error_0]
        unix_h_t_t_p_connection_0 = module_0.UnixHTTPConnection(list_0)
        bool_0 = True
        set_0 = {bool_0}
        str_0 = 'LR"Bw#*Z\x0c+,G'
        str_1 = '8a'
        dict_0 = {str_0: str_0, str_1: bool_0}
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(bool_0, set_0, dict_0)
        var_0 = s_s_l_validation_handler_0.validate_proxy_response(unix_h_t_t_p_connection_0)
    except BaseException:
        pass

def test_case_37():
    try:
        s_s_l_validation_error_0 = module_0.SSLValidationError()
        h_t_t_p_s_client_auth_handler_0 = module_0.HTTPSClientAuthHandler()
        proxy_error_0 = module_0.ProxyError()
        request_0 = module_0.Request()
        str_0 = 'KdSgMk0tV@Y'
        dict_0 = {}
        var_0 = request_0.post(str_0, **dict_0)
    except BaseException:
        pass

def test_case_38():
    try:
        proxy_error_0 = module_0.ProxyError()
        request_0 = module_0.Request()
        var_0 = request_0.head(proxy_error_0)
    except BaseException:
        pass

def test_case_39():
    try:
        request_0 = module_0.Request()
        bytes_0 = b'\xf8\x8d\xd7\x1a\xee^\xb4\x17\x91n\xd1x\x14'
        dict_0 = {}
        var_0 = request_0.patch(bytes_0, **dict_0)
    except BaseException:
        pass

def test_case_40():
    try:
        request_0 = module_0.Request()
        list_0 = [request_0]
        dict_0 = {}
        proxy_error_0 = module_0.ProxyError(*list_0, **dict_0)
        var_0 = request_0.put(proxy_error_0)
    except BaseException:
        pass

def test_case_41():
    try:
        request_0 = module_0.Request()
        str_0 = 'Invalih value "%sj for configuration)option "%s", valid values are: %s'
        var_0 = request_0.get(str_0)
    except BaseException:
        pass

def test_case_42():
    try:
        int_0 = -3419
        request_with_method_0 = None
        proxy_error_0 = module_0.ProxyError()
        str_0 = 'RLkZ"IEQ`.69`ka '
        var_0 = module_0.build_ssl_validation_error(int_0, request_with_method_0, proxy_error_0, str_0)
    except BaseException:
        pass

def test_case_43():
    try:
        str_0 = 'test'
        int_0 = 1234
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(str_0, int_0)
        bytes_0 = b'HTTP/1.0 200 OK\r\n\r\n'
        var_0 = s_s_l_validation_handler_0.validate_proxy_response(bytes_0)
        int_1 = 200
        int_2 = 300
        int_3 = [int_1, int_2]
        var_1 = s_s_l_validation_handler_0.validate_proxy_response(bytes_0, int_3)
        bytes_1 = b'HTTP/1.0 202 Accepted\r\n\r\n'
        int_4 = [int_1, int_2]
        var_2 = s_s_l_validation_handler_0.validate_proxy_response(bytes_1, int_4)
    except BaseException:
        pass

def test_case_44():
    try:
        bytes_0 = b' +Dz'
        connection_error_0 = module_0.ConnectionError()
        str_0 = 'l]I'
        var_0 = module_0.basic_auth_header(connection_error_0, str_0)
        list_0 = [bytes_0, bytes_0]
        dict_0 = None
        list_1 = [dict_0, str_0, var_0, list_0]
        list_2 = [dict_0]
        no_s_s_l_error_0 = module_0.NoSSLError(*list_2)
        float_0 = 3037.4832
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(no_s_s_l_error_0, float_0)
        var_1 = s_s_l_validation_handler_0.make_context(dict_0, dict_0)
        unix_h_t_t_p_s_connection_0 = module_0.UnixHTTPSConnection(no_s_s_l_error_0)
        unix_h_t_t_p_handler_0 = module_0.UnixHTTPHandler(unix_h_t_t_p_s_connection_0)
        var_2 = unix_h_t_t_p_handler_0.http_open(list_1)
    except BaseException:
        pass