# Automatically generated by Pynguin.
import docstring_parser.rest as module_0

def test_case_0():
    pass

def test_case_1():
    str_0 = 'Parse the numpy-style docstring into its components.\n\n        :returns: parsed docstring\n        '
    docstring_0 = module_0.parse(str_0)

def test_case_2():
    str_0 = '\x0ckb8E\nsh\tv]gy-J'
    docstring_0 = module_0.parse(str_0)

def test_case_3():
    str_0 = ''
    docstring_0 = module_0.parse(str_0)

def test_case_4():
    str_0 = '-0'
    docstring_0 = module_0.parse(str_0)
    str_1 = 'Numpydoc section parser.\n\n    :param title: section title. For most sections, this is a heading like\n                  "Parameters" which appears on its own line, underlined by\n                  en-dashes (\'-\') on the following line.\n    :param key: meta key string. In the parsed ``DocstringMeta`` instance this\n                will be the first element of the ``args`` attribute list.\n    '
    docstring_1 = module_0.parse(str_1)
    str_2 = 'h`~,Y=,+$j?\t?GpWNh4y'
    docstring_2 = module_0.parse(str_2)
    str_3 = 'P\\e\x0b;roQko0Y**"cv'
    docstring_3 = module_0.parse(str_3)
    str_4 = 'Returns'
    docstring_4 = module_0.parse(str_4)

def test_case_5():
    str_0 = 'r~fT'
    docstring_0 = module_0.parse(str_0)

def test_case_6():
    str_0 = '\n            Short description.\n\n            Long description.\n\n            :param T param: Parameter description.\n            :param T param2: Parameter 2 description.\n            :type param2: T\n            :param param3: Parameter 3 description.\n            :return: Returns description.\n            :rtype: T\n            :raises ValueError: If some value is invalid.\n            :raises: If some other exception is raised.\n        '
    docstring_0 = module_0.parse(str_0)

def test_case_7():
    str_0 = 'Example function.\n\n    This function has types.\n\n    :param a: param a\n    :type a: int\n    :param b: param b\n    :type b: string\n    :param c: param c\n    :type c: int\n    :param d: param d with a defualt\n    :type d: int\n    :default d: 10\n    :param e: param e with an empty default.\n    :type e: int\n    :default e:\n    :param f: param f defaults to something.\n    :type f: int\n    :default f: 0\n    '
    docstring_0 = module_0.parse(str_0)