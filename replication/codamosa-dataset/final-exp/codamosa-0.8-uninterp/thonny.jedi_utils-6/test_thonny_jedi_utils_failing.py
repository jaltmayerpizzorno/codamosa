# Automatically generated by Pynguin.
import thonny.jedi_utils as module_0

def test_case_0():
    try:
        str_0 = ')g}[3;S\\2XEd;xw(56W'
        set_0 = None
        var_0 = module_0.get_statement_of_position(str_0, set_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = b'sQM\xd78\xef\x19\xcaq\x9at\x1e\x97\xf2'
        var_0 = module_0.parse_source(bytes_0)
    except BaseException:
        pass

def test_case_2():
    try:
        int_0 = 503
        str_0 = 'I op~(3;9,~'
        var_0 = module_0.get_script_completions(str_0, int_0, int_0, str_0, str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'G'
        int_0 = -167
        var_0 = module_0.get_script_completions(str_0, int_0, int_0, str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = None
        int_0 = 1976
        var_0 = module_0.get_definitions(str_0, int_0, int_0, str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'ZUxFxCtz\x0b'
        int_0 = 91
        var_0 = module_0.get_definitions(str_0, int_0, int_0, str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'Used when assigning to an attribute not defined in the class slots.'
        str_1 = 'maximizable_widget'
        bytes_0 = b'\x99\x03H9\x0f\xf6\xdfQ;,2\x8fN|\x93%n'
        float_0 = -1139.8
        thonny_completion_0 = module_0.ThonnyCompletion(str_0, str_1, bytes_0, str_0, float_0, str_0)
        set_0 = {float_0}
        var_0 = thonny_completion_0.__getitem__(set_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = "m$q's}7Ch)}:PwI4"
        str_1 = ')cp}'
        var_0 = module_0.parse_source(str_1)
        str_2 = '~\\{'
        int_0 = None
        var_1 = module_0.get_script_completions(str_2, int_0, int_0, str_0)
        str_3 = 'F?KpC;E4v{@WJ'
        str_4 = 'QCoreApplication'
        int_1 = 1856
        int_2 = 2311
        var_2 = module_0.get_definitions(str_3, int_1, int_2, str_4)
    except BaseException:
        pass