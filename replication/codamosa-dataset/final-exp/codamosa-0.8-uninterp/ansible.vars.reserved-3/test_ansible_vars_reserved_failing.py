# Automatically generated by Pynguin.
import ansible.vars.reserved as module_0

def test_case_0():
    try:
        set_0 = set()
        str_0 = 'uRf'
        var_0 = module_0.get_reserved_names(str_0)
        var_1 = module_0.get_reserved_names()
        var_2 = module_0.get_reserved_names(set_0)
    except BaseException:
        pass

def test_case_1():
    try:
        var_0 = module_0.get_reserved_names()
        float_0 = 1479.46394
        var_1 = module_0.is_reserved_name(float_0)
        int_0 = -230
        var_2 = module_0.get_reserved_names(int_0)
        bytes_0 = b'D\x062=}\xba\xb5\xfa\xab\xb4\xea\x19+'
        list_0 = None
        var_3 = module_0.is_reserved_name(list_0)
        var_4 = module_0.is_reserved_name(bytes_0)
        str_0 = '+Zi#W\ne/l6(3&'
        var_5 = module_0.warn_if_reserved(str_0, float_0)
    except BaseException:
        pass

def test_case_2():
    try:
        list_0 = []
        var_0 = module_0.warn_if_reserved(list_0)
        dict_0 = {var_0: var_0}
        var_1 = module_0.is_reserved_name(dict_0)
    except BaseException:
        pass

def test_case_3():
    try:
        float_0 = 1101.07182
        var_0 = module_0.is_reserved_name(float_0)
        bool_0 = False
        var_1 = module_0.warn_if_reserved(bool_0)
    except BaseException:
        pass

def test_case_4():
    try:
        float_0 = None
        var_0 = module_0.is_reserved_name(float_0)
        bytes_0 = b' 8\x1a\x96\x97\xc1\x90#\xb7\xed\xc3\xcc\xda\x82\xbe'
        var_1 = module_0.is_reserved_name(bytes_0)
        str_0 = '<d%Bp{<>9b?q:/(t+}l'
        str_1 = 'k^}2'
        var_2 = module_0.warn_if_reserved(str_0, str_1)
        bool_0 = None
        float_1 = -628.6
        list_0 = [float_1, float_1, bool_0]
        int_0 = None
        var_3 = module_0.get_reserved_names(int_0)
        var_4 = module_0.is_reserved_name(bool_0)
        str_2 = 'Q\x0b1pg{&]9B+|Wg2v-a'
        int_1 = -1524
        tuple_0 = (float_1, list_0, str_2, int_1)
        var_5 = module_0.warn_if_reserved(tuple_0)
    except BaseException:
        pass