# Automatically generated by Pynguin.
import apimd.loader as module_0

def test_case_0():
    pass

def test_case_1():
    str_0 = '}<!8>cMo\\'
    str_1 = "?sVN3'"
    str_2 = '8? /J8TI/jl0'
    str_3 = 'pe-:U%2H\t4Ip<aEIC'
    str_4 = '9M\x0c'
    str_5 = "!a1gX3A5!TU{hU'V"
    str_6 = '*,$ghYy]'
    dict_0 = {str_0: str_1, str_2: str_3, str_4: str_1, str_5: str_6}
    int_0 = 0
    bool_0 = True
    sequence_0 = module_0.gen_api(dict_0, level=int_0, toc=bool_0)

def test_case_2():
    str_0 = '\tjCZpiie{6'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    sequence_0 = module_0.gen_api(dict_0, str_0)

def test_case_3():
    str_0 = '35)6\x0bk>)\rVltRs1LG-[^'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    sequence_0 = module_0.gen_api(dict_0, prefix=str_0)

def test_case_4():
    str_0 = '35)6\x0bk>)\rVltRs1LG-[^'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    sequence_0 = module_0.gen_api(dict_0, str_0)

def test_case_5():
    str_0 = '35)6\x0bk>)\rVltRsVLG-[\\'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    sequence_0 = module_0.gen_api(dict_0, prefix=str_0)

def test_case_6():
    str_0 = '&#124;'
    str_1 = None
    str_2 = '8 l9yVv]&rgH<'
    str_3 = 'ln)P/&'
    str_4 = 'X'
    str_5 = 'Q/&4'
    bool_0 = None
    int_0 = 3
    str_6 = module_0.loader(str_4, str_5, bool_0, int_0, bool_0)
    dict_0 = {str_2: str_1, str_2: str_3}
    bool_1 = True
    sequence_0 = module_0.gen_api(dict_0, dry=bool_1)
    str_7 = '}6'
    dict_1 = {str_1: str_7}
    int_1 = -941
    sequence_1 = module_0.gen_api(dict_1)
    bool_2 = True
    sequence_2 = module_0.gen_api(dict_1, level=int_1, toc=bool_2, dry=bool_2)
    iterator_0 = module_0.walk_packages(str_0, str_0)
    bool_3 = False
    str_8 = module_0.loader(str_0, str_2, bool_3, int_1, bool_3)

def test_case_7():
    bool_0 = False
    str_0 = None
    str_1 = 'typing'
    str_2 = '=8I*b3` D;wFb9T['
    dict_0 = {str_0: str_1, str_2: str_1}
    str_3 = 'typing.MutableSequence'
    sequence_0 = module_0.gen_api(dict_0, str_1, prefix=str_3, toc=bool_0)

def test_case_8():
    str_0 = 'Test function: loader()'
    str_1 = '..'
    bool_0 = True
    bool_1 = False
    str_2 = module_0.loader(str_0, str_1, bool_0, bool_0, bool_1)