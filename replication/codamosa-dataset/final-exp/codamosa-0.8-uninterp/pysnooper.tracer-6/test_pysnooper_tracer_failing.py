# Automatically generated by Pynguin.
import pysnooper.tracer as module_0

def test_case_0():
    try:
        unavailable_source_0 = module_0.UnavailableSource()
        list_0 = [unavailable_source_0, unavailable_source_0]
        var_0 = unavailable_source_0.__getitem__(list_0)
        str_0 = '3-3NLQhaqA'
        file_writer_0 = module_0.FileWriter(unavailable_source_0, str_0)
        list_1 = []
        var_1 = unavailable_source_0.__getitem__(list_1)
        var_2 = module_0.get_write_function(unavailable_source_0, file_writer_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'O#lsOkv6A^BKg+FYPMn'
        float_0 = -736.2987
        tracer_0 = module_0.Tracer(str_0, float_0)
    except BaseException:
        pass

def test_case_2():
    try:
        float_0 = 1469.745
        set_0 = {float_0}
        tracer_0 = module_0.Tracer(float_0, set_0)
    except BaseException:
        pass

def test_case_3():
    try:
        tracer_0 = module_0.Tracer()
        var_0 = tracer_0.__enter__()
        str_0 = 'j'
        file_writer_0 = module_0.FileWriter(str_0, str_0)
        float_0 = -418.2440083318784
        file_writer_1 = module_0.FileWriter(file_writer_0, float_0)
        tracer_1 = module_0.Tracer(file_writer_1, str_0, tracer_0, str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        tracer_0 = module_0.Tracer()
        var_0 = tracer_0.__exit__(tracer_0, tracer_0, tracer_0)
    except BaseException:
        pass

def test_case_5():
    try:
        bool_0 = True
        float_0 = -1445.425448
        list_0 = [float_0, float_0, float_0]
        list_1 = [float_0, float_0, list_0]
        file_writer_0 = module_0.FileWriter(list_0, list_1)
        var_0 = file_writer_0.write(bool_0)
    except BaseException:
        pass

def test_case_6():
    try:
        bytes_0 = b'\xa1\xb7&\xd6\xa7\x8b7S,<o{\xfd@\x0e\xc5\xd8'
        float_0 = None
        file_writer_0 = module_0.FileWriter(bytes_0, float_0)
        list_0 = []
        var_0 = file_writer_0.write(list_0)
    except BaseException:
        pass

def test_case_7():
    try:
        tracer_0 = module_0.Tracer()
        var_0 = tracer_0.__enter__()
        var_1 = tracer_0.__enter__()
        bytes_0 = None
        var_2 = tracer_0.__call__(bytes_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = 'fzDc%>'
        float_0 = 249.226332
        var_0 = module_0.get_write_function(str_0, float_0)
        bool_0 = False
        float_1 = -835.77037
        float_2 = -977.6
        list_0 = []
        unavailable_source_0 = module_0.UnavailableSource(*list_0)
        tracer_0 = module_0.Tracer(bool_0, float_1, float_2, unavailable_source_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = None
        tracer_0 = module_0.Tracer(str_0)
        var_0 = tracer_0.__enter__()
        unavailable_source_0 = module_0.UnavailableSource()
        bytes_0 = b''
        set_0 = set()
        tracer_1 = module_0.Tracer(tracer_0, bytes_0, set_0, unavailable_source_0)
    except BaseException:
        pass

def test_case_10():
    try:
        tracer_0 = module_0.Tracer()
        var_0 = tracer_0.__call__(tracer_0)
    except BaseException:
        pass

def test_case_11():
    try:
        tracer_0 = module_0.Tracer()
        var_0 = tracer_0.__enter__()
        var_1 = tracer_0.__exit__(tracer_0, tracer_0, tracer_0)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = ''
        str_1 = 'l\nH,/pG(|8n6ALEGV,Ao'
        str_2 = 'W8daR\x0bf'
        dict_0 = {str_0: str_0, str_0: str_0, str_1: str_1, str_2: str_2}
        unavailable_source_0 = module_0.UnavailableSource()
        var_0 = unavailable_source_0.__getitem__(dict_0)
        str_3 = 'W o '
        bool_0 = False
        float_0 = 583.098
        file_writer_0 = module_0.FileWriter(bool_0, float_0)
        var_1 = file_writer_0.write(str_3)
        unavailable_source_1 = module_0.UnavailableSource()
        bool_1 = False
        unavailable_source_2 = module_0.UnavailableSource()
        tuple_0 = ()
        bytes_0 = b''
        list_0 = [bool_1]
        file_writer_1 = module_0.FileWriter(bytes_0, list_0)
        unavailable_source_3 = module_0.UnavailableSource()
        tracer_0 = module_0.Tracer(file_writer_1)
        var_2 = tracer_0.__enter__()
        int_0 = 3009
        list_1 = [int_0, tuple_0, unavailable_source_2]
        tracer_1 = module_0.Tracer(tuple_0, tuple_0, list_1)
    except BaseException:
        pass