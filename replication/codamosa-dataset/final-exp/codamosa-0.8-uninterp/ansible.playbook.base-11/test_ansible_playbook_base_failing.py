# Automatically generated by Pynguin.
import ansible.playbook.base as module_0

def test_case_0():
    try:
        str_0 = 'x:K'
        list_0 = [str_0]
        field_attribute_base_0 = module_0.FieldAttributeBase()
        var_0 = field_attribute_base_0.load_data(str_0, list_0)
    except BaseException:
        pass

def test_case_1():
    try:
        field_attribute_base_0 = module_0.FieldAttributeBase()
        float_0 = None
        field_attribute_base_1 = module_0.FieldAttributeBase()
        var_0 = field_attribute_base_1.load_data(float_0)
    except BaseException:
        pass

def test_case_2():
    try:
        field_attribute_base_0 = module_0.FieldAttributeBase()
        var_0 = field_attribute_base_0.get_variable_manager()
        field_attribute_base_1 = module_0.FieldAttributeBase()
        field_attribute_base_2 = module_0.FieldAttributeBase()
        var_1 = field_attribute_base_0.get_ds()
        var_2 = field_attribute_base_1.dump_me()
        var_3 = field_attribute_base_2.load_data(field_attribute_base_1)
    except BaseException:
        pass

def test_case_3():
    try:
        base_0 = module_0.Base()
        bool_0 = True
        list_0 = [bool_0, bool_0, bool_0]
        str_0 = '\nnf!av.h8a;yNk'
        base_1 = module_0.Base()
        tuple_0 = (str_0, list_0, base_1, base_1)
        field_attribute_base_0 = module_0.FieldAttributeBase()
        var_0 = field_attribute_base_0.get_validated_value(base_0, bool_0, list_0, tuple_0)
    except BaseException:
        pass

def test_case_4():
    try:
        field_attribute_base_0 = module_0.FieldAttributeBase()
        bytes_0 = b'\xe2\xd9=\xb7\xf6\xd7\xc4\x81\x1b,'
        var_0 = field_attribute_base_0.post_validate(bytes_0)
    except BaseException:
        pass

def test_case_5():
    try:
        field_attribute_base_0 = module_0.FieldAttributeBase()
        float_0 = None
        dict_0 = {float_0: float_0, field_attribute_base_0: float_0}
        var_0 = field_attribute_base_0.from_attrs(dict_0)
        field_attribute_base_1 = module_0.FieldAttributeBase()
        var_1 = field_attribute_base_1.load_data(float_0)
    except BaseException:
        pass

def test_case_6():
    try:
        field_attribute_base_0 = module_0.FieldAttributeBase()
        list_0 = [field_attribute_base_0, field_attribute_base_0]
        var_0 = field_attribute_base_0.deserialize(list_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = "bmpd'JwGU\n@;,8$"
        field_attribute_base_0 = module_0.FieldAttributeBase()
        var_0 = field_attribute_base_0.preprocess_data(str_0)
        base_0 = module_0.Base()
        var_1 = base_0.get_dep_chain()
        var_2 = base_0.get_search_path()
        field_attribute_base_1 = module_0.FieldAttributeBase()
        base_1 = module_0.Base()
        var_3 = base_1.get_search_path()
        var_4 = field_attribute_base_1.validate()
        var_5 = field_attribute_base_1.dump_me()
        list_0 = [base_1]
        var_6 = field_attribute_base_1.squash()
        var_7 = base_1.get_path()
        var_8 = field_attribute_base_1.dump_me(list_0)
    except BaseException:
        pass

def test_case_8():
    try:
        field_attribute_base_0 = module_0.FieldAttributeBase()
        var_0 = field_attribute_base_0.serialize()
        str_0 = '+\r\nu S*AgMy'
        var_1 = field_attribute_base_0.preprocess_data(str_0)
        var_2 = field_attribute_base_0.get_ds()
        dict_0 = {}
        var_3 = field_attribute_base_0.from_attrs(dict_0)
        var_4 = field_attribute_base_0.squash()
        field_attribute_base_1 = module_0.FieldAttributeBase()
        base_meta_0 = module_0.BaseMeta()
    except BaseException:
        pass

def test_case_9():
    try:
        field_attribute_base_0 = module_0.FieldAttributeBase()
        var_0 = field_attribute_base_0.get_ds()
        var_1 = field_attribute_base_0.serialize()
        list_0 = [field_attribute_base_0, var_1, var_1, field_attribute_base_0]
        list_1 = [field_attribute_base_0]
        base_0 = module_0.Base()
        var_2 = field_attribute_base_0.load_data(list_0, list_1, base_0)
    except BaseException:
        pass

def test_case_10():
    try:
        field_attribute_base_0 = module_0.FieldAttributeBase()
        var_0 = field_attribute_base_0.serialize()
        int_0 = 3163
        var_1 = field_attribute_base_0.validate(int_0)
        var_2 = field_attribute_base_0.validate()
        var_3 = field_attribute_base_0.get_ds()
        bytes_0 = b'\x9a/\xd86\x98"\xaa@^\xcc\xd4\x17\x92v\xfb\xa5\x93j('
        var_4 = field_attribute_base_0.serialize()
        var_5 = field_attribute_base_0.dump_me()
        dict_0 = {}
        set_0 = set()
        var_6 = field_attribute_base_0.load_data(bytes_0, dict_0, set_0)
    except BaseException:
        pass