# Automatically generated by Pynguin.
import tqdm.rich as module_0
import rich.progress as module_1
import builtins as module_2

def test_case_0():
    try:
        tqdm_rich_0 = module_0.tqdm_rich()
    except BaseException:
        pass

def test_case_1():
    try:
        fraction_column_0 = module_0.FractionColumn()
        fraction_column_1 = module_0.FractionColumn()
        var_0 = fraction_column_1.render(fraction_column_0)
    except BaseException:
        pass

def test_case_2():
    try:
        fraction_column_0 = module_0.FractionColumn()
        list_0 = [fraction_column_0]
        fraction_column_1 = module_0.FractionColumn(list_0)
        rate_column_0 = module_0.RateColumn()
        var_0 = rate_column_0.render(fraction_column_1)
    except BaseException:
        pass

def test_case_3():
    try:
        tqdm_rich_0 = module_0.tqdm_rich()
    except BaseException:
        pass

def test_case_4():
    try:
        var_0 = module_0.trrange()
    except BaseException:
        pass

def test_case_5():
    try:
        tqdm_rich_0 = module_0.tqdm_rich()
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'tqdm_tqdm'
        float_0 = 600000.0
        callable_0 = None
        task_0 = module_1.Task(float_0, str_0, float_0, float_0, callable_0)
        dict_0 = {}
        object_0 = module_2.object(**dict_0)
        rate_column_0 = module_0.RateColumn(object_0)
        var_0 = rate_column_0.render(task_0)
        fraction_column_0 = module_0.FractionColumn()
        fraction_column_1 = module_0.FractionColumn()
        fraction_column_2 = module_0.FractionColumn(task_0)
        var_1 = fraction_column_2.render(task_0)
        tqdm_rich_0 = module_0.tqdm_rich()
    except BaseException:
        pass