# Automatically generated by Pynguin.
import ansible.executor.play_iterator as module_0

def test_case_0():
    try:
        bool_0 = False
        list_0 = [bool_0, bool_0, bool_0, bool_0]
        dict_0 = {bool_0: list_0}
        play_iterator_0 = module_0.PlayIterator(bool_0, list_0, dict_0, dict_0, bool_0, dict_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'K3[WeP'
        str_1 = 'AraT12@ol`F'
        str_2 = '^\n        (.+)                    # A pattern expression ending with...\n        \\[(?:                   # A [subscript] expression comprising:\n            (-?[0-9]+)|         # A single positive or negative number\n            ([0-9]+)([:-])      # Or an x:y or x: range.\n            ([0-9]*)\n        )\\]\n        $\n    '
        tuple_0 = (str_0, str_1, str_2)
        host_state_0 = module_0.HostState(tuple_0)
        var_0 = host_state_0.__repr__()
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b'\xb0'
        host_state_0 = module_0.HostState(bytes_0)
        bytes_1 = b'j\xa2\xd6\xa3\x01Wj'
        host_state_1 = module_0.HostState(bytes_1)
        var_0 = host_state_1.__eq__(host_state_0)
    except BaseException:
        pass