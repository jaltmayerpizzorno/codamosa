# Automatically generated by Pynguin.
import ansible.playbook.task as module_0
import ansible.playbook.block as module_1

def test_case_0():
    pass

def test_case_1():
    task_0 = module_0.Task()

def test_case_2():
    task_0 = module_0.Task()
    var_0 = task_0.get_name()

def test_case_3():
    str_0 = 'Connection Options'
    float_0 = 1244.0
    complex_0 = None
    dict_0 = {float_0: str_0}
    tuple_0 = (complex_0, dict_0)
    task_0 = module_0.Task(tuple_0)
    list_0 = None
    tuple_1 = (str_0, float_0, task_0, list_0)
    task_1 = module_0.Task(tuple_1, task_0, tuple_0)
    var_0 = task_1.__repr__()

def test_case_4():
    task_0 = module_0.Task()
    var_0 = task_0.__repr__()

def test_case_5():
    task_0 = module_0.Task()
    var_0 = task_0.get_vars()

def test_case_6():
    task_0 = module_0.Task()
    var_0 = task_0.get_include_params()

def test_case_7():
    task_0 = module_0.Task()
    str_0 = 'Jxj-X;]XUiyFpmVW9-'
    var_0 = task_0.get_vars()
    var_1 = task_0.copy(str_0)
    var_2 = task_0.__repr__()

def test_case_8():
    task_0 = module_0.Task()
    var_0 = task_0.serialize()

def test_case_9():
    var_0 = {}
    task_0 = module_0.Task()
    var_1 = task_0.deserialize(var_0)

def test_case_10():
    bytes_0 = b'\xf8\x96'
    set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
    tuple_0 = (bytes_0, set_0)
    str_0 = '\n    Convert the provided host to the format in /proc/net/tcp*\n\n    /proc/net/tcp uses little-endian four byte hex for ipv4\n    /proc/net/tcp6 uses little-endian per 4B word for ipv6\n\n    Args:\n        host: String with either hostname, IPv4, or IPv6 address\n\n    Returns:\n        List of tuples containing address family and the\n        little-endian converted host\n    '
    task_0 = module_0.Task(str_0)
    task_1 = module_0.Task()
    var_0 = task_1.set_loader(tuple_0)

def test_case_11():
    int_0 = 127
    task_0 = module_0.Task(int_0)
    var_0 = task_0.get_name()

def test_case_12():
    task_0 = module_0.Task()
    var_0 = task_0.all_parents_static()
    var_1 = task_0.copy()
    task_1 = module_0.Task()
    list_0 = [var_1, task_0, task_1]
    var_2 = task_0.copy(list_0)
    var_3 = task_0.get_name()
    var_4 = task_0.all_parents_static()
    task_2 = module_0.Task()

def test_case_13():
    task_0 = module_0.Task()
    var_0 = task_0.get_first_parent_include()

def test_case_14():
    task_0 = module_0.Task()
    var_0 = task_0.get_first_parent_include()
    var_1 = task_0.get_include_params()
    int_0 = 1080
    var_2 = task_0.__repr__()
    var_3 = task_0.serialize()
    var_4 = task_0.set_loader(int_0)
    var_5 = task_0.all_parents_static()
    var_6 = task_0.get_first_parent_include()
    str_0 = 'args'
    bytes_0 = b'+\xdeP\xd8\xf0\x00\x0eq\x8awP\x90-2\x9c\xc8'
    str_1 = 'XNKRPSe\\@!'
    tuple_0 = (str_0, bytes_0, str_1, str_1)
    var_7 = task_0.copy(tuple_0)
    var_8 = task_0.all_parents_static()
    var_9 = task_0.get_first_parent_include()
    task_1 = module_0.Task(task_0)
    var_10 = task_1.get_include_params()
    var_11 = task_1.get_include_params()

def test_case_15():
    block_0 = module_1.Block()
    task_0 = module_0.Task(block_0)
    var_0 = repr(task_0)

def test_case_16():
    task_0 = module_0.Task()
    str_0 = 'action'
    str_1 = 'nUr'
    str_2 = {str_0: str_1}
    var_0 = task_0.preprocess_data(str_2)