# Automatically generated by Pynguin.
import ansible.playbook.task as module_0
import ansible.utils.display as module_1

def test_case_0():
    try:
        task_0 = module_0.Task()
        var_0 = task_0.get_vars()
        bool_0 = True
        task_1 = module_0.Task(bool_0)
        int_0 = 16
        task_2 = module_0.Task()
        var_1 = task_2.load(int_0, bool_0, task_1, int_0)
    except BaseException:
        pass

def test_case_1():
    try:
        var_0 = dict()
        task_0 = module_0.Task()
        var_1 = task_0.preprocess_data(var_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '.*Ethernet'
        task_0 = module_0.Task()
        var_0 = task_0.preprocess_data(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        task_0 = module_0.Task()
        bytes_0 = b'p=\xe8\x91\xa8\xdd?K<_\xbd\x8b\x14O\xcc\xd1v'
        var_0 = task_0.post_validate(bytes_0)
    except BaseException:
        pass

def test_case_4():
    try:
        bool_0 = None
        str_0 = 'YueH=Kre$gPDE5Y\\;'
        task_0 = module_0.Task(str_0)
        var_0 = task_0.post_validate(bool_0)
    except BaseException:
        pass

def test_case_5():
    try:
        float_0 = 396.572
        int_0 = -2024
        dict_0 = {float_0: int_0, float_0: int_0, int_0: int_0, int_0: int_0}
        list_0 = [dict_0, dict_0]
        tuple_0 = (list_0,)
        task_0 = module_0.Task(tuple_0)
        var_0 = task_0.get_vars()
    except BaseException:
        pass

def test_case_6():
    try:
        int_0 = 564
        bytes_0 = b'\xde\xb4\xb2\xde\xc4%OU\x8f\x11\xd7`>\xe2\xcfW\x03\x0c\xf3\x00'
        str_0 = ' (did you mean to run ansible-playbook?)'
        str_1 = 'oqn?%'
        task_0 = module_0.Task(str_0, str_1)
        var_0 = task_0.copy(bytes_0)
        dict_0 = {int_0: int_0}
        task_1 = module_0.Task(dict_0)
        var_1 = task_1.get_include_params()
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'vars'
        task_0 = module_0.Task(str_0)
        var_0 = task_0.serialize()
    except BaseException:
        pass

def test_case_8():
    try:
        list_0 = []
        int_0 = 2
        task_0 = module_0.Task(list_0, int_0)
        var_0 = task_0.serialize()
    except BaseException:
        pass

def test_case_9():
    try:
        complex_0 = None
        bytes_0 = b'\xed\x8d\xd7\x91\x93\x94\xc7\x0f\xb0\xe9%K\xf2\xc4\xa6\xd5"*\xff\xe6'
        dict_0 = {complex_0: bytes_0, bytes_0: complex_0, bytes_0: complex_0}
        task_0 = module_0.Task()
        var_0 = task_0.deserialize(dict_0)
        float_0 = 1437.9966
        task_1 = module_0.Task(float_0)
        var_1 = task_1.set_loader(complex_0)
    except BaseException:
        pass

def test_case_10():
    try:
        int_0 = 718
        float_0 = -163.73656
        set_0 = {int_0, int_0, float_0}
        task_0 = module_0.Task(set_0)
        var_0 = task_0.all_parents_static()
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = '\x0bV@\x0bAm/!#!"n(At]{5@'
        display_0 = module_1.Display()
        task_0 = module_0.Task(str_0, display_0)
        var_0 = task_0.get_first_parent_include()
    except BaseException:
        pass

def test_case_12():
    try:
        int_0 = -2212
        str_0 = 'U/fn8I~aT`I39'
        set_0 = {str_0, int_0, str_0, int_0}
        task_0 = module_0.Task(str_0)
        var_0 = task_0.copy(set_0)
        list_0 = []
        tuple_0 = (list_0, list_0)
        task_1 = module_0.Task(tuple_0)
        var_1 = task_1.get_first_parent_include()
    except BaseException:
        pass

def test_case_13():
    try:
        int_0 = -83
        str_0 = '/holders/'
        task_0 = module_0.Task(int_0, str_0)
        var_0 = task_0.copy()
    except BaseException:
        pass

def test_case_14():
    try:
        var_0 = {}
        task_0 = module_0.Task()
        str_0 = 'action'
        str_1 = 'action_1'
        str_2 = {task_0: var_0, task_0: str_1, str_0: str_1}
        var_1 = task_0.preprocess_data(str_2)
    except BaseException:
        pass

def test_case_15():
    try:
        str_0 = 'sL_dD9MSd'
        int_0 = 122
        task_0 = module_0.Task(int_0)
        dict_0 = {str_0: int_0, str_0: str_0, int_0: str_0, task_0: str_0}
        var_0 = task_0.deserialize(dict_0)
        var_1 = task_0.serialize()
    except BaseException:
        pass

def test_case_16():
    try:
        task_0 = module_0.Task()
        str_0 = 'a+ction'
        str_1 = 'action'
        str_2 = {str_0: str_1}
        var_0 = task_0.preprocess_data(str_2)
    except BaseException:
        pass

def test_case_17():
    try:
        task_0 = module_0.Task()
        set_0 = {task_0, task_0, task_0, task_0}
        var_0 = task_0.serialize()
        int_0 = 1079
        var_1 = task_0.serialize()
        var_2 = task_0.set_loader(int_0)
        var_3 = task_0.all_parents_static()
        str_0 = 'action'
        var_4 = task_0.get_include_params()
        var_5 = task_0.__repr__()
        dict_0 = {str_0: str_0}
        bool_0 = True
        var_6 = task_0.all_parents_static()
        tuple_0 = (bool_0, set_0)
        var_7 = task_0.get_include_params()
        var_8 = task_0.load(dict_0, tuple_0, str_0)
        var_9 = task_0.copy()
        var_10 = task_0.get_include_params()
        var_11 = task_0.post_validate(bool_0)
    except BaseException:
        pass

def test_case_18():
    try:
        task_0 = module_0.Task()
        var_0 = task_0.copy()
        var_1 = task_0.get_include_params()
        display_0 = module_1.Display()
        task_1 = module_0.Task(task_0, display_0)
        var_2 = task_1.get_first_parent_include()
        var_3 = task_0.serialize()
        var_4 = task_1.serialize()
    except BaseException:
        pass