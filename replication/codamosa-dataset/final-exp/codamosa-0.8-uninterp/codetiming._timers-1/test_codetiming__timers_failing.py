# Automatically generated by Pynguin.
import codetiming._timers as module_0

def test_case_0():
    try:
        str_0 = " does not support item assignment. Use '.add()' to update values."
        float_0 = -414.642535
        timers_0 = module_0.Timers()
        timers_0.__setitem__(str_0, float_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '\x0bDhvz'
        timers_0 = module_0.Timers()
        float_0 = timers_0.min(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'XP"<v\x0be\x0cq'
        list_0 = []
        timers_0 = module_0.Timers(*list_0)
        float_0 = timers_0.total(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '4]>X\x0cu'
        timers_0 = module_0.Timers()
        float_0 = timers_0.max(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        timers_0 = module_0.Timers()
        str_0 = 'seconds'
        float_0 = timers_0.stdev(str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'M((+\nL{LKYHZ&&|G9Z5'
        timers_0 = module_0.Timers()
        float_0 = 549.050699187019
        timers_0.add(str_0, float_0)
        float_1 = timers_0.min(str_0)
        float_2 = timers_0.max(str_0)
        float_3 = timers_0.stdev(str_0)
        float_4 = -1236.3
        timers_0.add(str_0, float_4)
        float_5 = timers_0.stdev(str_0)
        float_6 = timers_0.median(str_0)
        timers_0.clear()
        float_7 = timers_0.max(str_0)
    except BaseException:
        pass