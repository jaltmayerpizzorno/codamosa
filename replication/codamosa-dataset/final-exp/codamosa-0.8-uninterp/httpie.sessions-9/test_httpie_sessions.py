# Automatically generated by Pynguin.
import pathlib as module_0
import httpie.sessions as module_1
import httpie.cli.dicts as module_2
import requests.cookies as module_3

def test_case_0():
    pass

def test_case_1():
    list_0 = []
    path_0 = module_0.Path(*list_0)
    str_0 = "HR(n'\n+T"
    str_1 = 'm"y"FH\x0c4AIlN b\t.\r!'
    session_0 = module_1.get_httpie_session(path_0, str_0, str_0, str_1)

def test_case_2():
    str_0 = 'qd'
    session_0 = module_1.Session(str_0)

def test_case_3():
    request_headers_dict_0 = module_2.RequestHeadersDict()
    str_0 = 'UI'
    session_0 = module_1.Session(str_0)
    var_0 = session_0.update_headers(request_headers_dict_0)

def test_case_4():
    str_0 = 'st'
    session_0 = module_1.Session(str_0)
    str_1 = {str_0: str_0, str_0: str_0}
    var_0 = session_0.update_headers(str_1)

def test_case_5():
    bytes_0 = b'\xc5'
    str_0 = '[2d'
    session_0 = module_1.Session(str_0)
    var_0 = session_0.remove_cookies(bytes_0)

def test_case_6():
    str_0 = '/tmp/test_Session_update_headers.json'
    session_0 = module_1.Session(str_0)
    str_1 = 'Connection'
    str_2 = 'User-Agent'
    str_3 = 'close'
    str_4 = 'HTTPie/2.2.0'
    str_5 = {str_1: str_3, str_2: str_4}
    var_0 = session_0.update_headers(str_5)

def test_case_7():
    str_0 = 'user-agent'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    request_headers_dict_0 = module_2.RequestHeadersDict(**dict_0)
    str_1 = 'c]:T'
    dict_1 = {str_1: str_1}
    path_0 = module_0.Path(**dict_1)
    list_0 = []
    path_1 = module_0.Path(*list_0, **dict_0)
    str_2 = '\n    Save output to FILE instead of stdout. If --download is also set, then only\n    the response body is saved to FILE. Other parts of the HTTP exchange are\n    printed to stderr.\n\n    '
    str_3 = 'H1bsZv9p'
    session_0 = module_1.get_httpie_session(path_1, str_0, str_2, str_3)
    var_0 = session_0.update_headers(request_headers_dict_0)

def test_case_8():
    str_0 = ''
    session_0 = module_1.Session(str_0)
    str_1 = 'foo-bar'
    str_2 = 'Content-Length'
    str_3 = '42'
    str_4 = '134'
    str_5 = {str_1: str_3, str_2: str_4}
    var_0 = session_0.update_headers(str_5)

def test_case_9():
    str_0 = 'test_session.json'
    session_0 = module_1.Session(str_0)
    var_0 = session_0.load()
    var_1 = type(session_0)
    var_2 = session_0.cookies
    var_3 = type(var_2)
    requests_cookie_jar_0 = module_3.RequestsCookieJar()