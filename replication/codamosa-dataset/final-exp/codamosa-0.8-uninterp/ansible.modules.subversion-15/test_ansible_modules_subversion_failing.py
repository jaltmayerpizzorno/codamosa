# Automatically generated by Pynguin.
import ansible.modules.subversion as module_0

def test_case_0():
    try:
        str_0 = 'z!17,sO'
        float_0 = 0.2
        bytes_0 = b'\x06\xdb\xf1#g6\xcb\xe5\x9c\xa5WW\xce\xacU\xdc%\xb0v'
        list_0 = []
        subversion_0 = module_0.Subversion(str_0, float_0, bytes_0, float_0, list_0, float_0, bytes_0, list_0)
        var_0 = subversion_0.revert()
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'z!17,sO'
        float_0 = 0.0
        bytes_0 = b'\x06\xdb\xf1#g6\xcb\xe5\x9c\xa5WW\xce\xacU\xdc%\xb0v'
        list_0 = []
        subversion_0 = module_0.Subversion(str_0, float_0, bytes_0, float_0, list_0, float_0, bytes_0, list_0)
        var_0 = subversion_0.revert()
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'z8]sO.'
        float_0 = -3954.0
        bytes_0 = b'\x064\xf1#g6\xcb\xe5\x9c\xa5Wn\xce\xacU\xdc%\xb0v'
        list_0 = [bytes_0]
        subversion_0 = module_0.Subversion(str_0, float_0, bytes_0, float_0, list_0, float_0, bytes_0, list_0)
        var_0 = subversion_0.revert()
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '%8>JM1`K^m{kCOWZ'
        set_0 = {str_0, str_0, str_0}
        bytes_0 = b"{\xa6tq'\x0bY\xb8(Y\x8aw\xb6"
        bytes_1 = b'O\xb0\n\xb3\x18^;a2\xe2\xb4\xcf~\x8b \xf2,'
        bool_0 = False
        dict_0 = {bool_0: str_0, bytes_1: bytes_1}
        list_0 = [bytes_0, set_0, bool_0]
        float_0 = -594.238
        bytes_2 = b'\x82\x08\x00\xa7\x0e\xb1\xdeQ|\xf7M\xd8\xdb\xb6\xe5'
        bool_1 = True
        str_1 = None
        int_0 = 1768
        bytes_3 = b'\xbe\xc9\xc8|\x1f\x1d'
        tuple_0 = (int_0, bytes_3, bytes_0, list_0)
        tuple_1 = (str_1, tuple_0)
        complex_0 = None
        str_2 = '{i3_,I}qu%[qJ2$=8`'
        set_1 = set()
        bool_2 = True
        int_1 = None
        bool_3 = True
        subversion_0 = module_0.Subversion(set_1, str_2, bool_2, bool_1, int_1, bool_3, list_0, complex_0)
        bytes_4 = None
        subversion_1 = module_0.Subversion(str_0, tuple_1, complex_0, list_0, str_2, subversion_0, bool_3, bytes_4)
        str_3 = 'PSRP: EXEC (via pipeline wrapper)'
        tuple_2 = (subversion_1, subversion_0, str_3, bytes_4)
        subversion_2 = module_0.Subversion(dict_0, bool_0, list_0, float_0, bytes_2, set_0, bool_1, tuple_2)
        var_0 = subversion_2.is_svn_repo()
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = "/VM\tmb*yG@_-p8k'_"
        dict_0 = {}
        str_1 = 'pApGWLz\\36d+L'
        str_2 = "'1sCz\\at[5/"
        bytes_0 = b'v\xf9]\x1e\x15L\xa7'
        str_3 = '/u(Apy}POyP'
        list_0 = [str_3]
        complex_0 = None
        tuple_0 = ()
        bytes_1 = b'y\x15\x92\xf3\x99(\x15\x1f\xfb\x81\xef\xcb'
        tuple_1 = (complex_0, tuple_0, bytes_1, list_0)
        float_0 = 2216.0
        bytes_2 = None
        str_4 = '~'
        bool_0 = True
        subversion_0 = module_0.Subversion(list_0, tuple_1, float_0, bytes_2, bytes_1, str_4, dict_0, bool_0)
        list_1 = [subversion_0]
        dict_1 = None
        int_0 = 2327
        bool_1 = None
        subversion_1 = module_0.Subversion(str_1, str_2, bytes_0, str_3, list_1, dict_1, int_0, bool_1)
        float_1 = 610.56
        str_5 = '__main__'
        dict_2 = {subversion_1: float_1, str_5: str_1, str_1: list_1, bytes_0: int_0}
        list_2 = [dict_2]
        float_2 = -1980.809495
        subversion_2 = module_0.Subversion(str_0, dict_0, list_2, float_2, complex_0, complex_0, list_2, str_3)
        var_0 = subversion_0.checkout()
    except BaseException:
        pass

def test_case_5():
    try:
        bool_0 = True
        str_0 = 'jfT Z\x0c;Lp'
        set_0 = {str_0, str_0, str_0}
        bytes_0 = b'\xc7\xb1\xb5'
        int_0 = 126
        dict_0 = {}
        bytes_1 = b'\xae\x98%\xa6\x9e\xcf\xb9N\x83R'
        str_1 = 'q`H'
        int_1 = -2766
        dict_1 = {int_1: dict_0, str_1: str_1}
        tuple_0 = (str_1, int_1, dict_1, int_1)
        list_0 = []
        bool_1 = False
        subversion_0 = module_0.Subversion(int_0, str_0, dict_0, bytes_1, dict_0, tuple_0, list_0, bool_1)
        subversion_1 = module_0.Subversion(set_0, bytes_0, subversion_0, list_0, bool_1, dict_0, subversion_0, dict_0)
        var_0 = subversion_1.export(bool_0)
    except BaseException:
        pass

def test_case_6():
    try:
        int_0 = -323
        bool_0 = False
        int_1 = 1493
        list_0 = None
        str_0 = '%o\n$NjEw8'
        str_1 = ']1:?Abi6_*zM%sJ'
        bool_1 = False
        tuple_0 = None
        bool_2 = True
        tuple_1 = (tuple_0, bool_2, tuple_0)
        str_2 = 'jW\nNIc\n4'
        subversion_0 = module_0.Subversion(list_0, str_0, str_1, bool_1, bool_1, tuple_1, str_2, list_0)
        bytes_0 = b'q?\x9a'
        tuple_2 = (subversion_0, bytes_0, subversion_0)
        str_3 = 'P2'
        str_4 = '4Zea=_]/(391'
        subversion_1 = module_0.Subversion(int_0, bool_0, int_1, tuple_2, list_0, bool_2, str_3, str_4)
        var_0 = subversion_1.switch()
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'z!17,sO'
        float_0 = -2.0827823013766573
        bytes_0 = b'\x06\xdb\xf1#g6\xcb\xe5/-\x9c\xa5WW\xacU\xdc%\xb0v'
        list_0 = []
        subversion_0 = module_0.Subversion(str_0, float_0, bytes_0, float_0, list_0, float_0, bytes_0, list_0)
        var_0 = subversion_0.update()
    except BaseException:
        pass

def test_case_8():
    try:
        tuple_0 = ()
        float_0 = -2867.6774
        dict_0 = {float_0: tuple_0, float_0: tuple_0, float_0: tuple_0, float_0: float_0}
        int_0 = -134
        str_0 = 'E?& cQT+'
        str_1 = '5'
        float_1 = 0.1
        subversion_0 = module_0.Subversion(tuple_0, float_0, dict_0, int_0, str_0, str_1, float_1, int_0)
        var_0 = subversion_0.get_revision()
    except BaseException:
        pass

def test_case_9():
    try:
        int_0 = 2255
        dict_0 = {int_0: int_0, int_0: int_0}
        list_0 = [dict_0, int_0, int_0]
        bool_0 = False
        set_0 = set()
        tuple_0 = ()
        int_1 = 2479
        subversion_0 = module_0.Subversion(list_0, bool_0, set_0, tuple_0, set_0, int_0, int_1, bool_0)
        var_0 = subversion_0.needs_update()
    except BaseException:
        pass

def test_case_10():
    try:
        set_0 = set()
        dict_0 = {}
        list_0 = []
        bool_0 = False
        subversion_0 = module_0.Subversion(set_0, dict_0, list_0, set_0, bool_0, list_0, bool_0, bool_0)
        var_0 = subversion_0.has_local_mods()
    except BaseException:
        pass

def test_case_11():
    try:
        bytes_0 = b'KY|\x1e\xd6:\xdaO\xf1k'
        int_0 = 1323
        list_0 = [int_0, int_0]
        dict_0 = {}
        bytes_1 = b'\n\xf9\x10\r\xc3$\xf9:\xfa\x945\x1a\xb1\x96\xe8\xae\xe6\xe4\x1b/'
        str_0 = 'H{J\x0c4wiCq1m}q[)5'
        bool_0 = False
        subversion_0 = module_0.Subversion(dict_0, bytes_1, bytes_1, str_0, bool_0, bool_0, bytes_0, bool_0)
        set_0 = {subversion_0}
        tuple_0 = (subversion_0, set_0)
        subversion_1 = module_0.Subversion(list_0, tuple_0, bool_0, dict_0, list_0, subversion_0, str_0, tuple_0)
        var_0 = subversion_1.export()
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = 'ansible.modules.subversion'
        float_0 = -18.916461791445673
        bytes_0 = b'\x06\xdb\xf1#g6\x1f\xe5/C\x9c\xa5WW\xacU\xdc%\xb0v'
        list_0 = []
        subversion_0 = module_0.Subversion(str_0, float_0, bytes_0, float_0, list_0, float_0, bytes_0, list_0)
        var_0 = subversion_0.get_remote_revision()
    except BaseException:
        pass

def test_case_13():
    try:
        dict_0 = {}
        str_0 = 'pApGWLz\\36d+L'
        str_1 = "'1sCz\\at[5/"
        bytes_0 = b'v\xf9]\x1e\x15L\xa7'
        str_2 = '/u(Apy}POyP'
        list_0 = [str_2]
        complex_0 = None
        tuple_0 = ()
        bytes_1 = b'y\x15\x92\xf3\x99(\x15\x1f\xfb\x81\xef\xcb'
        tuple_1 = (complex_0, tuple_0, bytes_1, list_0)
        float_0 = 2216.0
        bytes_2 = None
        str_3 = '~'
        bool_0 = True
        subversion_0 = module_0.Subversion(list_0, tuple_1, float_0, bytes_2, bytes_1, str_3, dict_0, bool_0)
        list_1 = [subversion_0]
        dict_1 = None
        int_0 = 2327
        bool_1 = None
        subversion_1 = module_0.Subversion(str_0, str_1, bytes_0, str_2, list_1, dict_1, int_0, bool_1)
        subversion_2 = module_0.Subversion(subversion_0, subversion_1, list_0, int_0, bytes_2, list_1, subversion_1, list_0)
        bytes_3 = b'\xafk'
        var_0 = subversion_2.checkout(bytes_3)
    except BaseException:
        pass