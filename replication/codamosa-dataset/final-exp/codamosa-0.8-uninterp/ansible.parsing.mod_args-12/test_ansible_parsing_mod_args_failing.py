# Automatically generated by Pynguin.
import ansible.parsing.mod_args as module_0

def test_case_0():
    try:
        bool_0 = False
        module_args_parser_0 = module_0.ModuleArgsParser(bool_0)
    except BaseException:
        pass

def test_case_1():
    try:
        module_args_parser_0 = module_0.ModuleArgsParser()
        var_0 = module_args_parser_0.parse()
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'sk,%: r'
        var_0 = dict(action=str_0, name=str_0, state=str_0, enabled=str_0, reusable=str_0, with_items=str_0)
        module_args_parser_0 = module_0.ModuleArgsParser(var_0)
        var_1 = module_args_parser_0.parse()
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'started'
        module_args_parser_0 = module_0.ModuleArgsParser()
        bool_0 = False
        var_0 = dict(action=bool_0, name=str_0, state=str_0, enabled=str_0, reusable=bool_0, with_items=str_0)
        module_args_parser_1 = module_0.ModuleArgsParser(var_0)
        var_1 = module_args_parser_1.parse()
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'm F'
        var_0 = dict(action=str_0, name=str_0, state=str_0, enabled=str_0, reusable=str_0, with_items=str_0)
        dict_0 = {str_0: str_0}
        int_0 = None
        module_args_parser_0 = module_0.ModuleArgsParser(dict_0, int_0)
        var_1 = module_args_parser_0.parse()
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = '^,[F'
        var_0 = dict(action=str_0, name=str_0, state=str_0, enabled=str_0, reusable=str_0, with_items=str_0)
        module_args_parser_0 = module_0.ModuleArgsParser(var_0)
        var_1 = module_args_parser_0.parse(str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'foo'
        str_1 = 'module'
        str_2 = 'action'
        str_3 = 'local_action'
        str_4 = 'bar'
        str_5 = 'echo hello'
        str_6 = 'copy foo=bar'
        str_7 = 'shell echo localhost'
        str_8 = {str_0: str_4, str_1: str_5, str_2: str_6, str_3: str_7}
        module_args_parser_0 = module_0.ModuleArgsParser(str_8)
        var_0 = module_args_parser_0.parse()
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'action'
        str_1 = ' CLRo'
        str_2 = 'module'
        str_3 = 'args'
        str_4 = {str_2: str_1, str_3: str_1}
        str_5 = {str_3: str_4, str_0: str_4, str_1: str_4}
        module_args_parser_0 = module_0.ModuleArgsParser(str_5)
        var_0 = module_args_parser_0.parse()
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = 'action'
        str_1 = '127.0.0.1'
        str_2 = {str_0: str_0, str_0: str_1}
        str_3 = 'module'
        str_4 = 'args'
        str_5 = {str_3: str_2, str_4: str_2}
        str_6 = {str_4: str_5, str_0: str_5, str_1: str_1}
        module_args_parser_0 = module_0.ModuleArgsParser(str_6)
        var_0 = module_args_parser_0.parse()
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'action'
        str_1 = 'delegate_to'
        str_2 = 'shell echo hi'
        str_3 = '127.0.0.1'
        str_4 = {str_0: str_2, str_1: str_3}
        module_args_parser_0 = module_0.ModuleArgsParser(str_4)
        var_0 = module_args_parser_0.parse()
        str_5 = 'mdu^l&'
        str_6 = 'args'
        str_7 = 'm'
        str_8 = 'echo hi'
        str_9 = {str_5: str_7, str_6: str_8}
        str_10 = {str_0: str_9, str_1: str_3}
        module_args_parser_1 = module_0.ModuleArgsParser(str_10)
        var_1 = module_args_parser_1.parse()
    except BaseException:
        pass

def test_case_10():
    try:
        float_0 = 1.5
        str_0 = '5p'
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
        module_args_parser_0 = module_0.ModuleArgsParser(dict_0)
        var_0 = module_args_parser_0.parse(float_0)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = 'action'
        str_1 = '127.0.0.1'
        str_2 = 'args'
        str_3 = {str_2: str_2, str_0: str_2, str_1: str_1}
        module_args_parser_0 = module_0.ModuleArgsParser(str_3)
        var_0 = module_args_parser_0.parse()
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = 'dst'
        module_args_parser_0 = module_0.ModuleArgsParser()
        str_1 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0, str_0: module_args_parser_0}
        module_args_parser_1 = module_0.ModuleArgsParser()
        module_args_parser_2 = module_0.ModuleArgsParser(str_1, str_1)
        int_0 = -2511
        var_0 = module_args_parser_2.parse(int_0)
    except BaseException:
        pass