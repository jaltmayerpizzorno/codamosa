# Automatically generated by Pynguin.
import flutes.iterator as module_0

def test_case_0():
    pass

def test_case_1():
    str_0 = 'D<'
    list_0 = [str_0]
    lazy_list_0 = module_0.LazyList(list_0)
    var_0 = lazy_list_0.__iter__()

def test_case_2():
    dict_0 = {}
    lazy_list_0 = module_0.LazyList(dict_0)

def test_case_3():
    int_0 = 22
    list_0 = [int_0, int_0]
    range_0 = module_0.Range(*list_0)
    var_0 = range_0.__getitem__(int_0)

def test_case_4():
    float_0 = 690.95
    sequence_0 = None
    map_list_0 = module_0.MapList(float_0, sequence_0)

def test_case_5():
    int_0 = 1445
    str_0 = "p0I[Q9]eA5CuR5'\r\nV"
    map_list_0 = module_0.MapList(int_0, str_0)
    iterator_0 = map_list_0.__iter__()
    int_1 = -138
    var_0 = range(int_1)
    iterator_1 = module_0.drop_until(int_1, var_0)
    var_1 = list(iterator_1)

def test_case_6():
    int_0 = 13
    list_0 = [int_0, int_0]
    range_0 = module_0.Range(*list_0)
    var_0 = range_0.__getitem__(int_0)
    iterator_0 = module_0.drop_until(int_0, range_0)
    var_1 = list(iterator_0)
    int_1 = range_0.__len__()

def test_case_7():
    int_0 = 1145
    var_0 = range(int_0, int_0, int_0)
    lazy_list_0 = module_0.LazyList(var_0)
    var_1 = list(lazy_list_0)

def test_case_8():
    float_0 = -1547.255
    int_0 = 319
    list_0 = [int_0]
    range_0 = module_0.Range(*list_0)
    int_1 = range_0.__next__()
    bool_0 = None
    var_0 = range_0.__getitem__(float_0)
    iterator_0 = module_0.split_by(bool_0)

def test_case_9():
    str_0 = ' Split by: '
    bool_0 = True
    iterator_0 = module_0.split_by(str_0, bool_0, separator=str_0)
    var_0 = list(iterator_0)

def test_case_10():
    int_0 = 18
    int_1 = 95
    var_0 = range(int_0, int_1, int_1)
    lazy_list_0 = module_0.LazyList(var_0)
    var_1 = lazy_list_0.__iter__()
    var_2 = list(lazy_list_0)

def test_case_11():
    int_0 = 183
    int_1 = 567
    set_0 = {int_0, int_1}
    iterator_0 = module_0.chunk(int_1, set_0)
    bool_0 = True
    str_0 = ''
    tuple_0 = (str_0, iterator_0)
    lazy_list_0 = module_0.LazyList(tuple_0)
    var_0 = lazy_list_0.__getitem__(bool_0)
    int_2 = 342
    bytes_0 = b'\x9a\xcd\xe0<\x035\x01\xca\xb4\x00J'
    iterator_1 = module_0.chunk(int_2, bytes_0)
    set_1 = {int_2, int_0, int_0}
    str_1 = 'JpB+(x%?|WbXT@$'
    list_0 = [int_2]
    range_0 = module_0.Range(*list_0)
    str_2 = None
    dict_0 = {str_1: str_1, str_1: set_1, str_1: list_0, str_2: str_2}
    complex_0 = None
    iterator_2 = module_0.split_by(complex_0)
    var_1 = module_0.scanl(dict_0, iterator_2, *list_0)
    int_3 = range_0.__next__()
    str_3 = '\t<.7qdqdu@c|8L:bV\\bf'
    iterator_3 = module_0.take(int_0, str_3)
    bool_1 = False
    var_2 = range_0.__getitem__(bool_1)
    bool_2 = False
    iterator_4 = module_0.split_by(bool_2)
    sequence_0 = None
    map_list_0 = module_0.MapList(bytes_0, sequence_0)
    map_list_1 = module_0.MapList(str_1, lazy_list_0)
    var_3 = lazy_list_0.__iter__()
    int_4 = 0
    var_4 = lazy_list_0.__getitem__(int_4)

def test_case_12():
    int_0 = 1000000
    var_0 = range(int_0)
    iterator_0 = module_0.take(int_0, var_0)
    var_1 = list(iterator_0)

def test_case_13():
    int_0 = 2
    int_1 = 5
    var_0 = range(int_1)
    iterator_0 = module_0.drop(int_0, var_0)
    var_1 = list(iterator_0)

def test_case_14():
    int_0 = 1222
    var_0 = range(int_0, int_0, int_0)
    lazy_list_0 = module_0.LazyList(var_0)
    var_1 = lazy_list_0.__iter__()
    var_2 = list(var_1)
    var_3 = list(lazy_list_0)

def test_case_15():
    bool_0 = True
    str_0 = '.'
    iterator_0 = module_0.split_by(str_0, bool_0, separator=str_0)
    int_0 = 294
    iterator_1 = module_0.drop(int_0, iterator_0)
    var_0 = list(iterator_1)

def test_case_16():
    int_0 = 18
    int_1 = 100
    int_2 = 27
    var_0 = range(int_0, int_1, int_2)
    lazy_list_0 = module_0.LazyList(var_0)
    var_1 = range(int_0, int_1, int_2)
    var_2 = lazy_list_0.__iter__()
    var_3 = lazy_list_0.__iter__()
    var_4 = list(lazy_list_0)
    var_5 = list(var_2)

def test_case_17():
    int_0 = 1222
    var_0 = range(int_0, int_0, int_0)
    lazy_list_0 = module_0.LazyList(var_0)
    var_1 = lazy_list_0.__iter__()
    var_2 = list(lazy_list_0)
    var_3 = list(lazy_list_0)

def test_case_18():
    int_0 = 1
    int_1 = 10
    var_0 = range(int_1)
    iterator_0 = module_0.chunk(int_0, var_0)
    var_1 = list(iterator_0)
    var_2 = range(int_1)
    var_3 = list(iterator_0)
    int_2 = 3
    var_4 = range(int_1)
    iterator_1 = module_0.chunk(int_2, var_4)
    var_5 = list(iterator_1)
    int_3 = 4
    iterator_2 = module_0.chunk(int_3, iterator_0)
    var_6 = list(iterator_2)
    var_7 = list(iterator_1)

def test_case_19():
    int_0 = -138
    var_0 = range(int_0)
    iterator_0 = module_0.drop_until(int_0, var_0)
    var_1 = list(iterator_0)

def test_case_20():
    bool_0 = True
    str_0 = '.'
    iterator_0 = module_0.split_by(str_0, bool_0, separator=str_0)
    var_0 = list(iterator_0)

def test_case_21():
    bool_0 = False
    str_0 = '.'
    iterator_0 = module_0.split_by(str_0, bool_0, separator=str_0)
    var_0 = list(iterator_0)

def test_case_22():
    bool_0 = True
    str_0 = 'h'
    bytes_0 = b'~\x04-\\y\xff\x91\x8d\n\xb7C\x8fg\x80\xd5\xe6m'
    list_0 = [bool_0]
    var_0 = module_0.scanr(bytes_0, list_0)
    iterator_0 = module_0.split_by(str_0, bool_0, separator=str_0)
    var_1 = list(iterator_0)

def test_case_23():
    var_0 = lambda s, x: x + s
    str_0 = 'a'
    str_1 = 'b'
    str_2 = 'c'
    str_3 = 'd'
    str_4 = [str_0, str_1, str_2, str_3]
    var_1 = module_0.scanl(var_0, str_4)
    var_2 = list(var_1)

def test_case_24():
    var_0 = lambda x: x * x
    int_0 = 8
    int_1 = 2
    int_2 = 3
    int_3 = -16
    int_4 = [int_0, int_1, int_2, int_0, int_3]
    map_list_0 = module_0.MapList(var_0, int_4)
    var_1 = map_list_0[int_0:int_2]
    var_2 = tuple(var_1)