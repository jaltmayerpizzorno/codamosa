# Automatically generated by Pynguin.
import ansible.plugins.lookup.sequence as module_0

def test_case_0():
    try:
        lookup_module_0 = module_0.LookupModule()
        str_0 = '%G'
        var_0 = lookup_module_0.run(str_0, str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '2+<'
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
        lookup_module_0 = module_0.LookupModule(**dict_0)
        var_0 = lookup_module_0.parse_kv_args(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        lookup_module_0 = module_0.LookupModule()
        var_0 = lookup_module_0.sanity_check()
    except BaseException:
        pass

def test_case_3():
    try:
        tuple_0 = ()
        lookup_module_0 = module_0.LookupModule(tuple_0)
        var_0 = lookup_module_0.reset()
        var_1 = lookup_module_0.sanity_check()
    except BaseException:
        pass

def test_case_4():
    try:
        lookup_module_0 = module_0.LookupModule()
        str_0 = '10-20/2'
        str_1 = [str_0]
        var_0 = lookup_module_0.run(str_1, str_1)
        var_1 = lookup_module_0.run(str_0, str_1)
    except BaseException:
        pass

def test_case_5():
    try:
        lookup_module_0 = module_0.LookupModule()
        str_0 = []
        str_1 = [str_0]
        var_0 = lookup_module_0.run(str_1, str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        lookup_module_0 = module_0.LookupModule()
        str_0 = '2(}uWku`km6&cK'
        var_0 = lookup_module_0.run(str_0, str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        lookup_module_0 = module_0.LookupModule()
        str_0 = '1'
        str_1 = '2'
        str_2 = '%d'
        var_0 = dict(start=str_0, end=str_1, format=str_2)
        var_1 = lookup_module_0.parse_kv_args(var_0)
        str_3 = 'x!1'
        str_4 = 'Hk2'
        var_2 = dict(start=str_3, end=str_4, format=str_2)
        var_3 = lookup_module_0.parse_kv_args(var_2)
    except BaseException:
        pass

def test_case_8():
    try:
        lookup_module_0 = module_0.LookupModule()
        str_0 = 'C\\xcYAXG'
        dict_0 = {str_0: str_0}
        var_0 = lookup_module_0.run(str_0, str_0, **dict_0)
    except BaseException:
        pass

def test_case_9():
    try:
        lookup_module_0 = module_0.LookupModule()
        str_0 = '10-20/2'
        var_0 = lookup_module_0.run(str_0, str_0)
    except BaseException:
        pass

def test_case_10():
    try:
        lookup_module_0 = module_0.LookupModule()
        str_0 = '1'
        str_1 = '1E-20'
        str_2 = '10-20/2'
        str_3 = '0x10-0x20/2'
        str_4 = [str_1, str_0, str_3, str_2, str_1]
        var_0 = lookup_module_0.run(str_4, lookup_module_0)
    except BaseException:
        pass

def test_case_11():
    try:
        lookup_module_0 = module_0.LookupModule()
        str_0 = '1'
        var_0 = {}
        var_1 = lookup_module_0.run(str_0, var_0)
        var_2 = {}
        str_1 = '1E-20'
        str_2 = '10:-20/2'
        str_3 = [str_2, str_1, var_2, var_0]
        var_3 = lookup_module_0.run(str_3, str_2)
    except BaseException:
        pass