# Automatically generated by Pynguin.
import pytutils.env as module_0

def test_case_0():
    generator_0 = module_0.parse_env_file_contents()

def test_case_1():
    str_0 = 'Take a list of imports, and split it into regularized form.\n\n        This is meant to take regular import text, and convert it to\n        the forms that the rest of the converters prefer.\n        '
    str_1 = module_0.expand(str_0)

def test_case_2():
    str_0 = 'THISIS=~/a/test'
    str_1 = [str_0, str_0, str_0]
    ordered_dict_0 = module_0.load_env_file(str_1)

def test_case_3():
    str_0 = 'Ep\rbbTk0GT]b=\\5;G'
    generator_0 = module_0.parse_env_file_contents()
    tuple_0 = (str_0,)
    ordered_dict_0 = module_0.load_env_file(tuple_0)

def test_case_4():
    str_0 = 'TEST=${HOME}/yeee-$PATH'
    str_1 = 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST'
    str_2 = '4'
    dict_0 = {str_0: str_1, str_2: str_1}
    mutable_mapping_0 = None
    ordered_dict_0 = module_0.load_env_file(dict_0, mutable_mapping_0)

def test_case_5():
    var_0 = []
    generator_0 = module_0.parse_env_file_contents(var_0)
    var_1 = list(generator_0)
    str_0 = 'nothing to see here'
    str_1 = [str_0]
    generator_1 = module_0.parse_env_file_contents(str_1)
    var_2 = list(generator_1)
    str_2 = 'TEST="HELLO THERE"'
    str_3 = [str_2]
    generator_2 = module_0.parse_env_file_contents(str_3)
    var_3 = list(generator_2)
    str_4 = 'YOLO="YO"'
    str_5 = 'WHAT="WHAT"'
    str_6 = [str_2, str_4, str_5]
    generator_3 = module_0.parse_env_file_contents(str_6)
    var_4 = list(generator_3)