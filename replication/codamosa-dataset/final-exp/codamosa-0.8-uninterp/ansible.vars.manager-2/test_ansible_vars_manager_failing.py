# Automatically generated by Pynguin.
import ansible.vars.manager as module_0

def test_case_0():
    try:
        variable_manager_0 = module_0.VariableManager()
        str_0 = 'iL4'
        var_0 = variable_manager_0.set_host_variable(str_0, str_0, str_0)
        var_1 = variable_manager_0.set_host_variable(str_0, str_0, str_0)
        int_0 = -2111
        bytes_0 = None
        float_0 = -1655.666
        var_2 = variable_manager_0.set_host_variable(int_0, bytes_0, float_0)
        vars_with_sources_0 = module_0.VarsWithSources()
        var_3 = module_0.preprocess_vars(vars_with_sources_0)
        dict_0 = {}
        variable_manager_1 = module_0.VariableManager()
        var_4 = variable_manager_1.set_host_facts(variable_manager_0, dict_0)
        list_0 = [float_0]
        var_5 = variable_manager_0.set_host_facts(int_0, list_0)
    except BaseException:
        pass

def test_case_1():
    try:
        variable_manager_0 = module_0.VariableManager()
        var_0 = module_0.preprocess_vars(variable_manager_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '-R@`WZT$k$~a'
        variable_manager_0 = module_0.VariableManager()
        var_0 = variable_manager_0.__setstate__(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        variable_manager_0 = module_0.VariableManager()
        str_0 = 'iL4'
        str_1 = 'value'
        var_0 = variable_manager_0.set_host_variable(str_0, str_0, str_1)
        var_1 = variable_manager_0.set_host_variable(str_0, str_0, str_1)
        float_0 = 1.0
        vars_with_sources_0 = module_0.VarsWithSources()
        var_2 = variable_manager_0.get_vars(float_0, vars_with_sources_0)
    except BaseException:
        pass

def test_case_4():
    try:
        dict_0 = None
        set_0 = {dict_0}
        variable_manager_0 = module_0.VariableManager()
        variable_manager_1 = module_0.VariableManager(dict_0)
        var_0 = variable_manager_1.clear_facts(variable_manager_0)
        bool_0 = True
        vars_with_sources_0 = module_0.VarsWithSources()
        var_1 = vars_with_sources_0.__setitem__(set_0, bool_0)
    except BaseException:
        pass

def test_case_5():
    try:
        variable_manager_0 = module_0.VariableManager()
        str_0 = 'hort_1'
        str_1 = 'varname'
        str_2 = 'vaue'
        var_0 = variable_manager_0.set_host_variable(str_0, str_1, str_2)
        int_0 = -1636
        set_0 = {int_0, variable_manager_0}
        var_1 = variable_manager_0.set_host_facts(set_0, set_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = '"/\x0cgT'
        list_0 = [str_0, str_0, str_0]
        vars_with_sources_0 = module_0.VarsWithSources()
        var_0 = vars_with_sources_0.get_source(list_0)
    except BaseException:
        pass

def test_case_7():
    try:
        vars_with_sources_0 = module_0.VarsWithSources()
        var_0 = vars_with_sources_0.__iter__()
        int_0 = -569
        var_1 = vars_with_sources_0.__getitem__(int_0)
    except BaseException:
        pass

def test_case_8():
    try:
        vars_with_sources_0 = module_0.VarsWithSources()
        str_0 = 'y`_P0di,'
        var_0 = vars_with_sources_0.__delitem__(str_0)
    except BaseException:
        pass

def test_case_9():
    try:
        int_0 = -4268
        str_0 = 'XlpFC`eW+YpOUh#'
        tuple_0 = (int_0, str_0, int_0)
        variable_manager_0 = module_0.VariableManager(tuple_0)
        var_0 = variable_manager_0.set_nonpersistent_facts(int_0, str_0)
    except BaseException:
        pass

def test_case_10():
    try:
        variable_manager_0 = module_0.VariableManager()
        variable_manager_1 = module_0.VariableManager()
        str_0 = 'u~t9d{s>'
        str_1 = 'suw%qPI'
        int_0 = -472
        set_0 = None
        var_0 = variable_manager_1.set_host_variable(int_0, set_0, variable_manager_1)
        str_2 = 'xRsgn7y.dnL2j#'
        dict_0 = {str_1: str_0, str_2: str_2}
        vars_with_sources_0 = module_0.VarsWithSources()
        dict_1 = {str_2: var_0}
        var_1 = variable_manager_0.set_inventory(variable_manager_1)
        vars_with_sources_1 = module_0.VarsWithSources(**dict_0)
        var_2 = module_0.preprocess_vars(set_0)
        var_3 = module_0.preprocess_vars(dict_1)
        var_4 = variable_manager_0.set_host_facts(str_0, dict_0)
        tuple_0 = ()
        tuple_1 = (tuple_0,)
        var_5 = variable_manager_0.set_nonpersistent_facts(tuple_1, dict_1)
        list_0 = [variable_manager_1]
        var_6 = variable_manager_0.set_host_facts(str_2, list_0)
    except BaseException:
        pass

def test_case_11():
    try:
        bool_0 = True
        dict_0 = {}
        str_0 = "ccWTrR'L5z+W<z\rVf`"
        vars_with_sources_0 = module_0.VarsWithSources()
        var_0 = vars_with_sources_0.get_source(str_0)
        dict_1 = {var_0: str_0}
        var_1 = module_0.preprocess_vars(dict_1)
        dict_2 = {}
        vars_with_sources_1 = module_0.VarsWithSources(**dict_2)
        var_2 = vars_with_sources_1.get_source(bool_0)
        var_3 = vars_with_sources_1.__iter__()
        bytes_0 = None
        list_0 = [bytes_0, dict_0, vars_with_sources_1]
        var_4 = module_0.preprocess_vars(list_0)
    except BaseException:
        pass

def test_case_12():
    try:
        variable_manager_0 = module_0.VariableManager()
        str_0 = 'hort_1'
        str_1 = 'varname'
        str_2 = 'vaue'
        var_0 = variable_manager_0.set_host_variable(str_0, str_1, str_2)
        list_0 = []
        dict_0 = {str_2: var_0}
        var_1 = variable_manager_0.set_host_facts(list_0, dict_0)
    except BaseException:
        pass

def test_case_13():
    try:
        variable_manager_0 = module_0.VariableManager()
        str_0 = 'host_1'
        var_0 = variable_manager_0.set_inventory(str_0)
        str_1 = 'varname'
        str_2 = 'value'
        var_1 = variable_manager_0.set_host_variable(str_0, str_1, str_2)
        list_0 = [str_0, variable_manager_0, var_0, str_1]
        str_3 = '`eta6'
        dict_0 = {str_0: var_0, str_1: str_3, str_0: var_1}
        vars_with_sources_0 = module_0.VarsWithSources(**dict_0)
        var_2 = variable_manager_0.set_nonpersistent_facts(list_0, vars_with_sources_0)
    except BaseException:
        pass