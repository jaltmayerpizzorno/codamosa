# Automatically generated by Pynguin.
import ansible.plugins.inventory.advanced_host_list as module_0

def test_case_0():
    try:
        bytes_0 = b'Kz\xdc\xd5\x11\xc6\xfd{\x1aE\xc0\xcd\xf8\t\xdbCi\x10\xc2'
        inventory_module_0 = module_0.InventoryModule()
        var_0 = inventory_module_0.verify_file(bytes_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = b'\x91J\xf2\xff\xf6oI\xeb\x14\xe6X\x7f\x9b\xccu'
        inventory_module_0 = module_0.InventoryModule()
        dict_0 = {}
        var_0 = inventory_module_0.parse(bytes_0, dict_0, dict_0)
    except BaseException:
        pass

def test_case_2():
    try:
        inventory_module_0 = module_0.InventoryModule()
        var_0 = None
        str_0 = '127.0.0.1'
        var_1 = inventory_module_0.parse(str_0, var_0, str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        inventory_module_0 = module_0.InventoryModule()
        var_0 = None
        str_0 = ',I%A'
        var_1 = inventory_module_0.parse(str_0, var_0, str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        bool_0 = True
        bool_1 = False
        str_0 = '\t\n'
        inventory_module_0 = module_0.InventoryModule()
        inventory_module_1 = module_0.InventoryModule()
        var_0 = inventory_module_1.verify_file(str_0)
        var_1 = inventory_module_0.parse(bool_0, bool_1, str_0)
        str_1 = 'KV//M+b7Y@{L}C'
        int_0 = 4294967295
        var_2 = inventory_module_1.parse(str_1, int_0, bool_0)
    except BaseException:
        pass

def test_case_5():
    try:
        inventory_module_0 = module_0.InventoryModule()
        var_0 = None
        str_0 = '$YeWo[oQa9'
        var_1 = inventory_module_0.parse(str_0, var_0, str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        inventory_module_0 = module_0.InventoryModule()
        inventory_module_1 = module_0.InventoryModule()
        tuple_0 = ()
        str_0 = 'iU3yj[\r]E%\rj}:Kq+\t'
        var_0 = inventory_module_1.parse(inventory_module_0, tuple_0, str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        inventory_module_0 = module_0.InventoryModule()
        str_0 = './'
        var_0 = inventory_module_0.verify_file(str_0)
        float_0 = -4797.52
        var_1 = inventory_module_0.verify_file(float_0)
    except BaseException:
        pass