# Automatically generated by Pynguin.
import semantic_release.helpers as module_0
import urllib3.util.retry as module_1

def test_case_0():
    pass

def test_case_1():
    retry_0 = None
    logged_function_0 = None
    dict_0 = {retry_0: retry_0, retry_0: retry_0, logged_function_0: retry_0}
    list_0 = [dict_0, retry_0, logged_function_0]
    var_0 = module_0.format_arg(list_0)

def test_case_2():
    bool_0 = False
    session_0 = module_0.build_requests_session(bool_0)
    str_0 = "'YD+.G/"
    var_0 = module_0.format_arg(str_0)
    session_1 = module_0.build_requests_session()
    var_1 = module_0.format_arg(str_0)

def test_case_3():
    int_0 = -1231
    session_0 = module_0.build_requests_session(int_0)

def test_case_4():
    session_0 = module_0.build_requests_session()
    session_1 = module_0.build_requests_session()
    session_2 = module_0.build_requests_session()
    bytes_0 = b'\xa8\x04\xccj\x8b\xba\xc0\x89'
    str_0 = '=[e.B'
    int_0 = 137
    session_3 = module_0.build_requests_session(str_0, int_0)
    var_0 = module_0.format_arg(bytes_0)

def test_case_5():
    retry_0 = module_1.Retry()
    session_0 = module_0.build_requests_session(retry_0, retry_0)

def test_case_6():
    str_0 = 'dQ'
    logged_function_0 = module_0.LoggedFunction(str_0)

def test_case_7():
    str_0 = '+T:>sn}Y'
    str_1 = 'Sk'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_1: str_0}
    bytes_0 = b'A\xde\xa5\x87\x08\xd6v\xce\xc53\xed'
    logged_function_0 = module_0.LoggedFunction(bytes_0)
    var_0 = logged_function_0.__call__(dict_0)

def test_case_8():
    list_0 = []
    bytes_0 = b'fk\xd7\x81\x85\xc7H\x8f\x0c\xc3~\xf0'
    bool_0 = False
    session_0 = module_0.build_requests_session(bool_0, bool_0)
    session_1 = module_0.build_requests_session()
    logged_function_0 = module_0.LoggedFunction(bool_0)
    var_0 = logged_function_0.__call__(bytes_0)
    bytes_1 = b'=\xbf\xa9\xc1\x19\xcd\xd7>\x82\x8cs\xf7'
    dict_0 = {session_1: logged_function_0, session_1: bytes_1, var_0: session_0, logged_function_0: var_0}
    logged_function_1 = module_0.LoggedFunction(dict_0)
    logged_function_2 = module_0.LoggedFunction(list_0)
    logged_function_3 = module_0.LoggedFunction(session_1)
    var_1 = logged_function_3.__call__(list_0)
    str_0 = 'rXolmG"}4P/{]A'
    str_1 = '2i.!f-~H6'
    str_2 = 'A>1'
    session_2 = module_0.build_requests_session()
    var_2 = logged_function_0.__call__(str_2)
    bool_1 = False
    str_3 = 'TRAVIS_PULL_REQUEST'
    session_3 = module_0.build_requests_session(str_3, bool_1)
    dict_1 = {logged_function_0: bool_0, bool_1: bool_1, logged_function_2: bytes_0}
    var_3 = module_0.format_arg(dict_1)
    str_4 = '\t;G'
    retry_0 = module_1.Retry(str_0, str_0, str_1, str_4)
    var_4 = logged_function_0.__call__(retry_0)
    bytes_2 = b'\xfc\xd6\xc9\xa1\xc6G\xdd:!\x15\xf6c\xfas\xa6\xd8'
    logged_function_4 = module_0.LoggedFunction(bytes_2)

def test_case_9():
    bool_0 = False
    retry_0 = module_1.Retry()
    session_0 = module_0.build_requests_session(bool_0, retry_0)

def test_case_10():
    session_0 = module_0.build_requests_session()
    str_0 = 'http://example.com'
    var_0 = session_0.get(str_0)