# Automatically generated by Pynguin.
import typesystem.fields as module_0
import decimal as module_1

def test_case_0():
    try:
        field_0 = module_0.Field()
        object_0 = module_0.Object(additional_properties=field_0)
        any_0 = field_0.validate(field_0)
    except BaseException:
        pass

def test_case_1():
    try:
        field_0 = module_0.Field()
        union_0 = field_0.__or__(field_0)
        any_0 = union_0.validate(union_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = ''
        bool_0 = True
        field_0 = module_0.Field(description=str_0, allow_null=bool_0)
        any_0 = field_0.serialize(str_0)
        string_0 = module_0.String(pattern=str_0)
        any_1 = string_0.validate(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        integer_0 = module_0.Integer()
        any_0 = integer_0.validate(integer_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = ''
        string_0 = module_0.String(pattern=str_0)
        any_0 = string_0.validate(str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        bool_0 = True
        int_0 = -2517
        string_0 = module_0.String(allow_blank=bool_0, max_length=int_0)
        any_0 = string_0.validate(string_0)
    except BaseException:
        pass

def test_case_6():
    try:
        number_0 = module_0.Number()
        any_0 = number_0.validate(number_0)
    except BaseException:
        pass

def test_case_7():
    try:
        choice_0 = module_0.Choice()
        any_0 = choice_0.validate(choice_0)
    except BaseException:
        pass

def test_case_8():
    try:
        int_0 = -4147
        array_0 = module_0.Array(int_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = '|Uj'
        decimal_0 = None
        bool_0 = True
        const_0 = module_0.Const(decimal_0)
        any_0 = const_0.validate(str_0, bool_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = None
        field_0 = module_0.Field(description=str_0, default=str_0)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = 'string'
        int_0 = 2086
        string_0 = module_0.String(max_length=str_0, min_length=int_0)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = '+W|S8/xDf[]iq'
        bool_0 = True
        field_0 = module_0.Field(title=str_0, allow_null=bool_0)
        float_0 = 1882.06701
        number_0 = module_0.Number(maximum=float_0)
        date_0 = module_0.Date()
        object_0 = module_0.Object(max_properties=date_0)
    except BaseException:
        pass

def test_case_13():
    try:
        int_0 = -4147
        object_0 = module_0.Object(max_properties=int_0)
        array_0 = module_0.Array(int_0)
    except BaseException:
        pass

def test_case_14():
    try:
        int_0 = 855
        number_0 = module_0.Number(maximum=int_0, exclusive_minimum=int_0)
        any_0 = number_0.validate(int_0)
    except BaseException:
        pass

def test_case_15():
    try:
        number_0 = module_0.Number()
        text_0 = None
        any_0 = number_0.validate(text_0)
    except BaseException:
        pass

def test_case_16():
    try:
        boolean_0 = module_0.Boolean()
        any_0 = boolean_0.validate(boolean_0)
    except BaseException:
        pass

def test_case_17():
    try:
        decimal_0 = module_1.Decimal()
        number_0 = module_0.Number(exclusive_minimum=decimal_0)
        any_0 = number_0.validate(decimal_0)
    except BaseException:
        pass

def test_case_18():
    try:
        field_0 = module_0.Field()
        str_0 = 'w'
        dict_0 = {str_0: field_0, str_0: field_0}
        object_0 = module_0.Object(properties=dict_0, required=str_0)
        any_0 = object_0.validate(dict_0)
    except BaseException:
        pass

def test_case_19():
    try:
        int_0 = -4090
        number_0 = module_0.Number(minimum=int_0, exclusive_minimum=int_0, multiple_of=int_0)
        any_0 = number_0.validate(int_0)
    except BaseException:
        pass

def test_case_20():
    try:
        date_0 = module_0.Date()
        float_0 = 1146.44996
        str_0 = '6Uzz%sHX'
        field_0 = module_0.Field(title=str_0)
        sequence_0 = None
        decimal_0 = module_0.Decimal()
        any_0 = decimal_0.serialize(sequence_0)
        str_1 = '1z5a'
        bool_0 = True
        field_1 = module_0.Field(description=str_1, allow_null=bool_0)
        boolean_0 = module_0.Boolean(allow_null=bool_0)
        any_1 = boolean_0.validate(float_0)
    except BaseException:
        pass

def test_case_21():
    try:
        decimal_0 = module_1.Decimal()
        number_0 = module_0.Number()
        any_0 = number_0.validate(decimal_0)
        dict_0 = None
        field_0 = module_0.Field()
        bytes_0 = b'\xbd\xa3\x9d\xed\xab\x97w\x95od\xe7\x17\xe98h\x84\x0f'
        object_0 = module_0.Object(properties=dict_0, property_names=field_0, min_properties=bytes_0)
    except BaseException:
        pass

def test_case_22():
    try:
        integer_0 = module_0.Integer()
        bool_0 = True
        any_0 = integer_0.validate(integer_0, strict=bool_0)
    except BaseException:
        pass

def test_case_23():
    try:
        str_0 = "d'\x0bC,I&1'qpA{5 o"
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
        const_0 = module_0.Const(dict_0)
        any_0 = const_0.validate(str_0)
    except BaseException:
        pass

def test_case_24():
    try:
        int_0 = 526
        integer_0 = module_0.Integer(minimum=int_0, exclusive_maximum=int_0)
        any_0 = integer_0.validate(int_0)
    except BaseException:
        pass

def test_case_25():
    try:
        list_0 = []
        bool_0 = True
        array_0 = module_0.Array(list_0, bool_0)
        object_0 = module_0.Object(additional_properties=bool_0, required=list_0)
        any_0 = object_0.validate(object_0)
    except BaseException:
        pass

def test_case_26():
    try:
        str_0 = ''
        string_0 = module_0.String(pattern=str_0)
        any_0 = string_0.serialize(str_0)
        any_1 = string_0.validate(str_0)
    except BaseException:
        pass

def test_case_27():
    try:
        str_0 = None
        bool_0 = False
        boolean_0 = module_0.Boolean(title=str_0, allow_null=bool_0)
    except BaseException:
        pass

def test_case_28():
    try:
        dict_0 = {}
        bool_0 = False
        int_0 = 2307
        object_0 = module_0.Object(additional_properties=bool_0, min_properties=int_0)
        str_0 = 'fUO.z\r"s'
        boolean_0 = module_0.Boolean(description=str_0)
        any_0 = boolean_0.validate(bool_0)
        any_1 = object_0.validate(dict_0)
    except BaseException:
        pass

def test_case_29():
    try:
        dict_0 = {}
        str_0 = 'KSw"g'
        bool_0 = False
        string_0 = module_0.String(format=str_0, **dict_0)
        any_0 = string_0.serialize(bool_0)
        decimal_0 = module_1.Decimal()
        number_0 = module_0.Number(maximum=decimal_0)
        any_1 = number_0.validate(bool_0)
    except BaseException:
        pass

def test_case_30():
    try:
        str_0 = 'ZN03'
        bool_0 = True
        str_1 = 'YU4H0{TYY\x0cPQ{}\\W`@3'
        boolean_0 = module_0.Boolean(title=str_0, description=str_1, allow_null=bool_0)
        any_0 = boolean_0.validate(str_0)
    except BaseException:
        pass

def test_case_31():
    try:
        time_0 = module_0.Time()
        str_0 = 'S3kR*R};l`pCI);X{$b'
        field_0 = module_0.Field(title=str_0)
        decimal_0 = module_1.Decimal()
        number_0 = module_0.Number(minimum=field_0, precision=str_0, multiple_of=decimal_0)
    except BaseException:
        pass

def test_case_32():
    try:
        str_0 = 't\x0b/.[RPa0]/f%*?e`>'
        string_0 = module_0.String(pattern=str_0)
        any_0 = string_0.validate(str_0)
    except BaseException:
        pass

def test_case_33():
    try:
        dict_0 = {}
        array_0 = module_0.Array()
        any_0 = array_0.validate(dict_0)
    except BaseException:
        pass

def test_case_34():
    try:
        object_0 = module_0.Object()
        decimal_0 = None
        any_0 = object_0.validate(decimal_0)
    except BaseException:
        pass

def test_case_35():
    try:
        str_0 = ''
        number_0 = module_0.Number()
        any_0 = number_0.validate(str_0)
    except BaseException:
        pass

def test_case_36():
    try:
        str_0 = '|Uj'
        bool_0 = True
        field_0 = module_0.Field(description=str_0, default=str_0, allow_null=bool_0)
        int_0 = 1404
        bool_1 = False
        array_0 = module_0.Array(field_0, field_0, int_0, bool_1)
        any_0 = field_0.serialize(field_0)
        array_1 = module_0.Array()
        any_1 = array_0.validate(array_1)
    except BaseException:
        pass

def test_case_37():
    try:
        field_0 = module_0.Field()
        const_0 = module_0.Const(field_0)
        bool_0 = field_0.has_default()
        choice_0 = module_0.Choice()
        array_0 = module_0.Array(field_0, const_0, choice_0)
    except BaseException:
        pass

def test_case_38():
    try:
        int_0 = -2394
        number_0 = module_0.Number(minimum=int_0, exclusive_maximum=int_0)
        bool_0 = False
        dict_0 = {number_0: int_0, int_0: int_0, bool_0: number_0}
        none_type_0 = None
        string_0 = module_0.String(allow_blank=bool_0, pattern=dict_0, format=none_type_0)
    except BaseException:
        pass

def test_case_39():
    try:
        str_0 = '%]JkK% P$'
        bool_0 = False
        field_0 = module_0.Field(description=str_0, allow_null=bool_0)
        dict_0 = {str_0: field_0}
        object_0 = module_0.Object(properties=dict_0, pattern_properties=dict_0)
        any_0 = object_0.validate(dict_0)
    except BaseException:
        pass

def test_case_40():
    try:
        decimal_0 = module_1.Decimal()
        number_0 = module_0.Number(multiple_of=decimal_0)
        any_0 = number_0.validate(decimal_0)
    except BaseException:
        pass

def test_case_41():
    try:
        dict_0 = {}
        str_0 = "s6sd'%2vw9"
        bool_0 = False
        field_0 = module_0.Field(description=str_0, default=str_0, allow_null=bool_0)
        object_0 = module_0.Object(additional_properties=field_0)
        any_0 = object_0.validate(dict_0)
        float_0 = 2612.0
        float_1 = module_0.Float(minimum=float_0, maximum=float_0, precision=str_0)
        string_0 = module_0.String(min_length=float_1, pattern=str_0)
    except BaseException:
        pass

def test_case_42():
    try:
        time_0 = module_0.Time()
        list_0 = []
        union_0 = module_0.Union(list_0)
        any_0 = union_0.validate(time_0)
    except BaseException:
        pass

def test_case_43():
    try:
        text_0 = module_0.Text()
        dict_0 = {}
        decimal_0 = module_0.Decimal(maximum=dict_0)
    except BaseException:
        pass

def test_case_44():
    try:
        integer_0 = None
        bool_0 = False
        int_0 = 574
        boolean_0 = module_0.Boolean(default=int_0)
        any_0 = boolean_0.validate(integer_0, strict=bool_0)
    except BaseException:
        pass

def test_case_45():
    try:
        str_0 = "9'"
        int_0 = 2
        choice_0 = module_0.Choice(choices=str_0)
        any_0 = choice_0.validate(int_0)
    except BaseException:
        pass

def test_case_46():
    try:
        int_0 = 484
        number_0 = module_0.Number(multiple_of=int_0)
        str_0 = '!mL 7GkZ6H"N ?#}K}JI'
        field_0 = None
        dict_0 = {str_0: field_0, str_0: field_0, str_0: field_0}
        object_0 = module_0.Object(min_properties=int_0)
        dict_1 = {}
        bytes_0 = b'\x80\xf2%`M\xe2\xa4\n\x04\xbeS\xf9%1\xe3j\xc5:S\x9d'
        const_0 = module_0.Const(dict_0)
        tuple_0 = (dict_1, bytes_0, const_0)
        object_1 = module_0.Object(property_names=field_0, required=tuple_0)
    except BaseException:
        pass

def test_case_47():
    try:
        decimal_0 = module_1.Decimal()
        str_0 = 'bc(@m}:b6>qY~2Ga74J='
        number_0 = module_0.Number(exclusive_minimum=decimal_0, precision=str_0, multiple_of=decimal_0)
        any_0 = number_0.validate(decimal_0)
    except BaseException:
        pass

def test_case_48():
    try:
        integer_0 = module_0.Integer()
        bool_0 = True
        none_type_0 = None
        string_0 = module_0.String(allow_blank=bool_0, trim_whitespace=bool_0, min_length=none_type_0)
        boolean_0 = module_0.Boolean()
        none_type_1 = None
        array_0 = module_0.Array(boolean_0, none_type_1)
    except BaseException:
        pass

def test_case_49():
    try:
        decimal_0 = module_1.Decimal()
        int_0 = 0
        number_0 = module_0.Number(maximum=int_0, exclusive_maximum=decimal_0)
        object_0 = module_0.Object()
        any_0 = module_0.Any()
        str_0 = '2KS\r:&'
        field_0 = None
        str_1 = 'WRX.LT[^6RZo8)R'
        dict_0 = {str_0: field_0, str_0: field_0, str_1: field_0, str_0: field_0}
        string_0 = None
        object_1 = module_0.Object(pattern_properties=dict_0, min_properties=int_0, max_properties=int_0, required=string_0)
    except BaseException:
        pass

def test_case_50():
    try:
        bool_0 = None
        string_0 = module_0.String(allow_blank=bool_0, trim_whitespace=bool_0)
        any_0 = string_0.validate(bool_0)
    except BaseException:
        pass

def test_case_51():
    try:
        number_0 = module_0.Number()
        str_0 = 'UW|V<?0Z'
        bool_0 = False
        int_0 = -1174
        string_0 = module_0.String(trim_whitespace=bool_0, max_length=int_0, min_length=int_0)
        any_0 = string_0.validate(str_0, strict=bool_0)
    except BaseException:
        pass

def test_case_52():
    try:
        text_0 = None
        choice_0 = module_0.Choice()
        any_0 = choice_0.validate(text_0)
    except BaseException:
        pass

def test_case_53():
    try:
        field_0 = module_0.Field()
        text_0 = module_0.Text()
        date_0 = module_0.Date()
        float_0 = 2066.0
        number_0 = module_0.Number(exclusive_minimum=date_0, multiple_of=float_0)
    except BaseException:
        pass

def test_case_54():
    try:
        str_0 = 'ss MJ8jU,f'
        boolean_0 = module_0.Boolean(description=str_0, default=str_0)
        bool_0 = True
        any_0 = boolean_0.validate(boolean_0, strict=bool_0)
    except BaseException:
        pass

def test_case_55():
    try:
        str_0 = None
        str_1 = ''
        field_0 = module_0.Field(title=str_1)
        dict_0 = {str_0: field_0, str_1: field_0}
        int_0 = -810
        dict_1 = {}
        object_0 = module_0.Object(properties=dict_0, additional_properties=field_0, property_names=field_0, max_properties=int_0, **dict_1)
    except BaseException:
        pass

def test_case_56():
    try:
        float_0 = 4179.1974378751265
        decimal_0 = module_1.Decimal()
        integer_0 = module_0.Integer(minimum=float_0, maximum=decimal_0, exclusive_maximum=decimal_0)
        bool_0 = False
        any_0 = integer_0.validate(decimal_0, strict=bool_0)
    except BaseException:
        pass

def test_case_57():
    try:
        decimal_0 = module_1.Decimal()
        str_0 = 'klM@Ab@_uEt9lp'
        field_0 = None
        dict_0 = {str_0: field_0, str_0: field_0, str_0: field_0, str_0: field_0}
        str_1 = ''
        str_2 = '9LX6(v[|sN[Ybe2{T'
        bytes_0 = b'\x84\xc7'
        dict_1 = {str_1: decimal_0, str_1: str_0, str_2: bytes_0, str_2: str_1}
        object_0 = module_0.Object(properties=dict_0, pattern_properties=dict_0, min_properties=dict_1)
    except BaseException:
        pass

def test_case_58():
    try:
        int_0 = -47
        field_0 = module_0.Field()
        union_0 = field_0.__or__(field_0)
        bool_0 = True
        object_0 = module_0.Object(properties=field_0, min_properties=int_0)
        any_0 = object_0.validate(union_0, strict=bool_0)
    except BaseException:
        pass

def test_case_59():
    try:
        array_0 = module_0.Array()
        dict_0 = None
        any_0 = array_0.validate(dict_0)
    except BaseException:
        pass

def test_case_60():
    try:
        decimal_0 = module_1.Decimal()
        dict_0 = {}
        int_0 = 0
        bool_0 = False
        dict_1 = {}
        object_0 = module_0.Object(pattern_properties=dict_1)
        any_0 = object_0.validate(dict_0, strict=bool_0)
        any_1 = object_0.validate(dict_1, strict=bool_0)
        float_0 = 529.015
        number_0 = module_0.Number(maximum=int_0)
        any_2 = number_0.validate(float_0)
    except BaseException:
        pass

def test_case_61():
    try:
        choice_0 = None
        str_0 = 'VdO@,d_ku*u6OxS'
        bool_0 = False
        field_0 = module_0.Field(description=str_0, allow_null=bool_0)
        string_0 = module_0.String(pattern=choice_0, format=field_0)
    except BaseException:
        pass

def test_case_62():
    try:
        str_0 = ''
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
        bool_0 = False
        object_0 = module_0.Object(additional_properties=bool_0, min_properties=bool_0)
        any_0 = object_0.validate(dict_0, strict=bool_0)
    except BaseException:
        pass

def test_case_63():
    try:
        str_0 = '1}n"jK[X8HiA9B'
        dict_0 = {str_0: str_0}
        set_0 = set()
        field_0 = module_0.Field(title=str_0, default=set_0)
        array_0 = module_0.Array(field_0)
        any_0 = array_0.serialize(dict_0)
        any_1 = array_0.validate(any_0)
    except BaseException:
        pass

def test_case_64():
    try:
        int_0 = 1743
        float_0 = -146.67405
        number_0 = module_0.Number(exclusive_maximum=int_0, precision=float_0, multiple_of=int_0)
        any_0 = number_0.validate(float_0)
    except BaseException:
        pass

def test_case_65():
    try:
        number_0 = module_0.Number()
        str_0 = 'yqLYkO~S;\r:GY\x0cs^'
        object_0 = module_0.Object(additional_properties=str_0)
    except BaseException:
        pass

def test_case_66():
    try:
        int_0 = 1743
        none_type_0 = None
        number_0 = module_0.Number(maximum=int_0, precision=none_type_0, multiple_of=int_0)
        str_0 = 'Avak`/\rX]nUh\tCl'
        field_0 = module_0.Field(title=str_0, description=str_0)
        str_1 = None
        str_2 = '4:DL/J<*`'
        dict_0 = {str_0: field_0, str_0: field_0, str_1: field_0, str_2: field_0}
        object_0 = module_0.Object(pattern_properties=dict_0, additional_properties=field_0, property_names=field_0, min_properties=int_0)
    except BaseException:
        pass

def test_case_67():
    try:
        str_0 = 'M;iWsdhLC\tjt2]K}'
        float_0 = 2909.17
        decimal_0 = module_0.Decimal(minimum=float_0)
        dict_0 = {}
        number_0 = module_0.Number(precision=str_0, multiple_of=decimal_0, **dict_0)
    except BaseException:
        pass

def test_case_68():
    try:
        date_0 = None
        bool_0 = True
        str_0 = 'T(FW;tQ'
        field_0 = module_0.Field(description=str_0)
        list_0 = [field_0]
        union_0 = module_0.Union(list_0)
        any_0 = union_0.validate(date_0, bool_0)
    except BaseException:
        pass

def test_case_69():
    try:
        str_0 = 'Must be a real datetime.'
        str_1 = 'forms/checkbox.html'
        bool_0 = False
        field_0 = module_0.Field(description=str_1, default=str_0, allow_null=bool_0)
        bool_1 = field_0.has_default()
        str_2 = '2y6(7$0WhZJ]&?ECy'
        str_3 = 'Q<mxb"iu/~-JFxJM'
        dict_0 = {str_2: str_2, str_3: bool_0, str_1: bool_0}
        number_0 = module_0.Number(exclusive_maximum=dict_0)
    except BaseException:
        pass

def test_case_70():
    try:
        str_0 = ''
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
        bool_0 = True
        object_0 = module_0.Object(additional_properties=bool_0, min_properties=bool_0)
        text_0 = None
        field_0 = None
        list_0 = [text_0, dict_0, str_0, field_0]
        array_0 = module_0.Array(list_0)
    except BaseException:
        pass

def test_case_71():
    try:
        int_0 = -1418
        string_0 = module_0.String(max_length=int_0, min_length=int_0)
        integer_0 = module_0.Integer(minimum=int_0, maximum=int_0)
        var_0 = [string_0, integer_0]
        boolean_0 = module_0.Boolean()
        bool_0 = True
        array_0 = module_0.Array(var_0, boolean_0, bool_0)
        var_1 = [bool_0, boolean_0, int_0, int_0, int_0, bool_0, bool_0, bool_0]
        any_0 = array_0.validate(var_1)
    except BaseException:
        pass

def test_case_72():
    try:
        decimal_0 = module_1.Decimal()
        int_0 = -3831
        number_0 = module_0.Number(exclusive_maximum=int_0, precision=int_0, multiple_of=decimal_0)
        any_0 = number_0.validate(decimal_0)
    except BaseException:
        pass

def test_case_73():
    try:
        str_0 = '1}n"jK[X8HiA9B'
        dict_0 = {str_0: str_0}
        int_0 = -618
        object_0 = module_0.Object(max_properties=int_0)
        any_0 = object_0.validate(dict_0)
    except BaseException:
        pass

def test_case_74():
    try:
        dict_0 = {}
        bool_0 = False
        int_0 = 2307
        object_0 = module_0.Object(additional_properties=bool_0, min_properties=int_0)
        any_0 = object_0.validate(dict_0)
    except BaseException:
        pass

def test_case_75():
    try:
        str_0 = '_\x0c_uyy"'
        bool_0 = False
        optional_0 = None
        field_0 = module_0.Field(description=str_0, allow_null=bool_0)
        dict_0 = {str_0: field_0}
        object_0 = module_0.Object(properties=optional_0, pattern_properties=dict_0)
        any_0 = object_0.validate(dict_0)
    except BaseException:
        pass

def test_case_76():
    try:
        bool_0 = True
        int_0 = None
        bool_1 = False
        field_0 = module_0.Field(allow_null=bool_0)
        str_0 = ''
        str_1 = '7'
        field_1 = module_0.Field(title=str_0, description=str_1, default=str_1)
        union_0 = field_1.__or__(field_0)
        any_0 = union_0.validate(int_0, bool_1)
        str_2 = "Expecting ',' delimiter"
        bool_2 = True
        string_0 = module_0.String(allow_blank=bool_2, pattern=str_2)
        any_1 = union_0.validate(str_0)
    except BaseException:
        pass

def test_case_77():
    try:
        field_0 = module_0.Field()
        str_0 = 'w'
        dict_0 = {str_0: field_0, str_0: field_0}
        object_0 = module_0.Object(additional_properties=field_0)
        any_0 = object_0.validate(dict_0)
    except BaseException:
        pass

def test_case_78():
    try:
        str_0 = 'VyE<'
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
        str_1 = '\\)gEXeE=*QKEn|Cr'
        object_0 = module_0.Object(property_names=str_1)
        bool_0 = False
        field_0 = module_0.Field(allow_null=bool_0)
        dict_1 = {str_1: field_0}
        object_1 = module_0.Object(properties=dict_1, pattern_properties=dict_1, additional_properties=bool_0)
        any_0 = object_1.validate(dict_0)
    except BaseException:
        pass

def test_case_79():
    try:
        int_0 = 1
        dict_0 = {int_0: int_0, int_0: int_0}
        message_0 = None
        list_0 = [dict_0, message_0, message_0]
        object_0 = module_0.Object(property_names=list_0, max_properties=int_0)
        bool_0 = True
        any_0 = object_0.validate(dict_0, strict=bool_0)
    except BaseException:
        pass

def test_case_80():
    try:
        str_0 = 'abc'
        field_0 = module_0.Field(default=str_0)
        any_0 = field_0.get_default_value()
        str_1 = 'xyz'
        var_0 = lambda : str_1
        field_1 = module_0.Field(default=var_0)
        any_1 = field_1.get_default_value()
    except BaseException:
        pass

def test_case_81():
    try:
        str_0 = '苹果'
        int_0 = 2
        str_1 = ''
        var_0 = (int_0, str_0)
        var_1 = (int_0, str_1)
        var_2 = [var_0, var_1]
        bool_0 = True
        choice_0 = module_0.Choice(choices=var_2)
        any_0 = choice_0.validate(bool_0)
    except BaseException:
        pass

def test_case_82():
    try:
        str_0 = 'a'
        str_1 = ''
        str_2 = 'a'
        bool_0 = False
        int_0 = 64
        var_0 = None
        bool_1 = False
        field_0 = module_0.Field(title=str_2, allow_null=bool_1)
        field_1 = module_0.Field(default=str_1)
        union_0 = field_1.__or__(field_0)
        string_0 = module_0.String(allow_blank=bool_0, max_length=int_0, min_length=int_0, pattern=var_0, format=var_0)
        any_0 = string_0.validate(str_0)
    except BaseException:
        pass

def test_case_83():
    try:
        str_0 = '苹果'
        int_0 = 2
        var_0 = [int_0, int_0, str_0, int_0]
        choice_0 = module_0.Choice(choices=var_0)
        any_0 = choice_0.validate(int_0)
        any_1 = choice_0.validate(str_0)
        any_2 = choice_0.validate(int_0)
        dict_0 = {}
        number_0 = module_0.Number(minimum=int_0, maximum=int_0, exclusive_minimum=int_0, exclusive_maximum=int_0, **dict_0)
        var_1 = [str_0, var_0]
        bool_0 = False
        choice_1 = module_0.Choice(choices=var_1)
    except BaseException:
        pass

def test_case_84():
    try:
        str_0 = ''
        bool_0 = True
        string_0 = module_0.String(trim_whitespace=bool_0)
        int_0 = 19
        integer_0 = module_0.Integer(minimum=int_0, precision=str_0, multiple_of=int_0)
        any_0 = integer_0.validate(int_0)
    except BaseException:
        pass

def test_case_85():
    try:
        str_0 = 'C8Y\rE[!\tb!Fj\x0c4^+'
        date_0 = module_0.Date()
        array_0 = module_0.Array(date_0)
        any_0 = array_0.serialize(str_0)
    except BaseException:
        pass

def test_case_86():
    try:
        field_0 = module_0.Field()
        str_0 = "]Uzr*`'BE_!`C(XO"
        dict_0 = {str_0: field_0, str_0: field_0}
        object_0 = module_0.Object(properties=dict_0, required=str_0)
        any_0 = object_0.validate(dict_0)
    except BaseException:
        pass

def test_case_87():
    try:
        float_0 = 4198.7
        integer_0 = module_0.Integer()
        any_0 = integer_0.validate(float_0)
    except BaseException:
        pass

def test_case_88():
    try:
        str_0 = ''
        string_0 = module_0.String(pattern=str_0)
        validation_result_0 = string_0.validate_or_error(str_0)
        any_0 = string_0.validate(str_0)
    except BaseException:
        pass

def test_case_89():
    try:
        string_0 = module_0.String()
        number_0 = module_0.Number()
        var_0 = [string_0, number_0]
        union_0 = module_0.Union(var_0)
        any_0 = union_0.validate(string_0)
    except BaseException:
        pass

def test_case_90():
    try:
        str_0 = 'time'
        string_0 = module_0.String(format=str_0)
        any_0 = string_0.validate(string_0)
    except BaseException:
        pass

def test_case_91():
    try:
        int_0 = 10
        str_0 = '2'
        integer_0 = module_0.Integer(multiple_of=int_0)
        any_0 = integer_0.validate(str_0)
    except BaseException:
        pass

def test_case_92():
    try:
        int_0 = -13
        string_0 = module_0.String(max_length=int_0, min_length=int_0)
        int_1 = 1
        integer_0 = module_0.Integer(minimum=int_1, maximum=int_0)
        var_0 = [string_0, integer_0]
        boolean_0 = module_0.Boolean()
        bool_0 = True
        array_0 = module_0.Array(var_0, boolean_0, bool_0)
        any_0 = array_0.serialize(var_0)
        any_1 = string_0.serialize(integer_0)
        any_2 = array_0.validate(bool_0)
    except BaseException:
        pass

def test_case_93():
    try:
        dict_0 = None
        bool_0 = True
        bool_1 = True
        int_0 = -1145
        string_0 = module_0.String(allow_blank=bool_1, min_length=int_0)
        any_0 = string_0.validate(dict_0, strict=bool_0)
    except BaseException:
        pass

def test_case_94():
    try:
        number_0 = module_0.Number()
        int_0 = 1
        any_0 = number_0.validate(int_0)
        str_0 = 'inf'
        var_0 = float(str_0)
        any_1 = number_0.validate(var_0)
    except BaseException:
        pass

def test_case_95():
    try:
        str_0 = 'name'
        str_1 = 'id'
        string_0 = module_0.String()
        integer_0 = module_0.Integer()
        var_0 = {str_0: string_0, str_1: integer_0}
        object_0 = module_0.Object(properties=var_0)
        str_2 = 'email'
        str_3 = 'age'
        str_4 = 'property'
        string_1 = module_0.String()
        integer_1 = module_0.Integer()
        var_1 = {str_2: string_1, str_3: integer_1, str_4: object_0}
        object_1 = module_0.Object(properties=var_1)
        str_5 = 'test@test.[om'
        int_0 = 23
        var_2 = {str_2: str_5, str_4: str_0, str_3: int_0}
        any_0 = object_1.validate(var_2)
    except BaseException:
        pass