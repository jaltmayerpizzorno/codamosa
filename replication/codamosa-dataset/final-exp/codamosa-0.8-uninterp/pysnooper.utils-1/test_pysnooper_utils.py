# Automatically generated by Pynguin.
import pysnooper.utils as module_0

def test_case_0():
    pass

def test_case_1():
    int_0 = 62
    list_0 = [int_0, int_0, int_0, int_0]
    var_0 = module_0.get_shortish_repr(list_0)

def test_case_2():
    str_0 = '{}...{}'
    var_0 = module_0.normalize_repr(str_0)

def test_case_3():
    list_0 = None
    var_0 = module_0.truncate(list_0, list_0)

def test_case_4():
    str_0 = 'U`D\t29<C\r"clJ'
    var_0 = module_0.shitcode(str_0)
    var_1 = module_0.shitcode(str_0)
    set_0 = {var_0, var_0}
    var_2 = module_0.ensure_tuple(set_0)

def test_case_5():
    bytes_0 = None
    var_0 = module_0.ensure_tuple(bytes_0)

def test_case_6():
    str_0 = 'U`D\t29<C\r"clJ'
    var_0 = module_0.shitcode(str_0)

def test_case_7():
    tuple_0 = ()
    list_0 = [tuple_0, tuple_0]
    tuple_1 = (list_0,)
    dict_0 = {}
    int_0 = 6
    var_0 = module_0.get_shortish_repr(tuple_1, dict_0, int_0)

def test_case_8():
    str_0 = '☃'
    var_0 = module_0.shitcode(str_0)
    str_1 = '℀'
    str_2 = '€'
    var_1 = module_0.shitcode(str_2)
    var_2 = module_0.shitcode(str_1)
    str_3 = '☃€'
    var_3 = module_0.shitcode(str_3)
    var_4 = module_0.shitcode(str_2)
    str_4 = '違い'
    var_5 = module_0.shitcode(str_4)
    str_5 = '🚭'
    var_6 = module_0.shitcode(str_5)

def test_case_9():
    str_0 = '3\x0b;j'
    dict_0 = {str_0: str_0, str_0: str_0}
    list_0 = []
    var_0 = module_0.get_repr_function(dict_0, list_0)
    var_1 = (var_0, str_0)
    var_2 = (var_1,)
    var_3 = module_0.get_repr_function(str_0, var_2)

def test_case_10():
    str_0 = ''
    var_0 = module_0.shitcode(str_0)
    str_1 = 'a'
    var_1 = module_0.shitcode(str_1)
    var_2 = module_0.shitcode(str_0)
    str_2 = 'abc'
    var_3 = module_0.shitcode(str_2)
    str_3 = 'abcdefghijk'
    var_4 = module_0.shitcode(str_3)
    str_4 = 'abcd'
    int_0 = 1000
    var_5 = str_4 * int_0
    var_6 = module_0.shitcode(var_5)
    str_5 = '\x00'
    var_7 = module_0.shitcode(str_5)
    str_6 = '\x01'
    var_8 = module_0.shitcode(str_6)
    str_7 = '\x02'
    var_9 = module_0.shitcode(str_7)
    str_8 = 'ÿ'
    var_10 = module_0.shitcode(str_8)
    var_11 = str_8 * int_0
    var_12 = module_0.shitcode(var_11)
    str_9 = '\x00ÿ'
    var_13 = module_0.shitcode(str_9)
    str_10 = 'ÿ\x00'
    var_14 = module_0.shitcode(str_10)

def test_case_11():
    str_0 = '\x0bn'
    var_0 = lambda x: str_0
    str_1 = '<variab\\%VN'
    var_1 = module_0.shitcode(str_1)
    list_0 = []
    int_0 = -551
    var_2 = module_0.get_shortish_repr(int_0, list_0)
    dict_0 = {int_0: str_0}
    list_1 = []
    var_3 = module_0.get_repr_function(dict_0, list_1)
    var_4 = (var_3, str_0)
    var_5 = (var_4,)
    var_6 = module_0.get_repr_function(str_0, var_5)
    set_0 = set()
    bool_0 = True
    int_1 = -611
    str_2 = "^.'w4`,"
    str_3 = 'm$.cjb}{\n]~=?.'
    str_4 = '7Ex\n'
    dict_1 = {str_2: str_0, str_3: int_0, str_4: var_3, str_4: str_1}
    var_7 = module_0.get_shortish_repr(bool_0, set_0, int_1, dict_1)