# Automatically generated by Pynguin.
import pysnooper.utils as module_0

def test_case_0():
    try:
        dict_0 = None
        var_0 = module_0.shitcode(dict_0)
    except BaseException:
        pass

def test_case_1():
    try:
        var_0 = None
        var_1 = (var_0, var_0)
        var_2 = (var_1,)
        var_3 = module_0.get_repr_function(var_0, var_2)
    except BaseException:
        pass

def test_case_2():
    try:
        writable_stream_0 = None
        dict_0 = {writable_stream_0: writable_stream_0, writable_stream_0: writable_stream_0, writable_stream_0: writable_stream_0}
        list_0 = [dict_0, dict_0, writable_stream_0]
        var_0 = module_0.get_repr_function(dict_0, list_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bool_0 = True
        set_0 = {bool_0, bool_0}
        var_0 = module_0.truncate(bool_0, set_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = '{self.prefix}{s}\n'
        var_0 = module_0.shitcode(str_0)
        str_1 = '0`0N\x0cmfC"#q'
        var_1 = module_0.ensure_tuple(str_1)
        int_0 = -789
        var_2 = module_0.get_repr_function(int_0, int_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'e'
        float_0 = 4153.3239
        var_0 = module_0.truncate(str_0, float_0)
        str_1 = 'r'
        str_2 = 'hi'
        var_1 = lambda x: str_2
        bool_0 = True
        var_2 = lambda x: bool_0
        var_3 = lambda x: str_2
        var_4 = (var_2, var_3)
        var_5 = (var_4,)
        var_6 = module_0.get_repr_function(str_1, var_5)
    except BaseException:
        pass