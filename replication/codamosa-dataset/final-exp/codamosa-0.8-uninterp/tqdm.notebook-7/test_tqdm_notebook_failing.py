# Automatically generated by Pynguin.
import tqdm.notebook as module_0

def test_case_0():
    try:
        tqdm_notebook_0 = module_0.tqdm_notebook()
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = "OI6COk~Ez:g0't7K]?T"
        tqdm_h_box_0 = module_0.TqdmHBox()
        list_0 = [str_0]
        var_0 = module_0.tnrange(*list_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b'\x92\xaf.e\x00\x10\x80\x91Y'
        list_0 = [bytes_0, bytes_0]
        dict_0 = {}
        tqdm_notebook_0 = module_0.tqdm_notebook(*list_0, **dict_0)
    except BaseException:
        pass

def test_case_3():
    try:
        tqdm_notebook_0 = module_0.tqdm_notebook()
    except BaseException:
        pass

def test_case_4():
    try:
        tqdm_notebook_0 = module_0.tqdm_notebook()
    except BaseException:
        pass

def test_case_5():
    try:
        tqdm_notebook_0 = module_0.tqdm_notebook()
    except BaseException:
        pass

def test_case_6():
    try:
        tqdm_h_box_0 = module_0.TqdmHBox()
        var_0 = tqdm_h_box_0.__repr__()
        var_1 = tqdm_h_box_0.__repr__()
        tqdm_h_box_1 = module_0.TqdmHBox()
        str_0 = '\n        Manage the printing and in-place updating of a line of characters.\n        Note that if the string is longer than a line, then in-place\n        updating may not work (it will print a new line at each refresh).\n        '
        var_2 = tqdm_h_box_0.__repr__(str_0)
        tqdm_notebook_0 = module_0.tqdm_notebook()
    except BaseException:
        pass

def test_case_7():
    try:
        list_0 = []
        tqdm_notebook_0 = module_0.tqdm_notebook(*list_0)
    except BaseException:
        pass