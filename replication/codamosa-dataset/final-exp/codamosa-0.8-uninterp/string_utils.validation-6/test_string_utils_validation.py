# Automatically generated by Pynguin.
import string_utils.validation as module_0

def test_case_0():
    str_0 = ','
    i_s_b_n_checker_0 = module_0.__ISBNChecker(str_0)

def test_case_1():
    str_0 = '^3[47]\\d{13}$'
    i_s_b_n_checker_0 = module_0.__ISBNChecker(str_0)
    bool_0 = i_s_b_n_checker_0.is_isbn_13()

def test_case_2():
    str_0 = 'prettify'
    i_s_b_n_checker_0 = module_0.__ISBNChecker(str_0)
    bool_0 = i_s_b_n_checker_0.is_isbn_13()

def test_case_3():
    str_0 = '159017860X'
    i_s_b_n_checker_0 = module_0.__ISBNChecker(str_0)
    bool_0 = i_s_b_n_checker_0.is_isbn_10()
    bool_1 = module_0.is_email(bool_0)
    bool_2 = i_s_b_n_checker_0.is_isbn_13()

def test_case_4():
    str_0 = 'R Nl'
    bool_0 = False
    i_s_b_n_checker_0 = module_0.__ISBNChecker(str_0, bool_0)
    bool_1 = i_s_b_n_checker_0.is_isbn_10()
    bool_2 = module_0.is_ip_v6(i_s_b_n_checker_0)
    bool_3 = module_0.is_url(str_0)
    bool_4 = i_s_b_n_checker_0.is_isbn_13()

def test_case_5():
    complex_0 = None
    bool_0 = module_0.is_ip_v4(complex_0)

def test_case_6():
    str_0 = ''
    bool_0 = module_0.is_integer(str_0)

def test_case_7():
    int_0 = -3758
    bool_0 = module_0.is_uuid(int_0)
    set_0 = set()
    bool_1 = module_0.is_slug(set_0)
    str_0 = 'L'
    bool_2 = module_0.is_isbn(str_0)
    bool_3 = module_0.is_decimal(str_0)

def test_case_8():
    str_0 = 'k\x0cJlOoG4.\x0cs#B\x0b~'
    bool_0 = module_0.is_url(str_0)

def test_case_9():
    str_0 = 'ht\tctps://mysite.com'
    bool_0 = module_0.is_url(str_0)
    str_1 = '.mysite.com'
    str_2 = 'http://www.mysite.com/path/file.ext'
    str_3 = 'http'
    str_4 = [str_3]
    bool_1 = module_0.is_url(str_2, str_4)
    str_5 = 'https'
    str_6 = [str_5]
    bool_2 = module_0.is_url(str_2, str_6)
    str_7 = 'https://www.mysite.com/path/file.ext'
    str_8 = [str_3, str_5]
    bool_3 = module_0.is_url(str_7, str_8)
    bool_4 = module_0.is_url(str_7, str_1)

def test_case_10():
    dict_0 = {}
    bool_0 = module_0.is_url(dict_0)
    float_0 = -2483.142
    bytes_0 = b''
    list_0 = [bytes_0, bytes_0, float_0, float_0]
    tuple_0 = (float_0, bytes_0, list_0, list_0)
    str_0 = '^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$'
    bool_1 = module_0.is_credit_card(tuple_0, str_0)

def test_case_11():
    str_0 = 'F18>1Cl=-TO;LL<'
    bool_0 = module_0.is_email(str_0)

def test_case_12():
    str_0 = '{n3&-x'
    bool_0 = module_0.is_credit_card(str_0)
    int_0 = -3973
    bool_1 = module_0.is_credit_card(int_0)

def test_case_13():
    float_0 = 578.9
    bool_0 = module_0.is_credit_card(float_0)

def test_case_14():
    str_0 = '4929435258435678'
    str_1 = 'VISA'
    bool_0 = module_0.is_credit_card(str_0, str_1)
    str_2 = 'MASTERCARD'
    bool_1 = module_0.is_credit_card(str_0, str_2)
    bool_2 = module_0.is_ip(str_1)
    bool_3 = module_0.is_ip(bool_2)
    bool_4 = module_0.is_snake_case(str_2)

def test_case_15():
    float_0 = 2194.0
    bool_0 = module_0.is_camel_case(float_0)

def test_case_16():
    bool_0 = None
    bool_1 = module_0.is_snake_case(bool_0)
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    bool_2 = module_0.is_credit_card(bool_1)
    bool_3 = module_0.is_snake_case(bool_0)
    bool_4 = module_0.is_isogram(set_0)

def test_case_17():
    str_0 = '}`~0X=cx\x0bCI:DfU'
    bool_0 = module_0.is_snake_case(str_0)

def test_case_18():
    str_0 = '[1,2,3]'
    bool_0 = module_0.is_json(str_0)

def test_case_19():
    int_0 = -1001
    bool_0 = module_0.is_json(int_0)

def test_case_20():
    str_0 = '~_H\x0cx'
    bool_0 = module_0.is_camel_case(str_0)
    int_0 = module_0.words_count(str_0)
    str_1 = '@\rAX0h~'
    bool_1 = module_0.is_full_string(bool_0)
    bool_2 = True
    str_2 = '8lx]E(>="_\rs/Be3)'
    i_s_b_n_checker_0 = module_0.__ISBNChecker(str_2)
    bool_3 = module_0.is_palindrome(i_s_b_n_checker_0)
    bool_4 = i_s_b_n_checker_0.is_isbn_10()
    bool_5 = module_0.is_email(str_1)
    bool_6 = module_0.is_slug(str_1)
    bool_7 = i_s_b_n_checker_0.is_isbn_10()
    str_3 = ' T'
    bool_8 = module_0.is_isbn_13(str_3)
    set_0 = {bool_0, bool_5, bool_5, bool_8}
    bool_9 = True
    bool_10 = module_0.is_uuid(set_0, bool_9)
    i_s_b_n_checker_1 = module_0.__ISBNChecker(str_1, bool_2)
    dict_0 = {str_1: str_1, str_1: str_1, i_s_b_n_checker_1: str_1, bool_2: str_1}
    bool_11 = module_0.is_url(dict_0)
    bool_12 = i_s_b_n_checker_1.is_isbn_10()

def test_case_21():
    str_0 = 'N)qfW`>!:N@'
    i_s_b_n_checker_0 = module_0.__ISBNChecker(str_0)
    bool_0 = module_0.is_ip(i_s_b_n_checker_0)

def test_case_22():
    str_0 = 'P~%'
    bool_0 = module_0.is_email(str_0)
    str_1 = '2'
    bool_1 = module_0.is_decimal(str_1)
    float_0 = -1392.0
    str_2 = 'oPOGB%5?\\j:'
    set_0 = None
    bool_2 = module_0.is_ip_v6(set_0)
    i_s_b_n_checker_0 = module_0.__ISBNChecker(str_2)
    bool_3 = module_0.is_palindrome(str_0, bool_0)
    str_3 = '|#w\x0bj~(:N_!3'
    bool_4 = module_0.is_palindrome(str_3)
    bool_5 = module_0.is_string(str_3)
    bool_6 = module_0.is_slug(float_0, str_3)
    bool_7 = i_s_b_n_checker_0.is_isbn_13()

def test_case_23():
    dict_0 = {}
    bool_0 = module_0.is_json(dict_0)
    bool_1 = module_0.is_camel_case(bool_0)
    str_0 = 'x'
    bool_2 = module_0.is_full_string(str_0)
    bool_3 = module_0.is_string(bool_2)
    bool_4 = True
    str_1 = "\n    Generates a random string using secure low level random generator (os.urandom).\n\n    **Bear in mind**: due to hex conversion, the returned string will have a size that is exactly    the double of the given `byte_count`.\n\n    *Example:*\n\n    >>> secure_random_hex(9) # possible output: 'aac4cf1d1d87bd5036'\n\n    :param byte_count: Number of random bytes to generate\n    :type byte_count: int\n    :return: Hexadecimal string representation of generated random bytes\n    "
    i_s_b_n_checker_0 = module_0.__ISBNChecker(str_1)
    bool_5 = i_s_b_n_checker_0.is_isbn_10()
    bool_6 = module_0.is_email(str_1)
    bool_7 = module_0.is_palindrome(bool_4)
    bool_8 = module_0.contains_html(str_0)
    bool_9 = False
    bool_10 = module_0.is_isbn(str_0, bool_9)
    bool_11 = module_0.contains_html(str_0)
    bool_12 = module_0.is_isbn_10(str_0)
    bool_13 = module_0.is_number(str_0)

def test_case_24():
    str_0 = 'asciify'
    bool_0 = module_0.is_decimal(str_0)
    bool_1 = False
    i_s_b_n_checker_0 = module_0.__ISBNChecker(str_0, bool_1)
    bool_2 = module_0.is_number(str_0)
    str_1 = 'bMf]8'
    bool_3 = module_0.is_isbn_13(str_0)
    bool_4 = module_0.is_palindrome(str_1, bool_3)
    bool_5 = module_0.is_isogram(str_1)
    bool_6 = module_0.is_isogram(bool_0)
    bool_7 = module_0.contains_html(str_1)
    bool_8 = module_0.is_pangram(str_1)
    i_s_b_n_checker_1 = module_0.__ISBNChecker(str_1)
    bool_9 = module_0.is_string(str_1)
    bool_10 = i_s_b_n_checker_1.is_isbn_13()
    bool_11 = module_0.is_number(str_1)
    bool_12 = i_s_b_n_checker_1.is_isbn_10()

def test_case_25():
    set_0 = set()
    str_0 = '\n'
    i_s_b_n_checker_0 = module_0.__ISBNChecker(str_0)
    bool_0 = module_0.is_ip(set_0)
    str_1 = 'E(Su'
    bool_1 = module_0.is_pangram(set_0)
    bool_2 = module_0.is_integer(str_1)

def test_case_26():
    str_0 = '^3[47]\\d{13}$'
    i_s_b_n_checker_0 = module_0.__ISBNChecker(str_0)
    bool_0 = i_s_b_n_checker_0.is_isbn_13()
    bool_1 = module_0.is_slug(str_0)

def test_case_27():
    complex_0 = None
    bool_0 = module_0.is_slug(complex_0)

def test_case_28():
    str_0 = ',G+#:BM(_-W+O'
    str_1 = '.'
    i_s_b_n_checker_0 = module_0.__ISBNChecker(str_1)
    bool_0 = i_s_b_n_checker_0.is_isbn_13()
    bool_1 = module_0.is_ip(str_0)
    bool_2 = module_0.contains_html(str_0)
    bool_3 = module_0.is_string(str_0)
    bool_4 = i_s_b_n_checker_0.is_isbn_13()

def test_case_29():
    str_0 = '\n'
    int_0 = module_0.words_count(str_0)

def test_case_30():
    str_0 = 'UPPERCASE_FIRST_LETTER'
    str_1 = '\x0b*"hv v;* !$AWaA'
    bool_0 = module_0.is_decimal(str_1)
    bool_1 = module_0.is_json(str_0)
    bool_2 = module_0.is_isbn_10(str_0)
    str_2 = '<T,)\\^~-P4.\x0b;)M\r5\x0ba:'
    bool_3 = module_0.is_isbn_13(str_2)
    str_3 = 'PIr7;9\x0ccsI#>.Ia"h"'
    bool_4 = module_0.is_full_string(str_3)
    str_4 = '9@|'
    bool_5 = module_0.is_email(str_4)

def test_case_31():
    str_0 = 'WZ=@i%U_|%`t}'
    bool_0 = True
    bool_1 = module_0.is_isbn_13(str_0, bool_0)

def test_case_32():
    str_0 = '2'
    bool_0 = module_0.is_integer(str_0)

def test_case_33():
    str_0 = '&c}g+{0'
    str_1 = '<,oS)'
    list_0 = [str_1, str_1]
    bool_0 = module_0.is_url(str_0, list_0)
    bool_1 = module_0.is_decimal(str_0)
    bool_2 = False
    bool_3 = module_0.is_pangram(bool_2)
    bytes_0 = None
    bool_4 = module_0.is_camel_case(bytes_0)
    bool_5 = module_0.is_isogram(bool_2)
    float_0 = -1721.667
    bool_6 = module_0.is_full_string(bool_4)
    bool_7 = module_0.is_json(bool_4)
    bool_8 = module_0.is_ip_v4(float_0)
    str_2 = "~3!a|}H(u&'7Ap@"
    bool_9 = module_0.is_uuid(float_0)
    bool_10 = module_0.is_number(str_2)
    bool_11 = module_0.is_uuid(bool_8)
    dict_0 = {bytes_0: bool_8, float_0: bool_8, float_0: bool_8, bytes_0: bytes_0}
    str_3 = "r+@xyu\x0bN,vU'7A"
    int_0 = module_0.words_count(str_3)
    bool_12 = module_0.is_ip_v6(dict_0)
    bool_13 = module_0.is_slug(bool_6)

def test_case_34():
    str_0 = 'z"5tWr'
    str_1 = '\x0bay|p@1['
    bool_0 = module_0.is_isbn(str_1)
    bool_1 = module_0.is_ip_v6(str_0)
    str_2 = 'is_ip_v4'
    bool_2 = module_0.is_integer(str_2)
    bool_3 = module_0.is_camel_case(str_2)
    bool_4 = module_0.is_url(bool_2)

def test_case_35():
    str_0 = '55.25.255.255'
    bool_0 = module_0.is_ip_v4(str_0)
    str_1 = '999.999.999.999'
    bool_1 = module_0.is_ip_v4(str_1)
    str_2 = '255.255.255.255.'
    bool_2 = module_0.is_ip_v4(str_2)
    str_3 = '255.255.255'
    bool_3 = module_0.is_ip_v4(str_3)
    bool_4 = module_0.is_json(str_0)

def test_case_36():
    str_0 = 'zK'
    bool_0 = module_0.is_ip_v4(str_0)

def test_case_37():
    str_0 = '255.200.100.75'
    bool_0 = module_0.is_ip(str_0)
    str_1 = '2001:db8:85a3:0000:0000:8a2e:370:7334'
    bool_1 = module_0.is_ip(str_1)
    str_2 = '1.2.3'
    bool_2 = module_0.is_ip(str_2)

def test_case_38():
    str_0 = '=6oO$'
    bool_0 = module_0.is_isogram(str_0)
    bool_1 = True
    bool_2 = module_0.is_isbn_13(str_0, bool_1)
    str_1 = 'dw'
    bool_3 = module_0.is_isbn_10(str_1)
    bool_4 = module_0.is_isbn_10(str_1, bool_1)
    str_2 = 'S0vRDa0'
    str_3 = 'fbq='
    bool_5 = module_0.is_number(str_3)
    bool_6 = module_0.contains_html(str_2)
    bool_7 = module_0.is_json(str_1)

def test_case_39():
    str_0 = 'my.email@gmail.com'
    bool_0 = module_0.is_email(str_0)

def test_case_40():
    bytes_0 = b'\x0c\x15'
    str_0 = '1'
    set_0 = None
    list_0 = []
    bool_0 = module_0.is_url(set_0, list_0)
    bool_1 = module_0.is_email(bytes_0)
    bool_2 = module_0.is_slug(bool_0)
    bool_3 = module_0.is_integer(str_0)
    str_1 = '\n    Returns the number of words contained into the given string.\n\n    This method is smart, it does consider only sequence of one or more letter and/or numbers\n    as "words", so a string like this: "! @ # % ... []" will return zero!\n    Moreover it is aware of punctuation, so the count for a string like "one,two,three.stop"\n    will be 4 not 1 (even if there are no spaces in the string).\n\n    *Examples:*\n\n    >>> words_count(\'hello world\') # returns 2\n    >>> words_count(\'one,two,three.stop\') # returns 4\n\n    :param input_string: String to check.\n    :type input_string: str\n    :return: Number of words.\n    '
    bool_4 = module_0.is_decimal(str_1)
    dict_0 = {str_0: str_0, str_0: str_0, bytes_0: bytes_0, str_0: bool_3}
    i_s_b_n_checker_0 = module_0.__ISBNChecker(str_1)
    str_2 = "o\x0cjz|BsI'JS;3"
    bool_5 = module_0.is_decimal(str_2)
    bool_6 = i_s_b_n_checker_0.is_isbn_10()
    str_3 = 'phD`.\r\t0=k'
    i_s_b_n_checker_1 = module_0.__ISBNChecker(str_3)
    bool_7 = module_0.is_ip_v4(str_3)
    bool_8 = module_0.is_isogram(dict_0)
    bool_9 = i_s_b_n_checker_0.is_isbn_13()
    bool_10 = module_0.contains_html(str_3)
    bool_11 = i_s_b_n_checker_0.is_isbn_13()
    bool_12 = module_0.is_slug(bool_0)
    bool_13 = module_0.is_email(bool_3)
    bool_14 = False
    bool_15 = module_0.is_palindrome(str_0, bool_14)
    bool_16 = module_0.is_isogram(bool_3)

def test_case_41():
    str_0 = 'my.email@gmail.com'
    bool_0 = module_0.is_palindrome(str_0)
    str_1 = 'asciify'
    bool_1 = False
    i_s_b_n_checker_0 = module_0.__ISBNChecker(str_1, bool_1)
    bool_2 = module_0.is_url(str_1)
    bool_3 = i_s_b_n_checker_0.is_isbn_13()
    str_2 = ''
    bool_4 = True
    i_s_b_n_checker_1 = module_0.__ISBNChecker(str_2, bool_4)
    bool_5 = i_s_b_n_checker_1.is_isbn_13()
    str_3 = 'f\n<BH:+ L'
    str_4 = 'Q)Y!@`WImre'
    i_s_b_n_checker_2 = module_0.__ISBNChecker(str_4)
    i_s_b_n_checker_3 = module_0.__ISBNChecker(str_3)
    bool_6 = module_0.is_json(i_s_b_n_checker_3)
    bool_7 = module_0.is_email(str_0)
    bool_8 = i_s_b_n_checker_0.is_isbn_13()
    bool_9 = module_0.is_json(str_3)
    bool_10 = i_s_b_n_checker_3.is_isbn_10()
    bool_11 = module_0.is_email(bool_10)

def test_case_42():
    str_0 = '123456789x'
    bool_0 = module_0.is_isbn(str_0)
    str_1 = '123-456789x'
    bool_1 = module_0.is_isbn(str_1)
    bool_2 = module_0.is_isbn(str_0)
    str_2 = '123-456-789x'
    bool_3 = module_0.is_isbn(str_2)
    str_3 = '0-306-40615-2'
    bool_4 = module_0.is_isbn(str_3)
    str_4 = '1-930110-91-2'
    bool_5 = module_0.is_isbn(str_4)
    str_5 = '978-0312498580'
    bool_6 = module_0.is_isbn(str_5)
    str_6 = '978-0-312-498580'
    bool_7 = module_0.is_isbn(str_6)
    str_7 = '978-3-12-498580-5'
    bool_8 = module_0.is_isbn(str_7)

def test_case_43():
    str_0 = '{nope}'
    bool_0 = module_0.is_json(str_0)

def test_case_44():
    str_0 = '172.32.0.0'
    bool_0 = module_0.is_ip_v4(str_0)

def test_case_45():
    str_0 = '[1,2,3]'
    str_1 = '255.255.255.256'
    bool_0 = module_0.is_ip_v4(str_1)
    str_2 = '255.255.255.x'
    bool_1 = module_0.is_ip_v4(str_0)
    str_3 = '255.255.255.2x5'
    bool_2 = module_0.is_ip_v4(str_3)
    bool_3 = module_0.is_ip_v4(str_2)

def test_case_46():
    str_0 = 'foo@bar.com'
    bool_0 = module_0.is_email(str_0)
    str_1 = 'fo[o@bar'
    bool_1 = module_0.is_email(str_1)
    str_2 = 'foo.bar.com'
    bool_2 = module_0.is_email(str_2)
    str_3 = '<foo@bar.com>'
    bool_3 = module_0.is_email(str_3)
    str_4 = '"foo bar"@bar.com'
    bool_4 = module_0.is_email(str_4)
    str_5 = '"foo@bar"@bar.com'
    bool_5 = module_0.is_email(str_5)
    bool_6 = module_0.is_email(str_4)
    str_6 = '"foo\\@bar"@bar.com'
    bool_7 = module_0.is_email(str_6)
    str_7 = '.foo@bar.com'
    bool_8 = module_0.is_email(str_7)

def test_case_47():
    str_0 = '255.200.100.75'
    bool_0 = module_0.is_ip_v4(str_0)
    str_1 = 'nope'
    bool_1 = module_0.is_ip_v4(str_1)
    str_2 = '"foo@bar"@example.com'
    bool_2 = module_0.is_email(str_0)
    str_3 = 'foo.bar@example.com'
    bool_3 = module_0.is_email(bool_1)
    bool_4 = module_0.is_email(str_3)
    str_4 = 'foo_bar@example.com'
    bool_5 = module_0.is_email(bool_3)
    bool_6 = module_0.is_json(str_4)
    bool_7 = module_0.is_email(str_2)

def test_case_48():
    str_0 = '"my email"@the-provider.com'
    bool_0 = module_0.is_email(str_0)
    bool_1 = module_0.is_email(str_0)
    str_1 = 'my.email@'
    bool_2 = module_0.is_email(str_1)
    str_2 = '@'
    str_3 = ''
    bool_3 = module_0.is_email(str_3)
    bool_4 = module_0.is_email(str_2)

def test_case_49():
    str_0 = '378282246310005'
    bool_0 = module_0.is_credit_card(str_0)
    str_1 = '371449637543151'
    bool_1 = module_0.is_credit_card(str_1)
    str_2 = 'a.a@a.com.cn'
    bool_2 = module_0.is_email(str_2)
    bool_3 = module_0.is_email(str_1)
    str_3 = 'a+a@a_a.com.cn'
    bool_4 = module_0.is_email(str_3)
    bool_5 = module_0.is_email(bool_4)
    bool_6 = module_0.is_email(str_0)

def test_case_50():
    str_0 = 'PK_2n$myF'
    optional_0 = None
    bool_0 = module_0.is_url(str_0, optional_0)
    str_1 = '255.25.255.255'
    bool_1 = module_0.is_ip_v4(str_1)
    str_2 = '999.999.999.999'
    bool_2 = module_0.is_ip_v4(str_2)
    str_3 = 'contains_html'
    i_s_b_n_checker_0 = module_0.__ISBNChecker(str_3, bool_2)
    bool_3 = i_s_b_n_checker_0.is_isbn_10()
    str_4 = 'K'
    bool_4 = module_0.is_integer(str_4)
    bool_5 = i_s_b_n_checker_0.is_isbn_10()
    i_s_b_n_checker_1 = module_0.__ISBNChecker(str_4)
    bool_6 = module_0.is_ip(str_4)
    bool_7 = module_0.is_camel_case(bool_6)
    i_s_b_n_checker_2 = module_0.__ISBNChecker(str_3)
    bool_8 = i_s_b_n_checker_2.is_isbn_13()
    bool_9 = module_0.is_email(str_4)
    str_5 = '",%fYn+U%-~,#@\x0bU~ y#'
    bool_10 = module_0.is_email(str_5)
    bool_11 = module_0.is_credit_card(i_s_b_n_checker_2)
    str_6 = 'L'
    i_s_b_n_checker_3 = module_0.__ISBNChecker(str_6)
    bool_12 = i_s_b_n_checker_0.is_isbn_10()

def test_case_51():
    str_0 = 'my@email.com'
    bool_0 = module_0.is_email(str_0)
    str_1 = 'my.email@the-provider.com'
    bool_1 = module_0.is_email(str_1)
    bool_2 = module_0.is_email(str_1)
    str_2 = 'my.email.@the-provider.com'
    bool_3 = module_0.is_email(str_2)
    str_3 = 'my.email.@.the-provider.com'
    bool_4 = module_0.is_email(str_3)
    set_0 = None
    bool_5 = module_0.is_json(set_0)
    bool_6 = module_0.is_json(set_0)

def test_case_52():
    var_0 = None
    bool_0 = module_0.is_email(var_0)
    str_0 = ''
    bool_1 = module_0.is_email(str_0)
    str_1 = '@'
    bool_2 = module_0.is_email(str_1)
    str_2 = '@gmail.com'
    bool_3 = module_0.is_email(str_2)
    str_3 = 'name@'
    bool_4 = module_0.is_email(str_3)
    str_4 = '.name@gmail.com'
    bool_5 = module_0.is_email(str_4)
    str_5 = 'name.@gmail.com'
    bool_6 = module_0.is_email(str_5)
    str_6 = 'name..surname@gmail.com'
    bool_7 = module_0.is_email(str_6)
    str_7 = 'name.surname@gmail.'
    bool_8 = module_0.is_email(str_7)
    bool_9 = module_0.is_json(str_4)
    bool_10 = module_0.is_json(bool_6)