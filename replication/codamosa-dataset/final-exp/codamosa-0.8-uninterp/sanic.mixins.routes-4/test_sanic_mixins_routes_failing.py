# Automatically generated by Pynguin.
import sanic.mixins.routes as module_0
import pathlib as module_1
import sanic.response as module_2

def test_case_0():
    try:
        route_mixin_0 = module_0.RouteMixin()
        str_0 = 'QGt'
        int_0 = -1959
        var_0 = route_mixin_0.static(str_0, str_0, int_0)
    except BaseException:
        pass

def test_case_1():
    try:
        route_mixin_0 = module_0.RouteMixin()
        str_0 = '/test_ursi'
        var_0 = route_mixin_0.add_route(str_0, str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '6UXbOS'
        iterable_0 = None
        route_mixin_0 = module_0.RouteMixin()
        var_0 = route_mixin_0.add_route(str_0, str_0, iterable_0)
    except BaseException:
        pass

def test_case_3():
    try:
        route_mixin_0 = module_0.RouteMixin()
        str_0 = "t'st_usi"
        var_0 = route_mixin_0.add_route(str_0, str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        route_mixin_0 = module_0.RouteMixin()
        str_0 = 'P^<}_phl\n-,r%?Z-qM'
        bool_0 = True
        var_0 = route_mixin_0.add_route(str_0, str_0, str_0, bool_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = "j\t:4!h%sN'ZX"
        route_mixin_0 = module_0.RouteMixin()
        var_0 = route_mixin_0.get(str_0)
        pure_path_0 = None
        str_1 = '^89ecmlV 2apM)Y'
        list_0 = [str_1]
        var_1 = route_mixin_0.static(pure_path_0, pure_path_0, list_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = '5rLI\rm,`bClS.cFL1'
        route_mixin_0 = module_0.RouteMixin()
        var_0 = route_mixin_0.get(str_0, str_0)
        str_1 = "'Gf+-gQee"
        int_0 = -1815
        var_1 = route_mixin_0.put(str_1, int_0)
        str_2 = '_port'
        str_3 = ''
        bool_0 = False
        var_2 = route_mixin_0.add_route(str_2, str_3, bool_0)
    except BaseException:
        pass

def test_case_7():
    try:
        bool_0 = False
        str_0 = 'MB<bnF].#\x0bYc'
        route_mixin_0 = module_0.RouteMixin()
        int_0 = 60
        var_0 = route_mixin_0.delete(str_0, bool_0, int_0, bool_0)
        str_1 = '_port'
        str_2 = ''
        var_1 = route_mixin_0.add_route(str_1, str_2, bool_0)
    except BaseException:
        pass

def test_case_8():
    try:
        pure_path_0 = module_1.PurePath()
        list_0 = [pure_path_0, pure_path_0, pure_path_0]
        route_mixin_0 = module_0.RouteMixin(*list_0)
        bytes_0 = b'\x0e\xdct\x81(m)\x9b\xfa\xf0\xf30\xbf\n\xf3\x80\xca}'
        str_0 = 'egR'
        set_0 = set()
        var_0 = route_mixin_0.add_websocket_route(bytes_0, str_0, set_0)
    except BaseException:
        pass

def test_case_9():
    try:
        route_mixin_0 = module_0.RouteMixin()
        pure_path_0 = None
        str_0 = '!&v$'
        h_t_t_p_response_0 = module_2.HTTPResponse(str_0)
        var_0 = route_mixin_0.static(pure_path_0, pure_path_0, str_0, h_t_t_p_response_0, route_mixin_0)
    except BaseException:
        pass

def test_case_10():
    try:
        route_mixin_0 = module_0.RouteMixin()
        str_0 = 's!I.HOVRrdY1LJ/ZrM'
        list_0 = []
        list_1 = []
        var_0 = route_mixin_0.static(list_0, str_0, list_1)
    except BaseException:
        pass

def test_case_11():
    try:
        route_mixin_0 = module_0.RouteMixin()
        str_0 = '#BI.HOVRrdY1LJ/Z\x0bM'
        var_0 = route_mixin_0.add_route(route_mixin_0, str_0, str_0)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = '|(OG>\r'
        dict_0 = {str_0: str_0, str_0: str_0}
        route_mixin_0 = module_0.RouteMixin()
        var_0 = route_mixin_0.add_route(dict_0, str_0, str_0)
    except BaseException:
        pass

def test_case_13():
    try:
        route_mixin_0 = module_0.RouteMixin()
        bool_0 = True
        str_0 = ''
        iterable_0 = None
        var_0 = route_mixin_0.add_route(str_0, str_0, iterable_0, str_0, bool_0, str_0, bool_0)
    except BaseException:
        pass

def test_case_14():
    try:
        str_0 = 'V.,`'
        bool_0 = True
        int_0 = 508
        str_1 = '-=q>un6O\\bhtg2s\n'
        dict_0 = {str_1: str_1, str_1: str_1, str_1: str_1}
        route_mixin_0 = module_0.RouteMixin(**dict_0)
        var_0 = route_mixin_0.post(str_0, bool_0, int_0)
        str_2 = 'NXc&sA'
        route_mixin_1 = module_0.RouteMixin()
        int_1 = None
        var_1 = route_mixin_1.get(str_2, int_1, str_2)
        var_2 = route_mixin_1.patch(str_2)
        bool_1 = False
        bool_2 = True
        var_3 = route_mixin_1.route(str_2, str_2, bool_1, bool_2)
        str_3 = '9HEX7OM~Xb+v'
        str_4 = 'W&Tya9K0[A`^\teKqR'
        list_0 = []
        var_4 = route_mixin_1.websocket(str_3, list_0, int_1)
        route_mixin_2 = module_0.RouteMixin()
        tuple_0 = ()
        var_5 = route_mixin_1.websocket(str_0, tuple_0, str_4)
        bool_3 = False
        var_6 = route_mixin_2.add_route(tuple_0, str_4, str_2, bool_3)
    except BaseException:
        pass

def test_case_15():
    try:
        str_0 = "J!0xIzul'(\\"
        str_1 = "hMj%+X-GJ'Y1QCV>"
        str_2 = 'O[kn\tonpih'
        bool_0 = True
        bool_1 = False
        list_0 = [str_0, bool_1, bool_0, str_0]
        route_mixin_0 = module_0.RouteMixin()
        var_0 = route_mixin_0.add_websocket_route(str_1, str_2, str_2, bool_0, list_0, str_2)
    except BaseException:
        pass

def test_case_16():
    try:
        route_mixin_0 = module_0.RouteMixin()
        str_0 = ''
        var_0 = route_mixin_0.add_route(str_0, str_0, str_0)
    except BaseException:
        pass

def test_case_17():
    try:
        str_0 = "J!0xIzul'(\\"
        route_mixin_0 = module_0.RouteMixin()
        bool_0 = True
        str_1 = ''
        iterable_0 = None
        var_0 = route_mixin_0.add_route(str_0, str_1, iterable_0, str_1, bool_0, str_0, bool_0)
    except BaseException:
        pass

def test_case_18():
    try:
        str_0 = 'total'
        str_1 = 'P"_ \\\\@]5K$'
        int_0 = 1160
        bool_0 = False
        route_mixin_0 = module_0.RouteMixin()
        var_0 = route_mixin_0.head(str_1, bool_0, int_0)
        str_2 = ''
        bool_1 = False
        str_3 = '\nDWlL6gK\\'
        var_1 = route_mixin_0.options(str_3)
        var_2 = route_mixin_0.options(str_2, str_2, bool_0, str_0)
        var_3 = route_mixin_0.head(str_0, str_1, bool_1)
        str_4 = '.pyc'
        str_5 = '(=o\\Z\n~.#nk'
        var_4 = route_mixin_0.add_route(str_4, str_5, str_5)
    except BaseException:
        pass