# Automatically generated by Pynguin.
import ansible.module_utils.common.collections as module_0
import builtins as module_1

def test_case_0():
    try:
        immutable_dict_0 = module_0.ImmutableDict()
        var_0 = immutable_dict_0.__iter__()
        float_0 = -631.727063
        var_1 = immutable_dict_0.__getitem__(float_0)
    except BaseException:
        pass

def test_case_1():
    try:
        immutable_dict_0 = module_0.ImmutableDict()
        var_0 = immutable_dict_0.__eq__(immutable_dict_0)
        bytes_0 = b''
        var_1 = immutable_dict_0.__eq__(bytes_0)
        list_0 = None
        var_2 = immutable_dict_0.union(list_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b'\xd6\xae\x9a\xbf\x87'
        immutable_dict_0 = module_0.ImmutableDict()
        var_0 = immutable_dict_0.union(bytes_0)
    except BaseException:
        pass

def test_case_3():
    try:
        dict_0 = {}
        immutable_dict_0 = module_0.ImmutableDict(**dict_0)
        str_0 = '=w.QFv.&'
        var_0 = module_0.is_iterable(str_0, immutable_dict_0)
        var_1 = immutable_dict_0.__repr__()
        str_1 = 'FpHq<W&d!\x0bVU7s/v'
        str_2 = '(2w_@Q[_6vM\ty8,pa/9u'
        dict_1 = {str_1: str_1, str_1: str_1, str_2: str_1}
        tuple_0 = ()
        var_2 = immutable_dict_0.difference(tuple_0)
        var_3 = module_0.count(tuple_0)
        var_4 = immutable_dict_0.__eq__(dict_1)
        immutable_dict_1 = module_0.ImmutableDict(**dict_1)
        var_5 = immutable_dict_1.__len__()
        list_0 = []
        var_6 = immutable_dict_0.__getitem__(list_0)
    except BaseException:
        pass

def test_case_4():
    try:
        immutable_dict_0 = module_0.ImmutableDict()
        var_0 = immutable_dict_0.__repr__()
        list_0 = [var_0, var_0, immutable_dict_0]
        var_1 = module_0.count(list_0)
        str_0 = 'rH:c"n2O%<7{}7\x0b'
        var_2 = module_0.is_sequence(str_0, immutable_dict_0)
        float_0 = 0.2
        var_3 = module_0.is_iterable(float_0)
        list_1 = [float_0, float_0]
        dict_0 = {}
        immutable_dict_1 = module_0.ImmutableDict(*list_1, **dict_0)
    except BaseException:
        pass

def test_case_5():
    try:
        int_0 = -1027
        var_0 = module_0.count(int_0)
    except BaseException:
        pass

def test_case_6():
    try:
        immutable_dict_0 = module_0.ImmutableDict()
        var_0 = immutable_dict_0.__repr__()
        float_0 = 2931.23109
        list_0 = [var_0, var_0, immutable_dict_0]
        var_1 = module_0.count(list_0)
        var_2 = module_0.is_sequence(list_0, immutable_dict_0)
        float_1 = 0.2
        var_3 = module_0.is_iterable(float_1)
        var_4 = immutable_dict_0.__iter__()
        list_1 = [float_0, float_0]
        dict_0 = {}
        immutable_dict_1 = module_0.ImmutableDict(*list_1, **dict_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = '~'
        dict_0 = None
        var_0 = module_0.is_sequence(str_0, dict_0)
        str_1 = 'f\x0c-oRFIO"4Om8@Ts>('
        str_2 = 'VfaA#]'
        dict_1 = {str_1: str_1, str_2: str_2}
        var_1 = module_0.count(dict_1)
        bytes_0 = b'\xe2\xd3\xab\x9f\xe1cK'
        var_2 = module_0.count(dict_1)
        immutable_dict_0 = module_0.ImmutableDict()
        var_3 = immutable_dict_0.__iter__()
        var_4 = immutable_dict_0.__eq__(bytes_0)
        str_3 = '-6kf]0'
        str_4 = 'Mandatory variable %s not defined.'
        dict_2 = {str_2: dict_1, str_2: str_0, str_3: str_2, str_4: var_3}
        list_0 = [bytes_0, dict_2, dict_2, var_1]
        var_5 = module_0.is_iterable(list_0, str_4)
        dict_3 = module_1.dict(**dict_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = '$-(]gGj4UYsP3FM*"'
        str_1 = None
        list_0 = []
        dict_0 = {str_1: list_0, str_0: str_0}
        str_2 = '{\tc]2<^C^GzZKbf`B'
        str_3 = 'force_with_deps'
        dict_1 = {str_2: str_2, str_0: str_0, str_0: str_2, str_3: str_2}
        immutable_dict_0 = module_0.ImmutableDict(**dict_1)
        var_0 = immutable_dict_0.difference(dict_0)
        str_4 = '+L3'
        list_1 = [str_4, str_4]
        immutable_dict_1 = module_0.ImmutableDict(*list_1)
    except BaseException:
        pass