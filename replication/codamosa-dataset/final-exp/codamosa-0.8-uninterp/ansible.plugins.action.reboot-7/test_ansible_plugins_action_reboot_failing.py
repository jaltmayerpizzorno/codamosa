# Automatically generated by Pynguin.
import ansible.plugins.action.reboot as module_0

def test_case_0():
    try:
        action_module_0 = module_0.ActionModule()
    except BaseException:
        pass

def test_case_1():
    try:
        set_0 = set()
        timed_out_exception_0 = None
        list_0 = [timed_out_exception_0, timed_out_exception_0, set_0, timed_out_exception_0, timed_out_exception_0, timed_out_exception_0]
        action_module_0 = module_0.ActionModule(*list_0)
        var_0 = action_module_0.deprecated_args()
        str_0 = ")F'z$(!6h%!Tmqd\x0c`E#"
        str_1 = '0Zd\\7WLQrd]K\\zi4,['
        dict_0 = {str_0: var_0, str_1: action_module_0}
        var_1 = action_module_0.get_distribution(dict_0)
    except BaseException:
        pass

def test_case_2():
    try:
        set_0 = set()
        timed_out_exception_0 = None
        list_0 = [timed_out_exception_0, timed_out_exception_0, set_0, timed_out_exception_0, timed_out_exception_0, timed_out_exception_0]
        bytes_0 = b'\x97\x04\x1f'
        dict_0 = {bytes_0: bytes_0}
        action_module_0 = module_0.ActionModule(*list_0)
        var_0 = action_module_0.run(dict_0)
    except BaseException:
        pass

def test_case_3():
    try:
        set_0 = set()
        timed_out_exception_0 = None
        list_0 = [timed_out_exception_0, timed_out_exception_0, set_0, timed_out_exception_0, timed_out_exception_0, timed_out_exception_0]
        tuple_0 = (timed_out_exception_0,)
        action_module_0 = None
        bytes_0 = b'\x01\x95\xa8X\x7fV\xce\\}'
        action_module_1 = module_0.ActionModule(*list_0)
        var_0 = action_module_1.deprecated_args()
        var_1 = action_module_1.do_until_success_or_timeout(tuple_0, list_0, action_module_0, bytes_0)
    except BaseException:
        pass

def test_case_4():
    try:
        set_0 = set()
        timed_out_exception_0 = None
        list_0 = [timed_out_exception_0, timed_out_exception_0, set_0, timed_out_exception_0, timed_out_exception_0, timed_out_exception_0]
        action_module_0 = module_0.ActionModule(*list_0)
        var_0 = action_module_0.deprecated_args()
        action_module_1 = module_0.ActionModule(*list_0)
        str_0 = 'c.\\t#8%|U\tgeRDbM'
        var_1 = action_module_0.run_test_command(str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        set_0 = set()
        timed_out_exception_0 = None
        list_0 = [timed_out_exception_0, timed_out_exception_0, set_0, timed_out_exception_0, timed_out_exception_0, timed_out_exception_0]
        action_module_0 = module_0.ActionModule(*list_0)
        var_0 = action_module_0.deprecated_args()
        var_1 = action_module_0.validate_reboot(list_0)
    except BaseException:
        pass

def test_case_6():
    try:
        set_0 = set()
        timed_out_exception_0 = None
        list_0 = [timed_out_exception_0, timed_out_exception_0, set_0, timed_out_exception_0, timed_out_exception_0, timed_out_exception_0]
        str_0 = '-Gyiq\t$v'
        action_module_0 = module_0.ActionModule(*list_0)
        var_0 = action_module_0.get_system_boot_time(str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        set_0 = set()
        timed_out_exception_0 = None
        list_0 = [timed_out_exception_0, timed_out_exception_0, set_0, timed_out_exception_0, timed_out_exception_0, timed_out_exception_0]
        action_module_0 = module_0.ActionModule(*list_0)
        dict_0 = {}
        var_0 = action_module_0.check_boot_time(dict_0, set_0)
    except BaseException:
        pass

def test_case_8():
    try:
        set_0 = set()
        timed_out_exception_0 = None
        list_0 = [timed_out_exception_0, timed_out_exception_0, set_0, timed_out_exception_0, timed_out_exception_0, timed_out_exception_0]
        int_0 = -2388
        str_0 = '\n    GNU Hurd specific subclass of Hardware. Define memory and mount facts\n    based on procfs compatibility translator mimicking the interface of\n    the Linux kernel.\n    '
        action_module_0 = module_0.ActionModule(*list_0)
        var_0 = action_module_0.perform_reboot(int_0, str_0)
    except BaseException:
        pass

def test_case_9():
    try:
        set_0 = set()
        timed_out_exception_0 = None
        list_0 = [timed_out_exception_0, timed_out_exception_0, set_0, timed_out_exception_0, timed_out_exception_0, timed_out_exception_0]
        bytes_0 = None
        action_module_0 = module_0.ActionModule(*list_0)
        var_0 = action_module_0.get_shutdown_command_args(bytes_0)
    except BaseException:
        pass

def test_case_10():
    try:
        set_0 = set()
        timed_out_exception_0 = None
        list_0 = [timed_out_exception_0, timed_out_exception_0, set_0, timed_out_exception_0, timed_out_exception_0, timed_out_exception_0]
        action_module_0 = module_0.ActionModule(*list_0)
        bytes_0 = b'\xfe'
        bool_0 = True
        bytes_1 = b'\xa3\xbb\x1b\x15\xdcQ\xb0\xe8\x89\xfaN\xfb\x02\x05#u1\xed\x11'
        var_0 = action_module_0.do_until_success_or_timeout(bytes_1, bool_0, bool_0, bytes_0)
    except BaseException:
        pass

def test_case_11():
    try:
        set_0 = set()
        timed_out_exception_0 = None
        list_0 = [timed_out_exception_0, timed_out_exception_0, set_0, timed_out_exception_0, timed_out_exception_0, timed_out_exception_0]
        tuple_0 = (timed_out_exception_0,)
        action_module_0 = module_0.ActionModule(*list_0)
        var_0 = action_module_0.deprecated_args()
        action_module_1 = module_0.ActionModule(*list_0)
        bool_0 = False
        var_1 = action_module_0.do_until_success_or_timeout(bool_0, bool_0, list_0, tuple_0)
    except BaseException:
        pass

def test_case_12():
    try:
        set_0 = set()
        timed_out_exception_0 = None
        list_0 = [timed_out_exception_0, timed_out_exception_0, set_0, timed_out_exception_0, timed_out_exception_0, timed_out_exception_0]
        action_module_0 = module_0.ActionModule(*list_0)
        var_0 = action_module_0.deprecated_args()
        action_module_1 = module_0.ActionModule(*list_0)
        float_0 = -1321.7943
        int_0 = 592
        bytes_0 = b'\xe1\xfe'
        var_1 = action_module_1.do_until_success_or_timeout(set_0, float_0, int_0, bytes_0, float_0)
    except BaseException:
        pass

def test_case_13():
    try:
        set_0 = set()
        timed_out_exception_0 = None
        list_0 = [timed_out_exception_0, timed_out_exception_0, set_0, timed_out_exception_0, timed_out_exception_0, timed_out_exception_0]
        tuple_0 = (timed_out_exception_0,)
        action_module_0 = module_0.ActionModule(*list_0)
        action_module_1 = module_0.ActionModule(*list_0)
        bool_0 = True
        str_0 = 'q`LU,(>\x0bYz )OW\x0c_rr'
        dict_0 = {}
        action_module_2 = module_0.ActionModule(*list_0, **dict_0)
        var_0 = action_module_2.do_until_success_or_timeout(tuple_0, bool_0, set_0, str_0)
    except BaseException:
        pass