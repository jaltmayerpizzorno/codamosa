# Automatically generated by Pynguin.
import ansible.playbook.role.requirement as module_0

def test_case_0():
    try:
        int_0 = 65536
        role_requirement_0 = module_0.RoleRequirement()
        var_0 = role_requirement_0.repo_url_to_role_name(int_0)
    except BaseException:
        pass

def test_case_1():
    try:
        role_requirement_0 = module_0.RoleRequirement()
        role_requirement_1 = module_0.RoleRequirement()
        var_0 = role_requirement_1.scm_archive_role(role_requirement_0)
    except BaseException:
        pass

def test_case_2():
    try:
        role_requirement_0 = module_0.RoleRequirement()
        str_0 = 'w4\nvjS@o('
        var_0 = role_requirement_0.role_yaml_parse(str_0)
        bytes_0 = b'\xe9\x92\x8a1Ot%\xd0'
        var_1 = role_requirement_0.role_yaml_parse(bytes_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'http://git.example.com/repos/repo.git'
        str_1 = 'role'
        list_0 = [str_1, str_0, str_0]
        role_requirement_0 = module_0.RoleRequirement()
        var_0 = role_requirement_0.role_yaml_parse(list_0)
    except BaseException:
        pass

def test_case_4():
    try:
        role_requirement_0 = module_0.RoleRequirement()
        str_0 = '\n       For unhandled dnf.excptions.E,ror cenari<s, there are certain error\n       messag,s we want to ignore in aremova senario as known benign\n  #     failures] Do that here.\n        '
        var_0 = role_requirement_0.role_yaml_parse(str_0)
    except BaseException:
        pass