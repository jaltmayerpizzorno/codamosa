# Automatically generated by Pynguin.
import sty.primitive as module_0

def test_case_0():
    pass

def test_case_1():
    style_0 = module_0.Style()
    register_0 = module_0.Register()
    register_0.mute()
    dict_0 = register_0.as_dict()

def test_case_2():
    register_0 = module_0.Register()

def test_case_3():
    register_0 = module_0.Register()
    list_0 = []
    register_0.unmute()
    str_0 = register_0.__call__(*list_0)
    register_0.unmute()

def test_case_4():
    int_0 = 4791
    list_0 = [int_0]
    register_0 = module_0.Register()
    register_1 = register_0.copy()
    register_2 = register_1.copy()
    register_3 = register_2.copy()
    register_4 = register_3.copy()
    str_0 = register_4.__call__(*list_0)

def test_case_5():
    bool_0 = True
    str_0 = '@ ('
    dict_0 = {str_0: str_0}
    register_0 = module_0.Register()
    register_0.set_renderfunc(bool_0, dict_0)

def test_case_6():
    register_0 = module_0.Register()
    register_1 = register_0.copy()
    var_0 = register_1.as_namedtuple()

def test_case_7():
    register_0 = module_0.Register()
    register_1 = register_0.copy()
    dict_0 = register_0.as_dict()
    register_0.mute()
    register_2 = register_0.copy()
    register_3 = register_0.copy()
    style_0 = module_0.Style()
    register_3.unmute()
    str_0 = register_3.__call__()
    str_1 = "'\x0bZI )}}Si*YsUQ&Hf"
    var_0 = register_0.__setattr__(str_1, style_0)
    register_4 = register_3.copy()

def test_case_8():
    str_0 = 'Cr\rQM=U'
    list_0 = [str_0, str_0, str_0]
    register_0 = module_0.Register()
    register_0.mute()
    register_1 = register_0.copy()
    str_1 = register_1.__call__(*list_0)
    register_2 = module_0.Register()
    str_2 = register_2.__call__()
    register_2.set_renderfunc(str_1, list_0)
    register_3 = register_2.copy()
    str_3 = register_2.__call__()
    register_4 = register_2.copy()
    list_1 = [str_3, str_2, str_2, str_2]
    str_4 = register_4.__call__(*list_1)
    var_0 = register_4.as_namedtuple()
    register_4.unmute()
    register_4.unmute()
    var_1 = register_2.as_namedtuple()
    str_5 = register_2.__call__()
    str_6 = register_2.__call__()
    register_5 = register_1.copy()
    register_4.mute()

def test_case_9():
    str_0 = 'Cr\rQM=U'
    list_0 = [str_0, str_0, str_0]
    register_0 = module_0.Register()
    str_1 = register_0.__call__(*list_0)
    register_1 = module_0.Register()
    str_2 = register_1.__call__()
    register_0.mute()
    register_1.set_renderfunc(str_1, list_0)
    str_3 = register_1.__call__()
    register_2 = register_1.copy()
    list_1 = [str_3, str_2, str_2, str_2]
    style_0 = module_0.Style()
    var_0 = register_2.__setattr__(str_2, style_0)
    str_4 = register_2.__call__(*list_1)
    var_1 = register_1.as_namedtuple()
    register_2.unmute()
    register_2.unmute()
    var_2 = register_1.as_namedtuple()
    register_3 = register_0.copy()
    register_4 = register_1.copy()
    register_5 = register_2.copy()
    register_5.mute()
    style_1 = module_0.Style()

def test_case_10():
    str_0 = 'Cr\rQM=U'
    list_0 = [str_0, str_0, str_0]
    register_0 = module_0.Register()
    str_1 = register_0.__call__(*list_0)
    register_1 = module_0.Register()
    str_2 = register_1.__call__()
    register_0.mute()
    register_1.set_renderfunc(str_1, list_0)
    type_0 = None
    str_3 = register_1.__call__()
    register_2 = register_1.copy()
    list_1 = [str_3, str_2, str_2, str_2]
    style_0 = module_0.Style()
    var_0 = register_2.__setattr__(str_2, style_0)
    str_4 = register_2.__call__(*list_1)
    var_1 = register_1.as_namedtuple()
    register_2.unmute()
    str_5 = 'IF^[>+kkC.Qm$X6b}0t\t'
    register_2.unmute()
    var_2 = register_1.as_namedtuple()
    list_2 = [str_5, str_3, str_3, str_3]
    register_3 = register_0.copy()
    register_4 = register_1.copy()
    register_5 = register_2.copy()
    list_3 = [list_2]
    register_2.set_renderfunc(type_0, list_3)
    register_6 = module_0.Register()
    register_2.mute()