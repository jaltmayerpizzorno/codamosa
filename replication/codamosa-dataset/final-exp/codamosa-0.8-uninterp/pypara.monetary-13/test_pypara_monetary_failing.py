# Automatically generated by Pynguin.
import pypara.monetary as module_0
import pypara.currencies as module_1
import decimal as module_2

def test_case_0():
    try:
        price_0 = module_0.Price()
        str_0 = ']uJu&-}XxH: a\\vT.=,/'
        str_1 = '\x0brk))& ;a'
        int_0 = 1373
        currency_type_0 = module_1.CurrencyType.METAL
        decimal_0 = module_2.Decimal()
        int_1 = -1206
        currency_0 = module_1.Currency(str_0, str_1, int_0, currency_type_0, decimal_0, int_1)
        incompatible_currency_error_0 = module_0.IncompatibleCurrencyError(currency_0, currency_0)
        price_1 = price_0.multiply(incompatible_currency_error_0)
    except BaseException:
        pass

def test_case_1():
    try:
        var_0 = None
        dict_0 = {}
        money_0 = module_0.Money(**dict_0)
        money_1 = money_0.divide(var_0)
    except BaseException:
        pass

def test_case_2():
    try:
        money_0 = module_0.Money()
        money_1 = money_0.__floordiv__(money_0)
        list_0 = [money_1, money_1, money_0]
        monetary_operation_exception_0 = module_0.MonetaryOperationException(*list_0)
        money_2 = money_0.floor_divide(monetary_operation_exception_0)
    except BaseException:
        pass

def test_case_3():
    try:
        money_0 = module_0.Money()
        bool_0 = money_0.lt(money_0)
        money_1 = money_0.__add__(money_0)
        currency_type_0 = module_1.CurrencyType.CRYPTO
        money_2 = money_0.__truediv__(currency_type_0)
        list_0 = []
        none_money_0 = module_0.NoneMoney(*list_0)
        money_3 = none_money_0.subtract(money_2)
    except BaseException:
        pass

def test_case_4():
    try:
        money_0 = module_0.Money()
        bool_0 = money_0.lt(money_0)
        money_1 = money_0.__pos__()
        money_2 = money_0.__abs__()
        str_0 = ')+;y8C,'
        bytes_0 = b''
        dict_0 = {str_0: bytes_0, str_0: money_2}
        none_price_0 = module_0.NonePrice(**dict_0)
    except BaseException:
        pass

def test_case_5():
    try:
        money_0 = module_0.Money()
        bool_0 = money_0.lt(money_0)
        money_1 = money_0.__pos__()
        list_0 = [bool_0, money_1, bool_0, money_1]
        money_2 = money_0.scalar_subtract(list_0)
    except BaseException:
        pass

def test_case_6():
    try:
        var_0 = None
        none_price_0 = module_0.NonePrice()
        money_0 = none_price_0.times(var_0)
        money_1 = money_0.__neg__()
        int_0 = money_0.__int__()
    except BaseException:
        pass

def test_case_7():
    try:
        price_0 = None
        str_0 = "'6k%a0)E1/vbT6"
        str_1 = None
        none_price_0 = module_0.NonePrice()
        bool_0 = none_price_0.lte(price_0)
        dict_0 = {str_0: str_0, str_0: str_0, str_1: str_1}
        some_price_0 = module_0.SomePrice(**dict_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = 'O'
        int_0 = None
        currency_type_0 = module_1.CurrencyType.CRYPTO
        decimal_0 = None
        int_1 = None
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_1)
        bool_0 = True
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.convert(currency_0, bool_0)
        bytes_0 = b'&-\xf1\xd6\xc1\xc7\xcd\xe1\xeb!'
        list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
        none_price_1 = module_0.NonePrice(*list_0)
    except BaseException:
        pass

def test_case_9():
    try:
        var_0 = None
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.scalar_subtract(var_0)
        dict_0 = {}
        none_price_1 = module_0.NonePrice(**dict_0)
        some_money_0 = module_0.SomeMoney()
    except BaseException:
        pass

def test_case_10():
    try:
        bytes_0 = b'\xc3a\xa0\xdf|@&\x13A\x96\xec\x88O'
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.round()
        price_1 = price_0.__truediv__(bytes_0)
        dict_0 = None
        tuple_0 = (dict_0,)
        list_0 = [tuple_0, tuple_0]
        str_0 = ''
        dict_1 = {str_0: list_0, str_0: str_0}
        price_2 = price_1.__pos__()
        none_price_1 = module_0.NonePrice(*list_0, **dict_1)
    except BaseException:
        pass

def test_case_11():
    try:
        money_0 = module_0.Money()
        money_1 = money_0.__floordiv__(money_0)
        float_0 = money_0.__float__()
        list_0 = [money_1, money_1, money_0]
        monetary_operation_exception_0 = module_0.MonetaryOperationException(*list_0)
        money_2 = money_0.floor_divide(monetary_operation_exception_0)
    except BaseException:
        pass

def test_case_12():
    try:
        var_0 = None
        dict_0 = {}
        money_0 = module_0.Money(**dict_0)
        money_1 = money_0.multiply(var_0)
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = '\npIa-7\x0cvY?SjX-{a'
        int_0 = -18
        list_0 = [str_0, int_0, str_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.negative()
        money_1 = some_money_0.positive()
        bool_0 = some_money_0.gt(money_1)
        bool_1 = some_money_0.gt(money_1)
        bool_2 = some_money_0.lt(money_1)
        bool_3 = money_1.is_equal(money_1)
        currency_0 = None
        some_price_0 = module_0.SomePrice(*list_0)
        money_2 = money_1.__add__(money_1)
        money_3 = money_1.subtract(money_2)
        price_0 = some_price_0.convert(currency_0)
    except BaseException:
        pass

def test_case_14():
    try:
        str_0 = '\npIa-7\x0cvY?SjX-{a'
        int_0 = -18
        list_0 = [str_0, int_0, str_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.negative()
        bool_0 = some_price_0.as_boolean()
        price_1 = price_0.__floordiv__(int_0)
        money_0 = some_money_0.positive()
        bool_1 = some_money_0.gt(money_0)
        bool_2 = some_money_0.gt(money_0)
        bool_3 = some_money_0.lt(money_0)
        money_1 = some_money_0.add(money_0)
        currency_0 = None
        int_1 = money_1.__int__()
        int_2 = money_0.__int__()
        bool_4 = price_0.lte(price_1)
        none_money_0 = module_0.NoneMoney()
        money_2 = none_money_0.abs()
        money_3 = money_2.__add__(money_1)
        money_4 = some_money_0.convert(currency_0)
    except BaseException:
        pass

def test_case_15():
    try:
        money_0 = module_0.Money()
        money_1 = money_0.__floordiv__(money_0)
        float_0 = money_0.__float__()
        list_0 = [money_1, money_1, money_0]
        monetary_operation_exception_0 = module_0.MonetaryOperationException(*list_0)
        money_2 = module_0.Money()
        float_1 = money_0.__float__()
        int_0 = money_0.as_integer()
    except BaseException:
        pass

def test_case_16():
    try:
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.positive()
        float_0 = money_0.__float__()
    except BaseException:
        pass

def test_case_17():
    try:
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.round()
        float_0 = price_0.as_float()
    except BaseException:
        pass

def test_case_18():
    try:
        currency_type_0 = None
        none_money_0 = module_0.NoneMoney()
        str_0 = '"Y8<\t"Pk)k3@y\\[Tz '
        str_1 = "HCR'[\x0c&?T"
        int_0 = 406
        decimal_0 = None
        currency_0 = module_1.Currency(str_0, str_1, int_0, currency_type_0, decimal_0, int_0)
        money_0 = none_money_0.convert(currency_0)
        money_1 = none_money_0.divide(currency_type_0)
        money_2 = module_0.Money()
        money_3 = money_2.negative()
    except BaseException:
        pass

def test_case_19():
    try:
        list_0 = []
        none_price_0 = module_0.NonePrice(*list_0)
        price_0 = none_price_0.abs()
        some_price_0 = module_0.SomePrice()
    except BaseException:
        pass

def test_case_20():
    try:
        none_money_0 = module_0.NoneMoney()
        var_0 = None
        none_price_0 = module_0.NonePrice()
        str_0 = None
        str_1 = 'Pound Sterling'
        price_0 = none_price_0.scalar_add(var_0)
        dict_0 = {str_0: str_0, str_0: str_0, str_1: str_1}
        some_money_0 = module_0.SomeMoney(**dict_0)
    except BaseException:
        pass

def test_case_21():
    try:
        bytes_0 = b'\xc3a\xa0\xdf|@&\x13A\x96\xec\x88O'
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.round()
        price_1 = price_0.__truediv__(bytes_0)
        bool_0 = price_0.__lt__(price_1)
        var_0 = None
        int_0 = -54
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.floor_divide(int_0)
        money_1 = money_0.__floordiv__(var_0)
        money_2 = money_0.divide(var_0)
        price_2 = price_1.__pos__()
        bool_1 = price_2.__eq__(money_0)
        list_0 = []
        some_price_0 = module_0.SomePrice(*list_0)
    except BaseException:
        pass

def test_case_22():
    try:
        str_0 = '\npIa-7vY?SjX-{a'
        int_0 = 4
        list_0 = [str_0, int_0, str_0]
        bool_0 = False
        dict_0 = {}
        some_money_0 = module_0.SomeMoney(*list_0, **dict_0)
        money_0 = some_money_0.divide(bool_0)
        var_0 = money_0.__round__(int_0)
        some_money_1 = module_0.SomeMoney(*list_0)
        money_1 = some_money_1.positive()
        bool_1 = some_money_1.gt(money_1)
        currency_0 = None
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.convert(currency_0)
    except BaseException:
        pass

def test_case_23():
    try:
        str_0 = '\npI]a-7vY?SjX-{wa'
        int_0 = 4
        currency_type_0 = None
        list_0 = [str_0, int_0, str_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_0 = some_money_0.is_equal(str_0)
        str_1 = "kFBL`\t&NxL:_oF''"
        int_1 = -1175
        list_1 = []
        decimal_0 = module_2.Decimal(*list_1)
        currency_0 = module_1.Currency(str_0, str_1, int_1, currency_type_0, decimal_0, int_0)
        decimal_1 = currency_0.quantize(decimal_0)
        currency_1 = module_1.Currency(str_0, str_1, int_0, currency_type_0, decimal_1, int_1)
        money_0 = some_money_0.positive()
        some_money_1 = None
        list_2 = [list_0, some_money_1, list_1]
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.divide(list_2)
        currency_2 = module_1.Currency(str_0, str_1, int_1, currency_type_0, decimal_0, int_0)
        incompatible_currency_error_0 = module_0.IncompatibleCurrencyError(currency_1, currency_2, str_0)
        money_1 = some_money_0.scalar_subtract(incompatible_currency_error_0)
    except BaseException:
        pass

def test_case_24():
    try:
        none_price_0 = module_0.NonePrice()
        currency_0 = None
        bool_0 = none_price_0.as_boolean()
        str_0 = 'bI+sVF;K 1/rq'
        dict_0 = {str_0: currency_0}
        some_money_0 = module_0.SomeMoney(**dict_0)
    except BaseException:
        pass

def test_case_25():
    try:
        str_0 = '\npIa-7\x0cvY?SjX-{a'
        int_0 = -18
        list_0 = [str_0, int_0, str_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.abs()
        price_1 = price_0.__floordiv__(int_0)
        money_0 = some_money_0.positive()
        price_2 = price_0.__add__(price_0)
        bool_0 = some_money_0.gt(money_0)
        bool_1 = some_money_0.gt(money_0)
        bool_2 = some_price_0.is_equal(bool_1)
        decimal_0 = module_2.Decimal()
        money_1 = money_0.with_qty(decimal_0)
    except BaseException:
        pass

def test_case_26():
    try:
        str_0 = '\npIa-7\x0cvY?SjX-{a'
        int_0 = -18
        list_0 = [str_0, int_0, str_0]
        currency_0 = None
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.convert(currency_0)
    except BaseException:
        pass

def test_case_27():
    try:
        str_0 = '\npI]a-7vY?SjX-{wa'
        int_0 = 4
        currency_type_0 = None
        list_0 = [str_0, int_0, str_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_0 = some_money_0.is_equal(str_0)
        str_1 = "kFBL`\t&NxL:_oF''"
        int_1 = -1175
        list_1 = []
        decimal_0 = module_2.Decimal(*list_1)
        currency_0 = module_1.Currency(str_0, str_1, int_1, currency_type_0, decimal_0, int_0)
        decimal_1 = currency_0.quantize(decimal_0)
        currency_1 = module_1.Currency(str_0, str_1, int_0, currency_type_0, decimal_1, int_1)
        money_0 = some_money_0.positive()
        some_money_1 = None
        list_2 = [list_0, some_money_1, list_1]
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.divide(list_2)
        currency_2 = module_1.Currency(str_0, str_1, int_1, currency_type_0, decimal_0, int_0)
        bool_1 = False
        none_price_1 = module_0.NonePrice()
        price_1 = none_price_1.divide(bool_1)
        none_price_2 = module_0.NonePrice()
        price_2 = none_price_0.negative()
        money_1 = money_0.divide(price_2)
    except BaseException:
        pass

def test_case_28():
    try:
        str_0 = '\npIa-7\x0cvY?SjX-{a'
        int_0 = -18
        list_0 = [str_0, int_0, str_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.negative()
        money_1 = some_money_0.positive()
        bool_0 = some_money_0.gt(money_1)
        bool_1 = some_money_0.gt(money_1)
        bool_2 = some_money_0.lt(money_1)
        some_price_0 = module_0.SomePrice(*list_0)
        money_2 = money_1.__add__(money_1)
        money_3 = money_0.round(int_0)
    except BaseException:
        pass

def test_case_29():
    try:
        str_0 = '\npIa-7\x0cvY?SjX~{a'
        int_0 = -18
        list_0 = [str_0, int_0, str_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.positive()
        bool_0 = some_money_0.gt(money_0)
        bool_1 = some_money_0.gt(money_0)
        bool_2 = some_money_0.lt(money_0)
        bool_3 = money_0.is_equal(bool_1)
        currency_0 = None
        money_1 = money_0.subtract(money_0)
        money_2 = money_0.__add__(money_1)
        money_3 = some_money_0.divide(str_0)
        money_4 = money_1.subtract(money_3)
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.convert(currency_0, bool_0)
    except BaseException:
        pass

def test_case_30():
    try:
        str_0 = '\npI]a-7vY?SjX-{wa'
        int_0 = 4
        currency_type_0 = None
        list_0 = [str_0, int_0, str_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_0 = some_money_0.is_equal(str_0)
        str_1 = "kFBL`\t&NxL:_oF''"
        int_1 = -1175
        list_1 = []
        decimal_0 = module_2.Decimal(*list_1)
        currency_0 = module_1.Currency(str_0, str_1, int_1, currency_type_0, decimal_0, int_0)
        dict_0 = {}
        none_money_0 = module_0.NoneMoney(**dict_0)
        money_0 = none_money_0.scalar_add(some_money_0)
        money_1 = some_money_0.subtract(money_0)
        money_2 = money_1.__pos__()
        var_0 = money_2.__round__()
    except BaseException:
        pass

def test_case_31():
    try:
        str_0 = '\npI]a-7vY?SjX-{wa'
        str_1 = 'Kenyan Shilling'
        int_0 = 4
        currency_type_0 = None
        list_0 = [str_0, int_0, str_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_0 = some_money_0.is_equal(str_0)
        int_1 = -1175
        list_1 = []
        decimal_0 = module_2.Decimal(*list_1)
        currency_0 = module_1.Currency(str_0, str_1, int_1, currency_type_0, decimal_0, int_0)
        decimal_1 = currency_0.quantize(decimal_0)
        currency_1 = module_1.Currency(str_0, str_1, int_0, currency_type_0, decimal_1, int_1)
        money_0 = some_money_0.positive()
        bytes_0 = b'M'
        some_money_1 = None
        list_2 = [list_0, some_money_1, list_1]
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.divide(list_2)
        price_1 = none_price_0.negative()
        price_2 = none_price_0.floor_divide(currency_0)
        price_3 = price_2.__pos__()
        str_2 = '\npI]a-7vY?SjX-{wa'
        str_3 = "DKr.YT'&"
        dict_0 = {str_2: bytes_0, str_3: str_1, str_3: int_1, str_2: currency_type_0}
        none_money_0 = module_0.NoneMoney(**dict_0)
    except BaseException:
        pass

def test_case_32():
    try:
        str_0 = '\npIa-7\x0cvY?SjX-{a'
        int_0 = -18
        list_0 = [str_0, int_0, str_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.abs()
        price_1 = price_0.__floordiv__(int_0)
        money_0 = some_money_0.positive()
        price_2 = price_0.__add__(price_0)
        bool_0 = some_money_0.gt(money_0)
        str_1 = 'MVR'
        int_1 = -1163
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        int_2 = 0
        currency_0 = module_1.Currency(str_1, str_0, int_1, currency_type_0, decimal_0, int_2)
        money_1 = money_0.with_ccy(currency_0)
        bool_1 = some_money_0.gt(money_1)
    except BaseException:
        pass

def test_case_33():
    try:
        str_0 = None
        int_0 = 1411
        currency_type_0 = module_1.CurrencyType.METAL
        decimal_0 = module_2.Decimal()
        int_1 = -2485
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_1)
        incompatible_currency_error_0 = module_0.IncompatibleCurrencyError(currency_0, currency_0)
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.multiply(incompatible_currency_error_0)
        dict_0 = {str_0: int_0, str_0: str_0, str_0: incompatible_currency_error_0}
        some_money_0 = module_0.SomeMoney(**dict_0)
    except BaseException:
        pass

def test_case_34():
    try:
        dict_0 = {}
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.floor_divide(dict_0)
        money_1 = money_0.round()
        var_0 = money_1.__round__()
        var_1 = None
        money_2 = money_0.__truediv__(var_1)
        bool_0 = money_1.__gt__(money_2)
        none_money_1 = module_0.NoneMoney()
        list_0 = [none_money_1, none_money_1, dict_0, none_money_1, none_money_1]
        dict_1 = {}
        none_price_0 = module_0.NonePrice(**dict_0)
        price_0 = none_price_0.negative()
        none_price_1 = module_0.NonePrice(**dict_1)
        price_1 = none_price_1.subtract(price_0)
        price_2 = price_1.negative()
        price_3 = price_2.__truediv__(money_0)
        none_price_2 = module_0.NonePrice(*list_0)
    except BaseException:
        pass

def test_case_35():
    try:
        str_0 = '\npIa-7\x0cvY?SjX-{a'
        int_0 = 4
        list_0 = [str_0, int_0, str_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.positive()
        bool_0 = some_money_0.gt(money_0)
        bool_1 = some_money_0.lt(money_0)
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.positive()
        money_1 = money_0.__floordiv__(int_0)
    except BaseException:
        pass

def test_case_36():
    try:
        str_0 = '\npIa-7\x0cvY?SjX-{a'
        int_0 = -18
        list_0 = [str_0, int_0, str_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.positive()
        bool_0 = some_money_0.gt(money_0)
        bool_1 = some_money_0.gt(money_0)
        bool_2 = some_money_0.lt(money_0)
        decimal_0 = module_2.Decimal()
        none_money_0 = module_0.NoneMoney()
        money_1 = none_money_0.with_qty(decimal_0)
        money_2 = some_money_0.add(money_1)
        int_1 = 1106
        money_3 = some_money_0.round(int_1)
    except BaseException:
        pass

def test_case_37():
    try:
        str_0 = '\npIa-7vY?SjX-{a'
        none_money_0 = module_0.NoneMoney()
        bool_0 = none_money_0.as_boolean()
        int_0 = 4
        list_0 = [str_0, int_0, str_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        dict_0 = None
        none_money_1 = module_0.NoneMoney(**dict_0)
    except BaseException:
        pass

def test_case_38():
    try:
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.positive()
        bool_0 = none_money_0.gte(money_0)
        float_0 = money_0.__float__()
    except BaseException:
        pass

def test_case_39():
    try:
        str_0 = '\npIa-7vY?SjX-{a'
        int_0 = -3
        list_0 = [str_0, int_0, str_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        some_price_0 = module_0.SomePrice(*list_0)
        currency_type_0 = module_1.CurrencyType.ALTERNATIVE
        money_0 = some_money_0.multiply(currency_type_0)
    except BaseException:
        pass

def test_case_40():
    try:
        str_0 = "Ql'mFgfxz.U\n~ZX5u"
        int_0 = -18
        list_0 = [str_0, int_0, str_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.round()
        bool_0 = price_0.__eq__(some_price_0)
        price_1 = some_price_0.positive()
        price_2 = price_0.subtract(price_1)
        price_3 = some_price_0.floor_divide(bool_0)
        price_4 = some_price_0.abs()
        some_price_1 = module_0.SomePrice(*list_0)
        str_1 = "[JcfRt`'-gOi"
        int_1 = None
        currency_type_0 = module_1.CurrencyType.CRYPTO
        dict_0 = {}
        decimal_0 = module_2.Decimal(**dict_0)
        currency_0 = module_1.Currency(str_0, str_1, int_1, currency_type_0, decimal_0, int_0)
        price_5 = some_price_1.convert(currency_0)
    except BaseException:
        pass

def test_case_41():
    try:
        bytes_0 = b'W\xab'
        currency_type_0 = module_1.CurrencyType.MONEY
        list_0 = [currency_type_0, currency_type_0, currency_type_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.divide(bytes_0)
    except BaseException:
        pass

def test_case_42():
    try:
        decimal_0 = module_2.Decimal()
        str_0 = 'i'
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.with_qty(decimal_0)
        int_0 = -1124
        var_0 = None
        price_1 = none_price_0.divide(var_0)
        currency_type_0 = module_1.CurrencyType.CRYPTO
        decimal_1 = module_2.Decimal()
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_1, int_0)
        str_1 = ' vs '
        int_1 = -4088
        currency_1 = module_1.Currency(str_1, str_0, int_1, currency_type_0, decimal_0, int_1)
        none_money_0 = module_0.NoneMoney()
        bool_0 = none_money_0.is_equal(currency_1)
        monetary_operation_exception_0 = module_0.MonetaryOperationException()
        list_0 = [monetary_operation_exception_0, monetary_operation_exception_0]
        some_money_0 = module_0.SomeMoney(*list_0)
    except BaseException:
        pass

def test_case_43():
    try:
        str_0 = '\npIa-7vY?SjX-{a'
        int_0 = -3
        list_0 = [str_0, int_0, str_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        currency_0 = None
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.with_ccy(currency_0)
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.with_ccy(currency_0)
        money_1 = money_0.round()
        date_0 = None
        price_1 = price_0.with_dov(date_0)
        price_2 = some_price_0.subtract(price_1)
    except BaseException:
        pass

def test_case_44():
    try:
        str_0 = 'Kenyan Shilling'
        money_0 = module_0.Money()
        dict_0 = {}
        decimal_0 = module_2.Decimal(**dict_0)
        money_1 = money_0.with_qty(decimal_0)
        int_0 = 4
        list_0 = [str_0, int_0, str_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        currency_0 = None
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.convert(currency_0)
    except BaseException:
        pass

def test_case_45():
    try:
        bytes_0 = b'\xc3a\xa0\xdf|@&\x13A\x96\xec\x88O'
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.round()
        price_1 = price_0.__truediv__(bytes_0)
        price_2 = price_0.negative()
        int_0 = none_price_0.as_integer()
    except BaseException:
        pass

def test_case_46():
    try:
        str_0 = '\npIa-7\x0cvY?SjX-{a'
        int_0 = -18
        list_0 = [str_0, int_0, str_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        some_price_0 = module_0.SomePrice(*list_0)
        str_1 = 'G%>Cn>(`xC\\y0n'
        int_1 = 2430
        price_0 = some_price_0.scalar_subtract(int_1)
        var_0 = price_0.__round__()
        str_2 = None
        str_3 = ')I<0]IL0cl]rirMM'
        dict_0 = {str_0: list_0, str_1: var_0, str_2: price_0, str_3: int_0}
        none_price_0 = module_0.NonePrice(**dict_0)
    except BaseException:
        pass

def test_case_47():
    try:
        str_0 = '\npIa-\x0cvY?SjX-{a'
        int_0 = -18
        list_0 = [str_0, int_0, str_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        none_price_0 = module_0.NonePrice()
        money_0 = some_money_0.positive()
        bool_0 = some_money_0.gt(money_0)
        bool_1 = some_money_0.lt(money_0)
        int_1 = money_0.__int__()
        some_price_0 = module_0.SomePrice(*list_0)
        money_1 = some_money_0.floor_divide(bool_1)
        money_2 = money_0.subtract(money_1)
        currency_type_0 = module_1.CurrencyType.ALTERNATIVE
        dict_0 = {}
        decimal_0 = module_2.Decimal(**dict_0)
        price_0 = some_price_0.multiply(decimal_0)
        bool_2 = price_0.lt(price_0)
        date_0 = None
        bool_3 = False
        money_3 = money_1.negative()
        str_1 = ',8`wYgcd\x0c,+i}q^mA<}~'
        bool_4 = price_0.__le__(price_0)
        int_2 = -1855
        currency_0 = module_1.Currency(str_1, str_1, int_0, currency_type_0, decimal_0, int_2)
        bool_5 = money_2.__le__(money_2)
        money_4 = some_money_0.convert(currency_0, date_0, bool_3)
    except BaseException:
        pass

def test_case_48():
    try:
        str_0 = '\npIa-7vY?SjX-{a'
        int_0 = 4
        list_0 = [str_0, int_0, str_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.positive()
        bool_0 = some_money_0.gt(money_0)
        currency_0 = None
        some_price_0 = module_0.SomePrice(*list_0)
        decimal_0 = None
        price_0 = some_price_0.with_qty(decimal_0)
        price_1 = some_price_0.convert(currency_0)
    except BaseException:
        pass

def test_case_49():
    try:
        str_0 = '\npIa-7\x0cvY?SjX-{a'
        int_0 = 4
        list_0 = [str_0, int_0, str_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.positive()
        bool_0 = some_money_0.gt(money_0)
        bool_1 = some_money_0.lt(money_0)
        some_price_0 = module_0.SomePrice(*list_0)
        money_1 = some_money_0.subtract(money_0)
        var_0 = None
        money_2 = money_1.scalar_add(var_0)
    except BaseException:
        pass

def test_case_50():
    try:
        str_0 = '\npIa-7\x0cvY?SjX-{a'
        int_0 = -18
        list_0 = [str_0, int_0, str_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.positive()
        bool_0 = some_money_0.gt(money_0)
        bool_1 = some_money_0.gt(money_0)
        bool_2 = some_money_0.lt(money_0)
        currency_0 = None
        some_price_0 = module_0.SomePrice(*list_0)
        money_1 = money_0.with_ccy(currency_0)
        money_2 = money_0.subtract(money_1)
    except BaseException:
        pass

def test_case_51():
    try:
        str_0 = '\npIa-7\x0cvY?SjX-{a'
        int_0 = -18
        list_0 = [str_0, int_0, str_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.positive()
        bool_0 = some_money_0.gt(money_0)
        bool_1 = some_money_0.gt(money_0)
        bool_2 = some_money_0.gt(money_0)
        dict_0 = {}
        none_price_0 = module_0.NonePrice(**dict_0)
        price_0 = none_price_0.abs()
        none_price_1 = module_0.NonePrice()
        bool_3 = none_price_1.gte(price_0)
        bool_4 = some_money_0.lt(money_0)
        some_price_0 = module_0.SomePrice(*list_0)
        money_1 = some_money_0.round()
    except BaseException:
        pass

def test_case_52():
    try:
        str_0 = '\npIa-7\x0cvY?SjX-{a'
        int_0 = -18
        list_0 = [str_0, int_0, str_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.positive()
        bool_0 = some_money_0.gt(money_0)
        bool_1 = some_money_0.gt(money_0)
        bool_2 = some_money_0.lt(money_0)
        decimal_0 = module_2.Decimal()
        int_1 = -1099
        currency_type_0 = module_1.CurrencyType.METAL
        currency_0 = module_1.Currency(str_0, str_0, int_1, currency_type_0, decimal_0, int_1)
        decimal_1 = currency_0.quantize(decimal_0)
        int_2 = 3947
        currency_1 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_1, int_2)
        money_1 = some_money_0.convert(currency_1)
    except BaseException:
        pass

def test_case_53():
    try:
        str_0 = '\npIa-7\x0cvY?SjX-{a'
        int_0 = -18
        list_0 = [str_0, int_0, str_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.abs()
        currency_0 = None
        some_price_1 = module_0.SomePrice(*list_0)
        bool_0 = True
        price_1 = some_price_1.convert(currency_0, bool_0)
    except BaseException:
        pass

def test_case_54():
    try:
        str_0 = '\npIa-7\x0cvY?SjX-{a'
        int_0 = -18
        list_0 = [str_0, int_0, str_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.abs()
        money_0 = some_money_0.positive()
        bool_0 = some_money_0.gt(money_0)
        bool_1 = some_money_0.lt(money_0)
        money_1 = some_money_0.add(money_0)
        currency_0 = None
        int_1 = money_1.__int__()
        some_price_1 = module_0.SomePrice(*list_0)
        money_2 = money_0.__add__(money_1)
        money_3 = money_2.subtract(money_1)
        bool_2 = True
        price_1 = some_price_1.convert(currency_0, bool_2)
    except BaseException:
        pass

def test_case_55():
    try:
        str_0 = '\npIa-7\x0cvY?SjX-{a'
        int_0 = -18
        list_0 = [str_0, int_0, str_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.abs()
        money_0 = some_money_0.positive()
        bool_0 = some_money_0.gt(money_0)
        bool_1 = some_money_0.gt(money_0)
        bool_2 = some_money_0.lt(money_0)
        money_1 = some_money_0.add(money_0)
        some_price_1 = module_0.SomePrice(*list_0)
        money_2 = money_0.subtract(money_0)
        none_price_0 = module_0.NonePrice()
        money_3 = some_price_1.times(none_price_0)
    except BaseException:
        pass

def test_case_56():
    try:
        str_0 = '\npIa-7\x0cvY?SjX-{a'
        int_0 = -18
        list_0 = [str_0, int_0, str_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.abs()
        money_0 = some_money_0.positive()
        price_1 = price_0.__add__(price_0)
        price_2 = price_1.__floordiv__(price_0)
    except BaseException:
        pass

def test_case_57():
    try:
        str_0 = '\npIa-7\x0cvY?SjX-{a'
        int_0 = -18
        list_0 = [str_0, int_0, str_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.abs()
        money_0 = some_money_0.positive()
        bool_0 = some_money_0.gt(money_0)
        bool_1 = some_money_0.gt(money_0)
        bool_2 = some_money_0.lt(money_0)
        money_1 = some_money_0.add(money_0)
        currency_0 = None
        int_1 = money_0.__int__()
        str_1 = 'ii|GlTWxE;@^1oew'
        str_2 = '.;[q$W>DX\x0cA:N3gPU'
        var_0 = price_0.__round__(int_0)
        price_1 = some_price_0.abs()
        dict_0 = {str_1: bool_1, str_0: currency_0, str_1: str_0, str_2: var_0}
        some_price_1 = module_0.SomePrice(**dict_0)
    except BaseException:
        pass

def test_case_58():
    try:
        str_0 = '\npIa-7\x0cvY?SjX-{a'
        int_0 = -9
        list_0 = [str_0, int_0, str_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.abs()
        bool_0 = some_price_0.as_boolean()
        price_1 = price_0.__floordiv__(int_0)
        money_0 = some_money_0.positive()
        price_2 = price_0.__add__(price_0)
        bool_1 = some_money_0.gt(money_0)
        bool_2 = some_money_0.gt(money_0)
        bool_3 = some_money_0.lt(money_0)
        money_1 = some_money_0.add(money_0)
        currency_0 = None
        some_price_1 = module_0.SomePrice(*list_0)
        money_2 = money_0.__add__(money_1)
        money_3 = money_2.subtract(money_1)
        money_4 = some_money_0.convert(currency_0)
    except BaseException:
        pass

def test_case_59():
    try:
        str_0 = '\npIa-7\x0cvY?SjX-{a'
        int_0 = -18
        list_0 = [str_0, int_0, str_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.abs()
        price_1 = price_0.__floordiv__(int_0)
        money_0 = some_money_0.positive()
        price_2 = price_0.__add__(price_0)
        bool_0 = some_money_0.gt(money_0)
        money_1 = some_money_0.positive()
        price_3 = price_0.__add__(price_2)
        bool_1 = some_money_0.gt(money_0)
        bool_2 = some_money_0.gt(money_1)
        var_0 = price_3.__round__()
        bool_3 = some_money_0.lt(money_1)
        money_2 = some_money_0.add(money_1)
        currency_0 = None
        int_1 = money_0.__int__()
        some_price_1 = module_0.SomePrice(*list_0)
        money_3 = money_2.__add__(money_2)
        money_4 = money_1.subtract(money_1)
        currency_type_0 = module_1.CurrencyType.CRYPTO
        price_4 = some_price_0.convert(currency_0, currency_type_0)
    except BaseException:
        pass

def test_case_60():
    try:
        str_0 = '\npIa-7\x0cvY?SjX-{a'
        int_0 = -18
        list_0 = [str_0, int_0, str_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.abs()
        price_1 = price_0.__floordiv__(int_0)
        money_0 = some_money_0.positive()
        price_2 = price_0.__add__(price_0)
        bool_0 = some_money_0.gt(money_0)
        bool_1 = some_money_0.gt(money_0)
        bool_2 = some_money_0.lt(money_0)
        currency_0 = None
        int_1 = money_0.__int__()
        some_price_1 = module_0.SomePrice(*list_0)
        money_1 = money_0.__add__(money_0)
        money_2 = money_0.abs()
        money_3 = money_2.subtract(money_2)
        currency_type_0 = module_1.CurrencyType.CRYPTO
        decimal_0 = None
        currency_1 = module_1.Currency(str_0, str_0, int_1, currency_type_0, decimal_0, int_0)
        bool_3 = True
        money_4 = some_money_0.convert(currency_0, bool_3)
    except BaseException:
        pass

def test_case_61():
    try:
        str_0 = '\npIa-7\x0cvY?SjX-{a'
        int_0 = -18
        list_0 = [str_0, int_0, str_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.round()
        bool_0 = price_0.__eq__(some_price_0)
        none_price_0 = module_0.NonePrice()
        price_1 = some_price_0.positive()
        price_2 = none_price_0.subtract(price_1)
        price_3 = price_0.subtract(price_1)
        bool_1 = False
        price_4 = some_price_0.floor_divide(bool_1)
        price_5 = some_price_0.abs()
        money_0 = some_money_0.positive()
        price_6 = price_5.__add__(price_5)
        bool_2 = some_money_0.gt(money_0)
        bool_3 = some_money_0.gt(money_0)
        price_7 = none_price_0.positive()
        bool_4 = price_5.__lt__(price_7)
        bool_5 = some_money_0.lt(money_0)
        int_1 = money_0.__int__()
        some_price_1 = module_0.SomePrice(*list_0)
        monetary_operation_exception_0 = module_0.MonetaryOperationException()
        price_8 = price_0.divide(monetary_operation_exception_0)
    except BaseException:
        pass

def test_case_62():
    try:
        str_0 = '\npIa-7\x0cvY?SjX-{a'
        int_0 = -18
        list_0 = [str_0, int_0, str_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        some_price_0 = module_0.SomePrice(*list_0)
        none_price_0 = module_0.NonePrice()
        price_0 = some_price_0.positive()
        price_1 = price_0.__pos__()
        bool_0 = False
        price_2 = some_price_0.floor_divide(bool_0)
        price_3 = some_price_0.abs()
        money_0 = some_money_0.positive()
        price_4 = price_3.__add__(price_3)
        bool_1 = some_money_0.gt(money_0)
        money_1 = module_0.Money()
        money_2 = money_1.abs()
    except BaseException:
        pass

def test_case_63():
    try:
        str_0 = '\npIa-7\x0cvY?SjX-{a'
        int_0 = -18
        list_0 = [str_0, int_0, str_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.round()
        bool_0 = price_0.__eq__(some_price_0)
        none_price_0 = module_0.NonePrice()
        price_1 = none_price_0.negative()
        price_2 = price_0.subtract(price_1)
        bool_1 = False
        price_3 = some_price_0.floor_divide(bool_1)
        price_4 = some_price_0.abs()
        money_0 = some_money_0.positive()
        price_5 = price_4.__add__(price_4)
        bool_2 = some_money_0.gt(money_0)
        price_6 = price_4.__pos__()
        bool_3 = some_money_0.lt(money_0)
        int_1 = money_0.__int__()
        some_price_1 = module_0.SomePrice(*list_0)
        money_1 = money_0.__add__(money_0)
        money_2 = some_money_0.floor_divide(bool_3)
        money_3 = money_0.subtract(money_1)
        str_1 = "[JcfRt`'-gOi"
        currency_type_0 = module_1.CurrencyType.CRYPTO
        dict_0 = {}
        decimal_0 = module_2.Decimal(**dict_0)
        date_0 = None
        int_2 = 49
        int_3 = -19
        currency_0 = module_1.Currency(str_1, str_1, int_2, currency_type_0, decimal_0, int_3)
        money_4 = some_money_0.convert(currency_0, date_0)
    except BaseException:
        pass

def test_case_64():
    try:
        str_0 = '\npIa-7\x0cvY?SjX-{a'
        int_0 = -18
        list_0 = [str_0, int_0, str_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.round()
        none_price_0 = module_0.NonePrice()
        price_1 = some_price_0.positive()
        price_2 = none_price_0.subtract(price_1)
        price_3 = none_price_0.add(price_2)
        bool_0 = False
        price_4 = some_price_0.floor_divide(bool_0)
        price_5 = some_price_0.abs()
        money_0 = some_money_0.positive()
        price_6 = price_5.__add__(price_5)
        bool_1 = some_money_0.gt(money_0)
        bool_2 = some_money_0.gt(money_0)
        bool_3 = price_5.__lt__(price_5)
        bool_4 = some_money_0.lt(money_0)
        some_price_1 = module_0.SomePrice(*list_0)
        money_1 = money_0.__add__(money_0)
        money_2 = some_money_0.floor_divide(bool_4)
        money_3 = money_0.subtract(money_1)
        currency_type_0 = module_1.CurrencyType.CRYPTO
        dict_0 = {}
        decimal_0 = module_2.Decimal(**dict_0)
        str_1 = '6'
        int_1 = -1516
        int_2 = 174
        currency_0 = module_1.Currency(str_0, str_1, int_1, currency_type_0, decimal_0, int_2)
        int_3 = price_2.__int__()
        money_4 = some_money_0.convert(currency_0)
    except BaseException:
        pass

def test_case_65():
    try:
        str_0 = '\npIa-7\x0cvY?SjX-{a'
        int_0 = -18
        list_0 = [str_0, int_0, str_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.round()
        none_price_0 = module_0.NonePrice()
        price_1 = some_price_0.positive()
        price_2 = price_0.subtract(price_1)
        bool_0 = False
        price_3 = some_price_0.floor_divide(bool_0)
        money_0 = some_money_0.positive()
        price_4 = price_3.__add__(price_3)
        bool_1 = some_money_0.gt(money_0)
        price_5 = price_1.__pos__()
        bool_2 = some_money_0.lt(money_0)
        int_1 = money_0.__int__()
        some_price_1 = module_0.SomePrice(*list_0)
        money_1 = money_0.__add__(money_0)
        money_2 = some_money_0.floor_divide(bool_2)
        money_3 = money_0.subtract(money_1)
        bool_3 = some_price_0.gte(price_3)
        dict_0 = {}
        decimal_0 = module_2.Decimal(**dict_0)
        date_0 = None
        bool_4 = True
        str_1 = ',8`wYgcd\x0c,+i}q^mA<}~'
        str_2 = '}k4uDyMV,,U'
        currency_type_0 = module_1.CurrencyType.METAL
        bool_5 = price_1.__le__(price_1)
        int_2 = 1146
        currency_0 = module_1.Currency(str_1, str_2, int_0, currency_type_0, decimal_0, int_2)
        money_4 = some_money_0.convert(currency_0, date_0, bool_4)
    except BaseException:
        pass

def test_case_66():
    try:
        str_0 = '\npIa-7\x0cvY?SjX-{a'
        int_0 = -24
        list_0 = [str_0, int_0, str_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.abs()
        money_0 = some_money_0.abs()
        none_money_0 = module_0.NoneMoney()
        money_1 = some_money_0.negative()
        bool_0 = some_money_0.gte(money_1)
        price_1 = price_0.negative()
        money_2 = some_money_0.positive()
        price_2 = price_1.subtract(price_1)
        money_3 = some_money_0.positive()
        price_3 = price_0.__add__(price_2)
        bool_1 = some_money_0.gt(money_2)
        bool_2 = some_money_0.gt(money_3)
        price_4 = price_1.scalar_add(price_0)
    except BaseException:
        pass

def test_case_67():
    try:
        money_0 = module_0.Money()
        money_1 = money_0.round()
    except BaseException:
        pass

def test_case_68():
    try:
        list_0 = []
        price_0 = module_0.Price(*list_0)
        price_1 = price_0.round()
    except BaseException:
        pass

def test_case_69():
    try:
        int_0 = 10
        price_0 = module_0.Price()
        price_1 = price_0.__pos__()
        bool_0 = price_1.__bool__()
        str_0 = None
        str_1 = '( :?'
        str_2 = '\npIa-7\x0c:vY?SjX-{a'
        dict_0 = {str_0: int_0, str_1: str_0, str_2: str_0}
        decimal_0 = module_2.Decimal(**dict_0)
    except BaseException:
        pass

def test_case_70():
    try:
        str_0 = '\npIa-\x0cvY?SjX-{a'
        int_0 = -18
        list_0 = [str_0, int_0, str_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.negative()
        bool_0 = price_0.__eq__(some_price_0)
        none_price_0 = module_0.NonePrice()
        price_1 = price_0.subtract(price_0)
        price_2 = some_price_0.abs()
        money_0 = some_money_0.positive()
        price_3 = price_2.__add__(price_2)
        bool_1 = some_money_0.gt(money_0)
        price_4 = price_2.__pos__()
        bool_2 = some_money_0.lt(money_0)
        int_1 = money_0.__int__()
        some_price_1 = module_0.SomePrice(*list_0)
        money_1 = money_0.__add__(money_0)
        money_2 = some_money_0.floor_divide(bool_2)
        money_3 = money_0.subtract(money_1)
        bool_3 = some_price_0.gte(price_3)
        dict_0 = {}
        decimal_0 = module_2.Decimal(**dict_0)
        price_5 = some_price_0.multiply(decimal_0)
        bool_4 = price_5.lt(price_5)
        bool_5 = price_2.__le__(price_1)
        bool_6 = price_3.__lt__(price_0)
        bool_7 = some_money_0.lt(money_2)
        int_2 = money_3.__int__()
        some_price_2 = module_0.SomePrice(*list_0)
        monetary_operation_exception_0 = module_0.MonetaryOperationException(*list_0)
        var_0 = None
        price_6 = price_4.divide(var_0)
    except BaseException:
        pass

def test_case_71():
    try:
        str_0 = '\npIa-7\x0cvY?SjX-{a'
        int_0 = -18
        list_0 = [str_0, int_0, str_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.abs()
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.round()
        bool_0 = price_0.__eq__(some_price_0)
        price_1 = price_0.negative()
        money_1 = some_money_0.positive()
        price_2 = price_0.__add__(price_1)
        money_2 = some_money_0.positive()
        price_3 = price_0.__add__(price_0)
        bool_1 = some_money_0.gt(money_1)
        bool_2 = some_money_0.gt(money_2)
        bool_3 = some_money_0.lt(money_2)
        money_3 = some_money_0.add(money_0)
        int_1 = money_3.__int__()
        money_4 = money_0.__add__(money_3)
        price_4 = module_0.Price()
        bool_4 = price_4.__ge__(price_2)
        money_5 = money_3.subtract(money_0)
        bool_5 = money_2.gte(money_2)
        str_1 = None
        int_2 = 2665
        currency_type_0 = module_1.CurrencyType.ALTERNATIVE
        decimal_0 = None
        int_3 = 12
        str_2 = '[a`!^~m4rd*\n)<hV('
        currency_0 = module_1.Currency(str_2, str_1, int_0, currency_type_0, decimal_0, int_3)
        int_4 = 1448
        currency_1 = module_1.Currency(str_1, str_1, int_2, currency_type_0, decimal_0, int_4)
        price_5 = some_price_0.convert(currency_1)
    except BaseException:
        pass

def test_case_72():
    try:
        int_0 = 29
        price_0 = module_0.Price()
        price_1 = price_0.scalar_subtract(int_0)
    except BaseException:
        pass

def test_case_73():
    try:
        str_0 = '\npIa-7\x0cvY?SjX-{a'
        int_0 = -51
        list_0 = [str_0, int_0, str_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        var_0 = None
        money_0 = module_0.Money()
        money_1 = money_0.scalar_add(var_0)
    except BaseException:
        pass

def test_case_74():
    try:
        price_0 = module_0.Price()
        price_1 = price_0.negative()
    except BaseException:
        pass

def test_case_75():
    try:
        str_0 = '\npIa-\x0cvY?SjX-{a'
        int_0 = -18
        list_0 = [str_0, int_0, str_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.negative()
        bool_0 = price_0.__eq__(some_price_0)
        none_price_0 = module_0.NonePrice()
        price_1 = price_0.subtract(price_0)
        price_2 = some_price_0.abs()
        money_0 = some_money_0.positive()
        price_3 = price_2.__add__(price_2)
        bool_1 = some_money_0.gt(money_0)
        price_4 = price_2.__pos__()
        bool_2 = some_money_0.lt(money_0)
        int_1 = money_0.__int__()
        some_price_1 = module_0.SomePrice(*list_0)
        money_1 = money_0.__add__(money_0)
        money_2 = some_money_0.floor_divide(bool_2)
        money_3 = money_0.subtract(money_1)
        bool_3 = some_price_0.gte(price_3)
        currency_type_0 = module_1.CurrencyType.ALTERNATIVE
        dict_0 = {}
        decimal_0 = module_2.Decimal(**dict_0)
        price_5 = module_0.Price()
        bool_4 = price_5.lt(price_5)
        bool_5 = price_2.__le__(price_1)
        date_0 = None
        bool_6 = False
        money_4 = money_2.negative()
        str_1 = 'P\'4K-[b5"8<\'K>#@4o\''
        bool_7 = price_5.__le__(price_5)
        int_2 = -1855
        currency_0 = module_1.Currency(str_1, str_1, int_0, currency_type_0, decimal_0, int_2)
        bool_8 = money_3.__le__(money_3)
        money_5 = some_money_0.convert(currency_0, date_0, bool_6)
    except BaseException:
        pass

def test_case_76():
    try:
        str_0 = '\npIa-7\x0cvY?SjX-{a'
        int_0 = -24
        list_0 = [str_0, int_0, str_0]
        tuple_0 = ()
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.multiply(tuple_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.abs()
        none_money_1 = module_0.NoneMoney()
        float_0 = price_0.as_float()
        bool_0 = some_money_0.gte(money_0)
        price_1 = price_0.negative()
        money_1 = some_money_0.positive()
        price_2 = price_1.subtract(price_1)
        money_2 = some_money_0.positive()
        price_3 = price_0.__add__(price_2)
        bool_1 = some_money_0.gt(money_1)
        bool_2 = some_money_0.gt(money_2)
        bool_3 = some_money_0.lt(money_2)
        money_3 = some_money_0.add(money_2)
        int_1 = money_1.__int__()
        money_4 = money_3.__add__(money_2)
        bool_4 = price_3.__ge__(price_3)
        money_5 = money_1.subtract(money_3)
        bool_5 = price_2.__eq__(money_1)
        bool_6 = money_4.gte(money_2)
        bool_7 = False
        int_2 = 2665
        currency_type_0 = module_1.CurrencyType.ALTERNATIVE
        decimal_0 = module_2.Decimal()
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_2)
        str_1 = 'e856\x0c,\r"pi8sMnr/QqG-'
        price_4 = price_1.convert(currency_0, str_1, bool_7)
    except BaseException:
        pass

def test_case_77():
    try:
        dict_0 = {}
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.floor_divide(dict_0)
        money_1 = none_money_0.subtract(money_0)
        var_0 = money_1.__round__()
        price_0 = module_0.Price()
        int_0 = price_0.as_integer()
    except BaseException:
        pass

def test_case_78():
    try:
        price_0 = module_0.Price()
        price_1 = price_0.abs()
    except BaseException:
        pass

def test_case_79():
    try:
        price_0 = module_0.Price()
        price_1 = price_0.subtract(price_0)
    except BaseException:
        pass

def test_case_80():
    try:
        price_0 = module_0.Price()
        price_1 = price_0.positive()
    except BaseException:
        pass

def test_case_81():
    try:
        price_0 = module_0.Price()
        bool_0 = price_0.is_equal(price_0)
    except BaseException:
        pass

def test_case_82():
    try:
        str_0 = '\npIa-7\x0cvY?SjX-{'
        int_0 = -24
        list_0 = [str_0, int_0, str_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.abs()
        money_0 = some_money_0.abs()
        none_money_0 = module_0.NoneMoney()
        money_1 = none_money_0.add(money_0)
        bool_0 = some_money_0.gte(money_1)
        price_1 = price_0.negative()
        money_2 = some_money_0.positive()
        price_2 = price_1.subtract(price_1)
        money_3 = some_money_0.positive()
        price_3 = price_0.__add__(price_2)
        bool_1 = some_money_0.gt(money_2)
        bool_2 = some_money_0.gt(money_3)
        bool_3 = some_money_0.lt(money_3)
        money_4 = some_money_0.add(money_3)
        currency_0 = None
        int_1 = money_2.__int__()
        money_5 = some_money_0.with_ccy(currency_0)
        bool_4 = price_3.__ge__(price_3)
        money_6 = money_2.subtract(money_4)
        bool_5 = money_5.gte(money_1)
    except BaseException:
        pass

def test_case_83():
    try:
        money_0 = module_0.Money()
        str_0 = '@e I\x0bcQrWX\x0c'
        list_0 = [str_0]
        bool_0 = money_0.__lt__(money_0)
        dict_0 = {}
        decimal_0 = module_2.Decimal(*list_0, **dict_0)
    except BaseException:
        pass

def test_case_84():
    try:
        money_0 = module_0.Money()
        money_1 = money_0.subtract(money_0)
    except BaseException:
        pass

def test_case_85():
    try:
        price_0 = module_0.Price()
        str_0 = '*Kj{]&>;G?\x0bPN'
        int_0 = None
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = None
        int_1 = 3727
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_1)
        price_1 = price_0.scalar_add(currency_0)
    except BaseException:
        pass

def test_case_86():
    try:
        price_0 = module_0.Price()
        bool_0 = price_0.as_boolean()
    except BaseException:
        pass

def test_case_87():
    try:
        int_0 = -87
        list_0 = [int_0, int_0, int_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.abs()
        money_0 = some_money_0.abs()
        none_money_0 = module_0.NoneMoney()
        bool_0 = some_money_0.gte(money_0)
        price_1 = price_0.negative()
        money_1 = some_money_0.positive()
        price_2 = price_1.subtract(price_1)
        money_2 = some_money_0.positive()
        price_3 = price_0.__add__(price_2)
        bool_1 = some_money_0.gt(money_2)
        bool_2 = some_money_0.lt(money_2)
        float_0 = some_money_0.as_float()
        money_3 = none_money_0.abs()
        currency_0 = None
        int_1 = money_1.__int__()
        money_4 = money_3.__add__(money_2)
        bool_3 = price_3.__ge__(price_3)
        money_5 = money_1.subtract(money_3)
        price_4 = some_price_0.with_ccy(currency_0)
        str_0 = None
        price_5 = price_3.__sub__(price_2)
        currency_type_0 = module_1.CurrencyType.ALTERNATIVE
        bool_4 = some_money_0.lte(money_3)
        bool_5 = price_1.__lt__(price_0)
        decimal_0 = None
        int_2 = 12
        str_1 = 'iy={g'
        int_3 = 1718
        money_6 = money_3.with_ccy(currency_0)
        currency_1 = module_1.Currency(str_1, str_0, int_2, currency_type_0, decimal_0, int_3)
        money_7 = some_money_0.convert(currency_0)
    except BaseException:
        pass

def test_case_88():
    try:
        price_0 = module_0.Price()
        str_0 = '\ngBhcEV2R'
        str_1 = 'Zw-8'
        dict_0 = {str_0: str_0, str_1: str_0, str_0: str_0}
        money_0 = price_0.times(dict_0)
    except BaseException:
        pass

def test_case_89():
    try:
        price_0 = module_0.Price()
        bool_0 = True
        price_1 = price_0.floor_divide(bool_0)
    except BaseException:
        pass

def test_case_90():
    try:
        price_0 = module_0.Price()
        float_0 = price_0.as_float()
    except BaseException:
        pass

def test_case_91():
    try:
        price_0 = module_0.Price()
        bytes_0 = b'Q\x01\x9d\xd7\xba\xc3\xfc'
        none_money_0 = module_0.NoneMoney()
        none_money_1 = None
        price_1 = price_0.__floordiv__(none_money_1)
        price_2 = price_1.scalar_add(bytes_0)
    except BaseException:
        pass

def test_case_92():
    try:
        int_0 = -24
        list_0 = [int_0, int_0, int_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.abs()
        money_0 = some_money_0.abs()
        none_money_0 = module_0.NoneMoney()
        bool_0 = some_money_0.gte(money_0)
        price_1 = price_0.negative()
        money_1 = some_money_0.positive()
        price_2 = price_0.__neg__()
        money_2 = some_money_0.positive()
        price_3 = price_0.__add__(price_2)
        bool_1 = some_money_0.gt(money_2)
        bool_2 = some_money_0.lt(money_2)
        float_0 = some_money_0.as_float()
        money_3 = some_money_0.add(money_2)
        currency_0 = None
        int_1 = money_1.__int__()
        money_4 = money_3.__add__(money_2)
        bool_3 = price_3.__ge__(price_3)
        money_5 = money_1.subtract(money_3)
        price_4 = some_price_0.with_ccy(currency_0)
        str_0 = None
        price_5 = price_3.__sub__(price_2)
        currency_type_0 = module_1.CurrencyType.ALTERNATIVE
        bool_4 = some_money_0.lte(money_3)
        bool_5 = price_1.__lt__(price_0)
        decimal_0 = None
        int_2 = 12
        str_1 = 'iy={g'
        int_3 = 1718
        money_6 = money_3.with_ccy(currency_0)
        currency_1 = module_1.Currency(str_1, str_0, int_2, currency_type_0, decimal_0, int_3)
        money_7 = money_1.add(money_6)
    except BaseException:
        pass

def test_case_93():
    try:
        price_0 = module_0.Price()
        price_1 = price_0.add(price_0)
    except BaseException:
        pass

def test_case_94():
    try:
        int_0 = -87
        list_0 = [int_0, int_0, int_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.abs()
        money_0 = some_money_0.abs()
        none_money_0 = module_0.NoneMoney()
        bool_0 = some_money_0.gte(money_0)
        money_1 = some_money_0.positive()
        price_1 = price_0.subtract(price_0)
        money_2 = some_money_0.positive()
        price_2 = price_0.__add__(price_1)
        bool_1 = some_money_0.gt(money_2)
        bool_2 = some_money_0.lt(money_2)
        float_0 = some_money_0.as_float()
        money_3 = some_money_0.add(money_2)
        currency_0 = None
        int_1 = money_1.__int__()
        money_4 = money_3.__add__(money_2)
        bool_3 = price_2.__ge__(price_2)
        money_5 = money_1.subtract(money_3)
        price_3 = some_price_0.with_ccy(currency_0)
        price_4 = price_2.__sub__(price_1)
        bool_4 = some_money_0.lte(money_3)
        bool_5 = price_3.__lt__(price_0)
    except BaseException:
        pass

def test_case_95():
    try:
        int_0 = -87
        list_0 = [int_0, int_0, int_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.abs()
        none_money_0 = module_0.NoneMoney()
        price_1 = price_0.negative()
        price_2 = price_1.subtract(price_1)
        price_3 = price_0.__add__(price_2)
        currency_0 = None
        bool_0 = price_3.__ge__(price_3)
        price_4 = some_price_0.with_ccy(currency_0)
        price_5 = price_4.__add__(price_2)
    except BaseException:
        pass

def test_case_96():
    try:
        money_0 = module_0.Money()
        bool_0 = money_0.gt(money_0)
        some_price_0 = module_0.SomePrice()
    except BaseException:
        pass

def test_case_97():
    try:
        int_0 = -24
        list_0 = [int_0, int_0, int_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.abs()
        money_0 = some_money_0.abs()
        none_money_0 = module_0.NoneMoney()
        bool_0 = some_money_0.gte(money_0)
        bool_1 = money_0.gt(money_0)
        price_1 = some_price_0.round()
        money_1 = some_money_0.positive()
        price_2 = price_1.subtract(price_1)
        money_2 = some_money_0.positive()
        price_3 = price_0.__add__(price_2)
        bool_2 = some_money_0.lt(money_2)
        float_0 = some_money_0.as_float()
        currency_0 = None
        int_1 = money_1.__int__()
        money_3 = money_1.__add__(money_2)
        bool_3 = price_3.__ge__(price_3)
        bool_4 = price_1.gt(price_2)
        money_4 = money_1.subtract(money_3)
        price_4 = price_3.__sub__(price_2)
        bool_5 = price_2.lte(price_2)
        bool_6 = some_money_0.lte(money_2)
        bool_7 = price_1.__lt__(price_0)
        money_5 = money_2.subtract(money_3)
        price_5 = some_price_0.with_ccy(currency_0)
        bool_8 = price_5.gt(price_3)
    except BaseException:
        pass

def test_case_98():
    try:
        money_0 = module_0.Money()
        money_1 = money_0.__sub__(money_0)
        bool_0 = money_0.as_boolean()
    except BaseException:
        pass