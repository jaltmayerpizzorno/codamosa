# Automatically generated by Pynguin.
import ansible.plugins.action.pause as module_0

def test_case_0():
    try:
        int_0 = 1588
        var_0 = module_0.is_interactive(int_0)
        action_module_0 = None
        ansible_timeout_exceeded_0 = module_0.AnsibleTimeoutExceeded()
        var_1 = module_0.timeout_handler(action_module_0, ansible_timeout_exceeded_0)
    except BaseException:
        pass

def test_case_1():
    try:
        var_0 = module_0.is_interactive()
        list_0 = [var_0, var_0, var_0]
        var_1 = module_0.clear_line(list_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b'\xa72\xebY4'
        ansible_timeout_exceeded_0 = module_0.AnsibleTimeoutExceeded()
        bool_0 = True
        float_0 = -661.0
        bytes_1 = b''
        str_0 = 'level'
        dict_0 = {str_0: bytes_0}
        str_1 = ''
        tuple_0 = (float_0,)
        action_module_0 = module_0.ActionModule(bool_0, float_0, bytes_1, dict_0, str_1, tuple_0)
        var_0 = action_module_0.run(ansible_timeout_exceeded_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'\xa72\xebY4'
        ansible_timeout_exceeded_0 = module_0.AnsibleTimeoutExceeded()
        bool_0 = True
        float_0 = None
        dict_0 = {}
        set_0 = {bytes_0, bool_0}
        list_0 = []
        int_0 = 2041
        dict_1 = {}
        str_0 = '6`v_C#&_#(#&Q^'
        bytes_1 = b'u\xe0\x08]\xa8d\x18\xf6;\xcd\xe9\xe8x\x82'
        str_1 = 'h\\C&'
        action_module_0 = module_0.ActionModule(bytes_1, str_1, dict_1, ansible_timeout_exceeded_0, str_1, bool_0)
        action_module_1 = module_0.ActionModule(list_0, int_0, dict_1, str_0, action_module_0, action_module_0)
        list_1 = [list_0]
        bool_1 = True
        tuple_0 = ()
        tuple_1 = (bool_1, tuple_0)
        str_2 = ' TAY}0A)f/'
        dict_2 = {str_0: action_module_0, str_0: bool_1, str_2: dict_1}
        action_module_2 = module_0.ActionModule(set_0, action_module_1, list_1, tuple_1, dict_2, set_0)
        var_0 = action_module_2.run(float_0, dict_0)
    except BaseException:
        pass