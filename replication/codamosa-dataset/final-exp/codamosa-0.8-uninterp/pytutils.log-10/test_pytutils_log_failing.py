# Automatically generated by Pynguin.
import pytutils.log as module_0

def test_case_0():
    try:
        var_0 = module_0.get_logger()
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = b'\x019\xd2\xd5\xe7\x1e\xd1\x1c'
        var_0 = module_0.configure(bytes_0)
    except BaseException:
        pass

def test_case_2():
    try:
        var_0 = module_0.get_config()
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'a'
        var_0 = module_0.get_config(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        bytes_0 = b'\xecb\xf3'
        set_0 = set()
        py_info_0 = module_0._PyInfo()
        list_0 = [bytes_0, bytes_0, bytes_0]
        str_0 = '6;&E[:65!6934lV4>'
        tuple_0 = (set_0, py_info_0, list_0, str_0)
        float_0 = -1680.81744
        str_1 = '\t0D``_/\x0bBGkG'
        dict_0 = {str_0: py_info_0, str_0: str_1}
        var_0 = module_0.get_config(tuple_0, float_0, dict_0)
        var_1 = module_0.get_logger()
    except BaseException:
        pass

def test_case_5():
    try:
        int_0 = 90
        str_0 = '3H+a|Y3 }6x/Pw'
        var_0 = module_0.get_logger(str_0)
        var_1 = module_0.configure(int_0)
    except BaseException:
        pass

def test_case_6():
    try:
        bytes_0 = b'\xb2T\x8f\x85\x06\x8a\xd4\x93\xde\xf5(\\\x04\xad\xda\xdc'
        set_0 = {bytes_0}
        var_0 = module_0.configure(set_0)
    except BaseException:
        pass