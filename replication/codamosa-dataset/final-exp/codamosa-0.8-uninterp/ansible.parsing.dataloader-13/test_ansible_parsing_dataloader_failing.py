# Automatically generated by Pynguin.
import ansible.parsing.dataloader as module_0

def test_case_0():
    try:
        int_0 = 2357
        dict_0 = {int_0: int_0, int_0: int_0}
        data_loader_0 = module_0.DataLoader()
        var_0 = data_loader_0.path_exists(dict_0)
        data_loader_1 = module_0.DataLoader()
        var_1 = data_loader_1.get_basedir()
        dict_1 = {var_1: data_loader_1, var_1: data_loader_1, data_loader_1: var_1}
        var_2 = data_loader_1.load(dict_1)
    except BaseException:
        pass

def test_case_1():
    try:
        data_loader_0 = module_0.DataLoader()
        str_0 = 'fixtures/test.yml'
        var_0 = data_loader_0.load_from_file(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        data_loader_0 = module_0.DataLoader()
        data_loader_1 = module_0.DataLoader()
        var_0 = data_loader_1.path_exists(data_loader_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = ']?5\nOfS[(UPn!|kSDB\r'
        str_1 = '0v!o'
        data_loader_0 = module_0.DataLoader()
        var_0 = data_loader_0.path_exists(str_1)
        data_loader_1 = module_0.DataLoader()
        var_1 = data_loader_1.is_directory(str_0)
        str_2 = '~vM;\r3IP'
        data_loader_2 = module_0.DataLoader()
        var_2 = data_loader_2.get_real_file(str_2)
    except BaseException:
        pass

def test_case_4():
    try:
        float_0 = -898.0
        data_loader_0 = module_0.DataLoader()
        var_0 = data_loader_0.list_directory(float_0)
    except BaseException:
        pass

def test_case_5():
    try:
        bytes_0 = b'\xd8\xf74\xc8\xd9\xbbs^\x01pgB\x82\x83'
        data_loader_0 = module_0.DataLoader()
        var_0 = data_loader_0.list_directory(bytes_0)
    except BaseException:
        pass

def test_case_6():
    try:
        bytes_0 = b'\xf0Dk\x05M\xc2\xd9\xc8\x81\x08l|\x03#\xe5c'
        data_loader_0 = module_0.DataLoader()
        var_0 = data_loader_0.is_executable(bytes_0)
    except BaseException:
        pass

def test_case_7():
    try:
        data_loader_0 = module_0.DataLoader()
        dict_0 = None
        str_0 = 'B>a'
        var_0 = data_loader_0.path_dwim_relative_stack(str_0, dict_0, str_0)
    except BaseException:
        pass

def test_case_8():
    try:
        int_0 = -2101
        data_loader_0 = module_0.DataLoader()
        var_0 = data_loader_0.get_real_file(int_0)
    except BaseException:
        pass

def test_case_9():
    try:
        bytes_0 = b'w\xc6\xf5\xf3\xe3\xb4\xa6\xf4V'
        data_loader_0 = module_0.DataLoader()
        var_0 = data_loader_0.get_real_file(bytes_0)
    except BaseException:
        pass

def test_case_10():
    try:
        data_loader_0 = module_0.DataLoader()
        dict_0 = {}
        list_0 = [dict_0]
        data_loader_1 = module_0.DataLoader()
        var_0 = data_loader_1.get_real_file(dict_0, list_0)
    except BaseException:
        pass

def test_case_11():
    try:
        complex_0 = None
        bool_0 = False
        dict_0 = {}
        data_loader_0 = module_0.DataLoader()
        var_0 = data_loader_0.path_dwim_relative_stack(complex_0, bool_0, dict_0)
    except BaseException:
        pass

def test_case_12():
    try:
        int_0 = -1521
        bool_0 = False
        bytes_0 = b'v\x19\xe5\xb5\xb7\xa5\xd0<'
        str_0 = 'Wb-\ta@HnRDvry(ox60p'
        str_1 = 'r'
        dict_0 = None
        tuple_0 = (str_1, dict_0)
        tuple_1 = (str_0, tuple_0)
        data_loader_0 = module_0.DataLoader()
        var_0 = data_loader_0.set_basedir(dict_0)
        str_2 = '/etc/passwd'
        float_0 = -1519.2
        tuple_2 = (tuple_1, str_2, float_0, dict_0)
        data_loader_1 = module_0.DataLoader()
        var_1 = data_loader_1.is_file(tuple_2)
        dict_1 = {int_0: bytes_0, bytes_0: bytes_0}
        data_loader_2 = module_0.DataLoader()
        var_2 = data_loader_2.path_dwim_relative_stack(int_0, bool_0, bytes_0, dict_1)
    except BaseException:
        pass

def test_case_13():
    try:
        dict_0 = {}
        data_loader_0 = module_0.DataLoader()
        var_0 = data_loader_0.set_vault_secrets(dict_0)
        bytes_0 = None
        set_0 = {bytes_0, bytes_0}
        str_0 = None
        data_loader_1 = module_0.DataLoader()
        var_1 = data_loader_1.path_dwim_relative_stack(bytes_0, set_0, str_0)
    except BaseException:
        pass

def test_case_14():
    try:
        data_loader_0 = module_0.DataLoader()
        bytes_0 = None
        set_0 = {bytes_0, bytes_0}
        str_0 = 'C8n,>\tFq\nB\x0bw)?*bqp'
        list_0 = [data_loader_0, str_0, str_0]
        var_0 = data_loader_0.path_dwim_relative_stack(str_0, set_0, str_0, list_0)
    except BaseException:
        pass

def test_case_15():
    try:
        data_loader_0 = module_0.DataLoader()
        bytes_0 = b''
        bool_0 = False
        var_0 = data_loader_0.load_from_file(bytes_0, bool_0)
    except BaseException:
        pass

def test_case_16():
    try:
        data_loader_0 = module_0.DataLoader()
        data_loader_1 = module_0.DataLoader()
        str_0 = '/system.slice/containerd.service'
        var_0 = data_loader_1.path_dwim_relative_stack(str_0, data_loader_0, str_0)
    except BaseException:
        pass

def test_case_17():
    try:
        str_0 = "@@S\t1&?5x\t'Bzh"
        data_loader_0 = module_0.DataLoader()
        var_0 = data_loader_0.cleanup_tmp_file(str_0)
        data_loader_1 = module_0.DataLoader()
        bytes_0 = b'|J\xc8)\xe4\xcc\x9a\xbd\xcf\x1ea>\x91\xd4'
        float_0 = 2617.4
        str_1 = '~vM;\r3IP'
        var_1 = data_loader_1.path_dwim_relative_stack(bytes_0, float_0, str_1)
    except BaseException:
        pass

def test_case_18():
    try:
        data_loader_0 = module_0.DataLoader()
        str_0 = '/sk'
        var_0 = data_loader_0.path_dwim_relative(str_0, str_0, str_0)
        bool_0 = True
        var_1 = data_loader_0.cleanup_all_tmp_files()
        var_2 = data_loader_0.cleanup_tmp_file(bool_0)
        data_loader_1 = module_0.DataLoader()
        tuple_0 = ()
        var_3 = data_loader_1.path_exists(tuple_0)
        list_0 = []
        data_loader_2 = module_0.DataLoader()
        var_4 = data_loader_2.is_file(list_0)
        var_5 = data_loader_1.get_real_file(var_0, var_3)
    except BaseException:
        pass

def test_case_19():
    try:
        set_0 = set()
        data_loader_0 = module_0.DataLoader()
        data_loader_1 = module_0.DataLoader()
        var_0 = data_loader_1.cleanup_tmp_file(data_loader_0)
        list_0 = [data_loader_1, set_0, data_loader_1, data_loader_0]
        str_0 = '\x0b'
        str_1 = '~vM;\r3IP'
        data_loader_2 = module_0.DataLoader()
        var_1 = data_loader_2.path_dwim_relative(list_0, str_0, str_1)
        str_2 = '0!GfStTF!V{pK-Q*'
        var_2 = data_loader_0.is_directory(str_2)
        bool_0 = True
        var_3 = data_loader_1.path_exists(bool_0)
    except BaseException:
        pass

def test_case_20():
    try:
        data_loader_0 = module_0.DataLoader()
        str_0 = 'tasks'
        var_0 = data_loader_0.path_dwim_relative(str_0, str_0, str_0)
        dict_0 = {data_loader_0: data_loader_0}
        bytes_0 = b'e\xb9!\\\xddr.\x8c<\xcc\xdf\xc5\x02\xc1b'
        data_loader_1 = module_0.DataLoader()
        var_1 = data_loader_1.path_dwim_relative(str_0, str_0, dict_0, bytes_0)
        bool_0 = True
        var_2 = data_loader_0.cleanup_all_tmp_files()
        var_3 = data_loader_0.cleanup_tmp_file(bool_0)
        data_loader_2 = module_0.DataLoader()
        str_1 = 'oledir'
        list_0 = []
        data_loader_3 = module_0.DataLoader()
        var_4 = data_loader_3.is_file(list_0)
        str_2 = 'rolemain'
        var_5 = data_loader_2.path_dwim_relative(str_1, str_2, str_2)
        str_3 = None
        var_6 = data_loader_2.get_real_file(str_3)
    except BaseException:
        pass

def test_case_21():
    try:
        data_loader_0 = module_0.DataLoader()
        int_0 = 1309
        str_0 = ''
        str_1 = '.\x0bcRE&xKC3<^</t#G|'
        var_0 = data_loader_0.cleanup_tmp_file(str_1)
        dict_0 = {str_0: str_0, str_0: data_loader_0, str_0: str_0, data_loader_0: str_0, str_0: int_0, str_0: str_0, data_loader_0: str_0}
        data_loader_1 = module_0.DataLoader()
        var_1 = data_loader_1.path_dwim_relative(str_0, str_0, int_0, dict_0)
        var_2 = data_loader_0.cleanup_all_tmp_files()
        bool_0 = True
        list_0 = [dict_0, data_loader_1, dict_0, var_2]
        list_1 = [list_0]
        var_3 = data_loader_1.cleanup_all_tmp_files()
        var_4 = data_loader_0.load_from_file(list_1, bool_0)
    except BaseException:
        pass