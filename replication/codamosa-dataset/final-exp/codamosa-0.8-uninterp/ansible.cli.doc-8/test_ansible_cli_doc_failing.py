# Automatically generated by Pynguin.
import ansible.cli.doc as module_0

def test_case_0():
    try:
        plugin_not_found_0 = module_0.PluginNotFound()
        dict_0 = {plugin_not_found_0: plugin_not_found_0, plugin_not_found_0: plugin_not_found_0, plugin_not_found_0: plugin_not_found_0}
        var_0 = module_0.jdump(dict_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bool_0 = False
        doc_c_l_i_0 = module_0.DocCLI(bool_0)
    except BaseException:
        pass

def test_case_2():
    try:
        dict_0 = None
        role_mixin_0 = module_0.RoleMixin()
        doc_c_l_i_0 = module_0.DocCLI(role_mixin_0)
        var_0 = doc_c_l_i_0.display_plugin_list(dict_0)
    except BaseException:
        pass

def test_case_3():
    try:
        role_mixin_0 = module_0.RoleMixin()
        list_0 = [role_mixin_0, role_mixin_0]
        list_1 = [role_mixin_0]
        bool_0 = False
        str_0 = 'sl7@C;-z'
        doc_c_l_i_0 = module_0.DocCLI(str_0)
        list_2 = []
        tuple_0 = (list_1, bool_0, doc_c_l_i_0, list_2)
        doc_c_l_i_1 = module_0.DocCLI(tuple_0)
        var_0 = doc_c_l_i_1.get_all_plugins_of_type(list_0)
    except BaseException:
        pass

def test_case_4():
    try:
        int_0 = 3048
        set_0 = {int_0, int_0}
        doc_c_l_i_0 = module_0.DocCLI(set_0)
        bool_0 = None
        list_0 = [bool_0, set_0]
        plugin_not_found_0 = module_0.PluginNotFound(*list_0)
        float_0 = 189.0
        bool_1 = True
        var_0 = doc_c_l_i_0.format_plugin_doc(set_0, bool_0, bool_0, plugin_not_found_0, float_0, bool_1)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'archiving %s'
        dict_0 = {str_0: str_0}
        float_0 = 592.73392
        doc_c_l_i_0 = module_0.DocCLI(float_0)
        var_0 = doc_c_l_i_0.get_man_text(dict_0)
    except BaseException:
        pass

def test_case_6():
    try:
        bool_0 = False
        str_0 = 'lookup'
        str_1 = 'i{ccRsB"e4rv1t})r%\t'
        doc_c_l_i_0 = module_0.DocCLI(str_1)
        var_0 = doc_c_l_i_0.format_snippet(bool_0, str_0, str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'invetory'
        list_0 = [str_0, str_0, str_0]
        dict_0 = None
        tuple_0 = ()
        role_mixin_0 = module_0.RoleMixin()
        doc_c_l_i_0 = module_0.DocCLI(role_mixin_0)
        doc_c_l_i_1 = module_0.DocCLI(str_0)
        var_0 = doc_c_l_i_1.run()
        int_0 = 1874
        dict_1 = {int_0: list_0, tuple_0: str_0, dict_0: int_0}
        int_1 = -849
        var_1 = doc_c_l_i_1.init_parser()
        doc_c_l_i_2 = module_0.DocCLI(int_1)
        bytes_0 = b'=.\xdf\xcf\xefE0W\xd5\x1bol'
        doc_c_l_i_3 = module_0.DocCLI(list_0)
        plugin_not_found_0 = module_0.PluginNotFound()
        var_2 = doc_c_l_i_3.find_plugins(bytes_0, list_0, bytes_0)
        doc_c_l_i_4 = module_0.DocCLI(int_0)
        var_3 = doc_c_l_i_4.get_role_man_text(bytes_0, dict_1)
    except BaseException:
        pass

def test_case_8():
    try:
        bool_0 = True
        int_0 = -1705
        str_0 = 'RR\tEi@x7q(VgDa"q~n'
        doc_c_l_i_0 = module_0.DocCLI(str_0)
        var_0 = doc_c_l_i_0.get_plugin_metadata(bool_0, int_0)
    except BaseException:
        pass

def test_case_9():
    try:
        bool_0 = True
        dict_0 = {}
        role_mixin_0 = module_0.RoleMixin(**dict_0)
        bytes_0 = b's\xec\x8f\xb4\xdc\xd7\xf6q[\xd8y\x14\xda1\x9d\xcc\xb0'
        doc_c_l_i_0 = module_0.DocCLI(bytes_0)
        var_0 = doc_c_l_i_0.find_plugins(bool_0, dict_0, role_mixin_0)
    except BaseException:
        pass

def test_case_10():
    try:
        dict_0 = None
        tuple_0 = ()
        str_0 = 'k1A4'
        doc_c_l_i_0 = module_0.DocCLI(str_0)
        var_0 = doc_c_l_i_0.run()
        set_0 = set()
        list_0 = []
        bool_0 = True
        str_1 = 'q1-'
        var_1 = doc_c_l_i_0.find_plugins(str_1, set_0, str_1)
        var_2 = module_0.add_collection_plugins(set_0, str_0)
        plugin_not_found_0 = module_0.PluginNotFound()
        str_2 = './%sS'
        str_3 = '8L\\}oY.N\r<\n5&Z4j'
        dict_1 = {str_1: tuple_0, str_0: str_1, str_2: dict_0, str_3: bool_0, str_2: var_1}
        bytes_0 = None
        var_3 = doc_c_l_i_0.add_fields(tuple_0, dict_1, list_0, bytes_0)
    except BaseException:
        pass

def test_case_11():
    try:
        dict_0 = None
        tuple_0 = ()
        str_0 = 'o.'
        doc_c_l_i_0 = module_0.DocCLI(str_0)
        var_0 = doc_c_l_i_0.run()
        set_0 = set()
        list_0 = []
        var_1 = doc_c_l_i_0.add_fields(dict_0, list_0, tuple_0, str_0)
        var_2 = module_0.add_collection_plugins(set_0, str_0)
        float_0 = -2384.9379
        var_3 = doc_c_l_i_0.get_man_text(set_0, float_0)
    except BaseException:
        pass