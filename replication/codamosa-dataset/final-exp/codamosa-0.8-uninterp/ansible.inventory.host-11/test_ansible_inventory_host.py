# Automatically generated by Pynguin.
import ansible.inventory.host as module_0
import ansible.inventory.group as module_1

def test_case_0():
    host_0 = module_0.Host()

def test_case_1():
    host_0 = module_0.Host()
    var_0 = host_0.__getstate__()

def test_case_2():
    float_0 = 962.5
    set_0 = None
    host_0 = module_0.Host()
    var_0 = host_0.__eq__(set_0)
    host_1 = module_0.Host(float_0)
    var_1 = host_1.__str__()

def test_case_3():
    int_0 = 1729
    host_0 = module_0.Host(int_0)
    host_1 = module_0.Host()
    var_0 = host_1.__ne__(host_0)

def test_case_4():
    str_0 = 'attempted to take checksum of directory: %s'
    group_0 = module_1.Group(str_0)
    group_1 = module_1.Group(str_0)
    str_1 = 'localhost'
    host_0 = module_0.Host(str_1)
    var_0 = host_0.__hash__()
    var_1 = host_0.add_group(group_0)
    var_2 = host_0.get_groups()
    var_3 = host_0.remove_group(group_0)

def test_case_5():
    bytes_0 = b'\xc7\xeb`VG\xbc=\x8e\x17<\xfd'
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    float_0 = -868.120482
    set_0 = set()
    tuple_0 = (bytes_0, dict_0, float_0, set_0)
    bytes_1 = b'\xa1\xac\xd68{S\xb1xbSW(Vw\xd2\xb2'
    host_0 = module_0.Host(bytes_1)
    var_0 = host_0.populate_ancestors(tuple_0)

def test_case_6():
    host_0 = module_0.Host()
    group_0 = module_1.Group()
    var_0 = host_0.add_group(group_0)
    group_1 = module_1.Group()
    var_1 = group_0.get_hosts()

def test_case_7():
    bool_0 = True
    host_0 = module_0.Host()
    var_0 = host_0.remove_group(bool_0)

def test_case_8():
    str_0 = ''
    list_0 = [str_0]
    dict_0 = {}
    str_1 = ''
    tuple_0 = (list_0, dict_0, str_1)
    bytes_0 = b'tM\x0b\xe2\xb2\xf0['
    list_1 = [bytes_0, bytes_0]
    bool_0 = True
    host_0 = module_0.Host(list_1, bool_0)
    var_0 = host_0.set_variable(str_0, tuple_0)
    str_2 = "%x~<\rR LSuksg>'FM<3"
    str_3 = 'Uz'
    host_1 = module_0.Host()
    int_0 = -4771
    tuple_1 = (str_3, int_0)
    host_2 = module_0.Host(tuple_1)
    var_1 = host_2.populate_ancestors()
    var_2 = host_2.populate_ancestors(str_2)

def test_case_9():
    str_0 = 'host01'
    host_0 = module_0.Host(str_0)
    str_1 = 'F'
    var_0 = host_0.set_variable(str_0, str_1)
    str_2 = 'answer'
    int_0 = 42
    var_1 = host_0.set_variable(str_2, int_0)
    dict_0 = {str_0: host_0, str_0: str_1}
    var_2 = host_0.remove_group(dict_0)
    str_3 = 'mygroup'
    group_0 = module_1.Group(str_3)
    var_3 = host_0.add_group(group_0)
    var_4 = group_0.serialize()
    var_5 = host_0.serialize()
    host_1 = module_0.Host(str_0)
    var_6 = host_1.deserialize(var_5)
    var_7 = host_1.populate_ancestors()
    var_8 = host_1.get_vars()
    int_1 = 0
    var_9 = host_1.groups[int_1]
    var_10 = host_1.__repr__()

def test_case_10():
    str_0 = 'host01'
    host_0 = module_0.Host(str_0)
    str_1 = 'foo'
    str_2 = 'bar'
    var_0 = host_0.set_variable(str_1, str_2)
    str_3 = 'mygrou6'
    group_0 = module_1.Group(str_3)
    var_1 = host_0.add_group(group_0)
    var_2 = host_0.serialize()
    host_1 = module_0.Host(str_0)
    var_3 = host_1.deserialize(var_2)
    var_4 = host_1.get_vars()
    int_0 = 0
    var_5 = host_1.groups[int_0]

def test_case_11():
    str_0 = 'localhost'
    host_0 = module_0.Host(str_0)
    str_1 = 'all'
    group_0 = module_1.Group(str_1)
    var_0 = host_0.add_group(group_0)
    str_2 = 'test_group_1'
    group_1 = module_1.Group(str_2)
    var_1 = host_0.add_group(group_1)
    str_3 = 'test_group_2'
    group_2 = module_1.Group(str_3)
    var_2 = host_0.add_group(group_2)
    var_3 = host_0.get_magic_vars()

def test_case_12():
    str_0 = '1'
    group_0 = module_1.Group(str_0)
    group_1 = module_1.Group(str_0)
    host_0 = module_0.Host(str_0)
    var_0 = group_0.add_child_group(group_1)
    var_1 = host_0.add_group(group_1)
    var_2 = host_0.remove_group(group_1)

def test_case_13():
    str_0 = 'g1'
    group_0 = module_1.Group(str_0)
    str_1 = 'g2'
    group_1 = module_1.Group(str_1)
    str_2 = 'g3'
    group_2 = module_1.Group(str_2)
    str_3 = 'g4'
    group_3 = module_1.Group(str_3)
    var_0 = group_0.add_child_group(group_2)
    var_1 = group_0.add_child_group(group_3)
    str_4 = 'h1'
    host_0 = module_0.Host(str_4)
    var_2 = host_0.add_group(group_1)
    var_3 = host_0.add_group(group_2)
    var_4 = host_0.add_group(group_3)
    var_5 = len(str_0)
    var_6 = host_0.remove_group(group_3)
    str_5 = 'Host remove group method is OK.\n'
    var_7 = print(str_5)

def test_case_14():
    str_0 = 'top'
    group_0 = module_1.Group(str_0)
    str_1 = '1'
    group_1 = module_1.Group(str_1)
    str_2 = '2'
    group_2 = module_1.Group(str_2)
    str_3 = '3'
    group_3 = module_1.Group(str_3)
    str_4 = 'localhost'
    host_0 = module_0.Host(str_4)
    var_0 = group_1.add_child_group(group_2)
    var_1 = group_1.add_child_group(group_3)
    var_2 = group_0.add_child_group(group_1)
    var_3 = host_0.add_group(group_0)
    var_4 = host_0.add_group(group_2)
    var_5 = host_0.get_groups()
    var_6 = host_0.remove_group(group_2)

def test_case_15():
    host_0 = module_0.Host()
    group_0 = module_1.Group()
    var_0 = host_0.add_group(group_0)
    var_1 = host_0.add_group(group_0)
    group_1 = module_1.Group()
    var_2 = host_0.remove_group(group_1)

def test_case_16():
    str_0 = 'test'
    host_0 = module_0.Host(str_0)
    str_1 = 'test_var'
    str_2 = 'value'
    var_0 = host_0.set_variable(str_1, str_2)
    var_1 = dict(key=str_2)
    var_2 = host_0.set_variable(str_1, var_1)
    var_3 = dict(key=str_2)
    str_3 = 'new_value'
    var_4 = host_0.set_variable(str_1, str_3)
    var_5 = dict(key=str_3)
    var_6 = host_0.set_variable(str_1, var_5)
    var_7 = dict(key=str_3)
    var_8 = dict(key=str_2, test_var=str_0)
    var_9 = host_0.set_variable(str_1, var_8)

def test_case_17():
    host_0 = module_0.Host()
    str_0 = 'test'
    bool_0 = True
    bool_1 = {str_0: bool_0}
    var_0 = host_0.set_variable(str_0, bool_1)
    bool_2 = True
    bool_3 = {str_0: bool_2}
    var_1 = host_0.set_variable(str_0, bool_3)