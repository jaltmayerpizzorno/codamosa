# Automatically generated by Pynguin.
import ansible.inventory.host as module_0
import ansible.inventory.group as module_1

def test_case_0():
    try:
        host_0 = module_0.Host()
        str_0 = 'B1^0Ru42p1C+z\\3,^(['
        host_1 = module_0.Host(str_0)
        var_0 = host_1.__repr__()
        list_0 = [host_0, host_0]
        host_2 = module_0.Host()
        var_1 = host_2.__setstate__(list_0)
    except BaseException:
        pass

def test_case_1():
    try:
        host_0 = module_0.Host()
        bool_0 = False
        dict_0 = {}
        var_0 = host_0.deserialize(dict_0)
        var_1 = host_0.populate_ancestors(bool_0)
    except BaseException:
        pass

def test_case_2():
    try:
        dict_0 = {}
        list_0 = []
        int_0 = 2070
        host_0 = module_0.Host(int_0, int_0)
        var_0 = host_0.set_variable(dict_0, list_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bool_0 = True
        host_0 = module_0.Host(bool_0)
        var_0 = host_0.get_name()
        host_1 = module_0.Host(bool_0)
        var_1 = host_1.serialize()
        var_2 = host_1.populate_ancestors()
        var_3 = host_1.deserialize(bool_0)
    except BaseException:
        pass

def test_case_4():
    try:
        host_0 = module_0.Host()
        str_0 = 'B1^0Ru42p1C+z\\3,^(['
        host_1 = module_0.Host(str_0)
        var_0 = host_1.__repr__()
        var_1 = host_1.get_magic_vars()
        list_0 = [host_0, host_0]
        host_2 = module_0.Host()
        var_2 = host_2.__setstate__(list_0)
    except BaseException:
        pass

def test_case_5():
    try:
        set_0 = set()
        str_0 = 'C=vfT+!\\$ZALkPI(NgtY'
        host_0 = module_0.Host(str_0)
        var_0 = host_0.get_name()
        host_1 = module_0.Host()
        host_2 = module_0.Host()
        var_1 = host_1.populate_ancestors(set_0)
        var_2 = host_1.get_vars()
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'all'
        group_0 = module_1.Group(str_0)
        str_1 = 'test.example.com'
        host_0 = module_0.Host(str_1)
        var_0 = host_0.add_group(group_0)
        str_2 = 'test'
        group_1 = module_1.Group(str_2)
        var_1 = host_0.remove_group(group_1)
        str_3 = 'child_of_all'
        group_2 = module_1.Group(str_3)
        var_2 = group_0.add_child_group(group_2)
        var_3 = host_0.add_group(group_2)
        var_4 = host_0.remove_group(group_2)
        var_5 = host_0.get_groups()
        var_6 = host_0.get_groups()
        str_4 = 'non_child_of_all'
        group_3 = module_1.Group(str_4)
        var_7 = host_0.add
    except BaseException:
        pass