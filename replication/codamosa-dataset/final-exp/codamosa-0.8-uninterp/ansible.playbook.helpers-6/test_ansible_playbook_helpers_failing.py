# Automatically generated by Pynguin.
import ansible.playbook.helpers as module_0

def test_case_0():
    try:
        str_0 = 'includei'
        str_1 = [str_0, str_0, str_0, str_0, str_0]
        var_0 = module_0.load_list_of_blocks(str_1, str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'm<vpV|>;B=M.$(Q(+{%e'
        bool_0 = True
        list_0 = None
        var_0 = module_0.load_list_of_blocks(str_0, bool_0, list_0, str_0, list_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'include'
        str_1 = {str_0: str_0}
        str_2 = [str_1, str_1, str_0, str_0, str_0]
        display_0 = None
        tuple_0 = None
        int_0 = 1906
        str_3 = '--diff'
        bool_0 = False
        var_0 = module_0.load_list_of_blocks(display_0, tuple_0, int_0, str_3, bool_0)
        var_1 = module_0.load_list_of_blocks(str_2, str_2)
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'|G\xf5\xe1\xfe,\x96\x11~c\xaa\xd07I\xc3\x86v\x87'
        str_0 = None
        var_0 = module_0.load_list_of_tasks(bytes_0, str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        list_0 = []
        str_0 = '2X,+920 ]%=4\n+3al'
        var_0 = module_0.load_list_of_roles(list_0, str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        tuple_0 = ()
        list_0 = [tuple_0]
        float_0 = 1153.751
        bool_0 = False
        bytes_0 = b'k\xeeH'
        var_0 = module_0.load_list_of_roles(list_0, float_0, bool_0, bytes_0)
    except BaseException:
        pass

def test_case_6():
    try:
        float_0 = 3746.9838
        str_0 = '\n'
        var_0 = module_0.load_list_of_roles(float_0, str_0, str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        tuple_0 = None
        float_0 = None
        bool_0 = True
        list_0 = [float_0, bool_0, bool_0]
        int_0 = 60
        var_0 = module_0.load_list_of_blocks(list_0, float_0, int_0, tuple_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = 'block'
        str_1 = 'task'
        str_2 = 'include'
        str_3 = 'test1.yml'
        str_4 = {str_2: str_3}
        str_5 = {str_1: str_4}
        str_6 = [str_5]
        str_7 = {str_0: str_6}
        str_8 = 'test4.yml'
        str_9 = {str_2: str_8}
        str_10 = [str_9]
        str_11 = {str_1: str_10}
        str_12 = [str_11]
        str_13 = {str_0: str_12}
        str_14 = {str_2: str_9}
        str_15 = [str_7, str_13, str_14]
        var_0 = module_0.load_list_of_blocks(str_15, str_9)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'block'
        str_1 = 'task'
        str_2 = 'include'
        list_0 = []
        bool_0 = True
        var_0 = module_0.load_list_of_tasks(list_0, bool_0)
        str_3 = {str_2: str_2}
        str_4 = {str_2: str_0}
        str_5 = [str_4, str_1, str_3]
        var_1 = module_0.load_list_of_blocks(str_5, str_0)
    except BaseException:
        pass

def test_case_10():
    try:
        tuple_0 = None
        float_0 = 741.801
        float_1 = None
        var_0 = module_0.load_list_of_blocks(tuple_0, float_0, float_1)
        str_0 = '6QTw;bzCz'
        list_0 = [tuple_0]
        var_1 = module_0.load_list_of_blocks(list_0, str_0)
        bool_0 = True
        list_1 = [float_1, bool_0, bool_0]
        int_0 = 60
        var_2 = module_0.load_list_of_blocks(list_1, float_1, int_0, tuple_0)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = 'includei'
        str_1 = {str_0: str_0}
        str_2 = {str_0: str_0, str_0: str_1}
        str_3 = [str_2, str_2, str_0, str_0, str_0]
        var_0 = module_0.load_list_of_blocks(str_3, str_3)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = {}
        str_1 = [str_0, str_0, str_0, str_0, str_0, str_0]
        var_0 = module_0.load_list_of_blocks(str_1, str_1)
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = 'includei'
        str_1 = {str_0: str_0, str_0: str_0}
        str_2 = [str_1, str_1, str_0, str_0, str_0]
        var_0 = module_0.load_list_of_blocks(str_2, str_2)
    except BaseException:
        pass

def test_case_14():
    try:
        str_0 = 'include'
        str_1 = {str_0: str_0}
        str_2 = [str_1, str_1, str_0, str_0, str_0]
        var_0 = module_0.load_list_of_blocks(str_2, str_2)
    except BaseException:
        pass

def test_case_15():
    try:
        str_0 = 'block'
        str_1 = 'task'
        str_2 = 'include'
        str_3 = 'test2.yml'
        str_4 = {str_2: str_3}
        str_5 = {str_2: str_4}
        str_6 = 'test6.yml'
        str_7 = {str_1: str_6}
        str_8 = [str_7]
        str_9 = {str_0: str_8}
        str_10 = [str_5, str_9, str_9]
        var_0 = None
        var_1 = module_0.load_list_of_blocks(str_10, var_0)
    except BaseException:
        pass

def test_case_16():
    try:
        str_0 = 'block'
        str_1 = 'include'
        str_2 = 'test1.yml'
        str_3 = {str_0: str_2, str_2: str_2, str_1: str_2, str_0: str_0}
        str_4 = {str_1: str_1}
        bool_0 = False
        list_0 = [str_3, str_1, str_4, bool_0]
        set_0 = {str_0}
        bytes_0 = b'\x9e\xe3'
        tuple_0 = (str_0, set_0, bytes_0)
        bool_1 = False
        tuple_1 = (tuple_0, tuple_0, bool_1, tuple_0)
        var_0 = module_0.load_list_of_tasks(list_0, tuple_1, set_0, set_0)
    except BaseException:
        pass

def test_case_17():
    try:
        int_0 = None
        dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: int_0}
        list_0 = [dict_0]
        float_0 = 542.76059
        set_0 = {float_0, int_0}
        var_0 = module_0.load_list_of_blocks(list_0, float_0, set_0)
    except BaseException:
        pass