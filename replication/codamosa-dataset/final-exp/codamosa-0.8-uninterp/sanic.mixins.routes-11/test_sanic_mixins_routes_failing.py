# Automatically generated by Pynguin.
import sanic.mixins.routes as module_0
import pathlib as module_1

def test_case_0():
    try:
        dict_0 = None
        bytes_0 = b'q\xfeHP\xec\x92\xb8.\x1f\xc4\x1f\xefe4\xb6T\x08\xa2'
        route_mixin_0 = module_0.RouteMixin()
        str_0 = 'A\x0c""v\x0bnq;.2[c?$|jGI|'
        route_mixin_1 = module_0.RouteMixin()
        var_0 = route_mixin_1.static(dict_0, bytes_0, route_mixin_0, str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = ':?1YnUJmS3'
        str_1 = 'h\x0bd\\[et>'
        iterable_0 = None
        pure_path_0 = module_1.PurePath()
        route_mixin_0 = module_0.RouteMixin()
        var_0 = route_mixin_0.add_route(str_0, str_1, iterable_0, pure_path_0)
    except BaseException:
        pass

def test_case_2():
    try:
        route_mixin_0 = module_0.RouteMixin()
        str_0 = '/url_root'
        var_0 = route_mixin_0.add_route(str_0, str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bool_0 = False
        str_0 = ''
        route_mixin_0 = module_0.RouteMixin()
        var_0 = route_mixin_0.head(str_0)
        str_1 = 'h'
        str_2 = ';u`WZ^|XE@%u\t'
        route_mixin_1 = module_0.RouteMixin()
        float_0 = 1936.657323
        var_1 = route_mixin_1.post(str_1, str_2)
        list_0 = [bool_0, bool_0]
        var_2 = route_mixin_1.static(route_mixin_1, str_2, float_0, route_mixin_1, list_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'protocol.check_timeouts'
        pure_path_0 = module_1.PurePath()
        str_1 = ',sjK^D2^XrP4jruN`'
        bool_0 = None
        list_0 = [bool_0, bool_0, bool_0, bool_0]
        route_mixin_0 = module_0.RouteMixin(*list_0)
        var_0 = route_mixin_0.add_websocket_route(str_0, str_1, pure_path_0, str_1)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = '\x0cvj'
        list_0 = [str_0, str_0, str_0]
        route_mixin_0 = module_0.RouteMixin(*list_0)
        optional_0 = None
        bool_0 = True
        route_mixin_1 = module_0.RouteMixin()
        var_0 = route_mixin_1.delete(str_0, optional_0, bool_0)
        var_1 = route_mixin_1.websocket(str_0, bool_0)
        list_1 = [str_0, bool_0]
        pure_path_0 = None
        bool_1 = True
        float_0 = -791.9771596979336
        bool_2 = None
        var_2 = route_mixin_0.static(bool_1, pure_path_0, list_1, float_0, bool_2, str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        route_mixin_0 = module_0.RouteMixin()
        str_0 = '8b0$A['
        var_0 = route_mixin_0.add_route(route_mixin_0, str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        bool_0 = True
        str_0 = ';u`WZ^|XE@%u\t'
        route_mixin_0 = module_0.RouteMixin()
        var_0 = route_mixin_0.add_route(bool_0, str_0, str_0)
    except BaseException:
        pass

def test_case_8():
    try:
        route_mixin_0 = module_0.RouteMixin()
        str_0 = ''
        var_0 = route_mixin_0.add_route(str_0, str_0)
    except BaseException:
        pass

def test_case_9():
    try:
        route_mixin_0 = module_0.RouteMixin()
        str_0 = '8u0$A['
        str_1 = ''
        int_0 = None
        bool_0 = False
        var_0 = route_mixin_0.add_route(str_1, str_1, int_0, str_0, bool_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = '.*?>)'
        bool_0 = None
        route_mixin_0 = module_0.RouteMixin()
        var_0 = route_mixin_0.get(str_0, str_0, bool_0)
        str_1 = '{!/[<63'
        var_1 = route_mixin_0.patch(str_1, bool_0, str_1)
        str_2 = 'MZu}MzG5KW(\n(0LX[dxw'
        var_2 = route_mixin_0.put(str_2, bool_0)
        dict_0 = {}
        pure_path_0 = module_1.PurePath(**dict_0)
        pure_path_1 = module_1.PurePath()
        list_0 = [pure_path_1]
        tuple_0 = (list_0, str_2)
        none_type_0 = None
        var_3 = route_mixin_0.add_route(tuple_0, str_2, none_type_0, str_1)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = '\n        Convenience method mapped to ``getall()``.\n        '
        str_1 = '\ttZJ8W97{\\`[t'
        list_0 = [str_0, str_0, str_0, str_1]
        str_2 = '/<__file_uri__:path>'
        str_3 = '*3)"@/~+5W]'
        str_4 = '\n        Initiate new streaming response.\n\n        Nothing is sent until the first send() call on the returned object, and\n        calling this function multiple times will just alter the response to be\n        given.\n        '
        dict_0 = {str_2: str_2, str_2: str_2, str_3: str_3, str_4: str_2}
        route_mixin_0 = module_0.RouteMixin(**dict_0)
        var_0 = route_mixin_0.add_route(str_0, str_1, list_0, str_0)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = '[Gc()K'
        route_mixin_0 = module_0.RouteMixin()
        str_1 = '__file_uri__'
        var_0 = route_mixin_0.add_websocket_route(str_1, str_1, str_0)
    except BaseException:
        pass

def test_case_13():
    try:
        route_mixin_0 = module_0.RouteMixin()
        str_0 = 'uri'
        str_1 = 'methods'
        int_0 = 1
        int_1 = 2
        str_2 = 'strict_slashes'
        var_0 = None
        str_3 = 'name'
        bool_0 = True
        var_1 = route_mixin_0.route(str_0, str_1, int_0, int_1, str_2, var_0, str_3, bool_0)
        str_4 = 'file_or_directory'
        str_5 = 'pattern'
        bool_1 = True
        bool_2 = False
        str_6 = 'host'
        str_7 = 'content_type'
        bool_3 = True
        var_2 = route_mixin_0.static(str_0, str_4, str_5, bool_1, bool_2, bool_2, str_3, str_6, str_2, str_7, bool_3)
    except BaseException:
        pass

def test_case_14():
    try:
        bool_0 = False
        route_mixin_0 = module_0.RouteMixin()
        str_0 = 'l7c'
        set_0 = set()
        str_1 = '[_wqmIibzv1\ro]y'
        str_2 = 'Jj5e3}2&7~v}h'
        var_0 = route_mixin_0.add_websocket_route(set_0, str_0, str_1, bool_0, set_0, str_2, str_0)
    except BaseException:
        pass