# Automatically generated by Pynguin.
import ansible.template.vars as module_0

def test_case_0():
    try:
        var_0 = None
        var_1 = {}
        ansible_j2_vars_0 = module_0.AnsibleJ2Vars(var_0, var_0, var_1)
        str_0 = 'vrs'
        var_2 = ansible_j2_vars_0[str_0]
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = None
        dict_0 = {bytes_0: bytes_0}
        list_0 = []
        str_0 = '/TS'
        ansible_j2_vars_0 = module_0.AnsibleJ2Vars(list_0, str_0)
        var_0 = ansible_j2_vars_0.add_locals(dict_0)
    except BaseException:
        pass

def test_case_2():
    try:
        complex_0 = None
        str_0 = 'u'
        ansible_j2_vars_0 = module_0.AnsibleJ2Vars(str_0, str_0)
        var_0 = ansible_j2_vars_0.__contains__(complex_0)
    except BaseException:
        pass

def test_case_3():
    try:
        float_0 = -1102.15
        tuple_0 = None
        ansible_j2_vars_0 = module_0.AnsibleJ2Vars(float_0, tuple_0)
        var_0 = ansible_j2_vars_0.add_locals(ansible_j2_vars_0)
    except BaseException:
        pass

def test_case_4():
    try:
        bytes_0 = b'\x0c\x07\r\x86jb\xbfw\x19\xcb\x15X\xd8I\x9d\x0cvE\xc9\xad'
        str_0 = '&_\n9'
        ansible_j2_vars_0 = module_0.AnsibleJ2Vars(bytes_0, str_0)
        var_0 = ansible_j2_vars_0.__len__()
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = '!w@X&}>XX}\x0c\rOx]-Z+'
        str_1 = '1oJ;X('
        bool_0 = True
        set_0 = {str_1}
        dict_0 = {str_1: set_0, str_0: str_1}
        ansible_j2_vars_0 = module_0.AnsibleJ2Vars(set_0, set_0, dict_0)
        var_0 = ansible_j2_vars_0.__getitem__(str_0)
        list_0 = [str_0, str_1, str_1, str_0]
        set_1 = None
        ansible_j2_vars_1 = module_0.AnsibleJ2Vars(set_0, set_1)
        str_2 = '5'
        ansible_j2_vars_2 = module_0.AnsibleJ2Vars(str_2, list_0)
        var_1 = ansible_j2_vars_2.add_locals(set_1)
        str_3 = 'Count the number of occurrences of a key in a given dictionary\n\n    :arg terms: String or iterable of values to check\n    :arg parameters: Dictionary of parameters\n\n    :returns: An integer that is the number of occurrences of the terms values\n        in the provided dictionary.\n    '
        float_0 = -1063.19
        ansible_j2_vars_3 = module_0.AnsibleJ2Vars(str_3, float_0, dict_0)
        var_2 = ansible_j2_vars_3.__contains__(str_1)
        var_3 = ansible_j2_vars_3.__contains__(bool_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = '1oJ;('
        int_0 = -1082
        set_0 = {str_0}
        dict_0 = {str_0: set_0, str_0: int_0}
        ansible_j2_vars_0 = module_0.AnsibleJ2Vars(set_0, set_0, dict_0)
        var_0 = ansible_j2_vars_0.__getitem__(str_0)
        float_0 = 0.3264133578682616
        ansible_j2_vars_1 = module_0.AnsibleJ2Vars(str_0, float_0, dict_0)
        bool_0 = True
        var_1 = ansible_j2_vars_1.__contains__(str_0)
        var_2 = ansible_j2_vars_1.__getitem__(bool_0)
    except BaseException:
        pass