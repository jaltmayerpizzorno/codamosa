# Automatically generated by Pynguin.
import ansible.plugins.filter.mathstuff as module_0

def test_case_0():
    pass

def test_case_1():
    str_0 = 'E #C]3K^'
    var_0 = module_0.unique(str_0, str_0)

def test_case_2():
    float_0 = 0.2
    list_0 = []
    list_1 = [list_0]
    var_0 = module_0.symmetric_difference(float_0, list_0, list_1)
    filter_module_0 = module_0.FilterModule()

def test_case_3():
    bytes_0 = b'\x9c6\xb1|\t'
    bytes_1 = b"%\x00'P\r\xabU\xe4p\xdf\xd8|\xde/\x18,\xab\xb0"
    tuple_0 = (bytes_1,)
    str_0 = '2'
    var_0 = module_0.union(bytes_0, tuple_0, str_0)

def test_case_4():
    float_0 = 1371.12
    var_0 = module_0.human_readable(float_0)

def test_case_5():
    filter_module_0 = module_0.FilterModule()
    var_0 = filter_module_0.filters()

def test_case_6():
    int_0 = 1
    int_1 = 2
    int_2 = 4
    int_3 = 6
    int_4 = 8
    int_5 = [int_0, int_1, int_2, int_3, int_4]
    int_6 = 10
    int_7 = 12
    int_8 = [int_1, int_2, int_3, int_6, int_7]
    int_9 = [int_0, int_4, int_6, int_7]
    var_0 = None
    var_1 = module_0.symmetric_difference(var_0, int_5, int_8)
    var_2 = sorted(var_1)
    var_3 = sorted(int_9)

def test_case_7():
    int_0 = 100
    int_1 = 10
    var_0 = module_0.logarithm(int_0, int_1)