# Automatically generated by Pynguin.
import ansible.plugins.filter.mathstuff as module_0

def test_case_0():
    pass

def test_case_1():
    tuple_0 = ()
    str_0 = '1x'
    var_0 = module_0.unique(tuple_0, str_0)

def test_case_2():
    list_0 = []
    str_0 = '@<d=_\x0c-.D['
    tuple_0 = ()
    var_0 = module_0.intersect(list_0, tuple_0, str_0)
    var_1 = module_0.rekey_on_member(list_0, tuple_0)

def test_case_3():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    list_0 = [dict_0, bool_0, dict_0]
    list_1 = [list_0, bool_0]
    var_0 = module_0.difference(dict_0, list_0, list_1)

def test_case_4():
    bool_0 = True
    var_0 = module_0.inversepower(bool_0)

def test_case_5():
    list_0 = []
    tuple_0 = ()
    var_0 = module_0.rekey_on_member(list_0, tuple_0)

def test_case_6():
    bytes_0 = b'\x8b'
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    tuple_0 = (list_0, list_0)
    var_0 = module_0.unique(bytes_0, tuple_0, bytes_0)

def test_case_7():
    complex_0 = None
    list_0 = [complex_0, complex_0, complex_0, complex_0]
    list_1 = [list_0, complex_0, list_0]
    var_0 = module_0.symmetric_difference(list_0, list_0, list_1)
    list_2 = []
    float_0 = -2003.3468808690109
    str_0 = '>L=[urzV1R'
    filter_module_0 = module_0.FilterModule()
    var_1 = module_0.min(float_0, str_0)
    bool_0 = True
    var_2 = module_0.logarithm(bool_0)
    var_3 = filter_module_0.filters()
    filter_module_1 = module_0.FilterModule(*list_2)

def test_case_8():
    int_0 = 1
    var_0 = module_0.logarithm(int_0)
    int_1 = 2
    var_1 = module_0.logarithm(int_0, int_1)
    int_2 = 10
    var_2 = module_0.logarithm(int_1, int_2)