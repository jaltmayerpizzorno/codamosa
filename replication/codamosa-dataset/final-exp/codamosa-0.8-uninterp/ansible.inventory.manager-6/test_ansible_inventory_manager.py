# Automatically generated by Pynguin.
import ansible.inventory.manager as module_0

def test_case_0():
    pass

def test_case_1():
    tuple_0 = ()
    inventory_manager_0 = module_0.InventoryManager(tuple_0)
    var_0 = inventory_manager_0.list_hosts()

def test_case_2():
    float_0 = -228.547
    var_0 = module_0.split_host_pattern(float_0)

def test_case_3():
    bytes_0 = b'\xbc\x05\xfa\x99\x95'
    list_0 = [bytes_0, bytes_0]
    int_0 = 776
    inventory_manager_0 = module_0.InventoryManager(int_0)
    var_0 = inventory_manager_0.subset(list_0)

def test_case_4():
    int_0 = 1514
    str_0 = '/pynguin/8-VM+293@nS\x0b?S4X%F_B'
    tuple_0 = (str_0,)
    set_0 = {int_0, tuple_0, tuple_0, str_0}
    bytes_0 = b'\xfeq\xf9'
    inventory_manager_0 = module_0.InventoryManager(bytes_0)
    var_0 = inventory_manager_0.subset(set_0)

def test_case_5():
    bool_0 = True
    var_0 = module_0.split_host_pattern(bool_0)

def test_case_6():
    int_0 = 0
    str_0 = 'machdep.dmi.system-version'
    inventory_manager_0 = module_0.InventoryManager(int_0, str_0)

def test_case_7():
    str_0 = '\r/M1\x0b<4c85bi\\\x0c-\x0cE0'
    str_1 = "Qqsg?w']U. @$&%s\njIL"
    tuple_0 = ()
    inventory_manager_0 = module_0.InventoryManager(str_1, tuple_0)
    var_0 = inventory_manager_0.list_hosts(str_0)

def test_case_8():
    str_0 = '/bin/zfgrep'
    inventory_manager_0 = module_0.InventoryManager(str_0)

def test_case_9():
    str_0 = 'ansible_shell_type'
    int_0 = -356
    set_0 = {int_0, int_0, int_0, int_0}
    str_1 = 'HzV#\r>|gPyG~ECP86,'
    inventory_manager_0 = module_0.InventoryManager(set_0, str_1)
    var_0 = inventory_manager_0.add_host(str_0)

def test_case_10():
    str_0 = '/bin/zfgrep'
    inventory_manager_0 = module_0.InventoryManager(str_0)
    var_0 = inventory_manager_0.reconcile_inventory()

def test_case_11():
    str_0 = 'localhost,foobar'
    inventory_manager_0 = module_0.InventoryManager(str_0, str_0)
    var_0 = inventory_manager_0.parse_sources()

def test_case_12():
    bytes_0 = b'\xec\xc8\xe7\xa7r)xAT\xf0\x15\x9f\xe2\x05E<\x95'
    str_0 = 'LF-]LcPF SN'
    inventory_manager_0 = module_0.InventoryManager(str_0)
    var_0 = inventory_manager_0.parse_source(bytes_0)

def test_case_13():
    float_0 = 512.0
    str_0 = 'kernel'
    inventory_manager_0 = module_0.InventoryManager(float_0, str_0)
    var_0 = inventory_manager_0.refresh_inventory()

def test_case_14():
    int_0 = -1457
    tuple_0 = ()
    inventory_manager_0 = module_0.InventoryManager(tuple_0)
    var_0 = inventory_manager_0.get_hosts(int_0)

def test_case_15():
    str_0 = 'localhost,'
    inventory_manager_0 = module_0.InventoryManager(str_0, str_0)
    var_0 = inventory_manager_0.parse_sources(inventory_manager_0)
    var_1 = len(str_0)
    var_2 = inventory_manager_0.list_groups()
    str_1 = '\n:$mNq3tb'
    var_3 = inventory_manager_0.subset(str_1)

def test_case_16():
    bytes_0 = b'i\x1d'
    str_0 = ']!\t~'
    inventory_manager_0 = module_0.InventoryManager(bytes_0, str_0)
    int_0 = 502
    var_0 = inventory_manager_0.parse_source(int_0)
    var_1 = inventory_manager_0.remove_restriction()

def test_case_17():
    set_0 = set()
    inventory_manager_0 = module_0.InventoryManager(set_0, set_0)
    var_0 = inventory_manager_0.clear_pattern_cache()
    str_0 = 'a'
    str_1 = '&c'
    str_2 = [str_0, str_1, str_1]
    var_1 = module_0.order_patterns(str_2)
    str_3 = [str_1, str_1]
    var_2 = module_0.order_patterns(str_3)
    str_4 = [str_1, str_3]
    var_3 = module_0.order_patterns(str_4)

def test_case_18():
    str_0 = '\x0b-z?!'
    var_0 = module_0.split_host_pattern(str_0)

def test_case_19():
    int_0 = 86400
    bool_0 = False
    set_0 = {int_0, bool_0}
    int_1 = 69
    inventory_manager_0 = module_0.InventoryManager(set_0)
    var_0 = inventory_manager_0.list_hosts()
    var_1 = inventory_manager_0.get_hosts()
    bool_1 = False
    complex_0 = None
    tuple_0 = (int_1, bool_1, complex_0, set_0)
    tuple_1 = (set_0, tuple_0, complex_0, complex_0)
    inventory_manager_1 = module_0.InventoryManager(tuple_1)
    var_2 = inventory_manager_1.remove_restriction()

def test_case_20():
    float_0 = 2173.25
    list_0 = [float_0, float_0, float_0]
    set_0 = {float_0, float_0}
    str_0 = 'U3]dh'
    inventory_manager_0 = module_0.InventoryManager(str_0, str_0)
    var_0 = inventory_manager_0.remove_restriction()
    var_1 = inventory_manager_0.get_hosts(list_0, set_0)

def test_case_21():
    str_0 = '*\n<'
    dict_0 = None
    list_0 = [dict_0, dict_0, dict_0]
    bool_0 = False
    list_1 = [list_0, bool_0]
    int_0 = 1690
    tuple_0 = (list_1, int_0)
    inventory_manager_0 = module_0.InventoryManager(tuple_0)
    var_0 = inventory_manager_0.get_hosts(str_0)

def test_case_22():
    str_0 = '|WK\rR068m3'
    dict_0 = {}
    bytes_0 = b''
    inventory_manager_0 = module_0.InventoryManager(str_0, dict_0, bytes_0)
    list_0 = [inventory_manager_0]
    set_0 = {inventory_manager_0}
    inventory_manager_1 = module_0.InventoryManager(list_0, bytes_0, set_0)
    var_0 = inventory_manager_1.remove_restriction()

def test_case_23():
    str_0 = '\\s+'
    int_0 = -170
    list_0 = []
    inventory_manager_0 = module_0.InventoryManager(list_0)
    str_1 = '/'
    inventory_manager_1 = module_0.InventoryManager(int_0, str_1)
    var_0 = inventory_manager_1.parse_sources(str_0)
    var_1 = inventory_manager_1.get_hosts()
    dict_0 = None
    var_2 = module_0.split_host_pattern(dict_0)
    str_2 = '_var(able_params'
    inventory_manager_2 = module_0.InventoryManager(str_2)
    int_1 = -496
    var_3 = inventory_manager_2.get_groups_dict()
    var_4 = module_0.split_host_pattern(int_1)
    var_5 = inventory_manager_2.reconcile_inventory()
    var_6 = inventory_manager_1.get_groups_dict()
    var_7 = inventory_manager_2.clear_pattern_cache()
    list_1 = []
    var_8 = inventory_manager_2.subset(list_1)
    var_9 = inventory_manager_2.get_groups_dict()
    str_3 = 'VERSION="(.*)"'
    var_10 = inventory_manager_1.parse_source(str_3)
    var_11 = inventory_manager_2.get_groups_dict()
    bool_0 = False
    tuple_0 = ()
    inventory_manager_3 = module_0.InventoryManager(bool_0, tuple_0)

def test_case_24():
    set_0 = set()
    inventory_manager_0 = module_0.InventoryManager(set_0)
    var_0 = inventory_manager_0.clear_pattern_cache()
    list_0 = []
    var_1 = inventory_manager_0.restrict_to_hosts(list_0)
    str_0 = 'a'
    str_1 = '!b'
    str_2 = '&c'
    str_3 = [str_0, str_1, str_2]
    var_2 = module_0.order_patterns(str_3)
    str_4 = [str_1, str_2]
    var_3 = module_0.order_patterns(str_4)
    str_5 = [str_2, str_1]
    var_4 = module_0.order_patterns(str_5)

def test_case_25():
    var_0 = None
    str_0 = 'localhost,foobar'
    inventory_manager_0 = module_0.InventoryManager(var_0, str_0)
    var_1 = inventory_manager_0.parse_sources()

def test_case_26():
    str_0 = 'ansible_shell_type'
    int_0 = -356
    set_0 = {int_0, int_0, int_0, int_0}
    str_1 = 'HzV#\r>|gPyG~ECP86,'
    inventory_manager_0 = module_0.InventoryManager(set_0, str_1)
    bytes_0 = None
    inventory_manager_1 = module_0.InventoryManager(bytes_0)
    float_0 = 60.0
    dict_0 = {inventory_manager_1: str_0, str_1: int_0, inventory_manager_0: float_0}
    var_0 = inventory_manager_0.subset(dict_0)
    var_1 = inventory_manager_0.add_host(str_0)
    list_0 = [int_0]
    var_2 = inventory_manager_0.get_hosts(list_0)

def test_case_27():
    str_0 = '!b'
    str_1 = '&c'
    str_2 = [str_1, str_0, str_1]
    var_0 = module_0.order_patterns(str_2)
    str_3 = [str_0, str_1]
    var_1 = module_0.order_patterns(str_3)
    str_4 = [str_1, str_0]
    var_2 = module_0.order_patterns(str_4)

def test_case_28():
    str_0 = 'localhost,'
    inventory_manager_0 = module_0.InventoryManager(str_0)
    str_1 = 'localhost'
    var_0 = inventory_manager_0.list_hosts(str_1)

def test_case_29():
    var_0 = None
    str_0 = 'localhost,'
    inventory_manager_0 = module_0.InventoryManager(var_0, str_0)
    var_1 = inventory_manager_0.parse_sources()
    var_2 = inventory_manager_0.list_hosts()
    var_3 = len(var_2)
    var_4 = inventory_manager_0.list_groups()
    inventory_manager_1 = module_0.InventoryManager(var_0, str_0)
    var_5 = inventory_manager_1.list_hosts()
    str_1 = 'localhost,foobar'
    inventory_manager_2 = module_0.InventoryManager(var_0, str_1)