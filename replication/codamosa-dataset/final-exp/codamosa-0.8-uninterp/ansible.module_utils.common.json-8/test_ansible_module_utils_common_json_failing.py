# Automatically generated by Pynguin.
import ansible.module_utils.common.json as module_0

def test_case_0():
    try:
        bool_0 = True
        str_0 = 'OMcY&~<X?"WY%\x0bq'
        set_0 = {str_0}
        dict_0 = {bool_0: str_0, bool_0: set_0, str_0: str_0, bool_0: set_0}
        list_0 = [bool_0, dict_0]
        str_1 = '_"Xcl(y\'A@7\x0c+7z!'
        ansible_j_s_o_n_encoder_0 = module_0.AnsibleJSONEncoder(str_1)
        var_0 = ansible_j_s_o_n_encoder_0.iterencode(list_0)
        bytes_0 = b'\xbd\xb8\x1eA\xa8\x9f7\xdf]]'
        ansible_j_s_o_n_encoder_1 = module_0.AnsibleJSONEncoder(bytes_0)
        var_1 = ansible_j_s_o_n_encoder_1.default(bool_0)
    except BaseException:
        pass

def test_case_1():
    try:
        ansible_j_s_o_n_encoder_0 = module_0.AnsibleJSONEncoder()
        var_0 = ansible_j_s_o_n_encoder_0.default(ansible_j_s_o_n_encoder_0)
    except BaseException:
        pass

def test_case_2():
    try:
        ansible_j_s_o_n_encoder_0 = module_0.AnsibleJSONEncoder()
        var_0 = ansible_j_s_o_n_encoder_0.encode(ansible_j_s_o_n_encoder_0)
    except BaseException:
        pass