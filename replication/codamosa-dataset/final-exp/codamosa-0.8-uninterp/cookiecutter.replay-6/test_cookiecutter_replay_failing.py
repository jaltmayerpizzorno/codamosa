# Automatically generated by Pynguin.
import cookiecutter.replay as module_0

def test_case_0():
    try:
        str_0 = 'C:/Users/zhengyang.song/Documents/replay1'
        var_0 = module_0.load(str_0, str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = 3
        bool_0 = False
        float_0 = 1562.849
        bytes_0 = b'\x1a\xfc4\x03/\x803D\x80\x83\xcaA\x06\xac\xbf'
        str_0 = " t,A%P'6_U0,\tK7]"
        tuple_0 = (int_0, str_0, bytes_0, bool_0)
        var_0 = module_0.dump(bytes_0, float_0, tuple_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b'1\xe2\x1c'
        str_0 = 'RR/ 4<C(,:I}gX:@d'
        var_0 = module_0.dump(bytes_0, str_0, str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        float_0 = None
        str_0 = 'Clone a repo to the current directory.\n\n    :param repo_url: Repo URL of unknown type.\n    :param checkout: The branch, tag or commit ID to checkout after clone.\n    :param clone_to_dir: The directory to clone to.\n                         Defaults to the current directory.\n    :param no_input: Suppress all user prompts when calling via API.\n    :returns: str with path to the new directory of the repository.\n    '
        dict_0 = {str_0: float_0}
        var_0 = module_0.dump(float_0, str_0, dict_0)
    except BaseException:
        pass

def test_case_4():
    try:
        bytes_0 = b'\xd9\xca\x1e2b\xdc\x92\x16j&\xdc\x93\xe6u\x0b\xf8\x88'
        dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
        var_0 = module_0.load(dict_0, dict_0)
    except BaseException:
        pass

def test_case_5():
    try:
        int_0 = -497
        str_0 = "Prompt the user to reply with 'yes' or 'no' (or equivalent values).\n\n    Note:\n      Possible choices are 'true', '1', 'yes', 'y' or 'false', '0', 'no', 'n'\n\n    :param str question: Question to the user\n    :param default_value: Value that will be returned if no input happens\n    "
        bool_0 = False
        var_0 = module_0.dump(str_0, bool_0, int_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'cookiecutter'
        str_1 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
        var_0 = module_0.dump(str_0, str_0, str_1)
        dict_0 = {}
        var_1 = module_0.dump(str_0, str_0, dict_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = '/tmp'
        str_1 = 'test.json'
        var_0 = module_0.load(str_0, str_1)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = 'cookiecutter'
        str_1 = {str_0: str_0}
        var_0 = module_0.dump(str_0, str_0, str_1)
        int_0 = -336
        bytes_0 = b'\xa9\xbc\x05\x9c\x97sh\xb6\xab\xc5\xd83G\x0e"\x8fT\x8b\x93'
        list_0 = [str_0, str_1, str_1, str_0]
        dict_0 = {int_0: str_1, var_0: bytes_0, str_0: list_0}
        var_1 = module_0.dump(str_0, str_0, dict_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'repl6%9y_dir'
        var_0 = module_0.load(str_0, str_0)
    except BaseException:
        pass