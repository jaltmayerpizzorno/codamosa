# Automatically generated by Pynguin.
import ansible.plugins.lookup.sequence as module_0

def test_case_0():
    try:
        lookup_module_0 = module_0.LookupModule()
        str_0 = 'start=5 end=11 stride=2 format=0x%02x'
        var_0 = lookup_module_0.parse_kv_args(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        lookup_module_0 = module_0.LookupModule()
        str_0 = '.C\r+>x$[wO'
        set_0 = {str_0, str_0}
        var_0 = lookup_module_0.run(set_0, lookup_module_0)
    except BaseException:
        pass

def test_case_2():
    try:
        lookup_module_0 = module_0.LookupModule()
        str_0 = 'B'
        var_0 = lookup_module_0.parse_simple_args(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        lookup_module_0 = module_0.LookupModule()
        var_0 = lookup_module_0.reset()
        var_1 = lookup_module_0.sanity_check()
    except BaseException:
        pass

def test_case_4():
    try:
        lookup_module_0 = module_0.LookupModule()
        set_0 = {lookup_module_0, lookup_module_0}
        var_0 = lookup_module_0.run(set_0, lookup_module_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'ansible.windows.win_commnd'
        str_1 = 'D^&z_.7fj;JF(tI'
        lookup_module_0 = module_0.LookupModule(str_1, str_0)
        dict_0 = {}
        var_0 = lookup_module_0.parse_kv_args(dict_0)
        dict_1 = {str_0: str_0}
        lookup_module_1 = module_0.LookupModule(**dict_1)
        var_1 = lookup_module_1.sanity_check()
    except BaseException:
        pass

def test_case_6():
    try:
        lookup_module_0 = module_0.LookupModule()
        str_0 = "4|)\rfSU'"
        int_0 = -22
        var_0 = lookup_module_0.run(str_0, int_0)
    except BaseException:
        pass

def test_case_7():
    try:
        lookup_module_0 = module_0.LookupModule()
        str_0 = '5'
        var_0 = lookup_module_0.parse_simple_args(str_0)
        str_1 = '5-8'
        dict_0 = {}
        var_1 = lookup_module_0.parse_kv_args(dict_0)
        dict_1 = {str_1: lookup_module_0, str_0: str_0, var_0: var_0}
        str_2 = '0U?&ihR\nX-'
        str_3 = 'jC=a]'
        tuple_0 = (str_3, dict_1)
        var_2 = lookup_module_0.run(str_2, tuple_0, **dict_0)
    except BaseException:
        pass

def test_case_8():
    try:
        lookup_module_0 = module_0.LookupModule()
        str_0 = '1-3'
        var_0 = lookup_module_0.parse_simple_args(str_0)
        str_1 = '03-4'
        var_1 = lookup_module_0.parse_simple_args(str_1)
    except BaseException:
        pass