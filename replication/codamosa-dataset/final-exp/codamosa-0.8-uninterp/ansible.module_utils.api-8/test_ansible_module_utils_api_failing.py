# Automatically generated by Pynguin.
import ansible.module_utils.api as module_0

def test_case_0():
    try:
        var_0 = module_0.basic_auth_argument_spec()
        bool_0 = True
        var_1 = module_0.retry(bool_0)
        var_2 = module_0.basic_auth_argument_spec()
        float_0 = -1646.154
        var_3 = module_0.generate_jittered_backoff(float_0)
        set_0 = {var_3}
        int_0 = -2658
        list_0 = [float_0, bool_0, var_2]
        var_4 = module_0.generate_jittered_backoff(list_0, bool_0)
        str_0 = '{0}: {1}'
        var_5 = module_0.retry_with_delays_and_condition(int_0, str_0)
        var_6 = module_0.retry()
        var_7 = module_0.rate_limit_argument_spec()
        var_8 = module_0.rate_limit_argument_spec(set_0)
    except BaseException:
        pass

def test_case_1():
    try:
        float_0 = 1.0
        tuple_0 = (float_0, float_0)
        var_0 = module_0.retry_argument_spec(tuple_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '!D'
        var_0 = module_0.retry_never(str_0)
        bool_0 = False
        var_1 = module_0.retry(bool_0)
        set_0 = {var_0, bool_0}
        var_2 = module_0.basic_auth_argument_spec(set_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'w\xa9\x10T\x18R|'
        str_0 = 'Unknown parameter type: %s'
        var_0 = module_0.rate_limit(bytes_0, str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        int_0 = 3
        int_1 = 60
        var_0 = module_0.generate_jittered_backoff(int_0, int_0, int_1)
        var_1 = next(var_0)
        var_2 = next(var_0)
        var_3 = next(var_0)
        var_4 = next(var_0)
    except BaseException:
        pass