# Automatically generated by Pynguin.
import ansible.parsing.splitter as module_0

def test_case_0():
    try:
        int_0 = 2112
        var_0 = module_0.parse_kv(int_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bool_0 = True
        var_0 = module_0.join_args(bool_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'l x\x0czB"\tG'
        var_0 = module_0.split_args(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        float_0 = 2697.0733444889365
        var_0 = module_0.split_args(float_0)
    except BaseException:
        pass

def test_case_4():
    try:
        bytes_0 = b'Z\xb6\xda3{{\xb4c\xa2\xf9\x1f&\x03\xf8\x03\x04'
        var_0 = module_0.parse_kv(bytes_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = "2b`'&\rE6<L\n%SLe"
        var_0 = module_0.parse_kv(str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = '\n    AnsibleModule tests for basic module utilities\n    '
        var_0 = module_0.parse_kv(str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        bytes_0 = b'\\'
        var_0 = module_0.parse_kv(bytes_0)
        float_0 = 208.36
        var_1 = module_0.parse_kv(float_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = 'Ta8r]\x0c|4%l{%Mm&'
        var_0 = module_0.parse_kv(str_0)
    except BaseException:
        pass