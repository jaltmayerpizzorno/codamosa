# Automatically generated by Pynguin.
import ansible.utils.collection_loader._collection_finder as module_0

def test_case_0():
    try:
        str_0 = 'h'
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder(str_0)
        ansible_collection_loader_0 = module_0._AnsibleCollectionLoader(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'ansible_collections.ansible'
        ansible_collection_root_pkg_loader_0 = module_0._AnsibleCollectionRootPkgLoader(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'c%7eqBZzD.'
        ansible_collection_root_pkg_loader_0 = module_0._AnsibleCollectionRootPkgLoader(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'proxy'
        ansible_collection_n_s_pkg_loader_0 = module_0._AnsibleCollectionNSPkgLoader(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = ',\n)9C<n\r'
        ansible_collection_loader_0 = module_0._AnsibleCollectionLoader(str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'ansible.plugins.inventory.foo'
        ansible_internal_redirect_loader_0 = module_0._AnsibleInternalRedirectLoader(str_0, str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'mycoll.myresource'
        ansible_collection_ref_0 = module_0.AnsibleCollectionRef(str_0, str_0, str_0, str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        ansible_collection_loader_0 = None
        str_0 = 'pytnl3.10'
        bytes_0 = None
        int_0 = -881
        set_0 = {ansible_collection_loader_0}
        ansible_collection_ref_0 = module_0.AnsibleCollectionRef(str_0, bytes_0, int_0, set_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = 'ansible_collections.test.test_pluginS'
        ansible_collection_pkg_loader_base_0 = module_0._AnsibleCollectionPkgLoaderBase(str_0, str_0)
        var_0 = ansible_collection_pkg_loader_base_0.get_filename(str_0)
        var_1 = type(ansible_collection_pkg_loader_base_0)
        int_0 = 2129
        set_0 = {var_1}
        dict_0 = {var_0: set_0, int_0: int_0}
        str_1 = 'rekey'
        ansible_collection_ref_0 = module_0.AnsibleCollectionRef(set_0, dict_0, dict_0, str_1)
    except BaseException:
        pass

def test_case_9():
    try:
        list_0 = []
        str_0 = '$?L3^g2AMD!$'
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder(list_0, str_0)
        ansible_collection_pkg_loader_base_0 = module_0._AnsibleCollectionPkgLoaderBase(ansible_collection_finder_0)
    except BaseException:
        pass

def test_case_10():
    try:
        int_0 = -448
        set_0 = {int_0}
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder(set_0)
        str_0 = 'proxy'
        ansible_collection_n_s_pkg_loader_0 = module_0._AnsibleCollectionNSPkgLoader(str_0)
    except BaseException:
        pass

def test_case_11():
    try:
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
        str_0 = 'ansible.module_utils'
        var_0 = ansible_collection_finder_0.find_module(str_0)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = 'nsible.plugis.inventory.fo'
        ansible_internal_redirect_loader_0 = module_0._AnsibleInternalRedirectLoader(str_0, str_0)
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = 'p}#7{|"s(#]nR'
        ansible_collection_pkg_loader_0 = module_0._AnsibleCollectionPkgLoader(str_0)
    except BaseException:
        pass

def test_case_14():
    try:
        str_0 = '1@;>p8o/4`J*b-9L'
        set_0 = set()
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder(str_0, set_0)
        ansible_collection_n_s_pkg_loader_0 = module_0._AnsibleCollectionNSPkgLoader(ansible_collection_finder_0)
    except BaseException:
        pass

def test_case_15():
    try:
        str_0 = 'mycoll.myresource'
        var_0 = None
        ansible_collection_ref_0 = module_0.AnsibleCollectionRef(str_0, var_0, str_0, str_0)
    except BaseException:
        pass

def test_case_16():
    try:
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
        str_0 = 'anbl'
        var_0 = ansible_collection_finder_0.find_module(str_0)
        str_1 = 'ansible.module_utils'
        var_1 = ansible_collection_finder_0.find_module(str_1)
    except BaseException:
        pass

def test_case_17():
    try:
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
        float_0 = -1572.061
        str_0 = '|gQd[\x0b:<3B&+Zz8T'
        tuple_0 = (float_0, str_0, str_0)
        var_0 = ansible_collection_finder_0.set_playbook_paths(tuple_0)
        ansible_collection_finder_1 = module_0._AnsibleCollectionFinder()
        ansible_collection_loader_0 = module_0._AnsibleCollectionLoader(tuple_0)
    except BaseException:
        pass

def test_case_18():
    try:
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
        str_0 = 'ansible'
        var_0 = ansible_collection_finder_0.find_module(str_0)
    except BaseException:
        pass

def test_case_19():
    try:
        str_0 = 'ansible_collections.test.test_pluginS'
        ansible_collection_pkg_loader_base_0 = module_0._AnsibleCollectionPkgLoaderBase(str_0, str_0)
        var_0 = ansible_collection_pkg_loader_base_0.get_filename(str_0)
        var_1 = type(ansible_collection_pkg_loader_base_0)
        set_0 = {ansible_collection_pkg_loader_base_0, str_0}
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder(set_0)
        ansible_collection_loader_0 = module_0._AnsibleCollectionLoader(str_0, ansible_collection_finder_0)
    except BaseException:
        pass