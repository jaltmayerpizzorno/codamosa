# Automatically generated by Pynguin.
import pytutils.trees as module_0

def test_case_0():
    try:
        tree_0 = module_0.Tree()
        str_0 = '\x0b'
        var_0 = tree_0.__getitem__(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        tree_0 = module_0.Tree()
        var_0 = tree_0.__getitem__(tree_0)
    except BaseException:
        pass

def test_case_2():
    try:
        tree_0 = module_0.Tree()
        bytes_0 = b'\x18(\xab\x1c \xc2&@\x15?\x7f\xf7\x11_\xe8'
        bytes_1 = b'6\xce\x18\x9d\x01o+#'
        var_0 = tree_0.__setitem__(bytes_0, bytes_1, bytes_0)
    except BaseException:
        pass

def test_case_3():
    try:
        var_0 = module_0.tree()
        bytes_0 = b'\xaf\x16\x95\xb0\x0cA'
        registry_tree_0 = module_0.RegistryTree(bytes_0)
    except BaseException:
        pass

def test_case_4():
    try:
        tree_0 = module_0.Tree()
        float_0 = 494.65353
        tree_1 = module_0.Tree(tree_0, tree_0, float_0)
    except BaseException:
        pass

def test_case_5():
    try:
        tree_0 = module_0.Tree()
        list_0 = [tree_0, tree_0]
        tree_1 = module_0.Tree(list_0)
    except BaseException:
        pass

def test_case_6():
    try:
        tree_0 = module_0.Tree()
        str_0 = '\x0b'
        var_0 = tree_0.__getitem__(tree_0, str_0, str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        tree_0 = module_0.Tree()
        str_0 = 'ul'
        dict_0 = None
        float_0 = -681.0118
        bool_0 = False
        tuple_0 = (dict_0, float_0, bool_0, dict_0)
        str_1 = 'n\x0b'
        var_0 = module_0.get_tree_node(str_0, str_0, tuple_0, str_1)
    except BaseException:
        pass