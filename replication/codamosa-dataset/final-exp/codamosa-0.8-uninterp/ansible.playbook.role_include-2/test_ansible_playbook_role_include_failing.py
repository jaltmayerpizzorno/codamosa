# Automatically generated by Pynguin.
import ansible.playbook.role_include as module_0
import ansible.playbook.role as module_1

def test_case_0():
    try:
        bool_0 = True
        bytes_0 = b'lf\xef\xf5-\x7f\xd7'
        set_0 = {bytes_0}
        include_role_0 = module_0.IncludeRole(bytes_0, set_0)
        include_role_1 = module_0.IncludeRole(bool_0, include_role_0)
        var_0 = include_role_1.get_block_list()
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = b'\xef\x13\xca'
        dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
        int_0 = 73
        str_0 = '6ic",\tC8$9s2'
        set_0 = {str_0, str_0, str_0, str_0}
        include_role_0 = module_0.IncludeRole(set_0)
        var_0 = include_role_0.get_block_list(dict_0, int_0)
    except BaseException:
        pass

def test_case_2():
    try:
        set_0 = set()
        list_0 = [set_0, set_0]
        include_role_0 = module_0.IncludeRole()
        var_0 = include_role_0.load(list_0)
    except BaseException:
        pass

def test_case_3():
    try:
        include_role_0 = module_0.IncludeRole()
        var_0 = include_role_0.copy()
        bytes_0 = b'F\xf2\xb0\x82\xe1\xad\x1f\xce\xed\xb8\xb1_\x9b\xe9'
        str_0 = 'K9c2?@Dbp]g{ti<'
        str_1 = 'P\x0chX62bWv{K'
        dict_0 = {str_1: bytes_0, str_1: str_1, str_0: str_0}
        bool_0 = True
        include_role_1 = module_0.IncludeRole()
        var_1 = include_role_1.load(bytes_0, str_0, dict_0, bool_0)
    except BaseException:
        pass

def test_case_4():
    try:
        tuple_0 = ()
        include_role_0 = module_0.IncludeRole()
        set_0 = {include_role_0, include_role_0, include_role_0, tuple_0}
        role_0 = module_1.Role(include_role_0, set_0)
        include_role_1 = module_0.IncludeRole(tuple_0, role_0)
        var_0 = include_role_1.get_include_params()
        include_role_2 = module_0.IncludeRole()
        var_1 = include_role_2.copy()
        str_0 = 'f8 <^``\t5q,:2\n.z^z'
        bytes_0 = b"N/h\xfd\xa4'\x9b\xa7\x82\x18\x8c$\xb2}Q\xf3k\xa4"
        role_1 = None
        int_0 = 649
        str_1 = '\'RRca ")'
        dict_0 = {role_1: str_0, include_role_2: var_1, int_0: str_1, include_role_2: int_0}
        str_2 = 'replace, lineinfile or template'
        role_2 = module_1.Role(role_1, dict_0, str_2)
        var_2 = include_role_2.load(bytes_0, role_2)
    except BaseException:
        pass