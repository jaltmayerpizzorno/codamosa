# Automatically generated by Pynguin.
import pathlib as module_0
import httpie.sessions as module_1
import httpie.cli.dicts as module_2

def test_case_0():
    pass

def test_case_1():
    path_0 = module_0.Path()
    str_0 = "Return a humanized string representation of a number of bytes.\n\n    Assumes `from __future__ import division`.\n\n    >>> humanize_bytes(1)\n    '1 B'\n    >>> humanize_bytes(1024, precision=1)\n    '1.0 kB'\n    >>> humanize_bytes(1024 * 123, precision=1)\n    '123.0 kB'\n    >>> humanize_bytes(1024 * 12342, precision=1)\n    '12.1 MB'\n    >>> humanize_bytes(1024 * 12342, precision=2)\n    '12.05 MB'\n    >>> humanize_bytes(1024 * 1234, precision=2)\n    '1.21 MB'\n    >>> humanize_bytes(1024 * 1234 * 1111, precision=2)\n    '1.31 GB'\n    >>> humanize_bytes(1024 * 1234 * 1111, precision=1)\n    '1.3 GB'\n\n    "
    session_0 = module_1.get_httpie_session(path_0, str_0, str_0, str_0)

def test_case_2():
    str_0 = ''
    session_0 = module_1.Session(str_0)

def test_case_3():
    request_headers_dict_0 = module_2.RequestHeadersDict()
    path_0 = module_0.Path()
    session_0 = module_1.Session(path_0)
    var_0 = session_0.update_headers(request_headers_dict_0)

def test_case_4():
    str_0 = '%{FQ?kWD\txupT'
    dict_0 = {str_0: str_0, str_0: str_0}
    request_headers_dict_0 = module_2.RequestHeadersDict(**dict_0)
    str_1 = 'B'
    session_0 = module_1.Session(str_1)
    var_0 = session_0.update_headers(request_headers_dict_0)

def test_case_5():
    str_0 = 'test'
    session_0 = module_1.Session(str_0)
    var_0 = session_0.remove_cookies(str_0)

def test_case_6():
    str_0 = 'Content-Type'
    str_1 = 'application/json'
    str_2 = 'gzip, deflate, br'
    str_3 = {str_0: str_1, str_1: str_2}
    session_0 = module_1.Session(str_2)
    var_0 = session_0.update_headers(str_3)

def test_case_7():
    str_0 = 'test'
    session_0 = module_1.Session(str_0)
    var_0 = session_0.cookies