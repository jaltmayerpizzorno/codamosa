# Automatically generated by Pynguin.
import tornado.locks as module_0
import builtins as module_1
import datetime as module_2
import tornado.ioloop as module_3

def test_case_0():
    try:
        condition_0 = module_0.Condition()
    except BaseException:
        pass

def test_case_1():
    try:
        lock_0 = module_0.Lock()
        event_0 = module_0.Event()
        event_0.set()
        event_1 = module_0.Event()
        str_0 = event_1.__repr__()
        float_0 = -1653.807
        awaitable_0 = event_1.wait(float_0)
    except BaseException:
        pass

def test_case_2():
    try:
        lock_0 = module_0.Lock()
        none_type_0 = None
        none_type_1 = None
        dict_0 = {}
        releasing_context_manager_0 = module_0._ReleasingContextManager(dict_0)
        releasing_context_manager_0.__exit__(lock_0, none_type_0, none_type_1)
    except BaseException:
        pass

def test_case_3():
    try:
        event_0 = module_0.Event()
        event_0.set()
        releasing_context_manager_0 = module_0._ReleasingContextManager(event_0)
        releasing_context_manager_0.__enter__()
        releasing_context_manager_0.__enter__()
        lock_0 = module_0.Lock()
        awaitable_0 = lock_0.acquire()
    except BaseException:
        pass

def test_case_4():
    try:
        int_0 = -6602
        semaphore_0 = module_0.Semaphore(int_0)
    except BaseException:
        pass

def test_case_5():
    try:
        lock_0 = module_0.Lock()
        awaitable_0 = lock_0.acquire()
    except BaseException:
        pass

def test_case_6():
    try:
        semaphore_0 = module_0.Semaphore()
        semaphore_0.__enter__()
    except BaseException:
        pass

def test_case_7():
    try:
        lock_0 = module_0.Lock()
        lock_0.release()
    except BaseException:
        pass

def test_case_8():
    try:
        event_0 = module_0.Event()
        event_0.set()
        releasing_context_manager_0 = module_0._ReleasingContextManager(event_0)
        releasing_context_manager_0.__enter__()
        releasing_context_manager_0.__enter__()
        lock_0 = module_0.Lock()
        lock_0.__enter__()
    except BaseException:
        pass

def test_case_9():
    try:
        optional_0 = None
        tuple_0 = ()
        lock_0 = module_0.Lock()
        lock_1 = module_0.Lock()
        lock_1.__exit__(optional_0, tuple_0, lock_0)
    except BaseException:
        pass

def test_case_10():
    try:
        event_0 = module_0.Event()
        event_0.clear()
        base_exception_0 = module_1.BaseException()
        traceback_0 = module_1.traceback()
    except BaseException:
        pass

def test_case_11():
    try:
        optional_0 = None
        event_0 = module_0.Event()
        optional_1 = None
        semaphore_0 = module_0.Semaphore()
        semaphore_0.__exit__(optional_0, event_0, optional_1)
    except BaseException:
        pass

def test_case_12():
    try:
        int_0 = 0
        semaphore_0 = module_0.Semaphore(int_0)
        str_0 = semaphore_0.__repr__()
        semaphore_1 = module_0.Semaphore(int_0)
        list_0 = None
        base_exception_0 = module_1.BaseException(*list_0)
    except BaseException:
        pass

def test_case_13():
    try:
        semaphore_0 = module_0.Semaphore()
        semaphore_0.release()
        semaphore_0.release()
        int_0 = 2068
        dict_0 = {}
        timedelta_0 = module_2.timedelta(**dict_0)
        i_o_loop_0 = module_3.IOLoop(**dict_0)
        timedelta_1 = module_2.timedelta()
        condition_0 = module_0.Condition()
        condition_0.notify()
        awaitable_0 = condition_0.wait()
        awaitable_1 = condition_0.wait(timedelta_1)
        condition_0.notify(int_0)
        condition_1 = module_0.Condition()
        str_0 = condition_1.__repr__()
        condition_2 = module_0.Condition()
        tuple_0 = i_o_loop_0.split_fd(int_0)
        condition_3 = module_0.Condition()
        condition_2.notify_all()
        lock_0 = module_0.Lock()
        lock_0.release()
    except BaseException:
        pass

def test_case_14():
    try:
        semaphore_0 = module_0.Semaphore()
        semaphore_0.release()
        semaphore_0.release()
        lock_0 = module_0.Lock()
        str_0 = lock_0.__repr__()
        dict_0 = {}
        i_o_loop_0 = module_3.IOLoop(**dict_0)
        timedelta_0 = module_2.timedelta()
        awaitable_0 = lock_0.acquire(timedelta_0)
        awaitable_1 = lock_0.acquire()
        condition_0 = module_0.Condition()
        condition_1 = module_0.Condition()
        str_1 = condition_1.__repr__()
        condition_2 = module_0.Condition()
        condition_3 = module_0.Condition()
        condition_3.notify_all()
        lock_0.release()
        lock_1 = module_0.Lock()
        lock_2 = module_0.Lock()
        lock_2.release()
    except BaseException:
        pass

def test_case_15():
    try:
        event_0 = module_0.Event()
        event_0.set()
        semaphore_0 = module_0.Semaphore()
        event_0.clear()
        semaphore_0.release()
        event_0.set()
        dict_0 = {}
        event_0.set()
        semaphore_1 = module_0.Semaphore()
        timedelta_0 = module_2.timedelta(**dict_0)
        str_0 = event_0.__repr__()
        i_o_loop_0 = module_3.IOLoop(**dict_0)
        awaitable_0 = event_0.wait(timedelta_0)
        condition_0 = module_0.Condition()
        awaitable_1 = condition_0.wait()
        condition_1 = module_0.Condition()
        str_1 = condition_0.__repr__()
        condition_2 = module_0.Condition()
        condition_0.notify_all()
        lock_0 = module_0.Lock()
        lock_0.release()
    except BaseException:
        pass

def test_case_16():
    try:
        semaphore_0 = module_0.Semaphore()
        semaphore_0.release()
        semaphore_0.release()
        lock_0 = module_0.Lock()
        dict_0 = {}
        timedelta_0 = module_2.timedelta(**dict_0)
        i_o_loop_0 = module_3.IOLoop(**dict_0)
        timedelta_1 = module_2.timedelta()
        condition_0 = module_0.Condition()
        awaitable_0 = lock_0.acquire(timedelta_1)
        condition_0.notify()
        awaitable_1 = condition_0.wait()
        awaitable_2 = lock_0.acquire()
        condition_0.notify()
        condition_1 = module_0.Condition()
        str_0 = condition_0.__repr__()
        condition_2 = module_0.Condition()
        condition_3 = module_0.Condition()
        condition_3.notify_all()
        lock_0.release()
        lock_0.__enter__()
    except BaseException:
        pass

def test_case_17():
    try:
        event_0 = module_0.Event()
        event_0.set()
        semaphore_0 = module_0.Semaphore()
        event_0.clear()
        semaphore_0.release()
        semaphore_0.release()
        event_0.set()
        lock_0 = module_0.Lock()
        str_0 = lock_0.__repr__()
        dict_0 = {}
        event_0.set()
        timedelta_0 = module_2.timedelta(**dict_0)
        str_1 = event_0.__repr__()
        i_o_loop_0 = module_3.IOLoop(**dict_0)
        timedelta_1 = module_2.timedelta()
        awaitable_0 = event_0.wait(timedelta_0)
        condition_0 = module_0.Condition()
        awaitable_1 = lock_0.acquire()
        condition_0.notify()
        awaitable_2 = lock_0.acquire()
        str_2 = lock_0.__repr__()
        condition_0.notify()
        condition_1 = module_0.Condition()
        str_3 = condition_0.__repr__()
        condition_2 = module_0.Condition()
        condition_3 = module_0.Condition()
        condition_3.notify_all()
        lock_0.release()
        condition_4 = module_0.Condition()
        awaitable_3 = condition_1.wait()
        lock_0.__enter__()
    except BaseException:
        pass

def test_case_18():
    try:
        event_0 = module_0.Event()
        event_0.set()
        semaphore_0 = module_0.Semaphore()
        event_0.clear()
        semaphore_0.release()
        semaphore_0.release()
        event_0.set()
        lock_0 = module_0.Lock()
        str_0 = lock_0.__repr__()
        str_1 = semaphore_0.__repr__()
        dict_0 = {}
        event_0.set()
        timedelta_0 = module_2.timedelta(**dict_0)
        str_2 = event_0.__repr__()
        i_o_loop_0 = module_3.IOLoop(**dict_0)
        str_3 = event_0.__repr__()
        awaitable_0 = event_0.wait(timedelta_0)
        condition_0 = module_0.Condition()
        awaitable_1 = lock_0.acquire(timedelta_0)
        condition_0.notify()
        awaitable_2 = condition_0.wait()
        condition_1 = module_0.Condition()
        awaitable_3 = condition_0.wait()
        awaitable_4 = condition_1.wait()
        float_0 = 2200.877
        awaitable_5 = lock_0.acquire(float_0)
        int_0 = 30
        condition_2 = module_0.Condition()
        condition_2.notify(int_0)
        condition_3 = module_0.Condition()
        str_4 = condition_3.__repr__()
        condition_4 = module_0.Condition()
        condition_5 = module_0.Condition()
        condition_4.notify_all()
        lock_1 = module_0.Lock()
        lock_1.release()
    except BaseException:
        pass