# Automatically generated by Pynguin.
import ansible.parsing.yaml.constructor as module_0
import yaml.nodes as module_1
import ansible.parsing.yaml.objects as module_2

def test_case_0():
    try:
        ansible_constructor_0 = module_0.AnsibleConstructor()
        var_0 = ansible_constructor_0.construct_mapping(ansible_constructor_0)
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = 2644
        ansible_constructor_0 = module_0.AnsibleConstructor()
        var_0 = ansible_constructor_0.construct_yaml_str(int_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b'T0yK\xfb'
        bool_0 = False
        ansible_constructor_0 = module_0.AnsibleConstructor(bool_0)
        var_0 = ansible_constructor_0.construct_vault_encrypted_unicode(bytes_0)
    except BaseException:
        pass

def test_case_3():
    try:
        float_0 = -2549.236
        ansible_constructor_0 = module_0.AnsibleConstructor()
        var_0 = ansible_constructor_0.construct_yaml_unsafe(float_0)
    except BaseException:
        pass

def test_case_4():
    try:
        bool_0 = False
        float_0 = 269.7807
        tuple_0 = (bool_0, float_0)
        ansible_constructor_0 = module_0.AnsibleConstructor(tuple_0, tuple_0)
        float_1 = -2280.460037859129
        var_0 = ansible_constructor_0.construct_yaml_unsafe(float_1)
    except BaseException:
        pass

def test_case_5():
    try:
        ansible_constructor_0 = module_0.AnsibleConstructor()
        complex_0 = None
        list_0 = []
        float_0 = 145.571
        set_0 = {complex_0, ansible_constructor_0, float_0}
        mapping_node_0 = module_1.MappingNode(list_0, float_0, set_0)
        var_0 = ansible_constructor_0.construct_mapping(mapping_node_0)
    except BaseException:
        pass

def test_case_6():
    try:
        dict_0 = {}
        ansible_constructor_0 = module_0.AnsibleConstructor()
        var_0 = ansible_constructor_0.construct_yaml_seq(dict_0)
        list_0 = [var_0]
        ansible_mapping_0 = module_2.AnsibleMapping(*list_0, **dict_0)
    except BaseException:
        pass

def test_case_7():
    try:
        ansible_constructor_0 = module_0.AnsibleConstructor()
        list_0 = [ansible_constructor_0, ansible_constructor_0]
        var_0 = ansible_constructor_0.construct_yaml_map(list_0)
        set_0 = None
        dict_0 = {var_0: set_0, var_0: list_0, var_0: set_0, ansible_constructor_0: set_0}
        tuple_0 = ()
        mapping_node_0 = module_1.MappingNode(dict_0, tuple_0)
        var_1 = ansible_constructor_0.construct_yaml_unsafe(mapping_node_0)
    except BaseException:
        pass