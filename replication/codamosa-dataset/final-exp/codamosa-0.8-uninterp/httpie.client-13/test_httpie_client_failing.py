# Automatically generated by Pynguin.
import httpie.client as module_0
import argparse as module_1
import httpie.cli.dicts as module_2
import pathlib as module_3

def test_case_0():
    try:
        request_headers_dict_0 = None
        request_headers_dict_1 = module_0.finalize_headers(request_headers_dict_0)
    except BaseException:
        pass

def test_case_1():
    try:
        namespace_0 = module_1.Namespace()
        request_headers_dict_0 = module_0.make_default_headers(namespace_0)
    except BaseException:
        pass

def test_case_2():
    try:
        namespace_0 = None
        dict_0 = module_0.make_send_kwargs(namespace_0)
    except BaseException:
        pass

def test_case_3():
    try:
        namespace_0 = None
        dict_0 = module_0.make_send_kwargs_mergeable_from_env(namespace_0)
    except BaseException:
        pass

def test_case_4():
    try:
        namespace_0 = module_1.Namespace()
        str_0 = '7;\n\\Q=q\x0cP!C/Nj"'
        str_1 = "[DbVa;'M"
        dict_0 = {str_0: str_0, str_1: str_0, str_0: str_1}
        request_headers_dict_0 = module_2.RequestHeadersDict(**dict_0)
        request_headers_dict_1 = module_0.finalize_headers(request_headers_dict_0)
        request_headers_dict_2 = module_0.finalize_headers(request_headers_dict_1)
        request_headers_dict_3 = module_0.finalize_headers(request_headers_dict_2)
        request_headers_dict_4 = module_0.finalize_headers(request_headers_dict_3)
        dict_1 = module_0.make_request_kwargs(namespace_0, request_headers_dict_4)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'basic'
        dict_0 = {str_0: str_0}
        namespace_0 = module_1.Namespace(**dict_0)
        str_1 = '.H5\\3:A8'
        bool_0 = False
        session_0 = module_0.build_requests_session(bool_0, str_1)
    except BaseException:
        pass

def test_case_6():
    try:
        bool_0 = True
        session_0 = module_0.build_requests_session(bool_0)
        str_0 = 'SoS'
        dict_0 = {str_0: str_0}
        request_headers_dict_0 = module_2.RequestHeadersDict(**dict_0)
        namespace_0 = module_1.Namespace()
        path_0 = module_3.Path(**dict_0)
        iterable_0 = module_0.collect_messages(namespace_0, path_0)
        request_headers_dict_1 = module_2.RequestHeadersDict(iterable_0)
    except BaseException:
        pass

def test_case_7():
    try:
        bool_0 = None
        session_0 = module_0.build_requests_session(bool_0)
        str_0 = 'SoS'
        request_headers_dict_0 = module_2.RequestHeadersDict()
        request_headers_dict_1 = module_0.finalize_headers(request_headers_dict_0)
        dict_0 = {str_0: bool_0, str_0: bool_0}
        request_headers_dict_2 = module_2.RequestHeadersDict(**dict_0)
        request_headers_dict_3 = module_2.RequestHeadersDict()
        str_1 = "The main entry point. Invoke as `http' or `python -m httpie'.\n\n"
        str_2 = module_0.ensure_path_as_is(str_1, str_0)
        namespace_0 = module_1.Namespace()
        request_headers_dict_4 = module_0.finalize_headers(request_headers_dict_2)
        dict_1 = module_0.make_send_kwargs_mergeable_from_env(namespace_0)
    except BaseException:
        pass