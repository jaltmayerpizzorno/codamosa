# Automatically generated by Pynguin.
import ansible.utils.jsonrpc as module_0

def test_case_0():
    try:
        str_0 = '{"jsonrpc": "2.0", "method": "test", "params": [], "id": 1}'
        json_rpc_server_0 = module_0.JsonRpcServer()
        var_0 = json_rpc_server_0.handle_request(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '{"method":"yum_list","id":12345}'
        bytes_0 = b'.\x9b\\/\x96\x98\xda'
        json_rpc_server_0 = module_0.JsonRpcServer()
        var_0 = json_rpc_server_0.register(bytes_0)
        json_rpc_server_1 = module_0.JsonRpcServer()
        var_1 = json_rpc_server_1.handle_request(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        json_rpc_server_0 = module_0.JsonRpcServer()
        var_0 = json_rpc_server_0.internal_error()
    except BaseException:
        pass

def test_case_3():
    try:
        json_rpc_server_0 = module_0.JsonRpcServer()
        str_0 = '{"jsonrpc": "2.0", "method": "return_one_param", "params": ["test", "test"], "id": 1}'
        var_0 = json_rpc_server_0.handle_request(str_0)
        var_1 = json_rpc_server_0.response(json_rpc_server_0)
    except BaseException:
        pass

def test_case_4():
    try:
        json_rpc_server_0 = module_0.JsonRpcServer()
        var_0 = json_rpc_server_0.parse_error()
    except BaseException:
        pass

def test_case_5():
    try:
        json_rpc_server_0 = module_0.JsonRpcServer()
        str_0 = '{"id": 1, "method": "test", "params": [1, 2]}'
        var_0 = json_rpc_server_0.handle_request(str_0)
        str_1 = '{"id": 1, "method": "_test", "params": [1, 2]}'
        var_1 = json_rpc_server_0.handle_request(str_1)
    except BaseException:
        pass

def test_case_6():
    try:
        json_rpc_server_0 = module_0.JsonRpcServer()
        var_0 = json_rpc_server_0.invalid_params()
    except BaseException:
        pass

def test_case_7():
    try:
        json_rpc_server_0 = module_0.JsonRpcServer()
        str_0 = '{"jsonrpc": "2.0", "method": "rpc.lock", "id": 1}'
        var_0 = json_rpc_server_0.handle_request(str_0)
    except BaseException:
        pass