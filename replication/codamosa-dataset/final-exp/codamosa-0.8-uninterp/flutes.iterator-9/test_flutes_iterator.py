# Automatically generated by Pynguin.
import flutes.iterator as module_0

def test_case_0():
    pass

def test_case_1():
    str_0 = 'P[]#'
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.scanr(str_0, dict_0)

def test_case_2():
    bytes_0 = b'\x1dn\xd19\xae\xdaX+\x91\x94\xe2B}'
    lazy_list_0 = module_0.LazyList(bytes_0)
    var_0 = lazy_list_0.__iter__()

def test_case_3():
    int_0 = 10
    var_0 = range(int_0)
    lazy_list_0 = module_0.LazyList(var_0)
    var_1 = list(lazy_list_0)

def test_case_4():
    bool_0 = True
    list_0 = [bool_0]
    range_0 = module_0.Range(*list_0)
    var_0 = range_0.__getitem__(bool_0)

def test_case_5():
    bool_0 = False
    list_0 = [bool_0]
    range_0 = module_0.Range(*list_0)
    iterator_0 = range_0.__iter__()
    var_0 = range_0.__getitem__(bool_0)

def test_case_6():
    int_0 = 106
    list_0 = [int_0, int_0]
    range_0 = module_0.Range(*list_0)
    var_0 = range(int_0)
    lazy_list_0 = module_0.LazyList(var_0)
    var_1 = list(lazy_list_0)

def test_case_7():
    str_0 = "\x0c,Ms=yrK9*H.%L'x_4"
    lazy_list_0 = module_0.LazyList(str_0)
    bool_0 = True
    var_0 = lazy_list_0.__getitem__(bool_0)

def test_case_8():
    bool_0 = False
    str_0 = '.'
    iterator_0 = module_0.split_by(str_0, bool_0, separator=str_0)
    var_0 = list(iterator_0)

def test_case_9():
    int_0 = 3
    var_0 = range(int_0)
    iterator_0 = module_0.chunk(int_0, var_0)
    var_1 = list(iterator_0)

def test_case_10():
    int_0 = 5
    var_0 = range(int_0)
    iterator_0 = module_0.drop(int_0, var_0)
    var_1 = list(iterator_0)

def test_case_11():
    int_0 = 3031
    set_0 = set()
    iterator_0 = module_0.drop(int_0, set_0)
    lazy_list_0 = module_0.LazyList(iterator_0)
    var_0 = list(lazy_list_0)

def test_case_12():
    var_0 = []
    iterator_0 = module_0.drop_until(var_0, var_0)
    var_1 = list(iterator_0)
    str_0 = 'h'
    iterator_1 = module_0.drop_until(str_0, str_0)

def test_case_13():
    int_0 = 4
    int_1 = None
    str_0 = '&7lJ/G'
    int_2 = 1771
    iterable_0 = None
    iterator_0 = module_0.drop(int_2, iterable_0)
    iterator_1 = module_0.drop_until(str_0, iterator_0)
    iterator_2 = module_0.chunk(int_1, iterator_1)
    bool_0 = None
    iterator_3 = module_0.split_by(iterator_2, bool_0)
    var_0 = range(int_0)
    lazy_list_0 = module_0.LazyList(var_0)
    bool_1 = False
    var_1 = lazy_list_0.__getitem__(bool_1)
    var_2 = list(lazy_list_0)

def test_case_14():
    int_0 = 10
    var_0 = range(int_0)
    lazy_list_0 = module_0.LazyList(var_0)
    var_1 = list(lazy_list_0)
    bool_0 = True
    var_2 = lazy_list_0.__getitem__(bool_0)

def test_case_15():
    int_0 = 106
    var_0 = range(int_0)
    lazy_list_0 = module_0.LazyList(var_0)
    var_1 = list(lazy_list_0)
    var_2 = lazy_list_0.__iter__()

def test_case_16():
    int_0 = 10
    var_0 = range(int_0)
    lazy_list_0 = module_0.LazyList(var_0)
    var_1 = list(lazy_list_0)
    var_2 = len(lazy_list_0)
    var_3 = len(lazy_list_0)

def test_case_17():
    bool_0 = True
    str_0 = '.'
    iterator_0 = module_0.split_by(str_0, bool_0, separator=str_0)
    var_0 = list(iterator_0)
    int_0 = 19
    int_1 = 2
    var_1 = lambda x: x % int_1 == int_0
    var_2 = list(iterator_0)
    var_3 = lambda x: x % int_1 == int_0
    var_4 = list(iterator_0)

def test_case_18():
    var_0 = lambda s, x: x + s
    str_0 = 'a'
    str_1 = 'b'
    str_2 = 'c'
    str_3 = 'd'
    str_4 = [str_0, str_1, str_2, str_3]
    var_1 = module_0.scanl(var_0, str_4)
    var_2 = list(var_1)