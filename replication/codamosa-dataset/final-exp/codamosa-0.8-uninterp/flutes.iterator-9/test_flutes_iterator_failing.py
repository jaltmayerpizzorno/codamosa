# Automatically generated by Pynguin.
import flutes.iterator as module_0

def test_case_0():
    try:
        bytes_0 = b'\xf8`\xb0\xb9\xe3\xb9\xb8\x1e'
        tuple_0 = ()
        var_0 = module_0.scanr(bytes_0, tuple_0)
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = 10
        lazy_list_0 = module_0.LazyList(int_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'WS73|=\rBCRn^Tp}sle'
        float_0 = -2526.5193983615964
        lazy_list_0 = module_0.LazyList(str_0)
        var_0 = lazy_list_0.__getitem__(float_0)
    except BaseException:
        pass

def test_case_3():
    try:
        range_0 = module_0.Range()
    except BaseException:
        pass

def test_case_4():
    try:
        set_0 = set()
        int_0 = 2173
        map_list_0 = module_0.MapList(set_0, int_0)
        iterator_0 = map_list_0.__iter__()
    except BaseException:
        pass

def test_case_5():
    try:
        list_0 = None
        list_1 = [list_0, list_0, list_0]
        list_2 = [list_1]
        float_0 = 1329.0
        map_list_0 = module_0.MapList(list_2, float_0)
        int_0 = map_list_0.__len__()
    except BaseException:
        pass

def test_case_6():
    try:
        list_0 = None
        dict_0 = {}
        lazy_list_0 = module_0.LazyList(dict_0)
        var_0 = lazy_list_0.__getitem__(list_0)
    except BaseException:
        pass

def test_case_7():
    try:
        int_0 = 10
        int_1 = 1
        var_0 = int_0 + int_1
        list_0 = [var_0, int_0, int_1, int_0]
        range_0 = module_0.Range(*list_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = 'gQB~%S'
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
        iterator_0 = module_0.split_by(dict_0)
        map_list_0 = module_0.MapList(str_0, str_0)
        int_0 = 512
        set_0 = {int_0}
        var_0 = map_list_0.__getitem__(set_0)
    except BaseException:
        pass

def test_case_9():
    try:
        set_0 = set()
        lazy_list_0 = module_0.LazyList(set_0)
        var_0 = lazy_list_0.__iter__()
        int_0 = -2172
        str_0 = 'D:7AS}(\r\x0cm/J\r'
        str_1 = "_mOl'v"
        dict_0 = {str_0: lazy_list_0, str_0: str_0, str_1: set_0}
        tuple_0 = (dict_0,)
        tuple_1 = (tuple_0,)
        int_1 = -1601
        map_list_0 = module_0.MapList(tuple_1, int_1)
        var_1 = map_list_0.__getitem__(int_0)
    except BaseException:
        pass

def test_case_10():
    try:
        bool_0 = False
        iterator_0 = module_0.split_by(bool_0, bool_0, criterion=bool_0)
        lazy_list_0 = module_0.LazyList(iterator_0)
        var_0 = lazy_list_0.__getitem__(bool_0)
    except BaseException:
        pass

def test_case_11():
    try:
        int_0 = 106
        list_0 = None
        tuple_0 = (list_0,)
        list_1 = [int_0, int_0]
        range_0 = module_0.Range(*list_1)
        int_1 = range_0.__len__()
        var_0 = range_0.__getitem__(tuple_0)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = 'Split by separator'
        str_1 = ' '
        var_0 = lambda x: x == str_1
        iterator_0 = module_0.split_by(str_0, criterion=var_0)
        var_1 = list(iterator_0)
    except BaseException:
        pass

def test_case_13():
    try:
        int_0 = 106
        var_0 = range(int_0)
        lazy_list_0 = module_0.LazyList(var_0)
        var_1 = lazy_list_0.__iter__()
        var_2 = list(lazy_list_0)
        list_0 = [var_2, lazy_list_0, int_0, var_2]
        float_0 = -236.124215
        iterator_0 = module_0.split_by(lazy_list_0, criterion=float_0)
        list_1 = [iterator_0]
        var_3 = module_0.scanr(list_0, list_1, *list_1)
    except BaseException:
        pass

def test_case_14():
    try:
        lazy_list_0 = None
        bool_0 = True
        iterator_0 = module_0.split_by(bool_0, bool_0, criterion=lazy_list_0)
        lazy_list_1 = module_0.LazyList(iterator_0)
        var_0 = lazy_list_1.__getitem__(lazy_list_0)
    except BaseException:
        pass

def test_case_15():
    try:
        set_0 = None
        int_0 = -2754
        dict_0 = {}
        iterator_0 = module_0.chunk(int_0, dict_0)
        lazy_list_0 = module_0.LazyList(iterator_0)
        var_0 = lazy_list_0.__getitem__(set_0)
    except BaseException:
        pass

def test_case_16():
    try:
        int_0 = 956
        str_0 = 'WS73|=\rBCRn^Tp}sle'
        dict_0 = {str_0: int_0}
        lazy_list_0 = module_0.LazyList(dict_0)
        var_0 = lazy_list_0.__iter__()
        float_0 = -2526.5193983615964
        str_1 = 'EK]@z_e,'
        lazy_list_1 = module_0.LazyList(str_1)
        list_0 = [float_0, int_0]
        range_0 = module_0.Range(*list_0)
        int_1 = range_0.__next__()
        bytes_0 = b';\xd9\xce\xe8U\x0c\x16'
        map_list_0 = module_0.MapList(bytes_0, dict_0)
        iterator_0 = map_list_0.__iter__()
        bytes_1 = b'5\x06\xe1\xe6[\x8f\xfd\xbb\xc3\xbe\n\x94\xb7\xa1\x81n\xa1\xa7\x96d'
        var_1 = module_0.scanl(iterator_0, bytes_1, *list_0)
        iterable_0 = None
        lazy_list_2 = module_0.LazyList(iterable_0)
    except BaseException:
        pass

def test_case_17():
    try:
        int_0 = -147
        list_0 = [int_0, int_0]
        range_0 = module_0.Range(*list_0)
        int_1 = range_0.__next__()
    except BaseException:
        pass

def test_case_18():
    try:
        set_0 = None
        int_0 = 1803
        str_0 = 'h9D5>r<].}u'
        dict_0 = {str_0: str_0, str_0: str_0}
        lazy_list_0 = module_0.LazyList(dict_0)
        var_0 = lazy_list_0.__iter__()
        iterator_0 = module_0.chunk(int_0, dict_0)
        lazy_list_1 = module_0.LazyList(iterator_0)
        var_1 = lazy_list_1.__getitem__(set_0)
    except BaseException:
        pass

def test_case_19():
    try:
        int_0 = 5
        iterator_0 = module_0.take(int_0, int_0)
        var_0 = list(iterator_0)
    except BaseException:
        pass

def test_case_20():
    try:
        int_0 = 5
        var_0 = range(int_0)
        iterator_0 = module_0.take(int_0, var_0)
        iterator_1 = module_0.take(int_0, iterator_0)
        var_1 = list(iterator_1)
        var_2 = range(iterator_0)
    except BaseException:
        pass

def test_case_21():
    try:
        int_0 = 0
        int_1 = 1
        int_2 = 2
        int_3 = [int_1, int_2]
        iterator_0 = module_0.drop(int_0, int_3)
        var_0 = list(iterator_0)
        int_4 = [int_1, int_2]
        iterator_1 = module_0.drop(int_2, int_4)
        var_1 = list(iterator_1)
        int_5 = -1
        int_6 = 2
        int_7 = [int_6, int_6]
        iterator_2 = module_0.drop(int_5, int_7)
        var_2 = list(iterator_2)
    except BaseException:
        pass

def test_case_22():
    try:
        str_0 = 'q:'
        iterator_0 = module_0.drop_until(str_0, str_0)
        var_0 = list(iterator_0)
    except BaseException:
        pass

def test_case_23():
    try:
        int_0 = 0
        int_1 = 2
        iterator_0 = module_0.drop(int_0, int_1)
        var_0 = list(iterator_0)
    except BaseException:
        pass

def test_case_24():
    try:
        int_0 = -3
        iterator_0 = module_0.take(int_0, int_0)
        var_0 = list(iterator_0)
    except BaseException:
        pass

def test_case_25():
    try:
        int_0 = 112
        var_0 = range(int_0)
        lazy_list_0 = module_0.LazyList(var_0)
        var_1 = list(lazy_list_0)
        list_0 = [var_1, int_0, var_1]
        float_0 = -236.124215
        iterator_0 = module_0.split_by(lazy_list_0, criterion=float_0)
        list_1 = [int_0, iterator_0]
        var_2 = module_0.scanr(list_0, list_1, *list_1)
    except BaseException:
        pass

def test_case_26():
    try:
        str_0 = ' Split by: '
        bool_0 = True
        str_1 = '.'
        iterator_0 = module_0.split_by(str_0, bool_0, separator=str_1)
        var_0 = list(iterator_0)
        int_0 = 0
        int_1 = 2
        int_2 = 4
        int_3 = [int_0, int_1, int_2, int_1, int_0]
        var_1 = lambda x: x % int_1 == int_0
        iterator_1 = module_0.split_by(int_3, bool_0, criterion=var_1)
        var_2 = list(iterator_1)
    except BaseException:
        pass

def test_case_27():
    try:
        bool_0 = False
        str_0 = '.'
        iterator_0 = module_0.split_by(str_0, bool_0, separator=str_0)
        bytes_0 = b'\x97\xa6\xdeH\xb2u\xac\xb2vV\x8dxG\xb7\xfe'
        lazy_list_0 = module_0.LazyList(bytes_0)
        var_0 = lazy_list_0.__iter__()
        var_1 = list(var_0)
        var_2 = list(iterator_0)
        dict_0 = {}
        var_3 = lazy_list_0.__getitem__(dict_0)
    except BaseException:
        pass

def test_case_28():
    try:
        int_0 = 10
        var_0 = range(int_0)
        lazy_list_0 = module_0.LazyList(var_0)
        var_1 = lazy_list_0[int_0:]
        var_2 = range(int_0)
        var_3 = list(var_2)
        var_4 = range(int_0)
        var_5 = list(var_4)
        var_6 = range(var_1)
    except BaseException:
        pass

def test_case_29():
    try:
        int_0 = -1378
        iterator_0 = None
        iterator_1 = module_0.drop(int_0, iterator_0)
        var_0 = []
        iterator_2 = module_0.drop_until(var_0, var_0)
        int_1 = 596
        dict_0 = {iterator_2: int_1, iterator_2: int_1, int_1: int_1}
        iterable_0 = None
        iterator_3 = module_0.chunk(int_0, iterable_0)
        bool_0 = False
        list_0 = [int_0, int_0, int_1]
        iterable_1 = None
        iterator_4 = module_0.split_by(iterable_1, separator=iterator_3)
        range_0 = module_0.Range(*list_0)
        var_1 = range_0.__getitem__(bool_0)
        var_2 = list(iterator_2)
        list_1 = [dict_0, iterable_0, iterable_0]
        iterator_5 = module_0.split_by(dict_0, criterion=list_1)
        float_0 = -628.2
        var_3 = range_0.__getitem__(float_0)
        iterator_6 = module_0.take(int_1, iterable_0)
        var_4 = list(iterator_6)
    except BaseException:
        pass