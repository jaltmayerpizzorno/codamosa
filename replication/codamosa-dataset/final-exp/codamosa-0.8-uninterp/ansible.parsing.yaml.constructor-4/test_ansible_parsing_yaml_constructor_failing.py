# Automatically generated by Pynguin.
import ansible.parsing.yaml.constructor as module_0
import ansible.parsing.vault as module_1
import yaml.nodes as module_2
import ansible.parsing.yaml.objects as module_3

def test_case_0():
    try:
        ansible_constructor_0 = module_0.AnsibleConstructor()
        var_0 = ansible_constructor_0.construct_mapping(ansible_constructor_0)
    except BaseException:
        pass

def test_case_1():
    try:
        float_0 = 886.0
        ansible_constructor_0 = module_0.AnsibleConstructor()
        var_0 = ansible_constructor_0.construct_yaml_map(float_0)
        dict_0 = {}
        ansible_constructor_1 = module_0.AnsibleConstructor()
        var_1 = ansible_constructor_1.construct_yaml_seq(dict_0)
        set_0 = set()
        var_2 = ansible_constructor_1.construct_yaml_str(set_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '.Y6'
        ansible_constructor_0 = module_0.AnsibleConstructor()
        var_0 = ansible_constructor_0.construct_vault_encrypted_unicode(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'w\x89L\x12\x93\xb8J8\x86\xa7&\xc16\x9c'
        ansible_constructor_0 = module_0.AnsibleConstructor()
        var_0 = ansible_constructor_0.construct_yaml_unsafe(bytes_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'B}?;Dh\\kH)"'
        ansible_constructor_0 = module_0.AnsibleConstructor()
        vault_lib_0 = module_1.VaultLib()
        set_0 = set()
        mapping_node_0 = module_2.MappingNode(vault_lib_0, set_0)
        var_0 = ansible_constructor_0.construct_mapping(mapping_node_0, str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        dict_0 = None
        ansible_sequence_0 = module_3.AnsibleSequence()
        dict_1 = {dict_0: dict_0}
        ansible_constructor_0 = module_0.AnsibleConstructor(dict_1)
        var_0 = ansible_constructor_0.construct_yaml_seq(ansible_sequence_0)
        ansible_constructor_1 = module_0.AnsibleConstructor()
        float_0 = 762.791
        var_1 = ansible_constructor_0.construct_yaml_seq(float_0)
        list_0 = []
        list_1 = [var_0, ansible_constructor_1, list_0]
        mapping_node_0 = module_2.MappingNode(ansible_sequence_0, list_1)
        var_2 = ansible_constructor_0.construct_vault_encrypted_unicode(mapping_node_0)
    except BaseException:
        pass