# Automatically generated by Pynguin.
import sanic.headers as module_0

def test_case_0():
    pass

def test_case_1():
    str_0 = 'form-data; name=upload; filename="file.txt"'
    tuple_0 = module_0.parse_content_header(str_0)

def test_case_2():
    str_0 = '"R0}N:i\\X*'
    tuple_0 = module_0.parse_content_header(str_0)
    str_1 = '$AF'
    str_2 = module_0.fwd_normalize_address(str_1)

def test_case_3():
    str_0 = 'expect'
    str_1 = module_0.fwd_normalize_address(str_0)

def test_case_4():
    str_0 = '_'
    tuple_0 = module_0.parse_host(str_0)

def test_case_5():
    str_0 = 'qYe'
    tuple_0 = module_0.parse_host(str_0)

def test_case_6():
    str_0 = 'prto'
    str_1 = (str_0, str_0)
    str_2 = [str_1, str_1, str_1, str_1]
    dict_0 = module_0.fwd_normalize(str_2)

def test_case_7():
    str_0 = '.y'
    str_1 = (str_0, str_0)
    str_2 = 'prto'
    str_3 = (str_2, str_1)
    str_4 = 'port'
    str_5 = (str_4, str_0)
    str_6 = [str_1, str_3, str_5, str_5]
    dict_0 = module_0.fwd_normalize(str_6)

def test_case_8():
    str_0 = 'nknown'
    str_1 = module_0.fwd_normalize_address(str_0)
    var_0 = print(str_1)
    str_2 = '_fake_'
    str_3 = module_0.fwd_normalize_address(str_2)
    var_1 = print(str_3)
    var_2 = print(str_2)
    str_4 = '::1'
    str_5 = module_0.fwd_normalize_address(str_4)
    var_3 = print(str_5)
    str_6 = '[::1]'
    str_7 = module_0.fwd_normalize_address(str_6)
    var_4 = print(str_7)