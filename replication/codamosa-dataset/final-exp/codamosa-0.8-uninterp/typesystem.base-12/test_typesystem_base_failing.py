# Automatically generated by Pynguin.
import typesystem.base as module_0

def test_case_0():
    try:
        str_0 = '=d?l,PJkrar"1oj'
        int_0 = 2
        int_1 = -2731
        position_0 = module_0.Position(int_0, int_1, int_0)
        message_0 = module_0.Message(text=str_0, position=position_0)
        str_1 = message_0.__repr__()
        base_error_0 = module_0.BaseError()
    except BaseException:
        pass

def test_case_1():
    try:
        validation_result_0 = None
        int_0 = 5
        position_0 = module_0.Position(int_0, int_0, int_0)
        str_0 = validation_result_0.__repr__()
        str_1 = position_0.__repr__()
        str_2 = position_0.__repr__()
        parse_error_0 = module_0.ParseError(position=validation_result_0)
    except BaseException:
        pass

def test_case_2():
    try:
        validation_result_0 = module_0.ValidationResult()
        str_0 = validation_result_0.__repr__()
        message_0 = module_0.Message(text=str_0, code=str_0, key=str_0)
        list_0 = [message_0]
        base_error_0 = module_0.BaseError(key=str_0, messages=list_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = None
        validation_error_0 = module_0.ValidationError(code=str_0, key=str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'sZsWS&Wq'
        message_0 = module_0.Message(text=str_0, key=str_0)
        int_0 = None
        int_1 = -2199
        position_0 = module_0.Position(int_0, int_1, int_1)
        list_0 = [message_0, message_0]
        parse_error_0 = module_0.ParseError(position=position_0, messages=list_0)
    except BaseException:
        pass

def test_case_5():
    try:
        validation_result_0 = module_0.ValidationResult()
        validation_error_0 = None
        str_0 = None
        bytes_0 = b''
        tuple_0 = (validation_result_0, validation_error_0, str_0, bytes_0)
        int_0 = 2557
        position_0 = module_0.Position(int_0, int_0, int_0)
        bool_0 = position_0.__eq__(tuple_0)
        int_1 = 2
        int_2 = -1576
        int_3 = 1
        position_1 = module_0.Position(int_1, int_2, int_3)
        base_error_0 = module_0.BaseError(position=position_1)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = '\x0bSjip4'
        list_0 = [str_0]
        int_0 = -916
        position_0 = module_0.Position(int_0, int_0, int_0)
        message_0 = module_0.Message(text=str_0, code=str_0, key=str_0, index=list_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'microsecond'
        int_0 = 0
        position_0 = module_0.Position(int_0, int_0, int_0)
        message_0 = module_0.Message(text=str_0, position=position_0, start_position=position_0)
    except BaseException:
        pass

def test_case_8():
    try:
        validation_result_0 = module_0.ValidationResult()
        str_0 = '\tDEaTxw($\rg7=cT8YJ'
        int_0 = 2475
        int_1 = 891
        position_0 = module_0.Position(int_0, int_0, int_1)
        message_0 = module_0.Message(text=str_0, code=str_0, start_position=position_0)
        int_2 = 1104
        int_3 = -165
        position_1 = module_0.Position(int_0, int_2, int_3)
        list_0 = []
        base_error_0 = module_0.BaseError(code=validation_result_0, key=message_0, position=position_1, messages=list_0)
    except BaseException:
        pass

def test_case_9():
    try:
        int_0 = 2387
        int_1 = -11
        int_2 = 3
        position_0 = module_0.Position(int_0, int_1, int_2)
        str_0 = position_0.__repr__()
        str_1 = position_0.__repr__()
        str_2 = position_0.__repr__()
        base_error_0 = module_0.BaseError(text=str_1, messages=position_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = '@kxYZ!%!)lP~jg[#'
        int_0 = 461
        int_1 = 4
        int_2 = 1271
        position_0 = module_0.Position(int_0, int_1, int_2)
        message_0 = module_0.Message(text=str_0, position=position_0)
        str_1 = message_0.__repr__()
        list_0 = [message_0, message_0]
        validation_result_0 = module_0.ValidationResult(value=list_0, error=message_0)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = "9|' \x0bHsp',agE*J\n\n"
        base_error_0 = module_0.BaseError(text=str_0, key=str_0)
        int_0 = 3670
        str_1 = '\x0b'
        validation_result_0 = module_0.ValidationResult()
        iterator_0 = validation_result_0.__iter__()
        int_1 = 0
        position_0 = module_0.Position(int_0, int_1, int_0)
        bool_0 = base_error_0.__eq__(str_1)
        message_0 = module_0.Message(text=str_1, end_position=position_0)
        list_0 = [message_0, message_0, message_0]
        validation_error_0 = module_0.ValidationError(messages=list_0)
        bool_1 = validation_result_0.__bool__()
        bool_2 = validation_result_0.__bool__()
        int_2 = base_error_0.__len__()
        bool_3 = message_0.__eq__(list_0)
        str_2 = message_0.__repr__()
        message_1 = module_0.Message(text=str_1)
        str_3 = message_0.__repr__()
        str_4 = position_0.__repr__()
        base_error_1 = module_0.BaseError()
    except BaseException:
        pass

def test_case_12():
    try:
        tuple_0 = ()
        dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0, tuple_0: tuple_0}
        str_0 = "9|' \x0bHsp',agE*J\n\n"
        base_error_0 = module_0.BaseError(text=str_0, key=str_0)
        bool_0 = base_error_0.__eq__(dict_0)
        int_0 = 3654
        str_1 = '\x0b'
        validation_result_0 = module_0.ValidationResult()
        iterator_0 = validation_result_0.__iter__()
        int_1 = 0
        position_0 = module_0.Position(int_0, int_1, int_0)
        message_0 = module_0.Message(text=str_1, end_position=position_0)
        list_0 = base_error_0.messages()
        validation_error_0 = module_0.ValidationError(messages=list_0)
        bool_1 = validation_result_0.__bool__()
        bool_2 = validation_result_0.__bool__()
        int_2 = 2
        int_3 = -3180
        bool_3 = message_0.__eq__(list_0)
        str_2 = message_0.__repr__()
        message_1 = module_0.Message(text=str_1)
        int_4 = message_1.__hash__()
        iterator_1 = validation_result_0.__iter__()
        bool_4 = position_0.__eq__(int_2)
        position_1 = module_0.Position(int_0, int_2, int_3)
        message_2 = module_0.Message(text=str_1, key=str_1, position=position_1, start_position=position_1)
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = '3!MJ!8u=2XjgTRDJOf .'
        int_0 = 1
        position_0 = module_0.Position(int_0, int_0, int_0)
        message_0 = module_0.Message(text=str_0, position=position_0, end_position=position_0)
    except BaseException:
        pass

def test_case_14():
    try:
        tuple_0 = ()
        dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0, tuple_0: tuple_0}
        str_0 = "9|' \x0bHsp',agE*J\n\n"
        validation_result_0 = module_0.ValidationResult()
        str_1 = validation_result_0.__repr__()
        base_error_0 = module_0.BaseError(text=str_0, key=str_0)
        bool_0 = base_error_0.__eq__(dict_0)
        int_0 = 3654
        str_2 = '\x0b'
        iterator_0 = validation_result_0.__iter__()
        int_1 = 2038
        position_0 = module_0.Position(int_1, int_1, int_0)
        int_2 = 0
        position_1 = module_0.Position(int_0, int_2, int_0)
        message_0 = module_0.Message(text=str_2, end_position=position_1)
        list_0 = [message_0, message_0, message_0]
        validation_error_0 = module_0.ValidationError(messages=list_0)
        bool_1 = validation_result_0.__bool__()
        bool_2 = validation_result_0.__bool__()
        bool_3 = message_0.__eq__(dict_0)
        str_3 = message_0.__repr__()
        str_4 = '|>P^oDt'
        message_1 = module_0.Message(text=str_4, code=str_3, start_position=position_1)
        str_5 = position_0.__repr__()
        str_6 = message_1.__repr__()
        int_3 = base_error_0.__hash__()
        base_error_1 = module_0.BaseError(key=str_1)
    except BaseException:
        pass

def test_case_15():
    try:
        tuple_0 = ()
        dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0, tuple_0: tuple_0}
        str_0 = "9|' \x0bHsp',agE*J\n\n"
        base_error_0 = module_0.BaseError(text=str_0, key=str_0)
        bool_0 = base_error_0.__eq__(dict_0)
        int_0 = 3641
        str_1 = '\x0b'
        iterator_0 = base_error_0.__iter__()
        iterator_1 = base_error_0.__iter__()
        int_1 = 2038
        position_0 = module_0.Position(int_1, int_1, int_0)
        int_2 = 0
        position_1 = module_0.Position(int_0, int_2, int_0)
        message_0 = module_0.Message(text=str_1, end_position=position_1)
        list_0 = [message_0, message_0, message_0]
        str_2 = base_error_0.__repr__()
        bool_1 = message_0.__eq__(message_0)
        str_3 = message_0.__repr__()
        bool_2 = base_error_0.__eq__(int_1)
        str_4 = ''
        message_1 = module_0.Message(text=str_4, start_position=position_0)
        str_5 = position_1.__repr__()
        str_6 = message_0.__repr__()
        base_error_1 = module_0.BaseError(text=str_6, code=str_0)
        base_error_2 = module_0.BaseError(position=position_1, messages=list_0)
    except BaseException:
        pass

def test_case_16():
    try:
        tuple_0 = ()
        dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0, tuple_0: tuple_0}
        str_0 = "9|' \x0bHsp',agE*J\n\n"
        validation_result_0 = module_0.ValidationResult()
        str_1 = validation_result_0.__repr__()
        base_error_0 = module_0.BaseError(text=str_0, key=str_0)
        bool_0 = base_error_0.__eq__(dict_0)
        int_0 = 3641
        str_2 = '\x0b'
        iterator_0 = base_error_0.__iter__()
        validation_result_1 = module_0.ValidationResult()
        iterator_1 = base_error_0.__iter__()
        int_1 = 2038
        position_0 = module_0.Position(int_1, int_1, int_0)
        int_2 = 0
        position_1 = module_0.Position(int_0, int_2, int_0)
        message_0 = module_0.Message(text=str_2, end_position=position_1)
        list_0 = [message_0, message_0, message_0]
        validation_error_0 = module_0.ValidationError(messages=list_0)
        bool_1 = validation_result_1.__bool__()
        bool_2 = validation_result_1.__bool__()
        validation_result_2 = module_0.ValidationResult(error=validation_error_0)
        bool_3 = validation_result_2.__bool__()
        bool_4 = message_0.__eq__(iterator_1)
        str_3 = message_0.__repr__()
        bool_5 = base_error_0.__eq__(validation_error_0)
        message_1 = module_0.Message(text=str_1)
        str_4 = position_1.__repr__()
        str_5 = message_0.__repr__()
        int_3 = base_error_0.__hash__()
        base_error_1 = module_0.BaseError(code=str_4)
    except BaseException:
        pass

def test_case_17():
    try:
        list_0 = []
        base_error_0 = module_0.BaseError(messages=list_0)
    except BaseException:
        pass