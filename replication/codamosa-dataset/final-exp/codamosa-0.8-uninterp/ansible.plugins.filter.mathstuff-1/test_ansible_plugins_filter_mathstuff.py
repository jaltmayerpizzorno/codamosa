# Automatically generated by Pynguin.
import ansible.plugins.filter.mathstuff as module_0

def test_case_0():
    filter_module_0 = module_0.FilterModule()

def test_case_1():
    str_0 = '@L'
    dict_0 = {}
    var_0 = module_0.difference(str_0, str_0, dict_0)

def test_case_2():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0, bool_0]
    list_1 = [bool_0, list_0, list_0]
    var_0 = module_0.symmetric_difference(bool_0, list_0, list_1)

def test_case_3():
    str_0 = '%\x0bq*}P'
    bytes_0 = b'kjn'
    var_0 = module_0.max(str_0, bytes_0)

def test_case_4():
    str_0 = '}%\tsIr%D\tl8'
    dict_0 = {}
    filter_module_0 = module_0.FilterModule()
    var_0 = filter_module_0.filters()
    str_1 = 'tQ$688K{\\B=gzPm!q#9S'
    set_0 = set()
    set_1 = {str_0, str_0, str_0, str_1, str_0}
    tuple_0 = (dict_0, str_1, dict_0, set_1)
    var_1 = module_0.rekey_on_member(set_0, tuple_0)

def test_case_5():
    filter_module_0 = module_0.FilterModule()
    float_0 = None
    dict_0 = {filter_module_0: filter_module_0, filter_module_0: filter_module_0, filter_module_0: float_0, filter_module_0: filter_module_0}
    dict_1 = {}
    var_0 = module_0.intersect(filter_module_0, dict_0, dict_1)

def test_case_6():
    int_0 = 1
    var_0 = module_0.logarithm(int_0)
    int_1 = 2
    var_1 = module_0.logarithm(int_1)
    int_2 = 8
    var_2 = module_0.logarithm(int_2, int_1)
    float_0 = 6.0
    var_3 = module_0.logarithm(float_0, int_1)
    int_3 = 10
    var_4 = module_0.logarithm(int_3, int_3)