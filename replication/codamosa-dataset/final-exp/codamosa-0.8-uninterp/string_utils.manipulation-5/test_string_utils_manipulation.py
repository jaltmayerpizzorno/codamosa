# Automatically generated by Pynguin.
import string_utils.manipulation as module_0

def test_case_0():
    roman_numbers_0 = module_0.__RomanNumbers()

def test_case_1():
    int_0 = 3552
    str_0 = module_0.roman_encode(int_0)

def test_case_2():
    str_0 = '=7x{05S)xH-\x0czzOO7'
    str_1 = module_0.prettify(str_0)

def test_case_3():
    str_0 = 'D'
    str_1 = module_0.prettify(str_0)

def test_case_4():
    str_0 = 'the_snake_is_green'
    str_1 = module_0.snake_case_to_camel(str_0)
    bool_0 = False
    str_2 = module_0.snake_case_to_camel(str_0, bool_0)
    str_3 = 'w]JC vfL%\x0b\r3><'
    string_formatter_0 = module_0.__StringFormatter(str_3)
    str_4 = string_formatter_0.format()

def test_case_5():
    str_0 = 'the_snake_is_green'
    str_1 = module_0.snake_case_to_camel(str_0)
    str_2 = 'VZsz8S~x.fT87~>NW'
    string_formatter_0 = module_0.__StringFormatter(str_2)
    str_3 = string_formatter_0.format()

def test_case_6():
    str_0 = 'a_camel_string_test'
    str_1 = module_0.snake_case_to_camel(str_0)

def test_case_7():
    str_0 = '3IDPbbkMz/Td%'
    str_1 = module_0.shuffle(str_0)

def test_case_8():
    str_0 = '&A(0'
    str_1 = module_0.strip_html(str_0)

def test_case_9():
    str_0 = 'QVn/3V=NMN'
    str_1 = module_0.asciify(str_0)

def test_case_10():
    str_0 = 'UVD2`8$=t!s_1Q'
    str_1 = module_0.slugify(str_0)
    str_2 = module_0.strip_margin(str_0)

def test_case_11():
    str_0 = 'D'
    bool_0 = module_0.booleanize(str_0)
    str_1 = module_0.prettify(str_0)

def test_case_12():
    int_0 = 1470
    str_0 = module_0.roman_encode(int_0)
    str_1 = 'UVD2`8$=t!s_1Q'
    str_2 = 't\r-Wi&4R'
    str_3 = module_0.strip_html(str_2)
    str_4 = module_0.strip_margin(str_1)

def test_case_13():
    int_0 = 2888
    str_0 = '\n    Check if a string is a valid json.\n\n    *Examples:*\n\n    >>> is_json(\'{"name": "Peter"}\') # returns true\n    >>> is_json(\'[1, 2, 3]\') # returns true\n    >>> is_json(\'{nope}\') # returns false\n\n    :param input_string: String to check.\n    :type input_string: str\n    :return: True if json, false otherwise\n    '
    str_1 = '-ar@R!:z'
    str_2 = module_0.asciify(str_1)
    str_3 = module_0.slugify(str_0)
    str_4 = ''
    str_5 = module_0.shuffle(str_4)
    str_6 = module_0.roman_encode(int_0)
    str_7 = module_0.compress(str_6)
    str_8 = 'a"?z'
    str_9 = module_0.strip_html(str_8)
    str_10 = module_0.strip_margin(str_6)
    str_11 = module_0.snake_case_to_camel(str_0)
    int_1 = module_0.roman_decode(str_10)
    str_12 = 'eF'
    bool_0 = module_0.booleanize(str_12)
    str_13 = '3N)'
    bool_1 = module_0.booleanize(str_13)
    str_14 = module_0.prettify(str_11)
    var_0 = module_0.camel_case_to_snake(str_5)

def test_case_14():
    int_0 = 3564
    str_0 = module_0.roman_encode(int_0)

def test_case_15():
    str_0 = '6|L\nt\nCx@}y./!NJ\x0b6'
    str_1 = module_0.slugify(str_0)
    int_0 = 1159
    str_2 = module_0.reverse(str_0)
    str_3 = module_0.roman_encode(int_0)
    str_4 = module_0.compress(str_3)
    str_5 = module_0.strip_margin(str_3)
    str_6 = module_0.prettify(str_3)
    str_7 = module_0.snake_case_to_camel(str_3)
    str_8 = ''
    var_0 = module_0.camel_case_to_snake(str_8)

def test_case_16():
    str_0 = 'This is a test string test@gmail.com'
    string_formatter_0 = module_0.__StringFormatter(str_0)
    str_1 = string_formatter_0.format()

def test_case_17():
    str_0 = 'the_snake_is_green'
    str_1 = module_0.snake_case_to_camel(str_0)
    bool_0 = False
    str_2 = module_0.snake_case_to_camel(str_0, bool_0)
    str_3 = 'theSnakeIsGreen'
    str_4 = module_0.snake_case_to_camel(str_3)

def test_case_18():
    str_0 = 'This is a test string http://www.google.com'
    string_formatter_0 = module_0.__StringFormatter(str_0)
    str_1 = string_formatter_0.format()