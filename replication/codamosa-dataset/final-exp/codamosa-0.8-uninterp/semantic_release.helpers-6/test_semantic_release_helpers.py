# Automatically generated by Pynguin.
import semantic_release.helpers as module_0
import urllib3.util.retry as module_1

def test_case_0():
    pass

def test_case_1():
    bytes_0 = b'\x99\xab'
    var_0 = module_0.format_arg(bytes_0)

def test_case_2():
    session_0 = module_0.build_requests_session()
    dict_0 = {session_0: session_0, session_0: session_0}
    var_0 = module_0.format_arg(dict_0)
    bool_0 = True
    tuple_0 = ()
    str_0 = 'Hv+;r'
    logged_function_0 = module_0.LoggedFunction(str_0)
    var_1 = logged_function_0.__call__(tuple_0)
    logged_function_1 = module_0.LoggedFunction(bool_0)
    list_0 = None
    str_1 = 'k))Q\x0b<[%P*R%L1Jx/Mq='
    retry_0 = module_1.Retry(str_1, logged_function_1, list_0)
    var_2 = logged_function_1.__call__(retry_0)
    logged_function_2 = module_0.LoggedFunction(list_0)
    var_3 = module_0.format_arg(str_0)

def test_case_3():
    session_0 = module_0.build_requests_session()

def test_case_4():
    session_0 = module_0.build_requests_session()
    int_0 = None
    session_1 = module_0.build_requests_session(int_0)
    session_2 = module_0.build_requests_session()
    int_1 = -134
    session_3 = module_0.build_requests_session(session_2, int_1)
    int_2 = 1560
    session_4 = module_0.build_requests_session(int_2, int_2)
    logged_function_0 = module_0.LoggedFunction(session_3)
    tuple_0 = None
    list_0 = [session_2]
    var_0 = logged_function_0.__call__(list_0)
    session_5 = module_0.build_requests_session(tuple_0)
    int_3 = 404
    logged_function_1 = module_0.LoggedFunction(int_3)
    logged_function_2 = module_0.LoggedFunction(tuple_0)
    str_0 = ')"4\x0c{lIYTF#OC'
    int_4 = -551
    str_1 = ''
    set_0 = set()
    logged_function_3 = module_0.LoggedFunction(set_0)
    logged_function_4 = module_0.LoggedFunction(session_4)
    list_1 = [session_0, str_1]
    dict_0 = {}
    logged_function_5 = module_0.LoggedFunction(dict_0)
    retry_0 = module_1.Retry(int_4, str_1, list_1, logged_function_5)
    session_6 = module_0.build_requests_session()
    float_0 = 2388.658
    var_1 = module_0.format_arg(float_0)
    var_2 = logged_function_0.__call__(tuple_0)
    str_2 = 'sU'
    set_1 = {str_0, logged_function_5, str_2, int_2}
    logged_function_6 = module_0.LoggedFunction(set_1)
    session_7 = module_0.build_requests_session(retry_0)
    bool_0 = True
    logged_function_7 = module_0.LoggedFunction(bool_0)
    session_8 = module_0.build_requests_session(int_4)
    var_3 = module_0.format_arg(tuple_0)
    var_4 = logged_function_7.__call__(str_0)

def test_case_5():
    session_0 = module_0.build_requests_session()
    retry_0 = module_1.Retry(session_0, session_0)
    session_1 = module_0.build_requests_session(retry_0, retry_0)

def test_case_6():
    tuple_0 = ()
    logged_function_0 = module_0.LoggedFunction(tuple_0)

def test_case_7():
    dict_0 = None
    str_0 = 'Y!bI#]{8^tZ\x0b^nZ'
    tuple_0 = (dict_0, str_0)
    bool_0 = False
    logged_function_0 = module_0.LoggedFunction(bool_0)
    var_0 = logged_function_0.__call__(tuple_0)

def test_case_8():
    bytes_0 = b'\x9b\xd1\xe0t'
    bool_0 = False
    session_0 = module_0.build_requests_session(bytes_0, bool_0)

def test_case_9():
    bool_0 = False
    session_0 = module_0.build_requests_session(bool_0)
    session_1 = module_0.build_requests_session()
    retry_0 = module_1.Retry(session_1, session_1)
    session_2 = module_0.build_requests_session(retry_0, retry_0)