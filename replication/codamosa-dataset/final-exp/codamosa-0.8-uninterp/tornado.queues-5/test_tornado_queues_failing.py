# Automatically generated by Pynguin.
import tornado.queues as module_0

def test_case_0():
    try:
        int_0 = 30
        list_0 = [int_0]
        queue_full_0 = module_0.QueueFull(*list_0)
        list_1 = [queue_full_0, list_0, list_0, int_0]
        dict_0 = {}
        queue_full_1 = module_0.QueueFull(*list_1, **dict_0)
        queue_iterator_0 = module_0._QueueIterator(queue_full_1)
        awaitable_0 = queue_iterator_0.__anext__()
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = -830
        queue_0 = module_0.Queue(int_0)
    except BaseException:
        pass

def test_case_2():
    try:
        queue_0 = module_0.Queue()
        var_0 = queue_0.get_nowait()
    except BaseException:
        pass

def test_case_3():
    try:
        queue_0 = module_0.Queue()
        awaitable_0 = queue_0.get()
    except BaseException:
        pass

def test_case_4():
    try:
        queue_0 = module_0.Queue()
        queue_0.task_done()
    except BaseException:
        pass

def test_case_5():
    try:
        queue_full_0 = module_0.QueueFull()
        queue_0 = module_0.Queue()
        str_0 = queue_0.__repr__()
        queue_iterator_0 = module_0._QueueIterator(queue_full_0)
        awaitable_0 = queue_0.join()
    except BaseException:
        pass

def test_case_6():
    try:
        queue_0 = module_0.Queue()
        priority_queue_0 = module_0.PriorityQueue()
        queue_0.task_done()
    except BaseException:
        pass

def test_case_7():
    try:
        int_0 = None
        queue_0 = module_0.Queue(int_0)
    except BaseException:
        pass

def test_case_8():
    try:
        int_0 = 254
        queue_0 = module_0.Queue()
        bool_0 = queue_0.empty()
        lifo_queue_0 = module_0.LifoQueue(int_0)
        var_0 = None
        queue_0.put_nowait(var_0)
        queue_0.task_done()
        future_0 = queue_0.put(var_0)
    except BaseException:
        pass

def test_case_9():
    try:
        int_0 = 254
        int_1 = 3731
        queue_0 = module_0.Queue(int_1)
        bool_0 = queue_0.empty()
        lifo_queue_0 = module_0.LifoQueue(int_0)
        var_0 = None
        queue_0.put_nowait(var_0)
        var_1 = queue_0.get_nowait()
        queue_0.task_done()
        future_0 = queue_0.put(var_0)
    except BaseException:
        pass

def test_case_10():
    try:
        queue_0 = module_0.Queue()
        int_0 = 212
        str_0 = queue_0.__str__()
        queue_1 = module_0.Queue()
        int_1 = 3731
        queue_2 = module_0.Queue(int_1)
        bool_0 = queue_1.empty()
        lifo_queue_0 = module_0.LifoQueue(int_0)
        var_0 = None
        queue_1.put_nowait(var_0)
        var_1 = queue_1.get_nowait()
        int_2 = 707
        queue_3 = module_0.Queue(int_2)
        bool_1 = queue_0.empty()
        str_1 = queue_1.__str__()
        var_2 = queue_2.get_nowait()
    except BaseException:
        pass

def test_case_11():
    try:
        queue_0 = module_0.Queue()
        var_0 = None
        queue_0.put_nowait(var_0)
        bool_0 = queue_0.full()
        int_0 = 254
        var_1 = queue_0.__aiter__()
        var_2 = queue_0.get_nowait()
        str_0 = queue_0.__str__()
        str_1 = queue_0.__repr__()
        str_2 = queue_0.__str__()
        int_1 = 3731
        queue_1 = module_0.Queue(int_1)
        bool_1 = queue_0.empty()
        lifo_queue_0 = module_0.LifoQueue(int_0)
        var_3 = None
        queue_0.put_nowait(var_3)
        var_4 = queue_0.get_nowait()
        queue_0.task_done()
        future_0 = queue_0.put(var_3)
    except BaseException:
        pass

def test_case_12():
    try:
        queue_0 = module_0.Queue()
        bool_0 = queue_0.full()
        int_0 = 254
        str_0 = queue_0.__str__()
        str_1 = queue_0.__repr__()
        int_1 = 3738
        queue_1 = module_0.Queue(int_1)
        bool_1 = queue_1.empty()
        lifo_queue_0 = module_0.LifoQueue(int_0)
        var_0 = queue_1.__aiter__()
        var_1 = None
        queue_0.put_nowait(var_1)
        queue_0.task_done()
        lifo_queue_1 = module_0.LifoQueue()
        queue_0.put_nowait(var_1)
        var_2 = queue_0.get_nowait()
        int_2 = 380
        queue_2 = module_0.Queue(int_2)
        bool_2 = queue_0.empty()
        str_2 = queue_0.__str__()
        var_3 = queue_0.get_nowait()
        var_4 = None
        queue_iterator_0 = module_0._QueueIterator(var_4)
        queue_3 = module_0.Queue()
        queue_2.put_nowait(var_2)
        queue_1.put_nowait(var_2)
        float_0 = 1277.762994
        awaitable_0 = queue_2.join(float_0)
    except BaseException:
        pass

def test_case_13():
    try:
        int_0 = 2
        queue_0 = module_0.Queue(int_0)
        int_1 = 1
        queue_0.put_nowait(int_1)
        queue_0.put_nowait(int_0)
        int_2 = 3
        queue_0.put_nowait(int_2)
    except BaseException:
        pass