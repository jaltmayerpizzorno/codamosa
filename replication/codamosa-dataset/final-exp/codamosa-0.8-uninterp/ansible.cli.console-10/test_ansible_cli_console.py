# Automatically generated by Pynguin.
import ansible.cli.console as module_0
import ansible.utils.display as module_1

def test_case_0():
    pass

def test_case_1():
    float_0 = 495.765909
    console_c_l_i_0 = module_0.ConsoleCLI(float_0)

def test_case_2():
    str_0 = '-F=zQU^@9@?JFEk*'
    list_0 = [str_0, str_0]
    console_c_l_i_0 = module_0.ConsoleCLI(list_0)
    var_0 = console_c_l_i_0.init_parser()
    str_1 = '\r|e8|$0\tsz'
    console_c_l_i_1 = module_0.ConsoleCLI(str_1)

def test_case_3():
    str_0 = "eABaydvPf\t@K\x0cg'y<<?q"
    str_1 = 'b'
    console_c_l_i_0 = module_0.ConsoleCLI(str_1)
    var_0 = console_c_l_i_0.do_diff(str_0)
    var_1 = console_c_l_i_0.run()

def test_case_4():
    bool_0 = None
    list_0 = [bool_0, bool_0, bool_0]
    console_c_l_i_0 = module_0.ConsoleCLI(list_0)
    var_0 = console_c_l_i_0.get_names()

def test_case_5():
    int_0 = -4397
    console_c_l_i_0 = module_0.ConsoleCLI(int_0)
    var_0 = console_c_l_i_0.cmdloop()

def test_case_6():
    str_0 = ',Lyo/n k'
    list_0 = [str_0, str_0, str_0]
    console_c_l_i_0 = module_0.ConsoleCLI(list_0)
    var_0 = console_c_l_i_0.list_modules()

def test_case_7():
    float_0 = None
    bool_0 = True
    dict_0 = {float_0: bool_0, float_0: bool_0}
    console_c_l_i_0 = module_0.ConsoleCLI(dict_0)
    var_0 = console_c_l_i_0.emptyline()

def test_case_8():
    display_0 = module_1.Display()
    int_0 = 1917
    console_c_l_i_0 = module_0.ConsoleCLI(int_0)
    var_0 = console_c_l_i_0.do_verbosity(console_c_l_i_0)

def test_case_9():
    str_0 = 'groups'
    bytes_0 = b'\xf5\xa0\xe1\xae\r\xab\x9c+\xa3\x83l\xbb9\xdd?\xee'
    console_c_l_i_0 = module_0.ConsoleCLI(bytes_0)
    float_0 = 1440.59
    var_0 = console_c_l_i_0.do_verbosity(float_0)
    var_1 = console_c_l_i_0.do_timeout(str_0)

def test_case_10():
    bool_0 = False
    str_0 = 'Construct a collection instance based on an arbitrary dir.\n\n        This alternative constructor infers the FQCN based on the parent\n        and current directory names. It also sets the version to "*"\n        regardless of whether any of known metadata files are present.\n        '
    tuple_0 = (str_0,)
    console_c_l_i_0 = module_0.ConsoleCLI(tuple_0)
    var_0 = console_c_l_i_0.do_become(bool_0)

def test_case_11():
    dict_0 = {}
    bool_0 = True
    console_c_l_i_0 = module_0.ConsoleCLI(bool_0)
    var_0 = console_c_l_i_0.do_become_method(console_c_l_i_0)
    var_1 = console_c_l_i_0.do_remote_user(dict_0)

def test_case_12():
    int_0 = 4172
    bytes_0 = b'{\xb0_/\xa8`\n\x91"'
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    console_c_l_i_0 = module_0.ConsoleCLI(dict_0)
    var_0 = console_c_l_i_0.do_check(int_0)

def test_case_13():
    list_0 = []
    str_0 = '%s!vault |'
    console_c_l_i_0 = module_0.ConsoleCLI(str_0)
    str_1 = 'vars_cache'
    var_0 = console_c_l_i_0.do_become_method(list_0)
    var_1 = console_c_l_i_0.cmdloop()
    console_c_l_i_1 = module_0.ConsoleCLI(str_1)
    var_2 = console_c_l_i_1.do_verbosity(console_c_l_i_0)
    float_0 = 676.4414311045715
    bool_0 = None
    var_3 = console_c_l_i_1.do_verbosity(bool_0)
    bool_1 = False
    var_4 = console_c_l_i_1.do_forks(bool_1)
    console_c_l_i_2 = module_0.ConsoleCLI(float_0)
    var_5 = console_c_l_i_2.do_diff(list_0)

def test_case_14():
    str_0 = 'groups'
    bytes_0 = b'\xf5\xa0\xe1\xae\r\xab\x9c+\xa3\x83l\xbb9\xdd?\xee'
    console_c_l_i_0 = module_0.ConsoleCLI(bytes_0)
    var_0 = console_c_l_i_0.do_timeout(str_0)

def test_case_15():
    complex_0 = None
    int_0 = 3152
    set_0 = None
    str_0 = 'mAZ^w(`w"%;'
    bytes_0 = b'J\x90\xd4\xe0\xd1B\x9d[&\xb5\xb3suq\xeaV\xb3\x11\xa2'
    console_c_l_i_0 = module_0.ConsoleCLI(bytes_0)
    var_0 = console_c_l_i_0.do_timeout(str_0)
    set_1 = {int_0, int_0, set_0, set_0}
    console_c_l_i_1 = module_0.ConsoleCLI(set_1)
    var_1 = console_c_l_i_1.do_check(complex_0)

def test_case_16():
    str_0 = 'rolena3`eU[<-ersion]'
    list_0 = [str_0, str_0]
    console_c_l_i_0 = module_0.ConsoleCLI(list_0)
    var_0 = console_c_l_i_0.run()
    var_1 = console_c_l_i_0.default(str_0, list_0)
    bytes_0 = b'\x84\x0c\xa8N\x14 GH\xb59\xdf'
    var_2 = console_c_l_i_0.helpdefault(bytes_0)
    console_c_l_i_1 = module_0.ConsoleCLI(console_c_l_i_0)
    dict_0 = {}
    var_3 = console_c_l_i_0.do_timeout(dict_0)
    console_c_l_i_2 = module_0.ConsoleCLI(console_c_l_i_0)
    var_4 = console_c_l_i_0.set_prompt()

def test_case_17():
    str_0 = '#2~W/A'
    list_0 = [str_0, str_0]
    console_c_l_i_0 = module_0.ConsoleCLI(list_0)
    var_0 = console_c_l_i_0.run()
    var_1 = console_c_l_i_0.helpdefault(str_0)
    bytes_0 = b'\x84\x0c\xa8N\x14 GH\xb59\xdf'
    var_2 = console_c_l_i_0.helpdefault(bytes_0)
    var_3 = console_c_l_i_0.get_names()
    var_4 = console_c_l_i_0.do_list(bytes_0)
    dict_0 = {}
    var_5 = console_c_l_i_0.do_timeout(dict_0)
    list_1 = [str_0, console_c_l_i_0]
    str_1 = 'R=,NeGNm\ni._vY'
    var_6 = console_c_l_i_0.do_shell(str_1)
    var_7 = console_c_l_i_0.do_timeout(list_1)
    var_8 = console_c_l_i_0.list_modules()