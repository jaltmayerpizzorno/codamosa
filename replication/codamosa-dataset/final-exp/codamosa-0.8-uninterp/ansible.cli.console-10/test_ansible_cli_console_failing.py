# Automatically generated by Pynguin.
import ansible.cli.console as module_0
import ansible.playbook.play as module_1

def test_case_0():
    try:
        str_0 = '8O'
        console_c_l_i_0 = module_0.ConsoleCLI(str_0)
        var_0 = console_c_l_i_0.do_shell(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = -4397
        dict_0 = {int_0: int_0, int_0: int_0}
        bytes_0 = b'5\x14c\xfd^\xa1\xcc/\x85'
        console_c_l_i_0 = module_0.ConsoleCLI(bytes_0)
        var_0 = console_c_l_i_0.do_cd(dict_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'w'
        play_0 = module_1.Play()
        tuple_0 = None
        dict_0 = {play_0: play_0, play_0: tuple_0}
        console_c_l_i_0 = module_0.ConsoleCLI(dict_0)
        var_0 = console_c_l_i_0.do_cd(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '\ngx{AEb'
        bytes_0 = b'\xc9\xa9*iq\xca\xb1\xb7\x7f\xcc\xbeE2E\xc3'
        float_0 = 1309.446022
        set_0 = None
        tuple_0 = (float_0, str_0, float_0, set_0)
        console_c_l_i_0 = module_0.ConsoleCLI(tuple_0)
        var_0 = console_c_l_i_0.do_list(bytes_0)
    except BaseException:
        pass

def test_case_4():
    try:
        bool_0 = True
        set_0 = {bool_0, bool_0}
        list_0 = [bool_0, bool_0, bool_0]
        console_c_l_i_0 = module_0.ConsoleCLI(list_0)
        var_0 = console_c_l_i_0.do_check(set_0)
        int_0 = -748
        var_1 = console_c_l_i_0.do_become(int_0)
    except BaseException:
        pass

def test_case_5():
    try:
        float_0 = 495.765909
        bool_0 = True
        console_c_l_i_0 = module_0.ConsoleCLI(bool_0)
        var_0 = console_c_l_i_0.do_remote_user(float_0)
    except BaseException:
        pass

def test_case_6():
    try:
        set_0 = None
        bytes_0 = b'|%S\x8e\x08'
        list_0 = [set_0, bytes_0]
        console_c_l_i_0 = module_0.ConsoleCLI(list_0)
        var_0 = console_c_l_i_0.list_modules()
        str_0 = 'groups'
        var_1 = console_c_l_i_0.do_become_user(str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'error getting key id from url: %s'
        console_c_l_i_0 = module_0.ConsoleCLI(str_0)
        tuple_0 = None
        var_0 = console_c_l_i_0.do_timeout(tuple_0)
        bool_0 = True
        console_c_l_i_1 = module_0.ConsoleCLI(bool_0)
        bytes_0 = b'Q\xd1\x11\xe7\x89;\xe8'
        console_c_l_i_2 = module_0.ConsoleCLI(bytes_0)
        var_1 = console_c_l_i_0.set_prompt()
    except BaseException:
        pass

def test_case_8():
    try:
        bool_0 = True
        set_0 = {bool_0, bool_0, bool_0}
        str_0 = '6~mS~5~2eG5sgb>_?u'
        tuple_0 = (set_0, str_0)
        console_c_l_i_0 = module_0.ConsoleCLI(tuple_0)
        str_1 = '%s already exists as a %s'
        console_c_l_i_1 = module_0.ConsoleCLI(str_1)
        var_0 = console_c_l_i_1.do_verbosity(bool_0)
        var_1 = console_c_l_i_0.helpdefault(str_1)
    except BaseException:
        pass

def test_case_9():
    try:
        int_0 = 1333
        dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: int_0}
        bool_0 = True
        bytes_0 = b'\xa8\r'
        str_0 = 'Ed'
        bytes_1 = b'\xfa \xe4\xfa'
        bool_1 = None
        list_0 = [bool_1, bool_1]
        tuple_0 = (str_0, bytes_1, list_0)
        console_c_l_i_0 = module_0.ConsoleCLI(tuple_0)
        var_0 = console_c_l_i_0.completedefault(dict_0, dict_0, bool_0, bytes_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = '-F=zQU^@9@?JFEk*'
        list_0 = [str_0, str_0, str_0]
        console_c_l_i_0 = module_0.ConsoleCLI(list_0)
        var_0 = console_c_l_i_0.init_parser()
        console_c_l_i_1 = module_0.ConsoleCLI(str_0)
        str_1 = 'h'
        var_1 = console_c_l_i_1.module_args(str_1)
    except BaseException:
        pass

def test_case_11():
    try:
        list_0 = []
        str_0 = '%s!vault |'
        console_c_l_i_0 = module_0.ConsoleCLI(str_0)
        str_1 = 'vars_cache'
        var_0 = console_c_l_i_0.do_become_method(list_0)
        var_1 = console_c_l_i_0.cmdloop()
        console_c_l_i_1 = module_0.ConsoleCLI(str_1)
        var_2 = console_c_l_i_1.do_verbosity(console_c_l_i_0)
        float_0 = 676.4414311045715
        bool_0 = None
        var_3 = console_c_l_i_1.do_verbosity(bool_0)
        bool_1 = False
        var_4 = console_c_l_i_1.do_forks(bool_1)
        console_c_l_i_2 = module_0.ConsoleCLI(float_0)
        var_5 = console_c_l_i_0.do_cd(list_0)
    except BaseException:
        pass

def test_case_12():
    try:
        float_0 = 1328.702049
        str_0 = "9S!'@o]x"
        float_1 = 1309.446022
        set_0 = None
        tuple_0 = (float_0, str_0, float_1, set_0)
        console_c_l_i_0 = module_0.ConsoleCLI(tuple_0)
        var_0 = console_c_l_i_0.do_become_user(set_0)
    except BaseException:
        pass

def test_case_13():
    try:
        int_0 = -295
        int_1 = 688
        bool_0 = False
        console_c_l_i_0 = module_0.ConsoleCLI(int_1)
        var_0 = console_c_l_i_0.do_check(bool_0)
        var_1 = console_c_l_i_0.get_names()
        tuple_0 = ()
        float_0 = -374.9
        var_2 = console_c_l_i_0.complete_cd(int_0, console_c_l_i_0, tuple_0, float_0)
    except BaseException:
        pass

def test_case_14():
    try:
        str_0 = None
        int_0 = -1016
        console_c_l_i_0 = module_0.ConsoleCLI(int_0)
        console_c_l_i_1 = module_0.ConsoleCLI(console_c_l_i_0)
        var_0 = console_c_l_i_1.do_timeout(str_0)
        float_0 = None
        str_1 = '%prog [options] playbook.yml [playbook2 ...]'
        bool_0 = False
        str_2 = ')'
        var_1 = console_c_l_i_0.complete_cd(float_0, str_1, bool_0, str_2)
    except BaseException:
        pass

def test_case_15():
    try:
        str_0 = '\ngx{AEb'
        set_0 = {str_0, str_0}
        float_0 = -2306.515967
        console_c_l_i_0 = module_0.ConsoleCLI(float_0)
        var_0 = console_c_l_i_0.do_forks(set_0)
    except BaseException:
        pass

def test_case_16():
    try:
        str_0 = '%s!vault |'
        console_c_l_i_0 = module_0.ConsoleCLI(str_0)
        var_0 = console_c_l_i_0.do_verbosity(console_c_l_i_0)
        str_1 = '>^\n'
        bool_0 = False
        var_1 = console_c_l_i_0.do_forks(bool_0)
        var_2 = console_c_l_i_0.do_cd(str_1)
    except BaseException:
        pass

def test_case_17():
    try:
        set_0 = None
        str_0 = '!'
        console_c_l_i_0 = module_0.ConsoleCLI(str_0)
        console_c_l_i_1 = module_0.ConsoleCLI(str_0)
        bytes_0 = b'\xe2'
        console_c_l_i_2 = module_0.ConsoleCLI(bytes_0)
        var_0 = console_c_l_i_2.do_cd(set_0)
    except BaseException:
        pass

def test_case_18():
    try:
        str_0 = '%s!vault |'
        console_c_l_i_0 = module_0.ConsoleCLI(str_0)
        str_1 = 'vars_cache'
        var_0 = console_c_l_i_0.cmdloop()
        console_c_l_i_1 = module_0.ConsoleCLI(str_1)
        var_1 = console_c_l_i_1.do_verbosity(console_c_l_i_0)
        bool_0 = None
        var_2 = console_c_l_i_1.do_verbosity(bool_0)
        bool_1 = True
        var_3 = console_c_l_i_1.do_forks(bool_1)
    except BaseException:
        pass

def test_case_19():
    try:
        bytes_0 = b'\x02\xc4\x13S\xdaa\x89D\x9as36\xeb\x10\x1a1\xe9M'
        set_0 = {bytes_0}
        int_0 = 202
        list_0 = []
        str_0 = '%s!vault |'
        console_c_l_i_0 = module_0.ConsoleCLI(str_0)
        var_0 = console_c_l_i_0.do_become_method(list_0)
        var_1 = console_c_l_i_0.cmdloop()
        console_c_l_i_1 = module_0.ConsoleCLI(set_0)
        tuple_0 = (bytes_0,)
        dict_0 = {int_0: var_0, bytes_0: tuple_0}
        list_1 = [dict_0]
        console_c_l_i_2 = module_0.ConsoleCLI(list_1)
        var_2 = console_c_l_i_2.do_verbosity(list_0)
        console_c_l_i_3 = module_0.ConsoleCLI(dict_0)
        var_3 = console_c_l_i_2.do_verbosity(console_c_l_i_3)
        float_0 = -427.9
        console_c_l_i_4 = module_0.ConsoleCLI(tuple_0)
        var_4 = console_c_l_i_4.do_forks(float_0)
        console_c_l_i_5 = module_0.ConsoleCLI(list_1)
        bytes_1 = b'D+\x9a\xeb\xe0#AQ\xb3\x07CA\x9c\xf8\xf75>'
        var_5 = console_c_l_i_4.do_cd(bytes_1)
    except BaseException:
        pass

def test_case_20():
    try:
        bool_0 = True
        bytes_0 = b'v\xe4z<\x10}\xed\xf1\x14\xb1V\xaa\xbe}v"\x98\xd6'
        console_c_l_i_0 = module_0.ConsoleCLI(bytes_0)
        var_0 = console_c_l_i_0.do_timeout(bool_0)
        float_0 = 3604.7
        int_0 = 4294967295
        console_c_l_i_1 = module_0.ConsoleCLI(int_0)
        var_1 = console_c_l_i_1.helpdefault(float_0)
    except BaseException:
        pass

def test_case_21():
    try:
        str_0 = "Pm|>@|'b++3\x0cH&zy"
        str_1 = 'b'
        console_c_l_i_0 = module_0.ConsoleCLI(str_1)
        var_0 = console_c_l_i_0.do_diff(str_0)
        int_0 = None
        list_0 = []
        list_1 = [list_0, list_0, list_0, list_0]
        list_2 = [list_0, list_1, list_0, list_1, list_1]
        var_1 = console_c_l_i_0.run()
        console_c_l_i_1 = module_0.ConsoleCLI(list_2)
        var_2 = console_c_l_i_1.do_timeout(int_0)
        var_3 = console_c_l_i_0.emptyline()
        var_4 = console_c_l_i_0.do_shell(int_0)
    except BaseException:
        pass

def test_case_22():
    try:
        str_0 = '\\fU'
        set_0 = {str_0}
        str_1 = 'nMiE'
        console_c_l_i_0 = module_0.ConsoleCLI(str_1)
        str_2 = 'groups'
        console_c_l_i_1 = module_0.ConsoleCLI(str_2)
        dict_0 = {console_c_l_i_1: set_0, str_0: str_2}
        console_c_l_i_2 = module_0.ConsoleCLI(dict_0)
        var_0 = console_c_l_i_2.do_timeout(console_c_l_i_0)
        int_0 = -1499
        console_c_l_i_3 = module_0.ConsoleCLI(int_0)
        float_0 = -1068.276709
        var_1 = console_c_l_i_3.do_timeout(float_0)
        console_c_l_i_4 = module_0.ConsoleCLI(str_0)
        float_1 = 2406.5479
        str_3 = '~ut+pleS_o]t'
        console_c_l_i_5 = module_0.ConsoleCLI(str_3)
        var_2 = console_c_l_i_5.do_timeout(float_1)
        var_3 = console_c_l_i_5.list_modules()
        var_4 = console_c_l_i_5.cmdloop()
        var_5 = console_c_l_i_5.default(str_0, set_0)
    except BaseException:
        pass

def test_case_23():
    try:
        float_0 = 60.0
        dict_0 = {}
        str_0 = '>\x0cTkf5Qk3~M'
        console_c_l_i_0 = module_0.ConsoleCLI(float_0)
        var_0 = console_c_l_i_0.complete_cd(dict_0, str_0, str_0, str_0)
        str_1 = '[/Wfq'
        bytes_0 = b'D\x98\xb2\xe3\xf0r-K\xee\xff\x85\xfbq\xaee\xb6'
        console_c_l_i_1 = module_0.ConsoleCLI(bytes_0)
        var_1 = console_c_l_i_1.do_become_user(str_1)
    except BaseException:
        pass

def test_case_24():
    try:
        str_0 = '#WNzU\n1 (D6$yVOo'
        list_0 = [str_0]
        console_c_l_i_0 = module_0.ConsoleCLI(list_0)
        var_0 = console_c_l_i_0.default(str_0, list_0)
        bool_0 = False
        play_0 = module_1.Play()
        console_c_l_i_1 = module_0.ConsoleCLI(play_0)
        var_1 = console_c_l_i_1.do_verbosity(bool_0)
        bool_1 = False
        list_1 = [play_0, bool_1]
        console_c_l_i_2 = module_0.ConsoleCLI(list_1)
        display_0 = None
        console_c_l_i_3 = module_0.ConsoleCLI(display_0)
    except BaseException:
        pass

def test_case_25():
    try:
        str_0 = 'rolena3`eU[<-ersion]'
        list_0 = [str_0, str_0]
        console_c_l_i_0 = module_0.ConsoleCLI(list_0)
        var_0 = console_c_l_i_0.run()
        var_1 = console_c_l_i_0.default(str_0, list_0)
        str_1 = '~F[P)z:,&$M\n'
        var_2 = console_c_l_i_0.default(str_1)
        str_2 = 'nMiE'
        console_c_l_i_1 = module_0.ConsoleCLI(str_2)
        var_3 = console_c_l_i_1.set_prompt()
    except BaseException:
        pass

def test_case_26():
    try:
        str_0 = 'rolenae`eU[<-ersion]'
        list_0 = [str_0, str_0]
        console_c_l_i_0 = module_0.ConsoleCLI(list_0)
        var_0 = console_c_l_i_0.run()
        var_1 = console_c_l_i_0.default(str_0, list_0)
        console_c_l_i_1 = module_0.ConsoleCLI(console_c_l_i_0)
        var_2 = console_c_l_i_0.run()
        str_1 = 'error getting key id fromzmrl:%s'
        var_3 = console_c_l_i_0.get_names()
        dict_0 = None
        float_0 = None
        tuple_0 = (str_0, str_1, float_0)
        var_4 = console_c_l_i_0.do_list(tuple_0)
        dict_1 = {}
        var_5 = console_c_l_i_1.do_timeout(dict_1)
        var_6 = console_c_l_i_1.list_modules()
        var_7 = console_c_l_i_0.cmdloop()
        console_c_l_i_2 = module_0.ConsoleCLI(dict_0)
    except BaseException:
        pass

def test_case_27():
    try:
        str_0 = 'rolenae`eU[<-ersion]'
        list_0 = [str_0, str_0]
        console_c_l_i_0 = module_0.ConsoleCLI(list_0)
        var_0 = console_c_l_i_0.run()
        int_0 = -767
        str_1 = "'"
        str_2 = 'r1vg@ '
        str_3 = 'X'
        dict_0 = {str_1: int_0, str_2: list_0, str_3: int_0}
        var_1 = console_c_l_i_0.do_remote_user(dict_0)
        int_1 = -2296
        tuple_0 = (int_1, list_0)
        play_0 = module_1.Play()
        var_2 = console_c_l_i_0.default(str_0, list_0)
        bytes_0 = b'\x84\x0c\xa8N\x14 GH\xb59\xdf'
        var_3 = console_c_l_i_0.helpdefault(bytes_0)
        dict_1 = None
        str_4 = '%L6'
        float_0 = None
        tuple_1 = (str_0, str_4, float_0)
        var_4 = console_c_l_i_0.do_list(tuple_1)
        var_5 = console_c_l_i_0.do_exit(tuple_0)
        dict_2 = {}
        var_6 = console_c_l_i_0.do_timeout(dict_2)
        list_1 = [str_0, console_c_l_i_0]
        var_7 = console_c_l_i_0.do_timeout(list_1)
        var_8 = console_c_l_i_0.list_modules()
        var_9 = console_c_l_i_0.cmdloop()
        console_c_l_i_1 = module_0.ConsoleCLI(dict_1)
    except BaseException:
        pass