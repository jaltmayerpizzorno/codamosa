# Automatically generated by Pynguin.
import ansible.cli.console as module_0
import ansible.utils.display as module_1

def test_case_0():
    pass

def test_case_1():
    int_0 = -541
    console_c_l_i_0 = module_0.ConsoleCLI(int_0)

def test_case_2():
    str_0 = '\x0c0'
    console_c_l_i_0 = module_0.ConsoleCLI(str_0)
    var_0 = console_c_l_i_0.run()
    console_c_l_i_1 = module_0.ConsoleCLI(console_c_l_i_0)

def test_case_3():
    int_0 = 2702
    console_c_l_i_0 = module_0.ConsoleCLI(int_0)
    var_0 = console_c_l_i_0.list_modules()

def test_case_4():
    bytes_0 = b'\x89\xd1\x9a\x03\x9b\x82\x00'
    str_0 = '\tqe:\n:`G'
    console_c_l_i_0 = module_0.ConsoleCLI(str_0)
    var_0 = console_c_l_i_0.do_verbosity(bytes_0)

def test_case_5():
    str_0 = 'baseboard-asset-tag'
    list_0 = [str_0]
    console_c_l_i_0 = module_0.ConsoleCLI(list_0)
    var_0 = console_c_l_i_0.run()
    var_1 = console_c_l_i_0.do_become_method(str_0)
    bool_0 = False
    var_2 = console_c_l_i_0.do_become_user(bool_0)

def test_case_6():
    str_0 = '9}0X\t(^#r/,0l{'
    str_1 = 'baseboard-asset-tag'
    list_0 = [str_1]
    console_c_l_i_0 = module_0.ConsoleCLI(list_0)
    var_0 = console_c_l_i_0.do_become_method(str_0)

def test_case_7():
    bool_0 = False
    float_0 = -429.8683
    console_c_l_i_0 = module_0.ConsoleCLI(float_0)
    var_0 = console_c_l_i_0.do_check(bool_0)
    str_0 = '\n- name: Case insensitive password string match\n  ansible.builtin.expect:\n    command: passwd username\n    responses:\n      (?i)password: "MySekretPa$$word"\n  # you don\'t want to show passwords in your logs\n  no_log: true\n\n- name: Generic question with multiple different responses\n  ansible.builtin.expect:\n    command: /path/to/custom/command\n    responses:\n      Question:\n        - response1\n        - response2\n        - response3\n'
    set_0 = {str_0, str_0, str_0, str_0}
    str_1 = '{iTUzo\nfhyO{X_'
    console_c_l_i_1 = module_0.ConsoleCLI(str_1)
    var_1 = console_c_l_i_1.do_verbosity(set_0)
    console_c_l_i_2 = module_0.ConsoleCLI(str_0)
    var_2 = console_c_l_i_2.run()

def test_case_8():
    str_0 = '9~];FmcGAfm'
    console_c_l_i_0 = module_0.ConsoleCLI(str_0)
    var_0 = console_c_l_i_0.do_timeout(str_0)

def test_case_9():
    str_0 = 'groups'
    float_0 = 100.0
    dict_0 = None
    int_0 = -2157
    console_c_l_i_0 = module_0.ConsoleCLI(int_0)
    bytes_0 = b''
    tuple_0 = (float_0, dict_0, console_c_l_i_0, bytes_0)
    console_c_l_i_1 = module_0.ConsoleCLI(tuple_0)
    var_0 = console_c_l_i_1.do_list(str_0)

def test_case_10():
    int_0 = -532
    console_c_l_i_0 = module_0.ConsoleCLI(int_0)
    dict_0 = {}
    var_0 = console_c_l_i_0.do_timeout(dict_0)

def test_case_11():
    str_0 = ',?1#o{|n}hpDkqma\r'
    list_0 = None
    set_0 = {str_0, str_0, str_0, str_0}
    console_c_l_i_0 = module_0.ConsoleCLI(set_0)
    var_0 = console_c_l_i_0.do_verbosity(list_0)
    int_0 = -525
    console_c_l_i_1 = module_0.ConsoleCLI(int_0)
    var_1 = console_c_l_i_1.do_become_method(str_0)

def test_case_12():
    str_0 = '9}0X\t(^#r/,0l{'
    list_0 = [str_0]
    console_c_l_i_0 = module_0.ConsoleCLI(list_0)
    var_0 = console_c_l_i_0.run()
    bytes_0 = b'\x00\x84kPj\xb7\xa6y\xd5k\xe3\xac\xff1R\xf7\x9a!j\xbc'
    var_1 = console_c_l_i_0.do_timeout(console_c_l_i_0)
    set_0 = set()
    var_2 = console_c_l_i_0.do_diff(set_0)
    set_1 = {var_0, str_0, console_c_l_i_0}
    var_3 = console_c_l_i_0.do_shell(str_0)
    var_4 = console_c_l_i_0.completedefault(console_c_l_i_0, bytes_0, set_1, str_0)
    float_0 = -2921.558401
    var_5 = console_c_l_i_0.helpdefault(float_0)
    var_6 = console_c_l_i_0.helpdefault(set_0)
    var_7 = console_c_l_i_0.emptyline()
    var_8 = console_c_l_i_0.cmdloop()
    int_0 = 1842
    var_9 = console_c_l_i_0.do_become_user(int_0)
    tuple_0 = ()
    var_10 = console_c_l_i_0.do_remote_user(tuple_0)

def test_case_13():
    bool_0 = True
    str_0 = 'q 3Xpi%6Le7sMN'
    console_c_l_i_0 = module_0.ConsoleCLI(str_0)
    var_0 = console_c_l_i_0.do_timeout(bool_0)

def test_case_14():
    str_0 = '\x0c0'
    console_c_l_i_0 = module_0.ConsoleCLI(str_0)
    var_0 = console_c_l_i_0.run()
    console_c_l_i_1 = module_0.ConsoleCLI(console_c_l_i_0)
    var_1 = console_c_l_i_0.do_cd(str_0)

def test_case_15():
    str_0 = '\r8'
    list_0 = [str_0]
    console_c_l_i_0 = module_0.ConsoleCLI(list_0)
    var_0 = console_c_l_i_0.run()
    var_1 = console_c_l_i_0.do_shell(str_0)
    var_2 = console_c_l_i_0.do_forks(var_0)
    var_3 = console_c_l_i_0.get_names()
    var_4 = console_c_l_i_0.init_parser()

def test_case_16():
    str_0 = "qL=w80pU'}D"
    list_0 = [str_0]
    console_c_l_i_0 = module_0.ConsoleCLI(list_0)
    var_0 = console_c_l_i_0.run()
    var_1 = console_c_l_i_0.do_shell(str_0)
    bool_0 = False
    var_2 = console_c_l_i_0.do_become_user(bool_0)
    str_1 = '"cj&3rubX'
    var_3 = console_c_l_i_0.do_shell(str_1)

def test_case_17():
    str_0 = ' ;9P\r\x0blaBNE_P*^,4\x0ci%'
    list_0 = [str_0]
    console_c_l_i_0 = module_0.ConsoleCLI(list_0)
    int_0 = -2907
    var_0 = console_c_l_i_0.do_become_method(int_0)
    var_1 = console_c_l_i_0.run()
    bool_0 = False
    var_2 = console_c_l_i_0.completedefault(int_0, str_0, console_c_l_i_0, bool_0)
    var_3 = console_c_l_i_0.emptyline()
    var_4 = console_c_l_i_0.do_timeout(console_c_l_i_0)
    var_5 = console_c_l_i_0.helpdefault(str_0)
    var_6 = console_c_l_i_0.list_modules()
    var_7 = console_c_l_i_0.do_shell(str_0)
    var_8 = console_c_l_i_0.emptyline()
    bool_1 = True
    var_9 = console_c_l_i_0.do_list(bool_1)

def test_case_18():
    str_0 = '9}0X\t(^#r/,0l{'
    list_0 = [str_0]
    console_c_l_i_0 = module_0.ConsoleCLI(list_0)
    var_0 = console_c_l_i_0.run()
    set_0 = set()
    var_1 = console_c_l_i_0.do_diff(set_0)
    var_2 = console_c_l_i_0.do_shell(str_0)
    var_3 = console_c_l_i_0.emptyline()
    bool_0 = True
    var_4 = console_c_l_i_0.do_list(bool_0)
    set_1 = {console_c_l_i_0, console_c_l_i_0, var_0}
    var_5 = console_c_l_i_0.do_verbosity(set_1)
    var_6 = console_c_l_i_0.do_become(bool_0)
    var_7 = console_c_l_i_0.do_forks(set_0)
    display_0 = module_1.Display()