# Automatically generated by Pynguin.
import ansible.cli.console as module_0
import ansible.utils.display as module_1
import ansible.cli as module_2

def test_case_0():
    try:
        bool_0 = None
        console_c_l_i_0 = module_0.ConsoleCLI(bool_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'pACZ-@\r4[R\n4|)#VE2'
        int_0 = 2192
        console_c_l_i_0 = module_0.ConsoleCLI(int_0)
        var_0 = console_c_l_i_0.get_names()
        var_1 = console_c_l_i_0.do_cd(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'fv#nSbcxL3\n!_ul# \x0bt'
        float_0 = 0.0001
        dict_0 = {float_0: float_0, float_0: float_0, float_0: float_0, float_0: float_0}
        console_c_l_i_0 = module_0.ConsoleCLI(dict_0)
        var_0 = console_c_l_i_0.do_become(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        int_0 = -531
        console_c_l_i_0 = module_0.ConsoleCLI(int_0)
        str_0 = '(UVK&-'
        var_0 = console_c_l_i_0.do_shell(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        int_0 = -531
        console_c_l_i_0 = module_0.ConsoleCLI(int_0)
        var_0 = console_c_l_i_0.do_verbosity(console_c_l_i_0)
        dict_0 = {console_c_l_i_0: console_c_l_i_0, int_0: console_c_l_i_0, console_c_l_i_0: int_0, int_0: int_0}
        var_1 = console_c_l_i_0.emptyline()
        var_2 = console_c_l_i_0.do_timeout(dict_0)
        str_0 = '(UVK&-'
        var_3 = console_c_l_i_0.do_shell(str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        bool_0 = True
        int_0 = 303
        console_c_l_i_0 = module_0.ConsoleCLI(int_0)
        var_0 = console_c_l_i_0.do_forks(bool_0)
    except BaseException:
        pass

def test_case_6():
    try:
        bool_0 = False
        int_0 = 303
        console_c_l_i_0 = module_0.ConsoleCLI(int_0)
        var_0 = console_c_l_i_0.do_forks(bool_0)
        var_1 = console_c_l_i_0.do_shell(console_c_l_i_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = '9}0X\t(^#r/,0l{'
        list_0 = [str_0]
        console_c_l_i_0 = module_0.ConsoleCLI(list_0)
        dict_0 = {}
        var_0 = console_c_l_i_0.do_diff(dict_0)
        var_1 = console_c_l_i_0.run()
        bytes_0 = b'\x00\x84kPj\xb7\xa6y\xd5k\xe3\xac\xff1R\xf7\x9a!j\xbc'
        set_0 = set()
        var_2 = console_c_l_i_0.do_diff(set_0)
        set_1 = {var_1, str_0, console_c_l_i_0}
        var_3 = console_c_l_i_0.do_shell(str_0)
        var_4 = console_c_l_i_0.completedefault(console_c_l_i_0, bytes_0, set_1, str_0)
        set_2 = {console_c_l_i_0, console_c_l_i_0, var_1}
        var_5 = console_c_l_i_0.do_verbosity(set_2)
        str_1 = '\n    Return a single named information item from the distro release file\n    data source of the current OS distribution.\n\n    Parameters:\n\n    * ``attribute`` (string): Key of the information item.\n\n    Returns:\n\n    * (string): Value of the information item, if the item exists.\n                The empty string, if the item does not exist.\n    '
        var_6 = console_c_l_i_0.do_become_user(str_1)
        float_0 = -771.48565
        var_7 = console_c_l_i_0.do_forks(float_0)
        var_8 = console_c_l_i_0.do_shell(dict_0)
    except BaseException:
        pass

def test_case_8():
    try:
        int_0 = -559
        console_c_l_i_0 = module_0.ConsoleCLI(int_0)
        bool_0 = False
        var_0 = console_c_l_i_0.do_cd(bool_0)
    except BaseException:
        pass

def test_case_9():
    try:
        bytes_0 = b'\x0b-T\xb6\xa8Yg\xf6)bzSt\xa9\xf51\xd0\x18\xfc'
        set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
        console_c_l_i_0 = module_0.ConsoleCLI(set_0)
        list_0 = None
        var_0 = console_c_l_i_0.do_list(list_0)
    except BaseException:
        pass

def test_case_10():
    try:
        bytes_0 = b'\x0b-T\xb6\xa8Yg\xf6)bzSt\xa9\xf51\xd0\x18\xfc'
        set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
        console_c_l_i_0 = module_0.ConsoleCLI(set_0)
        str_0 = '{%% if %s %%} True {%% else %%} False {%% endif %%}'
        var_0 = console_c_l_i_0.do_remote_user(str_0)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = '[[,\rV7R\n4>g]\t=e@A'
        str_1 = '2\t'
        console_c_l_i_0 = module_0.ConsoleCLI(str_1)
        var_0 = console_c_l_i_0.do_become_user(str_0)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = '\x0c0'
        console_c_l_i_0 = module_0.ConsoleCLI(str_0)
        var_0 = console_c_l_i_0.run()
        float_0 = -2020.5895
        console_c_l_i_1 = module_0.ConsoleCLI(console_c_l_i_0)
        tuple_0 = (float_0,)
        str_1 = 'wtroups'
        var_1 = console_c_l_i_0.do_cd(str_1)
        var_2 = console_c_l_i_0.get_names()
        console_c_l_i_2 = module_0.ConsoleCLI(tuple_0)
        var_3 = console_c_l_i_2.helpdefault(console_c_l_i_2)
    except BaseException:
        pass

def test_case_13():
    try:
        int_0 = 1545
        float_0 = 953.31903
        list_0 = [int_0, float_0]
        str_0 = '?j[d -75w7)R!'
        bool_0 = True
        console_c_l_i_0 = module_0.ConsoleCLI(bool_0)
        bytes_0 = b'_8nKv\xd0\x89\xd9C'
        console_c_l_i_1 = module_0.ConsoleCLI(bytes_0)
        console_c_l_i_2 = module_0.ConsoleCLI(console_c_l_i_1)
        var_0 = console_c_l_i_2.complete_cd(list_0, str_0, console_c_l_i_0, bool_0)
        console_c_l_i_3 = module_0.ConsoleCLI(float_0)
        int_1 = -525
        var_1 = console_c_l_i_3.do_check(int_1)
        var_2 = console_c_l_i_3.helpdefault(int_0)
    except BaseException:
        pass

def test_case_14():
    try:
        str_0 = '\x0c0'
        console_c_l_i_0 = module_0.ConsoleCLI(str_0)
        var_0 = console_c_l_i_0.run()
        var_1 = console_c_l_i_0.list_modules()
        float_0 = -2020.5895
        tuple_0 = (float_0,)
        str_1 = 'wtroups'
        var_2 = console_c_l_i_0.do_cd(str_1)
        console_c_l_i_1 = module_0.ConsoleCLI(tuple_0)
        str_2 = '!pI!iWg`~mm'
        console_c_l_i_2 = module_0.ConsoleCLI(str_2)
        var_3 = console_c_l_i_1.complete_cd(console_c_l_i_2, str_2, str_2, str_2)
    except BaseException:
        pass

def test_case_15():
    try:
        str_0 = "Y&Nq!4V|YP5Q&'>d`"
        console_c_l_i_0 = module_0.ConsoleCLI(str_0)
        var_0 = console_c_l_i_0.init_parser()
        str_1 = '9}0X\t(^#r/,0l{'
        str_2 = 'baseboard-asset-tag'
        list_0 = [str_2]
        console_c_l_i_1 = module_0.ConsoleCLI(list_0)
        var_1 = console_c_l_i_1.do_become_method(str_1)
        float_0 = -2033.698866
        var_2 = console_c_l_i_1.do_verbosity(float_0)
        str_3 = 'RqRa\\V%N'
        var_3 = console_c_l_i_1.module_args(str_3)
    except BaseException:
        pass

def test_case_16():
    try:
        int_0 = -541
        console_c_l_i_0 = module_0.ConsoleCLI(int_0)
        bytes_0 = b'lxpl\x7f\xe9P\x004\x1a'
        var_0 = console_c_l_i_0.do_verbosity(bytes_0)
        set_0 = {console_c_l_i_0, console_c_l_i_0, int_0}
        var_1 = console_c_l_i_0.module_args(set_0)
    except BaseException:
        pass

def test_case_17():
    try:
        int_0 = -531
        console_c_l_i_0 = module_0.ConsoleCLI(int_0)
        set_0 = set()
        bytes_0 = b'\xfb\xfb\xbcZ\xe7r\xf7b\xd5a\x96uC'
        bool_0 = True
        float_0 = None
        var_0 = console_c_l_i_0.completedefault(bytes_0, bool_0, float_0, set_0)
    except BaseException:
        pass

def test_case_18():
    try:
        str_0 = '9}0X\t(^#r/,0l{'
        list_0 = [str_0]
        console_c_l_i_0 = module_0.ConsoleCLI(list_0)
        dict_0 = {}
        var_0 = console_c_l_i_0.do_diff(dict_0)
        var_1 = console_c_l_i_0.run()
        bytes_0 = b'\x1a\x0f\xbd'
        set_0 = {var_1, str_0, console_c_l_i_0}
        var_2 = console_c_l_i_0.completedefault(console_c_l_i_0, bytes_0, set_0, str_0)
        set_1 = {console_c_l_i_0, console_c_l_i_0, var_1}
        var_3 = console_c_l_i_0.do_verbosity(set_1)
        bool_0 = False
        var_4 = console_c_l_i_0.do_become_user(bool_0)
        var_5 = console_c_l_i_0.do_shell(bool_0)
    except BaseException:
        pass

def test_case_19():
    try:
        int_0 = -531
        console_c_l_i_0 = module_0.ConsoleCLI(int_0)
        bytes_0 = b'\xb1@\xff'
        var_0 = console_c_l_i_0.do_diff(bytes_0)
        dict_0 = {console_c_l_i_0: console_c_l_i_0, int_0: console_c_l_i_0, console_c_l_i_0: int_0, int_0: int_0}
        var_1 = console_c_l_i_0.do_timeout(dict_0)
        bool_0 = False
        console_c_l_i_1 = module_0.ConsoleCLI(bool_0)
    except BaseException:
        pass

def test_case_20():
    try:
        str_0 = '9}0X\t(^#r/,0l{'
        str_1 = 'baseboard-asset-tag'
        list_0 = [str_1]
        console_c_l_i_0 = module_0.ConsoleCLI(list_0)
        var_0 = console_c_l_i_0.run()
        var_1 = console_c_l_i_0.do_become_method(str_0)
        bytes_0 = b'\x85\x86"\x1d\x07\xc6\xc7gdS\x93~O'
        str_2 = 'ActiveState='
        bool_0 = False
        var_2 = console_c_l_i_0.do_become_method(bool_0)
        dict_0 = {console_c_l_i_0: bytes_0, var_1: console_c_l_i_0, var_0: str_2, str_2: str_2}
        var_3 = console_c_l_i_0.do_list(dict_0)
        var_4 = console_c_l_i_0.do_shell(list_0)
    except BaseException:
        pass

def test_case_21():
    try:
        bool_0 = True
        tuple_0 = (bool_0,)
        dict_0 = {tuple_0: bool_0, bool_0: bool_0, tuple_0: bool_0, tuple_0: tuple_0}
        list_0 = []
        str_0 = 'NfFPhGib=}'
        console_c_l_i_0 = module_0.ConsoleCLI(str_0)
        var_0 = console_c_l_i_0.do_become(list_0)
        console_c_l_i_1 = module_0.ConsoleCLI(dict_0)
        var_1 = console_c_l_i_1.init_parser()
    except BaseException:
        pass

def test_case_22():
    try:
        int_0 = -1592
        console_c_l_i_0 = module_0.ConsoleCLI(int_0)
        var_0 = console_c_l_i_0.do_timeout(int_0)
        console_c_l_i_1 = module_0.ConsoleCLI(int_0)
        dict_0 = {console_c_l_i_1: console_c_l_i_1, int_0: console_c_l_i_1, console_c_l_i_1: int_0, int_0: int_0}
        var_1 = console_c_l_i_1.do_timeout(dict_0)
        str_0 = 'L\t8'
        var_2 = console_c_l_i_1.do_cd(str_0)
    except BaseException:
        pass

def test_case_23():
    try:
        str_0 = 'baseboard-asset-tag'
        list_0 = [str_0]
        console_c_l_i_0 = module_0.ConsoleCLI(list_0)
        var_0 = console_c_l_i_0.run()
        var_1 = console_c_l_i_0.do_shell(list_0)
    except BaseException:
        pass

def test_case_24():
    try:
        str_0 = '9}0X\t(^#r/,0l{'
        list_0 = [str_0]
        console_c_l_i_0 = module_0.ConsoleCLI(list_0)
        var_0 = console_c_l_i_0.run()
        bytes_0 = b'\x1a\x0f\xbd'
        set_0 = set()
        var_1 = console_c_l_i_0.completedefault(console_c_l_i_0, bytes_0, set_0, str_0)
        var_2 = console_c_l_i_0.do_shell(bytes_0)
    except BaseException:
        pass

def test_case_25():
    try:
        str_0 = '9}0X\t(^#r/,0l{'
        str_1 = 'baseboard-asset-tag'
        list_0 = [str_1]
        console_c_l_i_0 = module_0.ConsoleCLI(list_0)
        var_0 = console_c_l_i_0.run()
        var_1 = console_c_l_i_0.do_become_method(str_0)
        bytes_0 = b'\x85\x86"\x1d\x07\xc6\xc7gdS\x93~O'
        str_2 = 'ActiveState='
        dict_0 = {console_c_l_i_0: bytes_0, var_1: console_c_l_i_0, var_0: str_2, str_2: str_2}
        var_2 = console_c_l_i_0.do_list(dict_0)
        var_3 = console_c_l_i_0.do_shell(list_0)
    except BaseException:
        pass

def test_case_26():
    try:
        str_0 = '9}0X\t(^#r/,0l{'
        list_0 = [str_0]
        console_c_l_i_0 = module_0.ConsoleCLI(list_0)
        dict_0 = {}
        var_0 = console_c_l_i_0.do_diff(dict_0)
        var_1 = console_c_l_i_0.run()
        bytes_0 = b'\x00\x84kPj\xb7\xa6y\xd5k\xe3\xac\xff1R\xf7\x9a!j\xbc'
        var_2 = console_c_l_i_0.do_timeout(console_c_l_i_0)
        set_0 = set()
        var_3 = console_c_l_i_0.do_diff(set_0)
        set_1 = {var_1, str_0, console_c_l_i_0}
        var_4 = console_c_l_i_0.do_shell(str_0)
        var_5 = console_c_l_i_0.completedefault(console_c_l_i_0, bytes_0, set_1, str_0)
        str_1 = "C{?o'u,G\nn+y1ET]x$x"
        var_6 = console_c_l_i_0.default(str_1)
        var_7 = console_c_l_i_0.do_list(str_0)
        str_2 = 'Z0V79Ug;`SEI?N\x0c?(%j1'
        var_8 = console_c_l_i_0.do_exit(str_2)
        display_0 = module_1.Display()
        var_9 = console_c_l_i_0.do_become_user(display_0)
        bool_0 = True
        var_10 = console_c_l_i_0.do_verbosity(bool_0)
        c_l_i_0 = module_2.CLI(dict_0)
    except BaseException:
        pass

def test_case_27():
    try:
        str_0 = '9}0X\t(^#r/,0l{'
        list_0 = [str_0]
        console_c_l_i_0 = module_0.ConsoleCLI(list_0)
        int_0 = -2903
        var_0 = console_c_l_i_0.do_become_method(int_0)
        var_1 = console_c_l_i_0.run()
        set_0 = set()
        var_2 = console_c_l_i_0.do_diff(set_0)
        var_3 = console_c_l_i_0.do_shell(str_0)
        var_4 = console_c_l_i_0.cmdloop()
        var_5 = console_c_l_i_0.do_become_user(int_0)
        str_1 = '$Es\t'
        float_0 = 1368.01
        var_6 = console_c_l_i_0.complete_cd(list_0, str_1, float_0, console_c_l_i_0)
        var_7 = console_c_l_i_0.do_forks(set_0)
        var_8 = console_c_l_i_0.do_forks(list_0)
    except BaseException:
        pass

def test_case_28():
    try:
        str_0 = 'OR&6kv\\!a('
        list_0 = [str_0]
        console_c_l_i_0 = module_0.ConsoleCLI(list_0)
        var_0 = console_c_l_i_0.run()
        var_1 = console_c_l_i_0.do_timeout(console_c_l_i_0)
        int_0 = 2842
        var_2 = console_c_l_i_0.do_become_user(int_0)
        var_3 = console_c_l_i_0.do_shell(str_0)
        set_0 = {console_c_l_i_0, console_c_l_i_0, var_0}
        str_1 = 'sg8I]\nKnpJ(#H3tJv0'
        float_0 = 1403.9
        var_4 = console_c_l_i_0.do_list(float_0)
        var_5 = console_c_l_i_0.helpdefault(str_1)
        bool_0 = None
        var_6 = console_c_l_i_0.do_cd(bool_0)
        str_2 = '$Es\t'
        var_7 = console_c_l_i_0.complete_cd(list_0, str_2, float_0, console_c_l_i_0)
        var_8 = console_c_l_i_0.do_forks(set_0)
    except BaseException:
        pass