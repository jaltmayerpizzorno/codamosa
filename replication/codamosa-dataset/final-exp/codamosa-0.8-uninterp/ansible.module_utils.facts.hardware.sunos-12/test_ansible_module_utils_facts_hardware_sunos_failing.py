# Automatically generated by Pynguin.
import ansible.module_utils.facts.hardware.sunos as module_0

def test_case_0():
    try:
        float_0 = -1859.0
        sun_o_s_hardware_collector_0 = module_0.SunOSHardwareCollector(float_0)
        list_0 = [sun_o_s_hardware_collector_0, float_0]
        str_0 = 'o3GhH?D99~K\ty'
        str_1 = 'dns'
        sun_o_s_hardware_0 = module_0.SunOSHardware(str_0, str_1)
        var_0 = sun_o_s_hardware_0.populate(list_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = b'\xd2\xec\xbe\xc8*z\x98\xea'
        str_0 = '([?'
        sun_o_s_hardware_0 = module_0.SunOSHardware(str_0)
        dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
        sun_o_s_hardware_1 = module_0.SunOSHardware(dict_0, bytes_0)
        var_0 = sun_o_s_hardware_1.get_cpu_facts(sun_o_s_hardware_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '|5f}1xq@\x0bQkF'
        sun_o_s_hardware_0 = module_0.SunOSHardware(str_0)
        var_0 = sun_o_s_hardware_0.get_memory_facts()
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = "M^2I?'Ec'i\tkc9a"
        sun_o_s_hardware_0 = module_0.SunOSHardware(str_0)
        var_0 = sun_o_s_hardware_0.get_dmi_facts()
    except BaseException:
        pass

def test_case_4():
    try:
        bytes_0 = b'r\xb5\x97\xf6\xe2\xf5\x9a)\x7fL'
        list_0 = []
        sun_o_s_hardware_collector_0 = module_0.SunOSHardwareCollector(list_0)
        sun_o_s_hardware_0 = module_0.SunOSHardware(bytes_0, sun_o_s_hardware_collector_0)
        var_0 = sun_o_s_hardware_0.get_device_facts()
    except BaseException:
        pass

def test_case_5():
    try:
        bool_0 = False
        sun_o_s_hardware_0 = module_0.SunOSHardware(bool_0)
        var_0 = sun_o_s_hardware_0.get_uptime_facts()
    except BaseException:
        pass

def test_case_6():
    try:
        int_0 = -1439
        float_0 = 0.0
        bool_0 = False
        bool_1 = True
        sun_o_s_hardware_collector_0 = module_0.SunOSHardwareCollector()
        tuple_0 = (float_0, bool_0, bool_1, sun_o_s_hardware_collector_0)
        sun_o_s_hardware_0 = module_0.SunOSHardware(int_0, tuple_0)
        var_0 = sun_o_s_hardware_0.get_cpu_facts()
    except BaseException:
        pass