# Automatically generated by Pynguin.
import sanic.exceptions as module_0

def test_case_0():
    pass

def test_case_1():
    str_0 = 'jIeoW"V\\fo!.*Wv'
    header_not_found_0 = module_0.HeaderNotFound(str_0)

def test_case_2():
    float_0 = -3195.096964
    service_unavailable_0 = None
    not_found_0 = module_0.NotFound(service_unavailable_0, service_unavailable_0)
    server_error_0 = None
    list_0 = [server_error_0, float_0]
    server_error_1 = module_0.ServerError(not_found_0, server_error_0, list_0)
    dict_0 = {}
    unauthorized_0 = module_0.Unauthorized(server_error_1, **dict_0)
    bool_0 = True
    u_r_l_build_error_0 = module_0.URLBuildError(bool_0)
    file_not_found_0 = module_0.FileNotFound(not_found_0, unauthorized_0, u_r_l_build_error_0)
    py_file_error_0 = module_0.PyFileError(float_0)
    set_0 = {py_file_error_0}
    forbidden_0 = module_0.Forbidden(py_file_error_0, set_0)

def test_case_3():
    not_found_0 = None
    unauthorized_0 = module_0.Unauthorized(not_found_0)
    header_not_found_0 = module_0.HeaderNotFound(unauthorized_0)

def test_case_4():
    bool_0 = False
    float_0 = -11.342
    request_timeout_0 = None
    set_0 = {bool_0, bool_0, request_timeout_0}
    request_timeout_1 = module_0.RequestTimeout(set_0)
    u_r_l_build_error_0 = module_0.URLBuildError(request_timeout_1)
    py_file_error_0 = module_0.PyFileError(u_r_l_build_error_0)
    load_file_exception_0 = None
    sanic_exception_0 = module_0.SanicException(float_0, load_file_exception_0, load_file_exception_0)
    payload_too_large_0 = module_0.PayloadTooLarge(float_0, py_file_error_0, sanic_exception_0)
    set_1 = {request_timeout_1, request_timeout_1, request_timeout_1}
    dict_0 = {bool_0: bool_0, bool_0: bool_0, payload_too_large_0: set_1}
    payload_too_large_1 = module_0.PayloadTooLarge(dict_0)