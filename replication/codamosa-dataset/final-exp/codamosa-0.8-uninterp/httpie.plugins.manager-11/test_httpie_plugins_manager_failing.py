# Automatically generated by Pynguin.
import httpie.plugins.manager as module_0

def test_case_0():
    try:
        plugin_manager_0 = module_0.PluginManager()
        list_0 = plugin_manager_0.get_auth_plugins()
        list_1 = plugin_manager_0.get_auth_plugins()
        type_0 = None
        var_0 = plugin_manager_0.unregister(type_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'P~=8-VX\n<t)8{S[y]\r?m'
        plugin_manager_0 = module_0.PluginManager()
        type_0 = plugin_manager_0.get_auth_plugin(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b'h\xafn\x91K\xe8{\xdb\x82\xb8\x14k\xbd\xdb}:\xf3\xd5'
        list_0 = [bytes_0]
        plugin_manager_0 = module_0.PluginManager()
        list_1 = plugin_manager_0.get_converters()
        plugin_manager_1 = module_0.PluginManager(*list_0)
        dict_0 = plugin_manager_1.get_auth_plugin_mapping()
    except BaseException:
        pass

def test_case_3():
    try:
        plugin_manager_0 = module_0.PluginManager()
        var_0 = plugin_manager_0.__repr__()
        str_0 = 'jl<GQ3\ng"f'
        plugin_manager_1 = module_0.PluginManager()
        list_0 = plugin_manager_1.get_auth_plugins()
        plugin_manager_2 = module_0.PluginManager()
        dict_0 = plugin_manager_2.get_auth_plugin_mapping()
        list_1 = plugin_manager_2.get_auth_plugins()
        list_2 = plugin_manager_2.get_transport_plugins()
        dict_1 = {str_0: str_0}
        plugin_manager_3 = module_0.PluginManager(**dict_1)
        type_0 = plugin_manager_3.get_auth_plugin(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        plugin_manager_0 = module_0.PluginManager()
        dict_0 = plugin_manager_0.get_auth_plugin_mapping()
        var_0 = plugin_manager_0.register()
        dict_1 = plugin_manager_0.get_formatters_grouped()
        plugin_manager_1 = module_0.PluginManager()
        type_0 = None
        list_0 = [type_0]
        var_1 = plugin_manager_1.register(*list_0)
        list_1 = plugin_manager_1.get_auth_plugins()
    except BaseException:
        pass