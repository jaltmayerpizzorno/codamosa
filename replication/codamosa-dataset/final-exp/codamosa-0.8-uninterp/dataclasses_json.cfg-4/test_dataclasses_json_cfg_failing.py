# Automatically generated by Pynguin.
import dataclasses_json.cfg as module_0
import marshmallow.fields as module_1

def test_case_0():
    try:
        str_0 = "}A~4S7p'"
        dict_0 = module_0.config(undefined=str_0, field_name=str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = 6
        dict_0 = {int_0: int_0}
        set_0 = None
        bool_0 = False
        field_0 = module_1.Field(default=dict_0, required=bool_0, dump_only=bool_0)
        bytes_0 = b''
        str_0 = 'No field of type dataclasses_json.CatchAll defined'
        optional_0 = None
        dict_1 = module_0.config(dict_0, decoder=set_0, mm_field=field_0, letter_case=bytes_0, undefined=str_0, field_name=str_0, exclude=optional_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = "}A~4S7p'"
        dict_0 = module_0.config(undefined=str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '|fm'
        dict_0 = module_0.config(encoder=str_0, undefined=str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = "}A~4S7p'"
        dict_0 = module_0.config(decoder=str_0, undefined=str_0, field_name=str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'test'
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
        dict_1 = module_0.config(dict_0, undefined=str_0)
    except BaseException:
        pass