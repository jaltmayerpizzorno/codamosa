# Automatically generated by Pynguin.
import argparse as module_0
import httpie.client as module_1
import httpie.cli.dicts as module_2
import pathlib as module_3

def test_case_0():
    try:
        namespace_0 = module_0.Namespace()
        request_headers_dict_0 = module_1.make_default_headers(namespace_0)
    except BaseException:
        pass

def test_case_1():
    try:
        namespace_0 = module_0.Namespace()
        dict_0 = module_1.make_send_kwargs(namespace_0)
    except BaseException:
        pass

def test_case_2():
    try:
        namespace_0 = module_0.Namespace()
        dict_0 = module_1.make_send_kwargs_mergeable_from_env(namespace_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'ZuArtr8\tsZ\nL|'
        dict_0 = {str_0: str_0}
        request_headers_dict_0 = module_2.RequestHeadersDict(**dict_0)
        namespace_0 = module_0.Namespace()
        request_headers_dict_1 = module_2.RequestHeadersDict(dict_0)
        request_headers_dict_2 = module_1.finalize_headers(request_headers_dict_0)
        namespace_1 = module_0.Namespace()
        dict_1 = module_1.make_request_kwargs(namespace_1)
    except BaseException:
        pass

def test_case_4():
    try:
        bool_0 = True
        bool_1 = None
        dict_0 = {bool_1: bool_1}
        var_0 = module_1.dump_request(dict_0)
        str_0 = '9G$\tJ{wLb'
        session_0 = module_1.build_requests_session(bool_0, str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'P/`ulL\rBu*O},L'
        str_1 = module_1.ensure_path_as_is(str_0, str_0)
        str_2 = 'ssl3'
        dict_0 = {str_2: str_1, str_1: str_2}
        namespace_0 = module_0.Namespace(**dict_0)
        path_0 = module_3.Path()
        set_0 = {str_2}
        iterable_0 = module_1.collect_messages(namespace_0, path_0, set_0)
        request_headers_dict_0 = module_2.RequestHeadersDict(iterable_0)
    except BaseException:
        pass