# Automatically generated by Pynguin.
import ansible.utils.jsonrpc as module_0

def test_case_0():
    try:
        json_rpc_server_0 = module_0.JsonRpcServer()
        str_0 = '{"method":"__class_is_registered","params":[], "id":"identifier"}'
        var_0 = json_rpc_server_0.handle_request(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        json_rpc_server_0 = module_0.JsonRpcServer()
        bytes_0 = b'{"jsonrpc": "2.0", "method": "response", "params": [[], {}], "id": "1"}'
        var_0 = json_rpc_server_0.handle_request(bytes_0)
        dict_0 = {}
        json_rpc_server_1 = module_0.JsonRpcServer()
        var_1 = json_rpc_server_1.register(dict_0)
    except BaseException:
        pass

def test_case_2():
    try:
        json_rpc_server_0 = module_0.JsonRpcServer()
        var_0 = json_rpc_server_0.internal_error()
    except BaseException:
        pass

def test_case_3():
    try:
        json_rpc_server_0 = module_0.JsonRpcServer()
        bytes_0 = b'{"jsonrpc": "2.0", "method": "response", "params": [[], {}], "id": "1"}'
        var_0 = json_rpc_server_0.handle_request(bytes_0)
        var_1 = json_rpc_server_0.parse_error()
    except BaseException:
        pass

def test_case_4():
    try:
        json_rpc_server_0 = module_0.JsonRpcServer()
        var_0 = json_rpc_server_0.invalid_request()
    except BaseException:
        pass

def test_case_5():
    try:
        json_rpc_server_0 = module_0.JsonRpcServer()
        str_0 = '{"method":"rpc.run_commands","params":[], "id":"identifier"}'
        var_0 = json_rpc_server_0.handle_request(str_0)
    except BaseException:
        pass