# Automatically generated by Pynguin.
import string_utils.validation as module_0

def test_case_0():
    str_0 = 'O'
    i_s_b_n_checker_0 = module_0.__ISBNChecker(str_0)

def test_case_1():
    str_0 = '(r9Q2VQ5*B}$M'
    bool_0 = False
    bool_1 = module_0.is_isbn_13(str_0, bool_0)

def test_case_2():
    str_0 = 'hello world'
    bool_0 = module_0.is_isbn(str_0)
    str_1 = '1506715214'
    bool_1 = module_0.is_isbn(str_1)
    bool_2 = False
    bool_3 = module_0.is_isbn(str_1, bool_2)

def test_case_3():
    str_0 = 'my.email@the-provider.com'
    bool_0 = module_0.is_email(str_0)
    str_1 = '@gmail.com'
    bool_1 = module_0.is_email(str_1)
    bool_2 = module_0.is_isbn(str_1)

def test_case_4():
    str_0 = 'Z'
    bool_0 = module_0.is_isbn(str_0)
    bool_1 = module_0.is_slug(str_0)
    bool_2 = module_0.is_url(str_0)
    bool_3 = module_0.is_isbn_13(str_0)

def test_case_5():
    bool_0 = False
    bool_1 = module_0.is_ip_v4(bool_0)

def test_case_6():
    str_0 = 'y#\x0b;3Q/C4\nQ$rhy~[z='
    bool_0 = module_0.is_number(str_0)

def test_case_7():
    str_0 = '^[a-z]{2}_[A-Z]{2}$'
    bool_0 = module_0.is_integer(str_0)
    bool_1 = module_0.is_email(str_0)
    str_1 = 'vL*'
    i_s_b_n_checker_0 = module_0.__ISBNChecker(str_1, bool_0)
    bool_2 = i_s_b_n_checker_0.is_isbn_13()

def test_case_8():
    str_0 = 'DISCOVER'
    bool_0 = module_0.is_decimal(str_0)

def test_case_9():
    str_0 = '`m=e>5St4umch\x0bny/D'
    float_0 = 1628.613138
    bytes_0 = b'\xab\x18\x99'
    dict_0 = {str_0: float_0, str_0: float_0, bytes_0: float_0, str_0: float_0}
    bool_0 = module_0.is_url(str_0, dict_0)

def test_case_10():
    float_0 = 1928.929
    str_0 = "m0'HEbbdNaA2X;<A`Z"
    bool_0 = module_0.contains_html(str_0)
    bool_1 = module_0.is_url(float_0, float_0)

def test_case_11():
    str_0 = '\x0b4J6'
    bool_0 = module_0.is_email(str_0)

def test_case_12():
    str_0 = '"John Doe" <john.doe@example.com>'
    bool_0 = module_0.is_email(str_0)

def test_case_13():
    list_0 = None
    bool_0 = module_0.is_email(list_0)

def test_case_14():
    str_0 = 'n'
    bool_0 = module_0.is_credit_card(str_0)
    list_0 = [str_0]
    bool_1 = module_0.is_isbn_10(str_0)
    bool_2 = module_0.is_ip(bool_1)
    bool_3 = module_0.is_isogram(list_0)

def test_case_15():
    str_0 = '"John Doe" <john.doe@example.com>'
    bool_0 = module_0.is_email(str_0)
    str_1 = 'k/p"$b'
    set_0 = {str_0, bool_0, bool_0, str_1}
    bool_1 = module_0.is_credit_card(set_0)

def test_case_16():
    int_0 = None
    bool_0 = module_0.is_camel_case(int_0)

def test_case_17():
    int_0 = 714
    str_0 = 'T*Y<_D43bb(:[" w'
    bool_0 = module_0.is_isbn(str_0)
    str_1 = 'o/U1qr@oncsphPX\'"y}X'
    bool_1 = module_0.is_credit_card(int_0)
    int_1 = module_0.words_count(str_1)
    bool_2 = module_0.is_ip(int_0)
    bool_3 = module_0.is_snake_case(int_0, str_1)
    bool_4 = module_0.is_json(str_1)
    bool_5 = module_0.is_email(int_0)

def test_case_18():
    str_0 = '*+9/uCAKXPVOlE-,kUd'
    bool_0 = module_0.is_snake_case(str_0)
    bool_1 = module_0.is_ip(str_0)
    bool_2 = module_0.is_pangram(str_0)
    bool_3 = module_0.is_uuid(bool_0)

def test_case_19():
    bool_0 = False
    bool_1 = module_0.is_json(bool_0)

def test_case_20():
    list_0 = None
    bool_0 = module_0.is_uuid(list_0)

def test_case_21():
    str_0 = '\r5;zp9Je['
    bool_0 = module_0.is_ip_v6(str_0)
    str_1 = 'uAOdPC\'i=HxhZ$S~"'
    bool_1 = module_0.contains_html(str_1)

def test_case_22():
    str_0 = '2001:db8:85a3:0000:0000:8a2e:370:7334'
    bool_0 = module_0.is_ip(str_0)
    str_1 = '1.2.3'
    bool_1 = module_0.is_ip(str_1)

def test_case_23():
    str_0 = '*+9/uCAKXPVOlE-,kUd'
    bool_0 = module_0.is_ip(str_0)
    bool_1 = module_0.is_palindrome(str_0, bool_0)
    bool_2 = module_0.is_pangram(str_0)
    bool_3 = module_0.is_uuid(bool_1)

def test_case_24():
    str_0 = ')9hZ7<XS\x0b\nr:'
    bool_0 = module_0.is_string(str_0)
    bool_1 = module_0.is_ip_v4(str_0)
    bool_2 = module_0.is_palindrome(bool_1)
    bool_3 = module_0.is_slug(str_0)

def test_case_25():
    str_0 = 'D'
    bool_0 = module_0.is_pangram(str_0)

def test_case_26():
    bytes_0 = b'\xe3oh\xbc,%ZF\xd2\x1c\xd0\xefx\xee\xc8'
    bool_0 = module_0.is_pangram(bytes_0)

def test_case_27():
    str_0 = 'kA&.)Bj0\t\x0bW/&'
    bool_0 = module_0.is_decimal(str_0)
    tuple_0 = None
    bool_1 = module_0.is_isogram(tuple_0)
    bool_2 = module_0.is_ip(tuple_0)

def test_case_28():
    bool_0 = True
    bool_1 = module_0.is_slug(bool_0)

def test_case_29():
    str_0 = '^"name": "Peter"}'
    int_0 = module_0.words_count(str_0)
    bool_0 = module_0.is_email(str_0)

def test_case_30():
    str_0 = '\x0b4J6'
    bool_0 = False
    i_s_b_n_checker_0 = module_0.__ISBNChecker(str_0, bool_0)
    bool_1 = i_s_b_n_checker_0.is_isbn_13()

def test_case_31():
    str_0 = 'test@test.com'
    bool_0 = module_0.is_email(str_0)
    str_1 = 'test@test.google.com'
    bool_1 = module_0.is_email(str_1)
    str_2 = 'test@test.co.uk'
    bool_2 = module_0.is_email(str_2)
    str_3 = 'test+1@test.com'
    bool_3 = module_0.is_email(str_3)
    str_4 = 'test+test@test.test.test.test.test.test'
    i_s_b_n_checker_0 = module_0.__ISBNChecker(str_1)
    bool_4 = i_s_b_n_checker_0.is_isbn_13()
    bool_5 = module_0.is_email(str_4)
    str_5 = 'test@test..test'
    bool_6 = module_0.is_email(str_5)
    str_6 = 'test@test.test.'
    bool_7 = module_0.is_pangram(str_2)
    bool_8 = module_0.is_email(str_6)
    str_7 = 'test@@test.com'
    bool_9 = module_0.is_email(str_7)
    str_8 = 'test@test.com.'
    bool_10 = module_0.is_email(str_8)
    str_9 = '.test@test.com'
    bool_11 = module_0.is_email(str_9)

def test_case_32():
    str_0 = '-,!#'
    bool_0 = module_0.is_camel_case(str_0)
    str_1 = 'SM`kA{"Hc'
    bool_1 = False
    i_s_b_n_checker_0 = module_0.__ISBNChecker(str_1, bool_1)
    bool_2 = i_s_b_n_checker_0.is_isbn_10()
    bool_3 = module_0.is_uuid(bool_0)
    bool_4 = module_0.is_ip(str_0)
    int_0 = -4818
    bool_5 = module_0.is_number(str_0)
    bool_6 = module_0.is_ip_v4(int_0)
    bool_7 = module_0.is_snake_case(int_0)
    i_s_b_n_checker_1 = module_0.__ISBNChecker(str_0, bool_3)
    bool_8 = module_0.is_uuid(int_0)
    bool_9 = module_0.is_pangram(bool_6)

def test_case_33():
    str_0 = '[,2 3]'
    bool_0 = module_0.is_json(str_0)
    str_1 = '6nopf}'
    bool_1 = module_0.is_json(str_1)

def test_case_34():
    str_0 = '{"name": "Peter"}'
    bool_0 = module_0.is_json(str_0)

def test_case_35():
    str_0 = '255.200.100.75'
    bool_0 = module_0.is_ip_v4(str_0)

def test_case_36():
    str_0 = 'EzT#]\t.3yw,"6wo&Bm'
    bool_0 = False
    bool_1 = module_0.is_isbn_13(str_0, bool_0)
    bytes_0 = b'=\xfd\x84\x1c\xbb&o]\xc7j\x0cI\x9a\xb6\x891\x1a"\xa3\x99'
    str_1 = '^[a-z]{2}_[a-z]{2}$'
    i_s_b_n_checker_0 = module_0.__ISBNChecker(str_1)
    bool_2 = i_s_b_n_checker_0.is_isbn_10()
    str_2 = 'o65Go'
    tuple_0 = (bytes_0, i_s_b_n_checker_0, i_s_b_n_checker_0, str_2)
    bool_3 = i_s_b_n_checker_0.is_isbn_13()
    bool_4 = module_0.is_slug(tuple_0)
    bool_5 = None
    bool_6 = module_0.is_palindrome(str_2, bool_5)

def test_case_37():
    str_0 = '2001:db8:85a3:0000:0000:8a2e:370:7334'
    bool_0 = module_0.is_ip(str_0)
    bool_1 = module_0.is_ip_v4(bool_0)
    str_1 = '255.200.100.999'
    str_2 = 'h'
    i_s_b_n_checker_0 = module_0.__ISBNChecker(str_2)
    bool_2 = i_s_b_n_checker_0.is_isbn_13()
    bool_3 = module_0.is_ip_v4(str_1)
    bool_4 = module_0.is_isogram(str_0)
    bool_5 = module_0.is_ip_v4(str_0)

def test_case_38():
    str_0 = 'my.email@the-provider.com'
    bool_0 = module_0.is_email(str_0)
    str_1 = 'my.email@the-provider.com.com'
    bool_1 = module_0.is_email(str_1)

def test_case_39():
    bytes_0 = None
    str_0 = 'V'
    bool_0 = module_0.is_decimal(str_0)
    bool_1 = module_0.is_ip_v6(bool_0)
    str_1 = ',LRpi{iIsAii!E'
    bool_2 = module_0.is_snake_case(bytes_0, str_1)
    str_2 = '\rcb@YlBZQ+#O=L:$FL}'
    bool_3 = module_0.is_url(bool_2)
    int_0 = module_0.words_count(str_0)
    bool_4 = module_0.is_isbn(str_2)
    bool_5 = module_0.is_palindrome(str_1)
    bool_6 = module_0.is_credit_card(bool_2)
    bool_7 = module_0.is_email(bool_6)
    i_s_b_n_checker_0 = module_0.__ISBNChecker(str_0)
    bool_8 = module_0.is_json(bool_2)
    bool_9 = i_s_b_n_checker_0.is_isbn_10()
    bool_10 = module_0.is_full_string(bool_6)
    bool_11 = i_s_b_n_checker_0.is_isbn_13()
    bool_12 = module_0.is_email(str_2)
    str_3 = '"m\t+.*\'@.#d'
    bool_13 = module_0.is_isbn(str_3)
    bool_14 = i_s_b_n_checker_0.is_isbn_13()
    bool_15 = module_0.is_isogram(bool_0)
    bool_16 = module_0.is_ip_v4(str_0)
    bool_17 = True
    str_4 = 'e-T@'
    bool_18 = module_0.is_isbn(str_4)
    bool_19 = module_0.is_uuid(bool_6, bool_17)
    bool_20 = module_0.is_email(str_3)
    bool_21 = i_s_b_n_checker_0.is_isbn_10()

def test_case_40():
    str_0 = 'slugify'
    bool_0 = module_0.is_email(str_0)
    str_1 = ''
    bool_1 = module_0.is_camel_case(str_1)
    bool_2 = module_0.is_credit_card(str_1)
    bool_3 = module_0.is_uuid(bool_0)
    bool_4 = module_0.contains_html(str_1)
    str_2 = 'f\x0bpx>4PH38aFw-uvg"X?'
    str_3 = '>'
    bool_5 = module_0.is_slug(bool_2, str_3)
    bool_6 = module_0.is_palindrome(bool_5)
    bool_7 = module_0.is_json(bool_1)
    str_4 = '^([a-z\\d]+'
    str_5 = '8'
    bool_8 = module_0.is_integer(str_5)
    bool_9 = module_0.is_ip_v6(str_4)
    i_s_b_n_checker_0 = module_0.__ISBNChecker(str_2)
    bool_10 = i_s_b_n_checker_0.is_isbn_10()
    bool_11 = module_0.is_camel_case(bool_0)
    bool_12 = i_s_b_n_checker_0.is_isbn_13()
    bool_13 = module_0.is_decimal(str_1)
    set_0 = set()
    bool_14 = module_0.is_camel_case(set_0)
    bool_15 = module_0.is_credit_card(str_4)
    bool_16 = module_0.is_credit_card(bool_0)
    bool_17 = module_0.is_json(str_5)
    bool_18 = module_0.is_email(bool_9)

def test_case_41():
    str_0 = '9Z;vOVeYL2,q<'
    str_1 = '([a-z]+\\d*{sign}[a-z\\d{sign}]*|{sign}+[a-z\\d]+[a-z\\d{sign}]*)'
    bool_0 = module_0.is_integer(str_1)
    bool_1 = module_0.is_number(str_0)
    str_2 = 'C/olNZC#HtGL\rA'
    bool_2 = True
    bool_3 = module_0.is_palindrome(str_1, bool_2)
    i_s_b_n_checker_0 = module_0.__ISBNChecker(str_2)
    bool_4 = module_0.is_json(bool_1)
    bool_5 = module_0.is_isbn_10(str_0)
    bool_6 = i_s_b_n_checker_0.is_isbn_10()
    int_0 = module_0.words_count(str_2)
    bool_7 = i_s_b_n_checker_0.is_isbn_13()
    bool_8 = i_s_b_n_checker_0.is_isbn_13()
    bool_9 = i_s_b_n_checker_0.is_isbn_10()
    bool_10 = i_s_b_n_checker_0.is_isbn_13()

def test_case_42():
    str_0 = 'V'
    bool_0 = module_0.is_ip_v4(str_0)
    str_1 = '\rcb@lYlBZQ+#OqL:$FL}'
    bool_1 = module_0.is_palindrome(str_0)
    bool_2 = module_0.is_slug(str_1)
    bool_3 = module_0.is_ip_v6(str_1)
    bool_4 = module_0.is_email(str_1)
    str_2 = '"m\t+.*\'@.#d'
    bool_5 = module_0.is_isbn(str_2, bool_1)
    str_3 = 'b7wo4J\tl`U?eB-SKe'
    i_s_b_n_checker_0 = module_0.__ISBNChecker(str_3)
    bool_6 = module_0.is_json(str_2)

def test_case_43():
    str_0 = 'my.email@the-provider.com'
    bool_0 = module_0.is_email(str_0)
    str_1 = 'my.email@the-provider.com '
    bool_1 = module_0.is_email(str_1)
    str_2 = '@gmail.com'
    bool_2 = module_0.is_email(str_2)
    str_3 = 'my.email@the-providercom'
    bool_3 = module_0.is_email(str_3)
    str_4 = 'my email@the-provider.com'
    bool_4 = module_0.is_email(str_4)
    str_5 = 'my . email@the-provider.com'
    bool_5 = module_0.is_email(str_5)
    str_6 = 'my. email@the-provider.com'
    bool_6 = module_0.is_email(str_6)
    str_7 = 'my..email@the-provider.com'
    bool_7 = module_0.is_email(str_7)
    str_8 = 'my.email@the-provider.com.'
    bool_8 = module_0.is_email(str_8)
    int_0 = 226
    bool_9 = module_0.is_email(int_0)
    bool_10 = module_0.is_email(bool_7)

def test_case_44():
    bytes_0 = None
    bool_0 = module_0.is_ip(bytes_0)
    str_0 = 'V'
    bool_1 = module_0.is_decimal(str_0)
    bool_2 = module_0.is_ip_v6(bool_0)
    str_1 = ',LRpi{iIsAii!E'
    bool_3 = module_0.is_snake_case(bytes_0, str_1)
    str_2 = '\rcb@YlBZQ+#O=L:$FL}'
    bool_4 = module_0.is_url(bool_3)
    int_0 = module_0.words_count(str_0)
    bool_5 = module_0.is_isbn(str_2)
    bool_6 = module_0.is_isbn_13(str_1)
    bool_7 = module_0.is_palindrome(str_1)
    set_0 = set()
    bool_8 = module_0.is_credit_card(bool_0)
    bool_9 = module_0.is_email(bool_8)
    bool_10 = module_0.is_ip(set_0)
    str_3 = '#^jSr0T f}H3@YU'
    str_4 = '1'
    i_s_b_n_checker_0 = module_0.__ISBNChecker(str_4)
    bool_11 = i_s_b_n_checker_0.is_isbn_10()
    bool_12 = module_0.is_full_string(bool_8)
    bool_13 = module_0.is_ip_v6(str_1)
    bool_14 = i_s_b_n_checker_0.is_isbn_13()
    bool_15 = module_0.is_email(str_2)
    bool_16 = True
    i_s_b_n_checker_1 = module_0.__ISBNChecker(str_3, bool_16)
    bool_17 = i_s_b_n_checker_1.is_isbn_13()
    bool_18 = module_0.is_ip_v4(bool_6)
    str_5 = ',,%QJ.@KG<>fC\x0b!6Yy'
    bool_19 = module_0.is_isbn(str_5)
    bool_20 = module_0.is_isbn(str_3)
    bool_21 = module_0.is_uuid(bool_9)
    bool_22 = module_0.is_email(bool_20)
    bool_23 = module_0.is_email(str_5)

def test_case_45():
    bytes_0 = None
    bool_0 = module_0.is_ip(bytes_0)
    str_0 = 'V'
    bool_1 = module_0.is_decimal(str_0)
    bool_2 = module_0.is_ip_v6(bool_0)
    str_1 = '\n    Checks if a string is formatted as "snake case".\n\n    A string is considered snake case when:\n\n    - it\'s composed only by lowercase/uppercase letters and digits\n    - it contains at least one underscore (or provided separator)\n    - it does not start with a number\n\n    *Examples:*\n\n    >>> is_snake_case(\'foo_bar_baz\') # returns true\n    >>> is_snake_case(\'foo\') # returns false\n\n    :param input_string: String to test.\n    :type input_string: str\n    :param separator: String to use as separator.\n    :type separator: str\n    :return: True for a snake case string, false otherwise.\n    '
    bool_3 = module_0.is_url(bool_0)
    int_0 = module_0.words_count(str_0)
    bool_4 = module_0.is_isbn(str_1)
    bool_5 = module_0.is_isbn_13(str_0)
    bool_6 = module_0.is_palindrome(str_1)
    set_0 = set()
    bool_7 = module_0.is_credit_card(bool_0)
    bool_8 = module_0.is_email(bool_7)
    bool_9 = module_0.is_ip(set_0)
    str_2 = '1'
    i_s_b_n_checker_0 = module_0.__ISBNChecker(str_2)
    bool_10 = i_s_b_n_checker_0.is_isbn_10()
    bool_11 = module_0.is_full_string(bool_7)
    bool_12 = module_0.is_ip_v6(str_2)
    bool_13 = module_0.is_full_string(int_0)
    bool_14 = i_s_b_n_checker_0.is_isbn_13()
    bool_15 = module_0.is_email(str_1)
    str_3 = '"m\t+.*\'@.#d'
    str_4 = '\\\r%DpSI.yM<D3'
    bool_16 = module_0.is_isbn(str_4)
    bool_17 = True
    bool_18 = module_0.is_uuid(bool_17)
    bool_19 = module_0.is_email(bool_4)
    bool_20 = module_0.is_slug(str_0)
    bool_21 = module_0.is_json(str_1)
    bool_22 = module_0.is_isogram(bool_14)
    bool_23 = module_0.is_uuid(bool_11)
    bool_24 = module_0.is_email(str_3)
    bool_25 = module_0.is_email(str_2)

def test_case_46():
    str_0 = '5'
    bool_0 = module_0.is_url(str_0)
    bool_1 = module_0.is_ip_v4(str_0)
    bool_2 = module_0.is_isogram(str_0)
    bool_3 = module_0.is_decimal(str_0)
    bool_4 = module_0.is_integer(str_0)
    bool_5 = module_0.is_palindrome(bool_3)
    bool_6 = module_0.is_number(str_0)
    bool_7 = False
    bool_8 = module_0.is_integer(str_0)
    bool_9 = module_0.is_ip_v4(bool_0)
    bool_10 = module_0.is_email(str_0)
    bool_11 = module_0.is_camel_case(bool_7)
    bool_12 = module_0.is_string(bool_5)
    str_1 = 'iDsdC'
    bool_13 = module_0.is_integer(str_1)
    str_2 = '!k<&w+\\@7q\x0c2y,M\x0b^&S'
    str_3 = ''
    bool_14 = module_0.is_decimal(str_3)
    bool_15 = False
    bool_16 = False
    str_4 = '>'
    bool_17 = module_0.is_isbn_13(str_2)
    i_s_b_n_checker_0 = module_0.__ISBNChecker(str_4, bool_7)
    bool_18 = i_s_b_n_checker_0.is_isbn_13()
    bool_19 = i_s_b_n_checker_0.is_isbn_13()
    bool_20 = module_0.is_palindrome(bool_11, bool_3, bool_3)
    str_5 = 'SbxktI].p7%BgL/wUmLg'
    bool_21 = i_s_b_n_checker_0.is_isbn_13()
    str_6 = 'LH`Sy6+0>a}Tro\x0b'
    list_0 = [str_5, str_6, str_3]
    bool_22 = module_0.is_url(bool_7, list_0)
    bool_23 = module_0.is_ip_v4(str_0)
    i_s_b_n_checker_1 = module_0.__ISBNChecker(str_2, bool_16)
    bool_24 = i_s_b_n_checker_1.is_isbn_10()
    bool_25 = module_0.is_full_string(bool_14)
    bool_26 = i_s_b_n_checker_1.is_isbn_10()
    bool_27 = module_0.is_isbn_13(str_2, bool_15)
    bool_28 = i_s_b_n_checker_1.is_isbn_13()

def test_case_47():
    str_0 = 'hello world'
    bool_0 = module_0.is_isbn(str_0)
    str_1 = '9780312498580'
    bool_1 = module_0.is_isbn(str_1)
    str_2 = '1506715214'
    bool_2 = module_0.is_isbn(str_2)
    bool_3 = module_0.is_json(str_0)

def test_case_48():
    str_0 = '[1, 2, 3]'
    bool_0 = module_0.is_json(str_0)
    str_1 = '{nope}'
    bool_1 = module_0.is_json(str_1)

def test_case_49():
    str_0 = 'http://www.mysite.com'
    bool_0 = module_0.is_url(str_0)
    str_1 = 'https://mysite.com'
    str_2 = 'qZ+'
    list_0 = [str_2]
    bool_1 = module_0.is_url(str_1, list_0)
    bool_2 = module_0.is_url(str_2)

def test_case_50():
    str_0 = '{"name": "Peter"}'
    bool_0 = module_0.is_json(str_0)
    bool_1 = module_0.is_integer(str_0)
    str_1 = "{'name': 'Peer'}"
    str_2 = '$K-1_hfcTD'
    bool_2 = module_0.is_integer(str_2)
    bool_3 = module_0.is_json(str_1)
    str_3 = '[1, 2, 3]'
    bool_4 = module_0.is_json(str_3)
    str_4 = '{nop"e}'
    bool_5 = module_0.is_isbn(str_0)
    bool_6 = module_0.is_palindrome(str_2)
    str_5 = 'e-T@'
    str_6 = '"'
    bool_7 = module_0.is_isbn_10(str_4)
    str_7 = '}1U_'
    bool_8 = False
    i_s_b_n_checker_0 = module_0.__ISBNChecker(str_7, bool_8)
    bool_9 = False
    bool_10 = i_s_b_n_checker_0.is_isbn_13()
    bool_11 = module_0.is_isbn(str_5)
    str_8 = '.mpSUT\n'
    str_9 = 'QQ|<Ka<\x0c'
    bool_12 = module_0.is_isbn(str_9, bool_5)
    bool_13 = i_s_b_n_checker_0.is_isbn_13()
    bool_14 = module_0.is_email(bool_5)
    bool_15 = module_0.is_json(str_0)
    bool_16 = module_0.is_isogram(str_6)
    none_type_0 = None
    bool_17 = module_0.is_url(str_6, none_type_0)
    bool_18 = module_0.is_json(bool_0)
    bool_19 = module_0.is_email(bool_3)
    bool_20 = module_0.is_palindrome(str_8, bool_9, bool_15)

def test_case_51():
    str_0 = '255.200.100.75'
    bool_0 = module_0.is_ip_v4(str_0)
    str_1 = '255.200.100.999'
    bool_1 = module_0.is_ip_v4(str_1)

def test_case_52():
    str_0 = '"Abc\\@def"@example.com'
    bool_0 = module_0.is_email(str_0)
    float_0 = 434.0
    bool_1 = module_0.is_json(float_0)
    str_1 = '[1, 2, 3]'
    bool_2 = module_0.is_json(str_0)
    dict_0 = {str_1: bool_2, bool_0: str_0, str_1: bool_0}
    bool_3 = module_0.is_json(dict_0)