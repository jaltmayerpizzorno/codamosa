# Automatically generated by Pynguin.
import youtube_dl.downloader.ism as module_0

def test_case_0():
    try:
        set_0 = set()
        bytes_0 = b'h\x8c\xcb~\x83\xd2\xef'
        var_0 = module_0.box(set_0, bytes_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bool_0 = False
        list_0 = [bool_0]
        tuple_0 = ()
        str_0 = 'p;ejI]'
        dict_0 = {bool_0: str_0, tuple_0: str_0, bool_0: str_0, bool_0: str_0}
        tuple_1 = (list_0, tuple_0, dict_0)
        str_1 = 'p"198;/L'
        bytes_0 = b'\xd3\x85\x0c\x8c\n'
        var_0 = module_0.full_box(tuple_1, str_1, bytes_0, str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        set_0 = set()
        bytes_0 = b'\xa6\xdf\xc7\x1b\x1d'
        ism_f_d_0 = module_0.IsmFD(bytes_0, bytes_0)
        str_0 = '849a88c1e1ca47d41403c2ba5e59e261'
        var_0 = module_0.write_piff_header(set_0, str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'\x00\x00\x00@moov\x00\x00\x00 trak\x00\x00\x00\x10mdia\x00\x00\x00\x08minf'
        bytes_1 = b'moov'
        bytes_2 = b'trak'
        bytes_3 = b'minf'
        bytes_4 = b'sttb'
        bytes_5 = [bytes_1, bytes_2, bytes_2, bytes_3, bytes_4]
        var_0 = module_0.extract_box_data(bytes_0, bytes_5)
    except BaseException:
        pass

def test_case_4():
    try:
        bytes_0 = b'\xedc? ^m$\xbb[\xb3\x9a\xe88N\xdc?\x95\xc7'
        str_0 = 'Y<Qz\x0b>I(|/4]Hs/'
        dict_0 = {}
        ism_f_d_0 = module_0.IsmFD(str_0, dict_0)
        var_0 = ism_f_d_0.real_download(bytes_0, str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        bytes_0 = b'\x00\x00\x00@moov\x00\x00\x00 trak\x00\x00\x00\x10mdia\x00\x00\x00\x08minf'
        bytes_1 = b'moov'
        bytes_2 = b'trak'
        bytes_3 = b'mdia'
        bytes_4 = b'minf'
        bytes_5 = [bytes_1, bytes_2, bytes_3, bytes_4]
        var_0 = module_0.extract_box_data(bytes_0, bytes_5)
        bytes_6 = b'sttb'
        bytes_7 = [bytes_1, bytes_2, bytes_3, bytes_4, bytes_6]
        var_1 = module_0.extract_box_data(bytes_0, bytes_7)
    except BaseException:
        pass