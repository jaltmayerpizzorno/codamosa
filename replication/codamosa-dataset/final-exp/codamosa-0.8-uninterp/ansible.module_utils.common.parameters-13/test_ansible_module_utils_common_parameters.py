# Automatically generated by Pynguin.
import ansible.module_utils.common.parameters as module_0

def test_case_0():
    pass

def test_case_1():
    int_0 = -648
    bytes_0 = b'\xc5\x08eB\xdd76D^4\xbf\xf7\x88'
    var_0 = module_0.remove_values(int_0, bytes_0)

def test_case_2():
    str_0 = '--requirements-file'
    list_0 = [str_0, str_0, str_0]
    var_0 = module_0.remove_values(list_0, list_0)

def test_case_3():
    bytes_0 = b's\xca\x0b\xa1\x10\x90\x81q\x07\xd3\x82\r\xe3\xaa\x18'
    var_0 = module_0.remove_values(bytes_0, bytes_0)

def test_case_4():
    str_0 = '+DsF/60Q]Z!!evZy#'
    dict_0 = {str_0: str_0}
    bytes_0 = b'\x98\xe3'
    var_0 = module_0.remove_values(dict_0, bytes_0)

def test_case_5():
    bytes_0 = b'\xe9\x0f\xb3=.j0\xac\xb4\xec1\xb8Y\xf0L\x94\xd7q'
    dict_0 = {bytes_0: bytes_0}
    var_0 = module_0.remove_values(bytes_0, dict_0)

def test_case_6():
    str_0 = '--requirements-file'
    set_0 = {str_0, str_0, str_0}
    str_1 = 'F'
    var_0 = module_0.remove_values(set_0, str_1)

def test_case_7():
    tuple_0 = ()
    str_0 = 'hw_timestamp_filters'
    var_0 = module_0.sanitize_keys(tuple_0, str_0)

def test_case_8():
    dict_0 = {}
    list_0 = [dict_0]
    var_0 = module_0.sanitize_keys(dict_0, list_0)

def test_case_9():
    int_0 = -1338
    str_0 = ''
    var_0 = module_0.sanitize_keys(int_0, str_0)

def test_case_10():
    str_0 = 'L'
    set_0 = {str_0, str_0, str_0}
    var_0 = module_0.sanitize_keys(str_0, set_0, str_0)

def test_case_11():
    int_0 = 240
    list_0 = [int_0, int_0, int_0]
    dict_0 = {}
    bytes_0 = b'\n\xc7}'
    var_0 = module_0.sanitize_keys(list_0, dict_0, bytes_0)

def test_case_12():
    str_0 = 'hello'
    var_0 = dict(default=str_0)
    var_1 = dict(test1=var_0)
    var_2 = dict()
    var_3 = module_0.set_fallbacks(var_1, var_2)
    var_4 = set()
    var_5 = dict()
    var_6 = dict(test1=var_5)
    var_7 = module_0.set_fallbacks(var_1, var_6)
    var_8 = dict()

def test_case_13():
    int_0 = -648
    bytes_0 = b'4\x8c\xd5W'
    var_0 = module_0.remove_values(int_0, bytes_0)

def test_case_14():
    list_0 = []
    list_1 = [list_0, list_0, list_0]
    str_0 = '6jBb/+m$k&X>er'
    var_0 = module_0.sanitize_keys(list_1, str_0)
    bytes_0 = b'\x10~\x10<\x1e\xea\xf1\x0e>R\x8d\xb7\xd1'
    var_1 = module_0.remove_values(list_0, bytes_0)

def test_case_15():
    bool_0 = True
    bytes_0 = b'\xf4\x8a\xaa\x15\xaem\xaf\xba"\x12\xb3\x1en'
    tuple_0 = (bool_0, bytes_0)
    var_0 = module_0.remove_values(tuple_0, bytes_0)

def test_case_16():
    str_0 = 'ANSIBLE_NET_SSH_PASSWORD'
    str_1 = 'ANSIBLE_NET_SSH_PASSWORD'
    set_0 = {str_0, str_0, str_0, str_1}
    bytes_0 = b'\n\xe41!PDIw\xcf'
    var_0 = module_0.sanitize_keys(set_0, bytes_0, str_0)

def test_case_17():
    str_0 = 'foo'
    str_1 = [str_0]
    var_0 = module_0.sanitize_keys(str_0, str_1)
    str_2 = [str_0]
    str_3 = [str_0]
    var_1 = module_0.sanitize_keys(str_2, str_3)
    str_4 = 'bar'
    str_5 = [str_0, str_4]
    str_6 = [str_0, str_4]
    var_2 = module_0.sanitize_keys(str_5, str_6)
    str_7 = {str_0: str_4}
    str_8 = [str_0, str_4]
    var_3 = module_0.sanitize_keys(str_7, str_8)
    str_9 = 'ignore_me'
    str_10 = '_ansible_ignore'
    str_11 = {str_0: str_4, str_9: str_4, str_10: str_4}
    str_12 = [str_0, str_4]
    var_4 = module_0.sanitize_keys(str_11, str_12)