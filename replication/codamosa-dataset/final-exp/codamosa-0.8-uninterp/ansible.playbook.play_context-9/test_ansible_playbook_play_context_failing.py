# Automatically generated by Pynguin.
import ansible.playbook.play_context as module_0

def test_case_0():
    try:
        bool_0 = True
        play_context_0 = module_0.PlayContext(bool_0)
    except BaseException:
        pass

def test_case_1():
    try:
        float_0 = 0.001
        play_context_0 = module_0.PlayContext()
        var_0 = play_context_0.set_attributes_from_plugin(float_0)
    except BaseException:
        pass

def test_case_2():
    try:
        play_context_0 = module_0.PlayContext()
        set_0 = {play_context_0, play_context_0, play_context_0}
        var_0 = play_context_0.set_become_plugin(set_0)
        str_0 = 'csharp_utils_module'
        var_1 = play_context_0.update_vars(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        play_context_0 = module_0.PlayContext()
        var_0 = play_context_0.update_vars(play_context_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = ''
        play_context_0 = module_0.PlayContext()
        var_0 = play_context_0.update_vars(str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        play_context_0 = module_0.PlayContext()
        int_0 = 9000
        dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
        play_context_1 = module_0.PlayContext(int_0, dict_0)
    except BaseException:
        pass

def test_case_6():
    try:
        play_context_0 = module_0.PlayContext()
        bytes_0 = b'}\x86hD\x19/Z'
        str_0 = '8Y=P'
        var_0 = play_context_0.set_task_and_variable_override(play_context_0, bytes_0, str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = "|Bv&au['K]V.ZDf\x0ca-J"
        str_1 = 'MBgf1*@[I `_\n'
        bytes_0 = b'9;[\xc1\x18'
        play_context_0 = module_0.PlayContext()
        play_context_1 = None
        dict_0 = {bytes_0: bytes_0, str_1: str_0, bytes_0: play_context_1}
        play_context_2 = module_0.PlayContext()
        var_0 = play_context_2.update_vars(dict_0)
        play_context_3 = module_0.PlayContext()
        bytes_1 = b'}\x86hD\x19/Z'
        str_2 = '8Y=P'
        var_1 = play_context_3.set_task_and_variable_override(play_context_3, bytes_1, str_2)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = "Bv&au['K]V.ZDf\x0ca-J"
        str_1 = 'Mgf1*[I`_\n'
        bytes_0 = b'9;[\xc1\x18'
        play_context_0 = module_0.PlayContext()
        bytes_1 = b'/\x05D\x87\x83'
        dict_0 = {bytes_1: bytes_1, str_1: str_0, bytes_0: play_context_0}
        bool_0 = False
        play_context_1 = module_0.PlayContext(bool_0)
        var_0 = play_context_1.update_vars(dict_0)
        play_context_2 = module_0.PlayContext()
        var_1 = play_context_2.update_vars(dict_0)
        var_2 = play_context_2.set_attributes_from_cli()
        play_context_3 = module_0.PlayContext()
        bytes_2 = b'}\x86hD\x19/Z'
        str_2 = '8Y=P'
        var_3 = play_context_3.set_task_and_variable_override(play_context_3, bytes_2, str_2)
    except BaseException:
        pass