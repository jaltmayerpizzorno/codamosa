# Automatically generated by Pynguin.
import thefuck.logs as module_0

def test_case_0():
    try:
        int_0 = -5612
        complex_0 = None
        var_0 = module_0.exception(int_0, complex_0)
    except BaseException:
        pass

def test_case_1():
    try:
        float_0 = -3052.052
        set_0 = {float_0}
        str_0 = '.<K,Z\x0c&/2,$t'
        var_0 = module_0.rule_failed(set_0, str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '/?Ie|ZHjaFxG.'
        var_0 = module_0.show_corrected_command(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bool_0 = False
        var_0 = module_0.confirm_text(bool_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'env: no such command '
        var_0 = module_0.how_to_configure_alias(str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        bool_0 = None
        var_0 = module_0.already_configured(bool_0)
    except BaseException:
        pass

def test_case_6():
    try:
        bytes_0 = b'\x9dv\xbe*\xba#\xd08\x06\xd3\xd6\xa1\xeeS\x94\x8b\xab\xe7'
        var_0 = module_0.configured_successfully(bytes_0)
    except BaseException:
        pass

def test_case_7():
    try:
        bool_0 = False
        str_0 = 'ã…Ž'
        int_0 = 10
        tuple_0 = (str_0, int_0)
        dict_0 = {bool_0: bool_0, bool_0: bool_0, tuple_0: tuple_0}
        var_0 = module_0.warn(dict_0)
        float_0 = None
        str_1 = '\rN'
        var_1 = module_0.version(dict_0, str_1, tuple_0)
        var_2 = module_0.rule_failed(bool_0, float_0)
    except BaseException:
        pass