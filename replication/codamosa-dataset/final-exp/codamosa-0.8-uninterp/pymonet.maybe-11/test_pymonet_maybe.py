# Automatically generated by Pynguin.
import pymonet.maybe as module_0
import builtins as module_1

def test_case_0():
    pass

def test_case_1():
    bytes_0 = b'SW\x19'
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)

def test_case_2():
    int_0 = -207
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)

def test_case_3():
    object_0 = module_1.object()
    str_0 = 'lM}ksr2w+0h_\x0c|(\x0bTUQ'
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    bool_1 = maybe_0.__eq__(object_0)

def test_case_4():
    var_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(var_0, bool_0)
    str_0 = 'j'
    bool_1 = True
    maybe_1 = module_0.Maybe(str_0, bool_1)
    var_1 = maybe_1.ap(maybe_0)

def test_case_5():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    var_0 = None
    list_1 = [var_0]
    tuple_0 = (var_0, list_1)
    bool_1 = True
    maybe_0 = module_0.Maybe(tuple_0, bool_1)
    var_1 = maybe_0.map(list_0)

def test_case_6():
    float_0 = -2200.0485
    bool_0 = True
    callable_0 = None
    int_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_try()
    dict_0 = {bool_0: bool_0}
    maybe_1 = module_0.Maybe(dict_0, bool_0)
    var_1 = maybe_1.bind(callable_0)
    maybe_2 = module_0.Maybe(float_0, bool_0)
    var_2 = maybe_2.to_lazy()

def test_case_7():
    list_0 = []
    object_0 = module_1.object(*list_0)
    bytes_0 = b"B\xbb\xffc\x8f\n\x14'\xa4\xcf"
    object_1 = module_1.object()
    bool_0 = False
    maybe_0 = module_0.Maybe(object_1, bool_0)
    var_0 = maybe_0.get_or_else(bytes_0)
    list_1 = [var_0, bytes_0, maybe_0]
    bool_1 = False
    var_1 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(list_1, bool_1)
    bool_2 = maybe_1.__eq__(object_0)

def test_case_8():
    str_0 = '[(}\x0c3nF%%>:'
    bytes_0 = b'SW\x19'
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.get_or_else(str_0)

def test_case_9():
    object_0 = module_1.object()
    list_0 = [object_0, object_0, object_0]
    bool_0 = False
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.to_either()

def test_case_10():
    str_0 = 'YcW^"(@d_eXn\t2:'
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_either()

def test_case_11():
    int_0 = -206
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_box()

def test_case_12():
    bool_0 = True
    bool_1 = True
    list_0 = [bool_0, bool_0, bool_1, bool_1]
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.to_lazy()
    var_1 = maybe_0.to_validation()
    maybe_1 = module_0.Maybe(bool_0, bool_1)
    bool_2 = None
    var_2 = maybe_0.map(bool_2)
    object_0 = module_1.object()
    var_3 = maybe_1.to_try()
    var_4 = None
    var_5 = maybe_1.get_or_else(var_4)
    var_6 = maybe_1.to_lazy()
    bool_3 = maybe_1.__eq__(object_0)
    var_7 = maybe_1.to_lazy()
    dict_0 = {}
    var_8 = None
    var_9 = maybe_1.map(var_8)
    maybe_2 = module_0.Maybe(dict_0, bool_0)
    var_10 = maybe_0.to_validation()
    callable_0 = None
    var_11 = maybe_1.filter(callable_0)
    float_0 = -1846.41913
    maybe_3 = module_0.Maybe(float_0, bool_3)
    var_12 = maybe_3.to_try()

def test_case_13():
    float_0 = -2265.307
    int_0 = 118
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.to_either()
    var_1 = None
    var_2 = maybe_0.map(var_1)
    var_3 = maybe_0.to_try()
    bool_1 = True
    maybe_1 = module_0.Maybe(int_0, bool_1)
    var_4 = maybe_1.ap(float_0)

def test_case_14():
    bool_0 = True
    bytes_0 = b'A\x11\x83\xaf0\xe5\xe4\x80\xc0\xc5'
    float_0 = 1305.613
    tuple_0 = (bool_0, bytes_0, float_0, bool_0)
    bool_1 = False
    maybe_0 = module_0.Maybe(tuple_0, bool_1)
    var_0 = maybe_0.to_validation()