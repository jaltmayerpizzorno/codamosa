# Automatically generated by Pynguin.
import tornado.escape as module_0

def test_case_0():
    try:
        bytes_0 = b'2\xa1qQ\x92&B\xdelTt\xd3:\xd1\x9e\xa1\x94'
        str_0 = module_0.xhtml_unescape(bytes_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = b'\xf3\xda\x83\xe0\x92l\xe9\x98\x16\x1d\xe5\xcdn\x9a|'
        any_0 = module_0.json_decode(bytes_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = None
        var_0 = module_0.url_unescape(str_0, str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'\xfa\x01Q\xdf\x82'
        var_0 = module_0.url_unescape(bytes_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = None
        bool_0 = False
        var_0 = module_0.url_unescape(str_0, str_0, bool_0)
    except BaseException:
        pass

def test_case_5():
    try:
        dict_0 = {}
        any_0 = module_0.recursive_unicode(dict_0)
        bytes_0 = b"+\xa1e\xda_\x007EO\xc0'{\xa9\xcb\xd1*#\xfdu\xff"
        any_1 = module_0.json_decode(bytes_0)
    except BaseException:
        pass

def test_case_6():
    try:
        float_0 = 2600.0
        str_0 = '<'
        bytes_0 = b'QP.\x85B\xa0w\x90\x9aUOt\xbes\xff\xd9\xfb'
        list_0 = [bytes_0, bytes_0, bytes_0]
        str_1 = ''
        bool_0 = False
        var_0 = module_0.url_unescape(str_1, str_1, bool_0)
        str_2 = ''
        dict_0 = {str_0: list_0, str_1: list_0, str_2: list_0}
        tuple_0 = (float_0, dict_0, str_0)
        any_0 = module_0.recursive_unicode(tuple_0)
    except BaseException:
        pass

def test_case_7():
    try:
        float_0 = None
        optional_0 = module_0.utf8(float_0)
        list_0 = [optional_0, float_0]
        optional_1 = module_0.utf8(list_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = '\r\x0b'
        bool_0 = True
        dict_0 = module_0.parse_qs_bytes(str_0, bool_0)
        str_1 = 'D&_'
        str_2 = module_0.url_escape(str_1)
        str_3 = 'ContextManager'
        str_4 = ''
        str_5 = "trN]eWuj}8'*j"
        list_0 = [str_3, str_4, str_1, str_5]
        str_6 = module_0.linkify(str_1, list_0)
        str_7 = module_0.xhtml_escape(str_2)
        str_8 = module_0.xhtml_escape(str_0)
        str_9 = module_0.xhtml_unescape(str_8)
        bool_1 = False
        dict_1 = module_0.parse_qs_bytes(str_4, bool_1)
        str_10 = module_0.xhtml_unescape(str_4)
        optional_0 = module_0.utf8(str_7)
        tuple_0 = ()
        any_0 = module_0.recursive_unicode(tuple_0)
        optional_1 = module_0.utf8(str_4)
        str_11 = module_0.xhtml_unescape(str_3)
        any_1 = module_0.json_decode(str_1)
    except BaseException:
        pass

def test_case_9():
    try:
        dict_0 = {}
        optional_0 = module_0.to_unicode(dict_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = 'http//www.kakxa.com'
        bool_0 = True
        str_1 = '\x0brrR\tz=TA5bo%>[q(8&'
        list_0 = [str_0, str_0, str_0, str_1]
        str_2 = module_0.linkify(str_0, bool_0, str_0, list_0)
        str_3 = 'http://example.com/path with spaces'
        str_4 = module_0.linkify(str_0)
        bool_1 = False
        var_0 = module_0.url_unescape(str_4)
        str_5 = module_0.linkify(str_3, str_3, bool_1)
        str_6 = module_0.xhtml_escape(str_5)
        str_7 = module_0.url_escape(str_6)
        str_8 = '<$R7T&)"4E'
        any_0 = module_0.json_decode(str_8)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = 'http://www&amp;quot;&amp;gt;http:/'
        str_1 = module_0.linkify(str_0)
        str_2 = module_0.xhtml_escape(str_0)
        bool_0 = True
        bool_1 = False
        str_3 = module_0.linkify(str_1, bool_0, bool_1)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = 'http://www.kaka.com'
        str_1 = module_0.json_encode(str_0)
        str_2 = 'aw\\?yo`f'
        bool_0 = False
        str_3 = module_0.url_escape(str_2, bool_0)
        optional_0 = module_0.to_unicode(str_3)
        bool_1 = True
        str_4 = '\x0brrR\tz=TA5bo%>[q(8&'
        str_5 = module_0.json_encode(str_0)
        list_0 = [str_0, str_0, str_0, str_4]
        str_6 = module_0.linkify(str_0, bool_1, str_0, list_0)
        str_7 = 'http://example.com/path with spaces'
        bytes_0 = b'\x80\x9aR\xe9'
        optional_1 = module_0.utf8(bytes_0)
        bool_2 = False
        str_8 = module_0.linkify(str_0)
        bool_3 = False
        var_0 = module_0.url_unescape(str_8)
        str_9 = module_0.xhtml_escape(str_6)
        str_10 = module_0.linkify(str_7, str_7, bool_3)
        str_11 = 'cass=]test'
        str_12 = module_0.url_escape(str_8, bool_2)
        optional_2 = module_0.utf8(str_11)
        list_1 = None
        str_13 = module_0.linkify(str_12, str_7)
        str_14 = module_0.json_encode(str_13)
        str_15 = module_0.linkify(str_6, list_1)
        str_16 = module_0.linkify(str_7, str_0, list_0)
    except BaseException:
        pass