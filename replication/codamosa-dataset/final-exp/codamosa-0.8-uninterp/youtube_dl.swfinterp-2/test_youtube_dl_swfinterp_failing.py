# Automatically generated by Pynguin.
import youtube_dl.swfinterp as module_0

def test_case_0():
    try:
        str_0 = ';;r)Zm&Ij}}brBqUa]U;'
        s_w_f_interpreter_0 = module_0.SWFInterpreter(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'c\'t">SGn'
        str_1 = '|j\tQ! "P_|H'
        undefined_0 = module_0._Undefined()
        var_0 = undefined_0.__bool__()
        bool_0 = False
        dict_0 = {}
        undefined_1 = module_0._Undefined(**dict_0)
        dict_1 = {str_0: str_0, str_0: str_0, str_1: bool_0, str_0: undefined_1}
        a_v_m_class__object_0 = module_0._AVMClass_Object(dict_1)
        multiname_0 = module_0._Multiname(a_v_m_class__object_0)
        a_v_m_class__object_1 = module_0._AVMClass_Object(multiname_0)
        var_1 = a_v_m_class__object_1.__repr__()
    except BaseException:
        pass

def test_case_2():
    try:
        float_0 = 206.013
        scope_dict_0 = module_0._ScopeDict(float_0)
        dict_0 = {float_0: float_0, float_0: float_0}
        multiname_0 = module_0._Multiname(float_0)
        a_v_m_class_0 = module_0._AVMClass(scope_dict_0, dict_0, multiname_0)
        int_0 = -2701
        scope_dict_1 = module_0._ScopeDict(int_0)
        var_0 = scope_dict_1.__repr__()
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'x<\nG"C+@'
        float_0 = 61.567
        list_0 = []
        dict_0 = {}
        undefined_0 = module_0._Undefined(*list_0, **dict_0)
        tuple_0 = (undefined_0,)
        dict_1 = {str_0: str_0, str_0: float_0, str_0: tuple_0}
        str_1 = 'y5M@<Y]'
        a_v_m_class_0 = module_0._AVMClass(dict_1, str_1)
        var_0 = a_v_m_class_0.make_object()
        bytes_0 = b'"SS\xb1\xce\xef\x9e\x8c`1\x0e\xeb\xb1\x17\x83\xea\xc0\xfc_'
        s_w_f_interpreter_0 = module_0.SWFInterpreter(bytes_0)
    except BaseException:
        pass

def test_case_4():
    try:
        dict_0 = None
        str_0 = 'P9W*h\x0b)~.[ez'
        dict_1 = {str_0: dict_0}
        bytes_0 = b'7g\xcf\xd7'
        undefined_0 = module_0._Undefined()
        a_v_m_class_0 = module_0._AVMClass(bytes_0, undefined_0)
        var_0 = a_v_m_class_0.register_methods(dict_1)
        undefined_1 = module_0._Undefined()
        str_1 = '+&kp~7YO?tJGn='
        var_1 = undefined_1.__str__()
        var_2 = undefined_1.__hash__()
        var_3 = undefined_1.__str__()
        s_w_f_interpreter_0 = module_0.SWFInterpreter(str_1)
    except BaseException:
        pass

def test_case_5():
    try:
        int_0 = 1430825520
        dict_0 = {int_0: int_0}
        a_v_m_class_0 = module_0._AVMClass(int_0, dict_0)
        var_0 = a_v_m_class_0.make_object()
        bytes_0 = b'\x1b\xc9[|\r\xd26\x1f9\x05Q\x80\xc2\xad\x8d\x1f\xdf\xd6'
        bool_0 = False
        multiname_0 = module_0._Multiname(bool_0)
        var_1 = multiname_0.__repr__()
        a_v_m_class_1 = module_0._AVMClass(bytes_0, multiname_0)
        scope_dict_0 = module_0._ScopeDict(a_v_m_class_1)
        int_1 = 768
        s_w_f_interpreter_0 = module_0.SWFInterpreter(int_1)
    except BaseException:
        pass

def test_case_6():
    try:
        undefined_0 = module_0._Undefined()
        str_0 = '+&kp~7YO?tJGn='
        var_0 = undefined_0.__hash__()
        var_1 = undefined_0.__str__()
        s_w_f_interpreter_0 = module_0.SWFInterpreter(str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        bytes_0 = b'"SS\xb1\xce\xef\x9e\x8c`1\x0e\xeb\xb1\x17\x83\xea\xc0\xfc_'
        float_0 = -1817.99533
        list_0 = [float_0, bytes_0]
        a_v_m_class_0 = module_0._AVMClass(float_0, list_0)
        var_0 = a_v_m_class_0.__repr__()
        s_w_f_interpreter_0 = module_0.SWFInterpreter(bytes_0)
    except BaseException:
        pass

def test_case_8():
    try:
        bytes_0 = b'"SS\xb1\xce\xef\x9e\x8c`1\x0e\xeb\xb1F\x83\xea\xc0\xfc_'
        int_0 = -2537
        undefined_0 = module_0._Undefined()
        tuple_0 = (undefined_0,)
        str_0 = '{;M%A\\1\x0bacY&hMRu7\nc'
        dict_0 = {str_0: tuple_0}
        a_v_m_class_0 = module_0._AVMClass(int_0, tuple_0, dict_0)
        scope_dict_0 = module_0._ScopeDict(a_v_m_class_0)
        var_0 = scope_dict_0.__repr__()
        int_1 = 739
        list_0 = [bytes_0, int_1, int_1, bytes_0]
        undefined_1 = module_0._Undefined(*list_0)
    except BaseException:
        pass