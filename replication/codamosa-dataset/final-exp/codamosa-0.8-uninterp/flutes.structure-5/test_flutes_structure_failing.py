# Automatically generated by Pynguin.
import flutes.structure as module_0

def test_case_0():
    try:
        dict_0 = None
        list_0 = module_0.reverse_map(dict_0)
    except BaseException:
        pass

def test_case_1():
    try:
        type_0 = None
        module_0.register_no_map_class(type_0)
        bool_0 = False
        list_0 = []
        var_0 = module_0.map_structure_zip(bool_0, list_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bool_0 = True
        var_0 = module_0.no_map_instance(bool_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b"\xaf\xde\xf0\x82|\rb\x87>\x0e-\xe3\x9e\xc6')\xf1\xac"
        var_0 = module_0.no_map_instance(bytes_0)
        dict_0 = None
        list_0 = module_0.reverse_map(dict_0)
    except BaseException:
        pass

def test_case_4():
    try:
        list_0 = None
        int_0 = 2899
        bool_0 = True
        float_0 = 1.0
        tuple_0 = (list_0, int_0, bool_0, float_0)
        tuple_1 = (tuple_0, bool_0, tuple_0, tuple_0)
        dict_0 = {}
        var_0 = module_0.map_structure(dict_0, dict_0)
        var_1 = module_0.map_structure_zip(int_0, tuple_1)
    except BaseException:
        pass

def test_case_5():
    try:
        int_0 = -823
        str_0 = 'exception_wrapper'
        var_0 = module_0.map_structure(int_0, str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        bytes_0 = b'M\xf5p\x14#\x97\xb7\xcf\xb3\x82\xf3\x96\xd6\xcd\\\xae\xdb\xa3GD'
        set_0 = {bytes_0, bytes_0}
        list_0 = []
        int_0 = -1169
        bool_0 = False
        int_1 = 2658
        bytes_1 = b'\xce\x88\xa8q\xac\x1f\xbd:t\xa2\x88\x03\xd2\x06\xe3\xce,\xe8'
        bool_1 = False
        tuple_0 = (bytes_1, bool_1)
        int_2 = 2321
        str_0 = '^PDi}%`%E'
        dict_0 = {bool_0: int_1, tuple_0: int_1, bool_0: int_2, str_0: int_0}
        list_1 = module_0.reverse_map(dict_0)
        list_2 = []
        str_1 = 'TAd? ;rFuHj'
        tuple_1 = (list_0, int_0, list_2, str_1)
        bool_2 = True
        tuple_2 = (set_0, tuple_1, list_0, bool_2)
        var_0 = module_0.map_structure_zip(bytes_0, tuple_2)
    except BaseException:
        pass

def test_case_7():
    try:
        float_0 = 0.0
        list_0 = [float_0]
        var_0 = module_0.map_structure_zip(float_0, list_0)
    except BaseException:
        pass

def test_case_8():
    try:
        int_0 = -197
        type_0 = None
        module_0.register_no_map_class(type_0)
        bool_0 = False
        list_0 = [int_0]
        float_0 = 4526.23
        var_0 = module_0.no_map_instance(float_0)
        var_1 = module_0.no_map_instance(list_0)
        dict_0 = {int_0: list_0, bool_0: bool_0, bool_0: int_0}
        str_0 = '~c\\\t'
        list_1 = [dict_0, str_0, dict_0]
        var_2 = module_0.map_structure(bool_0, list_1)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'gF/'
        int_0 = 2
        var_0 = module_0.no_map_instance(int_0)
        var_1 = module_0.no_map_instance(str_0)
        int_1 = 27
        dict_0 = {var_1: str_0, var_1: int_1, int_1: str_0, str_0: str_0}
        var_2 = module_0.map_structure(dict_0, dict_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = None
        int_0 = None
        float_0 = -4538.512
        str_1 = '/&^E@*u\x0c$e%|daw\x0clRYW'
        dict_0 = {str_0: int_0, float_0: int_0, str_1: int_0}
        list_0 = module_0.reverse_map(dict_0)
    except BaseException:
        pass

def test_case_11():
    try:
        dict_0 = None
        bool_0 = True
        list_0 = [bool_0]
        str_0 = 'J\x0b7n(2Y'
        tuple_0 = (list_0, str_0, dict_0)
        var_0 = module_0.map_structure_zip(bool_0, tuple_0)
    except BaseException:
        pass

def test_case_12():
    try:
        float_0 = 1.0
        bytes_0 = b'\xc3\x0e\n]lt\r\xad\xde\xb8uXp\xe6'
        str_0 = 'DEbYi~!Z\n%U4=\t:5'
        tuple_0 = (float_0, bytes_0, str_0)
        var_0 = module_0.map_structure(str_0, tuple_0)
    except BaseException:
        pass

def test_case_13():
    try:
        set_0 = set()
        str_0 = ''
        var_0 = None
        int_0 = -889
        dict_0 = {var_0: int_0, var_0: int_0, var_0: int_0}
        list_0 = module_0.reverse_map(dict_0)
        list_1 = module_0.reverse_map(dict_0)
        var_1 = None
        list_2 = [list_1, var_1, var_1, var_1]
        tuple_0 = ()
        var_2 = module_0.map_structure(list_2, tuple_0)
        list_3 = [dict_0, str_0, list_0, set_0]
        var_3 = module_0.map_structure_zip(tuple_0, list_3)
    except BaseException:
        pass

def test_case_14():
    try:
        int_0 = 1
        int_1 = 2
        int_2 = 3
        int_3 = [int_0, int_1, int_2]
        var_0 = module_0.no_map_instance(int_3)
        set_0 = set()
        list_0 = [set_0]
        tuple_0 = (list_0, set_0)
        var_1 = module_0.map_structure(set_0, tuple_0)
    except BaseException:
        pass

def test_case_15():
    try:
        str_0 = '04!+\r\rv]7=t'
        var_0 = module_0.no_map_instance(str_0)
        bytes_0 = b"\xaf\xde\xf0\x82|\rb\x87>\x0e-\xe3\x9e\xc6')\xf1\xac"
        var_1 = module_0.no_map_instance(bytes_0)
        list_0 = []
        list_1 = [list_0, var_1, str_0, str_0]
        var_2 = module_0.map_structure(list_0, list_1)
    except BaseException:
        pass

def test_case_16():
    try:
        str_0 = 'gF/'
        int_0 = 2
        var_0 = module_0.no_map_instance(int_0)
        var_1 = module_0.no_map_instance(var_0)
        int_1 = 42
        dict_0 = {var_1: str_0, var_1: int_1, int_1: str_0, str_0: str_0}
        var_2 = module_0.map_structure(dict_0, dict_0)
    except BaseException:
        pass

def test_case_17():
    try:
        bytes_0 = b'\xf9D7.\x08a\xdbg\xd3|T\xc0*\xba\x1b\xa6'
        list_0 = [bytes_0]
        list_1 = []
        list_2 = [list_1, list_1]
        tuple_0 = (list_2,)
        var_0 = module_0.map_structure_zip(list_0, tuple_0)
    except BaseException:
        pass

def test_case_18():
    try:
        bytes_0 = b'\xf9D7.\x08a\xdbg\xd3|T\xc0*\xba\x1b\xa6'
        float_0 = -4675.445814
        var_0 = module_0.no_map_instance(float_0)
        list_0 = [bytes_0]
        list_1 = []
        list_2 = [list_1, list_1]
        tuple_0 = (list_2,)
        var_1 = module_0.map_structure_zip(list_0, tuple_0)
    except BaseException:
        pass

def test_case_19():
    try:
        str_0 = 'a'
        str_1 = 'b'
        str_2 = 'c'
        int_0 = 1
        int_1 = 2
        int_2 = 3
        int_3 = {str_0: int_0, str_1: int_1, str_2: int_2}
        int_4 = 4
        int_5 = 5
        int_6 = 6
        int_7 = {str_0: int_4, str_1: int_5, str_2: int_6}
        int_8 = [int_3, int_7]
        int_9 = 7
        int_10 = 8
        int_11 = 9
        int_12 = {str_0: int_9, str_1: int_10, str_2: int_11}
        int_13 = 10
        int_14 = 11
        int_15 = 12
        int_16 = {str_0: int_13, str_1: int_14, str_2: int_15}
        int_17 = [int_12, int_16]
        var_0 = lambda x, y: x + y
        var_1 = module_0.map_structure_zip(var_0, int_8)
        var_2 = print(var_1)
        var_3 = lambda x, y: x + y
        var_4 = int_8 + int_17
        var_5 = module_0.map_structure_zip(var_3, var_4)
    except BaseException:
        pass

def test_case_20():
    try:
        list_0 = None
        int_0 = 2895
        bool_0 = True
        float_0 = 6.072901371904686
        tuple_0 = (list_0, int_0, bool_0, float_0)
        list_1 = [tuple_0]
        var_0 = module_0.map_structure_zip(bool_0, list_1)
    except BaseException:
        pass