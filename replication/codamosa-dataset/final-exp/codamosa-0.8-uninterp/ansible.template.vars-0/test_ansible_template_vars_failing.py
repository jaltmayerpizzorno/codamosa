# Automatically generated by Pynguin.
import ansible.template.vars as module_0

def test_case_0():
    try:
        bool_0 = False
        bytes_0 = b'\x1dy\xf9\xbc\xfb`\xd2\xcd\xb6\x1e0\xa7\xabj\xbe'
        ansible_j2_vars_0 = module_0.AnsibleJ2Vars(bytes_0, bytes_0)
        var_0 = ansible_j2_vars_0.__contains__(bool_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'iH1Ik[-QM%%'
        float_0 = 1000.0
        float_1 = -2854.385073
        set_0 = {str_0, float_1, float_0}
        ansible_j2_vars_0 = module_0.AnsibleJ2Vars(str_0, float_0, set_0)
        var_0 = ansible_j2_vars_0.__iter__()
    except BaseException:
        pass

def test_case_2():
    try:
        tuple_0 = ()
        bytes_0 = b'["\xec\x9e\xb8'
        ansible_j2_vars_0 = module_0.AnsibleJ2Vars(tuple_0, bytes_0)
        var_0 = ansible_j2_vars_0.__len__()
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '3"\r4DY$s@&f \x0b9'
        bool_0 = False
        set_0 = set()
        ansible_j2_vars_0 = module_0.AnsibleJ2Vars(bool_0, set_0)
        var_0 = ansible_j2_vars_0.__getitem__(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        bytes_0 = b'\x8c\x05\x07\xe0k'
        bool_0 = False
        ansible_j2_vars_0 = module_0.AnsibleJ2Vars(bool_0, bool_0)
        set_0 = set()
        ansible_j2_vars_1 = module_0.AnsibleJ2Vars(ansible_j2_vars_0, set_0)
        var_0 = ansible_j2_vars_1.add_locals(bytes_0)
    except BaseException:
        pass

def test_case_5():
    try:
        set_0 = None
        dict_0 = {set_0: set_0}
        int_0 = 581
        tuple_0 = ()
        ansible_j2_vars_0 = module_0.AnsibleJ2Vars(int_0, tuple_0, int_0)
        var_0 = ansible_j2_vars_0.add_locals(dict_0)
    except BaseException:
        pass

def test_case_6():
    try:
        bytes_0 = b'\xfd2qH'
        str_0 = 'bct`'
        tuple_0 = None
        dict_0 = {str_0: bytes_0, str_0: str_0, bytes_0: str_0, str_0: tuple_0}
        ansible_j2_vars_0 = module_0.AnsibleJ2Vars(str_0, str_0, dict_0)
        var_0 = ansible_j2_vars_0.__contains__(str_0)
        var_1 = ansible_j2_vars_0.__getitem__(bytes_0)
        set_0 = None
        int_0 = -668
        int_1 = -1381
        ansible_j2_vars_1 = module_0.AnsibleJ2Vars(int_0, int_1)
        var_2 = ansible_j2_vars_1.add_locals(set_0)
        var_3 = ansible_j2_vars_0.__getitem__(tuple_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = '_available_variables'
        str_1 = 'foo'
        str_2 = 'fizz'
        str_3 = 'bar'
        str_4 = 'buzz'
        str_5 = {str_1: str_3, str_2: str_4}
        str_6 = {str_0: str_5}
        str_7 = 'baz'
        str_8 = 'bat'
        str_9 = {str_7: str_8}
        str_10 = 'l_local'
        str_11 = 'local'
        str_12 = {str_10: str_11}
        ansible_j2_vars_0 = module_0.AnsibleJ2Vars(str_6, str_9, str_12)
        var_0 = list(ansible_j2_vars_0)
    except BaseException:
        pass

def test_case_8():
    try:
        bytes_0 = b'\xfd2qH'
        str_0 = 'bct`'
        tuple_0 = None
        dict_0 = {str_0: bytes_0, str_0: str_0, bytes_0: str_0, str_0: tuple_0}
        ansible_j2_vars_0 = module_0.AnsibleJ2Vars(str_0, str_0, dict_0)
        var_0 = ansible_j2_vars_0.__contains__(str_0)
        var_1 = ansible_j2_vars_0.__getitem__(bytes_0)
        var_2 = ansible_j2_vars_0.__getitem__(tuple_0)
    except BaseException:
        pass