# Automatically generated by Pynguin.
import ansible.inventory.manager as module_0

def test_case_0():
    try:
        bytes_0 = b'\n\xe3\x15gG\x12\x04\xc6i]\xcd7\x93\xcd\x12'
        var_0 = module_0.order_patterns(bytes_0)
    except BaseException:
        pass

def test_case_1():
    try:
        set_0 = set()
        var_0 = module_0.order_patterns(set_0)
        int_0 = 2757
        inventory_manager_0 = module_0.InventoryManager(set_0, int_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'hxos)t'
        inventory_manager_0 = module_0.InventoryManager(str_0, str_0)
        var_0 = inventory_manager_0.list_hosts()
        bytes_0 = b'B\x0bdS\x95T\xb7\x97\xfa\xd4\xa6Y%g\xfaZ\xe1'
        float_0 = -1909.722533
        tuple_0 = (float_0,)
        str_1 = 'convert_data'
        var_1 = inventory_manager_0.get_hosts(tuple_0, str_1)
        var_2 = inventory_manager_0.subset(bytes_0)
        var_3 = len(inventory_manager_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = "Me%D\n&2'fAGCi=q?7N]"
        list_0 = [str_0, str_0, str_0]
        tuple_0 = (str_0, list_0)
        int_0 = 22
        inventory_manager_0 = module_0.InventoryManager(int_0)
        var_0 = inventory_manager_0.add_host(tuple_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'ho)t1'
        inventory_manager_0 = module_0.InventoryManager(str_0, str_0)
        var_0 = inventory_manager_0.list_hosts()
        bool_0 = False
        var_1 = inventory_manager_0.add_group(bool_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'host2'
        inventory_manager_0 = module_0.InventoryManager(str_0, str_0)
        inventory_manager_1 = module_0.InventoryManager(inventory_manager_0)
        var_0 = inventory_manager_1.reconcile_inventory()
        bytes_0 = b'+\x84\xaf\xb7\xf0`^s]@\xe4\xf7"@0\xa9\xe8'
        var_1 = inventory_manager_1.subset(bytes_0)
    except BaseException:
        pass

def test_case_6():
    try:
        list_0 = []
        bytes_0 = b'T\x1b\xdbP\xbf)\xa8\xe2\xcc\xaf\xae\xa9\xdb\xc7\xb5l'
        float_0 = -687.27066
        inventory_manager_0 = module_0.InventoryManager(float_0)
        var_0 = inventory_manager_0.list_groups()
        inventory_manager_1 = module_0.InventoryManager(list_0, bytes_0)
    except BaseException:
        pass

def test_case_7():
    try:
        bool_0 = True
        bool_1 = False
        inventory_manager_0 = module_0.InventoryManager(bool_1)
        var_0 = inventory_manager_0.restrict_to_hosts(bool_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = 'module_util {0} has been removed'
        set_0 = {str_0, str_0, str_0}
        float_0 = 1120.979
        inventory_manager_0 = module_0.InventoryManager(float_0)
        int_0 = -5397
        inventory_manager_1 = module_0.InventoryManager(int_0)
        var_0 = inventory_manager_1.parse_sources()
        var_1 = inventory_manager_0.remove_restriction()
        bytes_0 = b'x1\x82\x80'
        inventory_manager_2 = module_0.InventoryManager(set_0, bytes_0)
    except BaseException:
        pass

def test_case_9():
    try:
        int_0 = None
        str_0 = '!a(4xjdlaq\n&,'
        bytes_0 = b'\x90`\xc0tI\xe1)\xee0\xee/5\x06\xd9CM\xa3\xa4?\xde'
        list_0 = [int_0, bytes_0, int_0]
        inventory_manager_0 = module_0.InventoryManager(list_0, str_0)
        var_0 = inventory_manager_0.clear_pattern_cache()
        list_1 = [int_0, int_0]
        bool_0 = True
        str_1 = 't7o\\"e'
        str_2 = 'Fa\n'
        var_1 = inventory_manager_0.get_hosts(list_1, str_2, bool_0, str_1)
    except BaseException:
        pass

def test_case_10():
    try:
        int_0 = None
        bool_0 = False
        str_0 = '!a(4xjdlaq\n&,'
        inventory_manager_0 = module_0.InventoryManager(bool_0, str_0)
        var_0 = inventory_manager_0.clear_pattern_cache()
        float_0 = -1805.52434
        var_1 = inventory_manager_0.list_hosts()
        bytes_0 = b'\x90`\xc0tI\xe1)\xee0\xee/5\x06\xd9CM\xa3\xa4?\xde'
        list_0 = [int_0, bytes_0, int_0]
        inventory_manager_1 = module_0.InventoryManager(list_0, str_0)
        var_2 = inventory_manager_1.clear_pattern_cache()
        set_0 = None
        var_3 = inventory_manager_1.get_hosts()
        tuple_0 = (set_0, int_0)
        var_4 = inventory_manager_0.get_groups_dict()
        list_1 = [int_0, int_0]
        bool_1 = True
        bool_2 = False
        var_5 = inventory_manager_1.subset(bool_2)
        var_6 = inventory_manager_0.get_hosts(list_0)
        var_7 = inventory_manager_1.subset(float_0)
        var_8 = inventory_manager_0.get_hosts()
        var_9 = inventory_manager_0.get_host(bool_1)
        inventory_manager_2 = module_0.InventoryManager(tuple_0)
        var_10 = inventory_manager_0.restrict_to_hosts(list_1)
    except BaseException:
        pass

def test_case_11():
    try:
        int_0 = None
        bytes_0 = b'6#C\xf05&\xb4\xd4\xb1'
        float_0 = -1805.5243
        tuple_0 = ()
        inventory_manager_0 = module_0.InventoryManager(float_0, tuple_0)
        var_0 = inventory_manager_0.subset(bytes_0)
        str_0 = 'M-r'
        var_1 = inventory_manager_0.clear_caches()
        bytes_1 = b'\x90`\xc0tI\xe1)\xee0\xee/5\x06\xd9CM\xa3\xa4?\xde'
        list_0 = []
        inventory_manager_1 = module_0.InventoryManager(list_0, str_0)
        set_0 = None
        tuple_1 = (set_0, int_0)
        inventory_manager_2 = module_0.InventoryManager(bytes_1, tuple_1)
        var_2 = inventory_manager_2.list_hosts(str_0)
        var_3 = inventory_manager_2.get_groups_dict()
        str_1 = 'RD7SRon$!J'
        var_4 = inventory_manager_0.get_hosts(str_1, float_0, set_0)
        bool_0 = False
        var_5 = inventory_manager_0.parse_source(set_0)
        inventory_manager_3 = module_0.InventoryManager(bool_0)
        var_6 = inventory_manager_2.get_groups_dict()
        var_7 = inventory_manager_0.list_groups()
        int_1 = -2874
        var_8 = inventory_manager_0.get_hosts()
        inventory_manager_4 = module_0.InventoryManager(inventory_manager_2, set_0)
        var_9 = inventory_manager_1.clear_caches()
        int_2 = 3604
        str_2 = 'J`Hp-C\x0c%,1'
        inventory_manager_5 = module_0.InventoryManager(int_2, str_2)
        var_10 = inventory_manager_0.subset(int_1)
        var_11 = inventory_manager_2.get_hosts(list_0)
        str_3 = ':zwNi{8Y'
        inventory_manager_6 = module_0.InventoryManager(str_3)
        var_12 = inventory_manager_4.restrict_to_hosts(inventory_manager_1)
    except BaseException:
        pass

def test_case_12():
    try:
        bool_0 = True
        list_0 = []
        int_0 = 3
        bytes_0 = b'e\xc9a\xac\x05\xba\xea\xd673\x02o\xadl\xfa20\xda'
        inventory_manager_0 = module_0.InventoryManager(bool_0)
        var_0 = inventory_manager_0.clear_caches()
        inventory_manager_1 = module_0.InventoryManager(bytes_0)
        var_1 = inventory_manager_1.restrict_to_hosts(list_0)
        var_2 = inventory_manager_1.restrict_to_hosts(int_0)
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = '0osmu2'
        inventory_manager_0 = module_0.InventoryManager(str_0, str_0)
        bytes_0 = b'+\x84\xaf\xb7\xf0`^s]@\xe4\xf7"@0\xa9\xe8'
        var_0 = inventory_manager_0.subset(bytes_0)
    except BaseException:
        pass

def test_case_14():
    try:
        int_0 = None
        bool_0 = False
        str_0 = '!a(4xjdlaq\n&,'
        inventory_manager_0 = module_0.InventoryManager(bool_0, str_0)
        var_0 = inventory_manager_0.clear_pattern_cache()
        bytes_0 = b'6#\xf0&\xb4\xd4\xb1'
        var_1 = inventory_manager_0.list_hosts()
        bool_1 = None
        var_2 = inventory_manager_0.list_hosts(bool_1)
        var_3 = inventory_manager_0.get_groups_dict()
        var_4 = inventory_manager_0.subset(bytes_0)
        bytes_1 = b'\x90`\xc0tI\xe1)\xee0\xee/5\x06\xd9CM\xa3\xa4?\xde'
        list_0 = [int_0, bytes_1, int_0]
        inventory_manager_1 = module_0.InventoryManager(list_0, str_0)
        var_5 = inventory_manager_1.clear_pattern_cache()
        var_6 = inventory_manager_1.get_hosts()
        var_7 = inventory_manager_0.list_hosts(str_0)
        var_8 = inventory_manager_0.get_groups_dict()
        var_9 = inventory_manager_0.clear_caches()
        list_1 = None
        var_10 = inventory_manager_0.subset(str_0)
        bool_2 = True
        var_11 = inventory_manager_0.get_hosts()
        str_1 = 't7o\\"e'
        str_2 = 'Fa\n'
        var_12 = inventory_manager_1.get_hosts(list_1, str_2, bool_2, str_1)
    except BaseException:
        pass

def test_case_15():
    try:
        str_0 = '\rO&,eg_'
        bytes_0 = b''
        list_0 = [str_0, str_0, bytes_0, str_0]
        bool_0 = False
        str_1 = 'Ld'
        inventory_manager_0 = module_0.InventoryManager(bool_0, list_0, str_1)
    except BaseException:
        pass

def test_case_16():
    try:
        str_0 = 'stC02'
        inventory_manager_0 = module_0.InventoryManager(str_0, str_0)
        str_1 = '~+QUudha-#\t\\2-H=[<'
        var_0 = inventory_manager_0.get_hosts(str_1)
    except BaseException:
        pass