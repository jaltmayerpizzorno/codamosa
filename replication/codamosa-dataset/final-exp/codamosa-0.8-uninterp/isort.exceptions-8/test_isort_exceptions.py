# Automatically generated by Pynguin.
import isort.exceptions as module_0
import builtins as module_1

def test_case_0():
    str_0 = 'resource'
    file_skipped_0 = module_0.FileSkipped(str_0, str_0)

def test_case_1():
    str_0 = '?X$'
    invalid_settings_path_0 = module_0.InvalidSettingsPath(str_0)

def test_case_2():
    str_0 = None
    invalid_settings_path_0 = module_0.InvalidSettingsPath(str_0)
    str_1 = None
    file_skip_comment_0 = module_0.FileSkipComment(str_1)
    missing_section_0 = module_0.MissingSection(str_0, str_1)
    file_skip_comment_1 = module_0.FileSkipComment(str_0)
    profile_does_not_exist_0 = module_0.ProfileDoesNotExist(str_1)
    file_skip_comment_2 = module_0.FileSkipComment(str_1)
    str_2 = 'JRxF~pk)N&'
    str_3 = 'dh1JzYX\x0cc:#5sfn 7+c'
    existing_syntax_errors_0 = module_0.ExistingSyntaxErrors(str_3)
    profile_does_not_exist_1 = module_0.ProfileDoesNotExist(str_2)

def test_case_3():
    str_0 = '1#[3w'
    invalid_settings_path_0 = module_0.InvalidSettingsPath(str_0)
    str_1 = None
    str_2 = '1%!P"{\n+f+0H<0|VW'
    file_skip_setting_0 = module_0.FileSkipSetting(str_2)
    unsupported_encoding_0 = module_0.UnsupportedEncoding(str_0)
    str_3 = None
    assignments_format_mismatch_0 = module_0.AssignmentsFormatMismatch(str_3)
    invalid_settings_path_1 = module_0.InvalidSettingsPath(str_1)
    introduced_syntax_errors_0 = module_0.IntroducedSyntaxErrors(str_1)
    str_4 = None
    str_5 = 't68fV4hLjvcEPoP,Ims['
    missing_section_0 = module_0.MissingSection(str_4, str_5)
    str_6 = 'as'
    file_skip_setting_1 = module_0.FileSkipSetting(str_6)

def test_case_4():
    str_0 = '\\]5@#*l=yL{RF32A'
    file_skip_comment_0 = module_0.FileSkipComment(str_0)
    i_sort_error_0 = module_0.ISortError()
    list_0 = []
    str_1 = 'u<ju{>\tRA>o,^Zw#0'
    profile_does_not_exist_0 = module_0.ProfileDoesNotExist(str_1)
    i_sort_error_1 = module_0.ISortError(*list_0)

def test_case_5():
    str_0 = '\r!='
    formatting_plugin_does_not_exist_0 = module_0.FormattingPluginDoesNotExist(str_0)
    str_1 = '59\r#S5;9XG>3'
    file_skip_setting_0 = module_0.FileSkipSetting(str_1)
    str_2 = 'uM9t1F\\-\rM%J^(NdzT=_'
    missing_section_0 = module_0.MissingSection(str_2, str_2)

def test_case_6():
    str_0 = 'importlib'
    file_skip_setting_0 = module_0.FileSkipSetting(str_0)
    str_1 = '_field_type'
    exception_0 = module_1.Exception()
    str_2 = None
    formatting_plugin_does_not_exist_0 = module_0.FormattingPluginDoesNotExist(str_2)
    literal_parsing_failure_0 = module_0.LiteralParsingFailure(str_1, exception_0)

def test_case_7():
    str_0 = '--csi'
    file_skipped_0 = module_0.FileSkipped(str_0, str_0)
    exception_0 = module_1.Exception()
    literal_parsing_failure_0 = module_0.LiteralParsingFailure(str_0, exception_0)
    str_1 = 'gensuitemodule'
    formatting_plugin_does_not_exist_0 = module_0.FormattingPluginDoesNotExist(str_1)
    str_2 = '=*'
    file_skipped_1 = module_0.FileSkipped(str_0, str_2)
    type_0 = None
    literal_sort_type_mismatch_0 = module_0.LiteralSortTypeMismatch(type_0, type_0)
    str_3 = '_H5*k:)F'
    file_skip_setting_0 = module_0.FileSkipSetting(str_3)

def test_case_8():
    str_0 = 'M)'
    assignments_format_mismatch_0 = module_0.AssignmentsFormatMismatch(str_0)
    str_1 = 'Tq<(gPf^'
    str_2 = None
    formatting_plugin_does_not_exist_0 = module_0.FormattingPluginDoesNotExist(str_2)
    str_3 = 'c~Ij=F}QI246->cvXlg?'
    file_skipped_0 = module_0.FileSkipped(str_1, str_3)
    invalid_settings_path_0 = module_0.InvalidSettingsPath(str_0)
    assignments_format_mismatch_1 = module_0.AssignmentsFormatMismatch(str_0)

def test_case_9():
    str_0 = 'test_attr'
    str_1 = 'value'
    str_2 = 'source'
    str_3 = {str_1: str_1, str_2: str_2}
    str_4 = {str_0: str_3}
    unsupported_settings_0 = module_0.UnsupportedSettings(str_4)
    file_skip_comment_0 = module_0.FileSkipComment(str_0)