# Automatically generated by Pynguin.
import tornado.util as module_0
import builtins as module_1

def test_case_0():
    try:
        object_dict_0 = module_0.ObjectDict()
        var_0 = module_0.timedelta_to_seconds(object_dict_0)
    except BaseException:
        pass

def test_case_1():
    try:
        list_0 = []
        dict_0 = None
        object_dict_0 = module_0.ObjectDict(*list_0)
        str_0 = 'P'
        object_dict_0.__setattr__(str_0, dict_0)
        str_1 = 'HzQjFC\rfN\nm7EXA86p-0'
        callable_0 = None
        base_exception_0 = module_1.BaseException()
        optional_0 = module_0.errno_from_exception(base_exception_0)
        arg_replacer_0 = module_0.ArgReplacer(callable_0, str_1)
    except BaseException:
        pass

def test_case_2():
    try:
        gzip_decompressor_0 = module_0.GzipDecompressor()
        str_0 = '0'
        any_0 = module_0.import_object(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'C\x0bJ'
        gzip_decompressor_0 = module_0.GzipDecompressor()
        bytes_1 = gzip_decompressor_0.decompress(bytes_0)
    except BaseException:
        pass

def test_case_4():
    try:
        gzip_decompressor_0 = module_0.GzipDecompressor()
        str_0 = '$s9}lU$'
        bytes_0 = gzip_decompressor_0.flush()
        any_0 = module_0.import_object(str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'GD1+QLQ-n%O\x0coWvOl.'
        any_0 = module_0.import_object(str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = '?h'
        any_0 = module_0.import_object(str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        bool_0 = True
        set_0 = {bool_0, bool_0, bool_0, bool_0}
        str_0 = 'xsrf_cookies'
        str_1 = 'yV?w b@\\llIP:np'
        str_2 = ' 8AIwo\t^k66LL2,.N'
        dict_0 = {str_0: str_0, str_1: str_0, str_2: set_0}
        module_0.exec_in(set_0, dict_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = "?P7gl?990'Ox0"
        set_0 = {str_0}
        str_1 = "~O5!AFe!S{'bO4\x0b/\r"
        str_2 = '%kB\r,u4<_*#T\\;Gc&Y'
        str_3 = 'gSxF;RFhBb2@'
        timeout_error_0 = module_0.TimeoutError()
        str_4 = 'hX^Fs'
        float_0 = None
        dict_0 = {str_1: str_1, str_2: set_0, str_3: str_3, str_4: float_0}
        module_0.exec_in(str_0, dict_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = '1bBmN:~&eb'
        var_0 = module_0.raise_exc_info(str_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = 'Čeština'
        str_1 = module_0.re_unescape(str_0)
        str_2 = 'Im\\'
        list_0 = [str_1, str_0]
        sequence_0 = None
        str_3 = '4x\x0c*aBB'
        str_4 = 'R'
        dict_0 = {str_2: list_0, str_1: str_1, str_3: str_0, str_4: str_0}
        tuple_0 = (str_2, sequence_0, dict_0)
        var_0 = module_0.raise_exc_info(tuple_0)
    except BaseException:
        pass

def test_case_11():
    try:
        gzip_decompressor_0 = module_0.GzipDecompressor()
        bytes_0 = gzip_decompressor_0.flush()
        str_0 = 'Mfv r\x0c\x0by]'
        str_1 = module_0.re_unescape(str_0)
        float_0 = 20.0
        str_2 = 'v\\w~OgBnN]W:~a1t}'
        arg_replacer_0 = module_0.ArgReplacer(float_0, str_2)
    except BaseException:
        pass

def test_case_12():
    try:
        base_exception_0 = module_1.BaseException()
        optional_0 = module_0.errno_from_exception(base_exception_0)
        list_0 = [optional_0, optional_0]
        configurable_0 = module_0.Configurable(*list_0)
    except BaseException:
        pass

def test_case_13():
    try:
        callable_0 = None
        str_0 = "Y,'>onrC"
        arg_replacer_0 = module_0.ArgReplacer(callable_0, str_0)
    except BaseException:
        pass

def test_case_14():
    try:
        object_dict_0 = module_0.ObjectDict()
        var_0 = module_0.doctests()
        str_0 = None
        any_0 = object_dict_0.__getattr__(str_0)
    except BaseException:
        pass

def test_case_15():
    try:
        str_0 = '%uk2V3Gz\\]IrU'
        str_1 = module_0.re_unescape(str_0)
        configurable_0 = module_0.Configurable()
    except BaseException:
        pass

def test_case_16():
    try:
        gzip_decompressor_0 = module_0.GzipDecompressor()
        str_0 = 'v>w!:NHR#@%\n\r&\\L'
        str_1 = module_0.re_unescape(str_0)
    except BaseException:
        pass

def test_case_17():
    try:
        str_0 = 'tornado.escape'
        any_0 = module_0.import_object(str_0)
        str_1 = 'tornado.escape.utf8'
        any_1 = module_0.import_object(str_1)
        str_2 = 'tornado.escape.squeeze'
        any_2 = module_0.import_object(str_2)
        str_3 = 'tornado.escape.RecursiveEncoder'
        any_3 = module_0.import_object(str_3)
    except BaseException:
        pass