# Automatically generated by Pynguin.
import tornado.options as module_0

def test_case_0():
    pass

def test_case_1():
    str_0 = 'Q\x0cF\r(x,M;[1/'
    option_parser_0 = module_0.OptionParser()
    option_parser_0.define(str_0, str_0)
    bool_0 = option_parser_0.__contains__(str_0)

def test_case_2():
    option_parser_0 = module_0.OptionParser()
    str_0 = 'l5R>FMt%+)'
    dict_0 = option_parser_0.group_dict(str_0)

def test_case_3():
    option_parser_0 = module_0.OptionParser()
    dict_0 = option_parser_0.as_dict()

def test_case_4():
    option_parser_0 = module_0.OptionParser()
    option_parser_0.print_help()

def test_case_5():
    type_0 = None
    str_0 = 'Fz'
    bool_0 = False
    option_0 = module_0._Option(str_0, str_0, bool_0)
    option_0.set(type_0)
    str_1 = '&$'
    option_1 = module_0._Option(str_0, bool_0, str_1)
    any_0 = option_0.value()

def test_case_6():
    option_parser_0 = module_0.OptionParser()
    iterator_0 = option_parser_0.__iter__()
    str_0 = 'lDK!NlPH3'
    option_parser_0.define(str_0, str_0)
    option_parser_1 = module_0.OptionParser()
    option_parser_1.add_parse_callback(iterator_0)
    module_0.add_parse_callback(iterator_0)

def test_case_7():
    str_0 = 'name'
    var_0 = None
    var_1 = type(str_0)
    bool_0 = True
    option_0 = module_0._Option(str_0, var_0, var_1, var_0, var_0, bool_0, var_0, var_0, var_0)
    any_0 = option_0.parse(str_0)
    any_1 = option_0.parse(str_0)

def test_case_8():
    str_0 = None
    option_parser_0 = module_0.OptionParser()
    dict_0 = option_parser_0.group_dict(str_0)

def test_case_9():
    str_0 = 'name'
    var_0 = None
    var_1 = type(str_0)
    bool_0 = False
    option_0 = module_0._Option(str_0, var_0, var_1, var_0, var_0, bool_0, var_0, var_0, var_0)
    option_0.set(var_0)
    str_1 = '#b!q;,%kJ]z`Y_'
    any_0 = option_0.parse(str_1)
    option_parser_0 = module_0.OptionParser()

def test_case_10():
    str_0 = 'name'
    var_0 = None
    var_1 = type(str_0)
    bool_0 = False
    option_0 = module_0._Option(str_0, var_0, var_1, var_0, var_0, bool_0, var_0, var_0, var_0)
    any_0 = option_0.parse(str_0)
    option_parser_0 = module_0.OptionParser()
    iterable_0 = option_parser_0.items()
    option_1 = module_0._Option(str_0, option_parser_0, str_0, str_0, option_0)
    option_0.set(any_0)
    any_1 = option_0.value()
    option_parser_1 = module_0.OptionParser()
    str_1 = None
    dict_0 = option_parser_0.group_dict(str_1)
    option_parser_2 = module_0.OptionParser()

def test_case_11():
    option_parser_0 = module_0.OptionParser()
    str_0 = 'name'
    str_1 = ''
    str_2 = 'application'
    option_parser_0.define(str_0, str_1, str_2)
    str_3 = 'port'
    int_0 = 80
    option_parser_0.define(str_3, int_0, str_2)
    str_4 = 'debug'
    bool_0 = False
    option_parser_0.define(str_4, bool_0, str_2)
    str_5 = 'mysql_host'
    option_parser_0.define(str_5, str_1, str_2)
    str_6 = 'memcache_hosts'
    option_parser_0.define(str_6, str_1, str_2)
    var_0 = list(option_parser_0)