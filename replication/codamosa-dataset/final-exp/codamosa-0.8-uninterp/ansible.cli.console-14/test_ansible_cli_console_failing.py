# Automatically generated by Pynguin.
import ansible.cli.console as module_0

def test_case_0():
    try:
        bytes_0 = b'|'
        str_0 = 'r/J7'
        console_c_l_i_0 = module_0.ConsoleCLI(str_0)
        console_c_l_i_1 = module_0.ConsoleCLI(console_c_l_i_0)
        var_0 = console_c_l_i_1.post_process_args(bytes_0)
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = -4598
        console_c_l_i_0 = module_0.ConsoleCLI(int_0)
        var_0 = console_c_l_i_0.set_prompt()
    except BaseException:
        pass

def test_case_2():
    try:
        bool_0 = True
        console_c_l_i_0 = module_0.ConsoleCLI(bool_0)
        str_0 = 'r7n)RaE4z'
        var_0 = console_c_l_i_0.do_shell(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bool_0 = True
        console_c_l_i_0 = module_0.ConsoleCLI(bool_0)
        var_0 = console_c_l_i_0.emptyline()
        bytes_0 = None
        int_0 = -2095
        dict_0 = {bytes_0: console_c_l_i_0}
        tuple_0 = (bytes_0, int_0, dict_0, dict_0)
        var_1 = console_c_l_i_0.do_diff(tuple_0)
    except BaseException:
        pass

def test_case_4():
    try:
        bytes_0 = b'\xee\x17\xdc'
        str_0 = 'f\\fKp~"+>yf*[S('
        console_c_l_i_0 = module_0.ConsoleCLI(str_0)
        console_c_l_i_1 = module_0.ConsoleCLI(console_c_l_i_0)
        console_c_l_i_2 = module_0.ConsoleCLI(console_c_l_i_1)
        console_c_l_i_3 = module_0.ConsoleCLI(console_c_l_i_2)
        var_0 = console_c_l_i_3.do_forks(bytes_0)
    except BaseException:
        pass

def test_case_5():
    try:
        bool_0 = False
        str_0 = ",6!0BN'epC8"
        console_c_l_i_0 = module_0.ConsoleCLI(str_0)
        var_0 = console_c_l_i_0.do_verbosity(bool_0)
        int_0 = -29
        var_1 = console_c_l_i_0.do_cd(int_0)
    except BaseException:
        pass

def test_case_6():
    try:
        bool_0 = True
        console_c_l_i_0 = module_0.ConsoleCLI(bool_0)
        float_0 = -549.5716
        console_c_l_i_1 = module_0.ConsoleCLI(float_0)
        var_0 = console_c_l_i_1.get_names()
        bytes_0 = b'\xcc\xba\x13\tW\x08n\xb3\xa8<\x13'
        var_1 = console_c_l_i_0.do_become(bytes_0)
    except BaseException:
        pass

def test_case_7():
    try:
        float_0 = 235.587
        bool_0 = True
        console_c_l_i_0 = module_0.ConsoleCLI(bool_0)
        var_0 = console_c_l_i_0.do_become_user(float_0)
    except BaseException:
        pass

def test_case_8():
    try:
        float_0 = -29.82441
        int_0 = 2213
        console_c_l_i_0 = module_0.ConsoleCLI(int_0)
        var_0 = console_c_l_i_0.do_become_method(float_0)
        var_1 = console_c_l_i_0.init_parser()
    except BaseException:
        pass

def test_case_9():
    try:
        bytes_0 = b'\x85'
        float_0 = 512.0
        console_c_l_i_0 = module_0.ConsoleCLI(float_0)
        var_0 = console_c_l_i_0.helpdefault(bytes_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = 'domain'
        str_1 = 'OLV|\x0cA_?b\\\tx_k,'
        bool_0 = True
        console_c_l_i_0 = module_0.ConsoleCLI(bool_0)
        console_c_l_i_1 = module_0.ConsoleCLI(console_c_l_i_0)
        console_c_l_i_2 = module_0.ConsoleCLI(str_0)
        var_0 = console_c_l_i_2.completedefault(str_0, str_1, bool_0, console_c_l_i_1)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = 'groups'
        str_1 = 'groups'
        console_c_l_i_0 = module_0.ConsoleCLI(str_1)
        var_0 = console_c_l_i_0.do_remote_user(str_0)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = "g8#+Wl'"
        bytes_0 = b'\xf6i\xc9\xa3V\xb2\xc0C\xa4\xff\xf2h\xfd?\xbc\xc1\xad\xf0R\xce'
        float_0 = 543.1
        bytes_1 = b'\xf9{\xcb\xfb\x07[\xe9\xdd\xd2f\xa0S\xde\x11'
        list_0 = [bytes_0, bytes_0]
        bool_0 = None
        dict_0 = {bool_0: bool_0}
        console_c_l_i_0 = module_0.ConsoleCLI(dict_0)
        var_0 = console_c_l_i_0.complete_cd(float_0, bytes_1, list_0, str_0)
    except BaseException:
        pass

def test_case_13():
    try:
        bool_0 = True
        str_0 = 'wGb /e15D3u%bFNc'
        tuple_0 = (str_0,)
        list_0 = [tuple_0, str_0, bool_0]
        int_0 = -2095
        console_c_l_i_0 = module_0.ConsoleCLI(list_0)
        console_c_l_i_1 = module_0.ConsoleCLI(int_0)
        dict_0 = {}
        var_0 = console_c_l_i_1.do_timeout(dict_0)
        var_1 = console_c_l_i_0.set_prompt()
    except BaseException:
        pass

def test_case_14():
    try:
        bool_0 = False
        bytes_0 = b'}\x99\xb2\xa2SW\x96'
        console_c_l_i_0 = module_0.ConsoleCLI(bytes_0)
        var_0 = console_c_l_i_0.module_args(bool_0)
    except BaseException:
        pass

def test_case_15():
    try:
        bool_0 = True
        console_c_l_i_0 = module_0.ConsoleCLI(bool_0)
        float_0 = -2217.0
        var_0 = console_c_l_i_0.do_verbosity(float_0)
        str_0 = 'Dump configuration'
        dict_0 = {bool_0: var_0, console_c_l_i_0: str_0, bool_0: var_0, str_0: float_0}
        console_c_l_i_1 = module_0.ConsoleCLI(dict_0)
        int_0 = -501
        var_1 = console_c_l_i_0.do_forks(int_0)
        var_2 = console_c_l_i_0.init_parser()
    except BaseException:
        pass

def test_case_16():
    try:
        bool_0 = True
        bytes_0 = b'\xab\xdcf\x18\xc9\x14\xb2pMe\xe9 \xec'
        console_c_l_i_0 = module_0.ConsoleCLI(bytes_0)
        var_0 = console_c_l_i_0.do_forks(bool_0)
    except BaseException:
        pass

def test_case_17():
    try:
        str_0 = 'X+DCfy#7@=@d'
        dict_0 = {str_0: str_0}
        float_0 = 512.0
        set_0 = {str_0}
        str_1 = 'Callback Exception: \n'
        console_c_l_i_0 = module_0.ConsoleCLI(str_1)
        var_0 = console_c_l_i_0.complete_cd(dict_0, str_0, float_0, set_0)
        console_c_l_i_1 = module_0.ConsoleCLI(str_0)
        set_1 = None
        var_1 = console_c_l_i_1.do_become_user(set_1)
    except BaseException:
        pass

def test_case_18():
    try:
        int_0 = -557
        str_0 = 'groups'
        console_c_l_i_0 = module_0.ConsoleCLI(str_0)
        str_1 = '%n:_*XW'
        dict_0 = {int_0: str_1}
        var_0 = console_c_l_i_0.complete_cd(dict_0, str_1, console_c_l_i_0, str_1)
        var_1 = console_c_l_i_0.do_list(int_0)
    except BaseException:
        pass

def test_case_19():
    try:
        float_0 = 2.0
        set_0 = None
        console_c_l_i_0 = module_0.ConsoleCLI(float_0)
        var_0 = console_c_l_i_0.do_list(set_0)
    except BaseException:
        pass

def test_case_20():
    try:
        str_0 = 'groups'
        int_0 = 1198
        console_c_l_i_0 = module_0.ConsoleCLI(int_0)
        var_0 = console_c_l_i_0.module_args(str_0)
    except BaseException:
        pass

def test_case_21():
    try:
        bytes_0 = b'x\xf4\xeb1=\x1cD\xaa?\xfe'
        console_c_l_i_0 = module_0.ConsoleCLI(bytes_0)
        var_0 = console_c_l_i_0.cmdloop()
        dict_0 = {}
        bytes_1 = b'\xd5'
        console_c_l_i_1 = module_0.ConsoleCLI(bytes_1)
        var_1 = console_c_l_i_1.do_cd(dict_0)
    except BaseException:
        pass

def test_case_22():
    try:
        int_0 = 2213
        int_1 = -1326
        console_c_l_i_0 = module_0.ConsoleCLI(int_1)
        bytes_0 = b'\xf0\x1f\xe9e\x1foj!A\xbb\xb6Q\x01\xacG\x93\xc00('
        console_c_l_i_1 = module_0.ConsoleCLI(bytes_0)
        var_0 = console_c_l_i_1.do_verbosity(console_c_l_i_0)
        console_c_l_i_2 = module_0.ConsoleCLI(int_0)
        bytes_1 = b'f\xaf\n\xe0\xd0:\x1d\xa8\xf9\xffaQ(C\xf4uv'
        var_1 = console_c_l_i_0.do_check(bytes_1)
        bool_0 = True
        console_c_l_i_3 = module_0.ConsoleCLI(bool_0)
        str_0 = 'x 7in)Ra<4>z'
        var_2 = console_c_l_i_2.get_names()
        dict_0 = {console_c_l_i_3: int_1, bytes_0: str_0, console_c_l_i_1: int_1, bool_0: int_0}
        float_0 = 0.001
        tuple_0 = ()
        var_3 = console_c_l_i_0.do_remote_user(tuple_0)
        var_4 = console_c_l_i_2.do_timeout(float_0)
        var_5 = console_c_l_i_1.do_become_method(dict_0)
        var_6 = console_c_l_i_3.do_shell(str_0)
    except BaseException:
        pass

def test_case_23():
    try:
        str_0 = ']7Iu'
        bytes_0 = b'`\x04\x124\xd5\x98\xae^\xe2r8\xbf\xcc\x14'
        tuple_0 = ()
        str_1 = 'groups'
        console_c_l_i_0 = module_0.ConsoleCLI(str_1)
        var_0 = console_c_l_i_0.do_check(tuple_0)
        console_c_l_i_1 = module_0.ConsoleCLI(bytes_0)
        console_c_l_i_2 = module_0.ConsoleCLI(console_c_l_i_1)
        var_1 = console_c_l_i_2.emptyline()
        var_2 = console_c_l_i_2.post_process_args(str_0)
    except BaseException:
        pass

def test_case_24():
    try:
        str_0 = '\\n'
        console_c_l_i_0 = module_0.ConsoleCLI(str_0)
        var_0 = console_c_l_i_0.run()
        float_0 = 50.8
        var_1 = console_c_l_i_0.do_diff(float_0)
        bytes_0 = b'\x8c\xf2\xd2\xb1l'
        var_2 = console_c_l_i_0.do_cd(str_0)
        set_0 = {var_0}
        list_0 = [bytes_0, console_c_l_i_0]
        str_1 = 'g/p'
        var_3 = console_c_l_i_0.do_remote_user(str_1)
        tuple_0 = (str_1,)
        bytes_1 = b'1'
        var_4 = console_c_l_i_0.do_become(bytes_1)
        var_5 = console_c_l_i_0.do_list(str_1)
        var_6 = console_c_l_i_0.init_parser()
        var_7 = console_c_l_i_0.complete_cd(set_0, str_0, list_0, tuple_0)
        console_c_l_i_1 = module_0.ConsoleCLI(bytes_0)
        var_8 = console_c_l_i_0.do_check(bytes_0)
        var_9 = console_c_l_i_1.do_verbosity(console_c_l_i_1)
        var_10 = console_c_l_i_0.post_process_args(set_0)
    except BaseException:
        pass

def test_case_25():
    try:
        list_0 = None
        str_0 = '$3!Zf1'
        console_c_l_i_0 = module_0.ConsoleCLI(str_0)
        var_0 = console_c_l_i_0.do_diff(list_0)
        console_c_l_i_1 = module_0.ConsoleCLI(list_0)
    except BaseException:
        pass

def test_case_26():
    try:
        str_0 = '\\n'
        console_c_l_i_0 = module_0.ConsoleCLI(str_0)
        var_0 = console_c_l_i_0.run()
        int_0 = 2213
        bytes_0 = b'\x8c\xf2\xd2\xb1l'
        set_0 = {var_0}
        list_0 = [console_c_l_i_0, str_0, int_0]
        str_1 = 'groups'
        var_1 = console_c_l_i_0.do_remote_user(str_1)
        str_2 = 'groups'
        tuple_0 = (str_2,)
        var_2 = console_c_l_i_0.do_list(str_1)
        var_3 = console_c_l_i_0.complete_cd(set_0, str_0, list_0, tuple_0)
        console_c_l_i_1 = module_0.ConsoleCLI(bytes_0)
        str_3 = "d^2J2[O+O'7xIVE"
        str_4 = 'JzsR%MputGZ>6[.VJAm'
        var_4 = console_c_l_i_0.default(str_3, str_4)
        var_5 = console_c_l_i_1.do_verbosity(console_c_l_i_1)
        console_c_l_i_2 = module_0.ConsoleCLI(int_0)
        bytes_1 = b'f\xaf\n\xe0\xd0:\x1d\xa8\xf9\xffaQ(C\xf4uv'
        str_5 = 'h:6CG.o_vJdJ*;AW'
        var_6 = console_c_l_i_2.do_timeout(str_5)
        var_7 = console_c_l_i_2.cmdloop()
        bool_0 = True
        bytes_2 = None
        var_8 = console_c_l_i_2.do_forks(bytes_2)
        var_9 = console_c_l_i_0.helpdefault(bool_0)
        var_10 = console_c_l_i_0.helpdefault(str_0)
        var_11 = console_c_l_i_1.do_timeout(bool_0)
        var_12 = console_c_l_i_0.do_shell(str_5)
        str_6 = 'i7v4hz?veqCPpIa'
        dict_0 = {console_c_l_i_0: list_0, str_1: var_6, var_10: list_0, str_5: bytes_1}
        var_13 = console_c_l_i_0.complete_cd(str_6, list_0, dict_0, list_0)
    except BaseException:
        pass

def test_case_27():
    try:
        str_0 = '\\n'
        console_c_l_i_0 = module_0.ConsoleCLI(str_0)
        var_0 = console_c_l_i_0.run()
        var_1 = console_c_l_i_0.set_prompt()
        set_0 = {var_0}
        list_0 = [var_1, console_c_l_i_0]
        var_2 = console_c_l_i_0.do_remote_user(str_0)
        str_1 = 'go'
        tuple_0 = (str_1,)
        console_c_l_i_1 = None
        var_3 = console_c_l_i_0.do_cd(console_c_l_i_1)
        var_4 = console_c_l_i_0.init_parser()
        var_5 = console_c_l_i_0.complete_cd(set_0, str_0, list_0, tuple_0)
        var_6 = console_c_l_i_1.do_timeout(str_1)
    except BaseException:
        pass

def test_case_28():
    try:
        str_0 = '\\n'
        console_c_l_i_0 = module_0.ConsoleCLI(str_0)
        var_0 = console_c_l_i_0.run()
        int_0 = 2186
        var_1 = console_c_l_i_0.set_prompt()
        float_0 = 50.8
        var_2 = console_c_l_i_0.do_diff(float_0)
        bytes_0 = b'\x8c\xf2\xd2\xb1l'
        set_0 = {var_0}
        list_0 = [var_1, console_c_l_i_0]
        str_1 = '/'
        var_3 = console_c_l_i_0.do_remote_user(str_1)
        str_2 = 'go'
        tuple_0 = (str_2,)
        var_4 = console_c_l_i_0.do_list(str_1)
        var_5 = console_c_l_i_0.init_parser()
        var_6 = console_c_l_i_0.complete_cd(set_0, str_0, list_0, tuple_0)
        console_c_l_i_1 = module_0.ConsoleCLI(bytes_0)
        var_7 = console_c_l_i_0.do_check(bytes_0)
        var_8 = console_c_l_i_1.do_verbosity(console_c_l_i_1)
        console_c_l_i_2 = module_0.ConsoleCLI(int_0)
        str_3 = 'h:6CG.6_vJdJ*;AW'
        var_9 = console_c_l_i_2.do_timeout(str_3)
        bool_0 = True
        bytes_1 = None
        var_10 = console_c_l_i_2.do_forks(bytes_1)
        var_11 = console_c_l_i_0.helpdefault(bool_0)
        var_12 = console_c_l_i_0.helpdefault(str_0)
        var_13 = console_c_l_i_1.do_timeout(bool_0)
        var_14 = console_c_l_i_0.do_shell(str_3)
        var_15 = console_c_l_i_0.do_cd(str_1)
        console_c_l_i_3 = module_0.ConsoleCLI(tuple_0)
        var_16 = console_c_l_i_0.set_prompt()
        var_17 = console_c_l_i_3.do_shell(list_0)
    except BaseException:
        pass