# Automatically generated by Pynguin.
import isort.exceptions as module_0

def test_case_0():
    pass

def test_case_1():
    type_0 = None
    literal_sort_type_mismatch_0 = module_0.LiteralSortTypeMismatch(type_0, type_0)
    str_0 = 'd|\\6;.\\2w`'
    invalid_settings_path_0 = module_0.InvalidSettingsPath(str_0)

def test_case_2():
    str_0 = '\nCPUwY$nN-_jF3[Q7z'
    introduced_syntax_errors_0 = module_0.IntroducedSyntaxErrors(str_0)
    str_1 = 'Z>Rcy0QaLao]['
    file_skip_setting_0 = module_0.FileSkipSetting(str_1)

def test_case_3():
    str_0 = 'vb913Fl~i*k,uDjK'
    unsupported_encoding_0 = module_0.UnsupportedEncoding(str_0)
    str_1 = '[j"~q\t;GA['
    str_2 = 'append_only'
    file_skip_comment_0 = module_0.FileSkipComment(str_2)
    assignments_format_mismatch_0 = module_0.AssignmentsFormatMismatch(str_1)
    str_3 = '@D~Do\x0cac!X_{JEf7'
    formatting_plugin_does_not_exist_0 = module_0.FormattingPluginDoesNotExist(str_3)

def test_case_4():
    str_0 = 'vX^:-1QbY[b4&y:'
    formatting_plugin_does_not_exist_0 = module_0.FormattingPluginDoesNotExist(str_0)
    profile_does_not_exist_0 = module_0.ProfileDoesNotExist(str_0)
    unsupported_encoding_0 = module_0.UnsupportedEncoding(str_0)

def test_case_5():
    str_0 = 'AtOy,c2-al'
    assignments_format_mismatch_0 = module_0.AssignmentsFormatMismatch(str_0)

def test_case_6():
    str_0 = 'trailing_comma'
    str_1 = 'value'
    str_2 = 'source'
    str_3 = 'foo'
    str_4 = 'bar'
    str_5 = {str_1: str_3, str_2: str_4}
    str_6 = {str_0: str_5}
    unsupported_settings_0 = module_0.UnsupportedSettings(str_6)
    var_0 = str(unsupported_settings_0)