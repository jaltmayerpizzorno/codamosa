# Automatically generated by Pynguin.
import blib2to3.pgen2.pgen as module_0

def test_case_0():
    pass

def test_case_1():
    n_f_a_state_0 = module_0.NFAState()

def test_case_2():
    n_f_a_state_0 = module_0.NFAState()
    str_0 = 'Qj,Vzx1S'
    n_f_a_state_1 = module_0.NFAState()
    n_f_a_state_1.addarc(n_f_a_state_1, str_0)

def test_case_3():
    n_f_a_state_0 = module_0.NFAState()
    dict_0 = {n_f_a_state_0: n_f_a_state_0, n_f_a_state_0: n_f_a_state_0}
    d_f_a_state_0 = module_0.DFAState(dict_0, n_f_a_state_0)
    n_f_a_state_1 = module_0.NFAState()
    d_f_a_state_0.unifystate(d_f_a_state_0, d_f_a_state_0)

def test_case_4():
    n_f_a_state_0 = module_0.NFAState()
    n_f_a_state_1 = module_0.NFAState()
    dict_0 = {n_f_a_state_0: n_f_a_state_0, n_f_a_state_1: n_f_a_state_1, n_f_a_state_0: n_f_a_state_1}
    d_f_a_state_0 = module_0.DFAState(dict_0, n_f_a_state_1)
    n_f_a_state_2 = module_0.NFAState()
    dict_1 = {n_f_a_state_2: n_f_a_state_2}
    d_f_a_state_1 = module_0.DFAState(dict_1, n_f_a_state_2)
    n_f_a_state_2.addarc(n_f_a_state_1)
    str_0 = 'm~6=iA)dN/'
    n_f_a_state_3 = module_0.NFAState()
    d_f_a_state_2 = module_0.DFAState(dict_0, n_f_a_state_2)
    d_f_a_state_1.addarc(d_f_a_state_0, str_0)

def test_case_5():
    n_f_a_state_0 = module_0.NFAState()
    no_return_0 = None
    dict_0 = {n_f_a_state_0: no_return_0, n_f_a_state_0: no_return_0, n_f_a_state_0: n_f_a_state_0, n_f_a_state_0: n_f_a_state_0}
    d_f_a_state_0 = module_0.DFAState(dict_0, n_f_a_state_0)
    str_0 = 'Parser engine for the grammar tables generated by pgen.\n\nThe grammar table must be loaded first.\n\nSee Parser/parser.c in the Python distribution for additional info on\nhow this parsing engine works.\n\n'
    n_f_a_state_1 = module_0.NFAState()
    dict_1 = {n_f_a_state_1: n_f_a_state_1}
    d_f_a_state_1 = module_0.DFAState(dict_1, n_f_a_state_1)
    d_f_a_state_1.addarc(d_f_a_state_0, str_0)

def test_case_6():
    n_f_a_state_0 = module_0.NFAState()
    float_0 = 1805.0
    dict_0 = {n_f_a_state_0: float_0, n_f_a_state_0: float_0}
    d_f_a_state_0 = module_0.DFAState(dict_0, n_f_a_state_0)
    d_f_a_state_1 = module_0.DFAState(dict_0, n_f_a_state_0)
    d_f_a_state_1.unifystate(d_f_a_state_0, d_f_a_state_0)
    str_0 = 'W@P8xt2$nf.{ae`n,v\tI'
    n_f_a_state_0.addarc(n_f_a_state_0, str_0)
    d_f_a_state_2 = module_0.DFAState(dict_0, n_f_a_state_0)
    d_f_a_state_1.addarc(d_f_a_state_0, str_0)
    bool_0 = d_f_a_state_1.__eq__(d_f_a_state_1)
    str_1 = "'+\\ZXm"
    d_f_a_state_1.addarc(d_f_a_state_0, str_1)