# Automatically generated by Pynguin.
import thefuck.logs as module_0

def test_case_0():
    try:
        dict_0 = None
        int_0 = 3000
        var_0 = module_0.exception(dict_0, int_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'wfQM\tMm <|Ka4I};\rAK'
        var_0 = module_0.debug(str_0)
        int_0 = 539
        var_1 = module_0.warn(int_0)
        str_1 = ' {\n    $history = (Get-History -Count 1).CommandLine;\n    if (-not [string]::IsNullOrWhiteSpace($history)) {\n        $fuck = $(thefuck $args $history);\n        if (-not [string]::IsNullOrWhiteSpace($fuck)) {\n            if ($fuck.StartsWith("echo")) { $fuck = $fuck.Substring(5); }\n            else { iex "$fuck"; }\n        }\n    }\n    [Console]::ResetColor() \n}\n'
        float_0 = -2084.79123
        set_0 = {str_1}
        var_2 = module_0.rule_failed(set_0, float_0)
    except BaseException:
        pass

def test_case_2():
    try:
        int_0 = 161
        var_0 = module_0.show_corrected_command(int_0)
    except BaseException:
        pass

def test_case_3():
    try:
        int_0 = -2250
        var_0 = module_0.confirm_text(int_0)
    except BaseException:
        pass

def test_case_4():
    try:
        bytes_0 = b'\xd3\x9cL\x12'
        var_0 = module_0.how_to_configure_alias(bytes_0)
    except BaseException:
        pass

def test_case_5():
    try:
        bool_0 = False
        var_0 = module_0.already_configured(bool_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'j'
        var_0 = module_0.configured_successfully(str_0)
    except BaseException:
        pass