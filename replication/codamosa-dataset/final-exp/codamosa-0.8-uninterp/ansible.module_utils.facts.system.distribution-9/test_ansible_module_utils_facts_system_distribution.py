# Automatically generated by Pynguin.
import ansible.module_utils.facts.system.distribution as module_0

def test_case_0():
    pass

def test_case_1():
    str_0 = 'E3<6E0'
    distribution_0 = module_0.Distribution(str_0)
    var_0 = distribution_0.get_distribution_facts()

def test_case_2():
    bool_0 = None
    str_0 = 'b,llseye'
    distribution_fact_collector_0 = module_0.DistributionFactCollector()
    list_0 = [distribution_fact_collector_0]
    int_0 = 291
    distribution_0 = module_0.Distribution(int_0)
    distribution_files_0 = module_0.DistributionFiles(str_0)
    var_0 = distribution_files_0.parse_distribution_file_Slackware(bool_0, str_0, distribution_fact_collector_0, list_0)

def test_case_3():
    bool_0 = None
    str_0 = 'b,llseye'
    distribution_fact_collector_0 = module_0.DistributionFactCollector()
    list_0 = [distribution_fact_collector_0]
    int_0 = 291
    distribution_0 = module_0.Distribution(int_0)
    distribution_files_0 = module_0.DistributionFiles(distribution_0)
    var_0 = distribution_files_0.parse_distribution_file_Slackware(bool_0, str_0, distribution_fact_collector_0, list_0)
    dict_0 = {str_0: bool_0}
    str_1 = 'n|&eY)~@C('
    str_2 = ' rJ\x0c6#3"\'UI+'
    set_0 = set()
    distribution_files_1 = module_0.DistributionFiles(int_0)
    var_1 = distribution_files_1.parse_distribution_file_Debian(dict_0, str_1, str_2, set_0)

def test_case_4():
    bool_0 = False
    int_0 = -2178
    list_0 = [bool_0, bool_0, int_0]
    str_0 = 'T-Gmuzh?:\n\rs,\n$#Kh4'
    set_0 = None
    float_0 = 318.195081
    distribution_files_0 = module_0.DistributionFiles(float_0)
    str_1 = 't^4bv,%F0D\\[t-8'
    distribution_files_1 = module_0.DistributionFiles(str_1)
    var_0 = distribution_files_1.parse_distribution_file_NA(list_0, str_0, set_0, distribution_files_0)
    distribution_0 = module_0.Distribution(bool_0)
    var_1 = distribution_0.get_distribution_SMGL()

def test_case_5():
    bool_0 = False
    float_0 = -468.786
    list_0 = None
    int_0 = None
    int_1 = -3505
    distribution_0 = module_0.Distribution(int_1)
    distribution_files_0 = module_0.DistributionFiles(distribution_0)
    var_0 = distribution_files_0.parse_distribution_file_Coreos(bool_0, float_0, list_0, int_0)

def test_case_6():
    str_0 = 'e,$!rq+hC>&?'
    bool_0 = True
    dict_0 = {str_0: str_0}
    distribution_0 = module_0.Distribution(dict_0)
    int_0 = -1674
    distribution_files_0 = module_0.DistributionFiles(int_0)
    var_0 = distribution_files_0.parse_distribution_file_Flatcar(str_0, bool_0, distribution_0, dict_0)

def test_case_7():
    distribution_fact_collector_0 = None
    str_0 = ',>A!S%>yMON\nS"bPU'
    distribution_files_0 = None
    list_0 = []
    distribution_files_1 = module_0.DistributionFiles(list_0)
    var_0 = distribution_files_1.parse_distribution_file_CentOS(distribution_fact_collector_0, str_0, distribution_files_0, str_0)

def test_case_8():
    str_0 = ':"[T\tvh%|4=}qW{f\n'
    distribution_0 = module_0.Distribution(str_0)

def test_case_9():
    str_0 = ':"[T\tvh%|4=}qW{f\n'
    distribution_0 = module_0.Distribution(str_0)
    var_0 = distribution_0.get_distribution_FreeBSD()

def test_case_10():
    distribution_fact_collector_0 = module_0.DistributionFactCollector()
    var_0 = distribution_fact_collector_0.collect()

def test_case_11():
    bytes_0 = b'\xac'
    distribution_fact_collector_0 = module_0.DistributionFactCollector(bytes_0)
    list_0 = [distribution_fact_collector_0, bytes_0, distribution_fact_collector_0, distribution_fact_collector_0]
    var_0 = distribution_fact_collector_0.collect(list_0)
    distribution_0 = module_0.Distribution(distribution_fact_collector_0)
    var_1 = distribution_0.get_distribution_facts()

def test_case_12():
    distribution_fact_collector_0 = None
    distribution_0 = module_0.Distribution(distribution_fact_collector_0)
    int_0 = 225
    list_0 = [distribution_0, int_0, int_0]
    bytes_0 = b'f\xa3\xad\x8d\xf4\x11\x8d\xa1M2|=2'
    int_1 = -362
    str_0 = '=5~+)q-xf<56Co:W'
    bool_0 = True
    int_2 = 9
    distribution_files_0 = module_0.DistributionFiles(list_0)
    var_0 = distribution_files_0.parse_distribution_file_Mandriva(str_0, str_0, bool_0, int_2)
    distribution_files_1 = module_0.DistributionFiles(int_1)
    var_1 = distribution_files_1.parse_distribution_file_Coreos(list_0, distribution_fact_collector_0, bytes_0, bool_0)

def test_case_13():
    str_0 = 'unfrackpath'
    tuple_0 = None
    bytes_0 = b"\x9a\xe7\xe4@\xbd\xae\xb5z$\xbb'\xfe=s\xa8"
    set_0 = {tuple_0, str_0, bytes_0, bytes_0}
    bytes_1 = b"\x97\xd2'\xe1\x04\xddy\xdc+\xc9\xab\xe9\x97\x9a\x05"
    distribution_files_0 = module_0.DistributionFiles(bytes_1)
    var_0 = distribution_files_0.parse_distribution_file_ClearLinux(str_0, tuple_0, set_0, tuple_0)