# Automatically generated by Pynguin.
import tornado.concurrent as module_0
import concurrent.futures._base as module_1

def test_case_0():
    pass

def test_case_1():
    dummy_executor_0 = module_0.DummyExecutor()
    str_0 = 'Timeout callback of _HTTPConnection instance.\n\n        Raise a `HTTPTimeoutError` when a timeout occurs.\n\n        :info string key: More detailed timeout information.\n        '
    future_0 = dummy_executor_0.submit(str_0)

def test_case_2():
    future_0 = module_1.Future()
    float_0 = -761.85525
    dummy_executor_0 = module_0.DummyExecutor()
    dummy_executor_0.shutdown()
    module_0.future_set_result_unless_cancelled(future_0, float_0)

def test_case_3():
    future_0 = module_1.Future()
    list_0 = []
    callable_0 = module_0.run_on_executor(*list_0)

def test_case_4():
    future_0 = module_1.Future()
    float_0 = -761.85525
    module_0.future_set_result_unless_cancelled(future_0, float_0)

def test_case_5():
    future_0 = module_1.Future()
    callable_0 = None
    module_0.future_add_done_callback(future_0, callable_0)