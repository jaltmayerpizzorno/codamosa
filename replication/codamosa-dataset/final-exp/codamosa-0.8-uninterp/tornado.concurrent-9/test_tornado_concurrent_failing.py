# Automatically generated by Pynguin.
import tornado.concurrent as module_0
import concurrent.futures._base as module_1

def test_case_0():
    try:
        list_0 = []
        bool_0 = module_0.is_future(list_0)
        int_0 = 1
        dummy_executor_0 = module_0.DummyExecutor()
        future_0 = dummy_executor_0.submit(int_0)
        bool_1 = module_0.is_future(dummy_executor_0)
        float_0 = -1752.5185
        module_0.future_set_result_unless_cancelled(future_0, float_0)
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = None
        list_0 = [int_0, int_0, int_0]
        str_0 = 'O'
        dict_0 = {str_0: str_0}
        callable_0 = module_0.run_on_executor(*list_0, **dict_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = "[oNT2M,Z>'0\x0c>t>3"
        list_0 = [str_0, str_0, str_0, str_0]
        callable_0 = module_0.run_on_executor(*list_0)
    except BaseException:
        pass

def test_case_3():
    try:
        future_0 = module_1.Future()
        float_0 = -761.85525
        module_0.future_set_result_unless_cancelled(future_0, float_0)
        callable_0 = None
        module_0.future_add_done_callback(future_0, callable_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = ".'z\nL5~muoa=gYCQ\r"
        float_0 = -2245.9
        list_0 = [str_0]
        callable_0 = module_0.run_on_executor(*list_0)
        dict_0 = {}
        dummy_executor_0 = module_0.DummyExecutor(**dict_0)
        future_0 = dummy_executor_0.submit(float_0, *list_0)
        future_1 = module_1.Future()
        future_2 = module_1.Future()
        module_0.future_set_result_unless_cancelled(future_0, future_2)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = ".'z\nL5~muoa=gYCQ\r"
        list_0 = [str_0]
        callable_0 = module_0.run_on_executor(*list_0)
        callable_1 = module_0.run_on_executor()
        str_1 = '_k+={3)%s>.wPxH f'
        dummy_executor_0 = module_0.DummyExecutor()
        dict_0 = {str_1: list_0}
        dummy_executor_1 = module_0.DummyExecutor()
        future_0 = dummy_executor_1.submit(callable_1, **dict_0)
        module_0.future_add_done_callback(future_0, callable_0)
    except BaseException:
        pass

def test_case_6():
    try:
        future_0 = None
        module_0.chain_future(future_0, future_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = ".'z\nL5~muoa=gYCQ\r"
        float_0 = -2245.9
        list_0 = [str_0]
        callable_0 = module_0.run_on_executor(*list_0)
        dict_0 = {}
        dummy_executor_0 = module_0.DummyExecutor(**dict_0)
        future_0 = dummy_executor_0.submit(float_0, *list_0)
        optional_0 = None
        return_value_ignored_error_0 = module_0.ReturnValueIgnoredError()
        tuple_0 = (callable_0, optional_0, return_value_ignored_error_0)
        module_0.future_set_exc_info(future_0, tuple_0)
    except BaseException:
        pass