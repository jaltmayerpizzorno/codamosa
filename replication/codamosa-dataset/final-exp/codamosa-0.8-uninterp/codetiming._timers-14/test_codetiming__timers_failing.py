# Automatically generated by Pynguin.
import codetiming._timers as module_0

def test_case_0():
    try:
        str_0 = ".0g%:'CuD{3\\J^"
        float_0 = -3098.7663
        dict_0 = None
        list_0 = [dict_0]
        timers_0 = module_0.Timers(*list_0)
        timers_0.__setitem__(str_0, float_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'Z.r'
        timers_0 = module_0.Timers()
        float_0 = timers_0.total(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '&'
        timers_0 = module_0.Timers()
        float_0 = timers_0.count(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '!*K.:lj_gBHa$Pn'
        timers_0 = module_0.Timers()
        float_0 = timers_0.max(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = '&'
        timers_0 = module_0.Timers()
        float_0 = timers_0.stdev(str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        timers_0 = module_0.Timers()
        str_0 = ''
        float_0 = 1269.0
        timers_0.add(str_0, float_0)
        timers_0.add(str_0, float_0)
        float_1 = timers_0.stdev(str_0)
        str_1 = 'fxFEJ"dBj\ta\t;gqL'
        bool_0 = True
        str_2 = 'Vf'
        dict_0 = {str_0: timers_0, str_1: bool_0, str_2: bool_0}
        timers_1 = module_0.Timers(**dict_0)
    except BaseException:
        pass