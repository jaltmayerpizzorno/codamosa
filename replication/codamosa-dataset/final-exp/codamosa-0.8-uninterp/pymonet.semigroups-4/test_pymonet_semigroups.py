# Automatically generated by Pynguin.
import pymonet.semigroups as module_0

def test_case_0():
    pass

def test_case_1():
    tuple_0 = None
    last_0 = module_0.Last(tuple_0)

def test_case_2():
    float_0 = 2136.487081
    str_0 = '_sPxNvx)[yk|ETll]'
    first_0 = module_0.First(str_0)
    str_1 = 'Lazy[T, W]'
    tuple_0 = ()
    set_0 = {tuple_0, str_1, str_1}
    max_0 = module_0.Max(set_0)
    first_1 = module_0.First(float_0)
    max_1 = module_0.Max(first_1)
    one_0 = module_0.One(max_1)
    var_0 = one_0.concat(max_0)
    semigroup_0 = module_0.Semigroup(str_1)
    bool_0 = semigroup_0.__eq__(first_0)

def test_case_3():
    str_0 = 'T'
    one_0 = module_0.One(str_0)
    str_1 = one_0.__str__()
    float_0 = 1138.11
    var_0 = one_0.concat(float_0)
    float_1 = -1102.0
    str_2 = 'k5b<_'
    bytes_0 = None
    str_3 = one_0.__str__()
    tuple_0 = (str_1, float_1, str_2, bytes_0)
    semigroup_0 = module_0.Semigroup(tuple_0)
    var_1 = one_0.concat(semigroup_0)
    tuple_1 = ()
    all_0 = module_0.All(tuple_1)
    sum_0 = module_0.Sum(one_0)
    str_4 = sum_0.__str__()

def test_case_4():
    str_0 = 'qB6\x0czH[\tqhxab972<Ki'
    semigroup_0 = module_0.Semigroup(str_0)
    str_1 = '\\$Z-h\x0c\x0b.e'
    all_0 = module_0.All(str_1)
    str_2 = '\\Ue\\N54m/m4'
    all_1 = module_0.All(str_2)
    all_2 = all_1.concat(all_0)
    str_3 = '_sPxNvx)[yk|ETll]'
    min_0 = module_0.Min(str_3)
    var_0 = min_0.concat(semigroup_0)
    one_0 = module_0.One(str_0)
    str_4 = one_0.__str__()
    bool_0 = False
    last_0 = module_0.Last(bool_0)
    str_5 = last_0.__str__()
    float_0 = -1102.0
    str_6 = one_0.__str__()
    str_7 = all_1.__str__()
    str_8 = one_0.__str__()
    max_0 = module_0.Max(float_0)

def test_case_5():
    all_0 = None
    tuple_0 = ()
    all_1 = module_0.All(tuple_0)
    int_0 = True
    all_2 = module_0.All(int_0)
    all_3 = all_2.concat(all_1)
    all_4 = all_3.concat(all_0)
    min_0 = module_0.Min(all_4)
    min_1 = module_0.Min(min_0)
    bytes_0 = b'\x93\xba\x1b\xee\xf2A<'
    first_0 = module_0.First(bytes_0)

def test_case_6():
    float_0 = -2709.21
    str_0 = 'KIF|Ld+e7OiR4'
    one_0 = module_0.One(str_0)
    var_0 = one_0.concat(float_0)
    str_1 = one_0.__str__()

def test_case_7():
    bytes_0 = b'\xb6U'
    min_0 = module_0.Min(bytes_0)
    first_0 = module_0.First(min_0)
    str_0 = first_0.__str__()

def test_case_8():
    int_0 = 12
    max_0 = module_0.Max(int_0)
    max_1 = module_0.Max(int_0)
    var_0 = max_0.concat(max_0)

def test_case_9():
    str_0 = '\\$Z-h\x0c\x0b.e'
    all_0 = module_0.All(str_0)
    str_1 = '\\Ue\\N54m/m4'
    all_1 = module_0.All(str_1)
    all_2 = all_1.concat(all_0)
    str_2 = '_sPxNvx)[yk|ETll]'
    min_0 = module_0.Min(str_2)
    str_3 = 'T'
    one_0 = module_0.One(str_3)
    str_4 = one_0.__str__()
    int_0 = 3518
    map_0 = module_0.Map(int_0)
    map_1 = module_0.Map(map_0)
    str_5 = map_1.__str__()
    bool_0 = False
    sum_0 = None
    set_0 = {sum_0, bool_0}
    var_0 = one_0.concat(set_0)
    last_0 = module_0.Last(bool_0)
    str_6 = last_0.__str__()
    var_1 = min_0.concat(all_1)
    float_0 = 696.682781711239
    str_7 = 'k5b<_'
    bytes_0 = None
    str_8 = one_0.__str__()
    tuple_0 = (str_4, float_0, str_7, bytes_0)
    semigroup_0 = module_0.Semigroup(tuple_0)
    var_2 = one_0.concat(semigroup_0)
    max_0 = module_0.Max(one_0)
    float_1 = 868.43
    semigroup_1 = module_0.Semigroup(float_1)

def test_case_10():
    int_0 = 2
    max_0 = module_0.Max(int_0)
    int_1 = 1
    max_1 = module_0.Max(int_1)
    var_0 = max_0.concat(max_1)
    max_2 = module_0.Max(int_0)