# Automatically generated by Pynguin.
import ansible.inventory.manager as module_0
import ansible.inventory.data as module_1

def test_case_0():
    try:
        str_0 = 'n9,'
        bool_0 = False
        str_1 = ',x\x0c>|Iyc*Q'
        inventory_manager_0 = module_0.InventoryManager(str_0, bool_0, str_1)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '0RNNGl\x0bU=B7{cLBK%G'
        inventory_manager_0 = module_0.InventoryManager(str_0)
        var_0 = inventory_manager_0.clear_pattern_cache()
        var_1 = inventory_manager_0.add_host(inventory_manager_0)
    except BaseException:
        pass

def test_case_2():
    try:
        int_0 = 99
        bytes_0 = b'\xfcyr\x15)\x8f'
        inventory_manager_0 = module_0.InventoryManager(bytes_0)
        var_0 = inventory_manager_0.add_group(int_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bool_0 = False
        bytes_0 = b'\xaf\xbf\xdb\x80h=0\xa62\xdb'
        bool_1 = True
        bytes_1 = b'\xc49\x97\xb2ue\x9dR-%/\x07\xf9z'
        var_0 = module_0.split_host_pattern(bytes_1)
        list_0 = [bool_1, bool_1, bytes_0, bool_1]
        tuple_0 = ()
        inventory_manager_0 = module_0.InventoryManager(bytes_0, list_0, tuple_0)
        var_1 = inventory_manager_0.get_groups_dict()
        var_2 = inventory_manager_0.restrict_to_hosts(bool_0)
    except BaseException:
        pass

def test_case_4():
    try:
        dict_0 = {}
        str_0 = '\x0bgC,'
        inventory_manager_0 = module_0.InventoryManager(dict_0, str_0)
        var_0 = inventory_manager_0.restrict_to_hosts(inventory_manager_0)
    except BaseException:
        pass

def test_case_5():
    try:
        bytes_0 = b'4\x94\xfb\x03I\xe60\xc9u\x94\x0f\x9em'
        bool_0 = False
        str_0 = 'c'
        str_1 = '~l[)k@&>dFW\x0c!Ff69/d'
        tuple_0 = (bool_0, str_0, str_1)
        set_0 = {bool_0, bool_0, str_1}
        inventory_manager_0 = module_0.InventoryManager(bytes_0, tuple_0, set_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'a4W,@RQ4%vBgas\\t Y1'
        str_1 = "04sOFt'X`bV"
        inventory_manager_0 = module_0.InventoryManager(str_1)
        var_0 = inventory_manager_0.subset(str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = ']W'
        bool_0 = True
        inventory_manager_0 = module_0.InventoryManager(bool_0, str_0)
        var_0 = inventory_manager_0.subset(str_0)
        var_1 = inventory_manager_0.list_hosts()
        str_1 = '~{{s;5]9'
        var_2 = inventory_manager_0.refresh_inventory()
        var_3 = inventory_manager_0.list_hosts(str_1)
        str_2 = '\x0c'
        var_4 = inventory_manager_0.list_groups()
        bool_1 = False
        var_5 = inventory_manager_0.list_hosts(str_2)
        var_6 = inventory_manager_0.reconcile_inventory()
        var_7 = inventory_manager_0.remove_restriction()
        str_3 = 'jT'
        int_0 = 1355
        var_8 = inventory_manager_0.get_hosts(inventory_manager_0, str_3, int_0)
        inventory_manager_1 = module_0.InventoryManager(str_2, bool_1)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = '6?d'
        list_0 = []
        inventory_manager_0 = module_0.InventoryManager(list_0, list_0)
        var_0 = inventory_manager_0.get_groups_dict()
        var_1 = inventory_manager_0.list_groups()
        complex_0 = None
        float_0 = 1673.39073
        var_2 = inventory_manager_0.get_hosts(complex_0, str_0, float_0, str_0)
    except BaseException:
        pass

def test_case_9():
    try:
        bool_0 = True
        inventory_data_0 = module_1.InventoryData()
        inventory_manager_0 = module_0.InventoryManager(inventory_data_0)
        var_0 = inventory_manager_0.parse_source(bool_0)
        str_0 = 'localhost'
        str_1 = [str_0]
        inventory_manager_1 = module_0.InventoryManager(str_1)
        var_1 = inventory_manager_1.list_hosts()
        var_2 = inventory_data_0.get_groups_dict()
        var_3 = inventory_manager_1.list_hosts(str_1)
        var_4 = inventory_manager_1.subset(bool_0)
        var_5 = inventory_manager_1.list_hosts(str_0)
        var_6 = inventory_manager_1.refresh_inventory()
        var_7 = inventory_manager_1.list_hosts(str_1)
        var_8 = inventory_manager_1.list_groups()
        inventory_data_1 = module_1.InventoryData()
        bytes_0 = b'\x83{B\x16\t\xbb\xbe\xb1\xf4ypiX4\x1fc'
        var_9 = inventory_manager_1.get_hosts(inventory_data_1, bytes_0)
        var_10 = inventory_manager_1.get_hosts()
        list_0 = [bytes_0]
        inventory_manager_2 = module_0.InventoryManager(inventory_manager_0, list_0)
    except BaseException:
        pass

def test_case_10():
    try:
        bool_0 = True
        inventory_data_0 = module_1.InventoryData()
        inventory_manager_0 = module_0.InventoryManager(inventory_data_0)
        var_0 = inventory_manager_0.parse_source(bool_0)
        str_0 = 'lo<,alhos\x0c'
        str_1 = [str_0, inventory_data_0]
        inventory_manager_1 = module_0.InventoryManager(str_1)
        var_1 = inventory_manager_1.list_hosts()
        str_2 = 'uR4GpMmU(]!n/.W'
        var_2 = inventory_data_0.get_groups_dict()
        var_3 = inventory_manager_1.list_hosts(str_2)
        bool_1 = False
        var_4 = inventory_manager_1.subset(bool_1)
        var_5 = inventory_manager_1.list_hosts(str_2)
        var_6 = inventory_manager_1.refresh_inventory()
        var_7 = inventory_manager_1.list_hosts(str_1)
        var_8 = inventory_manager_1.list_groups()
        var_9 = inventory_manager_1.remove_restriction()
        inventory_data_1 = module_1.InventoryData()
        bytes_0 = b'\x83{B\x16\t\xbb\xbe\xb1\xf4ypiX4\x1fc'
        var_10 = inventory_manager_1.get_hosts()
        list_0 = [bytes_0]
        var_11 = inventory_manager_0.list_groups()
        bool_2 = False
        list_1 = [str_0, var_7, var_2, list_0]
        inventory_manager_2 = module_0.InventoryManager(bool_2, list_1, list_0)
    except BaseException:
        pass

def test_case_11():
    try:
        bool_0 = True
        inventory_data_0 = module_1.InventoryData()
        inventory_manager_0 = module_0.InventoryManager(inventory_data_0)
        var_0 = inventory_manager_0.parse_source(bool_0)
        str_0 = 'localhost'
        var_1 = inventory_manager_0.refresh_inventory()
        list_0 = [inventory_data_0, str_0, var_0]
        var_2 = inventory_manager_0.subset(list_0)
        str_1 = [inventory_manager_0, str_0, str_0]
        var_3 = inventory_manager_0.list_hosts()
        str_2 = 'uR4GpMmU(]!n/.W'
        var_4 = inventory_data_0.get_groups_dict()
        var_5 = inventory_manager_0.list_hosts(str_2)
        var_6 = inventory_manager_0.list_hosts(str_2)
        var_7 = inventory_manager_0.refresh_inventory()
        var_8 = inventory_manager_0.list_hosts(str_1)
        var_9 = inventory_manager_0.list_groups()
        list_1 = [var_5, var_0, inventory_data_0, var_1]
        var_10 = inventory_manager_0.parse_source(str_0)
        var_11 = inventory_manager_0.subset(list_1)
        var_12 = inventory_manager_0.get_hosts()
        var_13 = inventory_manager_0.list_groups()
        bool_1 = True
        list_2 = [str_0, var_8]
        inventory_manager_1 = module_0.InventoryManager(bool_1, list_2, list_1)
    except BaseException:
        pass