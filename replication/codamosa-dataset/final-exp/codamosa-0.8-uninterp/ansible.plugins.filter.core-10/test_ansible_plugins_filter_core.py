# Automatically generated by Pynguin.
import ansible.plugins.filter.core as module_0

def test_case_0():
    pass

def test_case_1():
    list_0 = []
    list_1 = [list_0]
    var_0 = module_0.to_yaml(list_0)
    var_1 = module_0.combine(*list_1)
    tuple_0 = ()
    var_2 = module_0.to_bool(tuple_0)

def test_case_2():
    str_0 = 'bN|HY@E.KwV'
    str_1 = 'zXUb8(.>hr@\t2:J'
    float_0 = -1123.850065
    var_0 = module_0.to_nice_yaml(float_0)
    var_1 = module_0.combine()
    str_2 = '4"F\'\tu'
    var_2 = module_0.regex_search(str_1, str_2)
    var_3 = module_0.comment(str_0)

def test_case_3():
    int_0 = None
    list_0 = [int_0, int_0, int_0, int_0]
    var_0 = module_0.to_json(list_0)
    int_1 = 2
    var_1 = module_0.mandatory(int_1)

def test_case_4():
    var_0 = module_0.combine()
    str_0 = None
    float_0 = None
    var_1 = module_0.to_bool(float_0)
    var_2 = module_0.regex_escape(str_0)
    str_1 = 'bN|HY@E.KwV'
    var_3 = module_0.comment(str_1)

def test_case_5():
    int_0 = 1577
    var_0 = module_0.b64decode(int_0)
    dict_0 = {int_0: int_0}
    var_1 = module_0.to_bool(dict_0)

def test_case_6():
    list_0 = []
    list_1 = [list_0]
    int_0 = -396
    var_0 = module_0.quote(int_0)
    var_1 = module_0.combine(*list_1)

def test_case_7():
    var_0 = module_0.regex_replace()

def test_case_8():
    str_0 = '\\w+'
    var_0 = module_0.regex_findall(str_0, str_0)

def test_case_9():
    filter_module_0 = None
    str_0 = '--refeence'
    var_0 = module_0.regex_search(filter_module_0, str_0)

def test_case_10():
    list_0 = None
    str_0 = 'your {0} description'
    tuple_0 = (list_0, str_0)
    str_1 = 'H\x0c:Z:4#)DBWW'
    dict_0 = {str_1: str_0}
    complex_0 = None
    var_0 = module_0.ternary(tuple_0, dict_0, complex_0)

def test_case_11():
    dict_0 = None
    bool_0 = True
    var_0 = module_0.ternary(dict_0, dict_0, bool_0)

def test_case_12():
    str_0 = '\\w+'
    var_0 = module_0.regex_findall(str_0, str_0)
    set_0 = set()
    var_1 = module_0.regex_escape(set_0)

def test_case_13():
    list_0 = []
    var_0 = module_0.from_yaml(list_0)

def test_case_14():
    bool_0 = False
    var_0 = module_0.randomize_list(bool_0)

def test_case_15():
    list_0 = []
    filter_module_0 = module_0.FilterModule()
    var_0 = module_0.regex_escape(filter_module_0)
    list_1 = [list_0]
    var_1 = module_0.combine(*list_1)
    bytes_0 = b'\xe013\x14\xf5'
    var_2 = module_0.get_hash(bytes_0)

def test_case_16():
    int_0 = 2
    var_0 = module_0.mandatory(int_0)

def test_case_17():
    var_0 = module_0.combine()

def test_case_18():
    var_0 = module_0.combine()
    str_0 = 'bN|HY@E.KwV'
    var_1 = module_0.comment(str_0)

def test_case_19():
    set_0 = None
    list_0 = [set_0]
    var_0 = module_0.combine(*list_0)

def test_case_20():
    list_0 = []
    list_1 = [list_0]
    var_0 = module_0.combine(*list_1)

def test_case_21():
    str_0 = None
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    list_0 = [dict_0, str_0, dict_0]
    var_0 = module_0.combine(*list_0)

def test_case_22():
    dict_0 = {}
    var_0 = module_0.regex_replace(dict_0)
    var_1 = module_0.dict_to_list_of_dict_key_value_elements(dict_0)

def test_case_23():
    bytes_0 = b'\xae\xe8g\xa4\x88\x1f*\x1b\xb0'
    var_0 = module_0.fileglob(bytes_0)

def test_case_24():
    str_0 = None
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    str_1 = '7R[ehnG.m"'
    dict_1 = {str_0: str_0, str_1: str_0, str_0: dict_0, str_1: dict_0}
    var_0 = module_0.randomize_list(dict_1)
    filter_module_0 = module_0.FilterModule()
    var_1 = filter_module_0.filters()
    bool_0 = False
    var_2 = module_0.mandatory(dict_0, bool_0)

def test_case_25():
    str_0 = '#'
    str_1 = '}a*t'
    var_0 = module_0.rand(str_0, str_1)
    complex_0 = None
    var_1 = module_0.regex_escape(complex_0)

def test_case_26():
    str_0 = '/etc/*'
    float_0 = -1085.9
    var_0 = module_0.from_yaml_all(float_0)
    var_1 = module_0.fileglob(str_0)

def test_case_27():
    filter_module_0 = module_0.FilterModule()
    str_0 = '6?'
    bool_0 = True
    int_0 = -3574
    var_0 = module_0.rand(str_0, bool_0, int_0)
    var_1 = filter_module_0.filters()
    var_2 = filter_module_0.filters()
    var_3 = filter_module_0.filters()
    dict_0 = None
    var_4 = filter_module_0.filters()
    var_5 = module_0.regex_escape(dict_0)

def test_case_28():
    int_0 = -433
    list_0 = []
    var_0 = module_0.subelements(list_0, list_0, int_0)

def test_case_29():
    str_0 = 'python'
    dict_0 = {}
    var_0 = module_0.regex_search(str_0, str_0, **dict_0)

def test_case_30():
    int_0 = 1
    int_1 = 2
    int_2 = 3
    var_0 = module_0.ternary(int_0, int_1, int_2)
    int_3 = 0
    var_1 = module_0.ternary(int_3, int_1, int_2)
    var_2 = None
    var_3 = module_0.ternary(var_2, int_1, int_2)
    var_4 = module_0.ternary(int_3, int_1, var_2)
    var_5 = module_0.ternary(var_2, int_1, var_2)
    var_6 = module_0.ternary(int_0, var_2, int_2)
    var_7 = module_0.ternary(int_0, int_1, var_2, int_2)
    var_8 = module_0.ternary(int_3, int_1, var_2, int_2)
    var_9 = module_0.ternary(var_2, int_1, var_2, int_2)

def test_case_31():
    str_0 = 'name'
    str_1 = 'groups'
    str_2 = 'authorized'
    str_3 = 'alice'
    str_4 = 'wheel'
    str_5 = [str_4]
    str_6 = '/tmp/alice/onekey.pub'
    str_7 = [str_6]
    str_8 = {str_0: str_3, str_1: str_5, str_2: str_7}
    str_9 = [str_8]
    var_0 = module_0.subelements(str_9, str_1)
    str_10 = [str_4]
    str_11 = [str_6]
    str_12 = {str_0: str_3, str_1: str_10, str_2: str_11}
    str_13 = [str_12]
    str_14 = [str_1]
    var_1 = module_0.subelements(str_13, str_14)
    str_15 = [str_4]
    str_16 = [str_6]
    str_17 = {str_0: str_3, str_1: str_15, str_2: str_16}
    str_18 = [str_17]
    str_19 = [str_1]
    var_2 = module_0.subelements(str_18, str_19)
    str_20 = [str_4]
    str_21 = [str_6]
    str_22 = {str_0: str_3, str_1: str_20, str_2: str_21}
    str_23 = [str_22]
    str_24 = [str_1]
    var_3 = module_0.subelements(str_23, str_24)

def test_case_32():
    str_0 = 'some text'
    var_0 = module_0.comment(str_0)
    str_1 = 'BEGIN'
    str_2 = '*'
    str_3 = 'POSTFIX'
    str_4 = 'END'
    var_1 = module_0.comment(str_0)
    str_5 = 'some multiline\ntext'
    var_2 = module_0.comment(str_5)
    var_3 = module_0.comment(str_5)
    str_6 = 'erlang'
    var_4 = module_0.comment(str_0, str_6)
    str_7 = 'c'
    var_5 = module_0.comment(str_0, str_7)
    str_8 = 'cblock'
    var_6 = module_0.comment(str_0, str_8)
    str_9 = 'xml'
    var_7 = module_0.comment(str_0, str_9)

def test_case_33():
    str_0 = '/bin/b*'
    var_0 = module_0.fileglob(str_0)

def test_case_34():
    str_0 = '/etc/*'
    var_0 = module_0.fileglob(str_0)