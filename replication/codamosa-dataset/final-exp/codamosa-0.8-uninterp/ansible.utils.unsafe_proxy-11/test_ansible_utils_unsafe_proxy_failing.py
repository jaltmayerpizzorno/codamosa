# Automatically generated by Pynguin.
import ansible.utils.unsafe_proxy as module_0

def test_case_0():
    try:
        ansible_unsafe_text_0 = module_0.AnsibleUnsafeText()
        ansible_unsafe_bytes_0 = module_0.AnsibleUnsafeBytes()
        var_0 = ansible_unsafe_text_0.encode()
        str_0 = '\x0cI_-lRy-q6h'
        str_1 = ',9?\\Yk'
        str_2 = "ELoy'cj"
        dict_0 = {str_0: var_0, str_1: var_0, str_2: ansible_unsafe_text_0}
        var_1 = ansible_unsafe_bytes_0.decode(**dict_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'fmNLl/?\ni'
        float_0 = 280.0
        list_0 = [float_0, float_0, float_0]
        list_1 = [str_0, str_0]
        unsafe_proxy_0 = module_0.UnsafeProxy(*list_1)
        var_0 = unsafe_proxy_0.__new__(float_0, list_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bool_0 = None
        bytes_0 = b' \xfbcp}\xc5\x00t{]\x94'
        var_0 = module_0.wrap_var(bytes_0)
        var_1 = module_0.wrap_var(bool_0)
        ansible_unsafe_0 = module_0.AnsibleUnsafe()
        str_0 = 'WmTtRF/gE@kSI3j'
        float_0 = -1575.33
        native_jinja_unsafe_text_0 = module_0.NativeJinjaUnsafeText()
        dict_0 = {str_0: float_0}
        tuple_0 = None
        var_2 = module_0.wrap_var(tuple_0)
        var_3 = module_0.to_unsafe_text(**dict_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'useradd'
        list_0 = [str_0, str_0]
        dict_0 = {}
        var_0 = module_0.to_unsafe_bytes(*list_0, **dict_0)
    except BaseException:
        pass

def test_case_4():
    try:
        var_0 = module_0.to_unsafe_text()
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = '\r'
        ansible_unsafe_bytes_0 = module_0.AnsibleUnsafeBytes()
        dict_0 = {ansible_unsafe_bytes_0: ansible_unsafe_bytes_0}
        list_0 = [ansible_unsafe_bytes_0, ansible_unsafe_bytes_0, dict_0, dict_0]
        var_0 = module_0.wrap_var(list_0)
        str_1 = 'kaRu\x0b"oU'
        ansible_unsafe_text_0 = module_0.AnsibleUnsafeText()
        dict_1 = {str_0: str_0, str_1: ansible_unsafe_text_0}
        list_1 = []
        unsafe_proxy_0 = module_0.UnsafeProxy(*list_1, **dict_1)
    except BaseException:
        pass

def test_case_6():
    try:
        ansible_unsafe_text_0 = module_0.AnsibleUnsafeText()
        native_jinja_unsafe_text_0 = module_0.NativeJinjaUnsafeText()
        int_0 = -1931
        var_0 = module_0.wrap_var(int_0)
        ansible_unsafe_bytes_0 = module_0.AnsibleUnsafeBytes()
        native_jinja_unsafe_text_1 = module_0.NativeJinjaUnsafeText()
        str_0 = '<k'
        var_1 = module_0.wrap_var(str_0)
        list_0 = [native_jinja_unsafe_text_0, var_1, str_0, native_jinja_unsafe_text_1]
        str_1 = ''
        dict_0 = {str_1: str_1}
        unsafe_proxy_0 = module_0.UnsafeProxy(*list_0, **dict_0)
        str_2 = 'specify extra arguments to pass to scp only (e.g. -l)'
        str_3 = 'l8g_h\tXs:Y\ry1'
        str_4 = None
        dict_1 = {str_2: ansible_unsafe_bytes_0, str_3: str_3, str_0: str_2, str_4: str_0}
        var_2 = ansible_unsafe_text_0.encode(*list_0, **dict_1)
    except BaseException:
        pass

def test_case_7():
    try:
        ansible_unsafe_text_0 = module_0.AnsibleUnsafeText()
        native_jinja_unsafe_text_0 = module_0.NativeJinjaUnsafeText()
        int_0 = -1931
        list_0 = [int_0, ansible_unsafe_text_0]
        unsafe_proxy_0 = module_0.UnsafeProxy(*list_0)
        var_0 = module_0.wrap_var(int_0)
        ansible_unsafe_bytes_0 = module_0.AnsibleUnsafeBytes()
        native_jinja_unsafe_text_1 = module_0.NativeJinjaUnsafeText()
        str_0 = '<k'
        var_1 = module_0.wrap_var(str_0)
        list_1 = None
        ansible_unsafe_0 = module_0.AnsibleUnsafe(*list_1)
    except BaseException:
        pass