# Automatically generated by Pynguin.
import pytutils.trees as module_0

def test_case_0():
    try:
        int_0 = 2299
        str_0 = '1!R$@X$I>\n1)Fgzs'
        var_0 = module_0.get_tree_node(int_0, str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        tree_0 = module_0.Tree()
        dict_0 = {}
        var_0 = tree_0.__setitem__(dict_0, dict_0)
    except BaseException:
        pass

def test_case_2():
    try:
        var_0 = {}
        str_0 = 'foo:bar'
        int_0 = 1
        var_1 = module_0.set_tree_node(var_0, str_0, int_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bool_0 = False
        tree_0 = module_0.Tree()
        list_0 = [tree_0, bool_0, tree_0, bool_0]
        registry_tree_0 = module_0.RegistryTree(bool_0, tree_0, list_0)
    except BaseException:
        pass

def test_case_4():
    try:
        float_0 = 906.65937
        registry_tree_0 = module_0.RegistryTree(float_0)
    except BaseException:
        pass

def test_case_5():
    try:
        bool_0 = False
        tree_0 = module_0.Tree()
        var_0 = tree_0.__getitem__(bool_0)
    except BaseException:
        pass

def test_case_6():
    try:
        bool_0 = None
        int_0 = -216
        registry_tree_0 = module_0.RegistryTree()
        bytes_0 = b'{Q+\xd9=\xd8\x99\x8b\x9b\xd4#\xc9\xa9\xb3\x90e\x10'
        tree_0 = module_0.Tree()
        var_0 = tree_0.__getitem__(bool_0, int_0, bytes_0)
    except BaseException:
        pass

def test_case_7():
    try:
        float_0 = -644.5
        dict_0 = None
        str_0 = 'w`\x0cXmdKoE~U[r+o\rx~<'
        str_1 = "UM'P\x0bqO=<"
        var_0 = module_0.get_tree_node(dict_0, str_0, float_0, str_1)
    except BaseException:
        pass