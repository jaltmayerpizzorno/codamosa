# Automatically generated by Pynguin.
import ansible.plugins.callback.junit as module_0

def test_case_0():
    try:
        str_0 = '0VuZ+\ny5gFejlK<5$\rFC'
        set_0 = {str_0, str_0, str_0, str_0}
        callback_module_0 = module_0.CallbackModule()
        complex_0 = None
        bool_0 = True
        tuple_0 = (complex_0, bool_0)
        tuple_1 = (set_0, callback_module_0, tuple_0)
        callback_module_1 = module_0.CallbackModule()
        var_0 = callback_module_1.v2_playbook_on_task_start(str_0, tuple_1)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'bI\x0b$c?)Q/nj77'
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_handler_task_start(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b'\xd2B\x90\xd0\x9a'
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_include(bytes_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = None
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_play_start(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = '[zK7'
        callback_module_0 = module_0.CallbackModule()
        set_0 = {str_0, str_0, callback_module_0}
        var_0 = callback_module_0.v2_runner_on_no_hosts(set_0)
    except BaseException:
        pass

def test_case_5():
    try:
        callback_module_0 = module_0.CallbackModule()
        str_0 = 'test'
        bool_0 = True
        var_0 = callback_module_0.v2_runner_on_failed(str_0, bool_0)
    except BaseException:
        pass

def test_case_6():
    try:
        callback_module_0 = module_0.CallbackModule()
        bytes_0 = b'\xcc\x05\xb1\x917'
        var_0 = callback_module_0.v2_runner_on_failed(bytes_0)
    except BaseException:
        pass

def test_case_7():
    try:
        bytes_0 = b';&!\x01t0\xc8k\x9c'
        bool_0 = True
        dict_0 = None
        list_0 = None
        tuple_0 = (bytes_0, bool_0, dict_0, list_0)
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_on_ok(tuple_0)
    except BaseException:
        pass

def test_case_8():
    try:
        set_0 = None
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_on_skipped(set_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'allow_pre_release'
        bytes_0 = b'\xbc]!\xfe\x15\xd6*\r\x8b\x8a-\xc8\x82\x95p\xd3'
        dict_0 = {bytes_0: bytes_0}
        str_1 = 'CFA{G(L#}kN{8y|-c3NO'
        callback_module_0 = module_0.CallbackModule()
        float_0 = -734.86
        task_data_0 = module_0.TaskData(dict_0, str_1, dict_0, callback_module_0, float_0)
        var_0 = task_data_0.add_host(str_0)
    except BaseException:
        pass

def test_case_10():
    try:
        bytes_0 = b';w\x85\xe3p\xbc\xcf\xab\xac\x8cM5\xbb\xd7\x1b\xe6\xd1\xe0'
        bytes_1 = b',\xfa\\1\r'
        str_0 = "u'$,XTE-X&:*"
        str_1 = 'Lwd+M'
        host_data_0 = module_0.HostData(bytes_0, bytes_1, str_0, str_1)
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_include(host_data_0)
    except BaseException:
        pass

def test_case_11():
    try:
        dict_0 = {}
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_cleanup_task_start(dict_0)
    except BaseException:
        pass

def test_case_12():
    try:
        dict_0 = {}
        callback_module_0 = module_0.CallbackModule()
        str_0 = ''
        list_0 = None
        task_data_0 = module_0.TaskData(callback_module_0, str_0, str_0, str_0, list_0)
        int_0 = 69
        bytes_0 = b'\x08\xba'
        bool_0 = False
        str_1 = 'w5w\x0c/d+UK'
        tuple_0 = (bool_0, callback_module_0, str_1, str_1)
        host_data_0 = module_0.HostData(tuple_0, dict_0, str_0, bytes_0)
        var_0 = task_data_0.add_host(host_data_0)
        host_data_1 = module_0.HostData(bytes_0, host_data_0, bool_0, bytes_0)
        tuple_1 = (int_0, task_data_0)
        host_data_2 = module_0.HostData(int_0, host_data_1, tuple_1, int_0)
        list_1 = [tuple_0, int_0]
        callback_module_1 = module_0.CallbackModule()
        var_1 = callback_module_1.v2_playbook_on_stats(list_1)
        callback_module_2 = module_0.CallbackModule()
        var_2 = task_data_0.add_host(host_data_0)
    except BaseException:
        pass