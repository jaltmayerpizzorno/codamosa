# Automatically generated by Pynguin.
import sanic.headers as module_0

def test_case_0():
    pass

def test_case_1():
    str_0 = 'form-data; name=upload; filename="file.txt"'
    tuple_0 = module_0.parse_content_header(str_0)

def test_case_2():
    str_0 = ''
    tuple_0 = module_0.parse_content_header(str_0)

def test_case_3():
    list_0 = []
    dict_0 = module_0.fwd_normalize(list_0)

def test_case_4():
    str_0 = 'response_middleware'
    str_1 = module_0.fwd_normalize_address(str_0)

def test_case_5():
    str_0 = '$\x0ca+3UMRyAb,L2R-'
    tuple_0 = module_0.parse_host(str_0)

def test_case_6():
    str_0 = 'T'
    tuple_0 = module_0.parse_host(str_0)

def test_case_7():
    str_0 = 'at\n'
    tuple_0 = module_0.parse_content_header(str_0)
    tuple_1 = module_0.parse_host(str_0)
    tuple_2 = (tuple_0, tuple_1)
    dict_0 = module_0.fwd_normalize(tuple_2)
    str_1 = '=b\x0b=M6>a/TR;U28'
    tuple_3 = module_0.parse_content_header(str_1)
    str_2 = 'b1ues'
    tuple_4 = module_0.parse_host(str_2)

def test_case_8():
    str_0 = ')$e01}'
    str_1 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = ()
    str_2 = 'PROXIES_COUNT'
    str_3 = 'REAL_IP_HEADER'
    int_0 = -19
    var_1 = {str_2: int_0, str_0: str_0, str_3: str_0, str_3: str_0}
    var_2 = type(str_2, var_0, var_1)
    optional_0 = module_0.parse_xforwarded(str_1, var_2)

def test_case_9():
    str_0 = 'for'
    str_1 = '[::1]'
    str_2 = (str_0, str_1)
    str_3 = 'proto'
    str_4 = 'https'
    str_5 = (str_3, str_4)
    str_6 = 'host'
    str_7 = 'test.com'
    str_8 = (str_6, str_7)
    str_9 = 'port'
    str_10 = (str_9, str_7)
    str_11 = 'path'
    str_12 = '/path'
    str_13 = (str_11, str_12)
    str_14 = [str_2, str_5, str_8, str_10, str_13]
    dict_0 = module_0.fwd_normalize(str_14)

def test_case_10():
    str_0 = '127.0.0.1'
    str_1 = module_0.fwd_normalize_address(str_0)
    str_2 = '2001:cdba:0000:0000:0000:0000:0000:3257'
    str_3 = module_0.fwd_normalize_address(str_2)
    str_4 = '2001:cdba:0000:0000:0000:0000:0000:3257-foo'
    str_5 = module_0.fwd_normalize_address(str_4)

def test_case_11():
    str_0 = 'localhost:8080'
    tuple_0 = module_0.parse_host(str_0)

def test_case_12():
    str_0 = 'X-Forwarded-Host'
    str_1 = 'X-Forwarded-Port'
    str_2 = '1.2.3.4'
    str_3 = '4Y3'
    str_4 = {str_0: str_2, str_0: str_2, str_1: str_3, str_2: str_0, str_2: str_0}
    str_5 = 'Config'
    var_0 = ()
    str_6 = 'PROXIES_COUNT'
    str_7 = 'FORWARDED_FOR_HEADE'
    str_8 = 'REAL_IP_HEADER'
    int_0 = 0
    var_1 = {str_6: int_0, str_7: str_3, str_8: str_3}
    var_2 = type(str_5, var_0, var_1)
    optional_0 = module_0.parse_xforwarded(str_4, var_2)