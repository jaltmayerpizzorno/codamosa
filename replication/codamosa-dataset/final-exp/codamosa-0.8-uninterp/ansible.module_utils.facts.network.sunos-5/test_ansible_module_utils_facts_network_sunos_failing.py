# Automatically generated by Pynguin.
import ansible.module_utils.facts.network.sunos as module_0
import ansible.module_utils.facts.network.generic_bsd as module_1

def test_case_0():
    try:
        set_0 = set()
        float_0 = 311.53
        sun_o_s_network_0 = module_0.SunOSNetwork(float_0)
        var_0 = sun_o_s_network_0.get_interfaces_info(set_0)
    except BaseException:
        pass

def test_case_1():
    try:
        dict_0 = {}
        bool_0 = False
        int_0 = 157
        list_0 = [int_0, int_0]
        str_0 = 'w&u\r>}\x0c.WJbMf'
        sun_o_s_network_0 = module_0.SunOSNetwork(list_0, str_0)
        var_0 = sun_o_s_network_0.parse_ether_line(dict_0, bool_0, dict_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b'\x8f\x8fG6D\xb5!'
        bool_0 = False
        sun_o_s_network_0 = module_0.SunOSNetwork(bytes_0, bool_0)
        str_0 = 'DQN-]*_t0'
        float_0 = 0.1
        list_0 = [float_0, str_0]
        tuple_0 = (float_0, list_0, float_0)
        str_1 = 'Q\x0bzylWF,7}bEJ'
        sun_o_s_network_1 = module_0.SunOSNetwork(str_1)
        var_0 = sun_o_s_network_1.parse_ether_line(str_0, tuple_0, str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'FkA1"'
        bytes_0 = b'\r\x02x\x05\xdc\xf0\xd5n\xf4\xd1MY'
        str_1 = '@%s:'
        bytes_1 = b'\xdb\x9e\x88\xe0"B|\xad\x1d\xed\xea=v\x98\x84)\xe2"\xbf\x86'
        sun_o_s_network_0 = module_0.SunOSNetwork(bytes_1)
        var_0 = sun_o_s_network_0.parse_interface_line(str_0, bytes_0, str_1)
    except BaseException:
        pass

def test_case_4():
    try:
        var_0 = None
        sun_o_s_network_0 = module_0.SunOSNetwork(var_0)
        generic_bsd_ifconfig_network_0 = module_1.GenericBsdIfconfigNetwork(var_0)
        str_0 = 'ce0:'
        str_1 = 'flags=201000849<UP,LOOPBACK,RUNNING,MULTICAST,IPv4,VIRTUAL>'
        str_2 = [str_0, str_1, str_1]
        var_1 = {}
        var_2 = sun_o_s_network_0.parse_interface_line(str_2, var_0, var_1)
    except BaseException:
        pass