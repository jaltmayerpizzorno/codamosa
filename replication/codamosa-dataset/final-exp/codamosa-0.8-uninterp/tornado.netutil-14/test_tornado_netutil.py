# Automatically generated by Pynguin.
import tornado.netutil as module_0
import socket as module_1
import ssl as module_2

def test_case_0():
    pass

def test_case_1():
    str_0 = "\trRwQc8(VI5{k1'GnCfw"
    socket_0 = module_0.bind_unix_socket(str_0)

def test_case_2():
    str_0 = '8n/'
    bool_0 = module_0.is_valid_ip(str_0)

def test_case_3():
    dict_0 = {}
    s_s_l_context_0 = module_0.ssl_options_to_context(dict_0)

def test_case_4():
    dict_0 = {}
    s_s_l_context_0 = module_0.ssl_options_to_context(dict_0)
    s_s_l_context_1 = module_0.ssl_options_to_context(s_s_l_context_0)
    default_executor_resolver_0 = module_0.DefaultExecutorResolver()

def test_case_5():
    socket_0 = module_1.socket()
    s_s_l_context_0 = module_2.SSLContext()
    s_s_l_socket_0 = module_0.ssl_wrap_socket(socket_0, s_s_l_context_0)

def test_case_6():
    str_0 = None
    bool_0 = module_0.is_valid_ip(str_0)

def test_case_7():
    int_0 = 8888
    list_0 = module_0.bind_sockets(int_0)

def test_case_8():
    int_0 = 137
    str_0 = ''
    list_0 = module_0.bind_sockets(int_0, str_0)

def test_case_9():
    str_0 = '0:00:00:00:00:0:00:000'
    bool_0 = module_0.is_valid_ip(str_0)
    str_1 = '192.168.0.1'
    bool_1 = module_0.is_valid_ip(str_1)
    str_2 = 'u0:0:0:'
    bool_2 = module_0.is_valid_ip(str_2)
    str_3 = 'hello'
    bool_3 = module_0.is_valid_ip(str_3)