# Automatically generated by Pynguin.
import typed_ast._ast3 as module_0
import py_backwards.transformers.dict_unpacking as module_1

def test_case_0():
    try:
        a_s_t_0 = module_0.AST()
        dict_unpacking_transformer_0 = module_1.DictUnpackingTransformer(a_s_t_0)
        module_x_var_0 = None
        module_x_var_1 = dict_unpacking_transformer_0.visit_Module(module_x_var_0)
    except BaseException:
        pass

def test_case_1():
    try:
        a_s_t_0 = None
        dict_unpacking_transformer_0 = module_1.DictUnpackingTransformer(a_s_t_0)
        dict_0 = {dict_unpacking_transformer_0: a_s_t_0, a_s_t_0: dict_unpacking_transformer_0, a_s_t_0: dict_unpacking_transformer_0}
        list_0 = [dict_0, dict_unpacking_transformer_0]
        dict_1 = module_0.Dict(*list_0)
        str_0 = '\x0bp\\s%^:FP\n!\\P\n'
        str_1 = '#LtXe69\\gMF|\n:>fUJ&'
        str_2 = '.'
        dict_2 = {str_0: str_0, str_1: str_0, str_0: str_1, str_2: str_0}
        a_s_t_1 = module_0.AST(**dict_2)
        dict_unpacking_transformer_1 = module_1.DictUnpackingTransformer(a_s_t_1)
        var_0 = dict_unpacking_transformer_1.visit_Dict(dict_1)
    except BaseException:
        pass