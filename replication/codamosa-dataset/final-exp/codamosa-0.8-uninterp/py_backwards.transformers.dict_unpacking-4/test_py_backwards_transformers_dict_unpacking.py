# Automatically generated by Pynguin.
import typed_ast._ast3 as module_0
import py_backwards.transformers.dict_unpacking as module_1
import builtins as module_2

def test_case_0():
    pass

def test_case_1():
    dict_0 = {}
    list_0 = [dict_0, dict_0]
    dict_1 = module_0.Dict(*list_0, **dict_0)
    a_s_t_0 = module_0.AST()
    dict_unpacking_transformer_0 = module_1.DictUnpackingTransformer(a_s_t_0)
    var_0 = dict_unpacking_transformer_0.visit_Dict(dict_1)

def test_case_2():
    dict_0 = {}
    list_0 = [dict_0, dict_0]
    dict_1 = module_0.Dict(*list_0, **dict_0)
    list_1 = []
    a_s_t_0 = module_0.AST(*list_1, **dict_0)
    dict_unpacking_transformer_0 = module_1.DictUnpackingTransformer(a_s_t_0)
    var_0 = dict_unpacking_transformer_0.visit_Dict(dict_1)
    list_2 = [list_1, dict_0]
    module_x_var_0 = module_0.Module(*list_2)
    str_0 = 'I\x0b7d 2#({yS[rR'
    str_1 = '@\',"'
    dict_2 = {str_0: var_0, str_1: dict_0}
    a_s_t_1 = module_0.AST(**dict_2)
    dict_unpacking_transformer_1 = module_1.DictUnpackingTransformer(a_s_t_1)
    dict_unpacking_transformer_2 = module_1.DictUnpackingTransformer(a_s_t_0)
    list_3 = module_2.list()
    a_s_t_2 = module_0.AST()
    var_1 = dict_unpacking_transformer_2.visit_Dict(dict_1)
    dict_unpacking_transformer_3 = module_1.DictUnpackingTransformer(a_s_t_2)
    module_x_var_1 = dict_unpacking_transformer_0.visit_Module(module_x_var_0)