# Automatically generated by Pynguin.
import ansible.cli.vault as module_0
import ansible.utils.display as module_1

def test_case_0():
    try:
        int_0 = -1362
        vault_c_l_i_0 = module_0.VaultCLI(int_0)
        var_0 = vault_c_l_i_0.run()
    except BaseException:
        pass

def test_case_1():
    try:
        tuple_0 = ()
        list_0 = [tuple_0]
        float_0 = 4931.349732
        dict_0 = {float_0: float_0, float_0: float_0}
        list_1 = [dict_0, float_0, float_0]
        vault_c_l_i_0 = module_0.VaultCLI(list_1)
        var_0 = vault_c_l_i_0.post_process_args(list_0)
    except BaseException:
        pass

def test_case_2():
    try:
        float_0 = 455.2
        tuple_0 = (float_0,)
        vault_c_l_i_0 = module_0.VaultCLI(tuple_0)
        var_0 = vault_c_l_i_0.execute_encrypt()
    except BaseException:
        pass

def test_case_3():
    try:
        float_0 = -392.92817699882403
        str_0 = 'content-disposition'
        vault_c_l_i_0 = module_0.VaultCLI(str_0)
        var_0 = vault_c_l_i_0.format_ciphertext_yaml(float_0)
        var_1 = vault_c_l_i_0.execute_rekey()
    except BaseException:
        pass

def test_case_4():
    try:
        bytes_0 = b'\x02G\xef'
        vault_c_l_i_0 = module_0.VaultCLI(bytes_0)
        var_0 = vault_c_l_i_0.execute_encrypt_string()
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = '~65xz\\Loa'
        vault_c_l_i_0 = module_0.VaultCLI(str_0)
        var_0 = vault_c_l_i_0.execute_decrypt()
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = '(x],Tc\trQO/\\$5}$M'
        vault_c_l_i_0 = module_0.VaultCLI(str_0)
        var_0 = vault_c_l_i_0.execute_create()
    except BaseException:
        pass

def test_case_7():
    try:
        float_0 = 0.0
        float_1 = -1342.6852
        vault_c_l_i_0 = module_0.VaultCLI(float_1)
        vault_c_l_i_1 = module_0.VaultCLI(vault_c_l_i_0)
        var_0 = vault_c_l_i_1.format_ciphertext_yaml(float_0)
        var_1 = vault_c_l_i_0.execute_edit()
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = 'CXQ0[:mHqS\n\rRn<z38'
        list_0 = [str_0, str_0, str_0, str_0]
        vault_c_l_i_0 = module_0.VaultCLI(list_0)
        var_0 = vault_c_l_i_0.execute_view()
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'template_vars'
        vault_c_l_i_0 = module_0.VaultCLI(str_0)
        var_0 = vault_c_l_i_0.init_parser()
        str_1 = 'content-disposition'
        vault_c_l_i_1 = module_0.VaultCLI(str_1)
        list_0 = None
        int_0 = -155
        var_1 = vault_c_l_i_1.format_ciphertext_yaml(str_0, int_0)
        vault_c_l_i_2 = module_0.VaultCLI(list_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = 'temp]ate_vars'
        vault_c_l_i_0 = module_0.VaultCLI(str_0)
        var_0 = vault_c_l_i_0.init_parser()
        str_1 = '"DW_Q0+{j4p'
        var_1 = vault_c_l_i_0.post_process_args(str_1)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = 'template_vars'
        vault_c_l_i_0 = module_0.VaultCLI(str_0)
        var_0 = vault_c_l_i_0.init_parser()
        dict_0 = {}
        set_0 = None
        bool_0 = True
        str_1 = "Source '%s' failed to transfer"
        tuple_0 = (bool_0, str_1, dict_0)
        var_1 = vault_c_l_i_0.format_ciphertext_yaml(dict_0, set_0, tuple_0)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = 'template_vars'
        vault_c_l_i_0 = module_0.VaultCLI(str_0)
        var_0 = vault_c_l_i_0.init_parser()
        var_1 = vault_c_l_i_0.init_parser()
        str_1 = 'o5\r:l</kUI'
        vault_c_l_i_1 = module_0.VaultCLI(str_1)
        bytes_0 = None
        display_0 = module_1.Display(bytes_0)
        var_2 = vault_c_l_i_0.post_process_args(display_0)
    except BaseException:
        pass