# Automatically generated by Pynguin.
import pymonet.immutable_list as module_0
import builtins as module_1

def test_case_0():
    try:
        var_0 = None
        float_0 = 1803.794415
        bool_0 = False
        immutable_list_0 = module_0.ImmutableList(float_0, bool_0)
        var_1 = immutable_list_0.append(var_0)
        var_2 = immutable_list_0.__add__(var_1)
        float_1 = 138.910713
        var_3 = immutable_list_0.map(float_1)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '3`RmhikF'
        dict_0 = {}
        immutable_list_0 = module_0.ImmutableList(dict_0)
        var_0 = immutable_list_0.__len__()
        optional_0 = immutable_list_0.find(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '3`RmhikF'
        dict_0 = {}
        immutable_list_0 = module_0.ImmutableList()
        var_0 = immutable_list_0.__len__()
        immutable_list_1 = module_0.ImmutableList(dict_0)
        var_1 = None
        var_2 = immutable_list_1.append(var_1)
        optional_0 = immutable_list_1.find(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bool_0 = False
        bool_1 = True
        immutable_list_0 = module_0.ImmutableList(bool_0, bool_1)
        str_0 = immutable_list_0.__str__()
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = '\n        Transform Box into Validation.\n\n        :returns: successfull Validation monad with previous value\n        :rtype: Validation[A, []]\n        '
        dict_0 = {str_0: str_0}
        immutable_list_0 = module_0.ImmutableList()
        var_0 = immutable_list_0.__len__()
        immutable_list_1 = module_0.ImmutableList(dict_0)
        var_1 = None
        var_2 = immutable_list_0.unshift(var_1)
        optional_0 = immutable_list_1.find(str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        callable_0 = None
        list_0 = []
        str_0 = "PiwC?uhhz@'"
        immutable_list_0 = module_0.ImmutableList(str_0)
        str_1 = immutable_list_0.__str__()
        str_2 = '1%}h\'#"YEnAmi0*'
        str_3 = 'kt\t=vae_(8hoZR'
        dict_0 = {str_0: list_0, str_2: list_0, str_3: str_0}
        immutable_list_1 = module_0.ImmutableList(list_0, dict_0)
        var_0 = immutable_list_1.map(callable_0)
    except BaseException:
        pass

def test_case_6():
    try:
        bool_0 = True
        immutable_list_0 = module_0.ImmutableList(bool_0)
        immutable_list_1 = module_0.ImmutableList()
        var_0 = immutable_list_0.__len__()
        str_0 = immutable_list_1.__str__()
        int_0 = -323
        var_1 = immutable_list_0.append(int_0)
        list_0 = [str_0, var_0, immutable_list_1]
        var_2 = immutable_list_1.map(list_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = '#Bq2\\vO*J!gRP^ >v'
        dict_0 = {str_0: str_0, str_0: str_0}
        immutable_list_0 = module_0.ImmutableList(dict_0)
        bool_0 = True
        bool_1 = True
        immutable_list_1 = module_0.ImmutableList(bool_0, bool_1)
        var_0 = immutable_list_1.filter(immutable_list_0)
    except BaseException:
        pass

def test_case_8():
    try:
        callable_0 = None
        immutable_list_0 = module_0.ImmutableList()
        var_0 = immutable_list_0.filter(callable_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = '3`RmhikF'
        dict_0 = {}
        immutable_list_0 = module_0.ImmutableList(dict_0)
        optional_0 = immutable_list_0.find(str_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = None
        float_0 = -1947.39
        bool_0 = False
        immutable_list_0 = module_0.ImmutableList(float_0, bool_0)
        optional_0 = immutable_list_0.find(str_0)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = None
        dict_0 = {str_0: str_0}
        immutable_list_0 = module_0.ImmutableList(dict_0)
        float_0 = -733.7
        var_0 = None
        var_1 = immutable_list_0.reduce(float_0, var_0)
    except BaseException:
        pass

def test_case_12():
    try:
        immutable_list_0 = module_0.ImmutableList()
        callable_0 = None
        optional_0 = immutable_list_0.find(callable_0)
        str_0 = None
        var_0 = immutable_list_0.append(str_0)
        var_1 = immutable_list_0.__len__()
        immutable_list_1 = module_0.ImmutableList(immutable_list_0)
        object_0 = module_1.object()
        bool_0 = immutable_list_1.__eq__(object_0)
        str_1 = 'CFPA5T1}'
        set_0 = {callable_0, object_0, bool_0, var_1}
        var_2 = None
        var_3 = immutable_list_0.reduce(set_0, var_2)
        var_4 = immutable_list_1.append(var_3)
        var_5 = immutable_list_1.map(str_1)
    except BaseException:
        pass

def test_case_13():
    try:
        immutable_list_0 = module_0.ImmutableList()
        var_0 = immutable_list_0.__len__()
        bytes_0 = b'\x9b\x8el\xb9\xc3\xc3\x81'
        optional_0 = immutable_list_0.find(bytes_0)
        object_0 = module_1.object()
        bool_0 = immutable_list_0.__eq__(object_0)
        bool_1 = False
        var_1 = immutable_list_0.__len__()
        immutable_list_1 = module_0.ImmutableList(bool_1)
        str_0 = immutable_list_0.__str__()
        var_2 = None
        var_3 = immutable_list_1.__add__(var_2)
    except BaseException:
        pass

def test_case_14():
    try:
        bool_0 = False
        immutable_list_0 = module_0.ImmutableList(bool_0)
        str_0 = immutable_list_0.__str__()
        float_0 = 761.4
        dict_0 = {float_0: float_0, float_0: float_0, float_0: float_0}
        bool_1 = False
        bool_2 = True
        immutable_list_1 = module_0.ImmutableList(bool_2)
        var_0 = immutable_list_1.append(bool_1)
        immutable_list_2 = module_0.ImmutableList(dict_0, var_0, bool_1)
        str_1 = immutable_list_2.__str__()
        str_2 = '@i'
        bytes_0 = b',\xb8\xeb\xa8\xad\xbc/\tl\xf2Y\xbd0\x1e\xff\xa0+'
        immutable_list_3 = module_0.ImmutableList(bytes_0)
        var_1 = immutable_list_3.unshift(str_2)
        var_2 = immutable_list_3.__len__()
        object_0 = module_1.object()
        bool_3 = immutable_list_1.__eq__(object_0)
        var_3 = immutable_list_3.__add__(var_1)
        callable_0 = None
        var_4 = None
        var_5 = immutable_list_2.reduce(callable_0, var_4)
    except BaseException:
        pass

def test_case_15():
    try:
        bool_0 = True
        var_0 = None
        tuple_0 = (bool_0, var_0)
        bool_1 = False
        immutable_list_0 = module_0.ImmutableList(tuple_0, bool_1)
        int_0 = -723
        var_1 = immutable_list_0.append(int_0)
        var_2 = immutable_list_0.__len__()
    except BaseException:
        pass