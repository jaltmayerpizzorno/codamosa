# Automatically generated by Pynguin.
import tornado.locks as module_0
import builtins as module_1

def test_case_0():
    try:
        condition_0 = module_0.Condition()
    except BaseException:
        pass

def test_case_1():
    try:
        event_0 = module_0.Event()
        event_0.set()
        awaitable_0 = event_0.wait()
    except BaseException:
        pass

def test_case_2():
    try:
        semaphore_0 = module_0.Semaphore()
        releasing_context_manager_0 = module_0._ReleasingContextManager(semaphore_0)
        releasing_context_manager_0.__enter__()
        semaphore_0.__enter__()
    except BaseException:
        pass

def test_case_3():
    try:
        event_0 = module_0.Event()
        bounded_semaphore_0 = module_0.BoundedSemaphore()
        releasing_context_manager_0 = module_0._ReleasingContextManager(event_0)
        int_0 = -5062
        semaphore_0 = module_0.Semaphore(int_0)
    except BaseException:
        pass

def test_case_4():
    try:
        event_0 = module_0.Event()
        bool_0 = event_0.is_set()
        event_0.set()
        bool_1 = event_0.is_set()
        lock_0 = module_0.Lock()
        str_0 = lock_0.__repr__()
        semaphore_0 = module_0.Semaphore()
        float_0 = None
        awaitable_0 = lock_0.acquire(float_0)
    except BaseException:
        pass

def test_case_5():
    try:
        bounded_semaphore_0 = module_0.BoundedSemaphore()
        bounded_semaphore_0.release()
    except BaseException:
        pass

def test_case_6():
    try:
        lock_0 = module_0.Lock()
        lock_0.__enter__()
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = None
        releasing_context_manager_0 = module_0._ReleasingContextManager(str_0)
        optional_0 = None
        releasing_context_manager_0.__enter__()
        optional_1 = None
        lock_0 = module_0.Lock()
        lock_0.__exit__(releasing_context_manager_0, optional_0, optional_1)
    except BaseException:
        pass

def test_case_8():
    try:
        event_0 = module_0.Event()
        event_0.set()
        bool_0 = event_0.is_set()
        releasing_context_manager_0 = module_0._ReleasingContextManager(event_0)
        event_0.set()
        timedelta_0 = None
        awaitable_0 = event_0.wait(timedelta_0)
    except BaseException:
        pass

def test_case_9():
    try:
        event_0 = module_0.Event()
        bool_0 = event_0.is_set()
        event_0.set()
        str_0 = event_0.__repr__()
        lock_0 = module_0.Lock()
        str_1 = lock_0.__repr__()
        semaphore_0 = module_0.Semaphore()
        semaphore_0.release()
        list_0 = [bool_0]
        base_exception_0 = module_1.BaseException()
        bytes_0 = None
        event_0.clear()
        releasing_context_manager_0 = module_0._ReleasingContextManager(lock_0)
        releasing_context_manager_0.__exit__(list_0, base_exception_0, bytes_0)
    except BaseException:
        pass

def test_case_10():
    try:
        lock_0 = module_0.Lock()
        event_0 = module_0.Event()
        event_0.clear()
        lock_0.release()
    except BaseException:
        pass

def test_case_11():
    try:
        event_0 = module_0.Event()
        event_0.set()
        bool_0 = event_0.is_set()
        str_0 = '?\\}G9<]yn\r=A'
        traceback_0 = None
        semaphore_0 = module_0.Semaphore()
        semaphore_0.__exit__(str_0, bool_0, traceback_0)
    except BaseException:
        pass

def test_case_12():
    try:
        lock_0 = module_0.Lock()
        lock_0.release()
    except BaseException:
        pass