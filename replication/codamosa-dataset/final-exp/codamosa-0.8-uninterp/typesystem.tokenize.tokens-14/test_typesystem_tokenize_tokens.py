# Automatically generated by Pynguin.
import typesystem.tokenize.tokens as module_0

def test_case_0():
    pass

def test_case_1():
    int_0 = 1277
    str_0 = '4$'
    list_token_0 = module_0.ListToken(int_0, int_0, int_0, str_0)

def test_case_2():
    list_0 = []
    list_1 = [list_0]
    int_0 = 4
    token_0 = module_0.Token(list_1, int_0, int_0)
    str_0 = token_0.__repr__()

def test_case_3():
    list_0 = []
    float_0 = -2350.964
    int_0 = 1
    token_0 = module_0.Token(float_0, int_0, int_0)
    token_1 = token_0.lookup(list_0)

def test_case_4():
    list_0 = []
    float_0 = -2350.964
    int_0 = 2147
    token_0 = module_0.Token(float_0, int_0, int_0)
    bool_0 = token_0.__eq__(float_0)
    int_1 = 1
    token_1 = module_0.Token(float_0, int_1, int_1)
    token_2 = token_1.lookup(list_0)

def test_case_5():
    str_0 = 'value'
    int_0 = 0
    int_1 = 1
    var_0 = None
    scalar_token_0 = module_0.ScalarToken(str_0, int_0, int_1, var_0)
    scalar_token_1 = module_0.ScalarToken(str_0, int_0, int_1, var_0)
    var_1 = scalar_token_0 == scalar_token_1
    scalar_token_2 = module_0.ScalarToken(str_0, int_0, int_1, var_0)
    str_1 = 'value2'
    scalar_token_3 = module_0.ScalarToken(str_1, int_0, int_1, var_0)
    var_2 = scalar_token_2 == scalar_token_3
    scalar_token_4 = module_0.ScalarToken(str_0, int_0, int_1, var_0)
    int_2 = 2
    scalar_token_5 = module_0.ScalarToken(str_0, int_0, int_2, var_0)
    var_3 = scalar_token_4 == scalar_token_5
    scalar_token_6 = module_0.ScalarToken(str_0, int_0, int_1, var_0)
    scalar_token_7 = module_0.ScalarToken(str_0, int_1, int_1, var_0)
    var_4 = scalar_token_6 == scalar_token_7

def test_case_6():
    int_0 = 10
    int_1 = 12
    str_0 = 'test'
    token_0 = module_0.Token(int_0, int_0, int_1, str_0)
    var_0 = token_0.start
    var_1 = token_0.end