# Automatically generated by Pynguin.
import ansible.playbook.role.requirement as module_0

def test_case_0():
    pass

def test_case_1():
    role_requirement_0 = module_0.RoleRequirement()

def test_case_2():
    int_0 = 532
    list_0 = [int_0]
    role_requirement_0 = module_0.RoleRequirement()
    var_0 = role_requirement_0.repo_url_to_role_name(list_0)

def test_case_3():
    role_requirement_0 = module_0.RoleRequirement()
    str_0 = '3]SeK@jr[l0/'
    var_0 = role_requirement_0.role_yaml_parse(str_0)

def test_case_4():
    bool_0 = False
    role_requirement_0 = module_0.RoleRequirement()
    bytes_0 = b'I\xa4\x94q\x84\x84\xd4\x863\xaf\x94\xd0|\x97\x8bT!:C'
    dict_0 = {role_requirement_0: role_requirement_0, role_requirement_0: bytes_0, bool_0: role_requirement_0}
    var_0 = role_requirement_0.role_yaml_parse(dict_0)

def test_case_5():
    role_requirement_0 = module_0.RoleRequirement()
    str_0 = 'lA5"z`^COn.`=y,'
    var_0 = role_requirement_0.role_yaml_parse(str_0)

def test_case_6():
    str_0 = '\n- name: Extract foo.tgz into /var/lib/foo\n  ansible.builtin.unarchive:\n    src: foo.tgz\n    dest: /var/lib/foo\n\n- name: Unarchive a file that is already on the remote machine\n  ansible.builtin.unarchive:\n    src: /tmp/foo.zip\n    dest: /usr/local/bin\n    remote_src: yes\n\n- name: Unarchive a file that needs to be downloaded (added in 2.0)\n  ansible.builtin.unarchive:\n    src: https://example.com/example.zip\n    dest: /usr/local/bin\n    remote_src: yes\n\n- name: Unarchive a file with extra options\n  ansible.builtin.unarchive:\n    src: /tmp/foo.zip\n    dest: /usr/local/bin\n    extra_opts:\n    - --transform\n    - s/^xxx/yyy/\n'
    role_requirement_0 = module_0.RoleRequirement()
    var_0 = role_requirement_0.repo_url_to_role_name(str_0)

def test_case_7():
    str_0 = 'http://git.example.com/repos/repo.git'
    role_requirement_0 = module_0.RoleRequirement()
    role_requirement_1 = module_0.RoleRequirement()
    var_0 = role_requirement_1.role_yaml_parse(str_0)