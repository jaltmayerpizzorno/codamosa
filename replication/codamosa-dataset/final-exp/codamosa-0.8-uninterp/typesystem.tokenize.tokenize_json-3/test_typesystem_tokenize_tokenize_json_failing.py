# Automatically generated by Pynguin.
import typesystem.tokenize.tokenize_json as module_0
import typesystem.fields as module_1

def test_case_0():
    try:
        tokenizing_decoder_0 = module_0._TokenizingDecoder()
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '2o}@(p'
        token_0 = module_0.tokenize_json(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b'T\xc8\x97\x90S<}]<'
        token_0 = module_0.tokenize_json(bytes_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b''
        token_0 = module_0.tokenize_json(bytes_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = '{s,)s|TL;'
        any_0 = module_0.validate_json(str_0, str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'n*P@);=z)kyk'
        dict_0 = None
        any_0 = module_0.validate_json(str_0, dict_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = '{"hello": [1, 2.5, "text", true, null, false]}'
        token_0 = module_0.tokenize_json(str_0)
        field_0 = module_1.Field()
        any_0 = module_0.validate_json(str_0, field_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'fs,)u;'
        token_0 = module_0.tokenize_json(str_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = '{"a": '
        token_0 = module_0.tokenize_json(str_0)
    except BaseException:
        pass

def test_case_9():
    try:
        bytes_0 = b't@\xc8\xb9\xb6\xe2\r\x13,cv\xc2\x9d&\xf5\x17\x80\r'
        set_0 = set()
        any_0 = module_0.validate_json(bytes_0, set_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = '{'
        token_0 = module_0.tokenize_json(str_0)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = '\n    {\n      "firstName": "John",\n      "lastName": "Smith",\n      "isAlive": true,\n      "age": 25,\n      "address": {\n        "streetAddress": "21 2nd Street",\n        "city":v"New York",\n        "state": "NY",\n        "postalCode": "10021-3100"\n      },\n      "phoneNumbers": [\n        {\n          "type": "home",\n          "number": "212 555-1234"\n        },\n        {\n          "type": "office",\n          "number": "646 555-4567"\n        }\n      ],\n      "children": [],\n      "spouse": null\n    }\n    '
        token_0 = module_0.tokenize_json(str_0)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = '\n    {\n      "firstName": "John",\n      "lastName": "Smith",\n      "isAlive": true,\n      "age": 25,\n      "ddress": {\n        "streetAddress": "21 2nd Street",\n        "city": "New York",\n        "state": "NY",\n        "postalCode": "10021-3100"\n      },\n      "phoneNumbers": [\n        {\n          "type": "home",\n          number": "212 555-1234"\n $      },\n        {\n          "type": "office",\n          "number": "646 555-4567"\n        }\n      ],\n      "children": [],\n      "spuse": null\n    }\n    '
        token_0 = module_0.tokenize_json(str_0)
    except BaseException:
        pass

def test_case_13():
    try:
        bytes_0 = b'{"foo"\xec "abc", "bIr": 123}'
        token_0 = module_0.tokenize_json(bytes_0)
    except BaseException:
        pass

def test_case_14():
    try:
        str_0 = '{}'
        token_0 = module_0.tokenize_json(str_0)
        str_1 = '{"a": 1'
        token_1 = module_0.tokenize_json(str_1)
    except BaseException:
        pass

def test_case_15():
    try:
        str_0 = '\n    {\n      "firstName": "John",\n      "lastName": "Smith",\n      "isAlive": true,\n      "age": 25,\n      "ddress": {\n        "streetAddress": "21 2nd Street",\n        "city": "New York",\n        "state": "NY",\n        "postalCode": ""0021-3100"\n      },\n      "phoneNumbers": [\n        {\n          "type": "home",\n          number": "212 555-1234"\n        },\n        {\n          "type": "offi<e",\n          "number": "646 555-4567"\n        }\n      ],\n      "children": [],\n      "spuse": null\n    }\n    '
        token_0 = module_0.tokenize_json(str_0)
    except BaseException:
        pass

def test_case_16():
    try:
        str_0 = '{"a": 1'
        token_0 = module_0.tokenize_json(str_0)
    except BaseException:
        pass