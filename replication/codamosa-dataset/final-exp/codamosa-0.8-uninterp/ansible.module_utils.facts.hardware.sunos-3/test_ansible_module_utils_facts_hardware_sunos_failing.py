# Automatically generated by Pynguin.
import ansible.module_utils.facts.hardware.sunos as module_0

def test_case_0():
    try:
        bytes_0 = b'\xc4\r\x83'
        str_0 = 'Downloaded'
        list_0 = [bytes_0]
        sun_o_s_hardware_0 = module_0.SunOSHardware(list_0)
        bool_0 = True
        sun_o_s_hardware_1 = module_0.SunOSHardware(bool_0)
        str_1 = 'b'
        sun_o_s_hardware_2 = module_0.SunOSHardware(sun_o_s_hardware_1, str_1)
        sun_o_s_hardware_3 = module_0.SunOSHardware(str_0, sun_o_s_hardware_2)
        var_0 = sun_o_s_hardware_3.populate()
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'm\x0cO4+u<V\tndT'
        bytes_0 = b''
        sun_o_s_hardware_0 = module_0.SunOSHardware(bytes_0)
        var_0 = sun_o_s_hardware_0.get_cpu_facts(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        int_0 = 4495
        sun_o_s_hardware_0 = module_0.SunOSHardware(int_0)
        bytes_0 = b'\xb0N\xb6\x8ac\xf1\x0c\x81\x9c\xbbk3\xe7'
        sun_o_s_hardware_1 = module_0.SunOSHardware(sun_o_s_hardware_0, bytes_0)
        sun_o_s_hardware_2 = module_0.SunOSHardware(sun_o_s_hardware_1, sun_o_s_hardware_0)
        int_1 = 32603
        sun_o_s_hardware_3 = module_0.SunOSHardware(sun_o_s_hardware_2, int_1)
        var_0 = sun_o_s_hardware_3.get_memory_facts()
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'PSRP STDOUT: %s'
        dict_0 = {str_0: str_0, str_0: str_0}
        int_0 = 827
        sun_o_s_hardware_0 = module_0.SunOSHardware(dict_0, int_0)
        var_0 = sun_o_s_hardware_0.get_dmi_facts()
    except BaseException:
        pass

def test_case_4():
    try:
        bool_0 = False
        list_0 = [bool_0, bool_0]
        bool_1 = False
        sun_o_s_hardware_0 = module_0.SunOSHardware(list_0, bool_1)
        sun_o_s_hardware_1 = module_0.SunOSHardware(sun_o_s_hardware_0)
        var_0 = sun_o_s_hardware_1.get_device_facts()
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = ''
        str_1 = '&4Df5Q{m'
        sun_o_s_hardware_0 = module_0.SunOSHardware(str_0, str_1)
        var_0 = sun_o_s_hardware_0.get_uptime_facts()
    except BaseException:
        pass

def test_case_6():
    try:
        dict_0 = {}
        bytes_0 = b'\xac\x14\xc9\xa9\x89t\xa8L\x93\x9cwY\xfd\xa5\x8e{\xfe\x1e'
        sun_o_s_hardware_0 = module_0.SunOSHardware(dict_0, bytes_0)
        list_0 = []
        var_0 = sun_o_s_hardware_0.get_cpu_facts(list_0)
    except BaseException:
        pass