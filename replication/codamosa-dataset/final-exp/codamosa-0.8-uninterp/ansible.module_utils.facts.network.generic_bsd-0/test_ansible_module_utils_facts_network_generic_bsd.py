# Automatically generated by Pynguin.
import ansible.module_utils.facts.network.generic_bsd as module_0

def test_case_0():
    pass

def test_case_1():
    str_0 = 'p.Ka5f\r.p'
    float_0 = -1492.0
    bool_0 = True
    generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(float_0, bool_0)
    var_0 = generic_bsd_ifconfig_network_0.parse_interface_line(str_0)

def test_case_2():
    str_0 = 'G[+`%L4u{@ib'
    str_1 = '@\n2[=`UV:CR]lB=?5'
    set_0 = {str_1, str_1}
    dict_0 = {}
    generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(set_0, dict_0)
    var_0 = generic_bsd_ifconfig_network_0.merge_default_interface(str_0, str_0, str_0)

def test_case_3():
    str_0 = '5o&kFc]'
    str_1 = '_[3><$'
    dict_0 = {str_0: str_1, str_1: str_0, str_1: str_0}
    generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(str_1, dict_0)
    var_0 = generic_bsd_ifconfig_network_0.parse_interface_line(str_1)
    var_1 = generic_bsd_ifconfig_network_0.get_options(str_1)
    complex_0 = None
    float_0 = None
    var_2 = generic_bsd_ifconfig_network_0.parse_media_line(str_1, dict_0, float_0)
    var_3 = generic_bsd_ifconfig_network_0.merge_default_interface(dict_0, complex_0, str_1)

def test_case_4():
    str_0 = "zz%/'<3m]2f-.-!\\/ -"
    str_1 = '_[3>?T<$'
    dict_0 = {str_0: str_1, str_1: str_0, str_1: str_0}
    generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(str_1, dict_0)
    var_0 = generic_bsd_ifconfig_network_0.parse_interface_line(str_1)
    var_1 = generic_bsd_ifconfig_network_0.get_options(str_1)

def test_case_5():
    str_0 = '5o&kFc]'
    str_1 = '_[><'
    dict_0 = {str_0: str_1, str_1: str_0, str_1: str_0}
    generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(str_1, dict_0)
    var_0 = generic_bsd_ifconfig_network_0.parse_interface_line(str_1)
    var_1 = generic_bsd_ifconfig_network_0.get_options(str_1)
    float_0 = None
    var_2 = generic_bsd_ifconfig_network_0.parse_media_line(str_1, dict_0, float_0)
    var_3 = generic_bsd_ifconfig_network_0.detect_type_media(dict_0)

def test_case_6():
    var_0 = None
    generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(var_0)
    str_0 = 'lo0'
    str_1 = 'vtnet0'
    str_2 = 'en0'
    str_3 = 'iwm0'
    str_4 = 'vlan0'
    str_5 = 'media'
    str_6 = 'device'
    str_7 = 'ether'
    str_8 = {str_5: str_7, str_6: str_0}
    str_9 = {str_5: str_7, str_6: str_1}
    str_10 = {str_5: str_7, str_6: str_2}
    str_11 = ''
    str_12 = {str_5: str_11, str_6: str_3}
    str_13 = 'ethernet autoselect (1000baseT <full-duplex>)'
    str_14 = {str_5: str_13, str_6: str_4}
    str_15 = {str_0: str_8, str_1: str_9, str_2: str_10, str_3: str_12, str_4: str_14}
    var_1 = generic_bsd_ifconfig_network_0.detect_type_media(str_15)

def test_case_7():
    str_0 = '5F]'
    str_1 = '_><$'
    dict_0 = {str_0: str_1, str_1: str_0, str_1: str_0}
    generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(str_1, dict_0)
    var_0 = generic_bsd_ifconfig_network_0.get_options(str_1)
    complex_0 = None
    float_0 = None
    var_1 = generic_bsd_ifconfig_network_0.parse_media_line(str_1, dict_0, float_0)
    var_2 = generic_bsd_ifconfig_network_0.detect_type_media(dict_0)
    var_3 = generic_bsd_ifconfig_network_0.merge_default_interface(dict_0, complex_0, str_1)