# Automatically generated by Pynguin.
import flutils.pathutils as module_0
import pathlib as module_1
import os as module_2

def test_case_0():
    try:
        str_0 = '/.kFRhuR7E`$3*|\tc#'
        module_0.chmod(str_0)
        module_0.path_absent(str_0)
        path_0 = module_0.normalize_path(str_0)
        module_0.path_absent(str_0)
        module_0.path_absent(str_0)
        path_1 = module_0.directory_present(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'Ja'
        str_1 = module_0.exists_as(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        struct_group_0 = module_0.get_os_group()
        bytes_0 = b'K\xd1D\x15\x99\x02\x8e\xcf'
        struct_group_1 = module_0.get_os_group(bytes_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '/pynguin/6w8i4OmV]tv){'
        module_0.path_absent(str_0)
        module_0.path_absent(str_0)
        generator_0 = module_0.find_paths(str_0)
        struct_group_0 = module_0.get_os_group(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'J(>'
        struct_passwd_0 = module_0.get_os_user(str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        posix_path_0 = module_1.PosixPath()
        path_0 = module_0.normalize_path(posix_path_0)
        posix_path_1 = module_1.PosixPath()
        path_1 = module_0.directory_present(posix_path_1)
        bytes_0 = b'\xb3L\x15\xf1\xf0\x95\x0cqC\x85a\x8a\xa3\x9b\x8c\xe8\xf8<\xfe'
        module_0.chown(bytes_0)
    except BaseException:
        pass

def test_case_6():
    try:
        posix_path_0 = module_1.PosixPath()
        str_0 = module_0.exists_as(posix_path_0)
        module_0.path_absent(posix_path_0)
        path_like_0 = module_2.PathLike()
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = '/tmp/flutils.tests.athutils.chown.txt'
        module_0.chown(str_0, str_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = '/tmp'
        str_1 = '~/tmp/**'
        int_0 = 420
        int_1 = 504
        bool_0 = None
        module_0.chmod(str_0, bool_0)
        bool_1 = False
        module_0.chown(str_1, bool_1)
        str_2 = '~/tmp/*'
        module_0.chmod(str_2, int_1)
        struct_group_0 = module_0.get_os_group(int_0)
    except BaseException:
        pass

def test_case_9():
    try:
        int_0 = 760
        struct_passwd_0 = module_0.get_os_user(int_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = '/.kFRhuR7E`$3|\tc#'
        module_0.chmod(str_0)
        struct_passwd_0 = module_0.get_os_user()
        bytes_0 = b''
        module_0.path_absent(bytes_0)
    except BaseException:
        pass

def test_case_11():
    try:
        struct_group_0 = module_0.get_os_group()
        str_0 = '/.kFhuR7E`3c#'
        generator_0 = module_0.find_paths(str_0)
        module_0.chmod(str_0)
        path_0 = module_0.directory_present(str_0)
        path_1 = module_0.normalize_path(str_0)
        module_0.path_absent(str_0)
        path_2 = module_0.directory_present(str_0)
        str_1 = module_0.exists_as(str_0)
        generator_1 = module_0.find_paths(str_0)
        int_0 = -700
        struct_group_1 = module_0.get_os_group(int_0)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = '~'
        str_1 = module_0.exists_as(str_0)
        str_2 = '/dev/null'
        str_3 = module_0.exists_as(str_2)
        str_4 = ''
        str_5 = module_0.exists_as(str_4)
    except BaseException:
        pass

def test_case_13():
    try:
        struct_group_0 = module_0.get_os_group()
        str_0 = '/.kFRhuR7E`3\tc#'
        module_0.chmod(str_0)
        path_0 = module_0.directory_present(str_0)
    except BaseException:
        pass

def test_case_14():
    try:
        str_0 = '/.kFRhuR7E`3\tc#'
        module_0.chmod(str_0)
        module_0.path_absent(str_0)
        path_0 = module_0.normalize_path(str_0)
        module_0.path_absent(str_0)
        path_1 = module_0.directory_present(str_0)
        bool_0 = False
        module_0.chown(str_0, bool_0)
        int_0 = 80
        str_1 = None
        generator_0 = module_0.find_paths(str_1)
        path_2 = module_0.directory_present(str_0, int_0, str_0)
    except BaseException:
        pass

def test_case_15():
    try:
        str_0 = 'f90*@3GuT,['
        list_0 = None
        tuple_0 = (str_0, list_0)
        struct_passwd_0 = module_0.get_os_user(tuple_0)
    except BaseException:
        pass

def test_case_16():
    try:
        str_0 = '~/tmp/*'
        generator_0 = module_0.find_paths(str_0)
        generator_1 = module_0.find_paths(str_0)
        var_0 = list(generator_1)
        var_1 = len(generator_0)
    except BaseException:
        pass

def test_case_17():
    try:
        str_0 = '~/tmp/flutils.tests.pathutils.directory_present'
        int_0 = 488
        module_0.path_absent(str_0)
        str_1 = '-1'
        module_0.chmod(str_0, int_0)
        module_0.chown(str_0, str_1)
        path_0 = module_0.directory_present(str_0, str_0)
    except BaseException:
        pass

def test_case_18():
    try:
        str_0 = '/.kFRhuR7E`$3|\tc#'
        module_0.chmod(str_0)
        str_1 = module_0.exists_as(str_0)
        path_0 = module_0.normalize_path(str_0)
        module_0.path_absent(str_0)
        module_0.path_absent(str_0)
        path_1 = module_0.normalize_path(str_0)
        bytes_0 = b'\xa8\x03dD\x158\xd3\xb1f\xd3\xa3\xf6\x85W\xee'
        module_0.chmod(str_0, bytes_0)
        int_0 = -697
        str_2 = '/'
        path_2 = module_0.directory_present(str_2)
        bool_0 = False
        module_0.chown(str_2, bool_0)
        var_0 = path_2.__str__()
        path_3 = module_0.directory_present(str_0, int_0, str_2, str_2)
    except BaseException:
        pass