# Automatically generated by Pynguin.
import ansible.modules.iptables as module_0

def test_case_0():
    try:
        tuple_0 = None
        list_0 = []
        var_0 = module_0.get_chain_policy(tuple_0, list_0, tuple_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '"=L{hsQF'
        tuple_0 = ()
        var_0 = module_0.push_arguments(str_0, tuple_0, tuple_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = None
        bool_0 = True
        dict_0 = {bool_0: bool_0}
        var_0 = module_0.append_tcp_flags(bytes_0, bool_0, dict_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'\xc9\x92\xe6\x1c\xd9\x84\xf8m\x81\x1f'
        bool_0 = False
        str_0 = 'P*IYJ9'
        var_0 = module_0.append_csv(bytes_0, bool_0, str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        bool_0 = False
        bool_1 = False
        str_0 = 'ansible_'
        bytes_0 = b"\xeec\x1d'\x0bPR\xd5\x00C\x17v\xd0O\x1a"
        int_0 = 80
        dict_0 = {str_0: bool_1, bool_0: int_0, int_0: bool_0}
        tuple_0 = (bytes_0, bytes_0, int_0, dict_0)
        var_0 = module_0.append_csv(tuple_0, int_0, bytes_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'W5yB/|<Kc5VV'
        str_1 = 'O'
        bytes_0 = b'U\x9c\xee\xc8nP\x1d\x19\xa4\x11f\x83\xae\xff\xbd\xd5\xaf\xd98'
        var_0 = module_0.append_match(str_0, str_1, bytes_0)
    except BaseException:
        pass

def test_case_6():
    try:
        bytes_0 = b'U\x9c\xee\xc8nP\x1d\x19\xa4\x11f\x83\xae\xff\xbd\xd5\xaf\xd98'
        str_0 = 'Z'
        var_0 = module_0.append_jump(str_0, bytes_0, bytes_0)
    except BaseException:
        pass

def test_case_7():
    try:
        float_0 = -4580.26833
        bytes_0 = b'\x91\xdd\xa5\xeb|#G'
        var_0 = module_0.append_wait(float_0, bytes_0, float_0)
    except BaseException:
        pass

def test_case_8():
    try:
        tuple_0 = ()
        var_0 = module_0.construct_rule(tuple_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = None
        str_1 = '1ej)IT\x0cbSw0Bl]\x0bJx'
        list_0 = [str_0, str_0, str_1]
        var_0 = module_0.check_present(str_0, str_1, list_0)
    except BaseException:
        pass

def test_case_10():
    try:
        int_0 = 524
        bytes_0 = b'\x16\xd4"\xcf\xef4\x08\xda?)[\xda\xcd'
        set_0 = {int_0, int_0, int_0}
        var_0 = module_0.append_rule(int_0, bytes_0, set_0)
    except BaseException:
        pass

def test_case_11():
    try:
        float_0 = 2521.05167
        list_0 = None
        int_0 = 95
        str_0 = 'i\x0c*>2"\t>J,:?[}DP?,'
        dict_0 = {list_0: str_0, int_0: float_0}
        str_1 = "o:+*;(&4;&'tGJ"
        var_0 = module_0.remove_rule(str_0, dict_0, str_1)
    except BaseException:
        pass

def test_case_12():
    try:
        int_0 = -3209
        bytes_0 = b'i\xbeL\xbb\x1e\xa9\xa51x\xb1\xa4\xb2\x1b'
        str_0 = 'ID_FS_UUID=(.*)\n'
        var_0 = module_0.flush_table(int_0, bytes_0, str_0)
    except BaseException:
        pass

def test_case_13():
    try:
        int_0 = 595
        str_0 = 'Added integration for %s %s/%s'
        bool_0 = True
        str_1 = '#\nxU2.y\\FA9};N`2?7z\t'
        list_0 = [int_0, str_0, bool_0]
        var_0 = module_0.set_chain_policy(int_0, str_1, list_0)
    except BaseException:
        pass

def test_case_14():
    try:
        set_0 = set()
        bytes_0 = b'}i\xad\x1d\x8a\x88x\x83\xe2\xa2\x8d\xa7\\1\xb3+\x13\xf1'
        var_0 = module_0.get_iptables_version(set_0, bytes_0)
    except BaseException:
        pass

def test_case_15():
    try:
    except BaseException:
        pass

def test_case_16():
    try:
        complex_0 = None
        int_0 = 656000
        float_0 = 3582.0
        str_0 = '8A\r'
        var_0 = module_0.append_param(complex_0, int_0, float_0, str_0)
    except BaseException:
        pass

def test_case_17():
    try:
        bool_0 = False
        str_0 = 'ansible.modules.iptables'
        str_1 = '10=a{V\ru>o9'
        list_0 = None
        tuple_0 = (list_0,)
        str_2 = "Q\x0cd+WP'$+IgZ}6%~J"
        tuple_1 = (tuple_0, str_2)
        str_3 = 'cfacter'
        tuple_2 = (tuple_1, str_3, list_0)
        int_0 = 493
        var_0 = module_0.append_tcp_flags(str_1, tuple_2, int_0)
        bytes_0 = b'\xbe:\xa5\xe4\xf9\xc8\xbd\xbfL\x985'
        tuple_3 = (bool_0, str_0, bytes_0)
        set_0 = {tuple_3}
        str_4 = '*$!WU.M'
        var_1 = module_0.append_jump(tuple_3, set_0, str_4)
    except BaseException:
        pass

def test_case_18():
    try:
        dict_0 = None
        int_0 = 200
        list_0 = None
        var_0 = module_0.append_wait(int_0, list_0, list_0)
        str_0 = '?5bnalg\t:pe3/'
        set_0 = {dict_0, str_0, dict_0}
        var_1 = module_0.construct_rule(set_0)
    except BaseException:
        pass

def test_case_19():
    try:
        complex_0 = None
        bool_0 = True
        bytes_0 = b'\x7f1_\xc8k\xde{'
        var_0 = module_0.insert_rule(complex_0, bool_0, bytes_0)
    except BaseException:
        pass

def test_case_20():
    try:
        set_0 = set()
        list_0 = []
        bytes_0 = b'\xa8'
        var_0 = module_0.append_match(set_0, list_0, bytes_0)
        bytes_1 = b'\x9bdI\xb6\xefD^(\xf7'
        int_0 = -594
        var_1 = module_0.append_wait(set_0, bytes_1, int_0)
    except BaseException:
        pass

def test_case_21():
    try:
        float_0 = 1696.36
        bool_0 = False
        int_0 = None
        set_0 = {int_0, bool_0, int_0, float_0}
        var_0 = module_0.append_jump(bool_0, int_0, set_0)
        str_0 = '}'
        var_1 = module_0.append_wait(set_0, float_0, str_0)
    except BaseException:
        pass