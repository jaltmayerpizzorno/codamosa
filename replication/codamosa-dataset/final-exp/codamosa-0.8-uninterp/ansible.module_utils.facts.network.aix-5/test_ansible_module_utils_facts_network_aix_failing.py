# Automatically generated by Pynguin.
import ansible.module_utils.facts.network.aix as module_0

def test_case_0():
    try:
        str_0 = 'N`\r_d<Y['
        bytes_0 = b'\xa1\xdfV\xa0\xd3\xaf\x05\x8c\x83\xdd\xe5\xb8h8\xcaqq\r\xad'
        a_i_x_network_0 = module_0.AIXNetwork(bytes_0)
        var_0 = a_i_x_network_0.get_default_interfaces(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'sending connection stop: %s'
        tuple_0 = (str_0,)
        a_i_x_network_0 = module_0.AIXNetwork(tuple_0)
        var_0 = a_i_x_network_0.get_interfaces_info(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        a_i_x_network_collector_0 = module_0.AIXNetworkCollector()
        list_0 = [a_i_x_network_collector_0, a_i_x_network_collector_0, a_i_x_network_collector_0]
        bytes_0 = b'\x90\xfb\xd3\x10\x856X\x04%X\xcd:t\xf4\xb1\xeeN\xd2'
        a_i_x_network_0 = module_0.AIXNetwork(bytes_0)
        var_0 = a_i_x_network_0.parse_interface_line(list_0)
    except BaseException:
        pass

def test_case_3():
    try:
        float_0 = None
        bytes_0 = b'\x1a\xab\xbf\xc1\xc7\xc2\xb5\xf2\xc6\xe0\xeb\x15\xd6\xd9\xfa\x92p'
        tuple_0 = (float_0, bytes_0)
        list_0 = [tuple_0, tuple_0, float_0]
        int_0 = 756
        str_0 = 'Zr,Oqs:\n(C^n]Q"'
        list_1 = [str_0, str_0, int_0]
        a_i_x_network_0 = module_0.AIXNetwork(int_0, list_1)
        var_0 = a_i_x_network_0.parse_interface_line(list_0)
    except BaseException:
        pass

def test_case_4():
    try:
        float_0 = -496.51
        a_i_x_network_0 = module_0.AIXNetwork(float_0)
        str_0 = 'X\\6'
        var_0 = a_i_x_network_0.parse_interface_line(str_0)
        str_1 = '('
        a_i_x_network_1 = module_0.AIXNetwork(str_1)
        var_1 = a_i_x_network_1.parse_interface_line(a_i_x_network_0)
    except BaseException:
        pass