# Automatically generated by Pynguin.
import ansible.module_utils.facts.hardware.aix as module_0

def test_case_0():
    try:
        str_0 = '<'
        set_0 = {str_0, str_0}
        a_i_x_hardware_0 = module_0.AIXHardware(set_0)
        var_0 = a_i_x_hardware_0.populate()
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'A#k@D:j'
        a_i_x_hardware_0 = module_0.AIXHardware(str_0)
        var_0 = a_i_x_hardware_0.get_memory_facts()
    except BaseException:
        pass

def test_case_2():
    try:
        a_i_x_hardware_collector_0 = module_0.AIXHardwareCollector()
        str_0 = 'EuZ"KkZm@=}[A_6'
        a_i_x_hardware_0 = module_0.AIXHardware(str_0)
        var_0 = a_i_x_hardware_0.get_dmi_facts()
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'C[4}-5Nc|0K#$U~L'
        float_0 = 1542.54339
        set_0 = {str_0, float_0, str_0, str_0}
        bytes_0 = b'v\xcb\xb1\x0b@\xde\x19\xb8*\xad\xf3'
        tuple_0 = (str_0, float_0, set_0, bytes_0)
        a_i_x_hardware_0 = module_0.AIXHardware(tuple_0, tuple_0)
        var_0 = a_i_x_hardware_0.get_vgs_facts()
    except BaseException:
        pass

def test_case_4():
    try:
        a_i_x_hardware_collector_0 = module_0.AIXHardwareCollector()
        a_i_x_hardware_0 = module_0.AIXHardware(a_i_x_hardware_collector_0)
        a_i_x_hardware_1 = module_0.AIXHardware(a_i_x_hardware_0)
        var_0 = a_i_x_hardware_1.get_mount_facts()
    except BaseException:
        pass

def test_case_5():
    try:
        a_i_x_hardware_collector_0 = module_0.AIXHardwareCollector()
        bytes_0 = b'\xd6'
        a_i_x_hardware_0 = module_0.AIXHardware(a_i_x_hardware_collector_0, bytes_0)
        set_0 = {a_i_x_hardware_0, a_i_x_hardware_0, bytes_0, bytes_0}
        a_i_x_hardware_1 = module_0.AIXHardware(set_0)
        var_0 = a_i_x_hardware_1.get_device_facts()
    except BaseException:
        pass