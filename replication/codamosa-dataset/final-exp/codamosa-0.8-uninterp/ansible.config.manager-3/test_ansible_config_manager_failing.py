# Automatically generated by Pynguin.
import ansible.config.manager as module_0

def test_case_0():
    try:
        str_0 = ';iCx:n%EQ>lu7\t^'
        int_0 = -560
        bool_0 = True
        config_manager_0 = module_0.ConfigManager()
        var_0 = config_manager_0.get_config_value_and_origin(str_0, int_0, bool_0)
    except BaseException:
        pass

def test_case_1():
    try:
        list_0 = None
        tuple_0 = ()
        config_manager_0 = module_0.ConfigManager(list_0, tuple_0)
        list_1 = [config_manager_0, config_manager_0, tuple_0]
        list_2 = [list_1, config_manager_0, tuple_0]
        setting_0 = module_0.Setting(*list_2)
    except BaseException:
        pass

def test_case_2():
    try:
        float_0 = -1174.0
        config_manager_0 = module_0.ConfigManager(float_0)
    except BaseException:
        pass

def test_case_3():
    try:
        config_manager_0 = module_0.ConfigManager()
        bytes_0 = b''
        config_manager_1 = module_0.ConfigManager(bytes_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'y'
        str_1 = '0\n+f!\x0b-St]1#2/+<'
        var_0 = module_0.get_ini_config_value(str_0, str_1)
        int_0 = -3103
        config_manager_0 = module_0.ConfigManager()
        tuple_0 = ()
        dict_0 = {}
        var_1 = config_manager_0.initialize_plugin_configuration_definitions(tuple_0, str_1, dict_0)
        float_0 = -1252.895
        var_2 = config_manager_0.get_plugin_options(dict_0, config_manager_0, int_0, float_0)
    except BaseException:
        pass

def test_case_5():
    try:
        config_manager_0 = module_0.ConfigManager()
        bytes_0 = b'\xa6\x16rx\xe2\xff\xdf\xea\x16\x8c\xaf\x8br\xcbHf\x01'
        var_0 = config_manager_0.update_config_data()
        int_0 = -2284
        dict_0 = None
        var_1 = config_manager_0.get_configuration_definition(bytes_0, int_0, dict_0)
        str_0 = 'Bearer'
        dict_1 = {str_0: var_1, str_0: int_0}
        setting_0 = module_0.Setting(**dict_1)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'Hyl'
        config_manager_0 = module_0.ConfigManager()
        var_0 = config_manager_0.get_configuration_definition(str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = '$\r9{[L"\n6>qp]@.&'
        bytes_0 = b'\xe86\\~\x96\xa0U4\x00\xe2PV\xbe7zg\xf9'
        config_manager_0 = module_0.ConfigManager()
        set_0 = set()
        list_0 = [bytes_0, set_0]
        tuple_0 = (bytes_0, config_manager_0, list_0)
        dict_0 = {str_0: tuple_0, str_0: set_0}
        config_manager_1 = module_0.ConfigManager()
        var_0 = config_manager_1.get_config_value(dict_0, dict_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = '0\n+f!\x0b-St]1#2\x0b/C\t+<'
        config_manager_0 = module_0.ConfigManager()
        config_manager_1 = module_0.ConfigManager(str_0, config_manager_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'y'
        str_1 = '0\n+f!\x0b-St]1#2\x0b/C\t+<'
        var_0 = module_0.get_ini_config_value(str_0, str_1)
        config_manager_0 = module_0.ConfigManager()
        float_0 = None
        tuple_0 = ()
        var_1 = config_manager_0.get_configuration_definition(tuple_0)
        dict_0 = {str_0: float_0, str_1: config_manager_0, str_1: str_1}
        var_2 = config_manager_0.update_config_data(dict_0)
    except BaseException:
        pass

def test_case_10():
    try:
        config_manager_0 = module_0.ConfigManager()
        float_0 = -503.7034
        var_0 = config_manager_0.update_config_data(config_manager_0, float_0)
    except BaseException:
        pass

def test_case_11():
    try:
        config_manager_0 = module_0.ConfigManager()
        var_0 = module_0.find_ini_config_file()
        var_1 = config_manager_0.get_configuration_definitions()
        var_2 = config_manager_0.update_config_data()
        config_manager_1 = module_0.ConfigManager()
        var_3 = config_manager_1.get_configuration_definition(config_manager_0)
        plugin_0 = None
        var_4 = config_manager_1.get_config_value_and_origin(plugin_0)
    except BaseException:
        pass

def test_case_12():
    try:
        config_manager_0 = None
        dict_0 = {}
        var_0 = module_0.get_ini_config_value(config_manager_0, dict_0)
        list_0 = []
        var_1 = config_manager_0.get_configuration_definition(list_0)
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = '0\n+f!\x0b-St]1#2\x0b/C\t+<'
        var_0 = module_0.get_ini_config_value(str_0, str_0)
        config_manager_0 = module_0.ConfigManager()
        float_0 = None
        tuple_0 = ()
        bytes_0 = None
        var_1 = config_manager_0.get_plugin_vars(float_0, bytes_0)
        dict_0 = {}
        var_2 = config_manager_0.initialize_plugin_configuration_definitions(tuple_0, str_0, dict_0)
        dict_1 = {}
        var_3 = config_manager_0.get_config_value(config_manager_0, dict_1, config_manager_0)
    except BaseException:
        pass

def test_case_14():
    try:
        str_0 = 'y'
        str_1 = '0\n+f!\x0b-St]1#2\x0b/C\t+<'
        var_0 = module_0.get_ini_config_value(str_0, str_1)
        int_0 = -3103
        config_manager_0 = module_0.ConfigManager()
        float_0 = None
        tuple_0 = ()
        str_2 = '6N..LW3h#6}]$dv\\$"A4'
        bytes_0 = None
        var_1 = config_manager_0.get_plugin_vars(float_0, bytes_0)
        dict_0 = {}
        var_2 = config_manager_0.initialize_plugin_configuration_definitions(tuple_0, str_2, dict_0)
        dict_1 = {var_0: str_0, float_0: config_manager_0}
        bool_0 = True
        tuple_1 = (int_0, bool_0)
        var_3 = config_manager_0.initialize_plugin_configuration_definitions(tuple_0, tuple_1, dict_1)
        setting_0 = module_0.Setting()
    except BaseException:
        pass

def test_case_15():
    try:
        str_0 = 'y'
        var_0 = module_0.get_ini_config_value(str_0, str_0)
        config_manager_0 = module_0.ConfigManager()
        tuple_0 = ()
        dict_0 = {}
        var_1 = config_manager_0.initialize_plugin_configuration_definitions(tuple_0, str_0, dict_0)
        list_0 = None
        str_1 = '\x0b0h%\rf4He'
        str_2 = 'float'
        var_2 = config_manager_0.get_config_value(list_0, str_1, str_2, config_manager_0)
    except BaseException:
        pass

def test_case_16():
    try:
        str_0 = 'FlQ'
        set_0 = set()
        config_manager_0 = module_0.ConfigManager()
        var_0 = config_manager_0.get_configuration_definition(str_0, set_0, set_0)
    except BaseException:
        pass

def test_case_17():
    try:
        str_0 = '/etc/ansible/ansible.cfg'
        var_0 = module_0.get_config_type(str_0)
        str_1 = '43X\ruzS 9'
        var_1 = module_0.get_config_type(str_1)
    except BaseException:
        pass