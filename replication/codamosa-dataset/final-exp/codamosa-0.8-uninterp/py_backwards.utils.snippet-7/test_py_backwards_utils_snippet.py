# Automatically generated by Pynguin.
import typed_ast._ast3 as module_0
import py_backwards.utils.snippet as module_1
import typed_ast.ast3 as module_2

def test_case_0():
    pass

def test_case_1():
    a_s_t_0 = module_0.AST()
    iterable_0 = module_1.find_variables(a_s_t_0)

def test_case_2():
    str_0 = None
    dict_0 = {str_0: str_0}
    variables_replacer_0 = module_1.VariablesReplacer(dict_0)

def test_case_3():
    arg_0 = module_0.arg()
    str_0 = '5tne0'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    variables_replacer_0 = module_1.VariablesReplacer(dict_0)
    arg_1 = variables_replacer_0.visit_arg(arg_0)

def test_case_4():
    a_s_t_0 = module_0.AST()
    str_0 = 'id'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: a_s_t_0}
    module_1.extend_tree(a_s_t_0, dict_0)
    variables_replacer_0 = module_1.VariablesReplacer(dict_0)
    str_1 = '\ntest = let(test)\ntest()\ntest1 , let(test1)\ntest2 = test1\n\ntest3 = let(test3)\ntest3()\n'
    list_0 = [str_0, str_0]
    alias_0 = module_0.alias(*list_0)
    variables_replacer_1 = module_1.VariablesReplacer(dict_0)
    alias_1 = variables_replacer_1.visit_alias(alias_0)
    var_0 = module_2.parse(str_1)
    iterable_0 = module_1.find_variables(var_0)
    dict_1 = {str_1: str_1}
    variables_replacer_2 = module_1.VariablesReplacer(dict_1)

def test_case_5():
    a_s_t_0 = module_0.AST()
    str_0 = 'id'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: a_s_t_0}
    module_1.extend_tree(a_s_t_0, dict_0)
    str_1 = '\ntest = let(test)\ntest()\ntest1 = let(test1)\ntest2 = test1\n\ntest3 = let(test3)\ntest3()\n'
    var_0 = module_2.parse(str_1)
    iterable_0 = module_1.find_variables(var_0)
    var_1 = set(iterable_0)
    dict_1 = {str_1: str_1}
    variables_replacer_0 = module_1.VariablesReplacer(dict_1)
    name_0 = module_0.Name()
    name_1 = variables_replacer_0.visit_Name(name_0)
    iterable_1 = module_1.find_variables(a_s_t_0)

def test_case_6():
    keyword_0 = module_0.keyword()
    dict_0 = {}
    variables_replacer_0 = module_1.VariablesReplacer(dict_0)
    keyword_1 = variables_replacer_0.visit_keyword(keyword_0)
    dict_1 = {}
    variables_replacer_1 = module_1.VariablesReplacer(dict_1)
    keyword_2 = variables_replacer_1.visit_keyword(keyword_1)

def test_case_7():
    str_0 = 'from math import pi'
    int_0 = 0
    var_0 = module_2.parse(str_0)
    var_1 = var_0.body[int_0]
    str_1 = 'pi'
    str_2 = {str_1: str_1}
    variables_replacer_0 = module_1.VariablesReplacer(str_2)
    var_2 = var_1.names[int_0]
    alias_0 = variables_replacer_0.visit_alias(var_2)

def test_case_8():
    except_handler_0 = module_0.ExceptHandler()
    str_0 = "edrCj8'h\x0c}xuQV"
    str_1 = 'nkb,\tJjt\t0dQ7'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_1: str_1}
    variables_replacer_0 = module_1.VariablesReplacer(dict_0)
    except_handler_1 = variables_replacer_0.visit_ExceptHandler(except_handler_0)
    list_0 = [except_handler_1, str_1]
    module_1.let(list_0)

def test_case_9():
    a_s_t_0 = module_0.AST()
    dict_0 = None
    module_1.extend_tree(a_s_t_0, dict_0)

def test_case_10():
    dict_0 = {}
    tuple_0 = (dict_0,)
    snippet_0 = module_1.snippet(tuple_0)

def test_case_11():
    str_0 = 'FBiZIN%4-\x0c,SvwWcfm'
    str_1 = '1XdcghEPy}'
    a_s_t_0 = module_0.AST()
    str_2 = 'id'
    dict_0 = {str_1: str_1, str_1: str_1, str_2: str_1, str_2: a_s_t_0}
    module_1.extend_tree(a_s_t_0, dict_0)
    dict_1 = {str_0: str_0, str_1: str_2, str_2: str_1, str_2: str_1}
    variables_replacer_0 = module_1.VariablesReplacer(dict_1)
    str_3 = '\ntest = let(test)\ntest()\ntest1 = let(test1)\ntest2 = test1\n\ntest3 = let(test3)\ntest3()\n'
    list_0 = [str_0, str_1]
    alias_0 = module_0.alias(*list_0)
    variables_replacer_1 = module_1.VariablesReplacer(dict_0)
    alias_1 = variables_replacer_1.visit_alias(alias_0)
    var_0 = module_2.parse(str_3)
    iterable_0 = module_1.find_variables(var_0)
    dict_2 = {str_3: str_3}
    variables_replacer_2 = module_1.VariablesReplacer(dict_2)
    name_0 = module_0.Name()
    iterable_1 = module_1.find_variables(a_s_t_0)

def test_case_12():
    str_0 = '\ntJst = let(test)\ntest()\ntest1 = let(test1)\ntest2 = teyt1\n\ntest3 = let(tesO3)\ntest3()\n'
    var_0 = module_2.parse(str_0)
    iterable_0 = module_1.find_variables(var_0)