# Automatically generated by Pynguin.
import ansible.module_utils.facts.system.service_mgr as module_0

def test_case_0():
    try:
        list_0 = []
        service_mgr_fact_collector_0 = module_0.ServiceMgrFactCollector()
        var_0 = service_mgr_fact_collector_0.is_systemd_managed(list_0)
    except BaseException:
        pass

def test_case_1():
    try:
        service_mgr_fact_collector_0 = module_0.ServiceMgrFactCollector()
        dict_0 = {}
        var_0 = service_mgr_fact_collector_0.is_systemd_managed_offline(dict_0)
    except BaseException:
        pass

def test_case_2():
    try:
        service_mgr_fact_collector_0 = module_0.ServiceMgrFactCollector()
        var_0 = service_mgr_fact_collector_0.collect(service_mgr_fact_collector_0, service_mgr_fact_collector_0)
    except BaseException:
        pass

def test_case_3():
    try:
        service_mgr_fact_collector_0 = module_0.ServiceMgrFactCollector()
        bool_0 = False
        var_0 = service_mgr_fact_collector_0.collect(bool_0)
        int_0 = -574
        var_1 = service_mgr_fact_collector_0.is_systemd_managed(int_0)
    except BaseException:
        pass

def test_case_4():
    try:
        service_mgr_fact_collector_0 = module_0.ServiceMgrFactCollector()
        str_0 = 'ansible_distribution'
        str_1 = 'ansible_system'
        str_2 = {str_0: str_0, str_1: str_1}
        var_0 = service_mgr_fact_collector_0.collect(str_2, str_2)
        str_3 = 'MacOSX'
        str_4 = {str_0: str_3, str_1: str_3}
        var_1 = service_mgr_fact_collector_0.collect(str_4, str_4)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'ansible_system'
        str_1 = 'Linux'
        str_2 = {str_0: str_1, str_0: str_1}
        service_mgr_fact_collector_0 = module_0.ServiceMgrFactCollector()
        var_0 = service_mgr_fact_collector_0.collect(str_1, str_2)
    except BaseException:
        pass