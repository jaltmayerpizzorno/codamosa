# Automatically generated by Pynguin.
import typesystem.base as module_0

def test_case_0():
    validation_result_0 = module_0.ValidationResult()

def test_case_1():
    int_0 = -1678
    int_1 = 2
    position_0 = module_0.Position(int_0, int_0, int_1)

def test_case_2():
    str_0 = 'max_length'
    int_0 = 1
    position_0 = module_0.Position(int_0, int_0, int_0)
    message_0 = module_0.Message(text=str_0, code=str_0, position=position_0)
    bool_0 = message_0.__eq__(message_0)

def test_case_3():
    int_0 = 3536
    position_0 = module_0.Position(int_0, int_0, int_0)
    int_1 = -3880
    position_1 = module_0.Position(int_1, int_1, int_1)
    bool_0 = position_1.__eq__(position_1)
    str_0 = position_1.__repr__()

def test_case_4():
    str_0 = "\\ r@<tHjahr'V~\n"
    parse_error_0 = module_0.ParseError(text=str_0, code=str_0, key=str_0)

def test_case_5():
    str_0 = 'vZ1F,'
    base_error_0 = module_0.BaseError(text=str_0, code=str_0, position=str_0)
    bool_0 = base_error_0.__eq__(str_0)

def test_case_6():
    str_0 = "\\ r@<tHjahr'V~\n"
    parse_error_0 = module_0.ParseError(text=str_0, code=str_0)

def test_case_7():
    str_0 = 'FZ) >\rvL\tpuRuF2ztT?'
    message_0 = module_0.Message(text=str_0, code=str_0)
    bool_0 = message_0.__eq__(message_0)

def test_case_8():
    str_0 = 'V}&w?Tn6"W0y)31"'
    list_0 = []
    message_0 = module_0.Message(text=str_0, code=str_0, index=list_0)
    int_0 = message_0.__hash__()
    int_1 = -1157
    int_2 = -1136
    position_0 = module_0.Position(int_2, int_1, int_1)
    str_1 = position_0.__repr__()
    bool_0 = position_0.__eq__(position_0)
    bool_1 = position_0.__eq__(int_1)
    str_2 = position_0.__repr__()
    position_1 = module_0.Position(int_1, int_1, int_1)

def test_case_9():
    str_0 = '[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}'
    int_0 = 1670
    position_0 = module_0.Position(int_0, int_0, int_0)
    message_0 = module_0.Message(text=str_0, key=str_0, end_position=position_0)
    str_1 = 'hidden'
    float_0 = 1416.01061
    message_1 = module_0.Message(text=str_1, start_position=float_0)
    str_2 = message_1.__repr__()

def test_case_10():
    str_0 = '?'
    none_type_0 = None
    message_0 = module_0.Message(text=str_0, code=str_0, key=str_0, end_position=none_type_0)
    list_0 = [message_0]
    base_error_0 = module_0.BaseError(messages=list_0)
    int_0 = 39
    position_0 = module_0.Position(int_0, int_0, int_0)
    str_1 = position_0.__repr__()
    str_2 = base_error_0.__repr__()
    str_3 = 'IDhZ&I5Ig%x[O4D\t\\sF'
    list_1 = [str_3, str_3]
    message_1 = module_0.Message(text=str_3, index=list_1)
    int_1 = message_1.__hash__()

def test_case_11():
    str_0 = '\x0bSJ>u'
    int_0 = 6
    int_1 = 1489
    position_0 = module_0.Position(int_0, int_1, int_1)
    base_error_0 = module_0.BaseError(text=str_0, position=position_0)
    bool_0 = base_error_0.__eq__(position_0)
    list_0 = base_error_0.messages()

def test_case_12():
    str_0 = 'Error message'
    str_1 = 'test_code'
    base_error_0 = module_0.BaseError(text=str_0, code=str_1)
    var_0 = str(base_error_0)
    str_2 = 'Error message 1'
    str_3 = 'test_code_1'
    message_0 = module_0.Message(text=str_2, code=str_3)
    str_4 = 'Error message 2'
    str_5 = 'test_code_2'
    message_1 = module_0.Message(text=str_4, code=str_5)
    message_2 = [message_0, message_1]
    base_error_1 = module_0.BaseError(messages=message_2)
    var_1 = str(base_error_1)

def test_case_13():
    str_0 = 'Missing username'
    base_error_0 = module_0.BaseError(text=str_0)
    base_error_1 = module_0.BaseError(text=str_0)
    str_1 = 'missing_username'
    base_error_2 = module_0.BaseError(text=str_0, code=str_1)
    str_2 = 'username'
    base_error_3 = module_0.BaseError(text=str_0, key=str_2)
    str_3 = 'Missing password'
    bool_0 = base_error_0.__eq__(str_1)
    base_error_4 = module_0.BaseError(text=str_3, key=str_2)
    validation_result_0 = module_0.ValidationResult(value=base_error_2)
    int_0 = 1
    int_1 = base_error_0.__len__()
    position_0 = module_0.Position(int_0, int_0, int_0)

def test_case_14():
    str_0 = 'custom'
    base_error_0 = module_0.BaseError(text=str_0, code=str_0, key=str_0)
    bool_0 = base_error_0.__eq__(base_error_0)

def test_case_15():
    str_0 = 'c,3_XjN04nQw3'
    validation_result_0 = module_0.ValidationResult()
    iterator_0 = validation_result_0.__iter__()
    base_error_0 = module_0.BaseError(text=str_0)
    str_1 = base_error_0.__repr__()

def test_case_16():
    str_0 = ':\tdq'
    base_error_0 = module_0.BaseError(text=str_0)
    bool_0 = base_error_0.__eq__(base_error_0)

def test_case_17():
    int_0 = 3
    position_0 = module_0.Position(int_0, int_0, int_0)
    str_0 = 'gjkmE\x0bF|u{xJpS6'
    message_0 = module_0.Message(text=str_0)
    bool_0 = message_0.__eq__(position_0)

def test_case_18():
    list_0 = []
    validation_result_0 = module_0.ValidationResult(value=list_0)
    iterator_0 = validation_result_0.__iter__()

def test_case_19():
    str_0 = '*s\\YGG~C\\'
    int_0 = 15
    base_error_0 = module_0.BaseError(text=str_0, key=int_0)
    str_1 = base_error_0.__repr__()
    int_1 = base_error_0.__hash__()
    int_2 = -1657
    int_3 = base_error_0.__hash__()
    str_2 = "uO$J)\\4D\x0bA/C&'b"
    message_0 = module_0.Message(text=str_2)
    bool_0 = message_0.__eq__(int_1)
    parse_error_0 = module_0.ParseError(text=str_1, key=int_0, position=bool_0)
    position_0 = module_0.Position(int_0, int_2, int_0)
    bool_1 = position_0.__eq__(position_0)
    message_1 = module_0.Message(text=str_0, index=str_0, end_position=position_0)
    bool_2 = message_1.__eq__(int_0)
    str_3 = base_error_0.__str__()
    iterator_0 = base_error_0.__iter__()
    float_0 = -819.7674
    list_0 = [message_0, message_0]
    tuple_0 = (iterator_0, float_0, list_0)
    validation_result_0 = module_0.ValidationResult(value=tuple_0)
    str_4 = validation_result_0.__repr__()
    int_4 = 5
    position_1 = module_0.Position(int_1, int_2, int_4)
    str_5 = base_error_0.__str__()
    validation_result_1 = module_0.ValidationResult(value=tuple_0)
    validation_error_0 = module_0.ValidationError(messages=list_0)
    validation_result_2 = module_0.ValidationResult(error=validation_error_0)
    str_6 = validation_result_2.__repr__()

def test_case_20():
    int_0 = None
    none_type_0 = None
    str_0 = 'E\r"A9o)AF,1)hF'
    none_type_1 = None
    position_0 = module_0.Position(int_0, int_0, int_0)
    bool_0 = position_0.__eq__(int_0)
    message_0 = module_0.Message(text=str_0, code=str_0, key=int_0, index=str_0, start_position=str_0, end_position=none_type_1)
    list_0 = [message_0, message_0, message_0]
    base_error_0 = module_0.BaseError(text=none_type_0, messages=list_0)
    str_1 = '9-62G$&\t7C'
    base_error_1 = module_0.BaseError(text=str_1)
    str_2 = 'i\\G|L#.Ab$WV(}'
    message_1 = module_0.Message(text=str_2)
    int_1 = message_1.__hash__()
    bool_1 = base_error_1.__eq__(int_0)
    str_3 = message_1.__repr__()
    bool_2 = message_1.__eq__(bool_1)
    position_1 = module_0.Position(int_0, int_0, int_0)
    list_1 = base_error_1.messages()

def test_case_21():
    str_0 = '*s\\YGG~C\\'
    int_0 = 15
    base_error_0 = module_0.BaseError(text=str_0, key=int_0)
    str_1 = base_error_0.__repr__()
    bool_0 = base_error_0.__eq__(int_0)
    int_1 = -1681
    int_2 = base_error_0.__hash__()
    int_3 = base_error_0.__hash__()
    str_2 = "uO$J)\\4D\x0bA/C&'b"
    message_0 = module_0.Message(text=str_2)
    bool_1 = message_0.__eq__(int_2)
    parse_error_0 = module_0.ParseError(text=str_1, key=int_0, position=bool_1)
    int_4 = 1
    bool_2 = base_error_0.__eq__(int_4)
    position_0 = module_0.Position(int_0, int_1, int_0)
    bool_3 = position_0.__eq__(position_0)
    message_1 = module_0.Message(text=str_0, index=str_0, end_position=position_0)
    bool_4 = message_1.__eq__(int_0)
    str_3 = base_error_0.__str__()
    iterator_0 = base_error_0.__iter__()
    float_0 = -819.7674
    list_0 = [message_0, message_0]
    tuple_0 = (iterator_0, float_0, list_0)
    validation_result_0 = module_0.ValidationResult(value=tuple_0)
    str_4 = validation_result_0.__repr__()
    iterator_1 = base_error_0.__iter__()
    bool_5 = message_1.__eq__(bool_4)
    bool_6 = message_0.__eq__(message_1)
    int_5 = 1
    int_6 = 3155
    position_1 = module_0.Position(int_5, int_4, int_6)

def test_case_22():
    str_0 = 'Test'
    message_0 = module_0.Message(text=str_0)
    message_1 = module_0.Message(text=str_0)
    str_1 = 'custom'
    message_2 = module_0.Message(text=str_0, code=str_1)
    str_2 = 'users'
    str_3 = [str_2]
    message_3 = module_0.Message(text=str_0, index=str_3)
    int_0 = 1
    int_1 = 2
    int_2 = 3
    position_0 = module_0.Position(int_0, int_1, int_2)
    message_4 = module_0.Message(text=str_0, position=position_0)
    position_1 = module_0.Position(int_0, int_1, int_2)
    message_5 = module_0.Message(text=str_0, start_position=position_1)
    position_2 = module_0.Position(int_0, int_1, int_2)
    message_6 = module_0.Message(text=str_0, end_position=position_2)
    message_7 = module_0.Message(text=str_0)
    message_8 = module_0.Message(text=str_0, start_position=position_1)
    var_0 = message_7 == message_8
    message_9 = module_0.Message(text=str_0)
    str_4 = 'custom1'
    message_10 = module_0.Message(text=str_0, code=str_4)
    var_1 = message_9 == message_10
    message_11 = module_0.Message(text=str_0)
    str_5 = 'users1'
    str_6 = [str_5]
    message_12 = module_0.Message(text=str_0, index=str_6)
    var_2 = message_11 == message_12

def test_case_23():
    validation_result_0 = module_0.ValidationResult()
    var_0 = list(validation_result_0)
    str_0 = 'foo'
    validation_result_1 = module_0.ValidationResult(value=str_0)
    var_1 = list(validation_result_1)
    var_2 = list(validation_result_1)

def test_case_24():
    str_0 = '*s\\YGG~C\\'
    int_0 = 15
    base_error_0 = module_0.BaseError(text=str_0, key=int_0)
    list_0 = base_error_0.messages(add_prefix=int_0)
    str_1 = base_error_0.__repr__()
    int_1 = base_error_0.__hash__()
    int_2 = 1039
    bool_0 = base_error_0.__eq__(int_0)
    int_3 = -1657
    int_4 = base_error_0.__hash__()
    int_5 = base_error_0.__hash__()
    position_0 = module_0.Position(int_0, int_1, int_5)
    int_6 = -788
    int_7 = 2714
    position_1 = module_0.Position(int_6, int_2, int_7)
    bool_1 = position_1.__eq__(position_0)
    str_2 = '\nn.(Lc\r'
    message_0 = module_0.Message(text=str_2)
    bool_2 = message_0.__eq__(int_1)
    parse_error_0 = module_0.ParseError(text=str_1, key=int_0, position=bool_2)
    int_8 = 1
    bool_3 = base_error_0.__eq__(int_8)
    position_2 = module_0.Position(int_0, int_3, int_0)
    bool_4 = position_2.__eq__(position_2)
    message_1 = module_0.Message(text=str_0, index=str_0, end_position=position_2)
    str_3 = base_error_0.__str__()
    iterator_0 = base_error_0.__iter__()
    float_0 = -819.7674
    list_1 = [message_0, message_0]
    tuple_0 = (iterator_0, float_0, list_1)
    validation_result_0 = module_0.ValidationResult(value=tuple_0)
    str_4 = validation_result_0.__repr__()
    iterator_1 = base_error_0.__iter__()
    bool_5 = message_0.__eq__(message_0)
    validation_error_0 = module_0.ValidationError(text=str_1, position=position_1)
    bool_6 = base_error_0.__eq__(validation_error_0)