# Automatically generated by Pynguin.
import ansible.module_utils.common.parameters as module_0

def test_case_0():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    var_0 = module_0.remove_values(bool_0, list_0)

def test_case_1():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    var_0 = module_0.remove_values(bool_0, list_0)
    list_1 = [var_0, var_0, list_0]
    tuple_0 = ()
    var_1 = module_0.remove_values(list_1, tuple_0)

def test_case_2():
    dict_0 = {}
    list_0 = [dict_0, dict_0, dict_0, dict_0, dict_0, dict_0]
    set_0 = set()
    var_0 = module_0.remove_values(set_0, list_0)

def test_case_3():
    str_0 = '/dev/kvm'
    var_0 = module_0.remove_values(str_0, str_0)

def test_case_4():
    float_0 = 1211.12
    dict_0 = {}
    var_0 = module_0.remove_values(float_0, dict_0)

def test_case_5():
    str_0 = 'fi/'
    float_0 = -2001.7858322056543
    set_0 = {float_0}
    dict_0 = {str_0: float_0, str_0: str_0}
    var_0 = module_0.remove_values(set_0, dict_0)

def test_case_6():
    dict_0 = {}
    var_0 = module_0.sanitize_keys(dict_0, dict_0)
    str_0 = 'w\\:vfXq9g;(fA'
    list_0 = [var_0, dict_0]
    var_1 = module_0.remove_values(str_0, list_0)
    bool_0 = True
    list_1 = [dict_0, bool_0]
    str_1 = '+QpjY9 AmZ\\@78a7\r:}e'
    var_2 = module_0.remove_values(list_1, str_1)

def test_case_7():
    str_0 = 'files'
    str_1 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.sanitize_keys(str_1, str_1)

def test_case_8():
    float_0 = -2015.846269
    list_0 = []
    var_0 = module_0.sanitize_keys(float_0, list_0)

def test_case_9():
    str_0 = 'files'
    set_0 = {str_0}
    int_0 = 285
    list_0 = [int_0]
    var_0 = module_0.sanitize_keys(set_0, list_0)

def test_case_10():
    str_0 = 'fi\x0c'
    float_0 = -2035.5889130700546
    set_0 = {float_0}
    dict_0 = {str_0: float_0, float_0: float_0, str_0: str_0}
    var_0 = module_0.remove_values(set_0, dict_0)

def test_case_11():
    dict_0 = {}
    list_0 = [dict_0, dict_0, dict_0, dict_0]
    var_0 = module_0.remove_values(dict_0, list_0)

def test_case_12():
    list_0 = None
    str_0 = 'K%>Y%}H'
    var_0 = module_0.sanitize_keys(list_0, str_0)

def test_case_13():
    bytes_0 = b'*s\\'
    str_0 = 'n{oz6+|z u.1\x0b'
    var_0 = module_0.remove_values(bytes_0, str_0)

def test_case_14():
    str_0 = 'type'
    str_1 = 'D_L\x0b'
    bool_0 = True
    var_0 = {str_0: str_1, str_0: bool_0}
    var_1 = {str_1: var_0}
    var_2 = {}
    var_3 = module_0.set_fallbacks(var_1, var_2)

def test_case_15():
    str_0 = 'fils'
    str_1 = {str_0: str_0, str_0: str_0, str_0: str_0}
    list_0 = [str_1, str_0]
    int_0 = 4097
    list_1 = [list_0, int_0, str_0, str_0]
    var_0 = module_0.sanitize_keys(list_0, list_1)

def test_case_16():
    bytes_0 = b'\xdd\xa9I>5a\xb8'
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    str_0 = 'z/B#D&loG'
    set_0 = set()
    var_0 = module_0.remove_values(str_0, set_0)
    var_1 = module_0.remove_values(dict_0, dict_0)

def test_case_17():
    tuple_0 = ()
    str_0 = 'X3h`EL:pSs2\x0biK/#@)Gj'
    var_0 = module_0.sanitize_keys(tuple_0, str_0)
    str_1 = 'fi/'
    float_0 = -2000.9101899087445
    set_0 = {float_0}
    dict_0 = {str_1: float_0, float_0: float_0, str_1: str_1}
    var_1 = module_0.remove_values(set_0, dict_0)

def test_case_18():
    str_0 = 'foo'
    str_1 = 'type'
    str_2 = 'required'
    str_3 = 'str'
    bool_0 = True
    var_0 = {str_1: str_3, str_2: bool_0}
    var_1 = {str_0: var_0}
    str_4 = {str_0: str_0}
    var_2 = module_0.set_fallbacks(var_1, str_4)
    var_3 = {}
    var_4 = module_0.set_fallbacks(var_1, var_3)

def test_case_19():
    str_0 = 'top_secret'
    str_1 = 'password'
    str_2 = {str_0, str_1}
    str_3 = 'ansible_password'
    str_4 = {str_3}
    str_5 = 'my_pass'
    str_6 = {str_5: str_0, str_0: str_0, str_3: str_1}
    var_0 = module_0.sanitize_keys(str_6, str_2, str_4)
    str_7 = 'nested'
    str_8 = {str_3: str_1}
    str_9 = {str_0: str_0, str_7: str_8}
    var_1 = module_0.sanitize_keys(str_9, str_2, str_4)