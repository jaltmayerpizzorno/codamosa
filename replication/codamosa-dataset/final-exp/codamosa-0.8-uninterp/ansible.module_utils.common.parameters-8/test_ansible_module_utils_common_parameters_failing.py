# Automatically generated by Pynguin.
import ansible.module_utils.common.parameters as module_0

def test_case_0():
    try:
        var_0 = module_0.env_fallback()
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '772'
        list_0 = [str_0, str_0, str_0, str_0]
        var_0 = module_0.env_fallback(*list_0)
    except BaseException:
        pass

def test_case_2():
    try:
        list_0 = []
        str_0 = ' formats data to display debug info for plugin loading, also avoids processing unless really needed '
        var_0 = module_0.set_fallbacks(list_0, str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '.GQ'
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
        var_0 = module_0.set_fallbacks(dict_0, dict_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = ",'b\tEAqW_}"
        set_0 = {str_0, str_0, str_0, str_0}
        bool_0 = True
        str_1 = '3>_nbUkE'
        list_0 = []
        dict_0 = {str_1: list_0}
        tuple_0 = ()
        str_2 = '/'
        str_3 = ''
        tuple_1 = (tuple_0, dict_0, str_2, str_3)
        tuple_2 = (dict_0, str_0, tuple_1)
        bytes_0 = b''
        tuple_3 = (set_0, bool_0, tuple_2, bytes_0)
        var_0 = module_0.remove_values(tuple_3, dict_0)
        tuple_4 = None
        str_4 = '.[oT&+=E+CS+}A7UdI5'
        var_1 = module_0.set_fallbacks(tuple_4, str_4)
    except BaseException:
        pass

def test_case_5():
    try:
        var_0 = dict()
        str_0 = 'env_fallback'
        str_1 = [str_0]
        str_2 = (str_0, str_1)
        var_1 = dict(type=str_2, fallback=str_2)
        str_3 = 'S3_PREFIX'
        var_2 = dict(s3_bucket=var_1, s3_prefix=str_3)
        var_3 = module_0.set_fallbacks(var_2, var_0)
    except BaseException:
        pass