# Automatically generated by Pynguin.
import ansible.executor.task_result as module_0

def test_case_0():
    pass

def test_case_1():
    float_0 = 512.6634943634108
    str_0 = 'eh'
    int_0 = -4142
    dict_0 = {str_0: str_0, float_0: float_0, int_0: float_0}
    task_result_0 = module_0.TaskResult(str_0, int_0, dict_0)
    var_0 = task_result_0.is_changed()
    var_1 = task_result_0.needs_debugger(task_result_0)
    var_2 = task_result_0.is_unreachable()

def test_case_2():
    float_0 = -5330.871
    set_0 = set()
    complex_0 = None
    dict_0 = {complex_0: complex_0, complex_0: set_0}
    task_result_0 = module_0.TaskResult(set_0, dict_0, dict_0)
    var_0 = task_result_0.needs_debugger(float_0)

def test_case_3():
    bytes_0 = b'\xf5\xad\xb1I\xabB\x14\x03bR\x8b\x85'
    int_0 = 351
    str_0 = 'ZM<l'
    task_result_0 = module_0.TaskResult(bytes_0, int_0, str_0)
    var_0 = task_result_0.needs_debugger()

def test_case_4():
    var_0 = None
    str_0 = 'failed'
    bool_0 = False
    bool_1 = {str_0: bool_0}
    task_result_0 = module_0.TaskResult(var_0, var_0, bool_1)
    var_1 = task_result_0.is_failed()
    bool_2 = True
    bool_3 = {str_0: bool_2}
    task_result_1 = module_0.TaskResult(var_0, var_0, bool_3)
    var_2 = task_result_1.is_failed()
    str_1 = 'changed'
    bool_4 = {str_1: bool_0, str_0: bool_2}
    task_result_2 = module_0.TaskResult(var_0, var_0, bool_4)
    var_3 = task_result_2.is_failed()
    str_2 = 'results'
    var_4 = {}
    bool_5 = {str_0: bool_0}
    bool_6 = {str_0: bool_2}
    var_5 = [var_4, bool_5, bool_6]
    var_6 = {str_2: var_5}
    task_result_3 = module_0.TaskResult(var_0, var_0, var_6)
    var_7 = task_result_3.is_failed()
    var_8 = {}
    bool_7 = {str_0: bool_2}
    bool_8 = {str_0: bool_2}
    var_9 = [var_8, bool_7, bool_8]
    var_10 = {str_2: var_9}
    task_result_4 = module_0.TaskResult(var_0, var_0, var_10)
    var_11 = task_result_4.is_failed()
    var_12 = {}
    str_3 = 'failed_when_result'
    bool_9 = {str_3: bool_0}
    bool_10 = {str_3: bool_2}
    var_13 = [var_12, bool_9, bool_10]
    var_14 = {str_2: var_13}
    task_result_5 = module_0.TaskResult(var_0, var_0, var_14)
    var_15 = task_result_5.is_failed()

def test_case_5():
    var_0 = None
    str_0 = 'failed'
    bool_0 = False
    bool_1 = {str_0: bool_0}
    task_result_0 = module_0.TaskResult(var_0, var_0, bool_1)
    var_1 = task_result_0.is_failed()
    bool_2 = True
    bool_3 = {str_0: bool_2}
    task_result_1 = module_0.TaskResult(var_0, var_0, bool_3)
    var_2 = task_result_1.is_failed()
    str_1 = 'results'
    bool_4 = {str_1: bool_3}
    task_result_2 = module_0.TaskResult(var_0, var_0, bool_4)
    var_3 = task_result_2.is_failed()

def test_case_6():
    var_0 = None
    str_0 = 'faile+'
    bool_0 = True
    bool_1 = {str_0: bool_0}
    task_result_0 = module_0.TaskResult(var_0, var_0, bool_1)
    var_1 = task_result_0.is_failed()
    bool_2 = True
    bool_3 = {str_0: bool_2}
    task_result_1 = module_0.TaskResult(var_0, var_0, bool_3)
    var_2 = task_result_1.is_failed()
    str_1 = 'results'
    bool_4 = {str_0: bool_0}
    bool_5 = [bool_4]
    bool_6 = {str_1: bool_5}
    task_result_2 = module_0.TaskResult(var_0, var_0, bool_6)
    var_3 = task_result_2.is_failed()

def test_case_7():
    var_0 = None
    str_0 = 'failed'
    bool_0 = True
    bool_1 = {str_0: bool_0}
    bool_2 = True
    str_1 = 'changed'
    var_1 = {}
    bool_3 = {str_0: bool_2}
    var_2 = [var_1, bool_1, bool_3]
    var_3 = {str_0: var_2}
    task_result_0 = module_0.TaskResult(var_0, var_0, var_3)
    var_4 = task_result_0.is_failed()
    var_5 = task_result_0.needs_debugger(str_1)

def test_case_8():
    str_0 = 'results'
    str_1 = 'item'
    str_2 = 'skipped'
    str_3 = 'banana'
    bool_0 = True
    var_0 = {str_1: str_3, str_2: bool_0}
    str_4 = 'apple'
    var_1 = {str_1: str_4, str_2: bool_0}
    var_2 = [var_0, var_1]
    var_3 = {str_0: var_2}
    str_5 = 'myhost'
    str_6 = {str_5: str_2}
    task_result_0 = module_0.TaskResult(str_5, str_3, var_3, str_6)
    var_4 = task_result_0.is_skipped()

def test_case_9():
    str_0 = 'yum'
    str_1 = 'foo'
    str_2 = 'present'
    str_3 = 'enabled,foo'
    str_4 = 'disabled,bar,baz'
    str_5 = '/etc/yum.repos.d/bar.repo'
    var_0 = dict(name=str_1, state=str_2, enablerepo=str_3, disablerepo=str_4, conf_file=str_5)
    var_1 = dict(action=str_0, args=var_0)
    str_6 = 'localhost'
    str_7 = '22'
    str_8 = 'ssh'
    var_2 = dict(name=str_6, port=str_7, transport=str_8)
    str_9 = 'changed'
    str_10 = 'results'
    bool_0 = False
    str_11 = 'msg'
    str_12 = 'Package foo is already installed.'
    var_3 = {str_9: bool_0, str_11: str_12}
    var_4 = [var_3]
    var_5 = {str_9: bool_0, str_10: var_4}
    task_result_0 = module_0.TaskResult(var_2, var_1, var_5)
    var_6 = task_result_0.is_skipped()

def test_case_10():
    str_0 = 'name'
    str_1 = 'test'
    str_2 = {str_0: str_1}
    str_3 = 'debugger'
    str_4 = 'on_failed'
    str_5 = {str_0: str_1, str_3: str_4}
    str_6 = 'failed'
    str_7 = 'L4-\r'
    str_8 = {str_6: str_7}
    task_result_0 = module_0.TaskResult(str_2, str_8, str_8, str_5)
    var_0 = task_result_0.needs_debugger()