# Automatically generated by Pynguin.
import py_backwards.transformers.metaclass as module_0
import typed_ast._ast3 as module_1

def test_case_0():
    pass

def test_case_1():
    dict_0 = {}
    a_s_t_0 = None
    metaclass_transformer_0 = module_0.MetaclassTransformer(a_s_t_0)
    a_s_t_1 = module_1.AST(**dict_0)
    metaclass_transformer_1 = module_0.MetaclassTransformer(a_s_t_1)
    list_0 = [dict_0, metaclass_transformer_0, dict_0]
    class_def_0 = module_1.ClassDef(*list_0)
    class_def_1 = metaclass_transformer_0.visit_ClassDef(class_def_0)
    class_def_2 = metaclass_transformer_0.visit_ClassDef(class_def_1)
    metaclass_transformer_2 = module_0.MetaclassTransformer(a_s_t_1)

def test_case_2():
    int_0 = -1173
    list_0 = [int_0]
    list_1 = [list_0, list_0]
    module_x_var_0 = module_1.Module(*list_1)
    a_s_t_0 = module_1.AST()
    metaclass_transformer_0 = module_0.MetaclassTransformer(a_s_t_0)
    module_x_var_1 = metaclass_transformer_0.visit_Module(module_x_var_0)
    dict_0 = {}
    a_s_t_1 = module_1.AST(**dict_0)
    metaclass_transformer_1 = module_0.MetaclassTransformer(a_s_t_1)
    module_x_var_2 = metaclass_transformer_1.visit_Module(module_x_var_1)