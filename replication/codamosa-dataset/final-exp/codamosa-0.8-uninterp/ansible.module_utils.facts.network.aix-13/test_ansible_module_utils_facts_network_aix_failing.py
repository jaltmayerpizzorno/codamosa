# Automatically generated by Pynguin.
import ansible.module_utils.facts.network.aix as module_0

def test_case_0():
    try:
        int_0 = 32602
        dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
        str_0 = 'TrueOS'
        a_i_x_network_0 = module_0.AIXNetwork(str_0)
        var_0 = a_i_x_network_0.get_default_interfaces(dict_0)
    except BaseException:
        pass

def test_case_1():
    try:
        float_0 = -536.9
        int_0 = 3881
        a_i_x_network_0 = module_0.AIXNetwork(int_0)
        var_0 = a_i_x_network_0.get_interfaces_info(float_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b'^\x04\xce\x81\xedz\xeb\xa3R\xd6\x94\x01\x1b'
        tuple_0 = ()
        a_i_x_network_0 = module_0.AIXNetwork(tuple_0)
        bytes_1 = b'\x8f\xcf\xe5\xfe\xfbM\x0eZl\x94\x8e2='
        a_i_x_network_1 = module_0.AIXNetwork(bytes_1)
        var_0 = a_i_x_network_1.parse_interface_line(bytes_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = ',^m>b\x0c6rZUw&\\=ul%<@b'
        int_0 = -1455
        int_1 = 65536
        a_i_x_network_collector_0 = module_0.AIXNetworkCollector(int_1)
        a_i_x_network_0 = module_0.AIXNetwork(int_0)
        var_0 = a_i_x_network_0.parse_interface_line(str_0)
        dict_0 = {a_i_x_network_collector_0: var_0, str_0: a_i_x_network_0, int_0: str_0}
        var_1 = a_i_x_network_0.get_default_interfaces(dict_0)
    except BaseException:
        pass