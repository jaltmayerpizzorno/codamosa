# Automatically generated by Pynguin.
import thefuck.types as module_0

def test_case_0():
    pass

def test_case_1():
    bytes_0 = b'\xa5\x05\x0f\xf1k\xa2\xb5 \xc1\xc0'
    tuple_0 = ()
    command_0 = module_0.Command(bytes_0, tuple_0)
    var_0 = command_0.update()

def test_case_2():
    str_0 = ' - not something we can merge'
    set_0 = {str_0}
    bytes_0 = b'\xaa5\xbb\xbdG\x13\x94y\x0e\x18\xd9\xc3s'
    list_0 = None
    dict_0 = {bytes_0: bytes_0, list_0: list_0}
    command_0 = module_0.Command(bytes_0, dict_0)
    var_0 = command_0.__eq__(set_0)

def test_case_3():
    bool_0 = False
    str_0 = 'atT2?'
    list_0 = [str_0, bool_0, bool_0, str_0]
    int_0 = 321
    corrected_command_0 = module_0.CorrectedCommand(str_0, list_0, int_0)
    command_0 = module_0.Command(bool_0, corrected_command_0)
    var_0 = command_0.__repr__()

def test_case_4():
    str_0 = None
    command_0 = module_0.Command(str_0, str_0)
    bool_0 = False
    rule_0 = module_0.Rule(str_0, str_0, bool_0, bool_0, str_0, bool_0, bool_0)
    var_0 = rule_0.is_match(command_0)

def test_case_5():
    str_0 = '/('
    str_1 = None
    dict_0 = {str_0: str_0, str_1: str_1}
    bool_0 = False
    str_2 = '=c,Q.KRJ~=jYFW}ih9'
    set_0 = {bool_0, str_2, bool_0}
    str_3 = '<pVn\x0bq25'
    bool_1 = False
    rule_0 = module_0.Rule(bool_0, dict_0, set_0, bool_0, str_3, bool_1, str_3)
    var_0 = rule_0.__eq__(dict_0)

def test_case_6():
    float_0 = -924.0
    dict_0 = {float_0: float_0, float_0: float_0}
    list_0 = [dict_0, float_0, dict_0]
    corrected_command_0 = module_0.CorrectedCommand(float_0, dict_0, list_0)

def test_case_7():
    bool_0 = False
    bytes_0 = b'\xe7'
    list_0 = []
    command_0 = module_0.Command(bytes_0, list_0)
    float_0 = 1379.0
    str_0 = 'popd'
    corrected_command_0 = module_0.CorrectedCommand(command_0, float_0, str_0)
    var_0 = corrected_command_0.__eq__(bool_0)

def test_case_8():
    str_0 = 'ls'
    var_0 = None
    corrected_command_0 = module_0.CorrectedCommand(str_0, var_0, var_0)
    dict_0 = {var_0: var_0, str_0: var_0, var_0: corrected_command_0, var_0: var_0, corrected_command_0: corrected_command_0}
    var_1 = corrected_command_0.run(dict_0)
    int_0 = 1
    corrected_command_1 = module_0.CorrectedCommand(str_0, var_0, int_0)
    corrected_command_2 = module_0.CorrectedCommand(str_0, var_0, var_0)
    corrected_command_3 = module_0.CorrectedCommand(str_0, var_0, int_0)

def test_case_9():
    str_0 = 'ls -l /Users/ddworken'
    var_0 = None
    int_0 = 3
    corrected_command_0 = module_0.CorrectedCommand(str_0, var_0, int_0)
    var_1 = corrected_command_0.run(var_0)

def test_case_10():
    str_0 = ''
    command_0 = module_0.Command(str_0, str_0)
    str_1 = 'name'
    var_0 = lambda c: str_0
    var_1 = None
    bool_0 = False
    var_2 = lambda c: str_1
    rule_0 = module_0.Rule(str_1, str_1, var_2, bool_0, var_1, bool_0, bool_0)
    var_3 = rule_0.is_match(command_0)

def test_case_11():
    str_0 = 'test'
    bool_0 = True
    var_0 = lambda x: bool_0
    var_1 = lambda x: x.script
    var_2 = None
    int_0 = 100
    bool_1 = False
    rule_0 = module_0.Rule(str_0, var_0, var_1, bool_0, var_2, int_0, bool_1)
    str_1 = 'ls'
    str_2 = 'none'
    command_0 = module_0.Command(str_1, str_2)
    corrected_command_0 = module_0.CorrectedCommand(str_1, var_2, int_0)
    var_3 = rule_0.get_corrected_commands(command_0)
    var_4 = list(var_3)

def test_case_12():
    str_0 = 'ls'
    var_0 = None
    int_0 = 1
    corrected_command_0 = module_0.CorrectedCommand(str_0, var_0, int_0)
    int_1 = 2
    corrected_command_1 = module_0.CorrectedCommand(str_0, var_0, int_1)
    int_2 = 3
    corrected_command_2 = module_0.CorrectedCommand(str_0, var_0, int_2)
    int_3 = 4
    corrected_command_3 = module_0.CorrectedCommand(str_0, var_0, int_3)
    var_1 = corrected_command_0 == corrected_command_1 == corrected_command_2 == corrected_command_3

def test_case_13():
    str_0 = None
    command_0 = module_0.Command(str_0, str_0)
    bool_0 = True
    bool_1 = False
    rule_0 = module_0.Rule(str_0, str_0, bool_1, bool_0, str_0, bool_0, bool_1)
    var_0 = rule_0.is_match(command_0)
    bool_2 = False
    dict_0 = {str_0: bool_2}
    bytes_0 = b'\xee\xafp\x1a\n\xd0a$\x87H\xa1\x1c\xb2\xf6\xc31\xaf'
    rule_1 = module_0.Rule(bool_2, dict_0, bool_1, command_0, str_0, command_0, bytes_0)
    var_1 = rule_1.is_match(command_0)