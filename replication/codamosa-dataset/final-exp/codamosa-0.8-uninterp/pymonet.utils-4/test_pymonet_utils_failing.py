# Automatically generated by Pynguin.
import pymonet.utils as module_0

def test_case_0():
    try:
        callable_0 = None
        callable_1 = module_0.memoize(callable_0)
        list_0 = [callable_1]
        var_0 = module_0.compose(list_0, *list_0)
    except BaseException:
        pass

def test_case_1():
    try:
        callable_0 = None
        callable_1 = module_0.memoize(callable_0)
        list_0 = [callable_1, callable_0, callable_1, callable_0, callable_0, callable_0, callable_1, callable_1, callable_0, callable_0, callable_1, callable_0, callable_1, callable_1, callable_1]
        var_0 = module_0.pipe(callable_0, *list_0)
    except BaseException:
        pass

def test_case_2():
    try:
        callable_0 = None
        callable_1 = module_0.memoize(callable_0)
        list_0 = [callable_1, callable_0, callable_0, callable_0, callable_0, callable_1, callable_0, callable_1]
        bytes_0 = b'\xae/'
        var_0 = module_0.curry(bytes_0, callable_1)
        var_1 = module_0.compose(callable_1, *list_0)
    except BaseException:
        pass

def test_case_3():
    try:
        callable_0 = None
        callable_1 = None
        tuple_0 = (callable_0, callable_1)
        list_0 = [tuple_0, tuple_0, tuple_0, tuple_0]
        var_0 = module_0.cond(list_0)
        int_0 = 1059
        bytes_0 = b'>\xea\x8cvG\xc9u\xf6\xd4\xb3\x87\xce\x0fl\x97\xd41'
        list_1 = [callable_1, callable_1, callable_1, list_0, callable_0, int_0, bytes_0, callable_1, var_0]
        var_1 = module_0.compose(bytes_0, *list_1)
    except BaseException:
        pass

def test_case_4():
    try:
        list_0 = []
        var_0 = module_0.cond(list_0)
        var_1 = None
        int_0 = -569
        int_1 = module_0.increase(int_0)
        list_1 = [var_0, var_0, var_0]
        var_2 = module_0.pipe(var_1, *list_1)
        callable_0 = None
        callable_1 = None
        dict_0 = {int_1: var_1}
        var_3 = module_0.pipe(dict_0, *list_1)
        callable_2 = module_0.memoize(callable_1)
        var_4 = module_0.curry(callable_1, list_1)
        callable_3 = module_0.memoize(callable_0)
        list_2 = [var_4]
        var_5 = module_0.compose(var_1, *list_2)
    except BaseException:
        pass