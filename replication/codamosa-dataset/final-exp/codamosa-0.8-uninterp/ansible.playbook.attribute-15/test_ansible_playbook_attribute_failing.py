# Automatically generated by Pynguin.
import ansible.playbook.attribute as module_0

def test_case_0():
    try:
        str_0 = 'dict'
        bool_0 = True
        field_attribute_0 = module_0.FieldAttribute(str_0, bool_0, str_0, bool_0, str_0, bool_0, str_0, bool_0, bool_0, str_0, bool_0, bool_0, bool_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'U_\r$xmp['
        int_0 = 304
        bool_0 = True
        float_0 = 578.0
        str_1 = 'UnsafeProxy is being deprecated. Use wrap_var or AnsibleUnsafeBytes/AnsibleUnsafeText directly instead'
        float_1 = 1688.06124
        tuple_0 = ()
        attribute_0 = module_0.Attribute(int_0, bool_0, float_0, str_1, float_1, tuple_0)
        var_0 = attribute_0.__ne__(attribute_0)
        var_1 = attribute_0.__lt__(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = "c\tn^/<['A(Ih|M"
        bytes_0 = b'\xc1C\xb7\x9c\xdc;\xb9\x87H'
        list_0 = [str_0, str_0]
        int_0 = -1015
        attribute_0 = module_0.Attribute(str_0, bytes_0, list_0, list_0, int_0)
        var_0 = attribute_0.__gt__(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'Kys?olI7\nk~A'
        float_0 = 782.42
        set_0 = {float_0, float_0, float_0, float_0}
        bool_0 = True
        attribute_0 = module_0.Attribute(float_0, set_0, float_0, bool_0)
        var_0 = attribute_0.__le__(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        int_0 = 3612
        str_0 = 'encryption/decryption utility for Ansible data files'
        str_1 = 'Z<'
        set_0 = None
        list_0 = [set_0, set_0, set_0, set_0]
        tuple_0 = ()
        int_1 = 10
        int_2 = None
        dict_0 = {str_0: tuple_0, str_0: int_2}
        int_3 = 413
        int_4 = 4854
        field_attribute_0 = module_0.FieldAttribute(int_3, int_4, int_1, tuple_0, dict_0)
        str_2 = 'NPY!:0IU~So'
        field_attribute_1 = module_0.FieldAttribute(int_1, dict_0, set_0, field_attribute_0, set_0, str_2)
        bool_0 = False
        bool_1 = True
        attribute_0 = module_0.Attribute(str_0, list_0, tuple_0, tuple_0, field_attribute_1, bool_0, bool_1)
        attribute_1 = module_0.Attribute(str_0, str_0, str_1, attribute_0, field_attribute_0)
        var_0 = attribute_1.__ge__(int_0)
    except BaseException:
        pass

def test_case_5():
    try:
        set_0 = None
        bool_0 = True
        field_attribute_0 = module_0.FieldAttribute(bool_0, set_0, set_0)
    except BaseException:
        pass

def test_case_6():
    try:
        bytes_0 = b'ta\xef\xf5HJ\xb8'
        int_0 = 376
        str_0 = 's#'
        int_1 = 104
        dict_0 = {int_1: int_0}
        float_0 = -1757.0
        bytes_1 = b'?\xc9\x15\xed\xab\x19\x16\x91\xb5\xf4\x90"\xa9\x1b\xd6'
        field_attribute_0 = module_0.FieldAttribute(str_0, dict_0, float_0, bytes_1)
        tuple_0 = (bytes_0, int_0, str_0)
        dict_1 = {tuple_0: bytes_0, int_0: int_0}
        attribute_0 = module_0.Attribute(tuple_0, dict_1)
        bool_0 = False
        str_1 = '-Yq$hN,E7C2r2'
        tuple_1 = (bool_0, str_1)
        var_0 = attribute_0.__eq__(tuple_1)
    except BaseException:
        pass