# Automatically generated by Pynguin.
import ansible.module_utils.common.text.formatters as module_0

def test_case_0():
    try:
        float_0 = None
        var_0 = module_0.human_to_bytes(float_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '2wxz.is'
        var_0 = module_0.human_to_bytes(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '+u{S!.l#W#YOvH4ua3\x0b'
        str_1 = 'X.H'
        bool_0 = None
        set_0 = set()
        tuple_0 = (str_1, bool_0, set_0)
        var_0 = module_0.bytes_to_human(str_0, tuple_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = ''
        bytes_0 = b'\xbe\xea|\xfb'
        int_0 = 2880
        var_0 = module_0.bytes_to_human(bytes_0, int_0, str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        float_0 = 1.0
        var_0 = module_0.bytes_to_human(float_0)
        str_0 = "`1Mp#FgT' &"
        dict_0 = {float_0: str_0, str_0: float_0}
        list_0 = [var_0, float_0, dict_0, str_0]
        var_1 = module_0.lenient_lowercase(list_0)
        var_2 = module_0.lenient_lowercase(str_0)
        var_3 = module_0.lenient_lowercase(str_0)
        str_1 = '9Bkr>sd/En'
        tuple_0 = (list_0,)
        var_4 = module_0.human_to_bytes(str_1, tuple_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = '10M'
        var_0 = module_0.human_to_bytes(str_0)
        var_1 = module_0.human_to_bytes(str_0, str_0)
        str_1 = '2K'
        var_2 = module_0.human_to_bytes(str_1)
        var_3 = module_0.human_to_bytes(str_1, str_0)
        var_4 = module_0.human_to_bytes(str_1)
        var_5 = module_0.human_to_bytes(str_1, str_1)
        str_2 = '10'
        var_6 = module_0.human_to_bytes(str_2)
        var_7 = module_0.human_to_bytes(str_2, str_1)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = '10M'
        var_0 = module_0.human_to_bytes(str_0)
        str_1 = '10.2M'
        var_1 = module_0.human_to_bytes(str_1)
        str_2 = '10.7M'
        var_2 = module_0.human_to_bytes(str_2)
        str_3 = '10.8M'
        var_3 = module_0.human_to_bytes(str_3)
        str_4 = '15K'
        var_4 = module_0.human_to_bytes(str_4)
        bool_0 = True
        bytes_0 = b'\xf3\x13\x15.\xa39\xe7\xf8\x01\xd0\xc6\xbd+N\xb5\x07\xa7'
        tuple_0 = (bytes_0,)
        var_5 = module_0.human_to_bytes(str_0, bool_0, tuple_0)
        bool_1 = False
        var_6 = module_0.human_to_bytes(bool_1)
    except BaseException:
        pass

def test_case_7():
    try:
        float_0 = 1.0
        var_0 = module_0.bytes_to_human(float_0)
        str_0 = "`1Mp#FgT' &"
        dict_0 = {float_0: str_0, str_0: float_0}
        list_0 = [var_0, float_0, dict_0, str_0]
        var_1 = module_0.lenient_lowercase(list_0)
        var_2 = module_0.lenient_lowercase(str_0)
        var_3 = module_0.lenient_lowercase(str_0)
        int_0 = 3951
        var_4 = module_0.human_to_bytes(var_0)
        var_5 = module_0.bytes_to_human(int_0, float_0)
        str_1 = '9Bkr>sd/En'
        tuple_0 = (list_0,)
        var_6 = module_0.human_to_bytes(str_1, tuple_0)
    except BaseException:
        pass