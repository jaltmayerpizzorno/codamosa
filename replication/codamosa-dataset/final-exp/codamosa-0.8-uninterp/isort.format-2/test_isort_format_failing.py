# Automatically generated by Pynguin.
import isort.format as module_0
import typing as module_1
import pathlib as module_2

def test_case_0():
    try:
        str_0 = 'from . import '
        str_1 = module_0.format_natural(str_0)
        str_2 = '"^3o0bfH5\'ad5'
        list_0 = []
        str_3 = ''
        str_4 = module_0.format_natural(str_3)
        bool_0 = None
        var_0 = module_0.show_unified_diff(file_input=str_0, file_output=str_2, file_path=list_0, color_output=bool_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '$r\x0c&T'
        str_1 = module_0.format_simplified(str_0)
        text_i_o_0 = module_1.TextIO()
        text_i_o_1 = text_i_o_0.__enter__()
        bytes_0 = b'\xa5\xfd\x86\xd878\x0cvY%j\x16\x86\xcf'
        bool_0 = True
        var_0 = module_0.show_unified_diff(file_input=str_0, file_output=str_1, file_path=bytes_0, output=text_i_o_0, color_output=bool_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = "R7`LqVI ua'LxH\t@"
        str_1 = 'a'
        path_0 = None
        var_0 = module_0.show_unified_diff(file_input=str_1, file_output=str_1, file_path=path_0)
        text_i_o_0 = module_1.TextIO()
        bool_0 = module_0.ask_whether_to_apply_changes_to_file(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        path_0 = None
        str_0 = '--force-alphabetical-sort-within-sections'
        str_1 = 'htS^jbm'
        bool_0 = True
        var_0 = module_0.show_unified_diff(file_input=str_0, file_output=str_1, file_path=path_0, output=bool_0, color_output=bool_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = '_pm|e\nZ'
        bool_0 = module_0.ask_whether_to_apply_changes_to_file(str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = "T{RT'\x0bX\\\tM"
        str_1 = '\rDG\t<]1c>5S5,{H=C!'
        str_2 = module_0.remove_whitespace(str_0, str_1)
        str_3 = 'Z-."!mx6>\t'
        bool_0 = module_0.ask_whether_to_apply_changes_to_file(str_3)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'fOuT(2naCjl2\x0bIC#Nn'
        str_1 = module_0.format_simplified(str_0)
        str_2 = None
        colorama_printer_0 = module_0.ColoramaPrinter()
        colorama_printer_0.diff_line(str_2)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = None
        colorama_printer_0 = module_0.ColoramaPrinter()
        str_1 = colorama_printer_0.style_text(str_0)
        colorama_printer_1 = module_0.ColoramaPrinter()
        str_2 = ' =}+~lDF\t['
        basic_printer_0 = module_0.BasicPrinter()
        str_3 = "[$'_V:\x0cn#:%tkN"
        str_4 = module_0.format_natural(str_3)
        str_5 = 'I'
        dict_0 = {str_3: colorama_printer_1, str_3: str_4, str_3: basic_printer_0, str_3: str_2, str_3: basic_printer_0, str_3: basic_printer_0, str_3: basic_printer_0}
        path_0 = module_2.Path(**dict_0)
        str_6 = module_0.format_simplified(str_4)
        bool_0 = True
        var_0 = module_0.show_unified_diff(file_input=str_5, file_output=str_2, file_path=path_0, color_output=bool_0)
        colorama_printer_0.diff_line(str_3)
        bool_1 = module_0.ask_whether_to_apply_changes_to_file(str_3)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = None
        colorama_printer_0 = module_0.ColoramaPrinter()
        str_1 = colorama_printer_0.style_text(str_0)
        colorama_printer_1 = module_0.ColoramaPrinter()
        str_2 = ' =}+~lHDF\t['
        basic_printer_0 = module_0.BasicPrinter()
        str_3 = '2L,,^+Sj?@!\n.<G,wq'
        str_4 = module_0.format_natural(str_3)
        colorama_printer_0.diff_line(str_4)
        dict_0 = {str_3: colorama_printer_1, str_3: str_4, str_3: basic_printer_0, str_3: str_2, str_3: basic_printer_0, str_3: basic_printer_0, str_3: basic_printer_0}
        path_0 = module_2.Path(**dict_0)
        str_5 = '3(x(*@/H'
        str_6 = module_0.format_simplified(str_5)
        bool_0 = True
        var_0 = module_0.show_unified_diff(file_input=str_5, file_output=str_2, file_path=path_0, color_output=bool_0)
        colorama_printer_2 = module_0.ColoramaPrinter()
        colorama_printer_2.diff_line(str_3)
        bool_1 = module_0.ask_whether_to_apply_changes_to_file(str_5)
    except BaseException:
        pass

def test_case_9():
    try:
        colorama_printer_0 = module_0.ColoramaPrinter()
        colorama_printer_1 = module_0.ColoramaPrinter()
        str_0 = ' =}+~lDF\t['
        basic_printer_0 = module_0.BasicPrinter()
        basic_printer_0.success(str_0)
        str_1 = "[$'_V:\x0cn#:%tkN"
        str_2 = module_0.format_natural(str_1)
        dict_0 = {str_1: colorama_printer_1, str_1: str_2, str_1: basic_printer_0, str_1: str_0, str_1: basic_printer_0, str_1: basic_printer_0, str_1: basic_printer_0}
        path_0 = module_2.Path(**dict_0)
        str_3 = 'zd&I\x0bMci#%tk?$!'
        str_4 = module_0.format_simplified(str_3)
        str_5 = colorama_printer_0.style_text(str_1)
        var_0 = module_0.show_unified_diff(file_input=str_0, file_output=str_2, file_path=path_0)
        colorama_printer_2 = module_0.ColoramaPrinter()
        str_6 = module_0.format_natural(str_2)
        colorama_printer_2.diff_line(str_2)
        str_7 = 'pxd'
        bool_0 = module_0.ask_whether_to_apply_changes_to_file(str_7)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = None
        colorama_printer_0 = module_0.ColoramaPrinter()
        str_1 = colorama_printer_0.style_text(str_0)
        colorama_printer_1 = module_0.ColoramaPrinter()
        str_2 = ' =}+~lHDF\t['
        basic_printer_0 = module_0.BasicPrinter()
        str_3 = '2L,,^+Sj?@!\n.<G,wq'
        str_4 = module_0.format_natural(str_3)
        colorama_printer_0.diff_line(str_4)
        dict_0 = {str_3: colorama_printer_1, str_3: str_4, str_3: basic_printer_0, str_3: str_2, str_3: basic_printer_0, str_3: basic_printer_0, str_3: basic_printer_0}
        path_0 = module_2.Path(**dict_0)
        str_5 = 'zd&I\x0bMci#%tk?$!'
        list_0 = [str_3, str_5]
        path_1 = module_2.Path(*list_0)
        str_6 = module_0.format_simplified(str_4)
        bool_0 = True
        str_7 = 'h!&Wyim=\n'
        var_0 = module_0.show_unified_diff(file_input=str_7, file_output=str_5, file_path=path_0, color_output=bool_0)
        str_8 = ':|'
        colorama_printer_1.diff_line(str_8)
        str_9 = "M'.jW6F="
        bool_1 = module_0.ask_whether_to_apply_changes_to_file(str_9)
    except BaseException:
        pass