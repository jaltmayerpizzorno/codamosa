# Automatically generated by Pynguin.
import ansible.module_utils.facts.system.distribution as module_0

def test_case_0():
    try:
        tuple_0 = None
        var_0 = module_0.get_uname(tuple_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bool_0 = False
        str_0 = ']G`]Jq/gP^>=2vk94u*'
        dict_0 = {bool_0: bool_0, bool_0: str_0, str_0: str_0, str_0: bool_0}
        distribution_fact_collector_0 = module_0.DistributionFactCollector()
        float_0 = 100.0
        distribution_0 = module_0.Distribution(float_0)
        distribution_files_0 = module_0.DistributionFiles(distribution_0)
        var_0 = distribution_files_0.parse_distribution_file_Slackware(bool_0, str_0, dict_0, distribution_fact_collector_0)
        str_1 = 'W(UQ"~WiV\':Ix8E@'
        distribution_1 = module_0.Distribution(str_1)
        var_1 = distribution_1.get_distribution_facts()
        var_2 = distribution_1.get_distribution_NetBSD()
    except BaseException:
        pass

def test_case_2():
    try:
        bool_0 = False
        list_0 = [bool_0]
        bytes_0 = b'\xeftP\xb0f\xb4\x0c'
        float_0 = 60.0
        dict_0 = {bool_0: bytes_0, bytes_0: list_0}
        str_0 = 'K!9<k?N_rJ8b/<'
        float_1 = 600.9481
        distribution_files_0 = module_0.DistributionFiles(float_1)
        var_0 = distribution_files_0.parse_distribution_file_Slackware(bytes_0, float_0, dict_0, str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'\xf8\xb7\xa9\xf9\xf98T\x0f5sP\x87\x84\xe7R'
        int_0 = 411
        distribution_files_0 = module_0.DistributionFiles(int_0)
        list_0 = [bytes_0, distribution_files_0, int_0]
        float_0 = -1802.883
        distribution_fact_collector_0 = module_0.DistributionFactCollector(list_0, float_0)
        tuple_0 = (distribution_fact_collector_0,)
        distribution_0 = module_0.Distribution(int_0)
        list_1 = []
        distribution_files_1 = module_0.DistributionFiles(list_1)
        var_0 = distribution_files_1.parse_distribution_file_Mandriva(bytes_0, tuple_0, distribution_0, distribution_0)
        list_2 = []
        distribution_1 = module_0.Distribution(list_2)
        var_1 = distribution_1.get_distribution_SunOS()
    except BaseException:
        pass

def test_case_4():
    try:
        distribution_fact_collector_0 = module_0.DistributionFactCollector()
        int_0 = -1418
        bool_0 = False
        float_0 = -160.0
        int_1 = 0
        distribution_files_0 = module_0.DistributionFiles(int_1)
        var_0 = distribution_files_0.parse_distribution_file_Alpine(distribution_fact_collector_0, int_0, bool_0, float_0)
        float_1 = -374.716352
        distribution_0 = module_0.Distribution(float_1)
        var_1 = distribution_0.get_distribution_FreeBSD()
        var_2 = distribution_0.get_distribution_AIX()
    except BaseException:
        pass

def test_case_5():
    try:
        int_0 = 267
        str_0 = '}vm\\dwN6!$ !\t=\tf/C'
        distribution_files_0 = module_0.DistributionFiles(str_0)
        var_0 = distribution_files_0.process_dist_files()
        str_1 = 'bullseye'
        distribution_0 = module_0.Distribution(str_1)
        var_1 = distribution_0.get_distribution_facts()
        var_2 = distribution_0.get_distribution_SMGL()
        var_3 = distribution_0.get_distribution_FreeBSD()
        distribution_files_1 = module_0.DistributionFiles(int_0)
        float_0 = 1950.1233
        tuple_0 = ()
        list_0 = []
        var_4 = distribution_files_1.parse_distribution_file_OpenWrt(float_0, tuple_0, list_0, distribution_0)
        dict_0 = {distribution_files_1: int_0}
        distribution_1 = module_0.Distribution(dict_0)
        var_5 = distribution_1.get_distribution_HPUX()
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'flatcar'
        distribution_0 = module_0.Distribution(str_0)
        var_0 = distribution_0.get_distribution_FreeBSD()
        var_1 = distribution_0.get_distribution_Darwin()
    except BaseException:
        pass

def test_case_7():
    try:
        float_0 = 1.5
        distribution_0 = module_0.Distribution(float_0)
        var_0 = distribution_0.get_distribution_OpenBSD()
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = '8t>BqQ7Y=,OsD7-'
        distribution_fact_collector_0 = module_0.DistributionFactCollector()
        set_0 = {distribution_fact_collector_0, distribution_fact_collector_0, str_0, str_0}
        bytes_0 = b'9\x06\xaeX\x82\x0ed\xd6>\x866\x05@\xb0\xce\x7f\x16'
        int_0 = 3481
        distribution_files_0 = module_0.DistributionFiles(int_0)
        var_0 = distribution_files_0.parse_distribution_file_Flatcar(str_0, distribution_fact_collector_0, set_0, bytes_0)
        int_1 = 1871
        distribution_0 = module_0.Distribution(int_1)
        var_1 = distribution_0.get_distribution_DragonFly()
    except BaseException:
        pass

def test_case_9():
    try:
        list_0 = None
        bytes_0 = b"\x8fEU\x8a\xc8\xf0B\xf9j\x136-'\x0b\x1f"
        bool_0 = True
        distribution_0 = module_0.Distribution(bool_0)
        tuple_0 = (list_0, bytes_0, distribution_0)
        distribution_1 = module_0.Distribution(tuple_0)
        var_0 = distribution_1.get_distribution_NetBSD()
    except BaseException:
        pass

def test_case_10():
    try:
        list_0 = []
        distribution_0 = module_0.Distribution(list_0)
        var_0 = distribution_0.get_distribution_SunOS()
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = '-d {delay_sec}'
        float_0 = -495.62
        str_1 = 'ab\rb5e.: Zm*)'
        distribution_files_0 = module_0.DistributionFiles(str_1)
        var_0 = module_0.get_uname(str_0, float_0)
    except BaseException:
        pass