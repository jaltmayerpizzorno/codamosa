# Automatically generated by Pynguin.
import argparse as module_0
import httpie.context as module_1
import httpie.core as module_2

def test_case_0():
    try:
        namespace_0 = module_0.Namespace()
        environment_0 = module_1.Environment()
        exit_status_0 = module_2.program(namespace_0, environment_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = b'H)\x16\x02/4/'
        str_0 = "+@oo'VdJc"
        list_0 = [bytes_0, bytes_0, str_0, str_0]
        list_1 = module_2.decode_raw_args(list_0, str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '*<ZwoFs56fq{Zj\n]\\'
        str_1 = None
        list_0 = [str_0, str_1, str_0]
        exit_status_0 = module_2.main(list_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'GET'
        str_1 = 'http://example.com'
        str_2 = [str_0, str_1]
        environment_0 = module_1.Environment()
        exit_status_0 = module_2.program(str_2, environment_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'M= {=BV;'
        str_1 = '--headers'
        str_2 = 'www.baidu.com'
        str_3 = [str_0, str_1, str_2]
        exit_status_0 = module_2.main(str_3)
        str_4 = '--download'
        str_5 = '--output'
        str_6 = [str_5, str_4, str_2, str_5, str_0]
        exit_status_1 = module_2.main(str_6)
        str_7 = '--check-status'
        str_8 = [str_0, str_7, str_2]
        exit_status_2 = module_2.main(str_8)
        str_9 = '--quiet'
        exit_status_3 = module_2.main(str_9)
        environment_0 = module_1.Environment()
        var_0 = module_2.print_debug_info(environment_0)
        str_10 = '--form'
        str_11 = [str_0, str_10, str_2]
        exit_status_4 = module_2.main(str_11)
        str_12 = '--json'
        str_13 = [str_0, str_12, str_2]
        exit_status_5 = module_2.main(str_13)
        str_14 = [str_0, str_12, str_2]
        exit_status_6 = module_2.main(str_14)
        str_15 = '>_qrRrzg1c{Aiw@J'
        str_16 = ''
        dict_0 = {str_15: str_6, str_16: str_10}
        namespace_0 = module_0.Namespace(**dict_0)
        environment_1 = module_1.Environment()
        exit_status_7 = module_2.program(namespace_0, environment_0)
    except BaseException:
        pass