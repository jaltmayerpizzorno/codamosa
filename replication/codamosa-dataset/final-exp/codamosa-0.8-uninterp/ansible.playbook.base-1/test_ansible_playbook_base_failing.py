# Automatically generated by Pynguin.
import ansible.playbook.base as module_0
import ansible.playbook.attribute as module_1

def test_case_0():
    try:
        base_0 = module_0.Base()
        field_attribute_base_0 = module_0.FieldAttributeBase()
        var_0 = field_attribute_base_0.load_data(base_0, base_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '?r`K[MpkOgJQA:SWE1'
        set_0 = set()
        int_0 = 1996
        str_1 = 'g}"3Wx<t9cp{;a+gHl'
        dict_0 = {str_1: str_1, str_1: set_0, str_1: int_0, str_0: int_0}
        bytes_0 = b'.\xce\x9d\xa8k0{\xa6\xd7\x05d\xe2n\xc4\x0e\xd5RL'
        field_attribute_base_0 = module_0.FieldAttributeBase()
        var_0 = field_attribute_base_0.load_data(int_0, dict_0, bytes_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bool_0 = None
        set_0 = {bool_0}
        field_attribute_base_0 = module_0.FieldAttributeBase()
        var_0 = field_attribute_base_0.load_data(set_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'ITERATING_SETUP'
        list_0 = [str_0, str_0]
        base_0 = module_0.Base()
        var_0 = base_0.get_path()
        bool_0 = False
        field_attribute_base_0 = module_0.FieldAttributeBase()
        var_1 = field_attribute_base_0.get_validated_value(str_0, list_0, base_0, bool_0)
    except BaseException:
        pass

def test_case_4():
    try:
        field_attribute_base_0 = module_0.FieldAttributeBase()
        var_0 = field_attribute_base_0.get_loader()
        var_1 = field_attribute_base_0.get_loader()
        var_2 = field_attribute_base_0.dump_me()
        var_3 = field_attribute_base_0.post_validate(field_attribute_base_0)
    except BaseException:
        pass

def test_case_5():
    try:
        field_attribute_base_0 = module_0.FieldAttributeBase()
        base_0 = module_0.Base()
        var_0 = field_attribute_base_0.deserialize(field_attribute_base_0)
    except BaseException:
        pass

def test_case_6():
    try:
        field_attribute_base_0 = module_0.FieldAttributeBase()
        list_0 = []
        var_0 = field_attribute_base_0.validate(list_0)
        field_attribute_base_1 = module_0.FieldAttributeBase()
        var_1 = field_attribute_base_0.dump_me(field_attribute_base_1)
    except BaseException:
        pass

def test_case_7():
    try:
        field_attribute_base_0 = module_0.FieldAttributeBase()
        base_0 = module_0.Base()
        var_0 = base_0.get_path()
        var_1 = base_0.get_path()
        field_attribute_base_1 = module_0.FieldAttributeBase()
        var_2 = field_attribute_base_1.dump_me()
        field_attribute_base_2 = module_0.FieldAttributeBase()
        var_3 = field_attribute_base_0.get_variable_manager()
        field_attribute_base_3 = module_0.FieldAttributeBase()
        var_4 = field_attribute_base_3.squash()
        var_5 = base_0.get_search_path()
        field_attribute_base_4 = module_0.FieldAttributeBase()
        field_attribute_base_5 = module_0.FieldAttributeBase()
        var_6 = field_attribute_base_3.validate()
        field_attribute_base_6 = module_0.FieldAttributeBase()
        var_7 = field_attribute_base_5.serialize()
        field_attribute_base_7 = module_0.FieldAttributeBase()
        dict_0 = None
        var_8 = field_attribute_base_6.load_data(dict_0)
    except BaseException:
        pass

def test_case_8():
    try:
        field_attribute_0 = module_1.FieldAttribute()
        int_0 = 12
        str_0 = 'qyo'
        field_attribute_base_0 = module_0.FieldAttributeBase()
        var_0 = field_attribute_base_0.get_validated_value(str_0, field_attribute_0, int_0, int_0)
        var_1 = field_attribute_base_0.dump_attrs()
        var_2 = field_attribute_base_0.validate()
        field_attribute_1 = module_1.FieldAttribute()
        field_attribute_base_1 = module_0.FieldAttributeBase()
        var_3 = field_attribute_base_1.copy()
        var_4 = field_attribute_base_0.squash()
        var_5 = field_attribute_base_1.dump_me()
        dict_0 = None
        var_6 = field_attribute_base_0.validate()
        base_meta_0 = module_0.BaseMeta(**dict_0)
    except BaseException:
        pass

def test_case_9():
    try:
        set_0 = set()
        field_attribute_base_0 = module_0.FieldAttributeBase()
        field_attribute_base_1 = module_0.FieldAttributeBase()
        var_0 = field_attribute_base_1.load_data(set_0, field_attribute_base_0)
        var_1 = field_attribute_base_1.copy()
        field_attribute_base_2 = module_0.FieldAttributeBase()
        var_2 = field_attribute_base_2.squash()
        var_3 = field_attribute_base_2.copy()
        bytes_0 = b'\xcf\xe8\x89\xd61g'
        base_0 = module_0.Base()
        tuple_0 = (bytes_0, base_0)
        bool_0 = None
        dict_0 = {var_0: field_attribute_base_0, tuple_0: bool_0, var_3: var_2, field_attribute_base_1: var_2}
        var_4 = field_attribute_base_2.validate(dict_0)
        var_5 = field_attribute_base_2.copy()
        var_6 = field_attribute_base_2.dump_attrs()
        var_7 = field_attribute_base_2.serialize()
        var_8 = field_attribute_base_2.dump_me()
        int_0 = 1172
        var_9 = field_attribute_base_2.deserialize(int_0)
    except BaseException:
        pass

def test_case_10():
    try:
        field_attribute_base_0 = module_0.FieldAttributeBase()
        str_0 = 'XYX\\f'
        list_0 = [str_0, str_0, str_0, str_0]
        dict_0 = {str_0: list_0}
        list_1 = [dict_0, dict_0, dict_0]
        base_meta_0 = module_0.BaseMeta(*list_1)
    except BaseException:
        pass