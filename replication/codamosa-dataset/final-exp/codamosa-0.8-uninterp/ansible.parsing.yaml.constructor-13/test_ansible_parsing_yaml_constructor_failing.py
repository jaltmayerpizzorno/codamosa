# Automatically generated by Pynguin.
import ansible.parsing.yaml.constructor as module_0
import yaml.nodes as module_1
import ansible.parsing.yaml.objects as module_2

def test_case_0():
    try:
        ansible_constructor_0 = module_0.AnsibleConstructor()
        var_0 = ansible_constructor_0.construct_mapping(ansible_constructor_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = b'\xd8\x98[\xfcf\x07\xee#Q\xe5\x98\xed\xb4\xae(\xc7'
        bytes_1 = b'\xc2\x8a'
        ansible_constructor_0 = module_0.AnsibleConstructor(bytes_1)
        var_0 = ansible_constructor_0.construct_yaml_str(bytes_0)
    except BaseException:
        pass

def test_case_2():
    try:
        ansible_constructor_0 = module_0.AnsibleConstructor()
        tuple_0 = ()
        var_0 = ansible_constructor_0.construct_vault_encrypted_unicode(tuple_0)
    except BaseException:
        pass

def test_case_3():
    try:
        complex_0 = None
        ansible_constructor_0 = module_0.AnsibleConstructor(complex_0)
        var_0 = ansible_constructor_0.construct_yaml_unsafe(ansible_constructor_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = '\x0b.U(SR0'
        ansible_constructor_0 = module_0.AnsibleConstructor()
        bytes_0 = b'\xf5\xda\r\xe5'
        ansible_constructor_1 = module_0.AnsibleConstructor(ansible_constructor_0, bytes_0)
        var_0 = ansible_constructor_1.construct_yaml_str(str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        ansible_constructor_0 = module_0.AnsibleConstructor()
        str_0 = 'seq'
        var_0 = ansible_constructor_0.construct_yaml_seq(str_0)
        var_1 = list(var_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = '+Hq|@'
        bytes_0 = b'\xee\xd9\x85\xaa\xc1\x1dP\xd9\xe3Vd!\xd8\n\xa4\xe2 \x80\x02\xbc'
        bool_0 = None
        mapping_node_0 = module_1.MappingNode(bytes_0, bool_0)
        ansible_constructor_0 = module_0.AnsibleConstructor(str_0)
        var_0 = ansible_constructor_0.construct_yaml_unsafe(mapping_node_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = '+Hq|@'
        bytes_0 = b'\xee\xd9\x85\xaa\xd0\x1dP\xd9\xe3Vd!\xd8\n\xa4\x94 \x80\x02\xbc'
        bool_0 = None
        mapping_node_0 = module_1.MappingNode(bytes_0, bool_0)
        list_0 = []
        mapping_node_1 = module_1.MappingNode(str_0, list_0, mapping_node_0, list_0)
        ansible_constructor_0 = module_0.AnsibleConstructor(str_0)
        var_0 = ansible_constructor_0.construct_yaml_unsafe(mapping_node_1)
    except BaseException:
        pass

def test_case_8():
    try:
        int_0 = 2216
        str_0 = '+Hq|@'
        list_0 = [int_0, str_0]
        bytes_0 = b'\xee\xd9\x85\xaa\xc1\x1dP\xd9\xe3Vd!\xd8\n\xa4\xe2 \x80\x02\xbc'
        bool_0 = None
        mapping_node_0 = module_1.MappingNode(bytes_0, bool_0)
        bool_1 = None
        ansible_constructor_0 = module_0.AnsibleConstructor()
        var_0 = ansible_constructor_0.construct_yaml_map(bool_1)
        list_1 = []
        mapping_node_1 = module_1.MappingNode(str_0, list_0, mapping_node_0, list_1)
        ansible_constructor_1 = module_0.AnsibleConstructor(str_0)
        bytes_1 = None
        var_1 = ansible_constructor_1.construct_yaml_map(bytes_1)
        str_1 = ' ;4k=K|'
        dict_0 = {str_1: str_1}
        tuple_0 = (dict_0,)
        ansible_constructor_2 = module_0.AnsibleConstructor(tuple_0)
        dict_1 = {}
        var_2 = ansible_constructor_0.construct_yaml_map(dict_1)
        list_2 = [var_1]
        ansible_mapping_0 = module_2.AnsibleMapping(*list_2)
    except BaseException:
        pass