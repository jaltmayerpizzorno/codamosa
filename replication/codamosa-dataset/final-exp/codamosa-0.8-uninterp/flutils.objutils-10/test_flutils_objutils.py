# Automatically generated by Pynguin.
import flutils.objutils as module_0

def test_case_0():
    pass

def test_case_1():
    str_0 = "~C?Mdf'[pQ0BAB"
    bool_0 = module_0.has_any_callables(str_0)

def test_case_2():
    str_0 = ',*S'
    list_0 = [str_0]
    bool_0 = module_0.has_any_attrs(list_0, *list_0)

def test_case_3():
    str_0 = 'bash'
    bool_0 = module_0.has_callables(str_0)

def test_case_4():
    list_0 = []
    str_0 = 'T.\'pmxubqM{4[Uy"iqu'
    list_1 = [str_0]
    bool_0 = module_0.has_attrs(list_0, *list_1)

def test_case_5():
    float_0 = 624.4
    str_0 = '\n9eZUP4zZa`'
    list_0 = [str_0, str_0, str_0]
    bool_0 = module_0.has_callables(float_0, *list_0)

def test_case_6():
    str_0 = '!jQ?)'
    bool_0 = module_0.is_list_like(str_0)

def test_case_7():
    tuple_0 = ()
    list_0 = [tuple_0, tuple_0, tuple_0]
    bool_0 = module_0.is_list_like(list_0)
    list_1 = [tuple_0, tuple_0]
    str_0 = 'Z27?:\r>d:f=ww'
    float_0 = -763.486
    tuple_1 = (list_1, str_0, float_0)
    bool_1 = module_0.has_any_attrs(tuple_1)
    bool_2 = module_0.has_callables(list_1)

def test_case_8():
    float_0 = -1230.809
    bool_0 = module_0.is_subclass_of_any(float_0)

def test_case_9():
    float_0 = 3725.4
    str_0 = 'count'
    list_0 = [str_0, str_0, str_0, str_0]
    bool_0 = module_0.has_any_callables(str_0, *list_0)
    str_1 = '4{T'
    str_2 = 'Bm!\x0cH+6F-#F:h '
    list_1 = [str_0, str_1, str_1, str_2]
    bool_1 = module_0.has_attrs(float_0, *list_1)
    bool_2 = module_0.has_attrs(bool_1)
    bool_3 = module_0.has_callables(float_0)
    bytes_0 = b"\xc3'(\x9f\xe1\xb7\x84\x99\x8f"
    str_3 = 'p}<ghr44/\\Y)|{uWgOsF'
    str_4 = 't{m-h1]AUk\n{,b'
    bool_4 = module_0.has_callables(bool_0)
    bool_5 = module_0.is_list_like(bool_0)
    bool_6 = module_0.has_any_callables(bytes_0)
    str_5 = '`wbIgGyW%8"?~I;}U[~F'
    float_1 = -4104.671
    str_6 = 'J'
    bool_7 = module_0.has_attrs(float_0)
    list_2 = [str_6, str_6, str_3]
    bool_8 = module_0.is_list_like(bool_2)
    bool_9 = module_0.has_callables(float_1, *list_2)
    str_7 = None
    bool_10 = module_0.has_any_callables(str_3)
    bool_11 = module_0.has_any_attrs(str_1)
    list_3 = [str_3, str_4, str_5, str_7]
    bool_12 = module_0.has_attrs(str_2)
    bool_13 = module_0.has_attrs(bytes_0, *list_3)