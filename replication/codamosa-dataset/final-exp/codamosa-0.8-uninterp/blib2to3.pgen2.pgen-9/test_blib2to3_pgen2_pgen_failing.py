# Automatically generated by Pynguin.
import blib2to3.pgen2.pgen as module_0

def test_case_0():
    try:
        str_0 = 'L]x(D!!Rf]W<l5'
        int_0 = 51
        parser_generator_0 = module_0.ParserGenerator(str_0, int_0)
    except BaseException:
        pass

def test_case_1():
    try:
        pgen_grammar_0 = module_0.generate_grammar()
    except BaseException:
        pass

def test_case_2():
    try:
        list_0 = None
        n_f_a_state_0 = module_0.NFAState()
        dict_0 = {n_f_a_state_0: n_f_a_state_0, n_f_a_state_0: list_0}
        str_0 = None
        n_f_a_state_1 = module_0.NFAState()
        d_f_a_state_0 = module_0.DFAState(dict_0, n_f_a_state_1)
        bool_0 = d_f_a_state_0.__eq__(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        n_f_a_state_0 = module_0.NFAState()
        n_f_a_state_1 = module_0.NFAState()
        pgen_grammar_0 = module_0.PgenGrammar()
        dict_0 = {n_f_a_state_0: n_f_a_state_0, n_f_a_state_0: n_f_a_state_0, n_f_a_state_0: n_f_a_state_0, n_f_a_state_1: n_f_a_state_0}
        d_f_a_state_0 = module_0.DFAState(dict_0, n_f_a_state_0)
        str_0 = '9RNN>(`@Z%PmqQ'
        d_f_a_state_0.addarc(d_f_a_state_0, str_0)
        pgen_grammar_1 = module_0.generate_grammar()
    except BaseException:
        pass

def test_case_4():
    try:
        n_f_a_state_0 = module_0.NFAState()
        n_f_a_state_1 = None
        str_0 = None
        dict_0 = {n_f_a_state_1: str_0}
        n_f_a_state_2 = module_0.NFAState()
        d_f_a_state_0 = module_0.DFAState(dict_0, n_f_a_state_2)
    except BaseException:
        pass

def test_case_5():
    try:
        n_f_a_state_0 = module_0.NFAState()
        n_f_a_state_0.addarc(n_f_a_state_0, n_f_a_state_0)
    except BaseException:
        pass

def test_case_6():
    try:
        n_f_a_state_0 = module_0.NFAState()
        dict_0 = None
        d_f_a_state_0 = module_0.DFAState(dict_0, n_f_a_state_0)
    except BaseException:
        pass

def test_case_7():
    try:
        n_f_a_state_0 = module_0.NFAState()
        n_f_a_state_1 = None
        n_f_a_state_0.addarc(n_f_a_state_1)
    except BaseException:
        pass

def test_case_8():
    try:
        n_f_a_state_0 = module_0.NFAState()
        n_f_a_state_1 = None
        n_f_a_state_0.addarc(n_f_a_state_0)
        dict_0 = {n_f_a_state_0: n_f_a_state_0, n_f_a_state_0: n_f_a_state_0, n_f_a_state_1: n_f_a_state_0}
        n_f_a_state_0.addarc(n_f_a_state_0)
        d_f_a_state_0 = module_0.DFAState(dict_0, n_f_a_state_0)
        str_0 = 'okb'
        d_f_a_state_1 = module_0.DFAState(dict_0, n_f_a_state_0)
        n_f_a_state_2 = module_0.NFAState()
        dict_1 = {n_f_a_state_2: n_f_a_state_2, n_f_a_state_2: n_f_a_state_2}
        d_f_a_state_1.addarc(d_f_a_state_0, str_0)
        d_f_a_state_0.unifystate(d_f_a_state_1, d_f_a_state_1)
        list_0 = None
        n_f_a_state_3 = module_0.NFAState()
        str_1 = 'u'
        d_f_a_state_0.addarc(d_f_a_state_1, str_1)
        dict_2 = {n_f_a_state_3: n_f_a_state_3, n_f_a_state_3: list_0}
        d_f_a_state_2 = module_0.DFAState(dict_2, n_f_a_state_3)
        d_f_a_state_3 = module_0.DFAState(dict_1, n_f_a_state_1)
    except BaseException:
        pass

def test_case_9():
    try:
        n_f_a_state_0 = module_0.NFAState()
        dict_0 = {n_f_a_state_0: n_f_a_state_0, n_f_a_state_0: n_f_a_state_0}
        n_f_a_state_1 = module_0.NFAState()
        n_f_a_state_1.addarc(n_f_a_state_0)
        d_f_a_state_0 = module_0.DFAState(dict_0, n_f_a_state_1)
        d_f_a_state_0.unifystate(d_f_a_state_0, d_f_a_state_0)
        list_0 = None
        n_f_a_state_2 = module_0.NFAState()
        dict_1 = {n_f_a_state_2: n_f_a_state_2, n_f_a_state_2: list_0}
        d_f_a_state_1 = module_0.DFAState(dict_1, n_f_a_state_2)
        str_0 = None
        d_f_a_state_0.addarc(d_f_a_state_1, str_0)
    except BaseException:
        pass

def test_case_10():
    try:
        n_f_a_state_0 = module_0.NFAState()
        n_f_a_state_1 = None
        n_f_a_state_0.addarc(n_f_a_state_0)
        dict_0 = {n_f_a_state_0: n_f_a_state_0, n_f_a_state_0: n_f_a_state_0, n_f_a_state_1: n_f_a_state_0}
        n_f_a_state_0.addarc(n_f_a_state_0)
        d_f_a_state_0 = module_0.DFAState(dict_0, n_f_a_state_0)
        str_0 = 'okb'
        d_f_a_state_0.addarc(d_f_a_state_0, str_0)
        d_f_a_state_0.unifystate(d_f_a_state_0, d_f_a_state_0)
        n_f_a_state_2 = module_0.NFAState()
        d_f_a_state_0.addarc(d_f_a_state_0, str_0)
    except BaseException:
        pass

def test_case_11():
    try:
        n_f_a_state_0 = module_0.NFAState()
        n_f_a_state_1 = None
        n_f_a_state_0.addarc(n_f_a_state_0)
        dict_0 = {n_f_a_state_0: n_f_a_state_0, n_f_a_state_0: n_f_a_state_0, n_f_a_state_1: n_f_a_state_0}
        n_f_a_state_0.addarc(n_f_a_state_0)
        str_0 = 'o'
        d_f_a_state_0 = module_0.DFAState(dict_0, n_f_a_state_0)
        n_f_a_state_2 = module_0.NFAState()
        dict_1 = {n_f_a_state_2: n_f_a_state_2, n_f_a_state_2: n_f_a_state_2}
        d_f_a_state_1 = module_0.DFAState(dict_0, n_f_a_state_2)
        d_f_a_state_1.addarc(d_f_a_state_1, str_0)
        d_f_a_state_1.unifystate(d_f_a_state_0, d_f_a_state_0)
        n_f_a_state_3 = module_0.NFAState()
        str_1 = '\\\n'
        d_f_a_state_0.addarc(d_f_a_state_1, str_1)
        d_f_a_state_2 = module_0.DFAState(dict_1, n_f_a_state_3)
        d_f_a_state_1.addarc(d_f_a_state_0, str_0)
    except BaseException:
        pass

def test_case_12():
    try:
        n_f_a_state_0 = module_0.NFAState()
        n_f_a_state_0.addarc(n_f_a_state_0)
        dict_0 = {n_f_a_state_0: n_f_a_state_0, n_f_a_state_0: n_f_a_state_0, n_f_a_state_0: n_f_a_state_0}
        d_f_a_state_0 = module_0.DFAState(dict_0, n_f_a_state_0)
        d_f_a_state_1 = module_0.DFAState(dict_0, n_f_a_state_0)
        d_f_a_state_1.unifystate(d_f_a_state_0, d_f_a_state_0)
        d_f_a_state_2 = module_0.DFAState(dict_0, n_f_a_state_0)
        d_f_a_state_3 = module_0.DFAState(dict_0, n_f_a_state_0)
        n_f_a_state_1 = module_0.NFAState()
        d_f_a_state_4 = module_0.DFAState(dict_0, n_f_a_state_0)
        d_f_a_state_5 = None
        str_0 = '#'
        d_f_a_state_0.addarc(d_f_a_state_5, str_0)
    except BaseException:
        pass