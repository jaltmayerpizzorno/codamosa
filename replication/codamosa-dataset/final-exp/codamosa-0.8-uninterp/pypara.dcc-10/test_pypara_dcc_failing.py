# Automatically generated by Pynguin.
import pypara.dcc as module_0
import pypara.currencies as module_1

def test_case_0():
    try:
        date_0 = None
        decimal_0 = module_0.dcfc_act_365_f(date_0, date_0, date_0)
    except BaseException:
        pass

def test_case_1():
    try:
        date_0 = None
        decimal_0 = module_0.dcfc_nl_365(date_0, date_0, date_0)
    except BaseException:
        pass

def test_case_2():
    try:
        date_0 = None
        decimal_0 = module_0.dcfc_30_e_plus_360(date_0, date_0, date_0)
    except BaseException:
        pass

def test_case_3():
    try:
        date_0 = None
        decimal_0 = module_0.dcfc_30_360_isda(date_0, date_0, date_0)
    except BaseException:
        pass

def test_case_4():
    try:
        date_0 = None
        decimal_0 = module_0.dcfc_30_360_german(date_0, date_0, date_0)
    except BaseException:
        pass

def test_case_5():
    try:
        date_0 = None
        decimal_0 = module_0.dcfc_act_365_a(date_0, date_0, date_0)
    except BaseException:
        pass

def test_case_6():
    try:
        date_0 = None
        decimal_0 = module_0.dcfc_30_e_360(date_0, date_0, date_0)
    except BaseException:
        pass

def test_case_7():
    try:
        date_0 = None
        decimal_0 = module_0.dcfc_act_360(date_0, date_0, date_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = '\ts;\nW'
        d_c_c_registry_machinery_0 = module_0.DCCRegistryMachinery()
        optional_0 = d_c_c_registry_machinery_0.find(str_0)
        date_0 = None
        decimal_0 = module_0.dcfc_act_act_icma(date_0, date_0, date_0)
    except BaseException:
        pass

def test_case_9():
    try:
        money_0 = None
        date_0 = None
        decimal_0 = module_0.dcfc_act_act(date_0, date_0, date_0, money_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = '\ts5\n@'
        d_c_c_registry_machinery_0 = module_0.DCCRegistryMachinery()
        optional_0 = d_c_c_registry_machinery_0.find(str_0)
        date_0 = None
        decimal_0 = module_0.dcfc_30_360_us(date_0, date_0, date_0)
    except BaseException:
        pass

def test_case_11():
    try:
        d_c_c_registry_machinery_0 = module_0.DCCRegistryMachinery()
        currency_type_0 = module_1.CurrencyType.ALTERNATIVE
        list_0 = [currency_type_0, currency_type_0, d_c_c_registry_machinery_0, d_c_c_registry_machinery_0]
        list_1 = [currency_type_0, list_0, list_0, currency_type_0]
        d_c_c_0 = module_0.DCC(*list_1)
        d_c_c_registry_machinery_0.register(d_c_c_0)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = '\ts5\n@'
        str_1 = None
        d_c_c_registry_machinery_0 = module_0.DCCRegistryMachinery()
        optional_0 = d_c_c_registry_machinery_0.find(str_0)
        date_0 = None
        list_0 = [str_1, optional_0, d_c_c_registry_machinery_0, d_c_c_registry_machinery_0]
        d_c_c_0 = module_0.DCC(*list_0)
        decimal_0 = d_c_c_0.calculate_daily_fraction(date_0, date_0, date_0)
    except BaseException:
        pass

def test_case_13():
    try:
        d_c_c_registry_machinery_0 = module_0.DCCRegistryMachinery()
        date_0 = None
        decimal_0 = module_0.dcfc_act_365_l(date_0, date_0, date_0)
    except BaseException:
        pass