# Automatically generated by Pynguin.
import ansible.module_utils.facts.system.distribution as module_0

def test_case_0():
    pass

def test_case_1():
    bool_0 = True
    distribution_files_0 = module_0.DistributionFiles(bool_0)
    var_0 = distribution_files_0.process_dist_files()

def test_case_2():
    bool_0 = False
    str_0 = 'Mar'
    list_0 = [str_0, str_0, bool_0]
    float_0 = 1745.0
    dict_0 = {bool_0: bool_0}
    distribution_fact_collector_0 = module_0.DistributionFactCollector()
    str_1 = 'Service instantiated - platform %s'
    distribution_0 = module_0.Distribution(str_1)
    str_2 = '-=TQ(UIjrElb[|'
    distribution_files_0 = module_0.DistributionFiles(list_0)
    var_0 = distribution_files_0.parse_distribution_file_OpenWrt(float_0, str_2, dict_0, list_0)

def test_case_3():
    int_0 = 1095
    str_0 = 'Td\r'
    str_1 = 'Virtual collections do not have a namespace'
    list_0 = [str_1]
    set_0 = {str_0}
    tuple_0 = (list_0, list_0, set_0)
    bytes_0 = b'9Q4{sd\xdc\xca\xa6-\x86\xbb\r!\xa5\xca8\x16'
    str_2 = '"1\x0b&&2\r]0Lk)%AO_Eh^'
    distribution_files_0 = module_0.DistributionFiles(str_2)
    var_0 = distribution_files_0.parse_distribution_file_Alpine(tuple_0, int_0, bytes_0, bytes_0)
    bool_0 = True
    distribution_fact_collector_0 = module_0.DistributionFactCollector(bool_0)
    bytes_1 = b'\xfe\x99'
    distribution_files_1 = module_0.DistributionFiles(bytes_1)
    var_1 = distribution_files_1.parse_distribution_file_Alpine(int_0, str_0, distribution_fact_collector_0, distribution_fact_collector_0)
    var_2 = distribution_fact_collector_0.collect(bool_0, distribution_fact_collector_0)

def test_case_4():
    distribution_fact_collector_0 = module_0.DistributionFactCollector()
    float_0 = 2773.8670789289818
    list_0 = None
    distribution_files_0 = module_0.DistributionFiles(distribution_fact_collector_0)
    str_0 = '_2hlKn'
    float_1 = -1310.632
    var_0 = distribution_files_0.parse_distribution_file_Mandriva(distribution_files_0, str_0, float_1, list_0)
    tuple_0 = (str_0, float_0, list_0)
    distribution_files_1 = module_0.DistributionFiles(tuple_0)
    var_1 = distribution_fact_collector_0.collect()

def test_case_5():
    int_0 = -1326
    dict_0 = {int_0: int_0}
    str_0 = '%E(yT/#>)\x0bO#)`\n$'
    distribution_fact_collector_0 = module_0.DistributionFactCollector()
    bool_0 = True
    distribution_files_0 = module_0.DistributionFiles(bool_0)
    var_0 = distribution_files_0.parse_distribution_file_NA(int_0, str_0, dict_0, distribution_fact_collector_0)

def test_case_6():
    str_0 = 'debian'
    float_0 = None
    str_1 = 'Linux'
    bool_0 = False
    distribution_files_0 = module_0.DistributionFiles(bool_0)
    var_0 = distribution_files_0.parse_distribution_file_Coreos(str_0, str_0, float_0, str_1)

def test_case_7():
    distribution_fact_collector_0 = module_0.DistributionFactCollector()
    var_0 = distribution_fact_collector_0.collect()
    str_0 = "WnMw-'U!LmB>iHFS:`"
    float_0 = -2081.0
    str_1 = '8xgyzxMxX'
    distribution_fact_collector_1 = module_0.DistributionFactCollector()
    distribution_files_0 = module_0.DistributionFiles(distribution_fact_collector_1)
    var_1 = distribution_files_0.parse_distribution_file_Flatcar(str_0, float_0, str_1, float_0)

def test_case_8():
    str_0 = 'HP-UX'
    list_0 = [str_0, str_0]
    bool_0 = True
    distribution_files_0 = module_0.DistributionFiles(bool_0)
    var_0 = distribution_files_0.parse_distribution_file_CentOS(list_0, str_0, list_0, str_0)
    var_1 = dict(ansible_machine=str_0, ansible_os_family=str_0, ansible_distribution=str_0)
    var_2 = dict(ansible_facts=var_1)

def test_case_9():
    bytes_0 = b'X\x85n\xa3\xee'
    distribution_files_0 = module_0.DistributionFiles(bytes_0)
    distribution_fact_collector_0 = module_0.DistributionFactCollector()
    var_0 = distribution_fact_collector_0.collect(distribution_files_0)

def test_case_10():
    float_0 = 60.0
    distribution_0 = module_0.Distribution(float_0)
    var_0 = distribution_0.get_distribution_FreeBSD()

def test_case_11():
    str_0 = '7$-h=NbF>0'
    set_0 = {str_0}
    bytes_0 = b'&SA\x12_\xb1\\\x93\xf8\xd2'
    dict_0 = {}
    tuple_0 = (dict_0, set_0, bytes_0, set_0)
    tuple_1 = ()
    distribution_files_0 = module_0.DistributionFiles(tuple_1)
    var_0 = distribution_files_0.parse_distribution_file_Debian(set_0, str_0, bytes_0, tuple_0)