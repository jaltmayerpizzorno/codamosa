# Automatically generated by Pynguin.
import pypara.dcc as module_0

def test_case_0():
    try:
        date_0 = None
        decimal_0 = module_0.dcfc_act_act_icma(date_0, date_0, date_0)
    except BaseException:
        pass

def test_case_1():
    try:
        date_0 = None
        str_0 = ''
        d_c_c_registry_machinery_0 = module_0.DCCRegistryMachinery()
        optional_0 = d_c_c_registry_machinery_0.find(str_0)
        decimal_0 = module_0.dcfc_act_365_f(date_0, date_0, date_0)
    except BaseException:
        pass

def test_case_2():
    try:
        d_c_c_registry_machinery_0 = module_0.DCCRegistryMachinery()
        date_0 = None
        decimal_0 = module_0.dcfc_act_365_a(date_0, date_0, date_0)
    except BaseException:
        pass

def test_case_3():
    try:
        date_0 = None
        decimal_0 = module_0.dcfc_30_e_plus_360(date_0, date_0, date_0)
    except BaseException:
        pass

def test_case_4():
    try:
        date_0 = None
        decimal_0 = module_0.dcfc_nl_365(date_0, date_0, date_0)
    except BaseException:
        pass

def test_case_5():
    try:
        date_0 = None
        d_c_c_registry_machinery_0 = module_0.DCCRegistryMachinery()
        decimal_0 = module_0.dcfc_30_360_isda(date_0, date_0, date_0)
    except BaseException:
        pass

def test_case_6():
    try:
        date_0 = None
        d_c_c_registry_machinery_0 = module_0.DCCRegistryMachinery()
        str_0 = 'KYD'
        optional_0 = d_c_c_registry_machinery_0.find(str_0)
        d_c_c_registry_machinery_1 = module_0.DCCRegistryMachinery()
        optional_1 = d_c_c_registry_machinery_0.find(str_0)
        decimal_0 = module_0.dcfc_30_360_german(date_0, date_0, date_0)
    except BaseException:
        pass

def test_case_7():
    try:
        date_0 = None
        decimal_0 = module_0.dcfc_30_360_us(date_0, date_0, date_0)
    except BaseException:
        pass

def test_case_8():
    try:
        date_0 = None
        decimal_0 = module_0.dcfc_act_act(date_0, date_0, date_0)
    except BaseException:
        pass

def test_case_9():
    try:
        date_0 = None
        decimal_0 = module_0.dcfc_act_365_l(date_0, date_0, date_0)
    except BaseException:
        pass

def test_case_10():
    try:
        date_0 = None
        d_c_c_registry_machinery_0 = module_0.DCCRegistryMachinery()
        decimal_0 = module_0.dcfc_act_360(date_0, date_0, date_0)
    except BaseException:
        pass

def test_case_11():
    try:
        date_0 = None
        decimal_0 = module_0.dcfc_30_e_360(date_0, date_0, date_0)
    except BaseException:
        pass

def test_case_12():
    try:
        date_0 = None
        str_0 = 'l~g\\J='
        d_c_c_registry_machinery_0 = module_0.DCCRegistryMachinery()
        optional_0 = d_c_c_registry_machinery_0.find(str_0)
        str_1 = '3=-W`i\r*/5350#?'
        int_0 = 1137
        list_0 = [date_0, str_1, d_c_c_registry_machinery_0, int_0]
        d_c_c_0 = module_0.DCC(*list_0)
        decimal_0 = d_c_c_0.calculate_daily_fraction(date_0, date_0, date_0, int_0)
    except BaseException:
        pass

def test_case_13():
    try:
        date_0 = None
        str_0 = ''
        d_c_c_registry_machinery_0 = module_0.DCCRegistryMachinery()
        optional_0 = d_c_c_registry_machinery_0.find(str_0)
        list_0 = [d_c_c_registry_machinery_0, optional_0, date_0, optional_0]
        d_c_c_0 = module_0.DCC(*list_0)
        decimal_0 = d_c_c_0.calculate_fraction(date_0, date_0, date_0)
    except BaseException:
        pass

def test_case_14():
    try:
        date_0 = None
        d_c_c_registry_machinery_0 = module_0.DCCRegistryMachinery()
        str_0 = '3=-W`i\r*/5350#?'
        int_0 = 1137
        list_0 = [date_0, str_0, d_c_c_registry_machinery_0, int_0]
        d_c_c_0 = module_0.DCC(*list_0)
        d_c_c_registry_machinery_0.register(d_c_c_0)
    except BaseException:
        pass