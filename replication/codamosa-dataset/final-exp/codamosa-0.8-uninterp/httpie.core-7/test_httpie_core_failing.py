# Automatically generated by Pynguin.
import argparse as module_0
import httpie.context as module_1
import httpie.core as module_2

def test_case_0():
    try:
        namespace_0 = module_0.Namespace()
        environment_0 = module_1.Environment()
        exit_status_0 = module_2.program(namespace_0, environment_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = b'\xdfbW\xd5\xba_\x01r\x13\xbcF@\x83];~\x0e\x01'
        list_0 = [bytes_0]
        str_0 = 'gQm'
        list_1 = module_2.decode_raw_args(list_0, str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'httpie.py'
        str_1 = [str_0, str_0]
        exit_status_0 = module_2.main(str_1)
        str_2 = [str_0, str_1]
        exit_status_1 = module_2.main(str_2)
    except BaseException:
        pass

def test_case_3():
    try:
        namespace_0 = module_0.Namespace()
        environment_0 = module_1.Environment()
        exit_status_0 = module_2.program(namespace_0, environment_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'httpie'
        str_1 = 'GET'
        str_2 = 'https://httpbin.org/get'
        str_3 = 'foo:bar'
        str_4 = 'baz'
        str_5 = 'bin'
        str_6 = "Authorization: 'oauth' something"
        str_7 = [str_0, str_1, str_2, str_3, str_4, str_5, str_6]
        environment_0 = module_1.Environment()
        exit_status_0 = module_2.program(str_7, environment_0)
    except BaseException:
        pass