# Automatically generated by Pynguin.
import ansible.plugins.action.wait_for_connection as module_0

def test_case_0():
    try:
        timed_out_exception_0 = module_0.TimedOutException()
        bool_0 = False
        dict_0 = {timed_out_exception_0: timed_out_exception_0, timed_out_exception_0: timed_out_exception_0, timed_out_exception_0: bool_0, bool_0: bool_0}
        set_0 = {bool_0}
        str_0 = 'no_cache'
        list_0 = [bool_0, bool_0, set_0, set_0]
        tuple_0 = (list_0, set_0)
        str_1 = 'onestop'
        action_module_0 = module_0.ActionModule(timed_out_exception_0, dict_0, set_0, str_0, tuple_0, str_1)
        int_0 = 8
        list_1 = [str_0]
        action_module_1 = module_0.ActionModule(action_module_0, int_0, set_0, int_0, list_1, bool_0)
        float_0 = 0.1
        complex_0 = None
        str_2 = '|E4{{!$&ahM8mp\x0c,'
        str_3 = 'R1Cuv5e'
        str_4 = '32'
        action_module_2 = module_0.ActionModule(str_2, dict_0, str_3, list_0, str_4, list_0)
        var_0 = action_module_2.do_until_success_or_timeout(float_0, bool_0, complex_0, timed_out_exception_0)
    except BaseException:
        pass

def test_case_1():
    try:
        timed_out_exception_0 = module_0.TimedOutException()
        bool_0 = False
        dict_0 = {timed_out_exception_0: timed_out_exception_0, timed_out_exception_0: timed_out_exception_0, timed_out_exception_0: bool_0, bool_0: bool_0}
        set_0 = {bool_0}
        str_0 = 'no_cache'
        list_0 = [bool_0, bool_0, set_0, set_0]
        tuple_0 = (list_0, set_0)
        str_1 = 'onestop'
        action_module_0 = module_0.ActionModule(timed_out_exception_0, dict_0, set_0, str_0, tuple_0, str_1)
        int_0 = 8
        list_1 = [str_0]
        action_module_1 = module_0.ActionModule(action_module_0, int_0, set_0, int_0, list_1, bool_0)
        var_0 = action_module_1.run()
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = "uJ(tz@9K:SC)+'"
        list_0 = []
        timed_out_exception_0 = module_0.TimedOutException()
        set_0 = {timed_out_exception_0, timed_out_exception_0, timed_out_exception_0}
        bool_0 = False
        str_1 = '$"6O'
        bytes_0 = b'/\xb5u\x88\xb4H:\x0fV\xa0\xb5'
        action_module_0 = None
        list_1 = [action_module_0, bytes_0]
        float_0 = -1313.6
        bool_1 = True
        str_2 = 'W*st\tc[Umy9\\g;E'
        timed_out_exception_1 = module_0.TimedOutException()
        action_module_1 = module_0.ActionModule(bytes_0, list_1, float_0, bool_1, str_2, timed_out_exception_1)
        action_module_2 = module_0.ActionModule(set_0, bool_0, timed_out_exception_0, str_1, timed_out_exception_0, action_module_1)
        var_0 = action_module_2.run(str_0, list_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '\\Z1'
        list_0 = None
        set_0 = {list_0, str_0}
        list_1 = []
        timed_out_exception_0 = module_0.TimedOutException(*list_1)
        timed_out_exception_1 = module_0.TimedOutException()
        float_0 = -3498.832
        bool_0 = True
        float_1 = 538.3
        float_2 = -1844.034
        dict_0 = {}
        float_3 = -239.0
        action_module_0 = module_0.ActionModule(float_2, set_0, dict_0, str_0, str_0, float_3)
        var_0 = action_module_0.do_until_success_or_timeout(float_0, bool_0, bool_0, float_1)
    except BaseException:
        pass