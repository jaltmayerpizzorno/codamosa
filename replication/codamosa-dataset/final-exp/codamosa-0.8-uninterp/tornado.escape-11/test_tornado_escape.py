# Automatically generated by Pynguin.
import tornado.escape as module_0

def test_case_0():
    pass

def test_case_1():
    str_0 = 'ah'
    str_1 = module_0.squeeze(str_0)

def test_case_2():
    str_0 = 'A test http://example.com/ with a link and some tex@ http://example.org/afterwards'
    str_1 = module_0.url_escape(str_0)

def test_case_3():
    str_0 = '+gj\t$RGb@'
    var_0 = module_0.url_unescape(str_0, str_0)

def test_case_4():
    str_0 = "\x0cg.^'"
    bool_0 = True
    dict_0 = module_0.parse_qs_bytes(str_0, bool_0)
    str_1 = '>Ks\n/skU(tl&T/nK'
    str_2 = module_0.squeeze(str_1)
    any_0 = module_0.recursive_unicode(str_1)
    str_3 = module_0.xhtml_escape(str_1)

def test_case_5():
    bytes_0 = b'\xb6\x8a\xef'
    bool_0 = None
    dict_0 = module_0.parse_qs_bytes(bytes_0, bool_0)
    str_0 = ">=`jCG\\X'W\x0bH((rz"
    optional_0 = module_0.utf8(str_0)
    dict_1 = module_0.parse_qs_bytes(bytes_0)
    str_1 = 'p$~\r2\r)~\ny\nu#+zr 0=M'
    var_0 = module_0.url_unescape(str_1)

def test_case_6():
    bytes_0 = b'3\x8e\xd7\xd2S\xdb\x90\x8a\xb6\xfd:\xc7:\xf5\x9ar\xae'
    optional_0 = module_0.utf8(bytes_0)

def test_case_7():
    int_0 = 65
    any_0 = module_0.recursive_unicode(int_0)

def test_case_8():
    str_0 = 'Hello http://tornadoweb.org!'
    str_1 = module_0.linkify(str_0)

def test_case_9():
    bytes_0 = b'\xfc\xce\xf8\xe7\xe0\x9a.\tJ\xdd\x98_'
    bool_0 = False
    str_0 = module_0.url_escape(bytes_0, bool_0)
    str_1 = 'A test http://example.com/ with a link and some text http://example.org/afterwards'
    bool_1 = True
    str_2 = module_0.linkify(str_1, bool_1, str_1)

def test_case_10():
    str_0 = '}SG|:?(~'
    str_1 = module_0.xhtml_escape(str_0)
    any_0 = module_0.recursive_unicode(str_0)
    str_2 = '%4vDU=A!=*'
    var_0 = module_0.url_unescape(str_2)
    list_0 = []
    str_3 = module_0.linkify(str_0, list_0)
    str_4 = 'certfile'
    bool_0 = False
    var_1 = module_0.url_unescape(str_4, str_2, bool_0)
    str_5 = module_0.linkify(str_0, str_0)
    optional_0 = module_0.to_unicode(str_5)
    var_2 = module_0.url_unescape(str_0)

def test_case_11():
    str_0 = '<script>http://www.baidu.com</script>'
    str_1 = module_0.linkify(str_0)

def test_case_12():
    str_0 = "7}$5Fbf>!q'"
    optional_0 = module_0.utf8(str_0)
    bytes_0 = b''
    bool_0 = True
    str_1 = module_0.linkify(bytes_0, bool_0)
    str_2 = 'H[J`'
    var_0 = module_0.url_unescape(str_2, str_2)
    any_0 = module_0.recursive_unicode(str_2)
    str_3 = module_0.xhtml_unescape(bytes_0)
    optional_1 = module_0.utf8(str_2)
    str_4 = 'u\x0b'
    optional_2 = module_0.to_unicode(str_4)
    str_5 = module_0.xhtml_escape(str_1)
    var_1 = module_0.url_unescape(str_2)
    any_1 = module_0.recursive_unicode(optional_1)
    bool_1 = True
    var_2 = module_0.url_unescape(str_4, bool_1)
    str_6 = module_0.squeeze(str_1)
    optional_3 = module_0.to_unicode(bytes_0)
    optional_4 = module_0.utf8(str_1)
    str_7 = module_0.squeeze(str_2)
    tuple_0 = ()
    any_2 = module_0.recursive_unicode(tuple_0)
    any_3 = module_0.recursive_unicode(optional_1)
    any_4 = module_0.recursive_unicode(bytes_0)

def test_case_13():
    str_0 = "7}$5Fbf>!q'"
    optional_0 = module_0.utf8(str_0)
    bytes_0 = b''
    bool_0 = True
    str_1 = module_0.linkify(bytes_0, bool_0)
    str_2 = 'PxY(zsE6 `'
    any_0 = module_0.recursive_unicode(str_2)
    str_3 = module_0.json_encode(str_0)
    str_4 = module_0.url_escape(str_3)
    var_0 = module_0.url_unescape(str_0)
    str_5 = module_0.xhtml_unescape(bytes_0)
    none_type_0 = None
    var_1 = module_0.url_unescape(str_0, none_type_0)
    dict_0 = module_0.parse_qs_bytes(str_3)
    str_6 = 'S>VtX\\RS6%1'
    str_7 = module_0.xhtml_escape(str_6)

def test_case_14():
    str_0 = "7}$5Fbf>!q'"
    optional_0 = module_0.utf8(str_0)
    str_1 = module_0.xhtml_unescape(str_0)
    optional_1 = module_0.utf8(str_0)
    str_2 = module_0.xhtml_escape(str_0)
    str_3 = module_0.linkify(str_1)
    str_4 = module_0.xhtml_unescape(str_2)
    optional_2 = module_0.utf8(str_4)
    optional_3 = module_0.to_unicode(str_1)

def test_case_15():
    str_0 = 'A test http://example.com/ with a link and some text http://example.org/afterwards'
    bool_0 = True
    list_0 = []
    str_1 = module_0.linkify(str_0)
    any_0 = module_0.recursive_unicode(list_0)
    str_2 = module_0.xhtml_escape(str_1)
    str_3 = module_0.xhtml_escape(str_1)
    str_4 = module_0.linkify(str_3)
    str_5 = module_0.linkify(str_2, bool_0)
    str_6 = module_0.linkify(str_0)
    str_7 = module_0.linkify(str_5)

def test_case_16():
    str_0 = 'I do not like www.google.com or www.google.org'
    bool_0 = False
    str_1 = module_0.linkify(str_0, bool_0, str_0, bool_0)

def test_case_17():
    str_0 = 'A test http://example.com/ with a link and some text http://example.org/afterwards'
    str_1 = module_0.linkify(str_0, str_0)

def test_case_18():
    str_0 = 'A test http://example.com/ with a link and some text http://example.org/afterwards'
    bool_0 = False
    bool_1 = None
    list_0 = [str_0]
    str_1 = module_0.linkify(str_0, bool_0, str_0, bool_1, list_0)

def test_case_19():
    str_0 = 'A test http://example.com/ with a link and some text http://example.org/afterwards'
    str_1 = module_0.url_escape(str_0)
    bool_0 = True
    str_2 = module_0.linkify(str_0, bool_0, str_1, bool_0)

def test_case_20():
    str_0 = 'http://example.comc&amc;quo'
    bool_0 = True
    list_0 = []
    str_1 = module_0.linkify(str_0, bool_0, list_0)
    any_0 = module_0.recursive_unicode(bool_0)
    any_1 = module_0.recursive_unicode(str_0)
    str_2 = module_0.xhtml_escape(str_1)
    str_3 = module_0.xhtml_escape(str_2)
    str_4 = module_0.linkify(str_1, list_0)
    str_5 = module_0.linkify(str_4)
    str_6 = module_0.linkify(str_5, list_0)

def test_case_21():
    str_0 = 'Do you like www.tornadoweb.org?'
    bool_0 = False
    bool_1 = False
    str_1 = 'C5\\;@-}4+V'
    list_0 = [str_1, str_1, str_1]
    str_2 = module_0.linkify(str_0, bool_0, bool_1, list_0)
    str_3 = 'http://x.co/path?a=b&c=d'
    str_4 = module_0.linkify(str_2, bool_0, str_3)
    str_5 = module_0.linkify(str_3, str_3)