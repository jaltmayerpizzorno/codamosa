# Automatically generated by Pynguin.
import tornado.escape as module_0

def test_case_0():
    try:
        bytes_0 = b'\xc3\x1f'
        str_0 = module_0.xhtml_escape(bytes_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = b'\x991\xe3\xd7'
        str_0 = module_0.xhtml_unescape(bytes_0)
    except BaseException:
        pass

def test_case_2():
    try:
        int_0 = -1775
        str_0 = module_0.json_encode(int_0)
        str_1 = 'http://example.com/&amp;amp;amp;amp;quo&amp;quot;False&amp;gt;http://example.com/&amp;amp;amp;amp;quo&amp;lt;/a&amp;gt'
        list_0 = None
        str_2 = module_0.linkify(str_1, str_1, list_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '_IC,j16'
        any_0 = module_0.json_decode(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        int_0 = -3995
        optional_0 = module_0.utf8(int_0)
    except BaseException:
        pass

def test_case_5():
    try:
        int_0 = -2119
        optional_0 = module_0.to_unicode(int_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'A test http://example.com/ with a link and some text http://example.org/afterwards'
        list_0 = []
        optional_0 = module_0.utf8(str_0)
        any_0 = module_0.recursive_unicode(optional_0)
        str_1 = module_0.linkify(str_0)
        any_1 = module_0.recursive_unicode(list_0)
        str_2 = module_0.xhtml_escape(str_1)
        str_3 = module_0.squeeze(str_1)
        str_4 = module_0.xhtml_escape(str_1)
        any_2 = module_0.recursive_unicode(list_0)
        bool_0 = False
        list_1 = [str_2, str_1]
        str_5 = module_0.xhtml_unescape(str_4)
        str_6 = module_0.linkify(str_4, str_1, bool_0, list_1)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'Mtz'
        bool_0 = True
        str_1 = module_0.linkify(str_0, bool_0, bool_0)
    except BaseException:
        pass

def test_case_8():
    try:
        dict_0 = {}
        any_0 = module_0.recursive_unicode(dict_0)
        str_0 = 'http://example.com/&amp;quo'
        bool_0 = True
        list_0 = []
        str_1 = module_0.linkify(str_0, bool_0, list_0)
        str_2 = module_0.xhtml_escape(str_0)
        str_3 = module_0.xhtml_escape(str_1)
        bool_1 = True
        str_4 = module_0.linkify(str_3, bool_1, str_3, list_0)
        str_5 = 'bn_IN'
        str_6 = module_0.xhtml_escape(str_5)
        list_1 = [str_0]
        str_7 = module_0.linkify(str_3, bool_0, list_1)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = "7}$5Fbf>!q'"
        optional_0 = module_0.utf8(str_0)
        bytes_0 = b''
        str_1 = module_0.xhtml_unescape(str_0)
        optional_1 = module_0.utf8(str_0)
        str_2 = 'u\x0b'
        optional_2 = module_0.to_unicode(str_0)
        str_3 = module_0.json_encode(str_2)
        str_4 = module_0.url_escape(str_1)
        var_0 = module_0.url_unescape(bytes_0)
        str_5 = None
        dict_0 = module_0.parse_qs_bytes(bytes_0)
        bool_0 = None
        var_1 = module_0.url_unescape(str_1, str_5, bool_0)
        str_6 = 'g$?Cx_|oAp!~h}UxH3<7'
        any_0 = module_0.json_decode(str_6)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = "7}$5Fbf>!q'"
        optional_0 = module_0.utf8(str_0)
        bytes_0 = b''
        str_1 = module_0.xhtml_unescape(str_0)
        optional_1 = module_0.utf8(str_0)
        str_2 = 'u\x0b'
        optional_2 = module_0.to_unicode(str_0)
        str_3 = module_0.xhtml_escape(str_0)
        str_4 = module_0.linkify(str_1)
        str_5 = 'H[J`'
        any_0 = module_0.recursive_unicode(str_0)
        str_6 = module_0.xhtml_unescape(str_3)
        optional_3 = module_0.to_unicode(str_2)
        any_1 = module_0.recursive_unicode(bytes_0)
        str_7 = module_0.json_encode(str_3)
        bool_0 = False
        str_8 = module_0.url_escape(str_1, bool_0)
        var_0 = module_0.url_unescape(str_8)
        bytes_1 = b'\xefa\x92\xbd}a\t\xd6\xf8\xf5C\x93\xbe\xcd\x11\xe6X'
        var_1 = module_0.url_unescape(bytes_0)
        dict_0 = module_0.parse_qs_bytes(bytes_1)
        any_2 = module_0.recursive_unicode(str_4)
        bytes_2 = b''
        list_0 = [bytes_0, bytes_2, bytes_1]
        bytes_3 = b'[6\xda\x9df%\x95\x7f'
        bytes_4 = b'\x9d\xeb\xc3\xcb\xc2Q'
        bytes_5 = b'\xce[9\xcc\x06\xa8\xd7\xb6\x19'
        list_1 = [bytes_3, bytes_2, bytes_4, bytes_5]
        dict_1 = {str_1: list_0, str_7: list_0, str_5: list_1}
        any_3 = module_0.recursive_unicode(dict_1)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = 'A test http://example.com/ with a link and some text http://example.org/afterwards'
        list_0 = [str_0]
        str_1 = module_0.linkify(str_0)
        any_0 = module_0.recursive_unicode(list_0)
        str_2 = module_0.xhtml_escape(str_1)
        str_3 = module_0.xhtml_escape(str_1)
        any_1 = module_0.recursive_unicode(list_0)
        bool_0 = False
        list_1 = [str_2, str_1]
        str_4 = module_0.xhtml_unescape(str_3)
        str_5 = module_0.linkify(str_3, str_1, bool_0, list_1)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = "7}$5Fbf>!q'"
        optional_0 = module_0.utf8(str_0)
        bytes_0 = b''
        bool_0 = True
        str_1 = module_0.xhtml_unescape(str_0)
        optional_1 = module_0.utf8(str_0)
        optional_2 = module_0.to_unicode(str_0)
        str_2 = module_0.xhtml_escape(str_0)
        str_3 = module_0.linkify(str_1)
        var_0 = module_0.url_unescape(str_2, bool_0)
        list_0 = []
        bytes_1 = b'\xd9\xc6\x9e\xa3Qw\xf7\x14'
        list_1 = [bytes_0, bytes_1]
        str_4 = None
        dict_0 = {str_2: list_1, str_2: list_1, str_4: list_1}
        tuple_0 = (str_2, list_0, dict_0, bool_0)
        any_0 = module_0.recursive_unicode(tuple_0)
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = 'http://example.com/&amp;amp;amp;amp;quo&amp;quot;False&amp;gt;http://example.com/&amp;amp;amp;amp;quo&amp;lt;/a&amp;gt'
        list_0 = None
        str_1 = module_0.linkify(str_0, str_0, list_0)
    except BaseException:
        pass