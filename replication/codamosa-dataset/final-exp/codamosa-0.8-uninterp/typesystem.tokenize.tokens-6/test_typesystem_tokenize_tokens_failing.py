# Automatically generated by Pynguin.
import typesystem.tokenize.tokens as module_0

def test_case_0():
    try:
        var_0 = None
        token_0 = module_0.Token(var_0, var_0, var_0, var_0)
        var_1 = token_0 == token_0
    except BaseException:
        pass

def test_case_1():
    try:
        float_0 = -1252.0
        list_0 = [float_0, float_0, float_0]
        float_1 = 1667.6934
        int_0 = 2
        int_1 = 254
        token_0 = module_0.Token(float_0, int_1, int_0)
        token_1 = module_0.Token(float_1, int_0, int_0)
        token_2 = token_1.lookup(list_0)
    except BaseException:
        pass

def test_case_2():
    try:
        tuple_0 = ()
        int_0 = None
        int_1 = 392
        list_token_0 = module_0.ListToken(tuple_0, int_0, int_1)
        dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0, tuple_0: tuple_0, tuple_0: tuple_0}
        int_2 = 4
        str_0 = 'JJ -w=lq9\\'
        list_token_1 = module_0.ListToken(dict_0, int_2, int_2, str_0)
        list_0 = [int_1]
        int_3 = -1063
        int_4 = -1782
        token_0 = module_0.Token(list_token_1, int_3, int_4)
        token_1 = token_0.lookup_key(list_0)
    except BaseException:
        pass

def test_case_3():
    try:
        dict_0 = {}
        tuple_0 = ()
        list_0 = [dict_0, dict_0, tuple_0, dict_0]
        dict_token_0 = module_0.DictToken(*list_0, **dict_0)
        list_1 = []
        token_0 = dict_token_0.lookup(list_1)
        bool_0 = token_0.__eq__(dict_token_0)
        int_0 = 1101
        list_token_0 = module_0.ListToken(tuple_0, int_0, int_0)
        token_1 = module_0.Token(dict_0, int_0, int_0)
        str_0 = token_1.__repr__()
        str_1 = token_1.__repr__()
        list_2 = [bool_0, str_1]
        token_2 = token_1.lookup_key(list_2)
    except BaseException:
        pass

def test_case_4():
    try:
        dict_0 = {}
        tuple_0 = ()
        list_0 = [dict_0, dict_0, tuple_0, dict_0]
        dict_token_0 = module_0.DictToken(*list_0, **dict_0)
        list_1 = []
        token_0 = dict_token_0.lookup(list_1)
        bool_0 = token_0.__eq__(dict_token_0)
        int_0 = 2921
        int_1 = 3781
        list_token_0 = module_0.ListToken(list_1, int_0, int_1)
        bool_1 = token_0.__eq__(list_token_0)
        int_2 = 3688
        token_1 = module_0.Token(dict_0, int_2, int_2)
        str_0 = token_1.__repr__()
        bool_2 = token_1.__eq__(int_2)
        str_1 = token_1.__repr__()
        token_2 = token_0.lookup_key(list_1)
    except BaseException:
        pass

def test_case_5():
    try:
        var_0 = {}
        int_0 = 0
        dict_token_0 = module_0.DictToken()
    except BaseException:
        pass

def test_case_6():
    try:
        int_0 = 1
        int_1 = 2
        int_2 = 3
        str_0 = '  foo  '
        token_0 = module_0.Token(int_0, int_1, int_2, str_0)
        var_0 = token_0.string
        var_1 = var_0 == str_0
        var_2 = token_0.value
    except BaseException:
        pass

def test_case_7():
    try:
        dict_0 = {}
        tuple_0 = ()
        list_0 = [dict_0, dict_0, tuple_0, dict_0]
        dict_token_0 = module_0.DictToken(*list_0, **dict_0)
        list_1 = []
        token_0 = dict_token_0.lookup(list_1)
        int_0 = 3781
        list_token_0 = module_0.ListToken(list_1, int_0, int_0)
        bool_0 = token_0.__eq__(list_token_0)
        int_1 = None
        token_1 = module_0.Token(dict_0, int_1, int_1)
        str_0 = token_1.__repr__()
    except BaseException:
        pass

def test_case_8():
    try:
        dict_0 = {}
        tuple_0 = ()
        list_0 = [dict_0, dict_0, tuple_0, dict_0]
        dict_token_0 = module_0.DictToken(*list_0, **dict_0)
        list_1 = []
        token_0 = dict_token_0.lookup(list_1)
        bool_0 = token_0.__eq__(dict_token_0)
        int_0 = 2320
        token_1 = module_0.Token(dict_0, int_0, int_0)
        str_0 = token_1.__repr__()
        str_1 = token_1.__repr__()
        list_2 = [bool_0, str_1]
        token_2 = dict_token_0.lookup(list_2)
    except BaseException:
        pass

def test_case_9():
    try:
        int_0 = 1
        int_1 = 2
        int_2 = 3
        str_0 = '  foo  '
        token_0 = module_0.Token(int_0, int_1, int_2, str_0)
        var_0 = int_0 == str_0
        var_1 = token_0 == int_0
        var_2 = token_0.start.position
    except BaseException:
        pass

def test_case_10():
    try:
        int_0 = 2
        int_1 = 3
        str_0 = '  foo  '
        token_0 = module_0.Token(int_1, int_0, int_1, str_0)
        var_0 = token_0 == int_0
        var_1 = token_0.end.position
    except BaseException:
        pass

def test_case_11():
    try:
        int_0 = -2
        int_1 = -33
        str_0 = 'R(*TQ;T<IJ'
        token_0 = module_0.Token(int_1, int_0, int_1, str_0)
        var_0 = token_0 == int_0
        var_1 = token_0.end.position
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = 'pO(k^_*`u3i?C6)t3'
        dict_0 = {str_0: str_0}
        list_0 = [dict_0, str_0, str_0]
        dict_token_0 = module_0.DictToken(*list_0)
    except BaseException:
        pass

def test_case_13():
    try:
        dict_0 = {}
        tuple_0 = ()
        list_0 = [dict_0, dict_0, tuple_0, dict_0]
        dict_token_0 = module_0.DictToken(*list_0, **dict_0)
        list_1 = []
        token_0 = dict_token_0.lookup(list_1)
        bool_0 = token_0.__eq__(dict_token_0)
        list_2 = [dict_token_0]
        token_1 = token_0.lookup_key(list_2)
    except BaseException:
        pass

def test_case_14():
    try:
        dict_0 = {}
        tuple_0 = ()
        list_0 = [dict_0, dict_0, tuple_0, dict_0]
        dict_token_0 = module_0.DictToken(*list_0, **dict_0)
        list_1 = []
        token_0 = dict_token_0.lookup(list_1)
        bool_0 = token_0.__eq__(dict_token_0)
        int_0 = 2921
        int_1 = 3781
        list_token_0 = module_0.ListToken(list_0, int_0, int_1)
        bool_1 = token_0.__eq__(list_token_0)
    except BaseException:
        pass