# Automatically generated by Pynguin.
import typesystem.tokenize.tokens as module_0

def test_case_0():
    pass

def test_case_1():
    var_0 = None
    token_0 = module_0.Token(var_0, var_0, var_0, var_0)

def test_case_2():
    str_0 = 'I\r72'
    int_0 = 1521
    token_0 = module_0.Token(str_0, int_0, int_0)
    str_1 = token_0.__repr__()
    int_1 = -1217
    token_1 = module_0.Token(str_0, int_1, int_0)

def test_case_3():
    dict_0 = {}
    tuple_0 = ()
    list_0 = [dict_0, dict_0, tuple_0, dict_0]
    dict_token_0 = module_0.DictToken(*list_0, **dict_0)
    list_1 = []
    token_0 = dict_token_0.lookup(list_1)
    bool_0 = token_0.__eq__(dict_token_0)

def test_case_4():
    var_0 = None
    token_0 = module_0.Token(var_0, var_0, var_0, var_0)
    var_1 = token_0 == var_0

def test_case_5():
    bool_0 = True
    int_0 = 4
    int_1 = 1944
    scalar_token_0 = module_0.ScalarToken(bool_0, int_0, int_1)
    set_0 = {scalar_token_0, scalar_token_0, bool_0}
    int_2 = -1172
    token_0 = module_0.Token(set_0, int_2, int_0)

def test_case_6():
    dict_0 = {}
    tuple_0 = ()
    list_0 = [dict_0, dict_0, tuple_0, dict_0]
    dict_token_0 = module_0.DictToken(*list_0, **dict_0)

def test_case_7():
    int_0 = 1
    int_1 = 0
    str_0 = ''
    scalar_token_0 = module_0.ScalarToken(int_0, int_1, int_0, str_0)
    scalar_token_1 = module_0.ScalarToken(int_0, int_1, int_0, str_0)
    scalar_token_2 = module_0.ScalarToken(int_0, int_1, int_0, str_0)
    int_2 = 2
    scalar_token_3 = module_0.ScalarToken(int_2, int_1, int_0, str_0)
    var_0 = scalar_token_2 == scalar_token_3
    scalar_token_4 = module_0.ScalarToken(int_0, int_1, int_0, str_0)
    scalar_token_5 = module_0.ScalarToken(int_0, int_0, int_0, str_0)
    var_1 = scalar_token_4 == scalar_token_5
    scalar_token_6 = module_0.ScalarToken(int_0, int_1, int_0, str_0)
    scalar_token_7 = module_0.ScalarToken(int_0, int_1, int_2, str_0)
    var_2 = scalar_token_6 == scalar_token_7