# Automatically generated by Pynguin.
import ansible.module_utils.connection as module_0

def test_case_0():
    try:
        str_0 = 'on_create'
        str_1 = '/^[LJN(`r2.|`ofhq'
        var_0 = module_0.write_to_file_descriptor(str_0, str_1)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'W\n\x0cr5Pkf}4X?w(>'
        connection_0 = module_0.Connection(str_0)
        dict_0 = {str_0: str_0, str_0: connection_0}
        var_0 = module_0.send_data(dict_0, str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        list_0 = []
        var_0 = module_0.recv_data(list_0)
    except BaseException:
        pass

def test_case_3():
    try:
        float_0 = 0.0001
        connection_error_0 = module_0.ConnectionError(float_0)
        str_0 = 'apt'
        str_1 = 'b?,zV:w]KU'
        bytes_0 = b' A\xd3\xda\xf0\x14'
        dict_0 = {str_0: connection_error_0, str_1: bytes_0, str_0: str_1}
        var_0 = module_0.exec_command(dict_0, connection_error_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = '/var/tmp/ansible/test_platform_debug.sock'
        connection_0 = module_0.Connection(str_0)
        var_0 = connection_0.__rpc__(str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        float_0 = 0.001
        str_0 = '_:Fal'
        str_1 = 'Li-!>m,`c66,C'
        dict_0 = {str_0: float_0, str_0: float_0, str_1: str_0}
        connection_error_0 = module_0.ConnectionError(float_0, **dict_0)
        connection_0 = module_0.Connection(connection_error_0)
        list_0 = []
        var_0 = connection_0.send(list_0)
    except BaseException:
        pass

def test_case_6():
    try:
        dict_0 = None
        connection_0 = module_0.Connection(dict_0)
    except BaseException:
        pass

def test_case_7():
    try:
        int_0 = 1
        connection_0 = module_0.Connection(int_0)
        var_0 = connection_0.__rpc__(connection_0)
    except BaseException:
        pass

def test_case_8():
    try:
        int_0 = 0
        connection_0 = module_0.Connection(int_0)
        var_0 = module_0.recv_data(connection_0)
    except BaseException:
        pass

def test_case_9():
    try:
        int_0 = 1
        connection_0 = module_0.Connection(int_0)
        str_0 = 'sample'
        var_0 = connection_0.__rpc__(str_0)
    except BaseException:
        pass

def test_case_10():
    try:
        int_0 = 1032
        str_0 = '6,<7xD]U<=8@tnZAm+~'
        connection_0 = module_0.Connection(str_0)
        var_0 = connection_0.send(int_0)
    except BaseException:
        pass

def test_case_11():
    try:
        list_0 = []
        dict_0 = None
        tuple_0 = None
        str_0 = None
        dict_1 = {dict_0: str_0, str_0: str_0}
        bytes_0 = b'\x96P\xf0MI\x7f&\x16\xe4\xe6K\x11z)\xe7H'
        list_1 = [dict_1, bytes_0, str_0, dict_0]
        tuple_1 = (dict_0, tuple_0, tuple_0, list_1)
        connection_0 = module_0.Connection(tuple_1)
        var_0 = connection_0.__getattr__(list_0)
    except BaseException:
        pass