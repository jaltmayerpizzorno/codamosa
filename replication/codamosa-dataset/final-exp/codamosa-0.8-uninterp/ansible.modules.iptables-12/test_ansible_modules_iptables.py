# Automatically generated by Pynguin.
import ansible.modules.iptables as module_0

def test_case_0():
    pass

def test_case_1():
    str_0 = 'ansible.modules.iptables'
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.append_match_flag(str_0, str_0, str_0, dict_0)

def test_case_2():
    var_0 = module_0.main()

def test_case_3():
    int_0 = None
    float_0 = -1148.529943
    dict_0 = {float_0: float_0}
    var_0 = module_0.append_match_flag(float_0, float_0, dict_0, int_0)

def test_case_4():
    pass

def test_case_5():
    str_0 = '9e3>3\r0= fw6F|E'
    str_1 = 'nCscX-`[Im/)l4&G('
    float_0 = 1743.0
    var_0 = module_0.append_tcp_flags(str_0, str_1, float_0)

def test_case_6():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    str_0 = ':#1|T])|%=7h~\x0c8]'
    str_1 = 'Invalid type supplied for source option, it must be a string'
    dict_0 = {str_0: str_0, str_1: str_0}
    var_0 = module_0.append_match_flag(str_0, str_1, str_1, dict_0)
    str_2 = 'K9e3>3\r0= 0fw6F|E'
    str_3 = 'application/json'
    var_1 = module_0.append_param(list_0, str_2, dict_0, str_3)

def test_case_7():
    str_0 = ':#1|T])|%=7h~\x0c8]'
    str_1 = 'Invalid type supplied for source option, it must be a string'
    dict_0 = {str_0: str_0, str_1: str_0}
    var_0 = module_0.append_match_flag(str_0, str_1, str_1, dict_0)
    set_0 = set()
    str_2 = None
    float_0 = 4071.0
    str_3 = '/'
    var_1 = module_0.append_param(float_0, str_2, str_3, set_0)

def test_case_8():
    var_0 = []
    str_0 = 'match'
    str_1 = 'a'
    bool_0 = True
    var_1 = module_0.append_match_flag(var_0, str_0, str_1, bool_0)
    var_2 = []
    str_2 = 'negate'
    var_3 = module_0.append_match_flag(var_2, str_2, str_1, bool_0)