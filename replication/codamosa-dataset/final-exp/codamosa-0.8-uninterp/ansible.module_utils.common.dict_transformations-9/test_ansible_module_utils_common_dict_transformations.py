# Automatically generated by Pynguin.
import ansible.module_utils.common.dict_transformations as module_0

def test_case_0():
    str_0 = 'World'
    str_1 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.camel_dict_to_snake_dict(str_1, str_1)

def test_case_1():
    set_0 = set()
    var_0 = module_0.snake_dict_to_camel_dict(set_0)

def test_case_2():
    str_0 = 'Load the role argument spec data from the source file.\n\n        :param str role_name: The name of the role for which we want the argspec data.\n        :param str collection_path: Path to the collection containing the role. This\n            will be None for standard roles.\n        :param str role_path: Path to the standard role. This will be None for\n            collection roles.\n\n        We support two files containing the role arg spec data: either meta/main.yml\n        or meta/argument_spec.yml. The argument_spec.yml file will take precedence\n        over the meta/main.yml file, if it exists. Data is NOT combined between the\n        two files.\n\n        :returns: A dict of all data underneath the ``argument_specs`` top-level YAML\n            key in the argspec data file. Empty dict is returned if there is no data.\n        '
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    list_0 = [dict_0]
    float_0 = 2559.1
    var_0 = module_0.snake_dict_to_camel_dict(float_0)
    var_1 = module_0.snake_dict_to_camel_dict(list_0)

def test_case_3():
    str_0 = 'MaxResults'
    str_1 = 'NextToken'
    var_0 = []
    int_0 = 100
    str_2 = ''
    var_1 = {str_0: var_0, str_0: int_0, str_1: str_2, str_0: str_0}
    list_0 = None
    var_2 = module_0.snake_dict_to_camel_dict(list_0)
    bool_0 = True
    var_3 = module_0.camel_dict_to_snake_dict(var_1, bool_0, str_0)
    var_4 = module_0.snake_dict_to_camel_dict(var_3)

def test_case_4():
    str_0 = 'Hello'
    str_1 = 'FooBar'
    str_2 = 'Foo'
    str_3 = 'Word'
    str_4 = 'Baz'
    str_5 = {str_4: str_2}
    str_6 = ''
    str_7 = {str_0: str_3, str_1: str_5, str_2: str_6}
    str_8 = []
    var_0 = module_0.camel_dict_to_snake_dict(str_7, str_8)
    dict_0 = {str_6: str_5}
    str_9 = 'T+'
    var_1 = module_0.snake_dict_to_camel_dict(dict_0, str_9)

def test_case_5():
    tuple_0 = None
    str_0 = 'P-/ftu>\t+4"ev'
    var_0 = module_0.dict_merge(tuple_0, str_0)

def test_case_6():
    str_0 = 'Hello'
    str_1 = 'FooBar'
    str_2 = 'Foo'
    str_3 = 'Word'
    str_4 = 'Baz'
    str_5 = {str_4: str_2}
    str_6 = ''
    str_7 = {str_0: str_3, str_1: str_5, str_2: str_6}
    str_8 = []
    var_0 = module_0.camel_dict_to_snake_dict(str_7, str_8)

def test_case_7():
    str_0 = '\x0cT|96eq.QWPc\t>ZK'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    list_0 = [dict_0]
    var_0 = module_0.snake_dict_to_camel_dict(list_0)
    int_0 = 3122
    var_1 = module_0.camel_dict_to_snake_dict(dict_0, int_0)

def test_case_8():
    str_0 = 'a'
    int_0 = 1
    int_1 = {str_0: int_0}
    str_1 = 'b'
    int_2 = 2
    int_3 = {str_1: int_2}
    var_0 = module_0.dict_merge(int_1, int_3)
    int_4 = {str_0: int_0}
    int_5 = {str_0: int_2}
    var_1 = module_0.dict_merge(int_4, int_5)
    int_6 = {}
    str_2 = 'y'
    int_7 = {str_2: int_2}
    var_2 = module_0.dict_merge(int_6, int_7)

def test_case_9():
    str_0 = 'Hello'
    str_1 = 'FooBar'
    str_2 = 'Foo'
    str_3 = 'World'
    str_4 = 'Baz'
    str_5 = {str_3: str_4}
    str_6 = {str_0: str_3, str_1: str_5, str_2: str_3}
    str_7 = [str_1]
    var_0 = module_0.camel_dict_to_snake_dict(str_6, str_7)

def test_case_10():
    bool_0 = True
    str_0 = 'B'
    var_0 = {}
    var_1 = {str_0: var_0}
    var_2 = {str_0: var_1}
    var_3 = module_0.camel_dict_to_snake_dict(var_2, bool_0)
    var_4 = {}
    var_5 = [var_4]
    var_6 = {str_0: var_5}
    var_7 = module_0.camel_dict_to_snake_dict(var_6, bool_0)

def test_case_11():
    var_0 = {}
    var_1 = {}
    var_2 = module_0.recursive_diff(var_0, var_1)
    int_0 = 1
    str_0 = 'b'
    int_1 = 3
    var_3 = {int_0: int_0, str_0: str_0, int_1: int_1}
    str_1 = '0'
    var_4 = {int_0: int_0, str_0: str_1, int_1: int_1}
    var_5 = module_0.recursive_diff(var_3, var_4)
    var_6 = {int_0: int_0, str_0: str_1, int_1: int_1}
    str_2 = 'c'
    str_3 = '5'
    var_7 = {int_0: int_0, str_0: str_1, int_1: int_1, str_2: str_3}
    var_8 = module_0.recursive_diff(var_6, var_7)

def test_case_12():
    var_0 = {}
    var_1 = {}
    var_2 = module_0.recursive_diff(var_0, var_1)
    int_0 = 1
    str_0 = 'b'
    int_1 = 3
    var_3 = {int_0: int_0, str_0: str_0, int_1: int_1}
    str_1 = '0'
    var_4 = {int_0: int_0, str_0: str_1, int_1: int_1}
    var_5 = module_0.recursive_diff(var_3, var_4)
    var_6 = {int_0: int_0, str_0: str_1, int_1: int_1}
    str_2 = 'c'
    str_3 = 'l'
    var_7 = {int_0: int_0, str_0: str_1, str_2: str_3}
    var_8 = module_0.recursive_diff(var_6, var_7)

def test_case_13():
    str_0 = 'HTTPEndpoint'
    str_1 = 'HTTPSEndpoint'
    str_2 = 'attribute'
    str_3 = 'link'
    str_4 = 'a'
    str_5 = 'b'
    str_6 = [str_4, str_5, str_5]
    str_7 = 'link1'
    str_8 = {str_2: str_6, str_3: str_7}
    str_9 = [str_4, str_5, str_8]
    str_10 = {str_2: str_9, str_3: str_7}
    str_11 = {str_0: str_8, str_1: str_10}
    var_0 = module_0.camel_dict_to_snake_dict(str_11)

def test_case_14():
    str_0 = 'HTTPEndpoint'
    str_1 = 'HTTPSEndpoint'
    str_2 = 'attribute'
    str_3 = 'link'
    str_4 = 'a'
    str_5 = 'b'
    str_6 = [str_4, str_5, str_0]
    str_7 = 'link1'
    str_8 = {str_2: str_6, str_3: str_7}
    str_9 = [str_4, str_5, str_6]
    str_10 = {str_2: str_9, str_3: str_7}
    str_11 = {str_0: str_8, str_1: str_10}
    var_0 = module_0.camel_dict_to_snake_dict(str_11)

def test_case_15():
    str_0 = 'a'
    int_0 = 1
    int_1 = {str_0: int_0}
    str_1 = 'b'
    int_2 = 2
    int_3 = {str_1: int_2}
    var_0 = module_0.dict_merge(int_1, int_3)
    int_4 = {str_0: int_0}
    int_5 = {str_0: int_2}
    var_1 = module_0.dict_merge(int_4, int_5)
    str_2 = 'x'
    int_6 = {str_2: int_0}
    int_7 = {str_0: int_6}
    str_3 = 'y'
    int_8 = {str_3: int_2}
    int_9 = {str_0: int_8}
    var_2 = module_0.dict_merge(int_7, int_9)

def test_case_16():
    str_0 = 'InstanceIds'
    str_1 = 'MaxResults'
    str_2 = 'NextToken'
    var_0 = []
    int_0 = 100
    str_3 = ''
    str_4 = 'tag_key'
    str_5 = {str_4: str_2}
    var_1 = {str_0: var_0, str_1: int_0, str_2: str_3, str_3: str_5}
    bool_0 = True
    str_6 = [str_3]
    var_2 = module_0.camel_dict_to_snake_dict(var_1, bool_0, str_6)
    var_3 = module_0.snake_dict_to_camel_dict(var_2)

def test_case_17():
    str_0 = 'A'
    var_0 = module_0.snake_dict_to_camel_dict(str_0)
    var_1 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_2 = {str_0: var_1}
    bool_0 = True
    var_3 = module_0.camel_dict_to_snake_dict(var_2, bool_0)
    bool_1 = False
    var_4 = module_0.camel_dict_to_snake_dict(var_1, var_1)
    str_1 = 'B'
    var_5 = {str_0: var_3}
    var_6 = {str_1: var_5}
    float_0 = -1957.375
    var_7 = module_0.snake_dict_to_camel_dict(float_0)
    var_8 = {str_0: var_6}
    var_9 = module_0.camel_dict_to_snake_dict(var_8, bool_1)
    var_10 = [var_5]
    var_11 = {str_0: var_10}
    var_12 = module_0.camel_dict_to_snake_dict(var_11, var_9, var_1)

def test_case_18():
    str_0 = 'InstanceIds'
    str_1 = 'MaxResults'
    str_2 = 'NextToken'
    str_3 = 'Tags'
    var_0 = []
    int_0 = 100
    str_4 = ''
    str_5 = ';@@_'
    str_6 = 'tag_value'
    str_7 = {str_5: str_6}
    var_1 = {str_0: var_0, str_1: int_0, str_2: str_4, str_3: str_7}
    bool_0 = True
    str_8 = [str_3]
    var_2 = module_0.camel_dict_to_snake_dict(var_1, bool_0, str_8)
    var_3 = module_0.snake_dict_to_camel_dict(var_2)