# Automatically generated by Pynguin.
import ansible.plugins.action.pause as module_0

def test_case_0():
    try:
        set_0 = set()
        float_0 = 1.0
        var_0 = module_0.timeout_handler(set_0, float_0)
    except BaseException:
        pass

def test_case_1():
    try:
        float_0 = -4102.73326
        list_0 = [float_0, float_0]
        var_0 = module_0.clear_line(list_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'H'
        bytes_0 = b'H\x7f'
        int_0 = 847
        set_0 = {bytes_0, int_0, bytes_0}
        bool_0 = False
        ansible_timeout_exceeded_0 = module_0.AnsibleTimeoutExceeded()
        bytes_1 = b'\xc4k\xca\xc4\x1dg[0\n\xd5o\xa9\x1c|\xd6)'
        action_module_0 = module_0.ActionModule(bytes_0, int_0, set_0, bool_0, ansible_timeout_exceeded_0, bytes_1)
        var_0 = action_module_0.run(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        ansible_timeout_exceeded_0 = module_0.AnsibleTimeoutExceeded()
        str_0 = '9)oNzRsz\t\n(-'
        list_0 = [ansible_timeout_exceeded_0, str_0, str_0, str_0]
        set_0 = set()
        str_1 = ''
        dict_0 = {ansible_timeout_exceeded_0: str_1}
        int_0 = 2413
        str_2 = '\t*'
        tuple_0 = (int_0, str_2)
        bool_0 = False
        float_0 = -384.846327
        list_1 = [float_0, list_0, ansible_timeout_exceeded_0]
        action_module_0 = module_0.ActionModule(tuple_0, list_0, bool_0, tuple_0, float_0, list_1)
        var_0 = action_module_0.run(set_0, dict_0)
    except BaseException:
        pass