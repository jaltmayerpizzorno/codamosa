# Automatically generated by Pynguin.
import dataclasses_json.mm as module_0
import marshmallow.fields as module_1

def test_case_0():
    try:
        str_0 = None
        str_1 = 'M\r,6s!F>4XH'
        bytes_0 = b'b\xb4\x89\xf8\xd4\x87B\xa0\xd7\xe1\x1auZ\x81\x1c\x15\xc5'
        dict_0 = {str_0: str_0, str_1: bytes_0}
        list_0 = [dict_0, dict_0, dict_0, dict_0]
        bool_0 = False
        str_2 = '\n        Return the parameters that will be added to the schema dump.\n        '
        str_3 = '{%d0ci8'
        dict_1 = {str_2: str_2, str_3: str_2}
        iso_field_0 = module_0._IsoField(dump_default=list_0, attribute=str_1, dump_only=bool_0, error_messages=dict_1)
        dict_2 = {}
        bytes_1 = b'\xbc\xdav\xfd'
        str_4 = 'letter_case'
        list_1 = None
        union_field_0 = module_0._UnionField(bytes_1, str_4, list_1, **dict_2)
        str_5 = 'l^gvz;'
        var_0 = module_0.schema(union_field_0, iso_field_0, str_5)
    except BaseException:
        pass

def test_case_1():
    try:
        schema_f_0 = module_0.SchemaF()
    except BaseException:
        pass

def test_case_2():
    try:
        var_0 = {}
        var_1 = module_0.build_type(var_0, var_0, var_0, var_0, var_0)
    except BaseException:
        pass

def test_case_3():
    try:
        float_0 = module_1.Float()
        var_0 = module_0.build_type(float_0, float_0, float_0, float_0, float_0)
    except BaseException:
        pass

def test_case_4():
    try:
        var_0 = None
        tuple_0 = ()
        iterable_0 = None
        bool_0 = False
        iso_field_0 = module_0._IsoField(missing=var_0, default=var_0, validate=iterable_0, required=bool_0)
        var_1 = module_0.schema(var_0, tuple_0, iso_field_0)
    except BaseException:
        pass

def test_case_5():
    try:
        dict_0 = {}
        bytes_0 = b'\xbf\xc4\xf23\x10\x0b\x84\xdbO\xa2\xe34\xc5\xee#mIs\xe8'
        list_0 = [bytes_0, bytes_0]
        str_0 = 'ykmpa2JV*'
        bool_0 = True
        str_1 = ',R8+\n)A'
        dict_1 = {str_1: bytes_0}
        timestamp_field_0 = module_0._TimestampField(allow_none=str_0, load_only=bool_0, **dict_1)
        type_0 = module_0.build_schema(dict_0, bytes_0, list_0, timestamp_field_0)
    except BaseException:
        pass