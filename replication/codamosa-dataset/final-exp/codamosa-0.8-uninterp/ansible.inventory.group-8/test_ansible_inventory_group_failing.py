# Automatically generated by Pynguin.
import ansible.inventory.group as module_0

def test_case_0():
    try:
        group_0 = module_0.Group()
        var_0 = group_0.get_descendants()
        var_1 = group_0.__str__()
        bytes_0 = b'\x91'
        list_0 = [var_0, bytes_0, var_0]
        float_0 = -2782.163693
        var_2 = group_0.set_variable(list_0, float_0)
    except BaseException:
        pass

def test_case_1():
    try:
        group_0 = module_0.Group()
        str_0 = 'U8q ;1OR9!zg1%o.71'
        list_0 = [str_0, str_0, group_0]
        var_0 = group_0.__setstate__(list_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'pv8_ DTR ='
        group_0 = module_0.Group()
        var_0 = group_0.deserialize(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        group_0 = module_0.Group()
        var_0 = group_0.clear_hosts_cache()
        group_1 = module_0.Group()
        var_1 = group_1.get_name()
        var_2 = group_0.get_descendants()
        var_3 = group_1.get_hosts()
        var_4 = group_0.add_child_group(group_0)
    except BaseException:
        pass

def test_case_4():
    try:
        complex_0 = None
        group_0 = module_0.Group()
        var_0 = group_0.add_host(complex_0)
    except BaseException:
        pass

def test_case_5():
    try:
        group_0 = module_0.Group()
        var_0 = group_0.get_descendants()
        group_1 = module_0.Group()
        var_1 = group_1.clear_hosts_cache()
        group_2 = module_0.Group()
        group_3 = module_0.Group()
        var_2 = group_3.get_name()
        var_3 = group_2.get_ancestors()
        int_0 = None
        var_4 = group_0.set_priority(int_0)
        var_5 = group_2.get_descendants()
        var_6 = group_2.get_hosts()
        int_1 = -2157
        var_7 = group_0.get_ancestors()
        var_8 = group_1.add_child_group(int_1)
    except BaseException:
        pass

def test_case_6():
    try:
        group_0 = module_0.Group()
        str_0 = 'ansible_group_priority'
        str_1 = '1'
        var_0 = group_0.set_variable(str_0, str_1)
        str_2 = 'a'
        var_1 = group_0.set_variable(str_0, str_2)
    except BaseException:
        pass

def test_case_7():
    try:
        group_0 = module_0.Group()
        var_0 = group_0.get_vars()
        str_0 = '?q~_Nx&D%zyGdfF'
        var_1 = group_0.set_priority(str_0)
    except BaseException:
        pass

def test_case_8():
    try:
        group_0 = module_0.Group()
        var_0 = group_0.add_host(group_0)
    except BaseException:
        pass

def test_case_9():
    try:
        float_0 = None
        group_0 = module_0.Group()
        var_0 = group_0.__str__()
        group_1 = module_0.Group()
        group_2 = module_0.Group()
        var_1 = group_2.add_child_group(group_1)
        group_3 = module_0.Group()
        var_2 = group_3.remove_host(group_1)
        var_3 = group_3.get_descendants()
        var_4 = group_2.get_hosts()
        group_4 = module_0.Group(float_0)
        group_5 = module_0.Group()
        var_5 = group_5.get_ancestors()
        var_6 = group_1.__repr__()
        var_7 = group_5.add_host(group_5)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = 'A'
        group_0 = module_0.Group(str_0)
        str_1 = 'B'
        group_1 = module_0.Group(str_1)
        str_2 = 'C'
        group_2 = module_0.Group(str_2)
        str_3 = 'D'
        group_3 = module_0.Group(str_3)
        str_4 = 'E'
        group_4 = module_0.Group(str_4)
        var_0 = group_0.add_child_group(group_1)
        var_1 = group_0.add_child_group(group_2)
        var_2 = group_1.add_child_group(group_3)
        var_3 = group_2.add_child_group(group_3)
        var_4 = group_3.add_child_group(group_4)
        var_5 = group_0.get_ancestors()
        var_6 = []
        var_7 = set(var_6)
        var_8 = group_1.get_ancest
    except BaseException:
        pass

def test_case_11():
    try:
        float_0 = None
        group_0 = module_0.Group()
        var_0 = group_0.__str__()
        group_1 = module_0.Group()
        group_2 = module_0.Group()
        var_1 = group_2.add_child_group(group_1)
        group_3 = module_0.Group()
        var_2 = group_1.serialize()
        var_3 = group_3.remove_host(group_1)
        var_4 = group_3.get_descendants()
        var_5 = group_2.get_hosts()
        group_4 = module_0.Group(float_0)
        group_5 = module_0.Group()
        var_6 = group_5.get_ancestors()
        var_7 = group_1.__repr__()
        var_8 = group_5.add_host(group_5)
    except BaseException:
        pass

def test_case_12():
    try:
        float_0 = None
        str_0 = 'zPYK#\tm^,H<g'
        float_1 = 1024.882728
        str_1 = '`s[gtbH=P+Lk6r3'
        dict_0 = {str_0: float_0, str_0: float_1, str_1: float_0}
        group_0 = module_0.Group()
        var_0 = group_0.set_priority(dict_0)
        int_0 = -964
        var_1 = group_0.set_variable(str_1, int_0)
        group_1 = module_0.Group()
        var_2 = group_1.add_child_group(group_0)
        var_3 = group_1.add_child_group(group_0)
        var_4 = group_1.get_descendants()
        group_2 = module_0.Group()
        var_5 = group_0.serialize()
        group_3 = module_0.Group(str_0)
        var_6 = group_2.remove_host(group_0)
        int_1 = -1202
        str_2 = 'REPL co5sole for executijg Ansible tasks.'
        var_7 = group_2.__getstate__()
        var_8 = group_3.set_variable(int_1, str_2)
        var_9 = group_0.clear_hosts_cache()
        var_10 = group_3.get_name()
        var_11 = group_3.get_ancestors()
        var_12 = group_0.get_ancestors()
        var_13 = group_2.get_descendants()
        var_14 = group_1.get_hosts()
        var_15 = group_3.get_vars()
        var_16 = group_3.get_name()
        group_4 = module_0.Group()
        var_17 = group_4.get_ancestors()
        var_18 = group_2.deserialize(dict_0)
        var_19 = group_4.get_hosts()
        var_20 = group_3.__str__()
        bool_0 = False
        group_5 = module_0.Group()
        var_21 = group_5.add_child_group(bool_0)
    except BaseException:
        pass

def test_case_13():
    try:
        float_0 = None
        str_0 = 'zPYK#\tm^,H<g'
        float_1 = 1024.882728
        str_1 = '`s[gtbH=P+Lk6r3'
        dict_0 = {str_0: float_0, str_0: float_1, str_1: float_0}
        group_0 = module_0.Group()
        var_0 = group_0.__str__()
        group_1 = module_0.Group()
        var_1 = group_1.set_priority(dict_0)
        int_0 = -964
        var_2 = group_1.set_variable(str_1, int_0)
        group_2 = module_0.Group()
        var_3 = group_2.add_child_group(group_1)
        var_4 = group_2.get_descendants()
        group_3 = module_0.Group()
        group_4 = module_0.Group(str_0)
        var_5 = group_3.remove_host(group_1)
        int_1 = -1202
        str_2 = 'REPL co5sole for executijg Ansible tasks.'
        var_6 = group_4.set_variable(int_1, str_2)
        var_7 = group_4.get_name()
        var_8 = group_4.get_ancestors()
        var_9 = group_1.get_ancestors()
        var_10 = group_3.get_descendants()
        var_11 = group_2.get_hosts()
        var_12 = group_4.get_vars()
        group_5 = module_0.Group()
        var_13 = group_5.get_ancestors()
        var_14 = group_5.__repr__()
        var_15 = group_3.add_host(group_3)
    except BaseException:
        pass

def test_case_14():
    try:
        float_0 = None
        str_0 = 'zPYK#\tm^,H<g'
        str_1 = '`s[gtbH=P+Lk6r3'
        dict_0 = {str_0: float_0, str_0: float_0, str_1: float_0}
        group_0 = module_0.Group()
        var_0 = group_0.set_priority(dict_0)
        int_0 = -964
        var_1 = group_0.set_variable(str_1, int_0)
        group_1 = module_0.Group()
        var_2 = group_1.add_child_group(group_0)
        var_3 = group_0.add_child_group(group_1)
    except BaseException:
        pass

def test_case_15():
    try:
        float_0 = None
        str_0 = 'zPYK#\tm^,H<g'
        float_1 = 1024.882728
        str_1 = '`s[gtbH=P+Lk6r3'
        dict_0 = {str_0: float_0, str_0: float_1, str_1: float_0}
        group_0 = module_0.Group()
        var_0 = group_0.__str__()
        group_1 = module_0.Group()
        var_1 = group_1.set_priority(dict_0)
        int_0 = -964
        var_2 = group_1.set_variable(str_1, int_0)
        group_2 = module_0.Group()
        var_3 = group_2.add_child_group(group_1)
        var_4 = group_2.get_descendants()
        group_3 = module_0.Group()
        var_5 = group_1.serialize()
        group_4 = module_0.Group(str_0)
        var_6 = group_3.remove_host(group_1)
        int_1 = -1202
        str_2 = 'REPL co5sole for executijg Ansible tasks.'
        var_7 = group_4.set_variable(int_1, str_2)
        var_8 = group_4.get_name()
        var_9 = group_4.get_ancestors()
        var_10 = group_1.get_ancestors()
        var_11 = group_3.get_descendants()
        var_12 = group_2.get_hosts()
        var_13 = group_4.get_vars()
        var_14 = group_4.get_name()
        group_5 = module_0.Group()
        group_6 = module_0.Group()
        var_15 = group_0.get_ancestors()
        var_16 = group_3.deserialize(var_5)
        var_17 = group_1.__repr__()
        str_3 = None
        var_18 = group_5.add_host(str_3)
    except BaseException:
        pass