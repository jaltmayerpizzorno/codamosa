# Automatically generated by Pynguin.
import ansible.playbook.block as module_0

def test_case_0():
    pass

def test_case_1():
    block_0 = module_0.Block()
    var_0 = block_0.has_tasks()

def test_case_2():
    block_0 = module_0.Block()
    bool_0 = True
    int_0 = 639
    str_0 = ')un2MOzY'
    var_0 = block_0.set_loader(str_0)
    str_1 = 'LWRf\\50dU>1I,XO2B'
    var_1 = block_0.has_tasks()
    dict_0 = {str_1: bool_0}
    block_1 = module_0.Block(int_0, str_1, block_0, dict_0)
    bytes_0 = b''
    var_2 = block_1.filter_tagged_tasks(bytes_0)

def test_case_3():
    str_0 = ' Add host or group to group '
    list_0 = []
    int_0 = 0
    block_0 = module_0.Block(list_0, int_0)
    var_0 = block_0.filter_tagged_tasks(str_0)
    block_1 = module_0.Block()
    var_1 = block_1.has_tasks()
    var_2 = block_1.get_vars()

def test_case_4():
    bytes_0 = b'\xd4&\x9e'
    list_0 = [bytes_0]
    bool_0 = True
    block_0 = module_0.Block(bool_0)
    var_0 = block_0.is_block(list_0)

def test_case_5():
    bytes_0 = b'\xeb^\xeb\xe9D\x04w\xda\xf3\xfb'
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    list_0 = []
    block_0 = module_0.Block(dict_0, list_0)
    list_1 = []
    var_0 = block_0.preprocess_data(list_1)
    var_1 = block_0.get_first_parent_include()
    var_2 = block_0.get_first_parent_include()

def test_case_6():
    block_0 = module_0.Block()
    var_0 = block_0.copy()

def test_case_7():
    block_0 = module_0.Block()
    str_0 = 'loa|er'
    var_0 = block_0.set_loader(str_0)

def test_case_8():
    bool_0 = False
    block_0 = module_0.Block(bool_0)
    var_0 = block_0.serialize()

def test_case_9():
    block_0 = module_0.Block()
    var_0 = {}
    var_1 = block_0.deserialize(var_0)

def test_case_10():
    str_0 = '0242ac11-000e-ff3e-a042-000000000448'
    block_0 = module_0.Block(str_0)
    var_0 = block_0.serialize()

def test_case_11():
    int_0 = -1488
    list_0 = [int_0, int_0, int_0]
    str_0 = 'n:w%a6>bRc)?E/+{JFT'
    set_0 = set()
    block_0 = module_0.Block(set_0)
    block_1 = module_0.Block(block_0)
    var_0 = block_1.filter_tagged_tasks(str_0)
    str_1 = 'NGCw3N4F{W'
    block_2 = module_0.Block(list_0, str_1)
    var_1 = block_2.filter_tagged_tasks(set_0)
    bool_0 = True
    block_3 = module_0.Block(bool_0)
    var_2 = block_3.serialize()

def test_case_12():
    dict_0 = {}
    bool_0 = True
    block_0 = module_0.Block(bool_0)
    var_0 = block_0.filter_tagged_tasks(dict_0)

def test_case_13():
    block_0 = module_0.Block()
    var_0 = block_0.all_parents_static()
    var_1 = block_0.get_first_parent_include()

def test_case_14():
    int_0 = -1488
    int_1 = -2458
    str_0 = '_/\ri:U89qQ2&\x0c"y'
    block_0 = module_0.Block(int_0, str_0)
    var_0 = block_0.filter_tagged_tasks(int_1)

def test_case_15():
    bytes_0 = b'%\xb8~\x17%\x84\xf1\x19\x97\xd3\xa7\xe0\x8d\xd7'
    str_0 = "xZoPe!fa\r6'D\nM"
    str_1 = '/QO#DY37\n'
    bool_0 = False
    set_0 = {bool_0, bytes_0, str_1, str_1}
    block_0 = module_0.Block()
    block_1 = module_0.Block(str_0, str_1, set_0, block_0)
    var_0 = block_1.copy()

def test_case_16():
    block_0 = module_0.Block()
    str_0 = 'A'
    var_0 = dict(action=str_0)
    str_1 = 'B'
    var_1 = dict(action=str_1)
    var_2 = [var_0, var_1]
    var_3 = dict(block=var_2)
    var_4 = block_0.preprocess_data(var_3)
    var_5 = dict(action=str_0)
    var_6 = dict(action=str_1)

def test_case_17():
    str_0 = 'ApiGateway'
    var_0 = []
    str_1 = 'Notify Ansible'
    str_2 = [str_1]
    str_3 = 'Configure Instance'
    str_4 = 'Create Instance'
    str_5 = [str_3, str_4]
    var_1 = dict(name=str_0, rescue=var_0, always=str_2, block=str_5)
    block_0 = module_0.Block()
    var_2 = block_0.deserialize(var_1)

def test_case_18():
    bytes_0 = b'%\xb8~\x17%\x84\xf1\x19\x97\xd3\xa7\xe0\x8d\xd7'
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    tuple_0 = ()
    list_0 = [tuple_0, bytes_0]
    block_0 = module_0.Block(list_0)
    var_0 = block_0.has_tasks()
    block_1 = module_0.Block(dict_0, tuple_0)
    var_1 = block_1.serialize()
    block_2 = module_0.Block(bytes_0)
    var_2 = block_2.get_first_parent_include()
    float_0 = -1034.2718
    var_3 = block_2.set_loader(float_0)
    var_4 = block_1.deserialize(var_1)
    list_1 = [bytes_0, bytes_0, bytes_0]
    var_5 = block_2.copy()
    str_0 = 'JC$'
    block_3 = module_0.Block(str_0, block_2, tuple_0, tuple_0)
    var_6 = block_3.copy()
    str_1 = 'a^\x0b&m'
    var_7 = block_1.is_block(str_1)
    var_8 = block_3.filter_tagged_tasks(bytes_0)
    var_9 = block_1.all_parents_static()
    var_10 = block_3.filter_tagged_tasks(block_1)
    block_4 = module_0.Block(list_1)
    block_5 = module_0.Block(block_1)
    var_11 = block_5.serialize()

def test_case_19():
    bytes_0 = b'%\xb8~\x17%\x84\xf1\x19\x97\xd3\xa7\xe0\x8d\xd7'
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    tuple_0 = ()
    list_0 = [tuple_0, bytes_0]
    block_0 = module_0.Block(list_0)
    var_0 = block_0.has_tasks()
    block_1 = module_0.Block(dict_0, tuple_0)
    var_1 = block_1.serialize()
    var_2 = block_0.get_first_parent_include()
    float_0 = -1034.2718
    var_3 = block_1.set_loader(float_0)
    var_4 = block_1.deserialize(var_1)
    var_5 = block_0.copy()
    str_0 = 'JC$'
    block_2 = module_0.Block(str_0, block_0, tuple_0, tuple_0)
    str_1 = 'a^\x0b&m'
    var_6 = block_1.is_block(str_1)
    var_7 = block_2.filter_tagged_tasks(bytes_0)
    var_8 = block_1.all_parents_static()
    var_9 = block_2.get_first_parent_include()
    var_10 = block_1.serialize()

def test_case_20():
    bytes_0 = b'%\xb8~\x17%\x84\xf1\x19\x97\xd3\xa7\xe0\x8d\xd7'
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    tuple_0 = ()
    list_0 = [tuple_0, bytes_0]
    block_0 = module_0.Block(list_0)
    var_0 = block_0.has_tasks()
    block_1 = module_0.Block(dict_0, tuple_0)
    var_1 = block_1.serialize()
    var_2 = block_0.get_first_parent_include()
    float_0 = -1034.2718
    var_3 = block_1.set_loader(float_0)
    var_4 = block_1.deserialize(var_1)
    var_5 = block_0.copy()
    str_0 = 'JC$'
    block_2 = module_0.Block(str_0, block_0, tuple_0, tuple_0)
    str_1 = 'a^\x0b&m'
    var_6 = block_1.is_block(str_1)
    var_7 = block_1.is_block(dict_0)
    bool_0 = False
    block_3 = module_0.Block(bool_0, block_2)
    var_8 = block_3.copy(tuple_0)
    var_9 = block_1.filter_tagged_tasks(tuple_0)
    str_2 = '0242ac11-000e-ff3e-a042-0000000010a5'
    block_4 = module_0.Block(str_2)
    var_10 = block_3.serialize()