# Automatically generated by Pynguin.
import ansible.playbook.base as module_0
import ansible.utils.display as module_1

def test_case_0():
    try:
        str_0 = "++pvNQ'G~mJg"
        field_attribute_base_0 = module_0.FieldAttributeBase()
        var_0 = field_attribute_base_0.load_data(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        field_attribute_base_0 = module_0.FieldAttributeBase()
        list_0 = [field_attribute_base_0, field_attribute_base_0, field_attribute_base_0]
        var_0 = field_attribute_base_0.post_validate(list_0)
    except BaseException:
        pass

def test_case_2():
    try:
        base_0 = module_0.Base()
        field_attribute_base_0 = module_0.FieldAttributeBase()
        var_0 = field_attribute_base_0.deserialize(base_0)
    except BaseException:
        pass

def test_case_3():
    try:
        set_0 = set()
        field_attribute_base_0 = module_0.FieldAttributeBase()
        var_0 = field_attribute_base_0.dump_me(set_0)
    except BaseException:
        pass

def test_case_4():
    try:
        base_0 = module_0.Base()
        var_0 = base_0.get_dep_chain()
        var_1 = base_0.get_search_path()
        var_2 = base_0.get_dep_chain()
        field_attribute_base_0 = module_0.FieldAttributeBase()
        var_3 = field_attribute_base_0.copy()
        var_4 = field_attribute_base_0.copy()
        var_5 = field_attribute_base_0.get_variable_manager()
        var_6 = field_attribute_base_0.serialize()
        var_7 = base_0.get_search_path()
        var_8 = base_0.get_search_path()
        var_9 = field_attribute_base_0.dump_me()
        var_10 = field_attribute_base_0.squash()
        var_11 = field_attribute_base_0.get_ds()
        dict_0 = {}
        var_12 = field_attribute_base_0.deserialize(dict_0)
        var_13 = field_attribute_base_0.squash()
        var_14 = field_attribute_base_0.squash()
        dict_1 = {}
        var_15 = field_attribute_base_0.dump_attrs()
        var_16 = field_attribute_base_0.load_data(dict_1)
        var_17 = base_0.get_path()
        var_18 = field_attribute_base_0.get_loader()
        list_0 = [var_9]
        var_19 = field_attribute_base_0.load_data(list_0)
    except BaseException:
        pass

def test_case_5():
    try:
        base_0 = module_0.Base()
        base_1 = module_0.Base()
        var_0 = base_1.get_dep_chain()
        field_attribute_base_0 = module_0.FieldAttributeBase()
        var_1 = field_attribute_base_0.copy()
        var_2 = field_attribute_base_0.copy()
        var_3 = field_attribute_base_0.get_variable_manager()
        var_4 = base_1.get_search_path()
        var_5 = base_1.get_search_path()
        field_attribute_base_1 = module_0.FieldAttributeBase()
        var_6 = field_attribute_base_1.dump_me()
        complex_0 = None
        var_7 = field_attribute_base_1.squash()
        var_8 = field_attribute_base_1.get_ds()
        dict_0 = {}
        var_9 = field_attribute_base_0.dump_attrs()
        var_10 = field_attribute_base_0.load_data(dict_0)
        var_11 = field_attribute_base_0.from_attrs(dict_0)
        str_0 = 'XIRHu];.djc&CV-9| \x0bE'
        var_12 = field_attribute_base_0.validate(str_0)
        var_13 = base_0.get_path()
        field_attribute_base_2 = module_0.FieldAttributeBase()
        var_14 = field_attribute_base_0.get_loader()
        var_15 = field_attribute_base_0.load_data(complex_0)
    except BaseException:
        pass

def test_case_6():
    try:
        field_attribute_base_0 = module_0.FieldAttributeBase()
        var_0 = field_attribute_base_0.copy()
        var_1 = field_attribute_base_0.copy()
        var_2 = field_attribute_base_0.get_variable_manager()
        var_3 = field_attribute_base_0.serialize()
        var_4 = field_attribute_base_0.dump_me()
        var_5 = field_attribute_base_0.squash()
        var_6 = field_attribute_base_0.squash()
        var_7 = field_attribute_base_0.get_ds()
        dict_0 = {}
        var_8 = field_attribute_base_0.deserialize(dict_0)
        dict_1 = {}
        var_9 = field_attribute_base_0.dump_attrs()
        var_10 = field_attribute_base_0.load_data(dict_1)
        dict_2 = {}
        display_0 = module_1.Display(dict_2)
        list_0 = [var_10, dict_1, dict_1]
        base_meta_0 = module_0.BaseMeta(*list_0)
    except BaseException:
        pass