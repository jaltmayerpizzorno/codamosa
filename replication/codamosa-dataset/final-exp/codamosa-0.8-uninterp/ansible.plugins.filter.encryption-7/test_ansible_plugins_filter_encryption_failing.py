# Automatically generated by Pynguin.
import ansible.plugins.filter.encryption as module_0
import ansible.parsing.yaml.objects as module_1

def test_case_0():
    try:
        str_0 = 'mysecret'
        var_0 = module_0.do_vault(str_0, str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = b''
        tuple_0 = ()
        list_0 = [bytes_0, bytes_0]
        var_0 = module_0.do_vault(bytes_0, tuple_0, list_0, tuple_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 't+Ay>\x0b\x0bBI^*\r'
        bytes_0 = b'|\x82\x87&'
        bool_0 = True
        var_0 = module_0.do_unvault(bytes_0, str_0, bool_0)
        float_0 = 0.2
        str_1 = '_role_path'
        int_0 = -1856
        var_1 = module_0.do_vault(float_0, str_1, int_0)
    except BaseException:
        pass

def test_case_3():
    try:
        filter_module_0 = module_0.FilterModule()
        list_0 = [filter_module_0, filter_module_0, filter_module_0]
        int_0 = 2498
        var_0 = module_0.do_unvault(list_0, int_0)
    except BaseException:
        pass

def test_case_4():
    try:
        filter_module_0 = module_0.FilterModule()
        var_0 = filter_module_0.filters()
        var_1 = filter_module_0.filters()
        str_0 = 'ansible/module_utils/__init__.py'
        var_2 = module_0.do_unvault(filter_module_0, str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = '$ANSIBLE_VAULT;1.1;AES256;default\n306434363232396331646330346361316566336430326263316239333231373035316333633539\n636430313539363562333461323531376635386438616435346535355d0a'
        var_0 = module_0.do_unvault(str_0, str_0, str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        int_0 = 6253
        ansible_vault_encrypted_unicode_0 = module_1.AnsibleVaultEncryptedUnicode(int_0)
        bytes_0 = b'\xc8\x02\xcd\xc2$\xbf\xa6\x9b\x9f\x88\x02\xbb\x0e\x906\x9c\x06\xbb\xc8\xc3'
        var_0 = module_0.do_unvault(ansible_vault_encrypted_unicode_0, bytes_0)
    except BaseException:
        pass