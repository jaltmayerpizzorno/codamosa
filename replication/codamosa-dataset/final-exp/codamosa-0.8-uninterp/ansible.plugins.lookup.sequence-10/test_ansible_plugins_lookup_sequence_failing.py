# Automatically generated by Pynguin.
import ansible.plugins.lookup.sequence as module_0

def test_case_0():
    try:
        lookup_module_0 = module_0.LookupModule()
        bool_0 = None
        var_0 = lookup_module_0.parse_kv_args(bool_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '/run/ostree-booted'
        bytes_0 = b'&\xc8\xdb\xb4O\xcc\xb5\xc0\x1c\x1a30'
        lookup_module_0 = module_0.LookupModule()
        var_0 = lookup_module_0.run(str_0, bytes_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '6A1\x0c'
        list_0 = [str_0]
        float_0 = -781.0697348282865
        lookup_module_0 = module_0.LookupModule(float_0)
        var_0 = lookup_module_0.run(str_0, list_0)
    except BaseException:
        pass

def test_case_3():
    try:
        lookup_module_0 = module_0.LookupModule()
        var_0 = lookup_module_0.sanity_check()
    except BaseException:
        pass

def test_case_4():
    try:
        lookup_module_0 = module_0.LookupModule()
        var_0 = lookup_module_0.reset()
        var_1 = lookup_module_0.sanity_check()
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = '6x}\x0c'
        float_0 = -778.6906980319583
        tuple_0 = ()
        float_1 = 0.1
        lookup_module_0 = module_0.LookupModule()
        var_0 = lookup_module_0.run(tuple_0, float_1)
        lookup_module_1 = module_0.LookupModule(float_0)
        var_1 = lookup_module_1.run(str_0, lookup_module_1)
    except BaseException:
        pass

def test_case_6():
    try:
        lookup_module_0 = module_0.LookupModule()
        dict_0 = {lookup_module_0: lookup_module_0, lookup_module_0: lookup_module_0, lookup_module_0: lookup_module_0, lookup_module_0: lookup_module_0}
        list_0 = []
        var_0 = lookup_module_0.run(dict_0, list_0)
    except BaseException:
        pass

def test_case_7():
    try:
        lookup_module_0 = module_0.LookupModule()
        str_0 = 'start=3 count=3'
        str_1 = [str_0]
        var_0 = {}
        var_1 = lookup_module_0.run(str_1, var_0)
        bool_0 = False
        var_2 = lookup_module_0.parse_kv_args(bool_0)
    except BaseException:
        pass

def test_case_8():
    try:
        lookup_module_0 = module_0.LookupModule()
        var_0 = lookup_module_0.reset()
        str_0 = "!P*O'("
        str_1 = '3'
        var_1 = dict(start=str_0, end=str_1)
        var_2 = len(var_1)
        str_2 = '0x2'
        str_3 = '0x5'
        str_4 = '0x%%02x'
        var_3 = dict(start=str_2, end=str_3, stride=str_4, format=str_4)
        var_4 = lookup_module_0.reset()
        var_5 = lookup_module_0.parse_kv_args(var_3)
    except BaseException:
        pass

def test_case_9():
    try:
        lookup_module_0 = module_0.LookupModule()
        str_0 = '5-8'
        str_1 = '4:h9t%0Rd'
        str_2 = [str_1]
        var_0 = lookup_module_0.run(str_2, str_0)
    except BaseException:
        pass

def test_case_10():
    try:
        lookup_module_0 = module_0.LookupModule()
        str_0 = '5'
        str_1 = [str_0]
        var_0 = None
        var_1 = lookup_module_0.run(str_1, var_0)
        str_2 = '5-8'
        str_3 = [str_2]
        var_2 = lookup_module_0.run(str_3, var_0)
        str_4 = '2-0/2'
        str_5 = [str_4]
        var_3 = lookup_module_0.run(str_5, var_0)
    except BaseException:
        pass

def test_case_11():
    try:
        lookup_module_0 = module_0.LookupModule()
        str_0 = 'start=3 count=3'
        str_1 = [str_0]
        var_0 = {}
        var_1 = lookup_module_0.run(str_1, var_0)
        str_2 = 'start=4 end=4 count=4'
        str_3 = [str_2]
        var_2 = {}
        var_3 = lookup_module_0.run(str_3, var_2)
    except BaseException:
        pass

def test_case_12():
    try:
        lookup_module_0 = module_0.LookupModule()
        str_0 = '2-10/B'
        str_1 = [str_0]
        var_0 = lookup_module_0.run(str_1, str_0)
    except BaseException:
        pass

def test_case_13():
    try:
        lookup_module_0 = module_0.LookupModule()
        var_0 = None
        str_0 = '5-8'
        str_1 = [str_0]
        var_1 = lookup_module_0.run(str_1, var_0)
        str_2 = '2-10/2'
        str_3 = [str_2]
        var_2 = lookup_module_0.run(str_3, var_0)
        str_4 = '4:host%02d'
        str_5 = [str_4]
        var_3 = lookup_module_0.run(str_5, var_0)
        str_6 = 'start=5 end=11 stride=2 format=0x_02x'
        str_7 = [str_6]
        var_4 = lookup_module_0.run(str_7, var_0)
    except BaseException:
        pass

def test_case_14():
    try:
        lookup_module_0 = module_0.LookupModule()
        var_0 = None
        str_0 = []
        var_1 = lookup_module_0.run(str_0, var_0)
        str_1 = '2E-10/2'
        str_2 = [str_1]
        var_2 = lookup_module_0.run(str_2, var_0)
    except BaseException:
        pass