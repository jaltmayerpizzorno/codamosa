# Automatically generated by Pynguin.
import httpie.output.processing as module_0
import httpie.models as module_1
import httpie.output.streams as module_2

def test_case_0():
    try:
        conversion_0 = module_0.Conversion()
        int_0 = -6496
        h_t_t_p_message_0 = module_1.HTTPMessage(int_0)
        base_stream_0 = module_2.BaseStream(h_t_t_p_message_0)
        iterable_0 = base_stream_0.iter_body()
    except BaseException:
        pass

def test_case_1():
    try:
        raw_stream_0 = module_2.RawStream()
    except BaseException:
        pass

def test_case_2():
    try:
        encoded_stream_0 = module_2.EncodedStream()
    except BaseException:
        pass

def test_case_3():
    try:
        conversion_0 = module_0.Conversion()
        list_0 = []
        str_0 = ''
        dict_0 = {str_0: str_0, str_0: str_0}
        formatting_0 = module_0.Formatting(list_0, **dict_0)
        pretty_stream_0 = module_2.PrettyStream(conversion_0, formatting_0)
    except BaseException:
        pass

def test_case_4():
    try:
        conversion_0 = module_0.Conversion()
        int_0 = 1942
        h_t_t_p_message_0 = module_1.HTTPMessage(int_0)
        base_stream_0 = module_2.BaseStream(h_t_t_p_message_0)
        h_t_t_p_message_1 = module_1.HTTPMessage(base_stream_0)
        base_stream_1 = module_2.BaseStream(h_t_t_p_message_1)
        bytes_0 = base_stream_1.get_headers()
    except BaseException:
        pass

def test_case_5():
    try:
        bytes_0 = b'kW\x06\xfb'
        list_0 = [bytes_0]
        h_t_t_p_message_0 = module_1.HTTPMessage(list_0)
        set_0 = set()
        str_0 = '$Zl4'
        str_1 = ';'
        dict_0 = {str_0: h_t_t_p_message_0, str_1: list_0, str_0: bytes_0}
        h_t_t_p_message_1 = module_1.HTTPMessage(dict_0)
        binary_suppressed_error_0 = None
        base_stream_0 = module_2.BaseStream(h_t_t_p_message_1, set_0, binary_suppressed_error_0)
    except BaseException:
        pass