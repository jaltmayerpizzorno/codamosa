# Automatically generated by Pynguin.
import ansible.modules.lineinfile as module_0

def test_case_0():
    try:
        dict_0 = {}
        int_0 = 3549
        bytes_0 = b'\x06\t\x19\x19\x1a&@\xb9\x8bR\xbao~NH\x83\xe6'
        var_0 = module_0.write_changes(dict_0, int_0, bytes_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bool_0 = True
        str_0 = 'z'
        tuple_0 = (str_0,)
        str_1 = '%P\r4u<}<KI'
        int_0 = 22
        var_0 = module_0.check_file_attrs(bool_0, tuple_0, str_1, int_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'J'
        dict_0 = {}
        int_0 = -1841
        set_0 = {str_0, int_0}
        float_0 = 2748.61601
        var_0 = module_0.present(str_0, str_0, dict_0, int_0, dict_0, set_0, dict_0, set_0, set_0, int_0, float_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = ''
        dict_0 = {}
        int_0 = -1844
        set_0 = set()
        float_0 = 1695.766157
        var_0 = module_0.present(str_0, str_0, dict_0, int_0, dict_0, set_0, dict_0, set_0, set_0, int_0, float_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = '$'
        var_0 = module_0.absent(str_0, str_0, str_0, str_0, str_0, str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = '/gV'
        set_0 = {str_0, str_0}
        int_0 = 347
        list_0 = [str_0, set_0, set_0, set_0]
        bool_0 = False
        float_0 = -419.6
        bytes_0 = b'\xc1qt\x85,'
        var_0 = module_0.present(str_0, set_0, str_0, int_0, list_0, bool_0, int_0, float_0, str_0, bytes_0, str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = '/gV'
        set_0 = {str_0, str_0}
        list_0 = [str_0, set_0, set_0, set_0]
        int_0 = 1000
        bytes_0 = b'\xc1qt\x85,'
        str_1 = 'ansible.modules.lineinfile'
        int_1 = 2721
        bool_0 = False
        tuple_0 = (int_1, bool_0, list_0, bool_0)
        str_2 = ''
        bytes_1 = b'(\x08c\xb6\xf5\x90\xa6\xe0'
        dict_0 = {bool_0: bytes_1, str_1: str_1, bool_0: int_0, bytes_0: int_1}
        var_0 = module_0.present(set_0, str_0, list_0, str_1, int_1, tuple_0, str_2, bytes_1, dict_0, dict_0, tuple_0)
    except BaseException:
        pass