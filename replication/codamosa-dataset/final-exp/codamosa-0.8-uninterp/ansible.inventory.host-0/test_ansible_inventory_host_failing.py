# Automatically generated by Pynguin.
import ansible.inventory.host as module_0
import ansible.inventory.group as module_1

def test_case_0():
    try:
        host_0 = module_0.Host()
        dict_0 = {}
        var_0 = host_0.__ne__(dict_0)
        var_1 = host_0.populate_ancestors()
        list_0 = [host_0, host_0, var_1, var_1]
        var_2 = host_0.__repr__()
        var_3 = host_0.get_groups()
        var_4 = host_0.deserialize(list_0)
    except BaseException:
        pass

def test_case_1():
    try:
        host_0 = module_0.Host()
        host_1 = module_0.Host(host_0, host_0)
    except BaseException:
        pass

def test_case_2():
    try:
        host_0 = module_0.Host()
        var_0 = host_0.get_magic_vars()
    except BaseException:
        pass

def test_case_3():
    try:
        bool_0 = True
        host_0 = module_0.Host(bool_0)
        var_0 = host_0.__repr__()
        host_1 = module_0.Host()
        float_0 = 2702.0
        tuple_0 = (host_1, float_0)
        list_0 = [tuple_0, host_1]
        var_1 = host_1.populate_ancestors(list_0)
        var_2 = host_1.get_groups()
        var_3 = host_1.populate_ancestors()
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'testE'
        host_0 = module_0.Host(str_0)
        str_1 = 'all'
        group_0 = module_1.Group(str_1)
        var_0 = host_0.__repr__()
        var_1 = host_0.get_vars()
        group_1 = module_1.Group(str_0)
        var_2 = host_0.remove_group(group_1)
        var_3 = host_0.add_group(group_0)
        var_4 = host_0.add_group(group_1)
        var_5 = host_0.get_magic_vars()
        list_0 = [var_4]
        dict_0 = {str_0: var_4}
        var_6 = host_0.set_variable(list_0, dict_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'B'
        group_0 = module_1.Group(str_0)
        str_1 = 'A'
        group_1 = module_1.Group(str_1)
        var_0 = group_1.add_child_group(group_0)
        str_2 = 'h'
        host_0 = module_0.Host(str_2)
        var_1 = host_0.add_group(group_1)
        var_2 = host_0.add_group(group_0)
        var_3 = host_0.remove_group(group_0)
        var_4 = host_0.get_groups()
        var_5 = host_0.remove_group(group_1)
        var_6 = host_0.get_groups()
        group_2 = module_1.Group()
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'l'
        group_0 = module_1.Group(str_0)
        group_1 = module_1.Group(str_0)
        str_1 = 'g3'
        group_2 = module_1.Group(str_1)
        var_0 = group_0.add_child_group(group_1)
        var_1 = group_1.add_child_group(group_2)
        host_0 = module_0.Host(str_1)
        var_2 = host_0.add_group(group_2)
        var_3 = host_0.get_groups()
        var_4 = len(var_3)
        var_5 = host_0.remove_group(group_2)
        var_6 = host_0.get_groups()
        var_7 = len(var_6)
        var_8 = host_0.add_group(group_0)
        var_9 = host_0.get_groups()
        var_10 = len(str_0)
        var_11 = host_0.add_group(group_0)
        var_12 = host_0.get_groups()
        var_13 = len(var_10)
    except BaseException:
        pass