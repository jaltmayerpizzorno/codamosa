# Automatically generated by Pynguin.
import ansible.playbook.task as module_0
import ansible.utils.display as module_1
import ansible.playbook.block as module_2

def test_case_0():
    try:
        task_0 = module_0.Task()
        task_1 = module_0.Task(task_0)
        var_0 = task_0.get_first_parent_include()
        var_1 = task_1.get_first_parent_include()
        float_0 = -34.785
        float_1 = 2.0
        int_0 = 745
        bool_0 = True
        dict_0 = {float_1: float_0, task_0: task_0, var_0: task_1, int_0: bool_0}
        str_0 = 'Show Ansible inventory information, by default it uses the inventory script JSON format'
        str_1 = 'async_val'
        task_2 = module_0.Task(str_1)
        var_2 = task_2.load(float_0, dict_0, bool_0, str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        tuple_0 = None
        tuple_1 = ()
        list_0 = [tuple_1, tuple_1, tuple_1]
        task_0 = module_0.Task(tuple_1, list_0)
        var_0 = task_0.get_name(tuple_0)
    except BaseException:
        pass

def test_case_2():
    try:
        task_0 = module_0.Task()
        int_0 = 747
        var_0 = task_0.load(int_0, task_0)
    except BaseException:
        pass

def test_case_3():
    try:
        dict_0 = {}
        bytes_0 = b'\xcb>g<Y\x82\xbd\xa3\x06\x11?\x8e\xa3\xa7\xd0\xfd|^\xf5\xcc'
        task_0 = module_0.Task()
        var_0 = task_0.load(dict_0, bytes_0, dict_0)
    except BaseException:
        pass

def test_case_4():
    try:
        task_0 = module_0.Task()
        var_0 = task_0.preprocess_data(task_0)
    except BaseException:
        pass

def test_case_5():
    try:
        list_0 = None
        task_0 = module_0.Task()
        var_0 = task_0.post_validate(list_0)
    except BaseException:
        pass

def test_case_6():
    try:
        set_0 = set()
        bool_0 = True
        float_0 = 60.0
        list_0 = [set_0, set_0, float_0, float_0]
        task_0 = module_0.Task(float_0, list_0)
        var_0 = task_0.post_validate(bool_0)
    except BaseException:
        pass

def test_case_7():
    try:
        bool_0 = False
        bytes_0 = b'\xc3\x1dJb5j\x0f\x9f\x1a\xc2s\xa7\xd0\xd0\n\x0e'
        tuple_0 = (bytes_0,)
        dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: tuple_0}
        str_0 = 'H:&DN'
        task_0 = module_0.Task(dict_0, str_0)
        var_0 = task_0.get_vars()
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = ';%M_T='
        list_0 = []
        str_1 = '1s;i6}(w$;'
        task_0 = module_0.Task(list_0, str_1)
        var_0 = task_0.get_vars()
        var_1 = task_0.copy()
        set_0 = set()
        task_1 = module_0.Task(str_0, set_0)
        var_2 = task_1.get_include_params()
    except BaseException:
        pass

def test_case_9():
    try:
        float_0 = -2333.0
        list_0 = []
        str_0 = '1s;i6}(w$;'
        task_0 = module_0.Task(list_0, str_0)
        var_0 = task_0.get_vars()
        task_1 = module_0.Task(float_0)
        var_1 = task_1.copy()
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = 'vD$\n-`}\t5'
        task_0 = module_0.Task(str_0)
        var_0 = task_0.serialize()
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = 'S{[zB\r^:Ivf T`3^fc'
        task_0 = module_0.Task()
        var_0 = task_0.set_loader(str_0)
        var_1 = task_0.get_vars()
        set_0 = set()
        bytes_0 = b'h1\xebm,\xe2/\xfe\xc6\x9e\xedz['
        task_1 = module_0.Task(set_0, bytes_0)
        var_2 = task_1.serialize()
    except BaseException:
        pass

def test_case_12():
    try:
        complex_0 = None
        int_0 = -114
        task_0 = module_0.Task(int_0)
        var_0 = task_0.set_loader(complex_0)
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = "+'5.Ei:S2+mTb0"
        int_0 = -1608
        dict_0 = {int_0: int_0, int_0: int_0, str_0: str_0}
        bool_0 = False
        task_0 = module_0.Task()
        var_0 = task_0.load(dict_0, bool_0)
    except BaseException:
        pass

def test_case_14():
    try:
        float_0 = -98.862
        set_0 = {float_0, float_0}
        task_0 = module_0.Task()
        task_1 = module_0.Task(task_0, task_0)
        var_0 = task_1.set_loader(set_0)
        task_2 = module_0.Task(set_0)
        var_1 = task_2.serialize()
    except BaseException:
        pass

def test_case_15():
    try:
        float_0 = 2500.68
        task_0 = module_0.Task(float_0)
        var_0 = task_0.get_first_parent_include()
    except BaseException:
        pass

def test_case_16():
    try:
        task_0 = module_0.Task()
        bool_0 = False
        task_1 = module_0.Task(bool_0, task_0)
        set_0 = {bool_0, bool_0, task_1, bool_0}
        var_0 = task_0.preprocess_data(set_0)
    except BaseException:
        pass

def test_case_17():
    try:
        str_0 = 'SlU\\yTe`}F)=h^u0'
        dict_0 = {str_0: str_0, str_0: str_0}
        bytes_0 = b'\xcb>g<Y\x82(\xa3\x06\x11?\x8e\xa7\xd0\xfd|^\xf5\xcc'
        task_0 = module_0.Task()
        var_0 = task_0.get_first_parent_include()
        var_1 = task_0.get_vars()
        var_2 = task_0.get_include_params()
        bytes_1 = b'\xd0'
        var_3 = task_0.copy()
        list_0 = [bytes_0]
        task_1 = module_0.Task()
        var_4 = task_0.get_first_parent_include()
        task_2 = module_0.Task()
        var_5 = task_1.get_vars()
        dict_1 = {bytes_1: list_0}
        var_6 = task_1.__repr__()
        task_3 = module_0.Task()
        var_7 = task_3.load(dict_0, bytes_0, dict_1)
    except BaseException:
        pass

def test_case_18():
    try:
        task_0 = module_0.Task()
        task_1 = module_0.Task(task_0)
        var_0 = task_0.get_first_parent_include()
        float_0 = -34.785
        float_1 = 2.0
        int_0 = 745
        bool_0 = True
        dict_0 = {float_1: float_0, task_0: task_0, var_0: task_1, int_0: bool_0}
        str_0 = 'Show Ansible inventory information, by default it uses the inventory script JSON format'
        str_1 = 'async_val'
        task_2 = module_0.Task(str_1)
        var_1 = task_1.serialize()
        var_2 = task_2.load(float_0, dict_0, bool_0, str_0)
    except BaseException:
        pass

def test_case_19():
    try:
        int_0 = 256
        task_0 = module_0.Task(int_0)
        var_0 = task_0.__repr__()
        dict_0 = {}
        task_1 = module_0.Task(dict_0)
        var_1 = task_1.copy()
        var_2 = task_1.get_first_parent_include()
        var_3 = task_1.set_loader(int_0)
        var_4 = task_1.serialize()
        var_5 = task_1.all_parents_static()
        var_6 = task_1.get_vars()
        var_7 = task_1.get_include_params()
        var_8 = task_1.set_loader(task_1)
        var_9 = task_1.deserialize(dict_0)
        var_10 = task_1.__repr__()
        task_2 = module_0.Task()
        display_0 = module_1.Display()
        int_1 = 947
        block_0 = module_2.Block(display_0, int_1)
        float_0 = -912.230378
        task_3 = module_0.Task(block_0, float_0)
        var_11 = task_3.serialize()
    except BaseException:
        pass

def test_case_20():
    try:
        task_0 = module_0.Task()
        str_0 = 'ping'
        var_0 = dict(action=str_0)
        var_1 = task_0.deserialize(var_0)
        var_2 = dict(action=str_0, parent=var_0, parent_type=var_0)
        var_3 = task_0.deserialize(var_2)
    except BaseException:
        pass