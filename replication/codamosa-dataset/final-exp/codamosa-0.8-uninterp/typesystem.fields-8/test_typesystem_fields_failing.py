# Automatically generated by Pynguin.
import typesystem.fields as module_0
import decimal as module_1

def test_case_0():
    try:
        field_0 = None
        bool_0 = True
        field_1 = module_0.Field(allow_null=bool_0)
        union_0 = field_1.__or__(field_0)
    except BaseException:
        pass

def test_case_1():
    try:
        field_0 = module_0.Field()
        str_0 = 'hello'
        validation_result_0 = field_0.validate_or_error(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        object_0 = module_0.Object()
        float_0 = None
        any_0 = object_0.validate(float_0)
    except BaseException:
        pass

def test_case_3():
    try:
        int_0 = -2290
        number_0 = module_0.Number(exclusive_minimum=int_0, precision=int_0)
        any_0 = number_0.validate(number_0)
    except BaseException:
        pass

def test_case_4():
    try:
        boolean_0 = module_0.Boolean()
        int_0 = -31
        any_0 = boolean_0.validate(int_0)
    except BaseException:
        pass

def test_case_5():
    try:
        date_time_0 = module_0.DateTime()
        float_0 = None
        bool_0 = False
        boolean_0 = module_0.Boolean(default=date_time_0)
        any_0 = boolean_0.validate(float_0, strict=bool_0)
    except BaseException:
        pass

def test_case_6():
    try:
        choice_0 = module_0.Choice()
        choice_1 = None
        any_0 = choice_0.validate(choice_1)
    except BaseException:
        pass

def test_case_7():
    try:
        choice_0 = module_0.Choice()
        any_0 = choice_0.validate(choice_0)
    except BaseException:
        pass

def test_case_8():
    try:
        object_0 = module_0.Object()
        any_0 = object_0.validate(object_0)
    except BaseException:
        pass

def test_case_9():
    try:
        time_0 = module_0.Time()
        bool_0 = None
        array_0 = module_0.Array()
        any_0 = array_0.validate(bool_0, strict=bool_0)
    except BaseException:
        pass

def test_case_10():
    try:
        field_0 = module_0.Field()
        union_0 = field_0.__or__(field_0)
        any_0 = union_0.validate(union_0)
    except BaseException:
        pass

def test_case_11():
    try:
        int_0 = 1538
        number_0 = module_0.Number(minimum=int_0, multiple_of=int_0)
        any_0 = number_0.validate(number_0)
    except BaseException:
        pass

def test_case_12():
    try:
        float_0 = -2434.0833701123674
        number_0 = module_0.Number(multiple_of=float_0)
        any_0 = number_0.validate(number_0)
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = 'j\x0b'
        dict_0 = {str_0: str_0, str_0: str_0}
        object_0 = module_0.Object(required=str_0)
        any_0 = object_0.validate(dict_0)
    except BaseException:
        pass

def test_case_14():
    try:
        object_0 = module_0.Object()
        list_0 = []
        int_0 = -4117
        array_0 = module_0.Array(list_0, int_0)
    except BaseException:
        pass

def test_case_15():
    try:
        float_0 = None
        number_0 = module_0.Number()
        any_0 = number_0.validate(float_0)
    except BaseException:
        pass

def test_case_16():
    try:
        object_0 = module_0.Object()
        dict_0 = {}
        bool_0 = True
        const_0 = module_0.Const(dict_0)
        any_0 = const_0.validate(bool_0, bool_0)
    except BaseException:
        pass

def test_case_17():
    try:
        str_0 = '_OiwAW9(`U'
        bool_0 = None
        float_0 = -2434.0833701123674
        number_0 = module_0.Number(minimum=float_0, exclusive_minimum=float_0, precision=str_0, multiple_of=float_0)
        dict_0 = {}
        object_0 = module_0.Object(properties=dict_0, additional_properties=bool_0)
        bool_1 = True
        any_0 = number_0.validate(float_0, strict=bool_1)
    except BaseException:
        pass

def test_case_18():
    try:
        str_0 = '>aWt~}A<ev8'
        float_0 = None
        dict_0 = {str_0: float_0}
        field_0 = module_0.Field()
        dict_1 = {str_0: field_0}
        object_0 = module_0.Object(properties=dict_1)
        any_0 = object_0.validate(dict_0)
    except BaseException:
        pass

def test_case_19():
    try:
        field_0 = module_0.Field()
        field_1 = module_0.Field()
        array_0 = module_0.Array(field_1)
        any_0 = array_0.serialize(field_0)
    except BaseException:
        pass

def test_case_20():
    try:
        date_time_0 = module_0.DateTime()
        object_0 = module_0.Object()
        str_0 = "Dd'\r"
        dict_0 = {}
        float_0 = module_0.Float(exclusive_maximum=date_time_0, precision=str_0, **dict_0)
    except BaseException:
        pass

def test_case_21():
    try:
        bool_0 = True
        str_0 = '(+'
        string_0 = module_0.String(allow_blank=bool_0, format=str_0)
        array_0 = module_0.Array(bool_0)
    except BaseException:
        pass

def test_case_22():
    try:
        bool_0 = False
        float_0 = -2434.0833701123674
        number_0 = module_0.Number(minimum=float_0, exclusive_minimum=float_0)
        any_0 = number_0.validate(bool_0)
    except BaseException:
        pass

def test_case_23():
    try:
        str_0 = 'if'
        int_0 = 4051
        bool_0 = True
        boolean_0 = module_0.Boolean(description=str_0)
        any_0 = boolean_0.validate(int_0, strict=bool_0)
    except BaseException:
        pass

def test_case_24():
    try:
        str_0 = 't4j/y3'
        choice_0 = module_0.Choice()
        boolean_0 = module_0.Boolean(description=str_0)
        any_0 = boolean_0.validate(str_0)
    except BaseException:
        pass

def test_case_25():
    try:
        string_0 = module_0.String()
        string_1 = [string_0]
        array_0 = module_0.Array(string_1)
        any_0 = array_0.validate(string_1)
    except BaseException:
        pass

def test_case_26():
    try:
        str_0 = '>aWt~}A<e*v8'
        bool_0 = None
        number_0 = module_0.Number()
        any_0 = number_0.validate(str_0, strict=bool_0)
    except BaseException:
        pass

def test_case_27():
    try:
        object_0 = module_0.Object()
        dict_0 = {}
        bool_0 = None
        decimal_0 = module_1.Decimal()
        int_0 = -2732
        object_1 = module_0.Object(additional_properties=bool_0, min_properties=int_0, **dict_0)
        bool_1 = True
        const_0 = module_0.Const(bool_0)
        string_0 = module_0.String(trim_whitespace=bool_1, pattern=const_0)
    except BaseException:
        pass

def test_case_28():
    try:
        string_0 = module_0.String()
        string_1 = []
        array_0 = module_0.Array(string_1)
        str_0 = ''
        str_1 = [str_0]
        str_2 = 'o'
        field_0 = module_0.Field(title=str_0, description=str_2)
        field_1 = module_0.Field()
        union_0 = field_1.__or__(field_0)
        dict_0 = {}
        string_2 = module_0.String(max_length=union_0, pattern=str_1, format=str_0, **dict_0)
    except BaseException:
        pass

def test_case_29():
    try:
        int_0 = -347
        number_0 = module_0.Number(maximum=int_0, exclusive_maximum=int_0, multiple_of=int_0)
        any_0 = number_0.validate(int_0)
    except BaseException:
        pass

def test_case_30():
    try:
        str_0 = ''
        bool_0 = False
        int_0 = 19
        string_0 = module_0.String(trim_whitespace=bool_0, min_length=int_0)
        any_0 = string_0.validate(str_0)
    except BaseException:
        pass

def test_case_31():
    try:
        object_0 = module_0.Object()
        any_0 = module_0.Any()
        any_1 = any_0.validate(object_0)
        str_0 = "Dd'\r"
        field_0 = module_0.Field()
        date_time_0 = module_0.DateTime()
        float_0 = -2947.468
        decimal_0 = module_0.Decimal(maximum=field_0, precision=str_0, multiple_of=float_0)
    except BaseException:
        pass

def test_case_32():
    try:
        field_0 = module_0.Field()
        union_0 = field_0.__or__(field_0)
        decimal_0 = module_1.Decimal()
        float_0 = module_0.Float(minimum=decimal_0)
        str_0 = 't^'
        str_1 = None
        choice_0 = module_0.Choice()
        set_0 = {choice_0}
        tuple_0 = (choice_0, set_0)
        any_0 = module_0.Any(title=str_0, description=str_1, default=tuple_0)
    except BaseException:
        pass

def test_case_33():
    try:
        decimal_0 = module_1.Decimal()
        str_0 = 'Iuz5\x0c\t~K/lRRTa\x0b]'
        number_0 = module_0.Number(exclusive_maximum=decimal_0, precision=str_0, multiple_of=decimal_0)
        any_0 = number_0.validate(decimal_0)
    except BaseException:
        pass

def test_case_34():
    try:
        int_0 = -327
        number_0 = module_0.Number()
        any_0 = number_0.validate(int_0)
        str_0 = ':"'
        any_1 = module_0.Any()
        const_0 = module_0.Const(any_1)
        bool_0 = True
        any_2 = number_0.validate(str_0, strict=bool_0)
    except BaseException:
        pass

def test_case_35():
    try:
        float_0 = None
        str_0 = ''
        number_0 = module_0.Number(maximum=float_0, precision=str_0)
        any_0 = number_0.validate(str_0)
    except BaseException:
        pass

def test_case_36():
    try:
        string_0 = module_0.String()
        string_1 = [string_0]
        array_0 = module_0.Array(string_1)
        str_0 = '7xP\x0c>/:'
        str_1 = [str_0]
        time_0 = module_0.Time()
        field_0 = module_0.Field(title=str_1)
    except BaseException:
        pass

def test_case_37():
    try:
        str_0 = '+\\^.(&C\t/OMh'
        field_0 = module_0.Field(title=str_0)
        bool_0 = False
        dict_0 = {}
        string_0 = module_0.String(trim_whitespace=bool_0, **dict_0)
        field_1 = module_0.Field(default=string_0)
        set_0 = {str_0, bool_0, field_0}
        const_0 = module_0.Const(bool_0)
        any_0 = const_0.validate(bool_0)
        decimal_0 = module_0.Decimal(maximum=bool_0, exclusive_minimum=set_0)
    except BaseException:
        pass

def test_case_38():
    try:
        number_0 = module_0.Number()
        str_0 = ':'
        str_1 = '^On\x0bCt5\x0b^!."v;t-'
        field_0 = module_0.Field(description=str_0)
        str_2 = '3pw-[4'
        str_3 = None
        dict_0 = {str_1: field_0, str_2: field_0, str_3: field_0}
        object_0 = module_0.Object(properties=dict_0, pattern_properties=dict_0)
    except BaseException:
        pass

def test_case_39():
    try:
        float_0 = -2597.5563
        bool_0 = True
        boolean_0 = module_0.Boolean(allow_null=bool_0)
        any_0 = boolean_0.validate(float_0)
    except BaseException:
        pass

def test_case_40():
    try:
        dict_0 = {}
        bool_0 = False
        str_0 = 'r1'
        array_0 = module_0.Array()
        any_0 = array_0.serialize(dict_0)
        string_0 = module_0.String(trim_whitespace=bool_0, min_length=str_0, pattern=str_0)
    except BaseException:
        pass

def test_case_41():
    try:
        int_0 = 6847
        number_0 = module_0.Number(exclusive_minimum=int_0)
        any_0 = number_0.validate(int_0)
    except BaseException:
        pass

def test_case_42():
    try:
        date_time_0 = module_0.DateTime()
        bool_0 = True
        float_0 = 1595.882942
        number_0 = module_0.Number(minimum=float_0, exclusive_minimum=float_0, exclusive_maximum=float_0)
        any_0 = number_0.validate(float_0, strict=bool_0)
    except BaseException:
        pass

def test_case_43():
    try:
        field_0 = module_0.Field()
        str_0 = None
        float_0 = None
        array_0 = module_0.Array(float_0)
        number_0 = module_0.Number()
        int_0 = 2211
        decimal_0 = module_0.Decimal(minimum=number_0, precision=str_0, multiple_of=int_0)
    except BaseException:
        pass

def test_case_44():
    try:
        bool_0 = None
        array_0 = module_0.Array()
        field_0 = module_0.Field()
        str_0 = 'eBF/&(%[$KMy/v;&'
        str_1 = 'v<rHJnB"?'
        field_1 = module_0.Field(title=str_0, description=str_1, default=bool_0, allow_null=bool_0)
        union_0 = field_1.__or__(field_0)
        any_0 = union_0.validate(bool_0)
    except BaseException:
        pass

def test_case_45():
    try:
        object_0 = module_0.Object()
        decimal_0 = module_1.Decimal()
        object_1 = module_0.Object(min_properties=decimal_0)
    except BaseException:
        pass

def test_case_46():
    try:
        str_0 = 'j\x0b'
        dict_0 = {str_0: str_0, str_0: str_0}
        object_0 = module_0.Object(required=str_0)
        field_0 = module_0.Field()
        object_1 = module_0.Object(properties=field_0)
        any_0 = object_1.validate(dict_0)
    except BaseException:
        pass

def test_case_47():
    try:
        string_0 = module_0.String()
        array_0 = module_0.Array(string_0)
        any_0 = array_0.validate(array_0)
    except BaseException:
        pass

def test_case_48():
    try:
        bool_0 = None
        array_0 = module_0.Array()
        any_0 = array_0.validate(bool_0)
    except BaseException:
        pass

def test_case_49():
    try:
        int_0 = -327
        number_0 = module_0.Number()
        any_0 = number_0.validate(int_0)
        any_1 = module_0.Any()
        const_0 = module_0.Const(any_1)
        bool_0 = False
        field_0 = module_0.Field(allow_null=bool_0)
        field_1 = module_0.Field()
        union_0 = field_1.__or__(field_0)
        tuple_0 = (union_0,)
        object_0 = module_0.Object(required=tuple_0)
    except BaseException:
        pass

def test_case_50():
    try:
        int_0 = -327
        str_0 = '6\\ZcIvwdL5N'
        decimal_0 = module_0.Decimal(maximum=int_0, precision=str_0, multiple_of=int_0)
        str_1 = None
        optional_0 = None
        field_0 = module_0.Field()
        str_2 = 'hzL{\x0bigF=7Zj|IdN`'
        bool_0 = False
        field_1 = module_0.Field(default=str_0, allow_null=bool_0)
        dict_0 = {str_1: field_0, str_0: field_0, str_2: field_1}
        object_0 = module_0.Object(properties=optional_0, pattern_properties=dict_0, max_properties=int_0)
    except BaseException:
        pass

def test_case_51():
    try:
        object_0 = module_0.Object()
        dict_0 = {}
        any_0 = object_0.validate(dict_0)
        list_0 = [any_0, object_0]
        int_0 = -4117
        array_0 = module_0.Array(list_0, int_0)
    except BaseException:
        pass

def test_case_52():
    try:
        object_0 = module_0.Object()
        dict_0 = {}
        any_0 = object_0.validate(dict_0)
        bytes_0 = b'\xd9\x0cu'
        number_0 = module_0.Number(multiple_of=bytes_0)
    except BaseException:
        pass

def test_case_53():
    try:
        object_0 = module_0.Object()
        dict_0 = {}
        bool_0 = None
        decimal_0 = module_1.Decimal()
        int_0 = 289
        object_1 = module_0.Object(additional_properties=bool_0, min_properties=int_0)
        any_0 = object_1.validate(dict_0)
    except BaseException:
        pass

def test_case_54():
    try:
        int_0 = -206
        int_1 = 29
        number_0 = module_0.Number(minimum=int_1)
        any_0 = number_0.validate(int_0)
    except BaseException:
        pass

def test_case_55():
    try:
        float_0 = None
        decimal_0 = module_0.Decimal()
        any_0 = decimal_0.serialize(float_0)
        number_0 = module_0.Number(minimum=float_0, exclusive_minimum=float_0, multiple_of=float_0)
        number_1 = module_0.Number()
        any_1 = number_1.validate(float_0)
    except BaseException:
        pass

def test_case_56():
    try:
        str_0 = '-'
        field_0 = module_0.Field(title=str_0)
        any_0 = field_0.get_default_value()
        const_0 = module_0.Const(field_0)
        any_1 = field_0.get_default_value()
        any_2 = const_0.validate(field_0)
        date_0 = module_0.Date()
        bool_0 = True
        array_0 = module_0.Array(const_0, date_0, bool_0)
        any_3 = array_0.serialize(str_0)
        bool_1 = None
        any_4 = const_0.validate(any_3, bool_1)
    except BaseException:
        pass

def test_case_57():
    try:
        string_0 = module_0.String()
        array_0 = module_0.Array(string_0)
        var_0 = []
        any_0 = array_0.serialize(var_0)
        str_0 = ''
        str_1 = [str_0]
        any_1 = array_0.validate(str_1)
    except BaseException:
        pass

def test_case_58():
    try:
        int_0 = -343
        number_0 = module_0.Number()
        any_0 = number_0.validate(int_0)
        any_1 = module_0.Any()
        any_2 = any_1.validate(number_0)
        str_0 = ';>HX~+j:JoVxT!,@_'
        field_0 = None
        str_1 = 'C.s.h?'
        dict_0 = {str_0: field_0, str_1: field_0, str_0: field_0}
        object_0 = module_0.Object(pattern_properties=dict_0, min_properties=int_0, max_properties=int_0)
    except BaseException:
        pass

def test_case_59():
    try:
        list_0 = []
        union_0 = module_0.Union(list_0)
        any_0 = union_0.validate(union_0)
    except BaseException:
        pass

def test_case_60():
    try:
        object_0 = module_0.Object()
        str_0 = 'Iuz59\tSK/uRR3a\x0b]'
        date_time_0 = module_0.DateTime()
        float_0 = None
        dict_0 = {str_0: object_0, str_0: object_0, str_0: float_0}
        any_0 = object_0.validate(dict_0)
        optional_0 = None
        bool_0 = None
        field_0 = module_0.Field(default=str_0, allow_null=bool_0)
        object_1 = module_0.Object(properties=optional_0, additional_properties=dict_0, property_names=field_0)
    except BaseException:
        pass

def test_case_61():
    try:
        bool_0 = None
        decimal_0 = module_1.Decimal()
        number_0 = module_0.Number(multiple_of=decimal_0)
        str_0 = '6\\ZcIvwdL5N'
        bool_1 = True
        field_0 = module_0.Field(default=number_0)
        bool_2 = True
        field_1 = module_0.Field(allow_null=bool_2)
        union_0 = field_1.__or__(field_0)
        any_0 = union_0.validate(bool_0, bool_1)
        int_0 = 3
        string_0 = module_0.String(max_length=int_0, min_length=int_0)
        list_0 = [number_0, bool_0, bool_0]
        choice_0 = module_0.Choice(choices=list_0)
        any_1 = module_0.Any(title=str_0, default=str_0)
        const_0 = module_0.Const(number_0)
        any_2 = number_0.validate(str_0, strict=bool_0)
    except BaseException:
        pass

def test_case_62():
    try:
        array_0 = module_0.Array()
        bool_0 = True
        str_0 = 'rH8\\l~;Z'
        boolean_0 = module_0.Boolean(description=str_0, allow_null=bool_0)
        any_0 = array_0.serialize(str_0)
        any_1 = boolean_0.validate(any_0)
    except BaseException:
        pass

def test_case_63():
    try:
        date_time_0 = module_0.DateTime()
        float_0 = 1595.882942
        number_0 = module_0.Number(minimum=float_0, exclusive_minimum=float_0, exclusive_maximum=float_0)
        float_1 = 2565.7686
        any_0 = number_0.validate(float_1)
    except BaseException:
        pass

def test_case_64():
    try:
        string_0 = module_0.String()
        array_0 = module_0.Array(string_0)
        str_0 = ''
        str_1 = [string_0, str_0]
        string_1 = module_0.String(pattern=str_0)
        bool_0 = False
        int_0 = -1705
        string_2 = module_0.String(allow_blank=bool_0, max_length=int_0, format=str_1)
    except BaseException:
        pass

def test_case_65():
    try:
        string_0 = module_0.String()
        time_0 = None
        bool_0 = False
        any_0 = string_0.validate(time_0, strict=bool_0)
    except BaseException:
        pass

def test_case_66():
    try:
        field_0 = module_0.Field()
        union_0 = field_0.__or__(field_0)
        union_1 = field_0.__or__(field_0)
        choice_0 = module_0.Choice()
        object_0 = module_0.Object(property_names=field_0, max_properties=choice_0)
    except BaseException:
        pass

def test_case_67():
    try:
        dict_0 = {}
        bool_0 = None
        bytes_0 = b'AV\xc7\xee\xc1TA'
        bool_1 = False
        const_0 = module_0.Const(bool_0, **dict_0)
        any_0 = const_0.validate(bytes_0, bool_1)
    except BaseException:
        pass

def test_case_68():
    try:
        date_time_0 = module_0.DateTime()
        float_0 = 1595.882942
        number_0 = module_0.Number(minimum=float_0, exclusive_minimum=float_0, exclusive_maximum=float_0)
        float_1 = 2565.7686
        dict_0 = {float_1: number_0, float_0: number_0, float_0: float_1, float_0: float_0}
        str_0 = ''
        int_0 = 861
        object_0 = module_0.Object(property_names=str_0, min_properties=int_0)
        any_0 = object_0.validate(dict_0)
    except BaseException:
        pass

def test_case_69():
    try:
        float_0 = -2434.0833701123674
        number_0 = module_0.Number(multiple_of=float_0)
        float_1 = 2565.7686
        bool_0 = True
        any_0 = number_0.validate(float_1, strict=bool_0)
    except BaseException:
        pass

def test_case_70():
    try:
        float_0 = None
        bool_0 = True
        str_0 = ':'
        string_0 = module_0.String(allow_blank=bool_0, format=str_0)
        any_0 = string_0.validate(float_0, strict=bool_0)
    except BaseException:
        pass

def test_case_71():
    try:
        object_0 = module_0.Object()
        str_0 = '-dV/\r-:FWwLT'
        field_0 = None
        str_1 = '>ZNEIHu?CLeU$f'
        str_2 = "?2V'VE"
        str_3 = '={guZi'
        dict_0 = {str_0: field_0, str_1: field_0, str_2: field_0, str_3: field_0}
        object_1 = module_0.Object(properties=dict_0, property_names=field_0)
    except BaseException:
        pass

def test_case_72():
    try:
        str_0 = 'i0P;l4'
        bool_0 = False
        bool_1 = True
        int_0 = -770
        string_0 = module_0.String(allow_blank=bool_1, max_length=int_0, min_length=int_0)
        any_0 = string_0.validate(str_0, strict=bool_0)
    except BaseException:
        pass

def test_case_73():
    try:
        complex_0 = None
        array_0 = module_0.Array()
        any_0 = array_0.serialize(complex_0)
        field_0 = module_0.Field()
        bool_0 = False
        str_0 = 'f'
        float_0 = 2157.19213
        boolean_0 = module_0.Boolean(description=str_0, default=any_0)
        any_1 = boolean_0.validate(float_0, strict=bool_0)
    except BaseException:
        pass

def test_case_74():
    try:
        decimal_0 = module_1.Decimal()
        str_0 = '3'
        number_0 = module_0.Number(exclusive_maximum=decimal_0, precision=str_0, multiple_of=decimal_0)
        any_0 = number_0.validate(decimal_0)
    except BaseException:
        pass

def test_case_75():
    try:
        object_0 = module_0.Object()
        str_0 = 'HIqH#"Z\'}u]o9\\'
        dict_0 = {str_0: object_0}
        str_1 = 'NxM |x4Q]M`\x0bdU%"s'
        field_0 = module_0.Field(description=str_0)
        dict_1 = {str_1: field_0, str_1: field_0, str_0: field_0}
        object_1 = module_0.Object(properties=dict_1, required=str_1)
        any_0 = object_1.validate(dict_0)
    except BaseException:
        pass

def test_case_76():
    try:
        decimal_0 = module_1.Decimal()
        bool_0 = False
        field_0 = module_0.Field()
        int_0 = -22
        object_0 = module_0.Object(min_properties=int_0, max_properties=int_0)
        str_0 = '8uUpYpF$K@x8cMh'
        integer_0 = module_0.Integer(maximum=int_0, exclusive_minimum=int_0, multiple_of=int_0)
        dict_0 = {str_0: decimal_0, str_0: int_0, str_0: integer_0, str_0: int_0}
        any_0 = object_0.validate(dict_0, strict=bool_0)
    except BaseException:
        pass

def test_case_77():
    try:
        bool_0 = None
        string_0 = module_0.String()
        str_0 = '_K].@K>P2/o>,{'
        field_0 = module_0.Field(description=str_0, default=bool_0)
        int_0 = -786
        bool_1 = True
        array_0 = module_0.Array(field_0, field_0, int_0, int_0, int_0, bool_1)
        any_0 = array_0.validate(string_0)
    except BaseException:
        pass

def test_case_78():
    try:
        str_0 = 'j\x0b'
        bool_0 = None
        dict_0 = {str_0: bool_0}
        field_0 = module_0.Field()
        int_0 = 851
        object_0 = module_0.Object(property_names=field_0, max_properties=int_0)
        any_0 = object_0.validate(dict_0)
    except BaseException:
        pass

def test_case_79():
    try:
        object_0 = module_0.Object()
        str_0 = 'K#'
        bool_0 = True
        bool_1 = True
        int_0 = 5574
        string_0 = module_0.String(allow_blank=bool_1, trim_whitespace=bool_0, max_length=int_0, min_length=int_0)
        any_0 = string_0.validate(str_0)
    except BaseException:
        pass

def test_case_80():
    try:
        dict_0 = {}
        float_0 = None
        date_time_0 = module_0.DateTime()
        integer_0 = module_0.Integer(exclusive_maximum=float_0)
        date_0 = module_0.Date()
        array_0 = module_0.Array(date_time_0, integer_0, date_0, **dict_0)
    except BaseException:
        pass

def test_case_81():
    try:
        str_0 = 'Z+'
        bool_0 = True
        field_0 = module_0.Field(title=str_0, allow_null=bool_0)
        object_0 = module_0.Object(additional_properties=bool_0)
        bool_1 = None
        dict_0 = {bool_0: bool_1, bool_1: object_0, object_0: field_0}
        any_0 = object_0.validate(dict_0)
    except BaseException:
        pass

def test_case_82():
    try:
        string_0 = module_0.String()
        array_0 = module_0.Array(string_0)
        str_0 = ''
        str_1 = [str_0]
        any_0 = array_0.validate(str_1)
    except BaseException:
        pass

def test_case_83():
    try:
        int_0 = -2290
        number_0 = module_0.Number(maximum=int_0, multiple_of=int_0)
        bool_0 = False
        date_time_0 = module_0.DateTime()
        bool_1 = None
        array_0 = module_0.Array(date_time_0, bool_0, int_0, int_0, int_0, bool_1)
    except BaseException:
        pass

def test_case_84():
    try:
        bool_0 = True
        str_0 = 'uxf^z'
        list_0 = [str_0, bool_0, bool_0, str_0]
        array_0 = module_0.Array()
        any_0 = array_0.validate(list_0)
        string_0 = module_0.String(allow_blank=bool_0, trim_whitespace=bool_0, pattern=str_0)
        any_1 = string_0.validate(str_0)
    except BaseException:
        pass

def test_case_85():
    try:
        str_0 = 'X'
        bool_0 = False
        field_0 = module_0.Field(allow_null=bool_0)
        dict_0 = {str_0: field_0, str_0: field_0}
        object_0 = module_0.Object(pattern_properties=dict_0)
        any_0 = object_0.validate(dict_0, strict=bool_0)
    except BaseException:
        pass

def test_case_86():
    try:
        string_0 = module_0.String()
        string_1 = [string_0]
        array_0 = module_0.Array(string_1)
        str_0 = '7xP\x0c>/:'
        str_1 = [str_0, str_0]
        any_0 = array_0.validate(str_1)
    except BaseException:
        pass

def test_case_87():
    try:
        string_0 = module_0.String()
        string_1 = [string_0]
        array_0 = module_0.Array(string_1)
        var_0 = []
        any_0 = array_0.serialize(var_0)
        str_0 = []
        any_1 = array_0.validate(str_0)
    except BaseException:
        pass

def test_case_88():
    try:
        string_0 = module_0.String()
        string_1 = [string_0]
        array_0 = module_0.Array(string_1)
        any_0 = array_0.serialize(string_1)
        str_0 = ''
        str_1 = [str_0]
        any_1 = array_0.validate(str_1)
    except BaseException:
        pass

def test_case_89():
    try:
        field_0 = module_0.Field()
        any_0 = field_0.get_default_value()
        str_0 = 'null'
        field_1 = module_0.Field(default=str_0)
        any_1 = field_1.get_default_value()
        str_1 = '1'
        field_2 = module_0.Field(default=str_1)
        any_2 = field_2.get_default_value()
        int_0 = 5
        var_0 = lambda : int_0
        field_3 = module_0.Field(default=var_0)
        any_3 = field_3.get_default_value()
    except BaseException:
        pass

def test_case_90():
    try:
        str_0 = 'date'
        string_0 = module_0.String(format=str_0)
        str_1 = '2020-11-13'
        any_0 = string_0.serialize(str_1)
    except BaseException:
        pass

def test_case_91():
    try:
        integer_0 = module_0.Integer()
        float_0 = module_0.Float()
        var_0 = [integer_0, float_0]
        union_0 = module_0.Union(var_0)
        any_0 = union_0.validate(float_0)
    except BaseException:
        pass

def test_case_92():
    try:
        str_0 = '*-+AY5C#I&AW'
        str_1 = '-yG\\'
        integer_0 = module_0.Integer()
        string_0 = module_0.String()
        var_0 = {str_0: integer_0, str_1: string_0}
        bool_0 = False
        object_0 = module_0.Object(properties=var_0, additional_properties=bool_0)
        any_0 = object_0.validate(var_0)
    except BaseException:
        pass

def test_case_93():
    try:
        str_0 = '*-+AY~C#I&AWv'
        str_1 = 'hZT\tmMEw5\x0b(U1_!\nXu['
        integer_0 = module_0.Integer()
        string_0 = module_0.String()
        var_0 = {str_0: integer_0, str_1: string_0}
        bool_0 = False
        object_0 = module_0.Object(properties=var_0, additional_properties=bool_0)
        int_0 = -412
        var_1 = {str_0: int_0, string_0: var_0, str_1: str_0, str_0: int_0}
        any_0 = object_0.validate(var_1)
    except BaseException:
        pass

def test_case_94():
    try:
        str_0 = '1'
        str_1 = '7'
        str_2 = (str_0, str_1)
        str_3 = [str_2]
        choice_0 = module_0.Choice(choices=str_3)
        any_0 = choice_0.validate(str_0)
        any_1 = choice_0.validate(str_1)
    except BaseException:
        pass

def test_case_95():
    try:
        str_0 = '*-+AY~C#I&AWv'
        str_1 = 'name'
        integer_0 = module_0.Integer()
        string_0 = module_0.String()
        var_0 = {str_0: integer_0}
        bool_0 = False
        object_0 = module_0.Object(properties=var_0, additional_properties=bool_0)
        int_0 = 20
        var_1 = {str_0: int_0, string_0: var_0, str_1: str_0, str_0: int_0}
        any_0 = object_0.validate(var_1)
    except BaseException:
        pass

def test_case_96():
    try:
        integer_0 = module_0.Integer()
        float_0 = module_0.Float()
        var_0 = [integer_0, float_0]
        union_0 = module_0.Union(var_0)
        int_0 = 1
        any_0 = union_0.validate(int_0)
        object_0 = module_0.Object()
        any_1 = object_0.validate(integer_0)
    except BaseException:
        pass