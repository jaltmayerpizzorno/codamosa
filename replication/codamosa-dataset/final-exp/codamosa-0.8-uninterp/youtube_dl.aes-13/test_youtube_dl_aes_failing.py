# Automatically generated by Pynguin.
import youtube_dl.aes as module_0

def test_case_0():
    try:
        int_0 = 3213
        var_0 = module_0.shift_rows(int_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'Chet Chat 171 - Oct 29, 2014'
        str_1 = ''
        str_2 = "$&=\ti6k~C\tN\\'#c+?\r0"
        int_0 = -2883
        tuple_0 = (str_2, int_0)
        var_0 = module_0.aes_ctr_decrypt(str_0, str_1, tuple_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bool_0 = None
        str_0 = 'TT4=i\x0bh&\\B?CegU'
        int_0 = -17
        var_0 = module_0.aes_cbc_decrypt(bool_0, str_0, int_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bool_0 = False
        tuple_0 = ()
        var_0 = module_0.aes_decrypt(tuple_0, tuple_0)
        var_1 = module_0.key_expansion(bool_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'Chet Chat 171 - Oct 29, 2014'
        set_0 = {str_0}
        bool_0 = True
        var_0 = module_0.aes_decrypt_text(str_0, set_0, bool_0)
    except BaseException:
        pass

def test_case_5():
    try:
        bytes_0 = b'\xfe]I\xb9\x80\xa2a'
        var_0 = module_0.sub_bytes_inv(bytes_0)
        bool_0 = True
        var_1 = module_0.rotate(bool_0)
    except BaseException:
        pass

def test_case_6():
    try:
        bool_0 = True
        var_0 = module_0.rotate(bool_0)
    except BaseException:
        pass

def test_case_7():
    try:
        int_0 = 2473
        str_0 = '*P4Hb\n\nkX}lJ'
        var_0 = module_0.key_schedule_core(int_0, str_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = "['NgiH]F 8[w}[s\x0b\ra"
        var_0 = module_0.mix_columns(str_0)
    except BaseException:
        pass

def test_case_9():
    try:
        int_0 = -287
        var_0 = module_0.mix_columns_inv(int_0)
    except BaseException:
        pass

def test_case_10():
    try:
        float_0 = 472.481
        var_0 = module_0.shift_rows_inv(float_0)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = '%'
        var_0 = module_0.inc(str_0)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = 'ChGwP /AL0%.a(ypO'
        var_0 = module_0.sub_bytes(str_0)
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = '0_w}dhX@6b^X'
        list_0 = [str_0, str_0]
        var_0 = module_0.aes_decrypt(str_0, list_0)
    except BaseException:
        pass

def test_case_14():
    try:
        bytes_0 = b'\xdesA\xef\x1ePT\xb2'
        var_0 = module_0.mix_columns_inv(bytes_0)
    except BaseException:
        pass

def test_case_15():
    try:
        int_0 = 21
        int_1 = -214
        bool_0 = False
        var_0 = module_0.rijndael_mul(int_1, bool_0)
        list_0 = None
        set_0 = {list_0}
        tuple_0 = (int_0, set_0)
        float_0 = -1942.255424
        var_1 = module_0.aes_cbc_decrypt(list_0, tuple_0, float_0)
    except BaseException:
        pass

def test_case_16():
    try:
        tuple_0 = ()
        var_0 = module_0.inc(tuple_0)
        bool_0 = False
        float_0 = 528.21988
        float_1 = 657.0
        dict_0 = {var_0: float_0, bool_0: float_1, float_0: bool_0}
        bytes_0 = b''
        var_1 = module_0.aes_decrypt(dict_0, bytes_0)
        list_0 = [bool_0, bool_0, bool_0, bool_0, bool_0]
        var_2 = module_0.aes_ctr_decrypt(dict_0, list_0, dict_0)
    except BaseException:
        pass

def test_case_17():
    try:
        str_0 = '12345678'
        int_0 = 16
        str_1 = 'pfkSDRGseH1RTnFnYXBpYy4u'
        var_0 = module_0.aes_decrypt_text(str_1, str_0, int_0)
        str_2 = '\n'
        var_1 = print(str_2)
        str_3 = 'aes_decrypt_text'
        var_2 = print(str_3)
        str_4 = '  Output:'
        var_3 = print(str_4)
        str_5 = '    decrypted_data: '
        var_4 = str_5 + var_0
    except BaseException:
        pass