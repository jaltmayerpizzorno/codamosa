# Automatically generated by Pynguin.
import ansible.parsing.splitter as module_0

def test_case_0():
    try:
        float_0 = 2940.0
        var_0 = module_0.parse_kv(float_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'r"h3Sl`'
        var_0 = module_0.split_args(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b'\x14\xb56w\x02\xf7]\xf1\xcc\xccn\xc0\x91\xe0\x842'
        var_0 = module_0.join_args(bytes_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '\n        Handles the role handler compilation step, returning a flat list of Handlers\n        This is done for all roles in the Play.\n        '
        var_0 = module_0.parse_kv(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'a=b c="foo bar"'
        var_0 = module_0.split_args(str_0)
        str_1 = '=q'
        var_1 = module_0.parse_kv(str_1)
        str_2 = ':e++\n2'
        var_2 = module_0.parse_kv(str_2)
        float_0 = 100.0
        var_3 = module_0.parse_kv(float_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = "}q\x0biu' lc?3nn}[=c\x0b\nJ"
        var_0 = module_0.split_args(str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'foo=bar baz=blam'
        var_0 = module_0.parse_kv(str_0)
        str_1 = '\nThis file provides ease of use shortcuts for loading and dumping YAML,\npreferring the YAML compiled C extensions to reduce duplicated code.\n'
        var_1 = module_0.parse_kv(str_1)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'foo=\'bar baz\' bazq"bar\'d" name=value"raw string" "other raw string"'
        str_1 = '}}'
        var_0 = module_0.split_args(str_1)
        var_1 = module_0.split_args(str_0)
        int_0 = 24
        tuple_0 = ()
        list_0 = [int_0, int_0, str_0]
        var_2 = module_0.parse_kv(tuple_0, list_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = 'this=that creates=foo bar'
        float_0 = 0.001
        var_0 = module_0.parse_kv(str_0, float_0)
        float_1 = 2856.5145
        var_1 = module_0.parse_kv(float_1)
    except BaseException:
        pass