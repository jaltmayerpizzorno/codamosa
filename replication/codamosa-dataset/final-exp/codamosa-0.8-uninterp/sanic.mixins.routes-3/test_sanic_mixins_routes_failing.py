# Automatically generated by Pynguin.
import sanic.mixins.routes as module_0
import sanic.compat as module_1

def test_case_0():
    try:
        str_0 = '/'
        float_0 = None
        str_1 = 'Ojql@\n81aOlrCnA'
        list_0 = []
        route_mixin_0 = module_0.RouteMixin(*list_0)
        var_0 = route_mixin_0.static(float_0, str_0, str_1, route_mixin_0)
    except BaseException:
        pass

def test_case_1():
    try:
        route_mixin_0 = module_0.RouteMixin()
        var_0 = route_mixin_0.add_route(route_mixin_0, route_mixin_0, route_mixin_0, route_mixin_0, route_mixin_0, route_mixin_0)
    except BaseException:
        pass

def test_case_2():
    try:
        int_0 = 8000
        str_0 = '_task'
        iterable_0 = None
        list_0 = []
        route_mixin_0 = module_0.RouteMixin(*list_0)
        var_0 = route_mixin_0.add_route(int_0, str_0, iterable_0)
    except BaseException:
        pass

def test_case_3():
    try:
        route_mixin_0 = module_0.RouteMixin()
        str_0 = '!,j!k;{IB'
        var_0 = route_mixin_0.add_websocket_route(str_0, str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'WWOE!=[\nYZSkLRR'
        dict_0 = {str_0: str_0}
        route_mixin_0 = module_0.RouteMixin(**dict_0)
        var_0 = route_mixin_0.add_websocket_route(str_0, str_0, str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        route_mixin_0 = module_0.RouteMixin()
        var_0 = None
        var_1 = None
        var_2 = None
        var_3 = route_mixin_0.add_route(var_0, var_1, var_1, var_1, var_1, var_2)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'f~z-i$'
        route_mixin_0 = module_0.RouteMixin()
        var_0 = route_mixin_0.add_route(str_0, str_0, str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = "?q'f^&+WEoBQ0*"
        set_0 = {str_0, str_0, str_0, str_0}
        tuple_0 = ()
        list_0 = [set_0, tuple_0, tuple_0, tuple_0, tuple_0]
        route_mixin_0 = module_0.RouteMixin(*list_0)
        str_1 = 'Q\x0c|Hk<ZIKw*u*\ri+(<B%'
        bool_0 = True
        var_0 = route_mixin_0.post(str_1, bool_0, str_0)
        var_1 = route_mixin_0.add_websocket_route(str_0, str_0, set_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = None
        list_0 = [str_0, str_0, str_0]
        route_mixin_0 = module_0.RouteMixin()
        var_0 = route_mixin_0.head(str_0, str_0, list_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = '|,YohD}jarA09y-3z'
        route_mixin_0 = module_0.RouteMixin()
        var_0 = route_mixin_0.options(str_0, str_0)
        str_1 = "wMWD\x0bwDa;%UgcT'A"
        str_2 = 'H\x0bf|4Ykq\x0cy\\]#'
        optional_0 = None
        var_1 = route_mixin_0.add_websocket_route(str_1, str_2, optional_0, str_2)
    except BaseException:
        pass

def test_case_10():
    try:
        header_0 = module_1.Header()
        bytes_0 = b''
        route_mixin_0 = module_0.RouteMixin()
        var_0 = route_mixin_0.static(header_0, bytes_0)
    except BaseException:
        pass

def test_case_11():
    try:
        int_0 = -3039
        pure_path_0 = None
        dict_0 = None
        str_0 = 'server'
        str_1 = '/iN_8'
        dict_1 = {str_0: pure_path_0, str_1: int_0}
        route_mixin_0 = module_0.RouteMixin()
        var_0 = route_mixin_0.static(int_0, pure_path_0, dict_0, dict_1, dict_0)
    except BaseException:
        pass

def test_case_12():
    try:
        route_mixin_0 = module_0.RouteMixin()
        str_0 = ',j!k;{IB'
        int_0 = -1997
        var_0 = route_mixin_0.add_websocket_route(int_0, str_0, str_0)
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = '3p%G%2f nmAAh'
        int_0 = 32
        list_0 = []
        dict_0 = {}
        route_mixin_0 = module_0.RouteMixin(*list_0, **dict_0)
        var_0 = route_mixin_0.add_websocket_route(str_0, str_0, int_0)
    except BaseException:
        pass

def test_case_14():
    try:
        route_mixin_0 = module_0.RouteMixin()
        bytes_0 = b'\x0cC\xcc\xd4\xa5\xd8h\x14\xdb+a\xff+PO\x893\x1fa'
        tuple_0 = (bytes_0,)
        str_0 = 'Traceback of '
        int_0 = -5
        bool_0 = True
        var_0 = route_mixin_0.add_route(tuple_0, str_0, int_0, bool_0)
    except BaseException:
        pass

def test_case_15():
    try:
        str_0 = "'2XN>PMjk"
        route_mixin_0 = module_0.RouteMixin()
        var_0 = route_mixin_0.options(str_0)
        bool_0 = False
        str_1 = ''
        var_1 = route_mixin_0.add_route(route_mixin_0, str_1, bool_0)
    except BaseException:
        pass

def test_case_16():
    try:
        route_mixin_0 = module_0.RouteMixin()
        str_0 = '/test'
        str_1 = '/test'
        str_2 = '/?.+'
        bool_0 = True
        bool_1 = False
        bool_2 = False
        str_3 = 'static'
        str_4 = '127.0.0.1'
        bool_3 = False
        str_5 = 'text/plain'
        var_0 = route_mixin_0.static(str_0, str_1, str_2, bool_0, bool_1, bool_2, str_3, str_4, bool_3, str_5)
    except BaseException:
        pass

def test_case_17():
    try:
        str_0 = '.4vG{1T"iYxi'
        route_mixin_0 = module_0.RouteMixin()
        var_0 = route_mixin_0.options(str_0, str_0)
        bool_0 = False
        str_1 = ''
        int_0 = -119
        var_1 = route_mixin_0.get(str_1, bool_0, int_0, bool_0)
        var_2 = route_mixin_0.add_route(str_0, str_1, str_1, bool_0)
    except BaseException:
        pass