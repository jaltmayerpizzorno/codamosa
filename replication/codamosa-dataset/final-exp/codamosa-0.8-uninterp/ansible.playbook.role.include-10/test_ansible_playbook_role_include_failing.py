# Automatically generated by Pynguin.
import ansible.playbook.role.include as module_0
import ansible.parsing.yaml.objects as module_1

def test_case_0():
    try:
        role_include_0 = module_0.RoleInclude()
        int_0 = 1431
        set_0 = None
        var_0 = role_include_0.load(int_0, set_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'update'
        dict_0 = None
        bytes_0 = b"\x01\xacb'\n\xe2\xf9\xbe\xa0[\x96\x9b\x1e\xfc{\xa0\xa0\xf3w"
        tuple_0 = (dict_0, bytes_0, str_0)
        list_0 = [tuple_0, dict_0, tuple_0, dict_0]
        role_include_0 = module_0.RoleInclude()
        var_0 = role_include_0.load(str_0, str_0, tuple_0, list_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '\n    Test method RoleInclude.load()\n    '
        ansible_base_y_a_m_l_object_0 = module_1.AnsibleBaseYAMLObject()
        bytes_0 = b'\xcbSx\xf3'
        dict_0 = {bytes_0: str_0, str_0: bytes_0, bytes_0: ansible_base_y_a_m_l_object_0, ansible_base_y_a_m_l_object_0: bytes_0}
        list_0 = [str_0]
        set_0 = set()
        float_0 = -144.889841
        role_include_0 = module_0.RoleInclude(list_0, set_0, float_0)
        var_0 = role_include_0.load(ansible_base_y_a_m_l_object_0, bytes_0, dict_0, bytes_0)
    except BaseException:
        pass

def test_case_3():
    try:
        role_include_0 = None
        dict_0 = {role_include_0: role_include_0, role_include_0: role_include_0, role_include_0: role_include_0}
        list_0 = [dict_0, dict_0, dict_0]
        role_include_1 = module_0.RoleInclude(dict_0, list_0, dict_0)
        int_0 = 2324
        float_0 = 155.23259
        tuple_0 = (int_0, float_0)
        float_1 = -2332.0
        var_0 = role_include_1.load(dict_0, tuple_0, float_1)
    except BaseException:
        pass

def test_case_4():
    try:
        role_include_0 = None
        dict_0 = {role_include_0: role_include_0, role_include_0: role_include_0, role_include_0: role_include_0}
        role_include_1 = module_0.RoleInclude(dict_0, role_include_0)
        list_0 = [dict_0, dict_0, dict_0]
        role_include_2 = module_0.RoleInclude(dict_0, list_0, dict_0)
        str_0 = '\r\\`;}\r$R,k8r~|x['
        str_1 = 'Y{+3/yHStcy4U'
        bytes_0 = b'\xe4\x0bH\xb8:\x1a\xa9"$\xf6k\x02Y,\x00\x91'
        var_0 = role_include_1.load(str_0, dict_0, str_1, bytes_0)
    except BaseException:
        pass