# Automatically generated by Pynguin.
import builtins as module_0
import pymonet.box as module_1

def test_case_0():
    pass

def test_case_1():
    object_0 = module_0.object()
    box_0 = module_1.Box(object_0)

def test_case_2():
    list_0 = []
    object_0 = module_0.object(*list_0)
    bytes_0 = b'\x19\xe5C\xef\xe9\xa0\xb3\xa3r\x96\x8d\xean\xac'
    object_1 = module_0.object()
    tuple_0 = (bytes_0, object_1)
    box_0 = module_1.Box(tuple_0)
    bool_0 = box_0.__eq__(object_0)

def test_case_3():
    str_0 = '\n        Call success_callback function with monad value when monad is successfully.\n\n        :params success_callback: function to apply with monad value.\n        :type success_callback: Function(A)\n        :returns: self\n        :rtype: Try[A]\n        '
    var_0 = None
    box_0 = module_1.Box(var_0)
    object_0 = module_0.object()
    bool_0 = box_0.__eq__(object_0)
    box_1 = module_1.Box(str_0)
    str_1 = box_1.__str__()
    object_1 = None
    bool_1 = box_1.__eq__(object_1)

def test_case_4():
    bool_0 = True
    box_0 = module_1.Box(bool_0)
    var_0 = box_0.to_maybe()

def test_case_5():
    list_0 = []
    object_0 = module_0.object()
    box_0 = module_1.Box(object_0)
    var_0 = box_0.to_try()
    object_1 = module_0.object(*list_0)
    box_1 = module_1.Box(object_1)
    var_1 = box_1.to_either()

def test_case_6():
    object_0 = module_0.object()
    bytes_0 = b'u\xf1\xd5\xd0}\xbb\xed-\x0bxc\x06P'
    box_0 = module_1.Box(bytes_0)
    bool_0 = box_0.__eq__(object_0)
    var_0 = box_0.to_validation()
    var_1 = box_0.to_try()
    var_2 = box_0.to_validation()

def test_case_7():
    int_0 = 1
    box_0 = module_1.Box(int_0)
    box_1 = module_1.Box(int_0)
    box_2 = module_1.Box(int_0)
    int_1 = 2
    box_3 = module_1.Box(int_1)
    var_0 = box_2 == box_3
    box_4 = module_1.Box(int_0)
    var_1 = box_4 == int_0