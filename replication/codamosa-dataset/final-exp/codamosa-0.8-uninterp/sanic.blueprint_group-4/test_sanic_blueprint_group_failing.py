# Automatically generated by Pynguin.
import sanic.blueprint_group as module_0
import sanic.blueprints as module_1

def test_case_0():
    try:
        tuple_0 = ()
        set_0 = {tuple_0}
        blueprint_group_0 = module_0.BlueprintGroup()
        var_0 = blueprint_group_0.__getitem__(set_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'o~~Y'
        bool_0 = False
        dict_0 = {str_0: str_0, str_0: str_0, bool_0: bool_0}
        blueprint_group_0 = module_0.BlueprintGroup()
        blueprint_group_0.__setitem__(str_0, dict_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b'\x82TC\xcd\xd3|\x88'
        blueprint_group_0 = module_0.BlueprintGroup()
        blueprint_group_0.__delitem__(bytes_0)
    except BaseException:
        pass

def test_case_3():
    try:
        int_0 = 1024
        str_0 = '@~*Gj`~Ex\x0ch2'
        blueprint_0 = module_1.Blueprint(str_0)
        blueprint_group_0 = module_0.BlueprintGroup(blueprint_0)
        var_0 = blueprint_group_0.middleware()
        list_0 = [str_0, str_0, str_0, str_0]
        str_1 = 'I0ljmI/"x<,)UNHL9i'
        str_2 = 'm9a \nZfpoEN=\t~'
        dict_0 = {str_2: list_0, str_1: str_2, str_1: str_1, str_2: str_2}
        int_1 = 650
        blueprint_group_1 = module_0.BlueprintGroup(dict_0, int_1)
        blueprint_group_1.insert(int_0, blueprint_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = '<Jr]u3d|IKxWv(`'
        int_0 = 4093
        bool_0 = True
        blueprint_0 = module_1.Blueprint(str_0, str_0, bool_0)
        bool_1 = True
        blueprint_group_0 = module_0.BlueprintGroup(bool_1, bool_1)
        blueprint_group_0.insert(int_0, blueprint_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'bp1'
        blueprint_0 = module_1.Blueprint(str_0)
        str_1 = 'bp2'
        blueprint_1 = module_1.Blueprint(str_1)
        str_2 = 'bp3'
        blueprint_2 = module_1.Blueprint(str_2)
        str_3 = 'bp4'
        blueprint_3 = module_1.Blueprint(str_3)
        str_4 = '/api'
        str_5 = 'v1'
        blueprint_group_0 = module_0.BlueprintGroup(str_4, str_5)
        var_0 = blueprint_group_0._blueprints
        var_1 = len(var_0)
        blueprint_group_0.append(blueprint_0)
        blueprint_group_0.append(blueprint_1)
        var_2 = blueprint_group_0._blueprints
        var_3 = len(var_2)
        blueprint_group_0.append(blueprint_group_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = ']kbkQ'
        blueprint_0 = module_1.Blueprint(str_0)
        blueprint_group_0 = module_0.BlueprintGroup(blueprint_0)
        var_0 = blueprint_group_0.middleware()
        var_1 = blueprint_group_0.__iter__()
        dict_0 = {}
        blueprint_group_1 = module_0.BlueprintGroup()
        blueprint_group_1.append(blueprint_0)
        blueprint_group_2 = module_0.BlueprintGroup()
        var_2 = blueprint_group_2.middleware(**dict_0)
        list_0 = []
        var_3 = blueprint_group_2.middleware(*list_0, **dict_0)
        list_1 = [var_0]
        blueprint_group_3 = module_0.BlueprintGroup(str_0)
        var_4 = blueprint_group_3.__iter__()
        var_5 = blueprint_group_1.middleware(*list_1)
        blueprint_group_4 = module_0.BlueprintGroup()
        blueprint_group_5 = module_0.BlueprintGroup()
        int_0 = 511
        blueprint_group_0.insert(int_0, blueprint_0)
    except BaseException:
        pass