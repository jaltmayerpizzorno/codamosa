# Automatically generated by Pynguin.
import ansible.playbook.block as module_0

def test_case_0():
    try:
        float_0 = -408.51
        int_0 = 4270
        bytes_0 = b'rU\x8a'
        block_0 = module_0.Block(bytes_0)
        bool_0 = True
        int_1 = -162
        tuple_0 = (int_1, float_0, float_0)
        set_0 = {int_1, float_0}
        int_2 = -4408
        block_1 = module_0.Block(bool_0, tuple_0, set_0, int_2)
        dict_0 = {bytes_0: block_1, bytes_0: int_2}
        block_2 = module_0.Block(float_0, int_0, block_0, dict_0)
        var_0 = block_2.get_dep_chain()
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = "\ts8zrUulK+p^'!xdm"
        list_0 = None
        float_0 = -916.251
        block_0 = module_0.Block(float_0)
        var_0 = block_0.set_loader(list_0)
        var_1 = block_0.preprocess_data(str_0)
        block_1 = module_0.Block()
        var_2 = block_1.__eq__(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        float_0 = 2441.47
        block_0 = module_0.Block()
        set_0 = set()
        list_0 = [set_0]
        str_0 = 'collections'
        block_1 = module_0.Block(list_0, str_0)
        bytes_0 = b'\xd9K\x91zD\xb2\xf5z\xe0\xac\x19{\xda\xc6e\n\x99\xad\xbf*'
        block_2 = module_0.Block(float_0, block_0, bytes_0)
        var_0 = block_2.get_vars()
        var_1 = block_1.filter_tagged_tasks(float_0)
        var_2 = block_2.serialize()
    except BaseException:
        pass

def test_case_3():
    try:
        block_0 = None
        bool_0 = True
        list_0 = [block_0, bool_0]
        block_1 = module_0.Block()
        var_0 = block_1.load(block_0, list_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = '9]c\n_8W\\r?a\t?ajaK|C'
        list_0 = [str_0]
        set_0 = {str_0, str_0}
        bool_0 = False
        block_0 = module_0.Block(bool_0)
        var_0 = block_0.load(list_0, str_0, set_0)
    except BaseException:
        pass

def test_case_5():
    try:
        float_0 = 1739.0
        set_0 = {float_0, float_0}
        block_0 = module_0.Block(float_0, set_0)
        var_0 = block_0.get_dep_chain()
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'tNLU#t$a</E+2cv7E'
        str_1 = 'K}fr9u'
        block_0 = module_0.Block(str_1)
        var_0 = block_0.deserialize(str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        block_0 = None
        set_0 = {block_0}
        tuple_0 = None
        dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0}
        block_1 = module_0.Block(dict_0, dict_0)
        var_0 = block_1.set_loader(set_0)
    except BaseException:
        pass

def test_case_8():
    try:
        bool_0 = False
        list_0 = [bool_0]
        bytes_0 = b'\x844\xd4\xc7Y<\x1b\xcc\xe8'
        str_0 = '--private-key'
        block_0 = module_0.Block()
        var_0 = block_0.set_loader(str_0)
        bool_1 = False
        float_0 = -1249.69945
        int_0 = -37
        set_0 = {float_0, bytes_0}
        block_1 = module_0.Block(set_0, int_0)
        float_1 = 53.3273
        block_2 = module_0.Block(block_1, float_1)
        block_3 = module_0.Block(block_2)
        var_1 = block_3.get_dep_chain()
        str_1 = 'W"T~A&<__t,~;$z'
        tuple_0 = (float_0, int_0, str_1, bool_0)
        block_4 = module_0.Block(bytes_0, bool_1, tuple_0)
        var_2 = block_4.is_block(tuple_0)
        var_3 = block_4.set_loader(list_0)
    except BaseException:
        pass

def test_case_9():
    try:
        bytes_0 = b'C<p'
        dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
        block_0 = module_0.Block(bytes_0, dict_0)
        var_0 = block_0.serialize()
    except BaseException:
        pass

def test_case_10():
    try:
        block_0 = module_0.Block()
        str_0 = 'type'
        str_1 = 'block'
        var_0 = []
        var_1 = {str_0: str_1, str_1: var_0}
        str_2 = 'parent'
        var_2 = block_0.get_include_params()
        var_3 = {str_2: var_1}
        var_4 = block_0.deserialize(var_3)
    except BaseException:
        pass

def test_case_11():
    try:
        dict_0 = {}
        float_0 = 1367.81635
        list_0 = []
        block_0 = module_0.Block(dict_0, float_0, list_0)
        var_0 = block_0.__repr__()
        str_0 = ',@Mbp'
        list_1 = [str_0, str_0, str_0, str_0]
        block_1 = module_0.Block(str_0, list_1)
        var_1 = block_1.get_include_params()
    except BaseException:
        pass

def test_case_12():
    try:
        bytes_0 = b'?M\x9bZU'
        block_0 = module_0.Block(bytes_0)
        bool_0 = True
        dict_0 = {}
        block_1 = module_0.Block(block_0, bool_0, dict_0)
        var_0 = block_1.serialize()
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = '9]c\n_8W\\r?a\t?ajaK|C'
        str_1 = 'NG39uQm98QL^*{W'
        int_0 = 0
        dict_0 = {str_0: str_0, str_1: str_1, int_0: int_0, int_0: str_1}
        list_0 = [str_0, str_0]
        dict_1 = {}
        int_1 = None
        str_2 = '0242ac11-0014-6da8-3b79-0000000003b8'
        tuple_0 = (list_0, dict_1, int_1, str_2)
        float_0 = 2405.711
        block_0 = module_0.Block(float_0)
        block_1 = module_0.Block(tuple_0, block_0)
        var_0 = block_1.is_block(dict_0)
        list_1 = [str_0]
        set_0 = {str_0, str_0}
        bool_0 = False
        block_2 = module_0.Block(bool_0)
        var_1 = block_2.load(list_1, str_0, set_0)
    except BaseException:
        pass

def test_case_14():
    try:
        str_0 = 'zE1tZuj^,/'
        block_0 = module_0.Block(str_0, str_0)
        var_0 = block_0.get_first_parent_include()
    except BaseException:
        pass

def test_case_15():
    try:
        block_0 = module_0.Block()
        var_0 = block_0.serialize()
        block_1 = module_0.Block(block_0)
        int_0 = 257
        var_1 = block_1.filter_tagged_tasks(int_0)
        var_2 = block_1.has_tasks()
        list_0 = [var_0]
        bytes_0 = b':\x8b\x81+\x07\xc4\xe5\xe1\xc7\xe3\xcf\xf0'
        float_0 = 1378.536768
        var_3 = block_0.load(list_0, bytes_0, float_0, list_0)
    except BaseException:
        pass

def test_case_16():
    try:
        block_0 = module_0.Block()
        str_0 = 'block'
        var_0 = {str_0: str_0, str_0: str_0}
        str_1 = 'parent'
        var_1 = {str_1: var_0}
        var_2 = block_0.deserialize(var_1)
    except BaseException:
        pass

def test_case_17():
    try:
        float_0 = 2441.47
        block_0 = module_0.Block()
        set_0 = set()
        list_0 = [set_0]
        str_0 = 'collections'
        block_1 = module_0.Block(list_0, str_0)
        bytes_0 = b'\xd9K\x91zD\xb2\xf5z\xe0\xac\x19{\xda\xc6e\n\x99\xad\xbf*'
        block_2 = module_0.Block(float_0, block_0, bytes_0)
        var_0 = block_1.filter_tagged_tasks(float_0)
        var_1 = block_2.serialize()
    except BaseException:
        pass

def test_case_18():
    try:
        tuple_0 = ()
        float_0 = 2441.47
        block_0 = module_0.Block()
        str_0 = 'collections'
        bytes_0 = b'\xd9K\x91zD\xb2\xf5z\xe0\xac\x19{\xda\xc6e\n\x99\xad\xbf*'
        block_1 = module_0.Block(float_0, block_0, bytes_0)
        float_1 = -5618.2018
        dict_0 = {str_0: float_1, float_0: tuple_0}
        var_0 = block_1.copy(str_0, tuple_0)
        var_1 = block_0.deserialize(dict_0)
        var_2 = block_1.serialize()
    except BaseException:
        pass

def test_case_19():
    try:
        block_0 = module_0.Block()
        str_0 = 'type'
        str_1 = 'block'
        var_0 = []
        var_1 = {str_0: str_1, str_1: var_0}
        str_2 = 'parent'
        var_2 = {str_2: var_1}
        str_3 = "\\<2:zC 'gboW"
        set_0 = {str_0}
        int_0 = 2201
        block_1 = module_0.Block(set_0, set_0, block_0, int_0)
        var_3 = block_1.filter_tagged_tasks(str_3)
        var_4 = block_0.deserialize(var_2)
    except BaseException:
        pass

def test_case_20():
    try:
        tuple_0 = ()
        float_0 = 1000.0
        str_0 = '*HlB-0f%r'
        str_1 = 'O4'
        block_0 = module_0.Block(tuple_0)
        block_1 = module_0.Block(float_0, str_0)
        var_0 = block_1.__repr__()
        var_1 = block_1.has_tasks()
        var_2 = block_1.filter_tagged_tasks(tuple_0)
        bool_0 = True
        block_2 = module_0.Block(block_0, str_1)
        var_3 = block_1.preprocess_data(bool_0)
        set_0 = set()
        list_0 = [set_0]
        str_2 = 'collections'
        block_3 = module_0.Block(list_0, str_2)
        float_1 = -5618.2018
        dict_0 = {str_2: float_1}
        var_4 = block_0.deserialize(dict_0)
        var_5 = block_2.serialize()
    except BaseException:
        pass

def test_case_21():
    try:
        tuple_0 = ()
        float_0 = 1000.0
        str_0 = 'u*HB-0f%r'
        str_1 = 'O4'
        block_0 = module_0.Block(tuple_0)
        var_0 = block_0.is_block(str_1)
        block_1 = module_0.Block(float_0, str_0)
        var_1 = block_1.has_tasks()
        float_1 = 2408.937024409962
        var_2 = block_1.filter_tagged_tasks(tuple_0)
        bool_0 = True
        var_3 = block_1.preprocess_data(bool_0)
        set_0 = set()
        list_0 = [set_0]
        str_2 = 'collections'
        block_2 = module_0.Block(list_0, str_2)
        bytes_0 = b'\xd9K\x91zD\xb2\xf5z\xe0\xac\x19\xdae\n\x99\xad\xbf*'
        block_3 = module_0.Block(float_1, block_0, bytes_0)
        var_4 = block_3.get_vars()
        var_5 = block_3.copy(str_2, tuple_0)
        var_6 = block_3.all_parents_static()
        bytes_1 = b'\xcdm\x1dHt\x0e'
        var_7 = block_3.set_loader(bytes_1)
        var_8 = block_0.get_dep_chain()
        str_3 = 'always_child_state'
        var_9 = block_2.deserialize(str_3)
    except BaseException:
        pass

def test_case_22():
    try:
        tuple_0 = ()
        float_0 = 1000.188655695238
        str_0 = '\x0b6N6E+,ufd%-95l'
        list_0 = []
        block_0 = module_0.Block(str_0, list_0, str_0)
        str_1 = 'u*HB-0f%r'
        str_2 = 'O4'
        block_1 = module_0.Block(tuple_0)
        var_0 = block_1.is_block(str_2)
        block_2 = module_0.Block(float_0, str_1)
        var_1 = block_2.has_tasks()
        var_2 = block_2.filter_tagged_tasks(tuple_0)
        set_0 = set()
        str_3 = 'collections'
        block_3 = module_0.Block(list_0, str_3)
        block_4 = module_0.Block(block_0, block_1, var_2)
        float_1 = -5618.2018
        var_3 = block_4.get_vars()
        dict_0 = {str_3: float_1, float_0: tuple_0}
        var_4 = block_4.copy(str_3, tuple_0)
        var_5 = block_4.all_parents_static()
        var_6 = block_4.set_loader(str_3)
        var_7 = block_1.deserialize(dict_0)
        var_8 = block_1.get_first_parent_include()
        var_9 = block_0.filter_tagged_tasks(set_0)
        var_10 = block_4.serialize()
    except BaseException:
        pass

def test_case_23():
    try:
        tuple_0 = ()
        block_0 = module_0.Block(tuple_0)
        float_0 = 2408.937024409962
        str_0 = 'collections'
        bytes_0 = b'\xd9K\x91zD\xb2\xf5z\xe0\xac\x19{\xda\xc6e\n\x99\xad\xbf*'
        block_1 = module_0.Block(float_0, block_0, bytes_0)
        float_1 = -5648.90583249959
        var_0 = block_1.get_vars()
        dict_0 = {str_0: float_1, float_0: tuple_0}
        var_1 = block_1.copy(str_0, tuple_0)
        var_2 = block_1.all_parents_static()
        var_3 = block_1.set_loader(str_0)
        var_4 = block_1.deserialize(dict_0)
        var_5 = block_1.get_first_parent_include()
        var_6 = block_1.serialize()
    except BaseException:
        pass