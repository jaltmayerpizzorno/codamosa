# Automatically generated by Pynguin.
import ansible.playbook.block as module_0

def test_case_0():
    pass

def test_case_1():
    block_0 = module_0.Block()

def test_case_2():
    float_0 = -1242.8
    block_0 = module_0.Block(float_0, float_0)
    var_0 = block_0.has_tasks()

def test_case_3():
    bool_0 = None
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    block_0 = module_0.Block(dict_0)
    var_0 = block_0.__repr__()

def test_case_4():
    bytes_0 = b'\x00>\x87a\xa3\x8e?\r@#\x9c\x86X\xc0\x16\xd9\xbf\xf8\xab'
    dict_0 = {bytes_0: bytes_0}
    float_0 = -206.826
    str_0 = '0242ac11-0014-6da8-3b79-0000000003b8'
    block_0 = module_0.Block(float_0, float_0, str_0)
    var_0 = block_0.deserialize(dict_0)
    bool_0 = False
    block_1 = module_0.Block(bytes_0, bool_0)
    bool_1 = True
    var_1 = block_1.set_loader(bool_1)
    var_2 = block_1.__ne__(block_0)
    var_3 = block_1.get_dep_chain()

def test_case_5():
    str_0 = 'pI\rIZAT'
    block_0 = module_0.Block()
    var_0 = block_0.preprocess_data(str_0)

def test_case_6():
    block_0 = module_0.Block()
    var_0 = block_0.copy()

def test_case_7():
    block_0 = module_0.Block()
    var_0 = block_0.serialize()

def test_case_8():
    block_0 = module_0.Block()
    var_0 = None
    var_1 = block_0.set_loader(var_0)

def test_case_9():
    bool_0 = True
    block_0 = module_0.Block(bool_0)
    var_0 = block_0.copy()

def test_case_10():
    tuple_0 = None
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0, tuple_0: tuple_0}
    str_0 = 'e_3F&2\nP2z=zTrM'
    bytes_0 = b':\xd2A>\r "\xbe\'\x1a\xad\xe0\xca\x1f\xf2\xe0I'
    block_0 = module_0.Block(str_0, bytes_0, str_0)
    var_0 = block_0.filter_tagged_tasks(dict_0)

def test_case_11():
    block_0 = module_0.Block()
    var_0 = block_0.filter_tagged_tasks(block_0)

def test_case_12():
    block_0 = module_0.Block()
    var_0 = block_0.has_tasks()

def test_case_13():
    bytes_0 = b'\xb7\xba\xf6\xf9s\xdb\xfa\xfe\x95\xf0\xbf\x96\x10\x88'
    block_0 = module_0.Block()
    block_1 = module_0.Block(bytes_0, block_0)
    var_0 = block_1.all_parents_static()

def test_case_14():
    block_0 = module_0.Block()
    var_0 = block_0.get_first_parent_include()
    var_1 = block_0.get_dep_chain()

def test_case_15():
    float_0 = 2441.47
    block_0 = module_0.Block()
    var_0 = block_0.__repr__()
    block_1 = module_0.Block()
    set_0 = set()
    list_0 = [set_0]
    str_0 = 'collectins'
    block_2 = module_0.Block(set_0, list_0, str_0)
    bytes_0 = b'\xafK"zX\xb2_z\xe0K\x19{\xda\xc6e\n\x99\xa2*'
    block_3 = module_0.Block(float_0, block_1, bytes_0)
    var_1 = block_3.all_parents_static()
    str_1 = '0242ac11-0014-6da8-3b79-0000000000b5'
    var_2 = block_1.all_parents_static()
    var_3 = block_3.copy()
    var_4 = block_2.filter_tagged_tasks(str_1)

def test_case_16():
    str_0 = 'block'
    str_1 = 'test'
    str_2 = {str_0: str_1}
    bool_0 = True
    block_0 = module_0.Block(bool_0)
    var_0 = block_0.preprocess_data(str_2)

def test_case_17():
    block_0 = module_0.Block()
    str_0 = 'block'
    var_0 = {str_0: str_0, str_0: str_0}
    str_1 = 'a.>t'
    var_1 = {str_1: var_0}
    var_2 = block_0.deserialize(var_1)

def test_case_18():
    tuple_0 = ()
    float_0 = 2441.47
    block_0 = module_0.Block()
    str_0 = 'collections'
    float_1 = 1315.17
    dict_0 = {str_0: float_1, float_0: tuple_0}
    var_0 = block_0.deserialize(dict_0)

def test_case_19():
    tuple_0 = ()
    float_0 = 1000.0
    str_0 = '*HlB-0f%r'
    str_1 = 'O4'
    block_0 = module_0.Block(tuple_0)
    var_0 = block_0.is_block(str_1)
    block_1 = module_0.Block(float_0, str_0)
    var_1 = block_1.__repr__()
    var_2 = block_0.has_tasks()
    var_3 = block_1.filter_tagged_tasks(tuple_0)
    bool_0 = True
    block_2 = module_0.Block(block_0, str_1)
    var_4 = block_0.all_parents_static()
    var_5 = block_2.copy(float_0)
    var_6 = block_1.preprocess_data(bool_0)
    set_0 = set()
    list_0 = [float_0, set_0, float_0]
    str_2 = 'collections'
    block_3 = module_0.Block(list_0, str_2)
    bytes_0 = b'K\x91zD\xb2\xf5\xe0\xac\x19{\xc6e\n\x99\xad\xbf*'
    block_4 = module_0.Block(bytes_0, block_0, block_0)
    float_1 = -5618.2018
    var_7 = block_4.get_vars()
    dict_0 = {str_2: float_1, float_0: tuple_0}
    var_8 = block_4.copy(str_2, tuple_0)
    var_9 = block_4.all_parents_static()
    var_10 = block_4.set_loader(str_2)
    var_11 = block_0.deserialize(dict_0)
    var_12 = block_4.get_first_parent_include()
    var_13 = block_4.serialize()