# Automatically generated by Pynguin.
import ansible.plugins.action.validate_argument_spec as module_0

def test_case_0():
    try:
        str_0 = '+V+JO%g '
        str_1 = 'aJxD_w]x_X0$w7:E3P('
        float_0 = -4335.0817
        bytes_0 = b'%"\x0eV/\xe2Y\x93\xc8]\xb2N\xb8'
        set_0 = {bytes_0}
        int_0 = -563
        float_1 = -1260.7
        action_module_0 = module_0.ActionModule(float_0, float_0, bytes_0, set_0, int_0, float_1)
        var_0 = action_module_0.get_args_from_task_vars(str_0, str_1)
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = 27
        dict_0 = {int_0: int_0}
        list_0 = []
        str_0 = '\nu)Kl9Y\x0b8,{6*2,\\[dsQ'
        set_0 = {str_0, str_0}
        dict_1 = {str_0: str_0}
        tuple_0 = (set_0, dict_1)
        float_0 = 2005.31
        bool_0 = True
        bytes_0 = b'6\x03\xac\xb5\x8e'
        int_1 = 80
        float_1 = -4126.265
        action_module_0 = module_0.ActionModule(tuple_0, bool_0, float_0, bytes_0, int_1, float_1)
        int_2 = 1247
        action_module_1 = module_0.ActionModule(str_0, action_module_0, float_0, int_1, int_2, set_0)
        str_1 = 'E?/32E36/(drZ<s#c\x0c'
        bytes_1 = b'\x95\xb9\xb8'
        action_module_2 = module_0.ActionModule(int_2, action_module_0, tuple_0, action_module_0, str_1, bytes_1)
        var_0 = action_module_1.get_args_from_task_vars(dict_0, list_0)
    except BaseException:
        pass

def test_case_2():
    try:
        float_0 = -624.0
        str_0 = 'y#'
        tuple_0 = ()
        set_0 = {float_0}
        dict_0 = {}
        action_module_0 = module_0.ActionModule(float_0, str_0, tuple_0, set_0, dict_0, set_0)
        dict_1 = {}
        var_0 = action_module_0.get_args_from_task_vars(dict_0, dict_1)
    except BaseException:
        pass

def test_case_3():
    try:
        float_0 = 0.0001
        int_0 = 186
        bool_0 = False
        float_1 = 1766.9479
        str_0 = '[xR,0%q/d>(\rNs[q'
        str_1 = 'Sc'
        bytes_0 = b'\xb7D'
        action_module_0 = module_0.ActionModule(float_1, float_1, str_0, int_0, str_1, bytes_0)
        list_0 = [bytes_0]
        action_module_1 = module_0.ActionModule(float_0, int_0, bool_0, action_module_0, list_0, action_module_0)
        var_0 = action_module_1.run()
    except BaseException:
        pass

def test_case_4():
    try:
        int_0 = 27
        list_0 = []
        str_0 = 'VrS7`\nx7'
        set_0 = {str_0, str_0}
        dict_0 = {str_0: str_0}
        tuple_0 = (set_0, dict_0)
        bool_0 = False
        float_0 = 2005.31
        bytes_0 = b'\x97\xa4\xf7\x86\xb51\xa4?\x92\x99\xddjJq\xcc\x81\x87G\xc6'
        str_1 = 'T\t&)o){}6\\2uJ'
        list_1 = None
        int_1 = 511
        bool_1 = True
        action_module_0 = module_0.ActionModule(list_0, str_0, bytes_0, int_1, list_0, bool_1)
        action_module_1 = module_0.ActionModule(tuple_0, int_0, set_0, str_1, list_1, str_0)
        str_2 = 'gAU`;2o#9cR`u'
        bytes_1 = b'y\xf9\xab'
        action_module_2 = module_0.ActionModule(bytes_0, set_0, action_module_1, str_2, bytes_1, bytes_0)
        bytes_2 = b'6\x03\xac\xb5\x8e'
        int_2 = 80
        float_1 = -4126.265
        action_module_3 = module_0.ActionModule(tuple_0, bool_0, float_0, bytes_2, int_2, float_1)
        int_3 = 1247
        action_module_4 = module_0.ActionModule(str_0, action_module_3, float_0, int_2, int_3, set_0)
        var_0 = action_module_0.run(dict_0, tuple_0)
    except BaseException:
        pass

def test_case_5():
    try:
        int_0 = 27
        dict_0 = {int_0: int_0}
        list_0 = []
        str_0 = 'VrS7`\nx7'
        set_0 = {str_0, str_0}
        dict_1 = {str_0: str_0}
        tuple_0 = (set_0, dict_1)
        bool_0 = False
        float_0 = 2011.8185945547484
        bytes_0 = b'\x97\xa4\xf7\x86\xb51\xa4?\x92\x99\xddjJq\xcc\x81\x87G\xc6'
        str_1 = 'cmZhe9\x0cA9g '
        int_1 = None
        action_module_0 = module_0.ActionModule(tuple_0, str_1, tuple_0, set_0, tuple_0, int_1)
        str_2 = 'gAU`;2o#9cR`u'
        bytes_1 = b'y\xf9\xab'
        str_3 = 'File is not readable'
        action_module_1 = module_0.ActionModule(float_0, action_module_0, bytes_0, set_0, bytes_1, str_3)
        bytes_2 = b'6\x03\xac\xb5\x8e'
        float_1 = -2594.23
        bool_1 = False
        action_module_2 = module_0.ActionModule(bytes_0, action_module_1, float_1, bool_1, bool_1, dict_0)
        str_4 = 'a2'
        str_5 = 'uJ'
        list_1 = [str_5, tuple_0, bool_0, float_0]
        action_module_3 = module_0.ActionModule(str_4, set_0, str_5, dict_0, list_1, bytes_2)
        float_2 = -3328.27
        action_module_4 = module_0.ActionModule(list_0, float_2, str_0, str_2, dict_1, set_0)
        var_0 = action_module_2.get_args_from_task_vars(dict_1, set_0)
    except BaseException:
        pass