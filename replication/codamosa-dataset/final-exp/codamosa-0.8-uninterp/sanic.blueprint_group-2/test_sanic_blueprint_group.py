# Automatically generated by Pynguin.
import sanic.blueprint_group as module_0
import sanic.blueprints as module_1

def test_case_0():
    blueprint_group_0 = module_0.BlueprintGroup()

def test_case_1():
    bytes_0 = b''
    str_0 = '}-N*45,@'
    str_1 = None
    blueprint_0 = module_1.Blueprint(str_1)
    str_2 = None
    bytes_1 = b'\x81O\xdc\t\x1e\x92"\x0e\r\x0e\xb2T\rN\xd0W3\xcbd'
    tuple_0 = (bytes_1,)
    blueprint_group_0 = module_0.BlueprintGroup(blueprint_0, str_2, tuple_0)
    dict_0 = {str_0: bytes_0, str_1: blueprint_group_0, str_0: str_0, str_1: str_1}
    blueprint_group_1 = module_0.BlueprintGroup(bytes_0, dict_0)
    int_0 = blueprint_group_1.__len__()

def test_case_2():
    blueprint_group_0 = module_0.BlueprintGroup()
    list_0 = [blueprint_group_0, blueprint_group_0, blueprint_group_0, blueprint_group_0]
    var_0 = blueprint_group_0.middleware(*list_0)

def test_case_3():
    bool_0 = False
    str_0 = '`""$'
    blueprint_0 = module_1.Blueprint(str_0)
    list_0 = []
    str_1 = 'k*>\rH.4w$CH\x0bi'
    blueprint_group_0 = module_0.BlueprintGroup(list_0, str_1)
    var_0 = blueprint_group_0.__iter__()
    blueprint_group_0.append(blueprint_0)
    int_0 = blueprint_group_0.__len__()
    str_2 = 'adq!X'
    dict_0 = None
    blueprint_group_1 = module_0.BlueprintGroup(dict_0, dict_0)
    dict_1 = {str_1: blueprint_group_1, blueprint_group_1: str_2, dict_0: int_0, blueprint_group_0: bool_0}
    blueprint_group_2 = module_0.BlueprintGroup(str_1, str_2, dict_1)
    var_1 = blueprint_group_0.middleware()
    blueprint_group_0.append(blueprint_0)
    blueprint_1 = module_1.Blueprint(str_0, str_0)
    str_3 = ''
    int_1 = -1500
    blueprint_group_0.insert(int_1, blueprint_1)
    blueprint_2 = module_1.Blueprint(str_3)
    blueprint_group_3 = module_0.BlueprintGroup()
    blueprint_group_4 = module_0.BlueprintGroup(bool_0)
    blueprint_group_5 = module_0.BlueprintGroup()
    blueprint_group_5.append(blueprint_1)