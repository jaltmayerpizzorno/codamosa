# Automatically generated by Pynguin.
import ansible.modules.iptables as module_0

def test_case_0():
    pass

def test_case_1():
    int_0 = 4294967295
    complex_0 = None
    bytes_0 = b'*\xcd\xe0\xd46'
    var_0 = module_0.append_tcp_flags(int_0, complex_0, bytes_0)

def test_case_2():
    float_0 = None
    str_0 = '"include" is deprecated, use include_tasks/import_tasks/import_playbook instead'
    bool_0 = False
    var_0 = module_0.append_match_flag(float_0, str_0, bool_0, str_0)

def test_case_3():
    var_0 = module_0.main()

def test_case_4():
    int_0 = None
    tuple_0 = (int_0,)
    dict_0 = {tuple_0: int_0}
    str_0 = '"{k-A"O/'
    tuple_1 = ()
    var_0 = module_0.append_match_flag(dict_0, str_0, dict_0, tuple_1)

def test_case_5():
    int_0 = None
    str_0 = 'y_n|'
    bool_0 = False
    float_0 = -1935.2
    var_0 = module_0.append_wait(str_0, bool_0, float_0)
    tuple_0 = (int_0,)
    dict_0 = {tuple_0: int_0}
    str_1 = '"{k-A"O/'
    tuple_1 = ()
    var_1 = module_0.append_match_flag(dict_0, str_1, dict_0, tuple_1)

def test_case_6():
    int_0 = 4294967295
    complex_0 = None
    bytes_0 = b'*\xcd\xe0\xd46'
    var_0 = module_0.append_tcp_flags(int_0, complex_0, bytes_0)
    str_0 = 'ansible.modules.iptables'
    list_0 = [str_0, str_0, str_0]
    bool_0 = None
    var_1 = module_0.append_match(list_0, bool_0, str_0)

def test_case_7():
    float_0 = -1192.496344
    dict_0 = {float_0: float_0, float_0: float_0, float_0: float_0, float_0: float_0}
    bytes_0 = b'3\xe6\xcfq'
    var_0 = module_0.append_match_flag(float_0, dict_0, bytes_0, float_0)
    float_1 = -2343.19
    set_0 = {float_1}
    var_1 = module_0.append_tcp_flags(bytes_0, dict_0, set_0)
    list_0 = []
    float_2 = 566.675537
    tuple_0 = (float_2, dict_0, dict_0, float_0)
    float_3 = None
    var_2 = module_0.append_param(list_0, tuple_0, tuple_0, float_3)
    str_0 = 'f)l3BL7xfzDZ?-`bE'
    dict_1 = {var_0: tuple_0, float_1: float_2, float_3: set_0}
    var_3 = module_0.append_tcp_flags(tuple_0, str_0, dict_1)
    bool_0 = False
    var_4 = module_0.append_wait(list_0, tuple_0, bool_0)

def test_case_8():
    str_0 = 'match'
    str_1 = '--syn'
    var_0 = []
    bool_0 = False
    var_1 = module_0.append_match_flag(var_0, str_0, str_1, bool_0)

def test_case_9():
    var_0 = []
    str_0 = 'flags'
    str_1 = 'flags_set'
    str_2 = 'ACK'
    str_3 = [str_2]
    str_4 = [str_2]
    str_5 = {str_0: str_3, str_1: str_4}
    str_6 = '--tcp-flags'
    var_1 = module_0.append_tcp_flags(var_0, str_5, str_6)

def test_case_10():
    var_0 = []
    str_0 = 'flags'
    str_1 = '%osXe*P2^~\x0bH1!|'
    str_2 = 'ACK'
    str_3 = [str_2]
    str_4 = [str_2]
    str_5 = {str_0: str_3, str_1: str_4}
    str_6 = '--tcp-flags'
    var_1 = module_0.append_tcp_flags(var_0, str_5, str_6)