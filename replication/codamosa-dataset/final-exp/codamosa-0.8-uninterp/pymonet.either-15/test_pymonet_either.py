# Automatically generated by Pynguin.
import pymonet.either as module_0
import builtins as module_1

def test_case_0():
    pass

def test_case_1():
    float_0 = -19.830936
    left_0 = module_0.Left(float_0)

def test_case_2():
    object_0 = None
    set_0 = set()
    either_0 = module_0.Either(set_0)
    bool_0 = either_0.__eq__(object_0)

def test_case_3():
    float_0 = -950.636
    right_0 = module_0.Right(float_0)
    either_0 = module_0.Either(right_0)
    either_1 = module_0.Either(either_0)
    var_0 = either_1.to_lazy()

def test_case_4():
    str_0 = ''
    str_1 = 'yyx+0(\x0bahpl\t\\'
    list_0 = [str_0, str_0, str_0, str_1]
    either_0 = module_0.Either(list_0)
    var_0 = either_0.is_right()
    left_0 = module_0.Left(str_0)
    bool_0 = left_0.is_left()

def test_case_5():
    tuple_0 = ()
    set_0 = {tuple_0}
    float_0 = -19.830936
    list_0 = [tuple_0, float_0, float_0, set_0]
    left_0 = module_0.Left(list_0)
    left_1 = module_0.Left(float_0)
    var_0 = left_1.map(set_0)

def test_case_6():
    str_0 = '\n    Uit test for method __eq__ of class Either\n\n    :returns: True if test passes, False if not\n    :rtype: Boolean\n    '
    str_1 = 'Hello'
    left_0 = module_0.Left(str_1)
    left_1 = module_0.Left(str_1)
    left_2 = module_0.Left(str_1)
    str_2 = 'World'
    left_3 = module_0.Left(str_2)
    var_0 = left_2 == left_3
    left_4 = module_0.Left(str_1)
    right_0 = module_0.Right(str_1)
    var_1 = left_4 == right_0
    left_5 = module_0.Left(str_1)
    left_6 = module_0.Left(str_1)
    var_2 = lambda : str_1
    left_7 = module_0.Left(str_1)
    var_3 = left_5.bind(str_0)
    right_1 = module_0.Right(var_3)

def test_case_7():
    str_0 = '}<?hZlj}-\x0cv;n6'
    left_0 = module_0.Left(str_0)
    bool_0 = left_0.is_left()

def test_case_8():
    var_0 = None
    object_0 = module_1.object()
    either_0 = module_0.Either(var_0)
    bool_0 = either_0.__eq__(object_0)
    left_0 = module_0.Left(var_0)
    var_1 = left_0.to_validation()
    left_1 = module_0.Left(var_0)
    callable_0 = None
    var_2 = left_0.map(callable_0)
    either_1 = module_0.Either(var_0)
    var_3 = either_1.to_try()
    right_0 = module_0.Right(var_0)
    var_4 = right_0.to_maybe()

def test_case_9():
    int_0 = 1081
    right_0 = module_0.Right(int_0)
    var_0 = right_0.to_maybe()