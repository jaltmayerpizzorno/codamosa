# Automatically generated by Pynguin.
import httpie.output.formatters.json as module_0

def test_case_0():
    try:
        j_s_o_n_formatter_0 = module_0.JSONFormatter()
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'format_options'
        str_1 = 'explicit_json'
        str_2 = 'json'
        str_3 = 'colors'
        str_4 = 'format'
        str_5 = 'sort_keys'
        str_6 = 'indent'
        bool_0 = True
        int_0 = 4
        var_0 = {str_4: bool_0, str_5: bool_0, str_6: int_0}
        bool_1 = False
        var_1 = {str_2: var_0, str_3: bool_1}
        var_2 = {str_0: var_1, str_1: bool_0}
        j_s_o_n_formatter_0 = module_0.JSONFormatter(**var_2)
        str_7 = '{"foo":"bar"}'
        str_8 = 'application/json'
        str_9 = j_s_o_n_formatter_0.format_body(str_7, str_8)
        str_10 = None
        str_11 = '\n    The main program without error handling.\n\n    '
        str_12 = j_s_o_n_formatter_0.format_body(str_10, str_11)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'format_options'
        str_1 = 'explicit_json'
        str_2 = 'json'
        str_3 = 'colors'
        str_4 = 'format'
        str_5 = '\\%inent'
        bool_0 = False
        int_0 = 4
        var_0 = {str_4: bool_0, str_3: bool_0, str_5: int_0}
        bool_1 = False
        var_1 = {str_2: var_0, str_3: bool_1}
        var_2 = {str_0: var_1, str_1: bool_0}
        j_s_o_n_formatter_0 = module_0.JSONFormatter(**var_2)
        str_6 = 'application/json'
        str_7 = j_s_o_n_formatter_0.format_body(str_4, str_6)
        j_s_o_n_formatter_1 = module_0.JSONFormatter()
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'format_options'
        str_1 = 'explicit_json'
        str_2 = 'json'
        str_3 = 'colors'
        str_4 = 'format'
        str_5 = '\\%inent'
        bool_0 = False
        int_0 = 4
        var_0 = {str_4: bool_0, str_3: bool_0, str_5: int_0}
        bool_1 = False
        var_1 = {str_2: var_0, str_3: bool_1}
        var_2 = {str_0: var_1, str_1: bool_0}
        j_s_o_n_formatter_0 = module_0.JSONFormatter(**var_2)
        str_6 = 'application/json'
        str_7 = j_s_o_n_formatter_0.format_body(str_4, str_6)
        str_8 = j_s_o_n_formatter_0.format_body(str_2, str_1)
        str_9 = 'lr>6OO\\f)Ee4'
        str_10 = 'j&RE05 Yw?PE $#'
        str_11 = j_s_o_n_formatter_0.format_body(str_9, str_10)
        str_12 = None
        str_13 = j_s_o_n_formatter_0.format_body(str_6, str_12)
    except BaseException:
        pass