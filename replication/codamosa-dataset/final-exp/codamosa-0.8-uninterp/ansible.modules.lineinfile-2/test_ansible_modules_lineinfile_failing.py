# Automatically generated by Pynguin.
import ansible.modules.lineinfile as module_0

def test_case_0():
    try:
        float_0 = 298.335738
        dict_0 = {float_0: float_0, float_0: float_0, float_0: float_0, float_0: float_0}
        str_0 = '\n    This is the NetBSD Service manipulation class - it uses the /etc/rc.conf\n    file for controlling services started at boot, check status and perform\n    direct service manipulation. Init scripts in /etc/rc.d are used for\n    controlling services (start/stop) as well as for controlling the current\n    state.\n    '
        var_0 = module_0.write_changes(dict_0, str_0, str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bool_0 = False
        set_0 = {bool_0, bool_0, bool_0, bool_0}
        int_0 = -3742
        var_0 = module_0.check_file_attrs(set_0, int_0, set_0, bool_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = "GJ6>L'F@="
        set_0 = {str_0}
        tuple_0 = (set_0, str_0)
        bytes_0 = None
        bool_0 = False
        var_0 = module_0.present(str_0, bool_0, str_0, tuple_0, set_0, str_0, bytes_0, set_0, str_0, bool_0, set_0)
    except BaseException:
        pass

def test_case_3():
    try:
        int_0 = -2732
        str_0 = '%`/'
        float_0 = 885.91
        float_1 = 2442.75299
        dict_0 = {str_0: str_0, float_0: float_1}
        list_0 = [float_1]
        str_1 = 'eGcT'
        set_0 = None
        int_1 = 32
        tuple_0 = None
        var_0 = module_0.present(int_0, str_0, dict_0, dict_0, list_0, str_1, int_0, set_0, list_0, int_1, tuple_0)
    except BaseException:
        pass

def test_case_4():
    try:
        dict_0 = {}
        str_0 = "C>,02#7da<JE^xq3^T8'"
        dict_1 = {str_0: str_0}
        bool_0 = True
        var_0 = module_0.absent(dict_0, dict_0, dict_1, dict_0, dict_1, bool_0)
    except BaseException:
        pass

def test_case_5():
    try:
        float_0 = -298.8
        str_0 = '/g'
        bool_0 = True
        int_0 = 2237
        tuple_0 = ()
        set_0 = None
        var_0 = module_0.present(float_0, str_0, str_0, bool_0, float_0, bool_0, set_0, int_0, tuple_0, str_0, set_0)
    except BaseException:
        pass

def test_case_6():
    try:
        float_0 = -299.9046
        str_0 = 'k/'
        bool_0 = False
        int_0 = -4041
        tuple_0 = ()
        set_0 = None
        var_0 = module_0.present(float_0, str_0, str_0, bool_0, float_0, bool_0, set_0, int_0, tuple_0, str_0, set_0)
    except BaseException:
        pass

def test_case_7():
    try:
        float_0 = -837.3
        str_0 = '/'
        bool_0 = True
        float_1 = 59.5246
        set_0 = {str_0, float_0, str_0, float_1}
        int_0 = 2237
        tuple_0 = ()
        str_1 = '__main__'
        set_1 = None
        var_0 = module_0.present(float_0, str_0, str_0, bool_0, float_1, bool_0, set_0, int_0, tuple_0, str_1, set_1)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = 'alidae'
        str_1 = '/tmp'
        bytes_0 = b'foo'
        bytes_1 = [bytes_0]
        dict_0 = {str_0: str_1}
        float_0 = 0.5
        str_2 = '#KtCs=8rD!"I+Y!Rd'
        var_0 = module_0.absent(bytes_1, str_1, dict_0, float_0, str_2, str_0)
    except BaseException:
        pass