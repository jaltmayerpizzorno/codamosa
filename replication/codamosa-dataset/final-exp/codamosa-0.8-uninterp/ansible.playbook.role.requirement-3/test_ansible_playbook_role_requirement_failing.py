# Automatically generated by Pynguin.
import ansible.playbook.role.requirement as module_0

def test_case_0():
    try:
        bytes_0 = b'\x94\x13\xaa)&\xa3\xf1'
        role_requirement_0 = module_0.RoleRequirement()
        var_0 = role_requirement_0.repo_url_to_role_name(bytes_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'cy'
        role_requirement_0 = module_0.RoleRequirement()
        list_0 = [role_requirement_0, role_requirement_0, str_0, str_0]
        var_0 = role_requirement_0.role_yaml_parse(list_0)
    except BaseException:
        pass

def test_case_2():
    try:
        float_0 = -1792.497434
        set_0 = {float_0, float_0}
        role_requirement_0 = module_0.RoleRequirement()
        var_0 = role_requirement_0.scm_archive_role(float_0, set_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '\n    This class is used to consolidate the connection information for\n    hosts in a play and child tasks, where the task may override some\n    connection/authentication information.\n    '
        role_requirement_0 = module_0.RoleRequirement()
        var_0 = role_requirement_0.role_yaml_parse(str_0)
        role_requirement_1 = module_0.RoleRequirement()
        role_requirement_2 = module_0.RoleRequirement()
        var_1 = role_requirement_2.repo_url_to_role_name(role_requirement_1)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = "\n    Returns a path that is free of symlinks (if follow=True), environment variables, relative path traversals and symbols (~)\n\n    :arg path: A byte or text string representing a path to be canonicalized\n    :arg follow: A boolean to indicate of symlinks should be resolved or not\n    :raises UnicodeDecodeError: If the canonicalized version of the path\n        contains non-utf8 byte sequences.\n    :rtype: A text string (unicode on pyyhon2, str on python3).\n    :returns: An absolute path with symlinks, environment variables, and tilde\n        expanded.  Note that this does not check whether a path exists.\n\n    example::\n        '$HOME/../../var/mail' becomes '/var/spool/mail'\n    "
        role_requirement_0 = module_0.RoleRequirement()
        var_0 = role_requirement_0.role_yaml_parse(str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'role'
        role_requirement_0 = module_0.RoleRequirement()
        bytes_0 = None
        int_0 = -259
        tuple_0 = (role_requirement_0, str_0, bytes_0, int_0)
        set_0 = {str_0, tuple_0, str_0}
        role_requirement_1 = module_0.RoleRequirement()
        var_0 = role_requirement_1.role_yaml_parse(set_0)
    except BaseException:
        pass