# Automatically generated by Pynguin.
import pymonet.utils as module_0

def test_case_0():
    try:
        var_0 = module_0.fn()
    except BaseException:
        pass

def test_case_1():
    try:
        callable_0 = None
        callable_1 = module_0.memoize(callable_0)
        list_0 = [callable_1, callable_1]
        var_0 = module_0.pipe(callable_1, *list_0)
    except BaseException:
        pass

def test_case_2():
    try:
        var_0 = None
        var_1 = module_0.identity(var_0)
        var_2 = module_0.fn()
    except BaseException:
        pass

def test_case_3():
    try:
        int_0 = -2602
        int_1 = module_0.increase(int_0)
        callable_0 = None
        callable_1 = module_0.memoize(callable_0)
        int_2 = -1451
        callable_2 = module_0.memoize(callable_1, int_2)
        int_3 = 2862
        callable_3 = module_0.memoize(callable_2, int_3)
        tuple_0 = ()
        callable_4 = module_0.memoize(callable_3, tuple_0)
        list_0 = [callable_4, callable_4]
        var_0 = module_0.pipe(callable_4, *list_0)
    except BaseException:
        pass

def test_case_4():
    try:
        callable_0 = None
        float_0 = -1724.6291
        set_0 = {float_0}
        var_0 = module_0.curry(float_0, set_0)
        callable_1 = module_0.memoize(callable_0)
        float_1 = 1080.95724
        callable_2 = module_0.memoize(callable_1, float_1)
        callable_3 = module_0.memoize(callable_2)
        callable_4 = module_0.memoize(callable_3)
        var_1 = module_0.fn()
    except BaseException:
        pass