# Automatically generated by Pynguin.
import ansible.module_utils.common.parameters as module_0

def test_case_0():
    try:
        bool_0 = True
        set_0 = {bool_0, bool_0, bool_0}
        list_0 = [set_0]
        list_1 = [bool_0, list_0, bool_0, bool_0]
        var_0 = module_0.sanitize_keys(set_0, list_0, list_1)
        var_1 = module_0.sanitize_keys(list_0, bool_0)
    except BaseException:
        pass

def test_case_1():
    try:
        var_0 = module_0.env_fallback()
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'Xk@eC>\tBNh(?'
        list_0 = [str_0, str_0, str_0, str_0]
        var_0 = module_0.env_fallback(*list_0)
    except BaseException:
        pass

def test_case_3():
    try:
        int_0 = -4641
        var_0 = module_0.set_fallbacks(int_0, int_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'ZiG4M5'
        str_1 = 'device_links'
        dict_0 = {str_0: str_0, str_1: str_1}
        list_0 = []
        var_0 = module_0.set_fallbacks(dict_0, list_0)
    except BaseException:
        pass

def test_case_5():
    try:
        bool_0 = True
        str_0 = '>n'
        dict_0 = {}
        str_1 = '9 X&\x0caY@=^Pan<'
        var_0 = module_0.set_fallbacks(dict_0, str_1)
        list_0 = [str_0, bool_0]
        var_1 = module_0.env_fallback(*list_0)
    except BaseException:
        pass

def test_case_6():
    try:
        float_0 = -16.04
        bytes_0 = b'\xd4\x17u.\xf2\xc5\x88\xa8\x96\xba\x9f\x8f\xc1u\xe7&'
        tuple_0 = ()
        list_0 = [bytes_0, bytes_0, float_0, tuple_0]
        var_0 = module_0.sanitize_keys(tuple_0, list_0)
        int_0 = 310
        int_1 = -73
        var_1 = module_0.sanitize_keys(int_0, int_1, tuple_0)
    except BaseException:
        pass

def test_case_7():
    try:
        bytes_0 = None
        str_0 = 'AH$C?'
        var_0 = module_0.remove_values(bytes_0, str_0)
        list_0 = [var_0, str_0, bytes_0, str_0]
        dict_0 = {str_0: bytes_0}
        var_1 = module_0.sanitize_keys(list_0, dict_0)
        bool_0 = True
        str_1 = '>n'
        list_1 = [str_1, bool_0]
        var_2 = module_0.env_fallback(*list_1)
    except BaseException:
        pass

def test_case_8():
    try:
        set_0 = None
        set_1 = {set_0, set_0}
        list_0 = [set_0, set_1, set_1]
        str_0 = '?5+\x0c?utk_z*t'
        var_0 = module_0.sanitize_keys(list_0, str_0)
        dict_0 = {}
        bool_0 = False
        var_1 = module_0.set_fallbacks(dict_0, bool_0)
        int_0 = 2874
        var_2 = module_0.set_fallbacks(int_0, set_1)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'ENV_FALLBACK'
        str_1 = 'ENV_FALLBACK'
        str_2 = 'env_fallback() should have raised AnsibleFallbackNotFound exception'
        var_0 = Exception(str_2)
        dict_0 = {var_0: str_1, str_1: str_1, str_2: str_0, str_2: var_0}
        set_0 = {str_1, str_0}
        var_1 = module_0.remove_values(dict_0, set_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = 'first_param'
        str_1 = 'third_param'
        str_2 = 'type'
        str_3 = 'fallback'
        str_4 = 'mywD/2u0}Z:cv<=(m*'
        str_5 = 'env_fallback'
        str_6 = 'FIRST_PARAM'
        str_7 = (str_5, str_6)
        str_8 = {str_2: str_4, str_3: str_7}
        str_9 = 'THIRD_PARAM'
        str_10 = 'required'
        bool_0 = True
        bool_1 = {str_10: bool_0}
        var_0 = (str_5, str_9, bool_1)
        var_1 = {str_2: str_4, str_3: var_0}
        var_2 = {str_0: str_8, str_3: str_4, str_1: var_1}
        var_3 = {}
        var_4 = set()
        var_5 = module_0.set_fallbacks(var_2, var_3)
    except BaseException:
        pass