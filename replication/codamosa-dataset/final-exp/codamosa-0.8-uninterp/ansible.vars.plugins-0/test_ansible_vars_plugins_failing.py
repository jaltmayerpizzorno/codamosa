# Automatically generated by Pynguin.
import ansible.vars.plugins as module_0
import ansible.inventory.host as module_1

def test_case_0():
    try:
        str_0 = '/home/user/test'
        var_0 = module_0.get_vars_from_path(str_0, str_0, str_0, str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'demand'
        bool_0 = False
        var_0 = module_0.get_plugin_vars(str_0, bool_0, str_0, str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = ',\\Lhm^2m Z'
        list_0 = [str_0]
        int_0 = 465
        var_0 = module_0.get_vars_from_inventory_sources(str_0, str_0, list_0, int_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'V\\sxk&sA\x0c0-,J'
        bool_0 = None
        complex_0 = None
        var_0 = module_0.get_plugin_vars(str_0, bool_0, bool_0, complex_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 't@Mk'
        str_1 = None
        set_0 = {str_1, str_0}
        str_2 = ''
        var_0 = module_0.get_plugin_vars(str_1, set_0, set_0, str_2)
        bytes_0 = b'\x00|C\x83Z\xf1\x05\x9aUc\xba3\x1a2\x12\xf4\xc2\xef\xa0$'
        set_1 = {str_0, str_0, bytes_0}
        str_3 = 'z[^'
        str_4 = '.+kQ5&\r'
        host_0 = module_1.Host()
        var_1 = module_0.get_vars_from_inventory_sources(str_3, str_4, set_1, host_0)
    except BaseException:
        pass

def test_case_5():
    try:
        float_0 = None
        list_0 = [float_0, float_0, float_0, float_0]
        str_0 = 'Zo2wQ+9atp@Ycm|A'
        int_0 = -267
        var_0 = module_0.get_vars_from_inventory_sources(float_0, list_0, str_0, int_0)
        float_1 = 1415.80234
        dict_0 = {}
        var_1 = module_0.get_plugin_vars(float_1, dict_0, dict_0, float_1)
    except BaseException:
        pass

def test_case_6():
    try:
        host_0 = module_1.Host()
        str_0 = 'Basic'
        float_0 = -612.9367270821799
        dict_0 = None
        list_0 = [host_0]
        var_0 = module_0.get_vars_from_path(dict_0, float_0, list_0, str_0)
    except BaseException:
        pass