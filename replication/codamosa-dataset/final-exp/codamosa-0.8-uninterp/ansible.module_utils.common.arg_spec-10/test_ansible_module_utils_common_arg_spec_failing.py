# Automatically generated by Pynguin.
import ansible.module_utils.common.arg_spec as module_0

def test_case_0():
    try:
        list_0 = []
        argument_spec_validator_0 = module_0.ArgumentSpecValidator(list_0)
    except BaseException:
        pass

def test_case_1():
    try:
        module_argument_spec_validator_0 = module_0.ModuleArgumentSpecValidator()
    except BaseException:
        pass

def test_case_2():
    try:
        var_0 = {}
        argument_spec_validator_0 = module_0.ArgumentSpecValidator(var_0)
        var_1 = argument_spec_validator_0.validate(argument_spec_validator_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'agB'
        str_1 = 'b'
        str_2 = {}
        str_3 = 'aliases'
        str_4 = {str_1: str_1, str_3: str_3}
        str_5 = {str_0: str_3, str_0: str_2, str_1: str_4}
        str_6 = [str_2, str_3, str_2]
        argument_spec_validator_0 = module_0.ArgumentSpecValidator(str_5, str_6)
        var_0 = argument_spec_validator_0.validate(str_3)
    except BaseException:
        pass

def test_case_4():
    try:
        dict_0 = {}
        str_0 = '.'
        dict_1 = {str_0: dict_0}
        validation_result_0 = module_0.ValidationResult(dict_1)
        float_0 = -2143.9172573954606
        argument_spec_validator_0 = module_0.ArgumentSpecValidator(dict_0, float_0, dict_0, validation_result_0, str_0)
        var_0 = argument_spec_validator_0.validate(dict_1)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'age'
        str_1 = 'b'
        str_2 = 'type'
        str_3 = {str_2: str_2}
        str_4 = 'aliases'
        str_5 = [str_1]
        str_6 = {str_2: str_1, str_4: str_5}
        str_7 = {str_0: str_3, str_0: str_3, str_1: str_6}
        argument_spec_validator_0 = module_0.ArgumentSpecValidator(str_7, str_7)
        var_0 = argument_spec_validator_0.validate(str_5)
    except BaseException:
        pass