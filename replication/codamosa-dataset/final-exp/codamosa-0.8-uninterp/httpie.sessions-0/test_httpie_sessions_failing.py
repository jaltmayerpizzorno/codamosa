# Automatically generated by Pynguin.
import httpie.sessions as module_0
import httpie.cli.dicts as module_1
import pathlib as module_2

def test_case_0():
    try:
        path_0 = None
        str_0 = '#Th5rc/=CdJ\rp)NAiU'
        session_0 = module_0.get_httpie_session(path_0, str_0, str_0, str_0)
        str_1 = 'hX,=mrulHPv'
        str_2 = None
        dict_0 = {str_1: str_1, str_1: path_0, str_2: path_0}
        request_headers_dict_0 = module_1.RequestHeadersDict(**dict_0)
    except BaseException:
        pass

def test_case_1():
    try:
        request_headers_dict_0 = module_1.RequestHeadersDict()
        str_0 = '-s'
        list_0 = [str_0]
        path_0 = module_2.Path(*list_0)
        session_0 = module_0.get_httpie_session(path_0, str_0, str_0, str_0)
        var_0 = session_0.update_headers(request_headers_dict_0)
        session_1 = module_0.Session(str_0)
        var_1 = session_1.update_headers(request_headers_dict_0)
        dict_0 = {}
        request_headers_dict_1 = module_1.RequestHeadersDict(dict_0)
        str_1 = '"$y$%'
        str_2 = 'ayXpuo*7ivxAb#;4/+1'
        dict_1 = {str_1: var_1, str_2: request_headers_dict_0}
        request_headers_dict_2 = module_1.RequestHeadersDict(**dict_1)
        var_2 = session_1.update_headers(request_headers_dict_2)
    except BaseException:
        pass

def test_case_2():
    try:
        path_0 = module_2.Path()
        str_0 = "?W+u<icg#?t7b5'"
        str_1 = 'Aaq:pRk'
        session_0 = module_0.get_httpie_session(path_0, str_0, str_0, str_1)
        str_2 = ".]HJ0'7rS"
        session_1 = module_0.get_httpie_session(path_0, str_0, str_0, str_2)
        request_headers_dict_0 = module_1.RequestHeadersDict(session_1)
        path_1 = module_2.Path()
        session_2 = module_0.Session(str_0)
        session_3 = module_0.Session(path_1)
        var_0 = session_3.update_headers(request_headers_dict_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'Session1.json'
        session_0 = module_0.Session(str_0)
        str_1 = 'accept'
        str_2 = 'accept=-encoding'
        str_3 = 'text/html'
        str_4 = 'gzip'
        str_5 = 'content-type'
        str_6 = 'cookie'
        str_7 = 'if-match'
        str_8 = '8'
        str_9 = 'plain/text'
        str_10 = 'Status=OK; Domain=localhost; Path=/'
        str_11 = 'Fri, 02 May 2014 13:22:30 GMT'
        str_12 = {str_2: str_4, str_1: str_3, str_2: str_8, str_5: str_9, str_6: str_10, str_7: str_5, str_5: str_11}
        request_headers_dict_0 = module_1.RequestHeadersDict(str_12)
        var_0 = session_0.update_headers(request_headers_dict_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'pl'
        session_0 = module_0.Session(str_0)
        str_1 = 'headers_1'
        str_2 = 'user-agent'
        request_headers_dict_0 = module_1.RequestHeadersDict()
        var_0 = session_0.remove_cookies(request_headers_dict_0)
        str_3 = 'content-type'
        str_4 = 'if-a'
        str_5 = '1'
        str_6 = '%{qg5sS'
        str_7 = 'html'
        str_8 = {str_1: str_5, str_2: str_6, str_3: str_7, str_4: str_5}
        request_headers_dict_1 = module_1.RequestHeadersDict(str_8)
        var_1 = session_0.update_headers(request_headers_dict_1)
        var_2 = session_0.headers
        session_1 = module_0.Session(str_0)
        path_0 = module_2.Path()
        str_9 = '#oTycN(qq[DLg'
        var_3 = path_0.samefile(str_9)
    except BaseException:
        pass