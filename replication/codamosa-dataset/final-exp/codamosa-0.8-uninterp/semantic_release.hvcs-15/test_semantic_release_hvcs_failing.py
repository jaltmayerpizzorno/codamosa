# Automatically generated by Pynguin.
import semantic_release.hvcs as module_0

def test_case_0():
    try:
        base_0 = module_0.Base()
        str_0 = base_0.domain()
    except BaseException:
        pass

def test_case_1():
    try:
        base_0 = module_0.Base()
        str_0 = base_0.api_url()
    except BaseException:
        pass

def test_case_2():
    try:
        gitlab_0 = module_0.Gitlab()
        optional_0 = gitlab_0.token()
        list_0 = []
        github_0 = module_0.Github(*list_0)
        str_0 = github_0.domain()
        base_0 = module_0.Base()
        optional_1 = base_0.token()
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = "Y>eYs.`n~tyB_o'-QC"
        optional_0 = module_0.get_domain()
        dict_0 = {}
        base_0 = module_0.Base(**dict_0)
        gitlab_0 = module_0.Gitlab()
        bool_0 = base_0.check_build_status(str_0, str_0, str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        float_0 = 1884.1288
        tuple_0 = None
        dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0}
        list_0 = [dict_0]
        token_auth_0 = module_0.TokenAuth(list_0)
        var_0 = token_auth_0.__call__(float_0)
    except BaseException:
        pass

def test_case_5():
    try:
        base_0 = module_0.Base()
        str_0 = 'xr>[yE\x0b'
        github_0 = module_0.Github()
        optional_0 = github_0.auth()
        str_1 = 'mB'
        str_2 = 'e'
        gitlab_0 = module_0.Gitlab()
        optional_1 = gitlab_0.token()
        str_3 = '1 ,-Lz,P]VK'
        bool_0 = module_0.post_changelog(str_0, str_1, str_2, str_3)
        str_4 = base_0.api_url()
    except BaseException:
        pass

def test_case_6():
    try:
        gitlab_0 = module_0.Gitlab()
        str_0 = None
        str_1 = 'GW'
        bool_0 = gitlab_0.check_build_status(str_0, str_0, str_1)
    except BaseException:
        pass