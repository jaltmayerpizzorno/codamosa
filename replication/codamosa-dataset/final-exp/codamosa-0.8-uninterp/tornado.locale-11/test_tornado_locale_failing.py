# Automatically generated by Pynguin.
import tornado.locale as module_0
import gettext as module_1

def test_case_0():
    try:
        str_0 = '\n$1`\'"'
        module_0.set_default_locale(str_0)
        int_0 = 1718
        locale_0 = module_0.get()
        str_1 = locale_0.translate(str_0, int_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'lSBi0ljB?'
        locale_0 = module_0.Locale(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        datetime_0 = None
        int_0 = 12
        bool_0 = False
        locale_0 = module_0.get()
        bool_1 = locale_0.format_day(datetime_0, int_0, bool_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'vkde y?tCh:2=?$a'
        dict_0 = {}
        c_s_v_locale_0 = module_0.CSVLocale(str_0, dict_0)
        str_1 = '+zyz]Ag.8z2q\\'
        str_2 = '1Fx}W2DXeQd'
        null_translations_0 = module_1.NullTranslations()
        gettext_locale_0 = module_0.GettextLocale(str_2, null_translations_0)
        str_3 = gettext_locale_0.translate(str_1, str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'Gd)fWf'
        null_translations_0 = module_1.NullTranslations()
        str_1 = '\nfW"vOT><iYGk}w\rF\r'
        str_2 = 'jMJx^'
        gettext_locale_0 = module_0.GettextLocale(str_2, null_translations_0)
        str_3 = gettext_locale_0.translate(str_1)
        module_0.set_default_locale(str_0)
        gettext_locale_1 = module_0.GettextLocale(str_0, null_translations_0)
        str_4 = gettext_locale_1.translate(str_0)
        str_5 = 'OK\x0c0~)[/P9\\UX5.V='
        str_6 = ';=sMX'
        dict_0 = {}
        c_s_v_locale_0 = module_0.CSVLocale(str_6, dict_0)
        str_7 = '/1w~qBl{0z<['
        int_0 = -565
        str_8 = gettext_locale_1.translate(str_7, str_5, int_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'Ke)xY4Q8\tlqN$i4`,Z'
        str_1 = '$s\\L16-=Z\ngi.?;q*V#A'
        int_0 = 2951
        str_2 = ')ISYFs?aOjr*'
        null_translations_0 = module_1.NullTranslations()
        gettext_locale_0 = module_0.GettextLocale(str_2, null_translations_0)
        str_3 = gettext_locale_0.pgettext(str_0, str_1, int_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'The set of opion-groups created by ``define``.\n\n        .. versionadded:: 3.1\n       '
        int_0 = 1777
        locale_0 = module_0.get()
        str_1 = locale_0.friendly_number(int_0)
        str_2 = locale_0.list(str_0)
        bool_0 = True
        str_3 = locale_0.format_date(int_0, int_0, bool_0, bool_0, bool_0)
        str_4 = locale_0.friendly_number(int_0)
        str_5 = ''
        locale_1 = module_0.Locale(str_5)
    except BaseException:
        pass

def test_case_7():
    try:
        int_0 = 1777
        locale_0 = module_0.get()
        int_1 = None
        str_0 = locale_0.friendly_number(int_1)
        str_1 = locale_0.list(str_0)
        bool_0 = False
        str_2 = locale_0.format_date(int_0, int_0, bool_0, bool_0, bool_0)
        str_3 = locale_0.friendly_number(int_0)
        locale_1 = module_0.Locale(str_3)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = None
        locale_0 = module_0.get()
        int_0 = -1271
        int_1 = -2570
        str_1 = locale_0.friendly_number(int_1)
        str_2 = locale_0.list(str_1)
        bool_0 = False
        int_2 = -146
        str_3 = locale_0.format_date(int_0, int_2, bool_0)
        str_4 = locale_0.format_date(int_0, int_1)
        bool_1 = False
        list_0 = [str_0]
        locale_1 = module_0.get(*list_0)
        str_5 = locale_1.friendly_number(int_1)
        str_6 = locale_1.list(bool_1)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'The set of opion-groups created by ``define``.\n\n        .. versionadded:: 3.1\n       '
        int_0 = 1777
        str_1 = 'gd%.J&OQnWfx'
        bool_0 = False
        bool_1 = False
        str_2 = 'mm.'
        str_3 = '`V1\\\th0nC!HnUP>]W'
        str_4 = 'Vto!Fhdd@'
        iterable_0 = module_0.get_supported_locales()
        null_translations_0 = module_1.NullTranslations(iterable_0)
        gettext_locale_0 = module_0.GettextLocale(str_4, null_translations_0)
        str_5 = gettext_locale_0.pgettext(str_2, str_3)
        list_0 = [str_1, str_0, str_0]
        locale_0 = module_0.get(*list_0)
        str_6 = locale_0.format_date(int_0, bool_0, bool_1)
        null_translations_1 = module_1.NullTranslations(list_0)
        gettext_locale_1 = module_0.GettextLocale(str_1, null_translations_1)
        str_7 = gettext_locale_1.translate(str_6)
        locale_1 = module_0.Locale(str_2)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = 'The setof opion-groups created by ``define``.\n\n        .. versifndded:: 3.>\n       '
        str_1 = '%d %s %.2fms'
        int_0 = -2965
        locale_0 = module_0.get()
        str_2 = locale_0.friendly_number(int_0)
        bool_0 = False
        str_3 = '`V1\\\th0nC!HnUP>]W'
        int_1 = None
        str_4 = locale_0.friendly_number(int_1)
        iterable_0 = module_0.get_supported_locales()
        null_translations_0 = module_1.NullTranslations(iterable_0)
        gettext_locale_0 = module_0.GettextLocale(str_3, null_translations_0)
        str_5 = gettext_locale_0.pgettext(str_1, str_3)
        list_0 = [str_0]
        locale_1 = module_0.get(*list_0)
        str_6 = locale_1.format_date(int_1, bool_0, bool_0)
    except BaseException:
        pass

def test_case_11():
    try:
        int_0 = -2358
        str_0 = '?'
        null_translations_0 = module_1.NullTranslations()
        gettext_locale_0 = module_0.GettextLocale(str_0, null_translations_0)
        str_1 = gettext_locale_0.pgettext(str_0, str_0, str_0, int_0)
        null_translations_1 = None
        gettext_locale_1 = module_0.GettextLocale(str_0, null_translations_1)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = ')'
        str_1 = 'Wraps a `.Future` (or other yieldable object) in a timeout.\n\n    Raises `tornado.util.TimeoutError` if the input future does not\n    complete before ``timeout``, which may be specified in any form\n    allowed by `.IOLoop.add_timeout` (i.e. a `datetime.timedelta` or\n    an absolute time relative to `.IOLoop.time`)\n\n    If the wrapped `.Future` fails after it has timed out, the exception\n    will be logged unless it is either of a type contained in\n    ``quiet_exceptions`` (which may be an exception type or a sequence of\n    types), or an ``asyncio.CancelledError``.\n\n    The wrapped `.Future` is not canceled when the timeout expires,\n    permitting it to be reused. `asyncio.wait_for` is similar to this\n    function but it does cancel the wrapped `.Future` on timeout.\n\n    .. versionadded:: 4.0\n\n    .. versionchanged:: 4.1\n       Added the ``quiet_exceptions`` argument and the logging of unhandled\n       exceptions.\n\n    .. versionchanged:: 4.4\n       Added support for yieldable objects other than `.Future`.\n\n    .. versionchanged:: 6.0.3\n       ``asyncio.CancelledError`` is now always considered "quiet".\n\n    '
        str_2 = 'LL4ta'
        str_3 = 'CL7F^P~rB<>c'
        str_4 = ';?fnLM8%pg!'
        list_0 = [str_4, str_1, str_0]
        locale_0 = module_0.get(*list_0)
        str_5 = locale_0.pgettext(str_2, str_3)
        module_0.set_default_locale(str_1)
        str_6 = None
        locale_1 = module_0.get()
        str_7 = locale_1.pgettext(str_6, str_0)
        float_0 = 764.22
        str_8 = locale_1.list(float_0)
    except BaseException:
        pass