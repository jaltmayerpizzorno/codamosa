# Automatically generated by Pynguin.
import tornado.escape as module_0

def test_case_0():
    pass

def test_case_1():
    str_0 = 'http://example.com'
    str_1 = module_0.linkify(str_0)

def test_case_2():
    int_0 = 2532
    str_0 = 'Construct a Template.\n\n        :arg str template_string: the contents of the template file.\n        :arg str name: the filename from which the template was loaded\n            (used for error message).\n        :arg tornado.template.BaseLoader loader: the `~tornado.template.BaseLoader` responsible\n            for this template, used to resolve ``{% include %}`` and ``{% extend %}`` directives.\n        :arg bool compress_whitespace: Deprecated since Tornado 4.3.\n            Equivalent to ``whitespace="single"`` if true and\n            ``whitespace="all"`` if false.\n        :arg str autoescape: The name of a function in the template\n            namespace, or ``None`` to disable escaping by default.\n        :arg str whitespace: A string specifying treatment of whitespace;\n            see `filter_whitespace` for options.\n\n        .. versionchanged:: 4.3\n           Added ``whitespace`` parameter; deprecated ``compress_whitespace``.\n        '
    str_1 = module_0.xhtml_unescape(str_0)
    str_2 = module_0.json_encode(int_0)

def test_case_3():
    int_0 = 2532
    str_0 = module_0.json_encode(int_0)

def test_case_4():
    str_0 = '9xL+"]PgJ]'
    str_1 = module_0.squeeze(str_0)

def test_case_5():
    bytes_0 = b'\x1b\xb5\x83'
    str_0 = module_0.url_escape(bytes_0)

def test_case_6():
    str_0 = 'Ou_o*'
    var_0 = module_0.url_unescape(str_0)

def test_case_7():
    bytes_0 = b''
    dict_0 = module_0.parse_qs_bytes(bytes_0)

def test_case_8():
    str_0 = 'https://wwwgogle.co/searchq=febook'
    str_1 = module_0.linkify(str_0, str_0)
    optional_0 = module_0.utf8(str_1)

def test_case_9():
    str_0 = 'mXM!5,?d+I\t!w'
    bool_0 = True
    str_1 = module_0.linkify(str_0, bool_0, str_0)

def test_case_10():
    str_0 = '<a href="www.tornadoweb.org">www.tornadoweb.org</a>'
    str_1 = module_0.linkify(str_0)

def test_case_11():
    str_0 = 'http://www.google.com'
    str_1 = module_0.linkify(str_0)
    str_2 = 'https://wwgogle.co/searchq=feboo'
    str_3 = module_0.linkify(str_2, str_1)
    bool_0 = False
    str_4 = module_0.linkify(str_0, bool_0, bool_0)
    str_5 = module_0.linkify(str_1, bool_0, str_3)
    str_6 = 'V&l4oHShw'
    bool_1 = False
    str_7 = 'https://www.google.com/search$=ftebook'
    str_8 = module_0.xhtml_unescape(str_7)
    str_9 = 'Returns a suitable Content-Range header:\n\n    >>> print(_get_content_range(None, 1, 4))\n    bytes 0-0/4\n    >>> print(_get_content_range(1, 3, 4))\n    bytes 1-2/4\n    >>> print(_get_content_range(None, None, 4))\n    bytes 0-3/4\n    '
    str_10 = module_0.squeeze(str_9)
    str_11 = module_0.xhtml_escape(str_5)
    str_12 = 'Et+~)*{0R/\nQ?B'
    str_13 = 'oWWEm~Z-G2\n?[9ZpH=Hg'
    list_0 = [str_12, str_13, str_6]
    str_14 = module_0.linkify(str_5, list_0)
    str_15 = module_0.xhtml_unescape(str_14)
    var_0 = module_0.url_unescape(str_8, str_2, bool_1)

def test_case_12():
    str_0 = 'y<*rN2_Wf_:zp'
    str_1 = module_0.xhtml_unescape(str_0)
    str_2 = 'mXM!5,?d+I\t!w'
    bool_0 = False
    optional_0 = module_0.utf8(str_2)
    any_0 = module_0.recursive_unicode(bool_0)
    optional_1 = module_0.utf8(str_2)
    dict_0 = module_0.parse_qs_bytes(str_2, bool_0)
    bool_1 = False
    str_3 = module_0.linkify(str_2, bool_1, str_2, bool_1)
    str_4 = '\rs\n;CS~I6H7b-Mu='
    any_1 = module_0.recursive_unicode(str_4)
    any_2 = module_0.recursive_unicode(str_4)
    optional_2 = module_0.to_unicode(str_4)
    bool_2 = False
    str_5 = module_0.url_escape(str_4, bool_2)
    optional_3 = module_0.utf8(str_0)
    str_6 = 'V\x0bV~\nW/NX}BV'
    str_7 = module_0.squeeze(str_6)
    str_8 = "_iJ'!>|B.%SXO\n"
    str_9 = '"'
    list_0 = [str_8, str_9, str_5]
    str_10 = module_0.linkify(str_4, list_0)
    str_11 = module_0.xhtml_escape(str_9)
    any_3 = module_0.recursive_unicode(str_10)
    var_0 = module_0.url_unescape(str_3, str_3)
    str_12 = '/(nS'
    str_13 = module_0.squeeze(str_12)
    str_14 = module_0.xhtml_escape(str_8)
    tuple_0 = (str_7,)
    any_4 = module_0.recursive_unicode(tuple_0)
    dict_1 = module_0.parse_qs_bytes(str_8, bool_2)
    optional_4 = module_0.utf8(str_12)
    str_15 = module_0.xhtml_escape(str_0)
    str_16 = module_0.json_encode(dict_0)

def test_case_13():
    str_0 = 'https://wwwgogle.co/searchq=febook'
    str_1 = module_0.linkify(str_0, str_0)

def test_case_14():
    str_0 = 'hello www.google.com'
    str_1 = module_0.linkify(str_0)

def test_case_15():
    str_0 = 'http://example.com'
    str_1 = module_0.linkify(str_0, str_0)

def test_case_16():
    list_0 = []
    str_0 = 'https://www.google.com/search?q=facebook'
    str_1 = module_0.linkify(str_0, list_0)
    bool_0 = True
    str_2 = module_0.linkify(str_0, bool_0, str_1, bool_0)

def test_case_17():
    bool_0 = True
    str_0 = 'http://wwH.google.com3search?q=faebo.k'
    optional_0 = module_0.to_unicode(str_0)
    str_1 = module_0.linkify(str_0, bool_0)
    str_2 = module_0.squeeze(str_0)

def test_case_18():
    bool_0 = True
    str_0 = "UIg0\n~fN)%goE'\\Aw"
    str_1 = module_0.linkify(str_0, str_0)
    str_2 = 'Lc8XJ\n31?p!\r'
    bool_1 = False
    str_3 = module_0.linkify(str_2, bool_0, bool_1)
    str_4 = module_0.xhtml_unescape(str_1)

def test_case_19():
    str_0 = 'http://wwH.google.com3search?q=faebo.k'
    list_0 = []
    str_1 = 'https://wwwgogle.co/searchq=febook'
    bool_0 = False
    bool_1 = None
    str_2 = module_0.linkify(str_0, bool_0, bool_1, list_0)
    str_3 = module_0.linkify(str_2, str_1)
    optional_0 = module_0.utf8(str_2)

def test_case_20():
    bool_0 = True
    str_0 = 'https://www.google.com/searchq=ftebook'
    str_1 = module_0.json_encode(bool_0)
    str_2 = module_0.linkify(str_0, bool_0)
    bool_1 = True
    optional_0 = module_0.to_unicode(str_2)
    str_3 = module_0.linkify(str_2, bool_1)
    optional_1 = module_0.to_unicode(str_2)
    str_4 = 'V&l4oHShw'
    str_5 = module_0.linkify(str_3, bool_1, str_4, bool_0)
    str_6 = module_0.xhtml_unescape(str_5)
    str_7 = module_0.linkify(str_2, str_4)