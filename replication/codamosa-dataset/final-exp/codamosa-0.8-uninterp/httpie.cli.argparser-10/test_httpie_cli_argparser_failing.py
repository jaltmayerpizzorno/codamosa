# Automatically generated by Pynguin.
import httpie.cli.argparser as module_0
import httpie.context as module_1

def test_case_0():
    try:
        list_0 = []
        h_t_t_pie_help_formatter_0 = module_0.HTTPieHelpFormatter(list_0)
    except BaseException:
        pass

def test_case_1():
    try:
        float_0 = -2306.51933
        environment_0 = module_1.Environment(float_0)
        dict_0 = None
        str_0 = "5'>,SG\x0c/, av]J'w0$j"
        str_1 = 'g{mQ^:V'
        dict_1 = {str_0: environment_0, str_1: environment_0}
        h_t_t_pie_argument_parser_0 = module_0.HTTPieArgumentParser(formatter_class=dict_0, **dict_1)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'AYoAoa;B\x0cK_O1";'
        str_1 = ''
        environment_0 = module_1.Environment()
        int_0 = -745
        list_0 = [str_1, str_0, str_0, str_0]
        h_t_t_pie_argument_parser_0 = module_0.HTTPieArgumentParser(*list_0)
        namespace_0 = h_t_t_pie_argument_parser_0.parse_args(environment_0, int_0)
    except BaseException:
        pass

def test_case_3():
    try:
        environment_0 = module_1.Environment()
        list_0 = []
        var_0 = environment_0.__repr__()
        h_t_t_pie_argument_parser_0 = module_0.HTTPieArgumentParser(formatter_class=environment_0)
        list_1 = [list_0]
        h_t_t_pie_argument_parser_1 = module_0.HTTPieArgumentParser(*list_1)
        namespace_0 = h_t_t_pie_argument_parser_1.parse_args(environment_0)
    except BaseException:
        pass