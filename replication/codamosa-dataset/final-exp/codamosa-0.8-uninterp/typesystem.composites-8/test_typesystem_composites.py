# Automatically generated by Pynguin.
import typesystem.composites as module_0
import typesystem.fields as module_1

def test_case_0():
    pass

def test_case_1():
    dict_0 = {}
    never_match_0 = module_0.NeverMatch(**dict_0)

def test_case_2():
    list_0 = None
    one_of_0 = module_0.OneOf(list_0)
    field_0 = module_1.Field()
    not_0 = module_0.Not(field_0)
    any_0 = field_0.get_default_value()
    bool_0 = True
    list_1 = []
    all_of_0 = module_0.AllOf(list_1)
    any_1 = all_of_0.validate(bool_0)

def test_case_3():
    field_0 = None
    not_0 = module_0.Not(field_0)

def test_case_4():
    field_0 = module_1.Field()
    if_then_else_0 = module_0.IfThenElse(field_0)

def test_case_5():
    any_0 = module_1.Any()
    if_then_else_0 = module_0.IfThenElse(any_0, any_0)
    int_0 = 1
    any_1 = if_then_else_0.validate(int_0)

def test_case_6():
    field_0 = module_1.Field()
    not_0 = module_0.Not(field_0)
    if_then_else_0 = module_0.IfThenElse(field_0)
    if_then_else_1 = module_0.IfThenElse(field_0, field_0, field_0)

def test_case_7():
    never_match_0 = module_0.NeverMatch()
    not_0 = module_0.Not(never_match_0)
    str_0 = 'foo'
    any_0 = not_0.validate(str_0)
    never_match_1 = module_0.NeverMatch()