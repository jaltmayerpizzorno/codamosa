# Automatically generated by Pynguin.
import dataclasses_json.undefined as module_0

def test_case_0():
    try:
        raise_undefined_parameters_0 = module_0._RaiseUndefinedParameters()
        set_0 = None
        dict_0 = {raise_undefined_parameters_0: raise_undefined_parameters_0}
        dict_1 = raise_undefined_parameters_0.handle_from_dict(set_0, dict_0)
    except BaseException:
        pass

def test_case_1():
    try:
        undefined_0 = module_0.Undefined.INCLUDE
        ignore_undefined_parameters_0 = module_0._IgnoreUndefinedParameters()
        str_0 = 'C'
        dict_0 = {undefined_0: ignore_undefined_parameters_0, undefined_0: ignore_undefined_parameters_0, ignore_undefined_parameters_0: str_0, ignore_undefined_parameters_0: str_0}
        ignore_undefined_parameters_1 = module_0._IgnoreUndefinedParameters()
        dict_1 = ignore_undefined_parameters_1.handle_from_dict(ignore_undefined_parameters_0, dict_0)
    except BaseException:
        pass

def test_case_2():
    try:
        catch_all_undefined_parameters_0 = module_0._CatchAllUndefinedParameters()
        catch_all_undefined_parameters_1 = module_0._CatchAllUndefinedParameters()
        dict_0 = {}
        bool_0 = False
        tuple_0 = (bool_0,)
        dict_1 = {}
        ignore_undefined_parameters_0 = module_0._IgnoreUndefinedParameters(**dict_1)
        callable_0 = ignore_undefined_parameters_0.create_init(tuple_0)
        var_0 = None
        str_0 = '0cva>_\x0c3cr:x[]ln%(^y'
        str_1 = 'kN:>N^g\x0c=f?X]iaieo*h'
        str_2 = None
        dict_2 = {str_0: catch_all_undefined_parameters_0, str_1: catch_all_undefined_parameters_1, str_2: dict_0, str_0: catch_all_undefined_parameters_0}
        undefined_parameter_error_0 = module_0.UndefinedParameterError(var_0, dict_2)
    except BaseException:
        pass

def test_case_3():
    try:
        catch_all_undefined_parameters_0 = module_0._CatchAllUndefinedParameters()
        str_0 = 'XU_o)O \x0b'
        dict_0 = catch_all_undefined_parameters_0.handle_dump(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        float_0 = -409.0
        catch_all_undefined_parameters_0 = module_0._CatchAllUndefinedParameters()
        callable_0 = catch_all_undefined_parameters_0.create_init(float_0)
        dict_0 = {}
        int_0 = -1832
        list_0 = [dict_0, dict_0, int_0, dict_0]
        catch_all_undefined_parameters_1 = module_0._CatchAllUndefinedParameters(*list_0)
    except BaseException:
        pass

def test_case_5():
    try:
        bool_0 = True
        dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
        float_0 = -1171.179
        str_0 = '9'
        dict_1 = {float_0: bool_0, bool_0: bool_0, str_0: dict_0}
        catch_all_undefined_parameters_0 = module_0._CatchAllUndefinedParameters()
        dict_2 = catch_all_undefined_parameters_0.handle_to_dict(str_0, dict_1)
    except BaseException:
        pass

def test_case_6():
    try:
        dict_0 = None
        dict_1 = None
        catch_all_undefined_parameters_0 = module_0._CatchAllUndefinedParameters()
        dict_2 = catch_all_undefined_parameters_0.handle_from_dict(dict_0, dict_1)
    except BaseException:
        pass