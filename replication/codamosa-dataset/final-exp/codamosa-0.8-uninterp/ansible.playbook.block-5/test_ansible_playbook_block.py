# Automatically generated by Pynguin.
import ansible.playbook.block as module_0

def test_case_0():
    pass

def test_case_1():
    block_0 = module_0.Block()

def test_case_2():
    bytes_0 = b't\x95A\xf9\xf9IbO\x150\xf4'
    str_0 = '#mN$_n,$'
    dict_0 = {bytes_0: str_0}
    block_0 = module_0.Block()
    block_1 = module_0.Block(bytes_0, str_0, dict_0, block_0)
    var_0 = block_1.get_first_parent_include()
    var_1 = block_0.get_vars()

def test_case_3():
    bool_0 = True
    int_0 = -2507
    block_0 = module_0.Block(bool_0, int_0)
    var_0 = block_0.has_tasks()

def test_case_4():
    block_0 = module_0.Block()
    var_0 = block_0.__repr__()

def test_case_5():
    tuple_0 = ()
    block_0 = module_0.Block()
    var_0 = block_0.preprocess_data(tuple_0)

def test_case_6():
    block_0 = module_0.Block()
    var_0 = block_0.filter_tagged_tasks(block_0)

def test_case_7():
    block_0 = module_0.Block()
    var_0 = block_0.serialize()

def test_case_8():
    block_0 = module_0.Block()
    var_0 = block_0.copy()

def test_case_9():
    block_0 = module_0.Block()
    var_0 = dict()
    var_1 = block_0.deserialize(var_0)

def test_case_10():
    block_0 = module_0.Block()
    bytes_0 = b'tF\xea\x13\xf3/\xde'
    var_0 = block_0.set_loader(bytes_0)

def test_case_11():
    int_0 = 4096
    block_0 = module_0.Block(int_0)
    var_0 = block_0.serialize()

def test_case_12():
    tuple_0 = ()
    block_0 = module_0.Block(tuple_0)
    block_1 = module_0.Block(block_0)
    var_0 = block_1.copy()

def test_case_13():
    block_0 = module_0.Block()
    var_0 = block_0.has_tasks()

def test_case_14():
    block_0 = module_0.Block()
    bytes_0 = b'tF\xea\x13\xf3/\xde'
    var_0 = block_0.set_loader(bytes_0)
    var_1 = block_0.get_include_params()
    var_2 = block_0.filter_tagged_tasks(block_0)

def test_case_15():
    block_0 = module_0.Block()
    dict_0 = {}
    set_0 = set()
    block_1 = module_0.Block(dict_0, set_0)
    str_0 = 'Q'
    var_0 = block_1.all_parents_static()
    var_1 = block_0.copy(str_0)

def test_case_16():
    set_0 = set()
    bool_0 = True
    block_0 = module_0.Block(set_0, bool_0, set_0)
    var_0 = block_0.copy(block_0)

def test_case_17():
    float_0 = 0.0001
    dict_0 = {float_0: float_0}
    list_0 = [dict_0, float_0, float_0]
    bool_0 = False
    block_0 = module_0.Block(list_0, bool_0, bool_0)
    set_0 = set()
    bool_1 = False
    var_0 = block_0.preprocess_data(list_0)
    block_1 = module_0.Block(set_0, bool_1, set_0)
    var_1 = block_1.copy(block_0)

def test_case_18():
    bool_0 = False
    int_0 = None
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
    set_0 = set()
    block_0 = module_0.Block(set_0, int_0)
    block_1 = module_0.Block(dict_0, bool_0, block_0)
    var_0 = block_1.filter_tagged_tasks(bool_0)

def test_case_19():
    str_0 = 'dep_chain'
    str_1 = 'name'
    str_2 = 'always'
    str_3 = 'loop'
    str_4 = 'loop_args'
    str_5 = 'block'
    str_6 = 'free_form'
    str_7 = 'tags'
    str_8 = 'rescue'
    str_9 = 'register'
    str_10 = 'when'
    str_11 = 'failed_when'
    str_12 = 'until'
    str_13 = 'retries'
    str_14 = 'delay'
    str_15 = 'with_items'
    str_16 = 'loop_with_items'
    str_17 = 'role'
    var_0 = None
    str_18 = 'Test'
    var_1 = []
    str_19 = ''
    var_2 = {}
    var_3 = []
    var_4 = []
    var_5 = []
    str_20 = '_role_name'
    str_21 = {str_20: str_18}
    var_6 = {str_0: var_0, str_1: str_18, str_2: var_1, str_3: str_19, str_4: var_2, str_5: var_3, str_6: var_0, str_7: var_4, str_8: var_5, str_9: str_19, str_10: str_19, str_11: str_19, str_12: str_19, str_13: str_19, str_14: str_19, str_15: str_19, str_16: str_19, str_17: str_21}
    block_0 = module_0.Block()
    var_7 = block_0.deserialize(var_6)

def test_case_20():
    block_0 = module_0.Block()
    var_0 = dict()
    int_0 = 1
    int_1 = 2
    int_2 = 3
    int_3 = [int_0, int_1, int_2]
    var_1 = dict(block=int_3)
    int_4 = [int_0, int_1, int_2]
    var_2 = dict(rescue=int_4)
    int_5 = [int_0, int_1, int_2]
    var_3 = dict(always=int_5)
    var_4 = dict()
    var_5 = block_0.preprocess_data(var_4)
    var_6 = dict()
    int_6 = [int_0, int_1, int_2]
    var_7 = dict(block=int_6)
    var_8 = block_0.preprocess_data(var_7)
    var_9 = dict(block=int_1)