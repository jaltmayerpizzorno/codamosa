# Automatically generated by Pynguin.
import ansible.template.native_helpers as module_0

def test_case_0():
    pass

def test_case_1():
    str_0 = ';k[5cn:g%\r|'
    bytes_0 = b'?*\x05'
    dict_0 = {}
    tuple_0 = (str_0, bytes_0, dict_0, dict_0)
    var_0 = module_0.ansible_native_concat(tuple_0)

def test_case_2():
    bytes_0 = b'\x10n\xa5\x1by\xd8'
    var_0 = module_0.ansible_native_concat(bytes_0)

def test_case_3():
    str_0 = 'pD{ }|Bd+'
    dict_0 = {str_0: str_0, str_0: str_0}
    str_1 = None
    bool_0 = True
    tuple_0 = (dict_0, str_1, bool_0)
    var_0 = module_0.ansible_native_concat(tuple_0)

def test_case_4():
    bytes_0 = b'M'
    var_0 = module_0.ansible_native_concat(bytes_0)

def test_case_5():
    str_0 = 'Test the correctness of the ansible_native_concat function.'
    var_0 = module_0.ansible_native_concat(str_0)

def test_case_6():
    dict_0 = {}
    var_0 = module_0.ansible_native_concat(dict_0)

def test_case_7():
    str_0 = '\n        Called when the process is started.  Pushes the result onto the\n        results queue. We also remove the host from the blocked hosts list, to\n        signify that they are ready for their next task.\n        '
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.ansible_native_concat(dict_0)

def test_case_8():
    tuple_0 = ()
    bytes_0 = b'\xaa\x88\xe2\x88\t\x9a\xc6\x90\x04\xa1\xd0\xb5\xe3\xe8;\xb0\x04'
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0, tuple_0: tuple_0, tuple_0: bytes_0}
    var_0 = module_0.ansible_native_concat(dict_0)