# Automatically generated by Pynguin.
import ansible.module_utils.common.collections as module_0

def test_case_0():
    str_0 = None
    var_0 = module_0.is_iterable(str_0)

def test_case_1():
    immutable_dict_0 = module_0.ImmutableDict()
    var_0 = immutable_dict_0.__repr__()

def test_case_2():
    dict_0 = {}
    immutable_dict_0 = module_0.ImmutableDict()
    var_0 = immutable_dict_0.__eq__(dict_0)

def test_case_3():
    str_0 = ''
    str_1 = 'jails'
    str_2 = 'LVI'
    dict_0 = {str_0: str_0, str_1: str_1, str_2: str_2, str_1: str_2}
    immutable_dict_0 = module_0.ImmutableDict(**dict_0)
    var_0 = immutable_dict_0.__len__()
    int_0 = 1697
    var_1 = module_0.is_iterable(int_0)

def test_case_4():
    str_0 = 'next free host: %s'
    immutable_dict_0 = module_0.ImmutableDict()
    var_0 = immutable_dict_0.difference(str_0)

def test_case_5():
    str_0 = None
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.is_iterable(dict_0)

def test_case_6():
    float_0 = 1485.1274
    var_0 = module_0.is_sequence(float_0)

def test_case_7():
    str_0 = None
    str_1 = '\n- name: Import a key from a url\n  ansible.builtin.rpm_key:\n    state: present\n    key: http://apt.sw.be/RPM-GPG-KEY.dag.txt\n\n- name: Import a key from a file\n  ansible.builtin.rpm_key:\n    state: present\n    key: /path/to/key.gpg\n\n- name: Ensure a key is not present in the db\n  ansible.builtin.rpm_key:\n    state: absent\n    key: DEADB33F\n\n- name: Verify the key, using a fingerprint, before import\n  ansible.builtin.rpm_key:\n    key: /path/to/RPM-GPG-KEY.dag.txt\n    fingerprint: EBC6 E12C 62B1 C734 026B  2122 A20E 5214 6B8D 79E6\n'
    var_0 = module_0.is_iterable(str_1, str_0)

def test_case_8():
    immutable_dict_0 = None
    var_0 = module_0.is_string(immutable_dict_0)
    int_0 = 1328
    int_1 = 24
    dict_0 = {int_0: int_1}
    int_2 = 619
    var_1 = module_0.is_sequence(dict_0, int_2)