# Automatically generated by Pynguin.
import sanic.exceptions as module_0

def test_case_0():
    try:
        int_0 = 422
        var_0 = module_0.abort(int_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '-%'
        server_error_0 = module_0.ServerError(str_0)
        request_timeout_0 = None
        header_not_found_0 = module_0.HeaderNotFound(request_timeout_0)
        payload_too_large_0 = module_0.PayloadTooLarge(header_not_found_0)
        header_expectation_failed_0 = None
        bool_0 = True
        method_not_supported_0 = module_0.MethodNotSupported(payload_too_large_0, header_expectation_failed_0, bool_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b'\x1f\xe4\r\r\x03\xc45%g'
        sanic_exception_0 = None
        dict_0 = {sanic_exception_0: bytes_0}
        set_0 = set()
        invalid_range_type_0 = module_0.InvalidRangeType(dict_0, set_0)
    except BaseException:
        pass

def test_case_3():
    try:
        int_0 = 400
        list_0 = None
        load_file_exception_0 = None
        dict_0 = {int_0: load_file_exception_0, load_file_exception_0: int_0, int_0: load_file_exception_0}
        load_file_exception_1 = module_0.LoadFileException(list_0, dict_0)
        bytes_0 = b'\xad+\xb0\xc0\xeaH\x92&\x02fx\xde*Q&a'
        str_0 = '/l70'
        float_0 = -3155.9493
        u_r_l_build_error_0 = module_0.URLBuildError(float_0)
        not_found_0 = module_0.NotFound(u_r_l_build_error_0)
        bool_0 = True
        sanic_exception_0 = module_0.SanicException(not_found_0, bool_0)
        set_0 = {bytes_0, load_file_exception_1, sanic_exception_0, bool_0}
        py_file_error_0 = module_0.PyFileError(set_0)
        sanic_exception_1 = module_0.SanicException(str_0, py_file_error_0)
        var_0 = module_0.abort(int_0, bytes_0)
    except BaseException:
        pass