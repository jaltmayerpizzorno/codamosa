# Automatically generated by Pynguin.
import youtube_dl.jsinterp as module_0

def test_case_0():
    pass

def test_case_1():
    list_0 = []
    j_s_interpreter_0 = module_0.JSInterpreter(list_0)

def test_case_2():
    str_0 = 'var ca={"8a":function(a){return a},"1f":function(a){return a},"3b":function(a){return(a<10?"0":"")+a}};\n            '
    j_s_interpreter_0 = module_0.JSInterpreter(str_0)
    str_1 = 'ca'
    var_0 = j_s_interpreter_0.extract_object(str_1)
    str_2 = '8a'
    var_1 = var_0[str_2]
    str_3 = '1f'
    var_2 = var_0[str_3]
    str_4 = '3b'
    var_3 = var_0[str_4]
    var_4 = var_0[str_4]
    var_5 = var_0[str_4]

def test_case_3():
    dict_0 = {}
    int_0 = 1362997920
    str_0 = 'k7b+q'
    j_s_interpreter_0 = module_0.JSInterpreter(str_0, dict_0)
    var_0 = j_s_interpreter_0.build_function(int_0, int_0)
    j_s_interpreter_1 = module_0.JSInterpreter(dict_0)

def test_case_4():
    dict_0 = {}
    str_0 = 'k7b+q'
    j_s_interpreter_0 = module_0.JSInterpreter(str_0, dict_0)

def test_case_5():
    str_0 = '\n        a = 1;\n        b = (function () {\n            return [\n                "a",\n                "b",\n                "c"\n            ];\n        }());\n    '
    j_s_interpreter_0 = module_0.JSInterpreter(str_0)
    var_0 = {}
    str_1 = 'a = 1'
    var_1 = j_s_interpreter_0.interpret_statement(str_1, var_0)
    str_2 = 'var b = a'
    var_2 = j_s_interpreter_0.interpret_statement(str_2, var_0)
    str_3 = 'var c = b + 1'
    var_3 = j_s_interpreter_0.interpret_statement(str_3, var_0)
    var_4 = j_s_interpreter_0.interpret_statement(str_1, var_0)

def test_case_6():
    str_0 = ''
    str_1 = 'list'
    j_s_interpreter_0 = module_0.JSInterpreter(str_0, str_1)
    int_0 = 109
    str_2 = '1 + 2 * 3 - 4'
    var_0 = {}
    var_1 = j_s_interpreter_0.interpret_expression(str_2, var_0, int_0)
    str_3 = '5 / 3'
    var_2 = {}
    var_3 = j_s_interpreter_0.interpret_expression(str_3, var_2, int_0)
    str_4 = '5 % 3'
    var_4 = j_s_interpreter_0.interpret_expression(str_4, var_2, int_0)
    str_5 = '(1 + 2) * 3 - 4'
    var_5 = {}
    var_6 = j_s_interpreter_0.interpret_expression(str_5, var_5, int_0)
    var_7 = {}
    var_8 = j_s_interpreter_0.interpret_expression(str_5, var_7, int_0)