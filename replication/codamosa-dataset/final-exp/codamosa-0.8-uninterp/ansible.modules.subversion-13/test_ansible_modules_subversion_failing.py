# Automatically generated by Pynguin.
import ansible.modules.subversion as module_0

def test_case_0():
    try:
        bool_0 = True
        str_0 = '4avz.#.I0o;#-6jp9'
        float_0 = -518.454
        tuple_0 = ()
        subversion_0 = module_0.Subversion(float_0, str_0, str_0, str_0, float_0, str_0, bool_0, tuple_0)
        var_0 = subversion_0.checkout(tuple_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bool_0 = False
        str_0 = ''
        float_0 = -518.454
        tuple_0 = ()
        subversion_0 = module_0.Subversion(float_0, str_0, str_0, str_0, float_0, str_0, bool_0, tuple_0)
        var_0 = subversion_0.checkout(tuple_0)
    except BaseException:
        pass

def test_case_2():
    try:
        float_0 = -5.3234
        set_0 = {float_0, float_0, float_0, float_0}
        str_0 = '\\K\tE_Ky&$K'
        float_1 = 3263.12
        bool_0 = False
        subversion_0 = None
        list_0 = [bool_0]
        tuple_0 = (subversion_0, list_0)
        str_1 = '__main__'
        bytes_0 = b'\xec\xfe\xe3'
        subversion_1 = module_0.Subversion(set_0, str_0, float_1, str_0, bool_0, tuple_0, str_1, bytes_0)
        var_0 = subversion_1.is_svn_repo()
    except BaseException:
        pass

def test_case_3():
    try:
        bool_0 = True
        str_0 = '"\n4*:q_6DAtYe]W\tvs<A'
        float_0 = -518.454
        tuple_0 = ()
        subversion_0 = module_0.Subversion(float_0, str_0, str_0, str_0, float_0, str_0, bool_0, tuple_0)
        var_0 = subversion_0.checkout(bool_0)
    except BaseException:
        pass

def test_case_4():
    try:
        bool_0 = True
        str_0 = '"\n4*:q_6DAtYe]W\tvs<A'
        float_0 = -518.45
        tuple_0 = ()
        subversion_0 = module_0.Subversion(float_0, str_0, str_0, str_0, float_0, str_0, bool_0, tuple_0)
        var_0 = subversion_0.export()
    except BaseException:
        pass

def test_case_5():
    try:
        int_0 = 2090
        bytes_0 = b'r \x98zP\x8b'
        set_0 = {int_0, int_0, bytes_0}
        bytes_1 = b'g\x8c\xf8\x1d\x16+@\x16\x85U8\x13'
        float_0 = -2227.853611
        set_1 = {float_0, bytes_1, float_0}
        bool_0 = True
        list_0 = [set_0, float_0]
        dict_0 = {float_0: bool_0}
        bool_1 = False
        float_1 = -63.92
        tuple_0 = (bool_1, float_1)
        tuple_1 = (bool_0, list_0, dict_0, tuple_0)
        set_2 = set()
        subversion_0 = module_0.Subversion(bytes_1, bool_0, tuple_1, float_0, set_2, set_1, bytes_0, int_0)
        var_0 = subversion_0.export(set_1)
    except BaseException:
        pass

def test_case_6():
    try:
        bool_0 = True
        str_0 = '"\n4*:q_6DAtYe]W\tvs<A'
        float_0 = -518.45
        tuple_0 = ()
        subversion_0 = module_0.Subversion(float_0, str_0, str_0, str_0, float_0, str_0, bool_0, tuple_0)
        var_0 = subversion_0.switch()
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = '-QVB!-go'
        tuple_0 = ()
        bytes_0 = b'r\xe8T\xd7\xf7\xad,\xda'
        list_0 = [str_0]
        subversion_0 = module_0.Subversion(str_0, bytes_0, str_0, tuple_0, bytes_0, list_0, tuple_0, str_0)
        var_0 = subversion_0.update()
    except BaseException:
        pass

def test_case_8():
    try:
        float_0 = -704.0
        set_0 = {float_0, float_0}
        bytes_0 = b'\xac\xf1\x0e\x8a\x91g\xc9\x84\xde\xc1\x11\x9f'
        subversion_0 = None
        str_0 = "\nbbw ''vz Woi"
        str_1 = 'H'
        str_2 = '2nZ5O^UpGOQy4"h\x0b\nYPL'
        list_0 = [set_0, str_1, bytes_0, set_0]
        tuple_0 = (list_0,)
        str_3 = '{?f!_<ZbFr+44A>x'
        bytes_1 = None
        subversion_1 = module_0.Subversion(subversion_0, str_0, str_1, str_2, tuple_0, str_3, bytes_1, subversion_0)
        tuple_1 = (subversion_1,)
        tuple_2 = ()
        dict_0 = {tuple_2: set_0}
        int_0 = 2066
        subversion_2 = module_0.Subversion(float_0, set_0, bytes_0, tuple_1, bytes_0, dict_0, int_0, int_0)
        bool_0 = False
        str_4 = '9M8TtHoJ?q*ZByb'
        subversion_3 = module_0.Subversion(subversion_2, list_0, dict_0, bool_0, dict_0, dict_0, subversion_0, str_4)
        var_0 = subversion_3.revert()
    except BaseException:
        pass

def test_case_9():
    try:
        float_0 = -1419.5001
        str_0 = 'H}T"%I$9nT}.p$('
        int_0 = 716
        str_1 = 'ansible.modules.subversion'
        float_1 = 1002.9095
        bool_0 = False
        list_0 = [float_0, bool_0, int_0, float_0]
        list_1 = [list_0]
        bool_1 = True
        tuple_0 = (list_1, bool_1)
        dict_0 = {float_0: list_0, float_0: list_0}
        subversion_0 = module_0.Subversion(float_0, str_0, int_0, str_1, float_1, bool_0, tuple_0, dict_0)
        var_0 = subversion_0.needs_update()
    except BaseException:
        pass

def test_case_10():
    try:
        float_0 = 876.366
        str_0 = 'zaNv2eZ[6cp<'
        list_0 = [float_0, str_0]
        subversion_0 = None
        set_0 = {float_0, subversion_0}
        str_1 = 'hqI<I,+!@/]'
        str_2 = 'k6~Ck8*'
        float_1 = -1.151
        tuple_0 = None
        bytes_0 = b'|\xcd'
        bytes_1 = b'\xfa\x1fd \x92\xfa\x8fA@\xc9Pb\x13\x9e\xd9\xff\xe2$'
        tuple_1 = (tuple_0, bytes_0, bytes_1)
        bytes_2 = b'\xf1\xad\xf3\xe4\xd7\xbf\\\xf5\n'
        subversion_1 = module_0.Subversion(subversion_0, set_0, str_1, str_2, float_1, tuple_1, list_0, bytes_2)
        dict_0 = {str_1: str_1}
        tuple_2 = (dict_0, tuple_0)
        tuple_3 = (subversion_1, bytes_0, tuple_2, float_1)
        int_0 = 8
        str_3 = None
        bool_0 = False
        subversion_2 = module_0.Subversion(tuple_3, list_0, dict_0, subversion_1, set_0, int_0, str_3, bool_0)
        dict_1 = {subversion_2: tuple_1}
        subversion_3 = module_0.Subversion(float_0, str_0, str_0, list_0, dict_1, set_0, tuple_3, dict_1)
        var_0 = subversion_3.get_remote_revision()
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = 'Name of the action to execute (default=%s)'
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
        str_1 = 't:$KI7I(Z\\'
        float_0 = -3396.0
        bool_0 = True
        tuple_0 = ()
        str_2 = 'I(L\tY9g'
        subversion_0 = module_0.Subversion(str_1, float_0, bool_0, tuple_0, tuple_0, str_2, float_0, dict_0)
        var_0 = subversion_0.has_local_mods()
    except BaseException:
        pass