# Automatically generated by Pynguin.
import typesystem.tokenize.tokenize_yaml as module_0
import typesystem.fields as module_1
import typesystem.schemas as module_2

def test_case_0():
    pass

def test_case_1():
    bytes_0 = b'\xdf8\n\xec'
    token_0 = module_0.tokenize_yaml(bytes_0)

def test_case_2():
    str_0 = '1K'
    token_0 = module_0.tokenize_yaml(str_0)

def test_case_3():
    bytes_0 = b'?\xff\xea'
    token_0 = module_0.tokenize_yaml(bytes_0)

def test_case_4():
    str_0 = '\n    name: Paul\n    age: 100\n    active: true\n    '
    token_0 = module_0.tokenize_yaml(str_0)

def test_case_5():
    str_0 = '\n  name: "John"\n  age: 42\n  location:\n    latitude: 32.1234\n    longitude: -96.1234\n  '
    str_1 = 'name'
    str_2 = 'age'
    str_3 = 'location'
    str_4 = 'string'
    field_0 = module_1.Field()
    str_5 = 'number'
    field_1 = module_1.Field()
    str_6 = 'object'
    str_7 = 'latitude'
    str_8 = 'longitude'
    field_2 = module_1.Field()
    field_3 = module_1.Field()
    field_4 = {str_7: field_2, str_8: field_3}
    field_5 = module_1.Field()
    field_6 = {str_1: field_0, str_2: field_1, str_3: field_5}
    schema_0 = module_2.Schema()
    any_0 = module_0.validate_yaml(str_0, schema_0)