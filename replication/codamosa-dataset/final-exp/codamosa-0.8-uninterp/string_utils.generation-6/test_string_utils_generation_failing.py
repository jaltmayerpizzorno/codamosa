# Automatically generated by Pynguin.
import string_utils.generation as module_0

def test_case_0():
    try:
        int_0 = -3701
        str_0 = module_0.random_string(int_0)
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = -546
        str_0 = module_0.secure_random_hex(int_0)
    except BaseException:
        pass

def test_case_2():
    try:
        int_0 = 475
        generator_0 = module_0.roman_range(int_0, int_0)
    except BaseException:
        pass

def test_case_3():
    try:
        int_0 = 7
        generator_0 = module_0.roman_range(int_0)
        var_0 = list(generator_0)
        int_1 = -15
        int_2 = -1
        generator_1 = module_0.roman_range(int_1, int_0, int_2)
    except BaseException:
        pass

def test_case_4():
    try:
        int_0 = None
        str_0 = module_0.random_string(int_0)
    except BaseException:
        pass

def test_case_5():
    try:
        int_0 = None
        str_0 = module_0.secure_random_hex(int_0)
    except BaseException:
        pass

def test_case_6():
    try:
        int_0 = 1132
        str_0 = module_0.random_string(int_0)
        int_1 = 673
        str_1 = module_0.uuid()
        int_2 = 64
        generator_0 = module_0.roman_range(int_2, int_1)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = module_0.uuid()
        int_0 = 720
        generator_0 = module_0.roman_range(int_0)
        int_1 = 1429
        str_1 = module_0.random_string(int_1)
        int_2 = 4253
        bool_0 = False
        str_2 = module_0.uuid(bool_0)
        str_3 = module_0.secure_random_hex(int_2)
        str_4 = module_0.uuid()
        str_5 = module_0.uuid(bool_0)
        generator_1 = module_0.roman_range(int_2)
    except BaseException:
        pass

def test_case_8():
    try:
        int_0 = 3524
        str_0 = module_0.random_string(int_0)
        bool_0 = False
        str_1 = module_0.uuid(bool_0)
        int_1 = 1
        str_2 = module_0.secure_random_hex(int_1)
        str_3 = module_0.uuid()
        int_2 = None
        generator_0 = module_0.roman_range(int_2)
    except BaseException:
        pass

def test_case_9():
    try:
        int_0 = 2
        generator_0 = module_0.roman_range(int_0)
        var_0 = list(generator_0)
        int_1 = -1
        generator_1 = module_0.roman_range(int_0, int_0, int_1)
    except BaseException:
        pass

def test_case_10():
    try:
        int_0 = 7
        generator_0 = module_0.roman_range(int_0)
        str_0 = module_0.uuid()
        var_0 = list(generator_0)
        int_1 = 18
        int_2 = -1
        generator_1 = module_0.roman_range(int_1, int_0, int_2)
    except BaseException:
        pass