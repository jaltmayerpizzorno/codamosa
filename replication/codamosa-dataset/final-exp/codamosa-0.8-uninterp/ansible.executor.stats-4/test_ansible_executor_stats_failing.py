# Automatically generated by Pynguin.
import ansible.executor.stats as module_0

def test_case_0():
    try:
        int_0 = 95
        str_0 = ';`:7b\\;.'
        aggregate_stats_0 = module_0.AggregateStats()
        var_0 = aggregate_stats_0.increment(int_0, str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = -851
        dict_0 = {int_0: int_0, int_0: int_0}
        aggregate_stats_0 = module_0.AggregateStats()
        var_0 = aggregate_stats_0.summarize(dict_0)
    except BaseException:
        pass

def test_case_2():
    try:
        aggregate_stats_0 = module_0.AggregateStats()
        str_0 = 'D`qz_rS'
        bool_0 = None
        float_0 = None
        var_0 = aggregate_stats_0.update_custom_stats(bool_0, float_0)
        tuple_0 = ()
        var_1 = aggregate_stats_0.summarize(tuple_0)
        str_1 = 'Key already exists, use "force: yes" to overwrite'
        var_2 = aggregate_stats_0.increment(str_0, str_1)
    except BaseException:
        pass

def test_case_3():
    try:
        aggregate_stats_0 = module_0.AggregateStats()
        str_0 = 'All assertions passed'
        str_1 = '-p%s'
        int_0 = -955
        var_0 = aggregate_stats_0.set_custom_stats(int_0, int_0)
        var_1 = aggregate_stats_0.set_custom_stats(str_0, str_1)
        aggregate_stats_1 = module_0.AggregateStats()
        list_0 = [str_0, str_1]
        var_2 = aggregate_stats_0.update_custom_stats(list_0, str_1)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = '7hg2,vV'
        bytes_0 = b'H\x94\xb3r\xeb\xb2\xe9\x1a\x8d\x02'
        aggregate_stats_0 = None
        aggregate_stats_1 = module_0.AggregateStats()
        var_0 = aggregate_stats_1.set_custom_stats(bytes_0, aggregate_stats_0)
        str_1 = ')sP7zB`RK%3~Q4jje5L'
        aggregate_stats_2 = module_0.AggregateStats()
        bool_0 = False
        var_1 = aggregate_stats_2.summarize(bool_0)
        var_2 = aggregate_stats_2.increment(str_0, str_1)
    except BaseException:
        pass

def test_case_5():
    try:
        aggregate_stats_0 = module_0.AggregateStats()
        str_0 = 'changed'
        str_1 = 'testHost'
        var_0 = aggregate_stats_0.decrement(str_0, str_1)
        var_1 = aggregate_stats_0.increment(str_0, str_1)
        var_2 = aggregate_stats_0.increment(str_0, str_1)
        tuple_0 = ()
        set_0 = {tuple_0, var_2}
        var_3 = aggregate_stats_0.decrement(str_0, set_0)
    except BaseException:
        pass