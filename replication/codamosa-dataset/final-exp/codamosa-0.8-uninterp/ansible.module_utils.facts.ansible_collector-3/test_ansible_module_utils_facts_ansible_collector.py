# Automatically generated by Pynguin.
import ansible.module_utils.facts.ansible_collector as module_0

def test_case_0():
    pass

def test_case_1():
    bytes_0 = None
    var_0 = module_0.get_ansible_collector(bytes_0)

def test_case_2():
    bytes_0 = b'\x04'
    str_0 = 'KmBk!*fn~c!Qso]'
    bool_0 = False
    dict_0 = {str_0: bool_0, str_0: str_0, bytes_0: bool_0}
    ansible_fact_collector_0 = module_0.AnsibleFactCollector(str_0, dict_0, bytes_0)
    var_0 = ansible_fact_collector_0.collect(bytes_0)

def test_case_3():
    str_0 = ',*?Xx.'
    ansible_fact_collector_0 = module_0.AnsibleFactCollector(str_0)
    var_0 = ansible_fact_collector_0.collect()

def test_case_4():
    int_0 = 600
    ansible_fact_collector_0 = module_0.AnsibleFactCollector(int_0)
    collector_meta_data_collector_0 = module_0.CollectorMetaDataCollector()
    list_0 = [collector_meta_data_collector_0, collector_meta_data_collector_0]
    ansible_fact_collector_1 = module_0.AnsibleFactCollector(list_0)
    ansible_fact_collector_2 = module_0.AnsibleFactCollector(ansible_fact_collector_1)
    int_1 = -600
    collector_meta_data_collector_1 = module_0.CollectorMetaDataCollector(int_1)
    var_0 = collector_meta_data_collector_0.collect()
    bool_0 = True
    var_1 = ansible_fact_collector_1.collect(bool_0)

def test_case_5():
    collector_meta_data_collector_0 = module_0.CollectorMetaDataCollector()

def test_case_6():
    bytes_0 = b'\x99\x96u8\xb5\xc6+\x12A\x89\xeb\xdc\xe0\x8aE;'
    collector_meta_data_collector_0 = module_0.CollectorMetaDataCollector(bytes_0)
    var_0 = collector_meta_data_collector_0.collect()

def test_case_7():
    str_0 = 'all'
    str_1 = 'p\rR@z|%'
    dict_0 = {str_1: str_1, str_1: str_0, str_1: str_0, str_0: str_1}
    str_2 = "!;9M[tFe!v1't'$"
    bytes_0 = b'\xab\xeb\x94o\xa3'
    bytes_1 = b'\x05\x93\x80\xd62\xc0\xdc\xb8\x182\x1e\x94V\xdb\x91\x1d\x1f'
    collector_meta_data_collector_0 = module_0.CollectorMetaDataCollector(dict_0, str_2, bytes_0, bytes_1)
    var_0 = collector_meta_data_collector_0.collect()