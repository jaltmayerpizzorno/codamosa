# Automatically generated by Pynguin.
import pypara.commons.zeitgeist as module_0
import pypara.accounting.generic as module_1
import pypara.accounting.ledger as module_2
import decimal as module_3
import pypara.accounting.journaling as module_4

def test_case_0():
    try:
        date_0 = None
        date_range_0 = module_0.DateRange(date_0, date_0)
        list_0 = []
        balance_0 = module_1.Balance(date_0, list_0)
        account_0 = None
        dict_0 = {account_0: balance_0}
        var_0 = module_2.build_general_ledger(date_range_0, balance_0, dict_0)
    except BaseException:
        pass

def test_case_1():
    try:
        date_0 = None
        var_0 = None
        list_0 = []
        account_0 = None
        balance_0 = module_1.Balance(date_0, var_0)
        balance_1 = module_1.Balance(date_0, var_0)
        read_initial_balances_0 = None
        date_range_0 = module_0.DateRange(date_0, date_0)
        dict_0 = {account_0: account_0}
        general_ledger_0 = module_2.GeneralLedger(date_range_0, dict_0)
        var_1 = module_2.compile_general_ledger_program(read_initial_balances_0, general_ledger_0)
        ledger_0 = module_2.Ledger(account_0, balance_0)
        date_range_1 = module_0.DateRange(date_0, date_0)
        dict_1 = {account_0: balance_1, account_0: balance_0, account_0: balance_0}
        var_2 = module_2.build_general_ledger(date_range_1, list_0, dict_1)
        var_3 = ledger_0.add(balance_0)
    except BaseException:
        pass

def test_case_2():
    try:
        date_0 = None
        account_0 = None
        var_0 = None
        balance_0 = module_1.Balance(date_0, var_0)
        str_0 = '*6n4nP($!8g\t'
        ledger_0 = module_2.Ledger(account_0, balance_0)
        var_1 = ledger_0.add(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        date_0 = None
        date_range_0 = module_0.DateRange(date_0, date_0)
        var_0 = None
        balance_0 = module_1.Balance(date_0, var_0)
        var_1 = date_range_0.__eq__(balance_0)
        account_0 = None
        var_2 = None
        balance_1 = module_1.Balance(date_0, var_2)
        balance_2 = module_1.Balance(date_0, var_2)
        var_3 = balance_2.__hash__()
        str_0 = '*6n4nP($!8g\t'
        ledger_0 = module_2.Ledger(account_0, balance_0)
        decimal_0 = module_3.Decimal()
        ledger_entry_0 = module_2.LedgerEntry(str_0, decimal_0, var_0)
        var_4 = ledger_0.add(ledger_entry_0)
    except BaseException:
        pass

def test_case_4():
    try:
        date_0 = None
        var_0 = None
        account_0 = None
        var_1 = None
        balance_0 = module_1.Balance(date_0, var_0)
        balance_1 = module_1.Balance(date_0, var_0)
        str_0 = '*6n4nP($8g\t'
        ledger_0 = module_2.Ledger(account_0, balance_0)
        date_range_0 = module_0.DateRange(date_0, date_0)
        dict_0 = {balance_1: account_0, str_0: account_0, var_1: balance_1}
        dict_1 = {}
        var_2 = module_2.build_general_ledger(date_range_0, dict_0, dict_1)
    except BaseException:
        pass

def test_case_5():
    try:
        date_0 = None
        var_0 = None
        account_0 = None
        balance_0 = module_1.Balance(date_0, var_0)
        balance_1 = module_1.Balance(date_0, var_0)
        date_range_0 = module_0.DateRange(date_0, date_0)
        dict_0 = {account_0: balance_0, account_0: balance_1, account_0: balance_0, account_0: balance_1, account_0: balance_0}
        str_0 = 'zo#;\r`\n-6c*U\r\\\x0cFV'
        decimal_0 = module_3.Decimal()
        journal_entry_0 = module_4.JournalEntry(date_0, str_0, decimal_0)
        bool_0 = True
        set_0 = {balance_1, str_0, decimal_0, date_range_0}
        tuple_0 = (set_0,)
        tuple_1 = (journal_entry_0, decimal_0, bool_0, tuple_0)
        var_1 = module_2.build_general_ledger(date_range_0, tuple_1, dict_0)
    except BaseException:
        pass