# Automatically generated by Pynguin.
import ansible.parsing.mod_args as module_0

def test_case_0():
    pass

def test_case_1():
    module_args_parser_0 = module_0.ModuleArgsParser()

def test_case_2():
    str_0 = 'bar'
    var_0 = dict(foo=str_0)
    var_1 = dict(action=str_0, args=var_0)
    module_args_parser_0 = module_0.ModuleArgsParser(var_1, var_0)
    var_2 = module_args_parser_0.parse()

def test_case_3():
    str_0 = ''
    var_0 = dict(foo=str_0)
    module_args_parser_0 = module_0.ModuleArgsParser(var_0, var_0)
    var_1 = module_args_parser_0.parse(var_0)

def test_case_4():
    var_0 = None
    str_0 = 'bare'
    var_1 = dict(foo=var_0)
    var_2 = dict(action=str_0, args=var_0)
    module_args_parser_0 = module_0.ModuleArgsParser(var_2, var_0)
    var_3 = module_args_parser_0.parse()
    var_4 = dict(action=str_0, args=module_args_parser_0, delegate_to=str_0)

def test_case_5():
    str_0 = 'action'
    str_1 = 'module'
    str_2 = 'url'
    str_3 = 'https://www.saltstack.com/'
    str_4 = {str_1: str_3, str_2: str_3}
    str_5 = {str_0: str_4}
    module_args_parser_0 = module_0.ModuleArgsParser(str_5)
    var_0 = module_args_parser_0.parse()

def test_case_6():
    str_0 = 'shell'
    int_0 = 1
    module_args_parser_0 = module_0.ModuleArgsParser()
    str_1 = '}noJ>Z'
    var_0 = {str_1: str_0, str_0: int_0, str_0: int_0}
    var_1 = {str_0: var_0}
    module_args_parser_1 = module_0.ModuleArgsParser(var_1)
    var_2 = module_args_parser_1.parse()

def test_case_7():
    str_0 = 'action'
    str_1 = 'module'
    str_2 = 'args'
    str_3 = 'warn'
    str_4 = 'command'
    str_5 = 'echo hi'
    bool_0 = False
    var_0 = {str_1: str_4, str_2: str_5, str_3: bool_0}
    var_1 = {str_0: var_0}
    var_2 = None
    module_args_parser_0 = module_0.ModuleArgsParser(var_1, var_2)
    var_3 = module_args_parser_0.parse()