# Automatically generated by Pynguin.
import string_utils.validation as module_0

def test_case_0():
    str_0 = 'R,J1#L<m,9'
    bool_0 = module_0.contains_html(str_0)

def test_case_1():
    str_0 = 'xzZ#2-<M,.iQ2hwQ$~E'
    bool_0 = module_0.is_isbn(str_0)

def test_case_2():
    str_0 = '192.168.1.1'
    bool_0 = module_0.is_ip_v4(str_0)
    bool_1 = module_0.is_ip_v4(str_0)
    str_1 = '192.168.1.300'
    bool_2 = module_0.is_isbn(str_1, bool_1)

def test_case_3():
    str_0 = "LfHLjFU'C~"
    bool_0 = module_0.is_isbn(str_0)

def test_case_4():
    str_0 = '"helq5 there"@gmail.com'
    bool_0 = module_0.is_email(str_0)

def test_case_5():
    str_0 = "\n    Generates a random string using secure low level random generator (os.urandom).\n\n    **Bear in mind**: due to hex conversion, the returned string will have a size that is exactly    the double of the given `byte_count`.\n\n    *Example:*\n\n    >>> secure_random_hex(9) # possible output: 'aac4cf1d1d87bd5036'\n\n    :param byte_count: Number of random bytes to generate\n    :type byte_count: int\n    :return: Hexadecimal string representation of generated random bytes\n    "
    bool_0 = module_0.is_number(str_0)

def test_case_6():
    str_0 = '\x0czN&<(Gh>{O4,\r6UU56'
    bool_0 = module_0.is_integer(str_0)

def test_case_7():
    str_0 = ''
    bool_0 = module_0.is_decimal(str_0)

def test_case_8():
    str_0 = 'http://www.mysite.com'
    bool_0 = module_0.is_url(str_0)

def test_case_9():
    str_0 = '1>x!5{y)*'
    str_1 = ''
    str_2 = '(\\s"[^"]+"(?=[?.:!,;])|(?<=\\S)"[^"]+"\\s|(?<=\\S)"[^"]+"(?=[?.:!,;])|\\s\\([^)]+\\)(?=[?.:!,;])|(?<=\\S)\\([^)]+\\)\\s|(?<=\\S)(\\([^)]+\\))(?=[?.:!,;]))'
    list_0 = [str_1, str_2]
    bool_0 = module_0.is_url(str_0, list_0)

def test_case_10():
    float_0 = 1225.0
    bool_0 = module_0.is_url(float_0)

def test_case_11():
    str_0 = '255.200.100.75'
    bool_0 = module_0.is_ip_v4(str_0)
    bool_1 = module_0.is_email(bool_0)
    str_1 = '@gmail.com'
    dict_0 = {str_0: str_0, str_1: str_0, str_0: bool_1}
    bool_2 = module_0.is_email(dict_0)

def test_case_12():
    str_0 = '\x0czN&<(Gh>{O4,\r6UU56'
    bool_0 = module_0.is_credit_card(str_0)

def test_case_13():
    bytes_0 = b'\xa6N\x9d\xdcL\xfb\xec\xe0\xa3K\x95\xf4{\xd9\xf0\xa5'
    str_0 = ')sD8a[m (c'
    bool_0 = module_0.is_isbn_10(str_0)
    i_s_b_n_checker_0 = module_0.__ISBNChecker(str_0)
    str_1 = 'W\r7fN7[k0g#pl@zD>To'
    bool_1 = module_0.is_credit_card(bytes_0, str_1)
    str_2 = "\n    Returns the string with its chars reversed.\n\n    *Example:*\n\n    >>> reverse('hello') # returns 'olleh'\n\n    :param input_string: String to revert.\n    :type input_string: str\n    :return: Reversed string.\n    "
    tuple_0 = ()
    bool_2 = module_0.is_ip(tuple_0)
    bool_3 = module_0.is_ip_v4(str_2)
    bool_4 = module_0.is_ip_v4(bool_3)

def test_case_14():
    str_0 = '"b8eaDs[|#Qm<|F8_lU'
    bool_0 = module_0.is_isbn(str_0)
    i_s_b_n_checker_0 = module_0.__ISBNChecker(str_0)
    bool_1 = module_0.is_camel_case(str_0)
    bool_2 = i_s_b_n_checker_0.is_isbn_10()
    i_s_b_n_checker_1 = module_0.__ISBNChecker(str_0, bool_2)
    bool_3 = i_s_b_n_checker_0.is_isbn_13()

def test_case_15():
    str_0 = '?r<=#\x0b\x0b>*-aE/'
    i_s_b_n_checker_0 = module_0.__ISBNChecker(str_0)
    bool_0 = module_0.is_snake_case(i_s_b_n_checker_0)
    bool_1 = True
    i_s_b_n_checker_1 = module_0.__ISBNChecker(str_0, bool_1)
    bool_2 = i_s_b_n_checker_1.is_isbn_10()
    str_1 = 'asciify'
    bool_3 = i_s_b_n_checker_1.is_isbn_13()
    bool_4 = False
    bool_5 = module_0.is_isbn_13(str_1, bool_4)

def test_case_16():
    str_0 = '^f4T\t'
    bool_0 = module_0.is_pangram(str_0)
    bool_1 = module_0.is_snake_case(str_0)
    bytes_0 = b"\xad\x7f\x1b\x8b\x0e_\xf2\xcb4\x05e\xab'\x1f\xa4\x01\x08"
    bool_2 = module_0.is_json(bytes_0)
    set_0 = None
    none_type_0 = None
    bool_3 = module_0.is_url(bytes_0, none_type_0)
    bool_4 = module_0.is_snake_case(bool_2)
    bool_5 = module_0.is_camel_case(set_0)
    bool_6 = module_0.is_isogram(str_0)
    bool_7 = module_0.is_isbn_13(str_0)
    bool_8 = module_0.is_ip_v4(bool_1)
    str_1 = '\n    Checks if a string is a valid ip v6.\n\n    *Examples:*\n\n    >>> is_ip_v6(\'2001:db8:85a3:0000:0000:8a2e:370:7334\') # returns true\n    >>> is_ip_v6(\'2001:db8:85a3:0000:0000:8a2e:370:?\') # returns false (invalid "?")\n\n    :param input_string: String to check.\n    :type input_string: str\n    :return: True if a v6 ip, false otherwise.\n    '
    i_s_b_n_checker_0 = module_0.__ISBNChecker(str_1)
    bool_9 = i_s_b_n_checker_0.is_isbn_10()

def test_case_17():
    int_0 = 320
    bool_0 = module_0.is_json(int_0)

def test_case_18():
    complex_0 = None
    str_0 = '^4\\d{12}(?:\\d{3})?$'
    bool_0 = module_0.is_integer(str_0)
    tuple_0 = (complex_0,)
    dict_0 = {tuple_0: tuple_0, complex_0: tuple_0, complex_0: tuple_0}
    bool_1 = module_0.is_ip_v6(dict_0)
    bool_2 = module_0.is_uuid(dict_0, bool_1)

def test_case_19():
    bool_0 = True
    bool_1 = module_0.is_ip(bool_0)

def test_case_20():
    str_0 = '\x0czN&<(Gh>{O4,\r6UU56'
    bool_0 = module_0.is_integer(str_0)
    bool_1 = False
    bool_2 = module_0.is_palindrome(str_0, bool_1)

def test_case_21():
    float_0 = 2664.57
    bool_0 = module_0.is_slug(float_0)
    bool_1 = module_0.is_ip(float_0)
    bytes_0 = b'\x91\xdal\x98\xf0\x0c\xa1\xb5\xf3v\xbcy\x7f\xc2[\xf7\xa5j\x0f'
    bool_2 = module_0.is_snake_case(bytes_0)
    str_0 = '"uX%!'
    bool_3 = module_0.is_palindrome(str_0)
    bool_4 = None
    bool_5 = module_0.is_palindrome(bool_1, bool_4)
    str_1 = 'iea(ie|bCw'
    bool_6 = module_0.is_isbn_13(str_1)
    bytes_1 = b'\xef\x12p\xd8\xc4R\x89\xb0\xf2\xcez\xb0\xdf\xc4\xfd\xf7\x1dG)'
    bool_7 = module_0.is_json(str_1)
    bool_8 = module_0.is_ip(bytes_1)

def test_case_22():
    str_0 = 'etiXuMk'
    bool_0 = module_0.is_pangram(str_0)

def test_case_23():
    str_0 = "\n    Check if a string is a valid url.\n\n    *Examples:*\n\n    >>> is_url('http://www.mysite.com') # returns true\n    >>> is_url('https://mysite.com') # returns true\n    >>> is_url('.mysite.com') # returns false\n\n    :param input_string: String to check.\n    :type input_string: str\n    :param allowed_schemes: List of valid schemes ('http', 'https', 'ftp'...). Default to None (any scheme is valid).\n    :type allowed_schemes: Optional[List[str]]\n    :return: True if url, false otherwise\n    "
    bool_0 = module_0.is_number(str_0)
    bool_1 = module_0.is_pangram(bool_0)

def test_case_24():
    str_0 = 'gY\\Z'
    bool_0 = True
    bool_1 = module_0.is_isbn_10(str_0)
    bool_2 = module_0.is_isogram(bool_0)
    bool_3 = module_0.is_email(str_0)
    i_s_b_n_checker_0 = module_0.__ISBNChecker(str_0, bool_0)
    bool_4 = module_0.is_decimal(str_0)
    bool_5 = i_s_b_n_checker_0.is_isbn_10()

def test_case_25():
    str_0 = '|\x0b\x0b'
    bool_0 = module_0.is_slug(str_0)

def test_case_26():
    str_0 = 'k@moi\ncom'
    bool_0 = module_0.is_email(str_0)
    str_1 = '({?<=")[^"]+(?=")|(?<=-()[^)]+(?=\\@))'
    bool_1 = module_0.is_json(str_0)
    bool_2 = module_0.is_email(str_1)
    bool_3 = module_0.is_email(str_0)
    bool_4 = module_0.is_ip_v4(str_0)
    str_2 = 'JUAQ'
    bool_5 = module_0.is_slug(bool_2, str_2)

def test_case_27():
    str_0 = 'l'
    int_0 = module_0.words_count(str_0)

def test_case_28():
    str_0 = '$# gim5$5\tDiGJ?sUZ1v'
    bool_0 = module_0.is_isbn_10(str_0)

def test_case_29():
    str_0 = '<'
    bool_0 = module_0.is_isbn_13(str_0)
    str_1 = '\x0czN&<(Gh>{O4,\r6UU56'
    bool_1 = module_0.is_credit_card(str_1)

def test_case_30():
    int_0 = 297
    bool_0 = module_0.is_json(int_0)
    bool_1 = module_0.is_camel_case(int_0)
    bool_2 = module_0.is_ip(int_0)
    bool_3 = module_0.is_full_string(bool_1)
    str_0 = "\n    Checks if a string is a valid ip (either v4 or v6).\n\n    *Examples:*\n\n    >>> is_ip('255.200.100.75') # returns true\n    >>> is_ip('2001:db8:85a3:0000:0000:8a2e:370:7334') # returns true\n    >>> is_ip('1.2.3') # returns false\n\n    :param input_string: String to check.\n    :type input_string: str\n    :return: True if an ip, false otherwise.\n    "
    str_1 = '9Tx EGdR\'-L]7Bw":'
    bool_4 = module_0.is_number(str_1)
    bool_5 = module_0.is_number(str_0)

def test_case_31():
    str_0 = 'a@a.com'
    bool_0 = module_0.is_json(str_0)
    str_1 = '{nope}'
    bool_1 = module_0.is_json(str_1)

def test_case_32():
    str_0 = "9PfKP<HFH~G*+20\x0c9'l"
    bool_0 = module_0.is_url(str_0)
    bool_1 = module_0.is_credit_card(bool_0, str_0)
    bool_2 = module_0.is_isogram(str_0)
    bool_3 = module_0.is_isogram(bool_0)
    bool_4 = module_0.is_palindrome(str_0)
    str_1 = '4u+\tR![<&[Ed\r7'
    bool_5 = module_0.is_decimal(str_1)
    bool_6 = module_0.is_uuid(bool_3)
    bytes_0 = b'\x1e\x8b\x87\xb2y\xce9\xbe@'
    bool_7 = module_0.is_pangram(bytes_0)

def test_case_33():
    str_0 = '3836221195'
    i_s_b_n_checker_0 = module_0.__ISBNChecker(str_0)
    bool_0 = module_0.is_email(str_0)

def test_case_34():
    str_0 = '{"name": "Peter"}'
    bool_0 = module_0.is_json(str_0)
    str_1 = '[1, 2, 3]'
    str_2 = '{nope}'
    bool_1 = module_0.is_palindrome(str_1, bool_0)
    bool_2 = module_0.is_json(str_2)

def test_case_35():
    str_0 = '0'
    bool_0 = module_0.is_integer(str_0)
    str_1 = 'e0Xj[fl}XQq1q40ho6S]'
    bool_1 = module_0.is_isbn_10(str_1)
    str_2 = '$bV3'
    bool_2 = False
    i_s_b_n_checker_0 = module_0.__ISBNChecker(str_2)
    str_3 = 'IK0$gEK}wlb`E'
    i_s_b_n_checker_1 = module_0.__ISBNChecker(str_3, bool_2)
    bool_3 = i_s_b_n_checker_1.is_isbn_13()
    bool_4 = module_0.is_pangram(str_0)
    bool_5 = module_0.is_url(str_2)
    bool_6 = i_s_b_n_checker_1.is_isbn_10()
    bool_7 = i_s_b_n_checker_0.is_isbn_10()
    bool_8 = module_0.is_pangram(bool_1)

def test_case_36():
    str_0 = '978-323-53'
    bool_0 = module_0.is_isbn(str_0)
    str_1 = '1593275846'
    bool_1 = module_0.is_decimal(str_1)
    bool_2 = module_0.is_isbn(str_1)
    str_2 = 'hUEvlYr,^IKn|'
    bool_3 = module_0.is_isbn(str_2)
    str_3 = '978 1593275844'
    bool_4 = module_0.is_slug(str_0)
    bool_5 = module_0.is_isbn(str_3)
    bool_6 = False
    bool_7 = module_0.is_isbn(str_2, bool_6)

def test_case_37():
    str_0 = '{@gmRr2'
    str_1 = 'af{\x0cto'
    str_2 = 'CD*|\r.B\x0cvF'
    bool_0 = module_0.is_isbn_13(str_2)
    float_0 = -3416.491
    bool_1 = True
    bool_2 = module_0.is_uuid(float_0, bool_1)
    bool_3 = module_0.is_number(str_1)
    bool_4 = module_0.is_number(str_0)
    bool_5 = module_0.is_ip(bool_1)
    int_0 = 340
    bool_6 = module_0.is_snake_case(int_0)
    str_3 = '=hM<iE*_`(fOJ[?tS*$'
    bool_7 = module_0.is_isogram(bool_3)
    bool_8 = module_0.is_integer(str_3)

def test_case_38():
    str_0 = 'LOL'
    bool_0 = module_0.is_palindrome(str_0)
    str_1 = 'Lol'
    str_2 = '9780312498580'
    bool_1 = module_0.is_isbn(str_1)
    bool_2 = module_0.is_isbn(str_2)
    str_3 = ']O\nUs\n`7nTG+n2`Ns\x0cJn'
    bool_3 = module_0.is_isbn(str_3)

def test_case_39():
    str_0 = 'my.email@the-provider.com'
    bool_0 = module_0.is_email(str_0)
    str_1 = '@gmail.com'
    bool_1 = module_0.is_email(str_1)
    str_2 = 'my.email@'
    bool_2 = module_0.is_email(str_2)
    str_3 = '.my.email@the-provider.com'
    bool_3 = module_0.is_email(str_3)
    str_4 = '"my.email"@the-provider.com'
    bool_4 = module_0.is_email(str_4)
    str_5 = 'my.email@the-provider.com '
    bool_5 = module_0.is_email(str_5)
    str_6 = ' my.email@the-provider.com'
    bool_6 = module_0.is_email(str_6)
    str_7 = 'my email@the-provider.com'
    bool_7 = module_0.is_email(str_7)
    str_8 = 'my.email@the provider.com'
    bool_8 = module_0.is_email(str_8)
    str_9 = 'my.email@the.provider.com'
    bool_9 = module_0.is_email(str_9)

def test_case_40():
    str_0 = 'k@gmail.com'
    bool_0 = module_0.is_email(str_0)

def test_case_41():
    str_0 = '978-84-376-0494-7'
    bool_0 = module_0.is_isbn(str_0)
    bool_1 = module_0.is_isbn(str_0)
    str_1 = '978-0312498580'
    bool_2 = module_0.is_isbn(str_1)
    str_2 = '1506715214'
    bool_3 = module_0.is_isbn(str_2)

def test_case_42():
    str_0 = '3836221195'
    i_s_b_n_checker_0 = module_0.__ISBNChecker(str_0)
    bool_0 = i_s_b_n_checker_0.is_isbn_10()

def test_case_43():
    str_0 = '192.168.1.1'
    bool_0 = module_0.is_ip_v4(str_0)
    bool_1 = module_0.is_ip_v4(str_0)
    bool_2 = module_0.is_isbn(str_0, bool_1)

def test_case_44():
    str_0 = '255.200.100.75'
    bool_0 = module_0.is_full_string(str_0)
    bool_1 = module_0.is_ip_v4(str_0)
    str_1 = 'nope'
    bool_2 = module_0.is_ip_v4(str_1)
    bool_3 = module_0.is_json(bool_0)
    str_2 = '255.200.100.999'
    bool_4 = module_0.is_ip_v4(str_2)

def test_case_45():
    str_0 = 'abba'
    str_1 = 'abbA'
    bool_0 = module_0.is_palindrome(str_1)
    bool_1 = True
    bool_2 = module_0.is_palindrome(str_0, bool_1)
    str_2 = 'ab ba'
    bool_3 = module_0.is_palindrome(str_2, bool_1)
    str_3 = 'a'
    bool_4 = module_0.is_palindrome(str_3, bool_1, bool_1)
    str_4 = 'w8h:\t'
    bool_5 = module_0.is_palindrome(str_4)
    str_5 = 'a B[LBva'
    bool_6 = module_0.is_palindrome(str_5)
    bool_7 = module_0.is_palindrome(str_0, bool_1)
    bool_8 = module_0.is_palindrome(str_2, bool_1)

def test_case_46():
    str_0 = '255.200.100.75'
    bool_0 = module_0.is_ip(str_0)
    str_1 = '2001:db8:85a3:0000:0000:8a2e:370:7334'
    bool_1 = module_0.is_ip(str_1)
    bool_2 = module_0.is_ip(str_0)

def test_case_47():
    str_0 = 'k@gmail.co\r'
    bool_0 = module_0.is_email(str_0)
    str_1 = '((?<=")[^"]+(?=")|(?<=\\()[^)]+(?=\\)))'
    bool_1 = module_0.is_json(str_0)
    bool_2 = module_0.is_email(str_1)
    str_2 = 'a.b@gmail.com'
    bool_3 = module_0.is_email(str_2)
    str_3 = "\n    Checks if a given string is a slug (as created by `slugify()`).\n\n    *Examples:*\n\n    >>> is_slug('my-blog-post-title') # returns true\n    >>> is_slug('My blog post title') # returns false\n\n    :param input_string: String to check.\n    :type input_string: str\n    :param separator: Join sign used by the slug.\n    :type separator: str\n    :return: True if slug, false otherwise.\n    "
    bool_4 = module_0.is_ip_v4(str_0)
    str_4 = 'JUAQ'
    bool_5 = module_0.is_slug(bool_2, str_4)
    str_5 = 'abcd123@gmail.com'
    str_6 = 'EL`("x`I]C\x0c'
    bool_6 = module_0.is_isbn(str_6)
    str_7 = 'abcde12345@gmail.com'
    i_s_b_n_checker_0 = module_0.__ISBNChecker(str_7)
    bool_7 = module_0.is_email(str_3)
    bool_8 = module_0.is_email(bool_0)
    bool_9 = module_0.is_url(str_5)
    bool_10 = False
    bool_11 = module_0.is_isbn_10(str_6, bool_10)
    bool_12 = module_0.is_credit_card(bool_8)
    str_8 = 'Z;r059SuZl92vUf{y\rt'
    str_9 = "'5>*|Vs-fU"
    i_s_b_n_checker_1 = module_0.__ISBNChecker(str_9)
    i_s_b_n_checker_2 = module_0.__ISBNChecker(str_2)
    bool_13 = i_s_b_n_checker_2.is_isbn_13()
    i_s_b_n_checker_3 = module_0.__ISBNChecker(str_8)
    bool_14 = module_0.is_ip(bool_8)
    bool_15 = module_0.is_ip(str_9)
    bool_16 = module_0.is_credit_card(str_6)

def test_case_48():
    str_0 = 'my.email@the-provider.com'
    bool_0 = module_0.is_email(str_0)
    str_1 = '@gmail.com'
    bool_1 = module_0.is_email(str_1)
    str_2 = 'my.email.@the-provider.com'
    bool_2 = module_0.is_email(str_2)
    str_3 = 'my.email@the-provider.com:'
    bool_3 = module_0.is_email(str_3)
    str_4 = 'my.email@the-provider.com:8080'
    bool_4 = module_0.is_email(str_4)
    str_5 = 'my.email@the-provider.com?hi=hi'
    bool_5 = module_0.is_email(str_5)
    str_6 = 'my.email@the-provider.com.com'
    bool_6 = module_0.is_email(str_6)

def test_case_49():
    str_0 = '5412345678901234'
    bool_0 = module_0.is_credit_card(str_0)

def test_case_50():
    str_0 = '255.200.100.75'
    bool_0 = module_0.is_ip_v4(str_0)
    bool_1 = module_0.is_url(bool_0)
    str_1 = 'http://mysite.com'
    bool_2 = module_0.is_url(bool_1)
    str_2 = 'https://mysite.com'
    bool_3 = module_0.is_url(str_1)
    str_3 = 'hppts://mysite.com'
    bool_4 = module_0.is_url(str_0)
    str_4 = 'http://www.mysite.com'
    bytes_0 = None
    list_0 = [str_3]
    bool_5 = module_0.is_url(bytes_0, list_0)
    bool_6 = module_0.is_url(str_2)
    str_5 = 'hppts://www.mysite.com'
    bool_7 = module_0.is_url(str_1)
    list_1 = [str_0, str_4]
    bool_8 = module_0.is_url(str_5, list_1)
    bool_9 = module_0.is_url(bytes_0)

def test_case_51():
    str_0 = '378282246310005'
    str_1 = 'AMERICAN_EXPRESS'
    bool_0 = module_0.is_credit_card(str_0, str_1)
    str_2 = 'MASTERCARD'
    bool_1 = module_0.is_credit_card(str_0, str_2)
    bool_2 = module_0.is_ip_v4(bool_1)
    bool_3 = module_0.is_ip_v4(bool_1)

def test_case_52():
    str_0 = 'myemail@the-provider.com'
    bool_0 = module_0.is_email(str_0)
    str_1 = 'my.email+foo@the-provider.com'
    bool_1 = module_0.is_email(str_1)
    str_2 = 'myemail@abc.example.com'
    bool_2 = module_0.is_email(str_2)
    str_3 = 'myemail@example.com'
    bool_3 = module_0.is_email(str_3)
    str_4 = 'help@example.co.in'
    bool_4 = module_0.is_email(str_4)
    str_5 = 'help@example.cloud'
    bool_5 = module_0.is_email(str_5)
    str_6 = 'myemail+foo@gmail.com'
    bool_6 = module_0.is_email(str_6)
    str_7 = 'hello@.com'
    bool_7 = module_0.is_email(str_7)
    str_8 = '.hello@gmail.com'
    bool_8 = module_0.is_email(str_8)
    str_9 = 'my..email@gmail.com'
    bool_9 = module_0.is_email(str_9)

def test_case_53():
    str_0 = 'w@w.com'
    bool_0 = module_0.is_email(str_0)
    str_1 = '"\\ w"@w.com'
    bool_1 = module_0.is_email(str_1)
    str_2 = 'w\\ w@w.com'
    bool_2 = module_0.is_email(str_2)
    str_3 = 'w\\@w@w.com'
    bool_3 = module_0.is_email(str_3)
    bool_4 = module_0.is_email(str_0)
    str_4 = 'w@w..com'
    bool_5 = module_0.is_email(str_4)
    str_5 = 'w@w.com.'
    bool_6 = module_0.is_email(str_5)
    str_6 = 'w@w.com\\'
    bool_7 = module_0.is_email(str_6)
    str_7 = '.w@w.com'
    bool_8 = module_0.is_email(str_7)
    str_8 = 'w@w.comcom'
    bool_9 = module_0.is_email(str_8)
    bool_10 = module_0.is_email(str_4)
    str_9 = 'w@w.com...'
    bool_11 = module_0.is_email(str_9)

def test_case_54():
    str_0 = 'info@example.com'
    bool_0 = module_0.is_email(str_0)
    str_1 = 'my.example@gmail.com'
    bool_1 = module_0.is_email(str_1)
    str_2 = 'me@example.com'
    bool_2 = module_0.is_email(str_2)
    str_3 = '"me@example.com"'
    bool_3 = module_0.is_email(str_3)
    var_0 = None
    bool_4 = module_0.is_email(var_0)
    str_4 = 'example@gmail'
    bool_5 = module_0.is_email(str_4)
    str_5 = ''
    bool_6 = module_0.is_email(str_5)
    str_6 = ' '
    bool_7 = module_0.is_email(str_6)
    str_7 = 'info@example.com '
    bool_8 = module_0.is_email(str_7)
    str_8 = 'info@example .com'
    bool_9 = module_0.is_email(str_8)
    str_9 = 'info @example.com'
    bool_10 = module_0.is_email(str_9)
    bool_11 = module_0.is_email(str_8)
    str_10 = '."me@example.com"'
    bool_12 = module_0.is_email(str_10)