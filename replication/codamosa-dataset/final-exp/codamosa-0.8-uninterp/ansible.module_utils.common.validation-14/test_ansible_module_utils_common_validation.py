# Automatically generated by Pynguin.
import ansible.module_utils.common.validation as module_0

def test_case_0():
    pass

def test_case_1():
    bytes_0 = b'e\xc3\xc0'
    bytes_1 = b'\xf4D^'
    var_0 = module_0.check_mutually_exclusive(bytes_0, bytes_1)

def test_case_2():
    bytes_0 = b"\xc9\x91\x17 E\xe8'k\xbd\xb4BOPy\xc7@\xbe"
    var_0 = module_0.safe_eval(bytes_0, bytes_0)

def test_case_3():
    str_0 = '5=&`'
    var_0 = module_0.check_type_dict(str_0)
    bytes_0 = None
    dict_0 = {}
    var_1 = module_0.check_mutually_exclusive(bytes_0, dict_0)

def test_case_4():
    str_0 = 'D#O]'
    dict_0 = {}
    var_0 = module_0.check_required_together(str_0, dict_0)

def test_case_5():
    str_0 = 'yi9\nkX4*'
    dict_0 = {str_0: str_0}
    var_0 = module_0.check_required_by(dict_0, dict_0)

def test_case_6():
    int_0 = 2
    var_0 = module_0.check_missing_parameters(int_0)

def test_case_7():
    list_0 = []
    var_0 = module_0.check_missing_parameters(list_0, list_0)

def test_case_8():
    bool_0 = None
    var_0 = module_0.check_type_path(bool_0)
    str_0 = '5=&`'
    var_1 = module_0.check_type_dict(str_0)

def test_case_9():
    bool_0 = False
    var_0 = module_0.check_type_list(bool_0)

def test_case_10():
    str_0 = '5=&`'
    var_0 = module_0.check_type_dict(str_0)

def test_case_11():
    bool_0 = True
    var_0 = module_0.check_type_bool(bool_0)

def test_case_12():
    str_0 = 'irT&'
    var_0 = module_0.check_type_raw(str_0)

def test_case_13():
    str_0 = ''
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.check_required_if(str_0, dict_0)
    var_1 = module_0.check_type_jsonarg(str_0)
    str_1 = '>=&`'
    var_2 = module_0.check_type_dict(str_1)

def test_case_14():
    float_0 = 1811.514
    var_0 = module_0.check_type_list(float_0)

def test_case_15():
    str_0 = '>=&`'
    var_0 = module_0.safe_eval(str_0)

def test_case_16():
    int_0 = 2012
    var_0 = module_0.check_type_bytes(int_0)

def test_case_17():
    tuple_0 = ()
    float_0 = None
    set_0 = {tuple_0, float_0, tuple_0, tuple_0}
    var_0 = module_0.check_mutually_exclusive(set_0, set_0)

def test_case_18():
    tuple_0 = None
    var_0 = module_0.check_required_by(tuple_0, tuple_0)

def test_case_19():
    float_0 = -155.771
    bytes_0 = b'\xfe\x960\xb6F\x82\xe6\xfa\xa5l\xf3\x8e\xef\x0f\xaa'
    var_0 = module_0.safe_eval(float_0, bytes_0, float_0)

def test_case_20():
    str_0 = ''
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.check_required_if(str_0, dict_0)

def test_case_21():
    str_0 = "##V'#{\r0F"
    var_0 = module_0.check_type_list(str_0)

def test_case_22():
    dict_0 = {}
    int_0 = 1318
    var_0 = module_0.check_required_arguments(dict_0, int_0)
    bool_0 = None
    var_1 = module_0.check_type_raw(bool_0)

def test_case_23():
    dict_0 = {}
    str_0 = ''
    tuple_0 = (str_0,)
    var_0 = module_0.check_required_by(dict_0, tuple_0)
    str_1 = 'managed'
    var_1 = module_0.check_type_jsonarg(str_1)

def test_case_24():
    dict_0 = {}
    var_0 = module_0.check_type_dict(dict_0)

def test_case_25():
    str_0 = '5'
    var_0 = module_0.safe_eval(str_0)

def test_case_26():
    str_0 = "{'one':1,'two':2,'three':3}"
    var_0 = module_0.check_type_dict(str_0)

def test_case_27():
    str_0 = '5=&'
    float_0 = -2232.8
    dict_0 = {str_0: float_0, str_0: str_0}
    var_0 = module_0.check_required_if(dict_0, dict_0, dict_0)
    var_1 = module_0.check_type_dict(dict_0)

def test_case_28():
    str_0 = 'key=value,key1=value1'
    var_0 = module_0.check_type_dict(str_0)
    str_1 = 'key="value=value1"'
    var_1 = module_0.check_type_dict(str_1)

def test_case_29():
    str_0 = 'Unit tests for :func:`_module_utils.basic.check_required_if`'
    str_1 = 'state'
    str_2 = (str_1,)
    bool_0 = True
    var_0 = [str_1, str_0, str_2, bool_0]
    var_1 = [var_0]
    str_3 = '/tmp/file'
    str_4 = {str_1: str_1, str_2: str_3}
    var_2 = module_0.check_required_if(var_1, str_4)
    str_5 = (str_4,)
    var_3 = [str_1, str_0, str_5, bool_0]
    var_4 = [var_3]
    str_6 = {str_1: str_5}
    var_5 = module_0.check_required_if(var_4, str_6)

def test_case_30():
    str_0 = 'foo.ar()'
    var_0 = module_0.safe_eval(str_0)