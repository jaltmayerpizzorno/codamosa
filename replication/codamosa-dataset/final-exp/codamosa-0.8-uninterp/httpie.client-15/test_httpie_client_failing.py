# Automatically generated by Pynguin.
import argparse as module_0
import httpie.client as module_1
import httpie.cli.dicts as module_2

def test_case_0():
    try:
        namespace_0 = module_0.Namespace()
        request_headers_dict_0 = module_1.make_default_headers(namespace_0)
    except BaseException:
        pass

def test_case_1():
    try:
        namespace_0 = None
        dict_0 = module_1.make_send_kwargs(namespace_0)
    except BaseException:
        pass

def test_case_2():
    try:
        namespace_0 = module_0.Namespace()
        dict_0 = module_1.make_send_kwargs_mergeable_from_env(namespace_0)
    except BaseException:
        pass

def test_case_3():
    try:
        namespace_0 = module_0.Namespace()
        dict_0 = module_1.make_request_kwargs(namespace_0)
    except BaseException:
        pass

def test_case_4():
    try:
        namespace_0 = module_0.Namespace()
        dict_0 = {}
        tuple_0 = (dict_0,)
        var_0 = namespace_0.__eq__(tuple_0)
        str_0 = '8Qq=^}`z#i\t,8EC'
        str_1 = '@Y/Le,7v2[X"[\n2'
        str_2 = module_1.ensure_path_as_is(str_0, str_1)
        dict_1 = module_1.make_send_kwargs(namespace_0)
    except BaseException:
        pass

def test_case_5():
    try:
        bool_0 = True
        session_0 = module_1.build_requests_session(bool_0, bool_0)
    except BaseException:
        pass

def test_case_6():
    try:
        namespace_0 = module_0.Namespace()
        path_0 = None
        iterable_0 = module_1.collect_messages(namespace_0, path_0)
        dict_0 = {}
        request_headers_dict_0 = module_2.RequestHeadersDict(iterable_0, **dict_0)
    except BaseException:
        pass