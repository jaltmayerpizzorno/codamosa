# Automatically generated by Pynguin.
import pymonet.monad_try as module_0

def test_case_0():
    str_0 = '-- Case when monad has successfully value'
    var_0 = print(str_0)

def test_case_1():
    bool_0 = False
    try_0 = module_0.Try(bool_0, bool_0)

def test_case_2():
    set_0 = set()
    int_0 = 117
    set_1 = {int_0, int_0, int_0}
    bool_0 = True
    try_0 = module_0.Try(set_1, bool_0)
    try_1 = module_0.Try(try_0, bool_0)
    bool_1 = try_1.__eq__(set_0)

def test_case_3():
    float_0 = 3964.0
    bool_0 = True
    try_0 = module_0.Try(float_0, bool_0)
    str_0 = try_0.__str__()

def test_case_4():
    bool_0 = False
    bool_1 = True
    bool_2 = False
    try_0 = module_0.Try(bool_1, bool_2)
    var_0 = try_0.map(bool_0)

def test_case_5():
    bool_0 = False
    try_0 = module_0.Try(bool_0, bool_0)
    var_0 = try_0.get()

def test_case_6():
    str_0 = '7kvOSda4t!MlsFw1'
    float_0 = -792.090447
    list_0 = [float_0]
    bool_0 = False
    try_0 = module_0.Try(list_0, bool_0)
    try_1 = module_0.Try(list_0, bool_0)
    var_0 = try_1.filter(str_0)
    float_1 = 2825.575115
    bool_1 = False
    var_1 = try_1.filter(list_0)
    try_2 = module_0.Try(float_1, bool_1)
    int_0 = -1282
    dict_0 = {}
    bool_2 = True
    try_3 = module_0.Try(dict_0, bool_2)
    var_2 = try_3.get_or_else(int_0)