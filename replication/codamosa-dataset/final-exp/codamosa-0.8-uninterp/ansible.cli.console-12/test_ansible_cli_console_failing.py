# Automatically generated by Pynguin.
import ansible.cli.console as module_0

def test_case_0():
    try:
        str_0 = 'YTy5`3:{PI`'
        console_c_l_i_0 = module_0.ConsoleCLI(str_0)
        console_c_l_i_1 = module_0.ConsoleCLI(console_c_l_i_0)
        var_0 = console_c_l_i_1.run()
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '\x0b!`A\n^)\tLhUayzqX'
        bool_0 = True
        console_c_l_i_0 = module_0.ConsoleCLI(bool_0)
        var_0 = console_c_l_i_0.default(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = ''
        int_0 = 615
        console_c_l_i_0 = module_0.ConsoleCLI(int_0)
        var_0 = console_c_l_i_0.do_shell(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        float_0 = -129.0
        console_c_l_i_0 = module_0.ConsoleCLI(float_0)
        bytes_0 = b'R\xb3\x93\xe66B\xa8\xfc\xcc\xb0\x8c\xf4K'
        console_c_l_i_1 = module_0.ConsoleCLI(bytes_0)
        bool_0 = None
        var_0 = console_c_l_i_1.do_forks(float_0)
        console_c_l_i_2 = module_0.ConsoleCLI(bool_0)
    except BaseException:
        pass

def test_case_4():
    try:
        complex_0 = None
        str_0 = '"%s.ps1"'
        set_0 = {str_0}
        console_c_l_i_0 = module_0.ConsoleCLI(set_0)
        var_0 = console_c_l_i_0.do_forks(complex_0)
        str_1 = 'centos'
        var_1 = console_c_l_i_0.do_list(str_1)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'NO MORE HOSTS LEFT'
        str_1 = '{r jAol,AO'
        console_c_l_i_0 = module_0.ConsoleCLI(str_1)
        var_0 = console_c_l_i_0.do_cd(str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        bytes_0 = b'\xbe\x87N\xdfh\x80?\xcf\xef\x04\xb8\x89\x8f\xf0\x86\xeb\xe2\x967'
        bool_0 = True
        set_0 = {bool_0, bool_0, bool_0}
        console_c_l_i_0 = module_0.ConsoleCLI(set_0)
        var_0 = console_c_l_i_0.do_list(bytes_0)
    except BaseException:
        pass

def test_case_7():
    try:
        int_0 = -1120
        bool_0 = False
        dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
        console_c_l_i_0 = module_0.ConsoleCLI(dict_0)
        var_0 = console_c_l_i_0.do_remote_user(int_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = '>'
        list_0 = [str_0]
        console_c_l_i_0 = module_0.ConsoleCLI(list_0)
        var_0 = console_c_l_i_0.run()
        console_c_l_i_1 = module_0.ConsoleCLI(str_0)
        bool_0 = False
        var_1 = console_c_l_i_0.do_shell(str_0)
        var_2 = console_c_l_i_1.do_become_user(bool_0)
    except BaseException:
        pass

def test_case_9():
    try:
        tuple_0 = ()
        str_0 = '#U\x0cl'
        console_c_l_i_0 = module_0.ConsoleCLI(str_0)
        var_0 = console_c_l_i_0.do_become_method(tuple_0)
        float_0 = 432.0
        console_c_l_i_1 = module_0.ConsoleCLI(float_0)
        bool_0 = True
        var_1 = console_c_l_i_0.get_names()
        set_0 = {bool_0}
        var_2 = console_c_l_i_1.do_exit(set_0)
        bytes_0 = None
        var_3 = console_c_l_i_0.do_verbosity(bytes_0)
        int_0 = -2423
        console_c_l_i_2 = module_0.ConsoleCLI(int_0)
        dict_0 = {}
        var_4 = console_c_l_i_1.default(dict_0)
    except BaseException:
        pass

def test_case_10():
    try:
        int_0 = 1390
        console_c_l_i_0 = module_0.ConsoleCLI(int_0)
        complex_0 = None
        var_0 = console_c_l_i_0.do_forks(complex_0)
        var_1 = console_c_l_i_0.do_become_method(console_c_l_i_0)
        str_0 = 'SW$mq,(\\\rY4\x0c0[kaM'
        console_c_l_i_1 = module_0.ConsoleCLI(str_0)
        var_2 = console_c_l_i_1.do_timeout(int_0)
        var_3 = console_c_l_i_0.default(str_0)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = "j{d'NR!u(T|=)&"
        int_0 = 1390
        bool_0 = True
        dict_0 = None
        bool_1 = True
        set_0 = {bool_0, dict_0, dict_0, bool_1}
        console_c_l_i_0 = module_0.ConsoleCLI(set_0)
        tuple_0 = (console_c_l_i_0, int_0, dict_0, str_0)
        console_c_l_i_1 = module_0.ConsoleCLI(tuple_0)
        var_0 = console_c_l_i_1.do_check(dict_0)
        console_c_l_i_2 = module_0.ConsoleCLI(int_0)
        var_1 = console_c_l_i_2.do_become_method(console_c_l_i_2)
        console_c_l_i_3 = module_0.ConsoleCLI(str_0)
        var_2 = console_c_l_i_3.do_verbosity(str_0)
        str_1 = 'SW$mq,(\\\rY4\x0c0[kaM'
        console_c_l_i_4 = module_0.ConsoleCLI(str_1)
        var_3 = console_c_l_i_4.list_modules()
        var_4 = console_c_l_i_2.default(str_0)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = 'Gh^<+9:\n\x0b3T3'
        console_c_l_i_0 = module_0.ConsoleCLI(str_0)
        int_0 = -3497
        var_0 = console_c_l_i_0.do_check(int_0)
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = '[DgguOAF|'
        str_1 = 'centos'
        console_c_l_i_0 = module_0.ConsoleCLI(str_1)
        var_0 = console_c_l_i_0.module_args(str_0)
    except BaseException:
        pass

def test_case_14():
    try:
        str_0 = '>8u'
        list_0 = [str_0]
        console_c_l_i_0 = module_0.ConsoleCLI(list_0)
        var_0 = console_c_l_i_0.run()
        var_1 = console_c_l_i_0.do_shell(str_0)
        int_0 = 352
        var_2 = console_c_l_i_0.do_forks(int_0)
        var_3 = console_c_l_i_0.list_modules()
        bytes_0 = b'\xdf\x12w~\xa0ar\xbc\xd8a'
        var_4 = console_c_l_i_0.completedefault(int_0, str_0, str_0, bytes_0)
        bool_0 = True
        str_1 = '8i"mwN5'
        var_5 = console_c_l_i_0.complete_cd(str_0, str_1, str_0, bool_0)
        var_6 = console_c_l_i_0.do_remote_user(console_c_l_i_0)
        console_c_l_i_1 = module_0.ConsoleCLI(str_1)
        str_2 = 't+-pZ'
        tuple_0 = (bool_0, str_2)
        var_7 = console_c_l_i_0.do_verbosity(tuple_0)
        complex_0 = None
        var_8 = console_c_l_i_0.helpdefault(complex_0)
        var_9 = console_c_l_i_0.do_list(str_0)
        var_10 = console_c_l_i_0.do_timeout(console_c_l_i_0)
        console_c_l_i_2 = module_0.ConsoleCLI(bytes_0)
    except BaseException:
        pass

def test_case_15():
    try:
        complex_0 = None
        str_0 = '"%s.ps1"'
        set_0 = {str_0}
        console_c_l_i_0 = module_0.ConsoleCLI(set_0)
        var_0 = console_c_l_i_0.do_forks(complex_0)
        float_0 = 0.1
        console_c_l_i_1 = module_0.ConsoleCLI(float_0)
        var_1 = console_c_l_i_1.do_become(console_c_l_i_0)
    except BaseException:
        pass

def test_case_16():
    try:
        str_0 = '>8'
        list_0 = [str_0]
        console_c_l_i_0 = module_0.ConsoleCLI(list_0)
        var_0 = console_c_l_i_0.run()
        console_c_l_i_1 = module_0.ConsoleCLI(str_0)
        bool_0 = False
        var_1 = console_c_l_i_1.do_remote_user(bool_0)
        var_2 = console_c_l_i_1.emptyline()
        str_1 = 'A7'
        bool_1 = True
        console_c_l_i_2 = module_0.ConsoleCLI(bool_1)
        var_3 = console_c_l_i_2.do_shell(str_1)
    except BaseException:
        pass

def test_case_17():
    try:
        float_0 = 0.001
        float_1 = -959.03
        console_c_l_i_0 = module_0.ConsoleCLI(float_1)
        var_0 = console_c_l_i_0.do_diff(float_0)
        str_0 = 'WR0e~:EZb@H'
        console_c_l_i_1 = module_0.ConsoleCLI(str_0)
        var_1 = console_c_l_i_1.do_verbosity(console_c_l_i_1)
        dict_0 = None
        tuple_0 = (dict_0,)
        var_2 = console_c_l_i_1.do_cd(tuple_0)
    except BaseException:
        pass

def test_case_18():
    try:
        str_0 = "j{d'NR!u(T|=)&"
        int_0 = 1390
        bool_0 = True
        dict_0 = None
        set_0 = {bool_0, dict_0, dict_0, bool_0}
        console_c_l_i_0 = module_0.ConsoleCLI(set_0)
        tuple_0 = (console_c_l_i_0, int_0, dict_0, str_0)
        bool_1 = False
        var_0 = console_c_l_i_0.do_diff(bool_1)
        console_c_l_i_1 = module_0.ConsoleCLI(tuple_0)
        var_1 = console_c_l_i_1.do_check(dict_0)
        complex_0 = None
        var_2 = console_c_l_i_0.do_forks(complex_0)
        var_3 = console_c_l_i_1.do_become_method(console_c_l_i_1)
        console_c_l_i_2 = module_0.ConsoleCLI(str_0)
        var_4 = console_c_l_i_2.do_verbosity(str_0)
        bytes_0 = b'\x17\x85O|4\xd5\xb3\xd4\xda\xab_\xc9'
        list_0 = [int_0, var_3, bytes_0, str_0]
        var_5 = console_c_l_i_2.complete_cd(bytes_0, str_0, list_0, str_0)
        list_1 = [str_0]
        str_1 = 'SW$mq,(\\\rY4\x0c0[kaM'
        console_c_l_i_3 = module_0.ConsoleCLI(str_1)
        var_6 = console_c_l_i_3.do_timeout(int_0)
        var_7 = console_c_l_i_3.cmdloop()
        var_8 = console_c_l_i_3.do_timeout(list_1)
        var_9 = console_c_l_i_3.default(str_0)
    except BaseException:
        pass

def test_case_19():
    try:
        float_0 = -2884.708441
        int_0 = 0
        dict_0 = {float_0: float_0, float_0: float_0}
        console_c_l_i_0 = module_0.ConsoleCLI(dict_0)
        var_0 = console_c_l_i_0.do_cd(int_0)
    except BaseException:
        pass

def test_case_20():
    try:
        str_0 = None
        dict_0 = {}
        list_0 = [dict_0]
        list_1 = [dict_0, list_0, list_0]
        console_c_l_i_0 = module_0.ConsoleCLI(list_1)
        var_0 = console_c_l_i_0.do_become(str_0)
        tuple_0 = ()
        int_0 = None
        list_2 = [tuple_0, tuple_0, tuple_0]
        console_c_l_i_1 = module_0.ConsoleCLI(list_2)
        var_1 = console_c_l_i_1.do_become_method(int_0)
        console_c_l_i_2 = module_0.ConsoleCLI(tuple_0)
    except BaseException:
        pass

def test_case_21():
    try:
        str_0 = "j{d'NR!u(T|=)&"
        int_0 = 1390
        console_c_l_i_0 = module_0.ConsoleCLI(int_0)
        var_0 = console_c_l_i_0.do_become_method(console_c_l_i_0)
        console_c_l_i_1 = module_0.ConsoleCLI(str_0)
        var_1 = console_c_l_i_1.do_verbosity(str_0)
        bytes_0 = b'\x17\x85O|4\xd5\xb3\xd4\xda\xab_\xc9'
        list_0 = [int_0, var_0, bytes_0, str_0]
        var_2 = console_c_l_i_0.complete_cd(bytes_0, str_0, list_0, str_0)
        var_3 = console_c_l_i_0.default(str_0)
    except BaseException:
        pass

def test_case_22():
    try:
        str_0 = "j{d'NR!u(T|=)&"
        int_0 = 1390
        dict_0 = None
        console_c_l_i_0 = module_0.ConsoleCLI(int_0)
        complex_0 = None
        var_0 = console_c_l_i_0.do_forks(complex_0)
        var_1 = console_c_l_i_0.do_become_method(console_c_l_i_0)
        console_c_l_i_1 = module_0.ConsoleCLI(str_0)
        var_2 = console_c_l_i_1.do_verbosity(str_0)
        list_0 = [str_0]
        str_1 = 'SW$mq,(\\\rY4\x0c0[kaM'
        console_c_l_i_2 = module_0.ConsoleCLI(str_1)
        int_1 = -2354
        var_3 = console_c_l_i_2.do_timeout(int_1)
        console_c_l_i_3 = module_0.ConsoleCLI(list_0)
        console_c_l_i_4 = module_0.ConsoleCLI(dict_0)
    except BaseException:
        pass