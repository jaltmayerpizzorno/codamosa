# Automatically generated by Pynguin.
import cookiecutter.repository as module_0

def test_case_0():
    try:
        str_0 = '\\=Pz/`&wV'
        str_1 = 'gtmh'
        var_0 = module_0.determine_repo_dir(str_0, str_1, str_0, str_0, str_1, str_0, str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bool_0 = None
        var_0 = module_0.is_zip_file(bool_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '>e"'
        var_0 = module_0.repository_has_cookiecutter_json(str_0)
        str_1 = 'ypGS'
        var_1 = module_0.expand_abbreviations(str_1, str_1)
    except BaseException:
        pass

def test_case_3():
    try:
        float_0 = -3041.1
        dict_0 = None
        var_0 = module_0.expand_abbreviations(float_0, dict_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = '.v>ts~q.z@M'
        str_1 = 'master'
        bool_0 = False
        var_0 = module_0.determine_repo_dir(str_1, str_0, str_0, str_1, bool_0, bool_0, bool_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'git+https://github.com/audreyr/cookiecutter-pypackage.git'
        str_1 = 'gh'
        str_2 = 'https://github.com/{}.git'
        str_3 = {str_1: str_2}
        str_4 = '.'
        str_5 = 'develop'
        bool_0 = True
        str_6 = 'mock-password'
        str_7 = 'tests/test-template-repo/'
        var_0 = module_0.determine_repo_dir(str_0, str_3, str_4, str_5, bool_0, str_6, str_7)
    except BaseException:
        pass

def test_case_6():
    try:
        int_0 = -10
        bytes_0 = b'\xf2(VCmCz\x13'
        str_0 = 'wz3~<k^<'
        str_1 = 'nf.zip'
        str_2 = '&5{l#f7x&qeg\n"x1-u;^.zip'
        set_0 = {int_0, bytes_0}
        float_0 = 949.0
        set_1 = set()
        dict_0 = {str_2: str_0, bytes_0: str_0, str_0: float_0, float_0: set_1}
        var_0 = module_0.determine_repo_dir(str_1, str_2, int_0, set_0, float_0, dict_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'Test determine_repo_dir.'
        var_0 = {}
        str_1 = '/tmp'
        bool_0 = False
        var_1 = None
        var_2 = module_0.determine_repo_dir(str_1, var_0, str_1, str_0, bool_0, var_1, bool_0)
    except BaseException:
        pass