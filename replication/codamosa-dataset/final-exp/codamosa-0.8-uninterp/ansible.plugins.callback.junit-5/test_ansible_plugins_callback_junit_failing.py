# Automatically generated by Pynguin.
import ansible.plugins.callback.junit as module_0

def test_case_0():
    try:
        str_0 = "\x0bq$vmE\r@mO'9\x0b1V$8_"
        bytes_0 = b'\xc2\xe6\xc1\xe1O\xa4'
        int_0 = -675
        host_data_0 = module_0.HostData(str_0, bytes_0, int_0, str_0)
        float_0 = None
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_task_start(host_data_0, float_0)
    except BaseException:
        pass

def test_case_1():
    try:
        float_0 = -1155.6811
        set_0 = {float_0, float_0, float_0}
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_cleanup_task_start(set_0)
    except BaseException:
        pass

def test_case_2():
    try:
        dict_0 = {}
        float_0 = 1277.3604
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_on_failed(dict_0, float_0)
    except BaseException:
        pass

def test_case_3():
    try:
        callback_module_0 = module_0.CallbackModule()
        bool_0 = True
        var_0 = callback_module_0.v2_playbook_on_start(bool_0)
    except BaseException:
        pass

def test_case_4():
    try:
        callback_module_0 = module_0.CallbackModule()
        dict_0 = {}
        dict_1 = {callback_module_0: dict_0}
        callback_module_1 = module_0.CallbackModule()
        host_data_0 = module_0.HostData(callback_module_0, callback_module_0, dict_1, callback_module_1)
        str_0 = 'true'
        callback_module_2 = module_0.CallbackModule()
        float_0 = 3806.642668
        list_0 = []
        host_data_1 = module_0.HostData(str_0, callback_module_2, float_0, list_0)
        int_0 = -400
        task_data_0 = module_0.TaskData(host_data_1, float_0, host_data_1, int_0, callback_module_2)
        var_0 = task_data_0.add_host(host_data_0)
        var_1 = callback_module_1.v2_runner_on_no_hosts(str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = ''
        callback_module_0 = module_0.CallbackModule()
        callback_module_1 = module_0.CallbackModule()
        var_0 = callback_module_1.v2_playbook_on_task_start(str_0, callback_module_0)
    except BaseException:
        pass

def test_case_6():
    try:
        bytes_0 = b'\x06\xba\x80\xe9\xa3\x96\xe5\xd1\xf1\x00i1'
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_stats(bytes_0)
        int_0 = -1285
        bool_0 = True
        tuple_0 = (callback_module_0, int_0, bool_0)
        var_1 = callback_module_0.v2_playbook_on_handler_task_start(tuple_0)
    except BaseException:
        pass

def test_case_7():
    try:
        callback_module_0 = module_0.CallbackModule()
        bool_0 = False
        var_0 = callback_module_0.v2_playbook_on_stats(bool_0)
        float_0 = -274.883998
        var_1 = callback_module_0.v2_runner_on_failed(float_0)
    except BaseException:
        pass

def test_case_8():
    try:
        bool_0 = False
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_on_ok(bool_0)
    except BaseException:
        pass

def test_case_9():
    try:
        callback_module_0 = module_0.CallbackModule()
        list_0 = [callback_module_0, callback_module_0, callback_module_0, callback_module_0]
        var_0 = callback_module_0.v2_playbook_on_stats(list_0)
        bool_0 = True
        set_0 = {bool_0, bool_0}
        callback_module_1 = module_0.CallbackModule()
        var_1 = callback_module_1.v2_runner_on_skipped(set_0)
    except BaseException:
        pass

def test_case_10():
    try:
        bool_0 = False
        float_0 = 467.507
        host_data_0 = None
        dict_0 = None
        callback_module_0 = module_0.CallbackModule()
        int_0 = None
        bytes_0 = b'+\x12\xed\x97f\xd3\nA\x18'
        complex_0 = None
        task_data_0 = module_0.TaskData(callback_module_0, bytes_0, bool_0, bytes_0, complex_0)
        float_1 = 1000.0
        tuple_0 = (task_data_0, float_1)
        task_data_1 = module_0.TaskData(dict_0, callback_module_0, host_data_0, int_0, tuple_0)
        task_data_2 = module_0.TaskData(host_data_0, task_data_1, host_data_0, callback_module_0, dict_0)
        str_0 = 'el'
        host_data_1 = module_0.HostData(float_0, task_data_2, callback_module_0, str_0)
        callback_module_1 = module_0.CallbackModule()
        var_0 = callback_module_1.v2_playbook_on_include(bool_0)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = 'uuid'
        str_1 = 'name'
        str_2 = 'path'
        str_3 = 'play'
        str_4 = 'action'
        task_data_0 = module_0.TaskData(str_0, str_1, str_2, str_3, str_4)
        str_5 = 'status'
        str_6 = 'result'
        host_data_0 = module_0.HostData(str_0, str_1, str_5, str_6)
        host_data_1 = module_0.HostData(str_0, str_1, str_5, str_6)
        var_0 = task_data_0.add_host(host_data_0)
        var_1 = task_data_0.add_host(host_data_1)
    except BaseException:
        pass

def test_case_12():
    try:
        int_0 = -1193
        bytes_0 = b"\xc1\x1c\xe0d'\x00\n\x82\xb2#"
        set_0 = set()
        callback_module_0 = module_0.CallbackModule()
        dict_0 = {}
        callback_module_1 = module_0.CallbackModule()
        host_data_0 = module_0.HostData(callback_module_0, callback_module_0, dict_0, callback_module_1)
        host_data_1 = module_0.HostData(int_0, bytes_0, set_0, host_data_0)
        str_0 = 'true'
        float_0 = 3830.9975262006756
        list_0 = []
        host_data_2 = module_0.HostData(str_0, callback_module_0, float_0, list_0)
        int_1 = -400
        task_data_0 = module_0.TaskData(host_data_2, float_0, host_data_2, int_1, callback_module_1)
        var_0 = task_data_0.add_host(host_data_1)
        list_1 = []
        callback_module_2 = module_0.CallbackModule()
        var_1 = callback_module_2.v2_playbook_on_stats(list_1)
        int_2 = 571
        var_2 = callback_module_2.v2_playbook_on_play_start(int_2)
    except BaseException:
        pass