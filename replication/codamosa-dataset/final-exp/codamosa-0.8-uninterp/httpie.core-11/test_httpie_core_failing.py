# Automatically generated by Pynguin.
import requests.models as module_0
import httpie.core as module_1
import argparse as module_2
import httpie.context as module_3

def test_case_0():
    try:
        namespace_0 = None
        prepared_request_0 = module_0.PreparedRequest()
        tuple_0 = module_1.get_output_options(namespace_0, prepared_request_0)
    except BaseException:
        pass

def test_case_1():
    try:
        namespace_0 = module_2.Namespace()
        environment_0 = module_3.Environment()
        exit_status_0 = module_1.program(namespace_0, environment_0)
    except BaseException:
        pass

def test_case_2():
    try:
        environment_0 = None
        var_0 = module_1.print_debug_info(environment_0)
    except BaseException:
        pass

def test_case_3():
    try:
        environment_0 = module_3.Environment()
        var_0 = module_1.print_debug_info(environment_0)
        namespace_0 = module_2.Namespace()
        exit_status_0 = module_1.program(namespace_0, environment_0)
    except BaseException:
        pass

def test_case_4():
    try:
        environment_0 = module_3.Environment()
        var_0 = module_1.print_debug_info(environment_0)
        bytes_0 = b'\xc4g?'
        list_0 = [bytes_0, bytes_0]
        str_0 = 'w];$aTYtWlXI&7VW\n"'
        list_1 = module_1.decode_raw_args(list_0, str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        environment_0 = module_3.Environment()
        str_0 = 'main.py'
        str_1 = '--debug'
        str_2 = [str_0, str_1]
        exit_status_0 = module_1.main(str_2, environment_0)
        str_3 = [str_0, str_0]
        exit_status_1 = module_1.main(str_3, environment_0)
        str_4 = 'get'
        str_5 = [str_0, str_2, str_4]
        exit_status_2 = module_1.main(str_5, environment_0)
    except BaseException:
        pass

def test_case_6():
    try:
        environment_0 = module_3.Environment()
        str_0 = '--debug'
        str_1 = [str_0, str_0]
        exit_status_0 = module_1.main(str_1, environment_0)
        str_2 = '--version'
        str_3 = [str_0, str_2]
        exit_status_1 = module_1.main(str_3, environment_0)
        str_4 = 'httpbin.org'
        str_5 = [str_2, str_4]
        var_0 = environment_0.__repr__()
        exit_status_2 = module_1.main(str_5, environment_0)
        str_6 = 'get'
        str_7 = 'me'
        str_8 = [str_5, str_4, str_6, str_7]
        str_9 = ''
        str_10 = [str_8, str_4, str_6, str_7, str_9]
        exit_status_3 = module_1.main(str_10, environment_0)
    except BaseException:
        pass

def test_case_7():
    try:
        environment_0 = module_3.Environment()
        str_0 = 'main.py'
        str_1 = [str_0, str_0]
        exit_status_0 = module_1.main(str_1, environment_0)
        exit_status_1 = module_1.main(str_0, environment_0)
        str_2 = 'get'
        str_3 = [str_0, str_1, str_2]
        exit_status_2 = module_1.main(str_3, environment_0)
    except BaseException:
        pass

def test_case_8():
    try:
        environment_0 = module_3.Environment()
        str_0 = 'main.py'
        str_1 = '--debug'
        var_0 = module_1.print_debug_info(environment_0)
        exit_status_0 = module_1.main(str_1, environment_0)
        str_2 = '/<HOST>/<SESSION_NAME>.json.\n\n    '
        str_3 = [str_0, str_2]
        var_1 = environment_0.__repr__()
        exit_status_1 = module_1.main(str_3, environment_0)
        str_4 = 'httpbin.org'
        str_5 = [str_0, str_4]
        exit_status_2 = module_1.main(str_5, environment_0)
        str_6 = 'get'
        str_7 = [str_0, str_4, str_6]
        exit_status_3 = module_1.main(str_7, environment_0)
        exit_status_4 = module_1.main(str_6, environment_0)
        namespace_0 = module_2.Namespace()
        environment_1 = module_3.Environment(exit_status_4)
        exit_status_5 = module_1.program(namespace_0, environment_1)
    except BaseException:
        pass

def test_case_9():
    try:
        environment_0 = module_3.Environment()
        str_0 = '--debug'
        str_1 = [str_0, str_0]
        exit_status_0 = module_1.main()
        exit_status_1 = module_1.main(str_1, environment_0)
        str_2 = '--version'
        str_3 = [str_0, str_2]
        exit_status_2 = module_1.main(str_3, environment_0)
        str_4 = [str_0, str_2]
        exit_status_3 = module_1.main(str_4, environment_0)
        str_5 = 'get'
        var_0 = environment_0.__repr__()
        str_6 = [str_2, str_0, str_5]
        exit_status_4 = module_1.main(str_6, environment_0)
    except BaseException:
        pass

def test_case_10():
    try:
        environment_0 = module_3.Environment()
        str_0 = 'https://www.example.com'
        str_1 = 'Accept:application/json'
        str_2 = '-p'
        str_3 = [str_0, str_1, str_2]
        exit_status_0 = module_1.program(str_3, environment_0)
    except BaseException:
        pass