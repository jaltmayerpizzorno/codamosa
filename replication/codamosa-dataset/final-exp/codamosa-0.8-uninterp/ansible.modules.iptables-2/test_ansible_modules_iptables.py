# Automatically generated by Pynguin.
import ansible.modules.iptables as module_0

def test_case_0():
    pass

def test_case_1():
    str_0 = '!f!b:vgNz'
    set_0 = None
    list_0 = [str_0]
    var_0 = module_0.append_tcp_flags(str_0, set_0, list_0)

def test_case_2():
    bool_0 = False
    float_0 = -1580.317
    str_0 = 'oj'
    int_0 = -74
    tuple_0 = (bool_0, float_0, str_0, int_0)
    str_1 = 'aE7Sw{O(>;'
    bytes_0 = None
    var_0 = module_0.append_match(bytes_0, bool_0, bytes_0)
    var_1 = module_0.append_match_flag(tuple_0, tuple_0, int_0, str_1)

def test_case_3():
    bytes_0 = b'E\x0e9\xd7\x91\x0f1'
    list_0 = [bytes_0]
    bool_0 = False
    var_0 = module_0.append_jump(list_0, bool_0, bool_0)

def test_case_4():
    var_0 = module_0.main()

def test_case_5():
    float_0 = -2765.0
    list_0 = [float_0, float_0]
    bool_0 = None
    int_0 = -749
    tuple_0 = (list_0, bool_0, int_0)
    str_0 = ''
    dict_0 = {}
    var_0 = module_0.append_match_flag(tuple_0, str_0, float_0, dict_0)

def test_case_6():
    bytes_0 = b'C\xa5\x84\xf7d'
    list_0 = []
    str_0 = '+(AO% 5v:-:8x? po8!'
    str_1 = "OpfC5oAX\x0bP'V~_"
    str_2 = 'tkaF )YH1TZg'
    var_0 = module_0.append_match_flag(list_0, str_1, str_1, str_2)
    str_3 = '+'
    str_4 = '`oQD,ta{'
    int_0 = None
    str_5 = 'I:c'
    float_0 = None
    tuple_0 = (str_5, float_0, bytes_0)
    var_1 = module_0.append_match_flag(str_4, int_0, tuple_0, bytes_0)
    var_2 = module_0.append_tcp_flags(str_0, list_0, str_3)
    bool_0 = True
    set_0 = {tuple_0}
    var_3 = module_0.append_param(list_0, list_0, bool_0, set_0)

def test_case_7():
    float_0 = -2765.0
    list_0 = [float_0, float_0]
    bool_0 = None
    bool_1 = True
    dict_0 = None
    set_0 = set()
    var_0 = module_0.append_param(bool_1, dict_0, dict_0, set_0)
    int_0 = -749
    tuple_0 = (list_0, bool_0, int_0)
    str_0 = ''
    dict_1 = {}
    var_1 = module_0.append_match_flag(tuple_0, str_0, float_0, dict_1)

def test_case_8():
    var_0 = []
    str_0 = 'SYN'
    str_1 = [str_0]
    var_1 = []
    var_2 = dict(flags=str_1, flags_set=var_1)
    str_2 = '--tcp-flags'
    var_3 = module_0.append_tcp_flags(var_0, var_2, str_2)
    var_4 = []
    str_3 = 'ACK'
    str_4 = [str_0, str_3]
    var_5 = dict(flags=var_4, flags_set=str_4)
    str_5 = [str_0, str_3]
    var_6 = []
    var_7 = dict(flags=str_5, flags_set=var_6)

def test_case_9():
    str_0 = 'iptables'
    str_1 = 'table'
    str_2 = 'chain'
    str_3 = 'rule_num'
    str_4 = '~rotocol'
    str_5 = 'jump'
    str_6 = 'ip_version'
    var_0 = None
    var_1 = {str_1: str_5, str_2: str_3, str_3: var_0, str_4: str_5, str_5: str_6, str_6: str_5}
    bool_0 = False
    var_2 = module_0.push_arguments(str_0, str_3, var_1, bool_0)

def test_case_10():
    str_0 = 'iptables'
    str_1 = '-I'
    str_2 = 'table'
    str_3 = 'chain'
    str_4 = 'rule_num'
    str_5 = '~rotocol'
    str_6 = 'jump'
    str_7 = 'ip_version'
    str_8 = 'nat'
    var_0 = None
    var_1 = {str_2: str_8, str_3: str_4, str_4: var_0, str_5: str_1, str_6: str_7, str_7: str_1}
    bool_0 = False
    var_2 = module_0.push_arguments(str_0, str_1, var_1, bool_0)

def test_case_11():
    str_0 = 'iptables'
    str_1 = '-I'
    str_2 = 'table'
    str_3 = 'chain'
    str_4 = 'rule_num'
    str_5 = 'protocol'
    str_6 = 'jump'
    str_7 = 'nat'
    str_8 = 'INPUT'
    var_0 = None
    str_9 = 'tcp'
    str_10 = 'ACCEPT'
    str_11 = 'ipv4'
    var_1 = {str_2: str_7, str_3: str_8, str_4: var_0, str_5: str_9, str_6: str_10, str_4: str_11}
    bool_0 = False
    var_2 = module_0.push_arguments(str_0, str_1, var_1, bool_0)

def test_case_12():
    var_0 = []
    str_0 = 'SYN'
    str_1 = '--tcp-flags'
    var_1 = module_0.append_tcp_flags(var_0, str_1, str_1)
    var_2 = []
    var_3 = []
    str_2 = '5{^c4(<'
    var_4 = dict(flags=var_3, flags_set=str_2)
    var_5 = module_0.append_tcp_flags(var_2, var_4, str_1)
    str_3 = [str_0, str_2]
    var_6 = []
    var_7 = dict(flags=str_3, flags_set=var_6)