# Automatically generated by Pynguin.
import youtube_dl.aes as module_0
import youtube_dl.utils as module_1

def test_case_0():
    try:
        float_0 = 137.898
        var_0 = module_0.shift_rows(float_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bool_0 = False
        var_0 = module_0.aes_cbc_decrypt(bool_0, bool_0, bool_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '4ca00ff4c898d61e1edbf1800618fb2828a226d160dad07883d04e008a7897ee2e4b7465d5290d0c0e6c6822236e1daafb94ffe0c5da05d9476be028ad7c1d81'
        var_0 = module_1.bytes_to_intlist(str_0)
        str_1 = '140b41b22a29beb4061bda66b6747e14'
        var_1 = module_1.bytes_to_intlist(str_1)
        var_2 = module_0.aes_cbc_decrypt(var_0, var_1, str_1)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = None
        var_0 = module_0.sub_bytes(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        float_0 = -5421.86
        var_0 = module_0.mix_columns_inv(float_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = '*'
        var_0 = module_0.inc(str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = '\\\t&~q=r~gN`av'
        var_0 = module_0.sub_bytes_inv(str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        bool_0 = False
        set_0 = {bool_0, bool_0, bool_0, bool_0}
        list_0 = [bool_0, set_0, set_0]
        var_0 = module_0.rijndael_mul(list_0, bool_0)
        bytes_0 = b"2'M"
        var_1 = module_0.key_expansion(bytes_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = '4ca00ff4c898d61e1edbf1800618fb2828a226d160dad07883d04e008a7897ee2e4b7465d5290d0c0e6c6822236e1daafb94ffe0c5da05d9476be028ad7c1d81'
        str_1 = '140b41b22a29beb4061bda66b6747e14'
        var_0 = module_1.bytes_to_intlist(str_1)
        str_2 = '4ca00ff4c898d61e1edbf1800618fb28'
        var_1 = module_1.bytes_to_intlist(str_2)
        var_2 = module_0.aes_cbc_decrypt(str_0, var_0, var_1)
    except BaseException:
        pass