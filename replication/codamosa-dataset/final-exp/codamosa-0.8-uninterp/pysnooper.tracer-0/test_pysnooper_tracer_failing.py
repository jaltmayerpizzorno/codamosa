# Automatically generated by Pynguin.
import pysnooper.tracer as module_0

def test_case_0():
    try:
        str_0 = 'depth'
        var_0 = module_0.get_path_and_source_from_frame(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        dict_0 = {}
        str_0 = '5$,Y%'
        var_0 = module_0.get_write_function(dict_0, str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        unavailable_source_0 = module_0.UnavailableSource()
        tracer_0 = module_0.Tracer(unavailable_source_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'Wq3|q=mdy8q4i!dDO'
        str_1 = '{indent}{newish_string}{name} = {value_repr}'
        str_2 = '-tr-&QBr;e'
        dict_0 = {str_1: str_0, str_2: str_2, str_0: str_2}
        file_writer_0 = module_0.FileWriter(str_0, dict_0)
        file_writer_1 = module_0.FileWriter(str_0, file_writer_0)
        tracer_0 = module_0.Tracer(file_writer_1, str_2)
    except BaseException:
        pass

def test_case_4():
    try:
        float_0 = -2118.24
        tuple_0 = None
        file_writer_0 = module_0.FileWriter(float_0, tuple_0)
        list_0 = [float_0, file_writer_0, tuple_0, tuple_0]
        var_0 = file_writer_0.write(list_0)
    except BaseException:
        pass

def test_case_5():
    try:
        bytes_0 = b'\xa83{\xd8d'
        list_0 = [bytes_0, bytes_0, bytes_0]
        list_1 = []
        str_0 = 'es@AeaJ'
        file_writer_0 = module_0.FileWriter(list_1, str_0)
        var_0 = file_writer_0.write(list_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = "LK'Y&eEw^86VH"
        tracer_0 = module_0.Tracer(str_0)
        var_0 = tracer_0.__call__(str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        tracer_0 = module_0.Tracer()
        complex_0 = None
        tracer_1 = module_0.Tracer(tracer_0, tracer_0, complex_0)
    except BaseException:
        pass

def test_case_8():
    try:
        float_0 = -2269.3577
        str_0 = "LK'Y&eE?wU^8H"
        str_1 = 'replace'
        str_2 = '>PcUVW\r?-\n&`b$'
        str_3 = '<ast>'
        bytes_0 = b'=.\x1e\x04\x86O\xfe\xe0?\xb2?\x85\x08ls\xf6p/\xb2\x95'
        list_0 = None
        tracer_0 = module_0.Tracer(str_0, str_1, str_2, str_3, float_0, bytes_0, list_0, str_1)
    except BaseException:
        pass

def test_case_9():
    try:
        tracer_0 = module_0.Tracer()
        dict_0 = {tracer_0: tracer_0}
        bool_0 = False
        var_0 = tracer_0.__exit__(dict_0, tracer_0, bool_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = "LK'Y&eEw^786VH"
        tracer_0 = module_0.Tracer(str_0)
        var_0 = tracer_0.__enter__()
        list_0 = []
        int_0 = 229
        var_1 = tracer_0.__exit__(str_0, list_0, int_0)
    except BaseException:
        pass