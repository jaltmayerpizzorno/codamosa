# Automatically generated by Pynguin.
import ansible.inventory.group as module_0
import builtins as module_1

def test_case_0():
    try:
        group_0 = module_0.Group()
        var_0 = group_0.__str__()
        var_1 = group_0.__getstate__()
        var_2 = group_0.get_name()
        var_3 = group_0.add_host(group_0)
    except BaseException:
        pass

def test_case_1():
    try:
        set_0 = set()
        group_0 = module_0.Group()
        var_0 = group_0.__setstate__(set_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b'\x83\x98'
        str_0 = 'vmaj.e\r\n"fICOYvb'
        group_0 = module_0.Group(str_0)
        var_0 = group_0.deserialize(bytes_0)
    except BaseException:
        pass

def test_case_3():
    try:
        int_0 = -449
        group_0 = module_0.Group()
        var_0 = group_0.add_child_group(int_0)
    except BaseException:
        pass

def test_case_4():
    try:
        group_0 = module_0.Group()
        var_0 = group_0.add_host(group_0)
    except BaseException:
        pass

def test_case_5():
    try:
        group_0 = module_0.Group()
        var_0 = group_0.__str__()
        var_1 = group_0.__getstate__()
        var_2 = group_0.get_vars()
        var_3 = group_0.get_name()
        var_4 = group_0.add_host(group_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = '}zG^'
        group_0 = module_0.Group()
        var_0 = group_0.set_priority(str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        group_0 = module_0.Group()
        var_0 = group_0.add_child_group(group_0)
    except BaseException:
        pass

def test_case_8():
    try:
        group_0 = module_0.Group()
        var_0 = group_0.__str__()
        group_1 = module_0.Group()
        var_1 = group_1.__str__()
        str_0 = '.V`\t$9{?(I\t(&\tD?o:R'
        group_2 = module_0.Group(str_0)
        var_2 = group_0.serialize()
        var_3 = group_2.get_ancestors()
        var_4 = group_0.__str__()
        int_0 = -502
        var_5 = group_1.get_hosts()
        list_0 = []
        var_6 = group_2.set_variable(int_0, list_0)
        group_3 = module_0.Group()
        var_7 = group_3.set_priority(int_0)
        var_8 = group_3.__repr__()
        var_9 = group_3.clear_hosts_cache()
        group_4 = module_0.Group()
        var_10 = group_4.get_hosts()
        var_11 = group_3.add_child_group(group_0)
        var_12 = group_0.add_child_group(group_3)
    except BaseException:
        pass

def test_case_9():
    try:
        group_0 = module_0.Group()
        var_0 = group_0.__str__()
        var_1 = group_0.clear_hosts_cache()
        group_1 = module_0.Group()
        str_0 = "b7'@"
        group_2 = module_0.Group(str_0)
        var_2 = group_0.serialize()
        var_3 = group_2.get_ancestors()
        var_4 = group_1.serialize()
        int_0 = -502
        list_0 = []
        var_5 = group_2.set_variable(int_0, list_0)
        dict_0 = {str_0: group_0, str_0: var_5}
        var_6 = group_0.__setstate__(dict_0)
        group_3 = module_0.Group()
        var_7 = group_3.set_priority(int_0)
        var_8 = group_3.__repr__()
        var_9 = group_3.clear_hosts_cache()
        var_10 = group_3.get_hosts()
        list_1 = [dict_0, var_3, group_3, var_8]
        var_11 = group_1.set_priority(dict_0)
        var_12 = group_3.add_child_group(group_0)
        var_13 = group_3.get_hosts()
        var_14 = group_3.__getstate__()
        var_15 = group_2.__getstate__()
        group_4 = module_0.Group()
        var_16 = group_4.set_priority(list_1)
        var_17 = group_1.add_child_group(group_0)
        var_18 = group_2.get_hosts()
        var_19 = group_4.__getstate__()
        var_20 = group_1.__getstate__()
        bool_0 = True
        var_21 = group_0.add_host(bool_0)
    except BaseException:
        pass

def test_case_10():
    try:
        group_0 = module_0.Group()
        var_0 = group_0.__str__()
        var_1 = group_0.clear_hosts_cache()
        var_2 = group_0.get_name()
        group_1 = module_0.Group()
        str_0 = "b7'@"
        group_2 = module_0.Group(str_0)
        var_3 = group_0.serialize()
        dict_0 = {}
        var_4 = group_2.__setstate__(dict_0)
        var_5 = group_2.get_ancestors()
        var_6 = group_0.__str__()
        var_7 = group_1.serialize()
        bool_0 = True
        str_1 = 'G>$Mb )$>+;8>Xb9'
        str_2 = '$|&zHvb#'
        dict_1 = {str_1: group_1, str_2: var_3, str_0: str_0, str_2: var_1}
        var_8 = group_2.set_variable(bool_0, dict_1)
        var_9 = group_1.get_hosts()
        str_3 = 'ansible_group_priority'
        var_10 = group_2.set_variable(str_3, dict_1)
    except BaseException:
        pass

def test_case_11():
    try:
        group_0 = module_0.Group()
        str_0 = "b7'@"
        group_1 = module_0.Group(str_0)
        var_0 = group_1.serialize()
        var_1 = group_1.get_ancestors()
        var_2 = group_1.__str__()
        var_3 = group_0.serialize()
        int_0 = -502
        var_4 = group_0.get_hosts()
        var_5 = group_1.add_child_group(group_0)
        list_0 = []
        var_6 = group_1.set_variable(int_0, list_0)
        dict_0 = {str_0: group_0, str_0: var_6}
        var_7 = group_0.set_priority(int_0)
        var_8 = group_0.get_name()
        var_9 = group_0.__repr__()
        var_10 = group_0.clear_hosts_cache()
        var_11 = group_1.get_hosts()
        var_12 = group_0.set_priority(dict_0)
        var_13 = group_1.add_child_group(group_0)
        var_14 = group_0.__getstate__()
        var_15 = group_1.__getstate__()
        var_16 = group_0.add_host(group_1)
    except BaseException:
        pass

def test_case_12():
    try:
        group_0 = module_0.Group()
        str_0 = "b7'@"
        group_1 = module_0.Group(str_0)
        var_0 = group_1.get_ancestors()
        var_1 = group_0.__str__()
        var_2 = group_0.get_hosts()
        var_3 = group_1.add_child_group(group_0)
        group_2 = module_0.Group()
        var_4 = group_2.__repr__()
        var_5 = group_2.add_child_group(group_1)
        var_6 = group_2.get_hosts()
        var_7 = group_0.__getstate__()
        var_8 = group_0.add_host(group_2)
    except BaseException:
        pass

def test_case_13():
    try:
        group_0 = module_0.Group()
        str_0 = "b7'@"
        group_1 = module_0.Group(str_0)
        var_0 = group_1.get_ancestors()
        var_1 = group_0.__str__()
        var_2 = group_0.serialize()
        int_0 = 83
        var_3 = group_1.remove_host(group_1)
        var_4 = group_0.remove_host(group_0)
        str_1 = '$|&zHvb#'
        var_5 = group_0.get_hosts()
        var_6 = group_1.add_child_group(group_0)
        list_0 = []
        var_7 = group_1.set_variable(int_0, list_0)
        dict_0 = module_1.dict(*list_0)
        var_8 = group_1.get_ancestors()
        bool_0 = False
        bytes_0 = b'\xab\x1f\xcc\xf52w\xc7\x9d\x01\x9a\xd9\x8d\xe2\xfb/\x9d\x9e\xc2'
        var_9 = group_1.get_ancestors()
        set_0 = {str_1}
        tuple_0 = (bool_0, bytes_0, set_0, bool_0)
        var_10 = group_1.set_variable(int_0, tuple_0)
        var_11 = group_0.get_vars()
        group_2 = module_0.Group()
        var_12 = group_2.get_name()
        var_13 = group_2.__repr__()
        var_14 = group_2.clear_hosts_cache()
        var_15 = group_1.get_name()
        var_16 = group_1.serialize()
        var_17 = group_0.set_priority(dict_0)
        var_18 = group_2.add_child_group(group_1)
        var_19 = group_2.get_hosts()
        var_20 = group_1.__str__()
        var_21 = group_2.__getstate__()
        var_22 = group_1.__getstate__()
        var_23 = group_0.add_host(group_2)
    except BaseException:
        pass