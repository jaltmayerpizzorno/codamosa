# Automatically generated by Pynguin.
import ansible.module_utils.facts.hardware.darwin as module_0

def test_case_0():
    try:
        int_0 = 656000
        str_0 = '8'
        str_1 = 'e\r]FG"x\\D(Yxl'
        darwin_hardware_0 = module_0.DarwinHardware(str_0, str_1)
        var_0 = darwin_hardware_0.populate(int_0)
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = -478
        dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
        darwin_hardware_0 = module_0.DarwinHardware(int_0)
        darwin_hardware_1 = module_0.DarwinHardware(dict_0, darwin_hardware_0)
        darwin_hardware_2 = module_0.DarwinHardware(darwin_hardware_1, dict_0)
        var_0 = darwin_hardware_2.get_system_profile()
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b'\x1e\xdc\xbe\xfa\x17h\xab\xf0\xeb\x93vi'
        darwin_hardware_0 = module_0.DarwinHardware(bytes_0)
        var_0 = darwin_hardware_0.get_mac_facts()
    except BaseException:
        pass

def test_case_3():
    try:
        list_0 = []
        darwin_hardware_0 = module_0.DarwinHardware(list_0)
        var_0 = darwin_hardware_0.get_cpu_facts()
    except BaseException:
        pass

def test_case_4():
    try:
        dict_0 = None
        str_0 = '"\':Tuw^5\ny:\rYU\nb'
        darwin_hardware_0 = module_0.DarwinHardware(str_0)
        str_1 = 'S'
        tuple_0 = (dict_0, darwin_hardware_0, str_1)
        darwin_hardware_1 = module_0.DarwinHardware(tuple_0)
        var_0 = darwin_hardware_1.get_memory_facts()
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = '!(vPO?8M%"d#x'
        darwin_hardware_0 = module_0.DarwinHardware(str_0)
        var_0 = darwin_hardware_0.get_uptime_facts()
    except BaseException:
        pass