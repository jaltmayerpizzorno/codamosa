# Automatically generated by Pynguin.
import pypara.monetary as module_0
import decimal as module_1
import datetime as module_2
import pypara.currencies as module_3

def test_case_0():
    try:
        none_money_0 = module_0.NoneMoney()
        none_money_1 = module_0.NoneMoney()
        bool_0 = none_money_1.as_boolean()
        money_0 = none_money_1.negative()
        var_0 = money_0.__round__()
        none_price_0 = module_0.NonePrice()
        bool_1 = False
        price_0 = none_price_0.divide(bool_1)
        price_1 = none_price_0.negative()
        float_0 = none_money_0.as_float()
    except BaseException:
        pass

def test_case_1():
    try:
        money_0 = None
        none_money_0 = module_0.NoneMoney()
        money_1 = none_money_0.subtract(money_0)
    except BaseException:
        pass

def test_case_2():
    try:
        money_0 = None
        none_money_0 = module_0.NoneMoney()
        bool_0 = none_money_0.lte(money_0)
        none_money_1 = module_0.NoneMoney()
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.negative()
        some_price_0 = module_0.SomePrice()
    except BaseException:
        pass

def test_case_3():
    try:
        none_money_0 = module_0.NoneMoney()
        bool_0 = none_money_0.is_equal(none_money_0)
        var_0 = None
        money_0 = none_money_0.divide(var_0)
        none_price_0 = module_0.NonePrice()
        var_1 = money_0.__round__()
        price_0 = none_price_0.negative()
        list_0 = [var_1, bool_0, bool_0]
        money_1 = price_0.times(var_0)
        some_price_0 = module_0.SomePrice(*list_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        money_2 = some_money_0.add(money_0)
        bool_1 = some_price_0.as_boolean()
        bool_2 = some_price_0.lt(price_0)
        price_1 = some_price_0.add(price_0)
        price_2 = some_price_0.add(price_1)
        bool_3 = some_money_0.gte(money_1)
        price_3 = some_price_0.subtract(price_1)
        bool_4 = some_money_0.lt(money_2)
        bool_5 = price_3.gt(price_0)
        money_3 = some_money_0.add(money_2)
        money_4 = some_money_0.subtract(money_3)
        float_0 = price_3.as_float()
        bool_6 = price_3.gte(price_3)
        currency_0 = None
        price_4 = none_price_0.positive()
        price_5 = price_2.with_ccy(currency_0)
        currency_1 = None
        money_5 = some_money_0.convert(currency_1)
    except BaseException:
        pass

def test_case_4():
    try:
        none_money_0 = module_0.NoneMoney()
        bool_0 = none_money_0.as_boolean()
        bool_1 = none_money_0.is_equal(none_money_0)
        var_0 = None
        none_price_0 = module_0.NonePrice()
        money_0 = none_money_0.negative()
        var_1 = money_0.__round__()
        money_1 = none_money_0.abs()
        str_0 = 'Danish Krone'
        price_0 = none_price_0.scalar_add(var_0)
        money_2 = none_price_0.times(var_0)
        list_0 = [var_1, bool_0, bool_0]
        money_3 = none_money_0.floor_divide(var_0)
        bool_2 = money_2.__bool__()
        some_price_0 = module_0.SomePrice(*list_0)
        bool_3 = some_price_0.gt(price_0)
        price_1 = price_0.__truediv__(var_0)
        var_2 = price_1.__round__()
        var_3 = price_0.__round__()
        dict_0 = {str_0: var_2, str_0: var_3, str_0: bool_1}
        list_1 = [dict_0, money_2]
        none_price_1 = module_0.NonePrice(*list_1, **dict_0)
    except BaseException:
        pass

def test_case_5():
    try:
        none_money_0 = module_0.NoneMoney()
        none_money_1 = module_0.NoneMoney()
        bool_0 = none_money_0.as_boolean()
        bool_1 = none_money_1.is_equal(none_money_0)
        var_0 = None
        none_price_0 = module_0.NonePrice()
        bool_2 = none_money_1.as_boolean()
        money_0 = none_money_1.negative()
        var_1 = money_0.__round__()
        money_1 = none_money_1.abs()
        str_0 = 'Danish Krone'
        price_0 = none_price_0.floor_divide(var_0)
        money_2 = none_money_0.divide(var_0)
        price_1 = price_0.__truediv__(var_0)
        var_2 = price_1.__round__()
        var_3 = price_0.__round__()
        dict_0 = {str_0: var_2, str_0: var_3, str_0: bool_2}
        none_money_2 = module_0.NoneMoney(**dict_0)
    except BaseException:
        pass

def test_case_6():
    try:
        decimal_0 = module_1.Decimal()
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.with_qty(decimal_0)
        some_price_0 = module_0.SomePrice()
    except BaseException:
        pass

def test_case_7():
    try:
        money_0 = None
        none_money_0 = module_0.NoneMoney()
        bool_0 = none_money_0.lte(money_0)
        bool_1 = none_money_0.lt(money_0)
    except BaseException:
        pass

def test_case_8():
    try:
        none_money_0 = module_0.NoneMoney()
        none_money_1 = module_0.NoneMoney()
        bool_0 = none_money_0.as_boolean()
        bool_1 = none_money_1.is_equal(none_money_0)
        none_price_0 = module_0.NonePrice()
        money_0 = none_money_1.negative()
        var_0 = money_0.__round__()
        money_1 = none_money_1.abs()
        price_0 = none_price_0.negative()
        list_0 = [var_0, bool_0, bool_0]
        some_price_0 = module_0.SomePrice(*list_0)
        bool_2 = some_price_0.gt(price_0)
        float_0 = price_0.as_float()
    except BaseException:
        pass

def test_case_9():
    try:
        none_money_0 = module_0.NoneMoney()
        none_money_1 = module_0.NoneMoney()
        bool_0 = none_money_0.as_boolean()
        bool_1 = none_money_1.is_equal(none_money_0)
        int_0 = none_money_1.as_integer()
    except BaseException:
        pass

def test_case_10():
    try:
        money_0 = None
        none_money_0 = module_0.NoneMoney()
        bool_0 = none_money_0.lte(money_0)
        none_money_1 = module_0.NoneMoney()
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.positive()
        price_1 = none_price_0.subtract(price_0)
        list_0 = []
        some_price_0 = module_0.SomePrice(*list_0)
    except BaseException:
        pass

def test_case_11():
    try:
        money_0 = None
        none_money_0 = module_0.NoneMoney()
        bool_0 = none_money_0.as_boolean()
        bool_1 = none_money_0.lte(money_0)
        none_money_1 = module_0.NoneMoney()
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.negative()
        int_0 = price_0.__int__()
    except BaseException:
        pass

def test_case_12():
    try:
        list_0 = []
        money_0 = module_0.Money(*list_0)
        var_0 = None
        none_money_0 = module_0.NoneMoney()
        money_1 = none_money_0.add(money_0)
        money_2 = money_1.__floordiv__(var_0)
        str_0 = "cp6Ed-wRD'48-U>tZve\x0c"
        list_1 = [str_0]
        some_money_0 = module_0.SomeMoney(*list_1)
    except BaseException:
        pass

def test_case_13():
    try:
        none_money_0 = module_0.NoneMoney()
        bool_0 = none_money_0.is_equal(none_money_0)
        var_0 = None
        money_0 = none_money_0.divide(var_0)
        var_1 = money_0.__round__()
        money_1 = none_money_0.divide(var_0)
        list_0 = [var_1, bool_0, bool_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.positive()
        var_2 = price_0.__round__()
        price_1 = some_price_0.floor_divide(var_0)
    except BaseException:
        pass

def test_case_14():
    try:
        none_money_0 = module_0.NoneMoney()
        none_money_1 = module_0.NoneMoney()
        bool_0 = none_money_1.as_boolean()
        money_0 = none_money_1.negative()
        var_0 = money_0.__round__()
        none_price_0 = module_0.NonePrice()
        bool_1 = False
        price_0 = none_price_0.divide(bool_1)
        bool_2 = money_0.__ge__(money_0)
        price_1 = price_0.add(price_0)
        list_0 = []
        date_0 = module_2.date(*list_0)
    except BaseException:
        pass

def test_case_15():
    try:
        none_money_0 = module_0.NoneMoney()
        str_0 = 'MRO'
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.scalar_subtract(str_0)
        price_1 = price_0.abs()
        list_0 = [none_money_0]
        none_price_1 = module_0.NonePrice(*list_0)
    except BaseException:
        pass

def test_case_16():
    try:
        none_money_0 = module_0.NoneMoney()
        bool_0 = none_money_0.is_equal(none_money_0)
        var_0 = None
        money_0 = none_money_0.divide(var_0)
        list_0 = [money_0, bool_0, bool_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.positive()
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_1 = some_price_0.as_boolean()
        bool_2 = none_money_0.gte(money_0)
        bool_3 = some_price_0.lt(price_0)
        price_1 = some_price_0.negative()
        currency_0 = None
        money_1 = some_money_0.convert(currency_0)
    except BaseException:
        pass

def test_case_17():
    try:
        monetary_operation_exception_0 = module_0.MonetaryOperationException()
        price_0 = module_0.Price()
        var_0 = price_0.__round__(monetary_operation_exception_0)
    except BaseException:
        pass

def test_case_18():
    try:
        none_price_0 = module_0.NonePrice()
        bool_0 = False
        price_0 = none_price_0.divide(bool_0)
        money_0 = module_0.Money()
        money_1 = money_0.__abs__()
        bool_1 = money_1.__bool__()
        decimal_0 = module_1.Decimal()
        none_money_0 = module_0.NoneMoney()
        int_0 = none_money_0.as_integer()
    except BaseException:
        pass

def test_case_19():
    try:
        none_money_0 = module_0.NoneMoney()
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.positive()
        none_money_1 = module_0.NoneMoney()
        bool_0 = none_money_1.as_boolean()
        int_0 = -66
        money_0 = module_0.Money()
        var_0 = money_0.__round__(int_0)
    except BaseException:
        pass

def test_case_20():
    try:
        none_money_0 = module_0.NoneMoney()
        str_0 = 'ktz'
        int_0 = -2044
        currency_type_0 = module_3.CurrencyType.METAL
        dict_0 = {}
        decimal_0 = module_1.Decimal(**dict_0)
        int_1 = -1392
        currency_0 = module_3.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_1)
        money_0 = none_money_0.with_ccy(currency_0)
        money_1 = none_money_0.add(money_0)
        none_money_1 = module_0.NoneMoney()
        bool_0 = none_money_1.as_boolean()
        money_2 = none_money_1.negative()
        var_0 = money_2.__round__()
        none_price_0 = module_0.NonePrice()
        bool_1 = False
        price_0 = none_price_0.divide(bool_1)
        str_1 = "aA!+8ap('_I~H^sTU"
        currency_1 = module_3.Currency(str_1, str_0, int_0, currency_type_0, decimal_0, int_0)
        price_1 = none_price_0.with_ccy(currency_1)
        none_money_2 = module_0.NoneMoney()
        int_2 = none_money_1.as_integer()
    except BaseException:
        pass

def test_case_21():
    try:
        str_0 = '\r'
        list_0 = [str_0, str_0, str_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        int_0 = 2741
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.round(int_0)
        float_0 = -22.79
        money_1 = some_money_0.floor_divide(float_0)
    except BaseException:
        pass

def test_case_22():
    try:
        none_money_0 = module_0.NoneMoney()
        str_0 = 'KDT'
        money_0 = none_money_0.abs()
        str_1 = '7_9\rU'
        int_0 = 3451
        currency_type_0 = module_3.CurrencyType.CRYPTO
        decimal_0 = None
        bool_0 = none_money_0.gte(money_0)
        currency_0 = module_3.Currency(str_0, str_1, int_0, currency_type_0, decimal_0, int_0)
        bool_1 = False
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.convert(currency_0, int_0, bool_1)
        some_money_0 = module_0.SomeMoney()
    except BaseException:
        pass

def test_case_23():
    try:
        none_money_0 = module_0.NoneMoney()
        bool_0 = none_money_0.is_equal(none_money_0)
        var_0 = None
        money_0 = none_money_0.divide(var_0)
        var_1 = money_0.__round__()
        list_0 = [var_1, bool_0, bool_0]
        money_1 = none_money_0.floor_divide(var_0)
        some_price_0 = module_0.SomePrice(*list_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        money_2 = money_0.divide(var_0)
        bool_1 = some_money_0.as_boolean()
        bool_2 = some_money_0.lt(money_1)
        money_3 = some_money_0.add(money_0)
        bool_3 = some_money_0.gte(money_2)
        money_4 = some_money_0.add(money_3)
        money_5 = some_money_0.subtract(money_2)
        bool_4 = some_money_0.gte(money_0)
        money_6 = some_money_0.subtract(money_1)
        money_7 = money_4.divide(var_0)
    except BaseException:
        pass

def test_case_24():
    try:
        none_money_0 = module_0.NoneMoney()
        none_money_1 = module_0.NoneMoney()
        bool_0 = none_money_0.as_boolean()
        bool_1 = none_money_1.is_equal(none_money_0)
        var_0 = None
        none_price_0 = module_0.NonePrice()
        bool_2 = none_money_1.as_boolean()
        money_0 = none_money_1.negative()
        var_1 = money_0.__round__()
        money_1 = none_money_1.abs()
        str_0 = 'Danish Krone'
        price_0 = none_price_0.negative()
        money_2 = none_money_0.divide(var_0)
        price_1 = price_0.__truediv__(var_0)
        bool_3 = price_1.lte(price_1)
        var_2 = price_0.__round__()
        dict_0 = {str_0: price_1, str_0: var_2, str_0: bool_2}
        none_money_2 = module_0.NoneMoney(**dict_0)
    except BaseException:
        pass

def test_case_25():
    try:
        var_0 = None
        bool_0 = False
        list_0 = [bool_0, bool_0, bool_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        int_0 = some_money_0.as_integer()
        money_0 = some_money_0.divide(var_0)
    except BaseException:
        pass

def test_case_26():
    try:
        str_0 = '\r'
        list_0 = [str_0, str_0, str_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        none_money_0 = module_0.NoneMoney()
        money_0 = some_money_0.positive()
    except BaseException:
        pass

def test_case_27():
    try:
        list_0 = []
        price_0 = module_0.Price(*list_0)
        none_price_0 = module_0.NonePrice()
        bool_0 = none_price_0.lt(price_0)
    except BaseException:
        pass

def test_case_28():
    try:
        var_0 = None
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.divide(var_0)
        none_money_0 = module_0.NoneMoney()
        none_money_1 = module_0.NoneMoney()
        bool_0 = none_money_0.as_boolean()
        bool_1 = none_money_1.is_equal(none_money_0)
        date_0 = None
        money_0 = none_money_1.with_dov(date_0)
        var_1 = None
        none_price_1 = module_0.NonePrice()
        bool_2 = none_money_1.as_boolean()
        money_1 = none_money_1.negative()
        var_2 = money_1.__round__()
        money_2 = none_money_1.abs()
        money_3 = money_2.scalar_add(var_1)
        str_0 = 'Danish Krone'
        price_1 = price_0.__sub__(price_0)
        money_4 = none_money_0.divide(var_1)
        price_2 = price_1.__truediv__(var_1)
        var_3 = price_2.__round__()
        var_4 = price_1.__round__()
        dict_0 = {str_0: var_3, str_0: var_4, str_0: bool_2}
        none_money_2 = module_0.NoneMoney(**dict_0)
    except BaseException:
        pass

def test_case_29():
    try:
        dict_0 = {}
        list_0 = [dict_0]
        money_0 = module_0.Money(**dict_0)
        float_0 = money_0.__float__()
        none_money_0 = module_0.NoneMoney(*list_0, **dict_0)
    except BaseException:
        pass

def test_case_30():
    try:
        none_money_0 = module_0.NoneMoney()
        none_money_1 = module_0.NoneMoney()
        bool_0 = none_money_0.as_boolean()
        var_0 = None
        none_price_0 = module_0.NonePrice()
        bool_1 = none_money_1.as_boolean()
        price_0 = none_price_0.negative()
        money_0 = none_money_0.scalar_subtract(var_0)
        price_1 = price_0.__truediv__(var_0)
        bool_2 = price_1.__gt__(price_1)
        var_1 = price_1.__round__()
        money_1 = price_0.times(var_0)
        some_price_0 = module_0.SomePrice()
    except BaseException:
        pass

def test_case_31():
    try:
        int_0 = -4177
        currency_type_0 = module_3.CurrencyType.CRYPTO
        str_0 = 't@`E3\x0cL`iix'
        str_1 = 'K?fe8e"u'
        decimal_0 = module_1.Decimal()
        currency_0 = module_3.Currency(str_0, str_1, int_0, currency_type_0, decimal_0, int_0)
        bool_0 = False
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.convert(currency_0, bool_0)
        money_1 = money_0.__neg__()
        price_0 = module_0.Price()
        price_1 = price_0.multiply(money_1)
    except BaseException:
        pass

def test_case_32():
    try:
        var_0 = None
        bool_0 = False
        list_0 = [bool_0, bool_0, bool_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.scalar_add(var_0)
    except BaseException:
        pass

def test_case_33():
    try:
        var_0 = None
        bool_0 = False
        list_0 = [bool_0, bool_0, bool_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        float_0 = some_money_0.as_float()
        money_0 = some_money_0.divide(var_0)
    except BaseException:
        pass

def test_case_34():
    try:
        none_money_0 = module_0.NoneMoney()
        none_money_1 = module_0.NoneMoney()
        bool_0 = none_money_0.as_boolean()
        bool_1 = none_money_1.is_equal(none_money_0)
        var_0 = None
        none_price_0 = module_0.NonePrice()
        bool_2 = none_money_1.as_boolean()
        money_0 = none_money_1.negative()
        var_1 = money_0.__round__()
        money_1 = none_money_1.abs()
        price_0 = none_price_0.negative()
        int_0 = 30
        currency_0 = None
        list_0 = [int_0, var_1, bool_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_2 = some_money_0.with_ccy(currency_0)
        var_2 = money_0.__round__(int_0)
        money_3 = none_money_0.divide(var_0)
        price_1 = price_0.__truediv__(var_0)
        var_3 = price_1.__round__()
        var_4 = price_0.__round__()
        int_1 = none_money_1.as_integer()
    except BaseException:
        pass

def test_case_35():
    try:
        list_0 = []
        price_0 = module_0.Price(*list_0)
        price_1 = price_0.__abs__()
        none_price_0 = module_0.NonePrice()
        bool_0 = none_price_0.lt(price_0)
    except BaseException:
        pass

def test_case_36():
    try:
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.positive()
        bool_0 = none_money_0.is_equal(none_money_0)
        var_0 = None
        none_price_0 = module_0.NonePrice()
        money_1 = money_0.subtract(money_0)
        money_2 = money_1.negative()
        price_0 = none_price_0.negative()
        list_0 = [money_0, bool_0, bool_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_1 = some_price_0.subtract(price_0)
        bool_1 = some_price_0.as_boolean()
        bool_2 = none_money_0.gte(money_1)
        bool_3 = some_price_0.lt(price_1)
        price_2 = some_price_0.add(price_1)
        price_3 = some_price_0.add(price_2)
        price_4 = some_price_0.subtract(price_2)
        bool_4 = price_4.gt(price_0)
        bool_5 = price_3.gte(price_3)
        price_5 = some_price_0.divide(var_0)
    except BaseException:
        pass

def test_case_37():
    try:
        none_money_0 = module_0.NoneMoney()
        bool_0 = none_money_0.as_boolean()
        bool_1 = none_money_0.is_equal(none_money_0)
        var_0 = None
        money_0 = none_money_0.negative()
        var_1 = money_0.__round__()
        money_1 = none_money_0.abs()
        money_2 = none_money_0.divide(var_0)
        list_0 = [bool_0, var_0, money_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.scalar_add(var_0)
    except BaseException:
        pass

def test_case_38():
    try:
        bool_0 = False
        list_0 = [bool_0, bool_0, bool_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.positive()
        price_1 = price_0.add(price_0)
        dict_0 = {}
        some_price_1 = module_0.SomePrice(*list_0)
        price_2 = price_1.__abs__()
        some_money_0 = module_0.SomeMoney(**dict_0)
    except BaseException:
        pass

def test_case_39():
    try:
        none_money_0 = module_0.NoneMoney()
        bool_0 = none_money_0.is_equal(none_money_0)
        var_0 = None
        money_0 = none_money_0.multiply(var_0)
        none_price_0 = module_0.NonePrice()
        var_1 = money_0.__round__()
        money_1 = none_money_0.abs()
        price_0 = none_price_0.negative()
        money_2 = none_money_0.divide(var_0)
        list_0 = [var_1, bool_0, bool_0]
        money_3 = none_money_0.floor_divide(var_0)
        price_1 = none_price_0.add(price_0)
        some_price_0 = module_0.SomePrice(*list_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        money_4 = money_0.divide(var_0)
        bool_1 = some_money_0.as_boolean()
        bool_2 = some_price_0.gt(price_0)
        price_2 = price_0.__pos__()
        var_2 = price_2.__round__()
        var_3 = price_0.__round__()
        bool_3 = some_money_0.lt(money_1)
        bool_4 = none_money_0.as_boolean()
        money_5 = some_money_0.add(money_2)
        bool_5 = none_money_0.gte(money_5)
        bool_6 = some_price_0.lt(price_1)
        price_3 = some_price_0.add(price_0)
        price_4 = some_price_0.add(price_1)
        price_5 = price_4.scalar_subtract(var_0)
    except BaseException:
        pass

def test_case_40():
    try:
        none_money_0 = module_0.NoneMoney()
        bool_0 = none_money_0.is_equal(none_money_0)
        var_0 = None
        money_0 = none_money_0.scalar_subtract(var_0)
        var_1 = money_0.__round__()
        list_0 = [var_1, bool_0, bool_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_1 = some_money_0.add(money_0)
        bool_1 = none_money_0.gte(money_0)
        bool_2 = some_money_0.lt(money_1)
        money_2 = none_money_0.divide(var_0)
        money_3 = some_money_0.subtract(money_2)
        bool_3 = some_money_0.gte(money_2)
        money_4 = money_1.__abs__()
        bool_4 = money_4.lte(money_3)
        currency_0 = None
        date_0 = None
        money_5 = some_money_0.convert(currency_0, date_0)
    except BaseException:
        pass

def test_case_41():
    try:
        none_money_0 = module_0.NoneMoney()
        bool_0 = none_money_0.is_equal(none_money_0)
        var_0 = None
        money_0 = none_money_0.divide(var_0)
        list_0 = [money_0, bool_0, bool_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_1 = some_money_0.add(money_0)
        bool_1 = none_money_0.gte(money_0)
        bool_2 = some_money_0.lt(money_1)
        bool_3 = money_1.__gt__(money_1)
        money_2 = money_0.multiply(var_0)
        money_3 = money_1.__pos__()
        bool_4 = some_money_0.gte(money_1)
        currency_0 = None
        money_4 = some_money_0.convert(currency_0, bool_0)
    except BaseException:
        pass

def test_case_42():
    try:
        none_money_0 = module_0.NoneMoney()
        bool_0 = none_money_0.is_equal(none_money_0)
        var_0 = None
        none_price_0 = module_0.NonePrice()
        money_0 = none_money_0.negative()
        money_1 = money_0.scalar_subtract(var_0)
        money_2 = money_0.abs()
        price_0 = none_price_0.negative()
        money_3 = none_money_0.divide(var_0)
        list_0 = [money_2, bool_0, bool_0]
        some_price_0 = module_0.SomePrice(*list_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_1 = some_money_0.as_boolean()
        bool_2 = some_price_0.gt(price_0)
        price_1 = price_0.__truediv__(var_0)
        var_1 = price_0.__round__()
        bool_3 = some_money_0.lt(money_2)
        money_4 = some_price_0.times(var_0)
    except BaseException:
        pass

def test_case_43():
    try:
        none_money_0 = module_0.NoneMoney()
        bool_0 = none_money_0.is_equal(none_money_0)
        var_0 = None
        money_0 = none_money_0.divide(var_0)
        none_price_0 = module_0.NonePrice()
        money_1 = none_money_0.negative()
        var_1 = money_1.__round__()
        money_2 = none_money_0.abs()
        price_0 = none_price_0.negative()
        money_3 = none_money_0.divide(var_0)
        list_0 = [var_1, bool_0, bool_0]
        money_4 = none_money_0.floor_divide(var_0)
        some_price_0 = module_0.SomePrice(*list_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_1 = some_money_0.as_boolean()
        bool_2 = some_price_0.gt(price_0)
        price_1 = price_0.__truediv__(var_0)
        var_2 = price_1.__round__()
        money_5 = some_money_0.round()
    except BaseException:
        pass

def test_case_44():
    try:
        none_money_0 = module_0.NoneMoney()
        money_0 = module_0.Money()
        none_money_1 = module_0.NoneMoney()
        money_1 = none_money_1.add(money_0)
        money_2 = money_1.__pos__()
        money_3 = money_2.__truediv__(none_money_0)
    except BaseException:
        pass

def test_case_45():
    try:
        dict_0 = {}
        money_0 = module_0.Money(**dict_0)
        bool_0 = money_0.gt(money_0)
        date_0 = module_2.date()
    except BaseException:
        pass

def test_case_46():
    try:
        none_money_0 = module_0.NoneMoney()
        bool_0 = none_money_0.is_equal(none_money_0)
        var_0 = None
        money_0 = none_money_0.multiply(var_0)
        none_price_0 = module_0.NonePrice()
        money_1 = none_money_0.negative()
        var_1 = money_1.__round__()
        money_2 = none_money_0.abs()
        price_0 = none_price_0.negative()
        money_3 = none_money_0.divide(var_0)
        list_0 = [var_1, bool_0, bool_0]
        money_4 = none_money_0.floor_divide(var_0)
        price_1 = none_price_0.add(price_0)
        some_price_0 = module_0.SomePrice(*list_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        money_5 = money_0.divide(var_0)
        bool_1 = some_money_0.as_boolean()
        bool_2 = some_price_0.gt(price_0)
        price_2 = price_0.__pos__()
        var_2 = price_2.__round__()
        var_3 = price_0.__round__()
        bool_3 = some_money_0.lt(money_2)
        bool_4 = none_money_0.as_boolean()
        money_6 = some_money_0.add(money_1)
        bool_5 = none_money_0.gte(money_6)
        dict_0 = {}
        decimal_0 = module_1.Decimal(**dict_0)
        money_7 = some_money_0.with_qty(decimal_0)
    except BaseException:
        pass

def test_case_47():
    try:
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.positive()
        bool_0 = none_money_0.is_equal(none_money_0)
        var_0 = None
        money_1 = none_money_0.divide(var_0)
        none_price_0 = module_0.NonePrice()
        money_2 = money_0.subtract(money_1)
        list_0 = [money_0, bool_0, bool_0]
        some_price_0 = module_0.SomePrice(*list_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        money_3 = some_money_0.add(money_1)
        bool_1 = some_price_0.as_boolean()
        bool_2 = none_money_0.gte(money_1)
        bool_3 = some_money_0.gte(money_2)
        bool_4 = some_money_0.lt(money_3)
        bool_5 = money_3.__gt__(money_3)
        money_4 = money_1.multiply(var_0)
        money_5 = money_3.__pos__()
        money_6 = some_money_0.subtract(money_5)
        bool_6 = some_money_0.gte(money_3)
        bool_7 = money_6.lte(money_4)
        money_7 = some_money_0.add(money_3)
        money_8 = some_money_0.add(money_3)
        money_9 = some_money_0.divide(var_0)
    except BaseException:
        pass

def test_case_48():
    try:
        none_money_0 = module_0.NoneMoney()
        bool_0 = none_money_0.is_equal(none_money_0)
        var_0 = None
        money_0 = none_money_0.divide(var_0)
        none_price_0 = module_0.NonePrice()
        var_1 = money_0.__round__()
        price_0 = none_price_0.negative()
        list_0 = [var_1, bool_0, bool_0]
        money_1 = none_money_0.floor_divide(var_0)
        some_price_0 = module_0.SomePrice(*list_0)
        money_2 = money_0.divide(var_0)
        bool_1 = some_price_0.gt(price_0)
        var_2 = price_0.__round__()
        decimal_0 = module_1.Decimal()
        price_1 = some_price_0.with_qty(decimal_0)
        bool_2 = none_money_0.gte(money_2)
        price_2 = some_price_0.add(price_0)
        price_3 = some_price_0.add(price_2)
        price_4 = some_price_0.positive()
        price_5 = some_price_0.subtract(price_4)
        bool_3 = some_price_0.lte(price_2)
        bool_4 = some_price_0.lt(price_4)
        var_3 = None
        money_3 = money_1.divide(var_3)
        price_6 = some_price_0.multiply(var_3)
    except BaseException:
        pass

def test_case_49():
    try:
        none_money_0 = module_0.NoneMoney()
        bool_0 = none_money_0.is_equal(none_money_0)
        var_0 = None
        money_0 = none_money_0.divide(var_0)
        none_price_0 = module_0.NonePrice()
        var_1 = money_0.__round__()
        money_1 = none_money_0.divide(var_0)
        list_0 = [var_1, bool_0, bool_0]
        money_2 = none_money_0.floor_divide(var_0)
        some_price_0 = module_0.SomePrice(*list_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        money_3 = some_money_0.negative()
        bool_1 = some_money_0.as_boolean()
        bool_2 = some_money_0.lt(money_2)
        money_4 = some_money_0.add(money_3)
        price_0 = some_price_0.positive()
        money_5 = some_money_0.scalar_subtract(var_0)
    except BaseException:
        pass

def test_case_50():
    try:
        none_money_0 = module_0.NoneMoney()
        bool_0 = none_money_0.is_equal(none_money_0)
        var_0 = None
        money_0 = none_money_0.divide(var_0)
        none_price_0 = module_0.NonePrice()
        var_1 = money_0.__round__()
        price_0 = none_price_0.negative()
        list_0 = [var_1, bool_0, bool_0]
        money_1 = none_money_0.floor_divide(var_0)
        some_price_0 = module_0.SomePrice(*list_0)
        price_1 = price_0.__truediv__(var_0)
        money_2 = money_0.divide(var_0)
        bool_1 = some_price_0.gt(price_0)
        var_2 = price_0.__round__()
        bool_2 = some_price_0.lt(price_0)
        price_2 = some_price_0.add(price_0)
        price_3 = some_price_0.add(price_2)
        price_4 = some_price_0.positive()
        price_5 = some_price_0.subtract(price_2)
        price_6 = some_price_0.add(price_2)
        price_7 = some_price_0.subtract(price_4)
        bool_3 = price_7.gte(price_6)
        bool_4 = price_2.__gt__(price_4)
        some_price_1 = module_0.SomePrice()
    except BaseException:
        pass

def test_case_51():
    try:
        decimal_0 = module_1.Decimal()
        str_0 = 'rsq+g&wnF'
        str_1 = ''
        bytes_0 = None
        str_2 = 'gS'
        int_0 = 1902
        currency_type_0 = module_3.CurrencyType.ALTERNATIVE
        currency_0 = module_3.Currency(str_2, str_0, int_0, currency_type_0, decimal_0, int_0)
        bool_0 = False
        list_0 = [bytes_0, str_1, bytes_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.convert(currency_0, bool_0)
    except BaseException:
        pass

def test_case_52():
    try:
        none_money_0 = module_0.NoneMoney()
        money_0 = module_0.Money()
        none_money_1 = module_0.NoneMoney()
        money_1 = none_money_1.add(money_0)
        bool_0 = money_1.is_equal(none_money_1)
    except BaseException:
        pass

def test_case_53():
    try:
        money_0 = module_0.Money()
        bool_0 = money_0.__lt__(money_0)
    except BaseException:
        pass

def test_case_54():
    try:
        none_money_0 = module_0.NoneMoney()
        bool_0 = none_money_0.is_equal(none_money_0)
        var_0 = None
        money_0 = none_money_0.divide(var_0)
        none_price_0 = module_0.NonePrice()
        money_1 = none_money_0.negative()
        var_1 = money_1.__round__()
        money_2 = none_money_0.abs()
        price_0 = none_price_0.negative()
        money_3 = none_money_0.divide(var_0)
        list_0 = [var_1, bool_0, bool_0]
        money_4 = none_money_0.floor_divide(var_0)
        price_1 = none_price_0.add(price_0)
        some_price_0 = module_0.SomePrice(*list_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        money_5 = money_0.divide(var_0)
        bool_1 = some_money_0.as_boolean()
        bool_2 = some_price_0.gt(price_0)
        price_2 = price_0.__pos__()
        var_2 = price_2.__round__()
        var_3 = price_0.__round__()
        bool_3 = some_money_0.lt(money_2)
        bool_4 = none_money_0.as_boolean()
        money_6 = some_money_0.add(money_1)
        bool_5 = none_money_0.gte(money_6)
        bool_6 = some_price_0.lt(price_1)
        price_3 = some_price_0.add(price_2)
        price_4 = some_price_0.add(price_1)
        price_5 = some_price_0.positive()
        price_6 = some_price_0.add(price_0)
        money_7 = money_6.__mul__(var_0)
    except BaseException:
        pass

def test_case_55():
    try:
        money_0 = module_0.Money()
        money_1 = money_0.positive()
    except BaseException:
        pass

def test_case_56():
    try:
        none_money_0 = module_0.NoneMoney()
        bool_0 = none_money_0.is_equal(none_money_0)
        var_0 = None
        money_0 = none_money_0.divide(var_0)
        var_1 = money_0.__round__()
        money_1 = none_money_0.divide(var_0)
        list_0 = [var_1, bool_0, bool_0]
        money_2 = none_money_0.floor_divide(var_0)
        some_price_0 = module_0.SomePrice(*list_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        money_3 = money_0.divide(var_0)
        bool_1 = some_money_0.as_boolean()
        bool_2 = some_money_0.lt(money_2)
        money_4 = some_money_0.add(money_0)
        bool_3 = none_money_0.gte(money_4)
        bool_4 = some_money_0.gte(money_3)
        price_0 = some_price_0.floor_divide(var_0)
    except BaseException:
        pass

def test_case_57():
    try:
        none_money_0 = module_0.NoneMoney()
        bool_0 = none_money_0.is_equal(none_money_0)
        var_0 = None
        money_0 = none_money_0.divide(var_0)
        var_1 = money_0.__round__()
        list_0 = [var_1, bool_0, bool_0]
        money_1 = none_money_0.floor_divide(var_0)
        some_price_0 = module_0.SomePrice(*list_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        money_2 = money_0.divide(var_0)
        bool_1 = some_money_0.as_boolean()
        bool_2 = some_money_0.lt(money_1)
        money_3 = some_money_0.add(money_0)
        bool_3 = none_money_0.gte(money_3)
        price_0 = some_price_0.positive()
        bool_4 = some_money_0.gte(money_3)
        var_2 = None
        money_4 = some_money_0.subtract(money_1)
        money_5 = money_1.__pos__()
        money_6 = money_2.divide(var_2)
        price_1 = some_price_0.floor_divide(var_0)
    except BaseException:
        pass

def test_case_58():
    try:
        none_money_0 = module_0.NoneMoney()
        bool_0 = none_money_0.is_equal(none_money_0)
        var_0 = None
        money_0 = none_money_0.divide(var_0)
        none_price_0 = module_0.NonePrice()
        var_1 = money_0.__round__()
        price_0 = none_price_0.negative()
        list_0 = [var_1, bool_0, bool_0]
        money_1 = none_money_0.floor_divide(var_0)
        some_price_0 = module_0.SomePrice(*list_0)
        price_1 = some_price_0.subtract(price_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        money_2 = money_1.divide(var_0)
        bool_1 = some_money_0.as_boolean()
        bool_2 = some_price_0.gt(price_0)
        bool_3 = some_money_0.lt(money_2)
        money_3 = some_money_0.positive()
        bool_4 = some_price_0.lt(price_1)
        price_2 = some_price_0.add(price_0)
        bool_5 = price_2.lt(price_0)
        bool_6 = some_money_0.gte(money_3)
        money_4 = money_2.positive()
        price_3 = none_price_0.subtract(price_1)
        bool_7 = price_3.gt(price_1)
        price_4 = some_price_0.add(price_1)
        money_5 = some_money_0.add(money_0)
        bool_8 = price_3.gte(price_0)
        currency_0 = None
        money_6 = some_money_0.convert(currency_0)
    except BaseException:
        pass

def test_case_59():
    try:
        none_money_0 = module_0.NoneMoney()
        bool_0 = none_money_0.is_equal(none_money_0)
        var_0 = None
        money_0 = none_money_0.positive()
        none_price_0 = module_0.NonePrice()
        var_1 = money_0.__round__()
        price_0 = none_price_0.positive()
        money_1 = none_money_0.divide(var_0)
        list_0 = [var_1, bool_0, bool_0]
        money_2 = none_money_0.floor_divide(var_0)
        some_price_0 = module_0.SomePrice(*list_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        int_0 = -863
        money_3 = none_money_0.negative()
        money_4 = some_money_0.add(money_1)
        money_5 = some_money_0.add(money_4)
        bool_1 = none_money_0.gte(money_5)
        bool_2 = some_price_0.lt(price_0)
        price_1 = some_price_0.add(price_0)
        price_2 = some_price_0.add(price_1)
        price_3 = some_price_0.positive()
        price_4 = some_price_0.subtract(price_2)
        price_5 = some_price_0.add(price_3)
        bool_3 = some_money_0.gte(money_1)
        bool_4 = some_price_0.lte(price_4)
        price_6 = some_price_0.add(price_4)
        price_7 = none_price_0.abs()
        money_6 = some_money_0.subtract(money_4)
        money_7 = some_money_0.subtract(money_4)
        bool_5 = price_0.__gt__(price_3)
        price_8 = module_0.Price()
        bool_6 = price_8.__gt__(price_6)
        price_9 = module_0.Price()
        var_2 = price_9.__round__(int_0)
    except BaseException:
        pass

def test_case_60():
    try:
        none_money_0 = module_0.NoneMoney()
        bool_0 = none_money_0.is_equal(none_money_0)
        var_0 = None
        money_0 = none_money_0.divide(var_0)
        none_price_0 = module_0.NonePrice()
        var_1 = money_0.__round__()
        price_0 = none_price_0.negative()
        list_0 = [var_1, bool_0, bool_0]
        money_1 = none_money_0.floor_divide(var_0)
        some_price_0 = module_0.SomePrice(*list_0)
        price_1 = price_0.__truediv__(var_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        money_2 = money_0.divide(var_0)
        bool_1 = some_money_0.as_boolean()
        bool_2 = some_price_0.gt(price_0)
        var_2 = price_0.__round__()
        bool_3 = some_money_0.lt(money_1)
        money_3 = some_money_0.add(money_0)
        bool_4 = price_1.__bool__()
        bool_5 = none_money_0.gte(money_3)
        bool_6 = some_price_0.lt(price_0)
        price_2 = some_price_0.add(price_0)
        price_3 = some_price_0.add(price_2)
        price_4 = some_price_0.positive()
        price_5 = some_price_0.subtract(price_2)
        price_6 = some_price_0.add(price_3)
        price_7 = some_price_0.subtract(price_4)
        price_8 = price_0.positive()
        price_9 = some_price_0.add(price_8)
        money_4 = some_money_0.add(money_1)
        price_10 = module_0.Price()
        bool_7 = price_10.gte(price_1)
        money_5 = some_money_0.subtract(money_4)
        money_6 = money_5.divide(var_0)
    except BaseException:
        pass

def test_case_61():
    try:
        none_money_0 = module_0.NoneMoney()
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.positive()
        none_money_1 = module_0.NoneMoney()
        bool_0 = none_money_1.as_boolean()
        money_0 = module_0.Money()
        currency_type_0 = module_3.CurrencyType.CRYPTO
        money_1 = money_0.divide(currency_type_0)
    except BaseException:
        pass

def test_case_62():
    try:
        none_money_0 = module_0.NoneMoney()
        bool_0 = none_money_0.is_equal(none_money_0)
        var_0 = None
        money_0 = none_money_0.divide(var_0)
        var_1 = money_0.__round__()
        money_1 = none_money_0.divide(var_0)
        list_0 = [var_1, bool_0, bool_0]
        money_2 = none_money_0.floor_divide(var_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        money_3 = none_money_0.negative()
        bool_1 = some_money_0.as_boolean()
        money_4 = some_money_0.add(money_1)
        money_5 = some_money_0.add(money_4)
        bool_2 = none_money_0.gte(money_5)
        bool_3 = some_money_0.gte(money_3)
        some_price_0 = module_0.SomePrice(*list_0)
        var_2 = None
        money_6 = some_money_0.subtract(money_5)
        money_7 = money_0.__pos__()
        money_8 = money_1.divide(var_2)
        bool_4 = some_price_0.is_equal(money_1)
        price_0 = some_price_0.floor_divide(var_0)
    except BaseException:
        pass

def test_case_63():
    try:
        none_money_0 = module_0.NoneMoney()
        bool_0 = none_money_0.is_equal(none_money_0)
        var_0 = None
        money_0 = none_money_0.divide(var_0)
        none_price_0 = module_0.NonePrice()
        var_1 = money_0.__round__()
        price_0 = none_price_0.negative()
        list_0 = [var_1, bool_0, bool_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_1 = price_0.__truediv__(var_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        money_1 = money_0.divide(var_0)
        bool_1 = some_money_0.as_boolean()
        bool_2 = some_price_0.gt(price_0)
        var_2 = price_0.__round__()
        bool_3 = some_money_0.lt(money_1)
        money_2 = some_money_0.add(money_0)
        bool_4 = none_money_0.gte(money_2)
        bool_5 = some_price_0.lt(price_0)
        price_2 = some_price_0.add(price_0)
        price_3 = some_price_0.positive()
        price_4 = some_price_0.subtract(price_2)
        bool_6 = some_money_0.gte(money_1)
        price_5 = some_price_0.subtract(price_2)
        price_6 = price_0.__mul__(var_0)
        price_7 = some_price_0.add(price_6)
        bool_7 = price_0.gte(price_7)
        money_3 = some_money_0.subtract(money_1)
        bool_8 = some_price_0.is_equal(price_4)
        price_8 = price_6.__truediv__(var_0)
        money_4 = money_0.positive()
        money_5 = some_money_0.subtract(money_2)
        money_6 = price_8.times(var_0)
        money_7 = money_3.floor_divide(var_0)
    except BaseException:
        pass

def test_case_64():
    try:
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.abs()
        bool_0 = none_money_0.is_equal(none_money_0)
        none_price_0 = module_0.NonePrice()
        money_1 = money_0.subtract(money_0)
        var_0 = money_0.__round__()
        price_0 = none_price_0.negative()
        list_0 = [var_0, bool_0, bool_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_1 = some_price_0.subtract(price_0)
        bool_1 = some_price_0.lt(price_1)
        price_2 = some_price_0.add(price_1)
        price_3 = some_price_0.add(price_2)
        price_4 = some_price_0.subtract(price_2)
        date_0 = None
        price_5 = price_0.with_dov(date_0)
        bool_2 = price_3.gte(price_3)
        currency_0 = None
        price_6 = price_2.convert(currency_0)
    except BaseException:
        pass

def test_case_65():
    try:
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.negative()
        bool_0 = none_money_0.is_equal(none_money_0)
        none_price_0 = module_0.NonePrice()
        money_1 = money_0.subtract(money_0)
        var_0 = money_0.__round__()
        price_0 = none_price_0.negative()
        list_0 = [var_0, bool_0, bool_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_1 = some_price_0.subtract(price_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        money_2 = some_money_0.add(money_0)
        float_0 = some_money_0.as_float()
        bool_1 = some_price_0.as_boolean()
        bool_2 = none_money_0.gte(money_1)
        bool_3 = some_price_0.lt(price_1)
        money_3 = money_2.subtract(money_2)
        price_2 = some_price_0.add(price_1)
        price_3 = some_price_0.add(price_2)
        bool_4 = some_money_0.gte(money_2)
        price_4 = some_price_0.subtract(price_2)
        date_0 = None
        price_5 = price_0.with_dov(date_0)
        bool_5 = some_money_0.lt(money_2)
        bool_6 = price_4.gt(price_0)
        bool_7 = money_2.__gt__(money_2)
        money_4 = money_2.__pos__()
        money_5 = some_money_0.subtract(money_4)
        bool_8 = some_money_0.gte(money_2)
        bool_9 = money_5.lte(money_4)
        money_6 = some_money_0.add(money_5)
        bool_10 = price_3.gte(price_3)
        money_7 = some_money_0.add(money_3)
        bool_11 = money_6.__eq__(money_6)
        currency_0 = None
        money_8 = some_money_0.convert(currency_0)
    except BaseException:
        pass

def test_case_66():
    try:
        none_price_0 = module_0.NonePrice()
        money_0 = module_0.Money()
        money_1 = money_0.abs()
    except BaseException:
        pass

def test_case_67():
    try:
        none_money_0 = module_0.NoneMoney()
        bool_0 = none_money_0.is_equal(none_money_0)
        var_0 = None
        money_0 = none_money_0.divide(var_0)
        none_price_0 = module_0.NonePrice()
        var_1 = money_0.__round__()
        price_0 = none_price_0.negative()
        list_0 = [var_1, bool_0, bool_0]
        money_1 = none_money_0.floor_divide(var_0)
        some_price_0 = module_0.SomePrice(*list_0)
        price_1 = some_price_0.subtract(price_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        money_2 = some_money_0.add(money_1)
        bool_1 = some_price_0.as_boolean()
        bool_2 = none_money_0.gte(money_0)
        date_0 = None
        money_3 = some_money_0.with_dov(date_0)
        bool_3 = money_2.lt(money_3)
        bool_4 = some_price_0.lt(price_1)
        price_2 = some_price_0.add(price_1)
        price_3 = some_price_0.add(price_0)
        price_4 = some_price_0.positive()
        bool_5 = some_money_0.gte(money_0)
        bool_6 = some_price_0.lte(price_2)
        bool_7 = price_2.gte(price_3)
        bool_8 = money_2.__gt__(money_2)
        money_4 = money_1.__pos__()
        money_5 = some_money_0.subtract(money_0)
        bool_9 = some_money_0.gte(money_2)
        bool_10 = money_5.lte(money_1)
        money_6 = some_money_0.add(money_2)
        bool_11 = price_1.gte(price_2)
        currency_0 = None
        price_5 = price_2.positive()
        price_6 = price_4.convert(currency_0, bool_4)
    except BaseException:
        pass

def test_case_68():
    try:
        none_money_0 = module_0.NoneMoney()
        bool_0 = none_money_0.is_equal(none_money_0)
        var_0 = None
        money_0 = none_money_0.divide(var_0)
        none_price_0 = module_0.NonePrice()
        var_1 = money_0.__round__()
        price_0 = none_price_0.positive()
        money_1 = none_money_0.divide(var_0)
        list_0 = [var_1, bool_0, bool_0]
        money_2 = none_money_0.floor_divide(var_0)
        some_price_0 = module_0.SomePrice(*list_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        money_3 = none_money_0.negative()
        bool_1 = some_money_0.as_boolean()
        money_4 = some_money_0.add(money_1)
        money_5 = some_money_0.add(money_4)
        bool_2 = some_price_0.as_boolean()
        bool_3 = none_money_0.gte(money_5)
        bool_4 = some_price_0.lt(price_0)
        price_1 = some_price_0.add(price_0)
        price_2 = some_price_0.add(price_1)
        price_3 = some_price_0.positive()
        price_4 = some_price_0.add(price_2)
        bool_5 = some_money_0.gte(money_3)
        bool_6 = some_price_0.lte(price_2)
        price_5 = some_price_0.subtract(price_2)
        some_price_1 = module_0.SomePrice(*list_0)
        bool_7 = some_price_0.lt(price_0)
        var_2 = None
        money_6 = some_money_0.subtract(money_1)
        money_7 = money_1.__pos__()
        money_8 = money_0.divide(var_2)
        bool_8 = price_4.__gt__(price_3)
        currency_0 = None
        price_6 = price_3.with_ccy(currency_0)
        bool_9 = price_4.__gt__(price_6)
    except BaseException:
        pass

def test_case_69():
    try:
        none_money_0 = module_0.NoneMoney()
        money_0 = module_0.Money()
        bool_0 = money_0.__ge__(money_0)
        none_money_1 = module_0.NoneMoney()
        money_1 = none_money_1.add(money_0)
        money_2 = money_0.__truediv__(none_money_0)
        str_0 = 'onK9`xg'
        none_money_2 = module_0.NoneMoney()
        bool_1 = none_money_2.is_equal(str_0)
        dict_0 = {str_0: money_0, str_0: money_0}
        none_price_0 = module_0.NonePrice(**dict_0)
    except BaseException:
        pass

def test_case_70():
    try:
        none_money_0 = module_0.NoneMoney()
        none_money_1 = module_0.NoneMoney()
        money_0 = module_0.Money()
        list_0 = []
        none_money_2 = module_0.NoneMoney(*list_0)
        money_1 = none_money_2.subtract(money_0)
        date_0 = module_2.date()
    except BaseException:
        pass

def test_case_71():
    try:
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.positive()
        bool_0 = none_money_0.is_equal(none_money_0)
        none_price_0 = module_0.NonePrice()
        money_1 = money_0.subtract(money_0)
        var_0 = money_0.__round__()
        price_0 = none_price_0.negative()
        list_0 = [var_0, bool_0, bool_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_1 = some_price_0.subtract(price_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        money_2 = some_money_0.add(money_0)
        bool_1 = some_price_0.as_boolean()
        bool_2 = none_money_0.gte(money_1)
        bool_3 = some_price_0.lt(price_1)
        some_price_1 = module_0.SomePrice(*list_0)
        price_2 = some_price_1.add(price_1)
        price_3 = some_price_1.add(price_2)
        price_4 = some_price_0.subtract(price_1)
        date_0 = None
        price_5 = price_1.with_dov(date_0)
        price_6 = module_0.Price()
        bool_4 = price_6.gt(price_0)
        bool_5 = money_1.__gt__(money_1)
        bool_6 = some_money_0.gte(money_0)
        bool_7 = money_2.lte(money_0)
        money_3 = some_money_0.add(money_2)
        bool_8 = price_5.gte(price_3)
        bool_9 = money_3.lt(money_0)
        money_4 = some_money_0.add(money_2)
        currency_0 = None
        price_7 = price_5.convert(currency_0)
    except BaseException:
        pass

def test_case_72():
    try:
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.positive()
        bool_0 = none_money_0.is_equal(none_money_0)
        none_price_0 = module_0.NonePrice()
        var_0 = money_0.__round__()
        price_0 = none_price_0.negative()
        list_0 = [var_0, bool_0, bool_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_1 = some_price_0.subtract(price_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        money_1 = some_money_0.add(money_0)
        bool_1 = none_money_0.gte(money_1)
        bool_2 = some_price_0.lt(price_1)
        money_2 = money_1.subtract(money_1)
        price_2 = some_price_0.add(price_1)
        price_3 = some_price_0.add(price_2)
        bool_3 = some_money_0.gte(money_1)
        price_4 = some_price_0.subtract(price_2)
        bool_4 = some_money_0.lt(money_1)
        bool_5 = price_4.gt(price_0)
        bool_6 = money_1.__gt__(money_1)
        money_3 = money_1.__pos__()
        str_0 = 'E~)`X\\ 7UfA3=C:'
        int_0 = 816
        currency_type_0 = module_3.CurrencyType.METAL
        decimal_0 = module_1.Decimal()
        int_1 = 3960
        currency_0 = module_3.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_1)
        price_5 = price_4.convert(currency_0, bool_3)
    except BaseException:
        pass

def test_case_73():
    try:
        none_money_0 = module_0.NoneMoney()
        none_money_1 = module_0.NoneMoney()
        money_0 = module_0.Money()
        list_0 = []
        none_money_2 = module_0.NoneMoney(*list_0)
        money_1 = money_0.negative()
    except BaseException:
        pass

def test_case_74():
    try:
        list_0 = []
        none_money_0 = module_0.NoneMoney(*list_0)
        dict_0 = {}
        price_0 = module_0.Price(*list_0, **dict_0)
        price_1 = price_0.__pos__()
        str_0 = 'X'
        int_0 = 177
        currency_type_0 = module_3.CurrencyType.METAL
        decimal_0 = module_1.Decimal()
        currency_0 = module_3.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        str_1 = "K>'}_ZO"
        str_2 = ')<=Vu%u3:cM>Zr'
        dict_1 = {str_1: currency_type_0, str_2: decimal_0, str_2: str_2}
        date_0 = module_2.date(**dict_1)
    except BaseException:
        pass

def test_case_75():
    try:
        none_money_0 = module_0.NoneMoney()
        bool_0 = none_money_0.is_equal(none_money_0)
        price_0 = module_0.Price()
        var_0 = None
        price_1 = price_0.scalar_subtract(var_0)
    except BaseException:
        pass

def test_case_76():
    try:
        money_0 = module_0.Money()
        bool_0 = money_0.__lt__(money_0)
        money_1 = money_0.scalar_add(money_0)
    except BaseException:
        pass

def test_case_77():
    try:
        none_money_0 = module_0.NoneMoney()
        bool_0 = none_money_0.is_equal(none_money_0)
        var_0 = None
        money_0 = none_money_0.divide(var_0)
        none_price_0 = module_0.NonePrice()
        var_1 = money_0.__round__()
        price_0 = none_price_0.negative()
        list_0 = [var_1, bool_0, bool_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_1 = some_price_0.subtract(price_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        money_1 = some_money_0.add(money_0)
        bool_1 = none_money_0.gte(money_0)
        bool_2 = some_price_0.lt(price_1)
        price_2 = some_price_0.add(price_1)
        price_3 = some_price_0.add(price_0)
        price_4 = some_price_0.positive()
        bool_3 = some_money_0.gte(money_0)
        bool_4 = some_price_0.lte(price_2)
        price_5 = some_price_0.negative()
        bool_5 = money_1.__gt__(money_1)
        money_2 = some_money_0.subtract(money_1)
        bool_6 = some_money_0.gte(money_1)
        bool_7 = money_2.lte(money_2)
        price_6 = price_5.__sub__(price_5)
        bool_8 = price_4.gte(price_0)
        currency_0 = None
        price_7 = none_price_0.positive()
        price_8 = module_0.Price()
        price_9 = price_8.with_ccy(currency_0)
        currency_1 = None
        money_3 = some_money_0.convert(currency_1)
    except BaseException:
        pass

def test_case_78():
    try:
        var_0 = None
        none_price_0 = module_0.NonePrice()
        bool_0 = none_price_0.is_equal(var_0)
        price_0 = module_0.Price()
        float_0 = price_0.__float__()
        dict_0 = {}
        some_money_0 = module_0.SomeMoney(**dict_0)
    except BaseException:
        pass

def test_case_79():
    try:
        none_money_0 = module_0.NoneMoney()
        bool_0 = none_money_0.is_equal(none_money_0)
        var_0 = None
        money_0 = none_money_0.divide(var_0)
        none_price_0 = module_0.NonePrice()
        var_1 = money_0.__round__()
        price_0 = none_price_0.negative()
        list_0 = [var_1, bool_0, bool_0]
        money_1 = price_0.times(var_0)
        some_price_0 = module_0.SomePrice(*list_0)
        price_1 = some_price_0.subtract(price_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        money_2 = some_money_0.add(money_0)
        bool_1 = some_price_0.as_boolean()
        bool_2 = none_money_0.gte(money_0)
        bool_3 = some_price_0.lt(price_1)
        bool_4 = some_money_0.lte(money_2)
        price_2 = some_price_0.add(price_1)
        price_3 = some_price_0.add(price_2)
        bool_5 = some_money_0.gte(money_1)
        price_4 = some_price_0.subtract(price_2)
        bool_6 = some_money_0.lt(money_2)
        bool_7 = price_4.gt(price_0)
        price_5 = some_price_0.add(price_4)
        money_3 = some_money_0.add(money_2)
        money_4 = some_money_0.subtract(money_3)
        float_0 = price_4.as_float()
        bool_8 = price_4.gte(price_4)
        currency_0 = None
        price_6 = none_price_0.positive()
        price_7 = price_3.with_ccy(currency_0)
        money_5 = some_money_0.add(money_4)
        bool_9 = price_7.lte(price_5)
    except BaseException:
        pass

def test_case_80():
    try:
        none_money_0 = module_0.NoneMoney()
        money_0 = module_0.Money()
        none_money_1 = module_0.NoneMoney()
        money_1 = money_0.subtract(money_0)
    except BaseException:
        pass

def test_case_81():
    try:
        none_money_0 = module_0.NoneMoney()
        bool_0 = none_money_0.is_equal(none_money_0)
        var_0 = None
        money_0 = none_money_0.divide(var_0)
        none_price_0 = module_0.NonePrice()
        var_1 = money_0.__round__()
        price_0 = none_price_0.negative()
        list_0 = [var_1, bool_0, bool_0]
        money_1 = price_0.times(var_0)
        some_price_0 = module_0.SomePrice(*list_0)
        price_1 = some_price_0.subtract(price_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        money_2 = some_money_0.add(money_0)
        bool_1 = some_price_0.as_boolean()
        bool_2 = some_price_0.lt(price_1)
        price_2 = none_price_0.multiply(var_0)
        price_3 = some_price_0.add(price_1)
        bool_3 = some_money_0.gte(money_1)
        price_4 = some_price_0.subtract(price_3)
        bool_4 = some_money_0.lt(money_2)
        bool_5 = price_4.gt(price_0)
        price_5 = some_price_0.add(price_4)
        money_3 = some_money_0.add(money_2)
        bool_6 = none_money_0.as_boolean()
        money_4 = some_money_0.subtract(money_3)
        str_0 = '\n    Returns the last coupon payment date.\n\n    >>> _last_payment_date(datetime.date(2014,  1,  1), datetime.date(2015, 12, 31), 1)\n    datetime.date(2015, 1, 1)\n\n    >>> _last_payment_date(datetime.date(2015,  1,  1), datetime.date(2015, 12, 31), 1)\n    datetime.date(2015, 1, 1)\n\n    >>> _last_payment_date(datetime.date(2014,  1,  1), datetime.date(2015, 12, 31), 2)\n    datetime.date(2015, 7, 1)\n\n    >>> _last_payment_date(datetime.date(2014,  1,  1), datetime.date(2015,  8, 31), 2)\n    datetime.date(2015, 7, 1)\n\n    >>> _last_payment_date(datetime.date(2014,  1,  1), datetime.date(2015,  4, 30), 2)\n    datetime.date(2015, 1, 1)\n\n    >>> _last_payment_date(datetime.date(2014,  6,  1), datetime.date(2015,  4, 30), 1)\n    datetime.date(2014, 6, 1)\n\n    >>> _last_payment_date(datetime.date(2008,  7,  7), datetime.date(2015, 10,  6), 4)\n    datetime.date(2015, 7, 7)\n\n    >>> _last_payment_date(datetime.date(2014, 12,  9), datetime.date(2015, 12,  4), 1)\n    datetime.date(2014, 12, 9)\n\n    >>> _last_payment_date(datetime.date(2012, 12, 15), datetime.date(2016,  1,  6), 2)\n    datetime.date(2015, 12, 15)\n\n    >>> _last_payment_date(datetime.date(2012, 12, 15), datetime.date(2015, 12, 31), 2)\n    datetime.date(2015, 12, 15)\n    '
        int_0 = -824
        currency_type_0 = module_3.CurrencyType.MONEY
        decimal_0 = module_1.Decimal()
        currency_0 = module_3.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        money_5 = some_money_0.with_ccy(currency_0)
        bool_7 = money_5.__le__(money_3)
    except BaseException:
        pass

def test_case_82():
    try:
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.positive()
        bool_0 = none_money_0.is_equal(none_money_0)
        none_price_0 = module_0.NonePrice()
        money_1 = money_0.subtract(money_0)
        var_0 = money_0.__round__()
        price_0 = none_price_0.negative()
        list_0 = [var_0, bool_0, bool_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_1 = some_price_0.subtract(price_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        money_2 = some_money_0.add(money_0)
        bool_1 = some_price_0.as_boolean()
        bool_2 = none_money_0.gte(money_1)
        bool_3 = some_price_0.lt(price_1)
        money_3 = money_2.subtract(money_2)
        price_2 = some_price_0.add(price_1)
        price_3 = some_price_0.add(price_2)
        price_4 = some_price_0.subtract(price_2)
        date_0 = None
        price_5 = price_0.with_dov(date_0)
        bool_4 = some_money_0.lt(money_2)
        bool_5 = price_4.gt(price_0)
        bool_6 = money_2.__gt__(money_2)
        bool_7 = some_money_0.gte(money_3)
        bool_8 = money_2.lte(money_1)
        money_4 = some_money_0.add(money_0)
        bool_9 = price_1.gte(price_1)
        bool_10 = money_3.lt(money_1)
        money_5 = some_money_0.add(money_3)
        currency_0 = None
        dict_0 = {}
        price_6 = module_0.Price(**dict_0)
        price_7 = price_6.convert(currency_0)
    except BaseException:
        pass

def test_case_83():
    try:
        price_0 = module_0.Price()
        str_0 = 'wVAg=`3h01cNN\rnHpdop'
        list_0 = []
        none_money_0 = module_0.NoneMoney(*list_0)
        list_1 = [str_0, none_money_0, list_0]
        bool_0 = price_0.__bool__()
        some_price_0 = module_0.SomePrice(*list_1)
        price_1 = some_price_0.add(price_0)
    except BaseException:
        pass

def test_case_84():
    try:
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.abs()
        bool_0 = none_money_0.is_equal(none_money_0)
        none_price_0 = module_0.NonePrice()
        var_0 = money_0.__round__()
        price_0 = none_price_0.negative()
        list_0 = [var_0, bool_0, bool_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_1 = some_price_0.subtract(price_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        money_1 = some_money_0.add(money_0)
        bool_1 = some_price_0.as_boolean()
        bool_2 = some_price_0.lt(price_1)
        bool_3 = none_money_0.is_equal(none_price_0)
        money_2 = money_1.subtract(money_1)
        price_2 = some_price_0.add(price_1)
        price_3 = some_price_0.add(price_2)
        bool_4 = some_money_0.gte(money_1)
        price_4 = some_price_0.subtract(price_2)
        date_0 = None
        price_5 = price_0.with_dov(date_0)
        bool_5 = some_money_0.lt(money_1)
        bool_6 = money_1.__gt__(money_1)
        money_3 = money_1.__pos__()
        money_4 = some_money_0.subtract(money_3)
        money_5 = module_0.Money()
        bool_7 = money_4.lte(money_3)
        money_6 = some_money_0.add(money_4)
        bool_8 = price_3.gte(price_3)
        money_7 = some_money_0.add(money_3)
        bool_9 = money_5.__eq__(bool_6)
        currency_0 = None
        money_8 = some_money_0.convert(currency_0)
    except BaseException:
        pass

def test_case_85():
    try:
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.negative()
        bool_0 = none_money_0.is_equal(none_money_0)
        var_0 = None
        none_price_0 = module_0.NonePrice()
        money_1 = money_0.subtract(money_0)
        var_1 = money_0.__round__()
        price_0 = none_price_0.negative()
        list_0 = [var_1, bool_0, bool_0]
        some_price_0 = module_0.SomePrice(*list_0)
        money_2 = money_1.__mul__(var_0)
        price_1 = some_price_0.subtract(price_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        money_3 = some_money_0.add(money_0)
        bool_1 = some_price_0.as_boolean()
        bool_2 = some_price_0.lt(price_1)
        money_4 = money_3.subtract(money_3)
        price_2 = some_price_0.add(price_1)
        price_3 = some_price_0.add(price_2)
        bool_3 = some_money_0.gte(money_2)
        price_4 = some_price_0.subtract(price_2)
        date_0 = None
        price_5 = price_2.with_dov(date_0)
        bool_4 = some_money_0.lt(money_1)
        bool_5 = price_1.gt(price_1)
        bool_6 = money_3.__gt__(money_4)
        money_5 = money_4.__pos__()
        money_6 = some_money_0.subtract(money_4)
        money_7 = module_0.Money()
        bool_7 = money_7.lte(money_6)
        money_8 = some_money_0.add(money_5)
        bool_8 = price_2.gte(price_0)
        money_9 = some_money_0.add(money_7)
    except BaseException:
        pass

def test_case_86():
    try:
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.abs()
        bool_0 = none_money_0.is_equal(none_money_0)
        var_0 = None
        none_price_0 = module_0.NonePrice()
        money_1 = money_0.subtract(money_0)
        var_1 = money_0.__round__()
        price_0 = none_price_0.negative()
        list_0 = [var_1, bool_0, bool_0]
        some_price_0 = module_0.SomePrice(*list_0)
        money_2 = money_1.__mul__(var_0)
        price_1 = some_price_0.subtract(price_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        money_3 = some_money_0.add(money_0)
        bool_1 = some_price_0.as_boolean()
        bool_2 = some_price_0.lt(price_1)
        money_4 = money_3.subtract(money_3)
        price_2 = some_price_0.add(price_1)
        price_3 = some_price_0.add(price_2)
        bool_3 = some_money_0.gte(money_3)
        price_4 = some_price_0.subtract(price_2)
        date_0 = None
        price_5 = price_0.with_dov(date_0)
        bool_4 = some_money_0.lt(money_3)
        bool_5 = price_4.gt(price_0)
        bool_6 = money_3.__gt__(money_3)
        money_5 = money_3.__pos__()
        money_6 = module_0.Money()
        bool_7 = money_2.lte(money_6)
        money_7 = some_money_0.abs()
        money_8 = some_money_0.add(money_7)
        money_9 = money_6.floor_divide(var_0)
    except BaseException:
        pass

def test_case_87():
    try:
        none_money_0 = module_0.NoneMoney()
        money_0 = module_0.Money()
        none_money_1 = module_0.NoneMoney()
        money_1 = none_money_1.add(money_0)
        money_2 = money_1.add(money_0)
    except BaseException:
        pass

def test_case_88():
    try:
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.negative()
        bool_0 = none_money_0.is_equal(none_money_0)
        none_price_0 = module_0.NonePrice()
        money_1 = money_0.subtract(money_0)
        var_0 = money_0.__round__()
        price_0 = none_price_0.negative()
        list_0 = [var_0, bool_0, bool_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_1 = some_price_0.subtract(price_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        money_2 = some_money_0.add(money_0)
        bool_1 = some_price_0.as_boolean()
        bool_2 = some_price_0.lt(price_1)
        money_3 = money_2.subtract(money_2)
        price_2 = some_price_0.add(price_1)
        price_3 = some_price_0.add(price_2)
        bool_3 = some_money_0.gte(money_2)
        price_4 = some_price_0.subtract(price_2)
        date_0 = None
        str_0 = '%uRy2\rK"mtuNi6?iSUkR'
        money_4 = money_3.__floordiv__(str_0)
        price_5 = price_0.with_dov(date_0)
        bool_4 = some_money_0.lt(money_2)
        bool_5 = price_5.as_boolean()
        bool_6 = money_2.__gt__(money_2)
        price_6 = price_0.floor_divide(price_4)
        money_5 = some_money_0.subtract(money_3)
        bool_7 = money_5.lte(money_5)
        money_6 = some_money_0.add(money_5)
        bool_8 = price_3.gte(price_3)
        money_7 = some_money_0.add(money_4)
        currency_0 = None
        money_8 = some_money_0.convert(currency_0)
    except BaseException:
        pass