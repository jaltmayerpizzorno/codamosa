# Automatically generated by Pynguin.
import ansible.cli.doc as module_0

def test_case_0():
    try:
        plugin_not_found_0 = module_0.PluginNotFound()
        var_0 = module_0.jdump(plugin_not_found_0)
    except BaseException:
        pass

def test_case_1():
    try:
        float_0 = 2.0
        doc_c_l_i_0 = module_0.DocCLI(float_0)
        var_0 = module_0.jdump(doc_c_l_i_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = None
        list_0 = [str_0]
        list_1 = [str_0, list_0, list_0, list_0]
        doc_c_l_i_0 = module_0.DocCLI(list_1)
        var_0 = doc_c_l_i_0.run()
    except BaseException:
        pass

def test_case_3():
    try:
        float_0 = 2.4985730245271474
        doc_c_l_i_0 = module_0.DocCLI(float_0)
        int_0 = None
        var_0 = doc_c_l_i_0.display_plugin_list(int_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'U'
        list_0 = []
        str_1 = 'mi"`jtHQ\nH@@}'
        str_2 = 'dyX2&>$zY*;S1"IK3t-'
        str_3 = None
        dict_0 = {str_2: str_2, str_3: str_3, str_2: str_2, str_3: str_3}
        doc_c_l_i_0 = module_0.DocCLI(dict_0)
        var_0 = doc_c_l_i_0.namespace_from_plugin_filepath(str_0, list_0, str_1)
    except BaseException:
        pass

def test_case_5():
    try:
        role_mixin_0 = module_0.RoleMixin()
        list_0 = [role_mixin_0, role_mixin_0, role_mixin_0]
        doc_c_l_i_0 = module_0.DocCLI(list_0)
        float_0 = -1729.99912
        bytes_0 = None
        list_1 = [bytes_0]
        doc_c_l_i_1 = module_0.DocCLI(list_1)
        var_0 = doc_c_l_i_1.format_snippet(role_mixin_0, doc_c_l_i_0, float_0)
    except BaseException:
        pass

def test_case_6():
    try:
        int_0 = -738
        doc_c_l_i_0 = module_0.DocCLI(int_0)
        str_0 = '#$3b,w~*}W)c]kEve^t'
        dict_0 = {str_0: doc_c_l_i_0, str_0: doc_c_l_i_0, str_0: str_0}
        doc_c_l_i_1 = module_0.DocCLI(dict_0)
        list_0 = [int_0, int_0]
        list_1 = [list_0]
        dict_1 = {}
        str_1 = 'q$Uo*2.X{joCo~}\n{r'
        var_0 = doc_c_l_i_0.format_snippet(list_1, dict_1, str_1)
        var_1 = doc_c_l_i_0.display_plugin_list(list_0)
    except BaseException:
        pass

def test_case_7():
    try:
        tuple_0 = None
        int_0 = 29
        doc_c_l_i_0 = module_0.DocCLI(int_0)
        var_0 = doc_c_l_i_0.print_paths(tuple_0)
    except BaseException:
        pass

def test_case_8():
    try:
        bytes_0 = b'\xf7\x1a1\x16\xf9'
        float_0 = 3967.0
        doc_c_l_i_0 = module_0.DocCLI(float_0)
        str_0 = None
        doc_c_l_i_1 = module_0.DocCLI(doc_c_l_i_0)
        var_0 = doc_c_l_i_1.get_role_man_text(str_0, bytes_0)
    except BaseException:
        pass

def test_case_9():
    try:
        plugin_not_found_0 = module_0.PluginNotFound()
        dict_0 = {plugin_not_found_0: plugin_not_found_0}
        int_0 = -1700
        doc_c_l_i_0 = module_0.DocCLI(int_0)
        var_0 = doc_c_l_i_0.get_man_text(dict_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = '?+'
        role_mixin_0 = module_0.RoleMixin()
        doc_c_l_i_0 = module_0.DocCLI(role_mixin_0)
        var_0 = doc_c_l_i_0.get_all_plugins_of_type(str_0)
    except BaseException:
        pass

def test_case_11():
    try:
        float_0 = -3613.582593
        doc_c_l_i_0 = module_0.DocCLI(float_0)
        str_0 = 'D6@Q5<Wmw'
        str_1 = 'organization'
        list_0 = [str_1, str_1, str_1]
        doc_c_l_i_1 = module_0.DocCLI(list_0)
        str_2 = 'Tai\x0b]6{JuzLI'
        str_3 = "='?FvT5\nr'&"
        set_0 = {str_3}
        doc_c_l_i_2 = module_0.DocCLI(set_0)
        str_4 = "\\7-Dd7t95&RI_'Q"
        dict_0 = {str_2: doc_c_l_i_2, str_3: str_1, str_4: str_3, str_0: str_4}
        plugin_not_found_0 = module_0.PluginNotFound()
        doc_c_l_i_3 = module_0.DocCLI(set_0)
        str_5 = "The group named '%s' has a recursive dependency loop."
        var_0 = doc_c_l_i_1.get_role_man_text(str_5, dict_0)
    except BaseException:
        pass

def test_case_12():
    try:
        list_0 = []
        plugin_not_found_0 = module_0.PluginNotFound(*list_0)
        list_1 = None
        dict_0 = {list_1: plugin_not_found_0}
        str_0 = '<l\t\t83%m&l%<W|\rz>R`'
        role_mixin_0 = module_0.RoleMixin()
        float_0 = 0.1
        role_mixin_1 = module_0.RoleMixin(*list_0)
        doc_c_l_i_0 = module_0.DocCLI(role_mixin_1)
        var_0 = doc_c_l_i_0.add_fields(plugin_not_found_0, dict_0, str_0, role_mixin_0, float_0)
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = None
        list_0 = [str_0]
        doc_c_l_i_0 = None
        tuple_0 = None
        set_0 = None
        float_0 = 0.5
        role_mixin_0 = module_0.RoleMixin()
        doc_c_l_i_1 = module_0.DocCLI(role_mixin_0)
        var_0 = doc_c_l_i_1.format_plugin_doc(doc_c_l_i_0, list_0, tuple_0, set_0, float_0, set_0)
    except BaseException:
        pass

def test_case_14():
    try:
        str_0 = 'n|s%X_24nz'
        doc_c_l_i_0 = module_0.DocCLI(str_0)
        var_0 = doc_c_l_i_0.run()
        str_1 = '@R9mDyQe=+\\Q\x0c.E*('
        dict_0 = {str_1: str_1}
        var_1 = doc_c_l_i_0.run()
        var_2 = doc_c_l_i_0.get_man_text(dict_0, dict_0)
    except BaseException:
        pass

def test_case_15():
    try:
        str_0 = 'n|s%X_24nz'
        doc_c_l_i_0 = module_0.DocCLI(str_0)
        var_0 = doc_c_l_i_0.run()
        str_1 = 'r@R9mDyQe=+\\Q\x0c`E*('
        dict_0 = {str_1: str_1}
        str_2 = ':jsb]Ny]v-j&p6X\r@'
        float_0 = 2293.3501
        tuple_0 = (doc_c_l_i_0, str_2, float_0, dict_0)
        bytes_0 = b'j'
        var_1 = module_0.add_collection_plugins(tuple_0, bytes_0)
        str_3 = 'M7sx(='
        doc_c_l_i_1 = module_0.DocCLI(str_3)
        var_2 = doc_c_l_i_0.get_plugin_metadata(doc_c_l_i_1, tuple_0)
    except BaseException:
        pass

def test_case_16():
    try:
        str_0 = 'n|s%X_2l4nz'
        doc_c_l_i_0 = module_0.DocCLI(str_0)
        var_0 = doc_c_l_i_0.run()
        dict_0 = {str_0: doc_c_l_i_0}
        str_1 = 'inventory'
        var_1 = doc_c_l_i_0.format_snippet(dict_0, str_1, str_1)
    except BaseException:
        pass

def test_case_17():
    try:
        str_0 = 'n|s%X_24nz'
        doc_c_l_i_0 = module_0.DocCLI(str_0)
        var_0 = doc_c_l_i_0.run()
        dict_0 = {str_0: doc_c_l_i_0}
        str_1 = 'xvJO4U'
        int_0 = None
        var_1 = doc_c_l_i_0.run()
        var_2 = module_0.add_collection_plugins(int_0, int_0)
        str_2 = 'inventory'
        var_3 = doc_c_l_i_0.format_snippet(dict_0, str_1, str_2)
        float_0 = -2415.9
        var_4 = doc_c_l_i_0.get_plugin_metadata(str_2, float_0)
    except BaseException:
        pass