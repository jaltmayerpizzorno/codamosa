# Automatically generated by Pynguin.
import requests.models as module_0
import httpie.context as module_1
import httpie.output.writer as module_2
import httpie.models as module_3
import typing as module_4
import httpie.output.streams as module_5
import argparse as module_6

def test_case_0():
    try:
        namespace_0 = None
        response_0 = module_0.Response()
        environment_0 = module_1.Environment()
        list_0 = [environment_0, namespace_0, namespace_0]
        var_0 = module_2.write_message(response_0, environment_0, namespace_0, list_0)
    except BaseException:
        pass

def test_case_1():
    try:
        environment_0 = module_1.Environment()
        prepared_request_0 = None
        namespace_0 = None
        var_0 = module_2.write_message(prepared_request_0, environment_0, namespace_0)
        tuple_0 = module_2.get_stream_type_and_kwargs(environment_0, namespace_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'flush'
        var_0 = module_2.write_stream(str_0, str_0, str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '#4e4e4e'
        h_t_t_p_message_0 = module_3.HTTPMessage(str_0)
        i_o_0 = module_4.IO()
        var_0 = i_o_0.__enter__()
        base_stream_0 = module_5.BaseStream(h_t_t_p_message_0, var_0, h_t_t_p_message_0)
        text_i_o_0 = module_4.TextIO()
        bool_0 = None
        var_1 = module_2.write_stream_with_colors_win_py3(base_stream_0, text_i_o_0, bool_0)
    except BaseException:
        pass

def test_case_4():
    try:
        environment_0 = module_1.Environment()
        namespace_0 = module_6.Namespace()
        tuple_0 = module_2.get_stream_type_and_kwargs(environment_0, namespace_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = ''
        environment_0 = module_1.Environment()
        namespace_0 = module_6.Namespace()
        bool_0 = True
        var_0 = module_2.write_message(str_0, environment_0, namespace_0, bool_0, bool_0)
    except BaseException:
        pass

def test_case_6():
    try:
        namespace_0 = module_6.Namespace()
        environment_0 = module_1.Environment()
        response_0 = module_0.Response()
        bool_0 = False
        var_0 = module_2.build_output_stream_for_message(namespace_0, environment_0, response_0, bool_0, bool_0)
        var_1 = list(var_0)
    except BaseException:
        pass

def test_case_7():
    try:
        environment_0 = module_1.Environment()
        prepared_request_0 = module_0.PreparedRequest()
        str_0 = 'stream'
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
        namespace_0 = module_6.Namespace(**dict_0)
        var_0 = module_2.write_message(prepared_request_0, environment_0, namespace_0, str_0)
    except BaseException:
        pass