# Automatically generated by Pynguin.
import ansible.plugins.shell.powershell as module_0

def test_case_0():
    pass

def test_case_1():
    str_0 = '\n        Polls for the specified JID to be complete\n        '
    shell_module_0 = module_0.ShellModule()
    var_0 = shell_module_0.get_remote_filename(str_0)

def test_case_2():
    dict_0 = None
    shell_module_0 = module_0.ShellModule()
    var_0 = shell_module_0.expand_user(dict_0)

def test_case_3():
    shell_module_0 = module_0.ShellModule()
    var_0 = shell_module_0.exists(shell_module_0)

def test_case_4():
    set_0 = set()
    shell_module_0 = module_0.ShellModule()
    var_0 = shell_module_0.checksum(set_0)

def test_case_5():
    shell_module_0 = module_0.ShellModule()
    str_0 = '#!powershell'
    var_0 = shell_module_0.build_module_command(str_0, str_0, str_0)

def test_case_6():
    shell_module_0 = module_0.ShellModule()
    str_0 = 'Test_env'
    str_1 = '#!test'
    str_2 = 'Test_cmd'
    str_3 = 'test/test/test'
    var_0 = shell_module_0.build_module_command(str_0, str_1, str_2, str_3)
    var_1 = print(var_0)

def test_case_7():
    float_0 = -511.487667
    dict_0 = None
    str_0 = 'RWnV'
    dict_1 = {str_0: str_0, str_0: dict_0}
    dict_2 = {float_0: dict_0, float_0: dict_0, float_0: dict_1, str_0: dict_1}
    complex_0 = None
    bool_0 = False
    tuple_0 = (complex_0, dict_2, bool_0)
    tuple_1 = (tuple_0,)
    list_0 = None
    tuple_2 = (dict_2, dict_2, tuple_1, list_0)
    str_1 = "Remove-Item '[<ansible.plugins.shell.powershell.ShellModule object at 0x7fd74ab05f30>, <ansible.plugins.shell.powershell.ShellModule object at 0x7fd74ab05f30>]' -Force;"
    list_1 = [tuple_2]
    shell_module_0 = module_0.ShellModule()
    var_0 = shell_module_0.build_module_command(tuple_2, str_0, str_1, list_1)

def test_case_8():
    shell_module_0 = module_0.ShellModule()
    str_0 = '~\\test'
    var_0 = shell_module_0.expand_user(str_0)
    str_1 = '~'
    var_1 = shell_module_0.expand_user(str_1)
    str_2 = '~foo\\test'
    var_2 = shell_module_0.expand_user(str_2)

def test_case_9():
    str_0 = 'powershell'
    shell_module_0 = module_0.ShellModule()
    str_1 = '~/foo'
    var_0 = shell_module_0.expand_user(str_1)
    str_2 = '~\\foo'
    var_1 = shell_module_0.expand_user(str_2)

def test_case_10():
    str_0 = ''
    int_0 = 10
    bool_0 = None
    shell_module_0 = module_0.ShellModule()
    var_0 = shell_module_0.expand_user(bool_0, str_0)
    bool_1 = True
    shell_module_1 = module_0.ShellModule()
    str_1 = '#!powershell'
    str_2 = 'Get-Process'
    var_1 = shell_module_1.build_module_command(str_0, str_1, str_2)
    str_3 = '2W)775P)\x0br$>7'
    var_2 = shell_module_0.exists(str_3)
    shell_module_2 = module_0.ShellModule()
    shell_module_3 = module_0.ShellModule()
    dict_0 = {}
    bool_2 = True
    tuple_0 = (bool_0, dict_0, bool_2, int_0)
    var_3 = shell_module_2.mkdtemp(shell_module_0, tuple_0, tuple_0, shell_module_1)