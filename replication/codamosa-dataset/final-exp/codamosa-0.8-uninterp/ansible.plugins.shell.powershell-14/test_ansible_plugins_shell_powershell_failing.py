# Automatically generated by Pynguin.
import ansible.plugins.shell.powershell as module_0

def test_case_0():
    try:
        bytes_0 = b'X\xae9\x0b\xb6\xde\xcc#\xe7&\xc6'
        list_0 = [bytes_0]
        shell_module_0 = module_0.ShellModule()
        var_0 = shell_module_0.env_prefix()
        shell_module_1 = module_0.ShellModule()
        var_1 = shell_module_1.wrap_for_exec(list_0)
        dict_0 = {}
        var_2 = shell_module_1.env_prefix(**dict_0)
        bytes_1 = b'\xe5\xb0\xa6\xa8\xb6Q\x99%\x05\xb6v\xa3\xd9\x8aC\xcc\x06\x96\x86s'
        var_3 = shell_module_1.expand_user(bytes_1, dict_0)
    except BaseException:
        pass

def test_case_1():
    try:
        shell_module_0 = module_0.ShellModule()
        var_0 = shell_module_0.join_path()
    except BaseException:
        pass

def test_case_2():
    try:
        shell_module_0 = module_0.ShellModule()
        var_0 = shell_module_0.path_has_trailing_slash(shell_module_0)
    except BaseException:
        pass

def test_case_3():
    try:
        shell_module_0 = module_0.ShellModule()
        dict_0 = {shell_module_0: shell_module_0}
        float_0 = -1963.222044
        list_0 = [shell_module_0, float_0]
        var_0 = shell_module_0.checksum(float_0, *list_0)
        shell_module_1 = module_0.ShellModule()
        var_1 = shell_module_1.chmod(shell_module_0, dict_0)
    except BaseException:
        pass

def test_case_4():
    try:
        dict_0 = None
        shell_module_0 = module_0.ShellModule()
        var_0 = shell_module_0.wrap_for_exec(dict_0)
        set_0 = set()
        var_1 = shell_module_0.chown(set_0, dict_0)
    except BaseException:
        pass

def test_case_5():
    try:
        shell_module_0 = module_0.ShellModule()
        var_0 = frozenset()
        str_0 = 'Osmc'
        bytes_0 = b'\xf3'
        tuple_0 = None
        shell_module_1 = module_0.ShellModule()
        var_1 = shell_module_1.remove(str_0, tuple_0)
        set_0 = {bytes_0}
        var_2 = shell_module_0.set_user_facl(str_0, bytes_0, set_0)
    except BaseException:
        pass

def test_case_6():
    try:
        bytes_0 = b'\xc7\xf4\xb5Ub'
        shell_module_0 = module_0.ShellModule()
        var_0 = shell_module_0.remove(bytes_0)
    except BaseException:
        pass

def test_case_7():
    try:
        shell_module_0 = module_0.ShellModule()
        var_0 = shell_module_0.mkdtemp()
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = "Write-Output '(-991.95534,)'"
        bool_0 = False
        complex_0 = None
        shell_module_0 = module_0.ShellModule()
        var_0 = shell_module_0.build_module_command(str_0, bool_0, complex_0)
    except BaseException:
        pass

def test_case_9():
    try:
        shell_module_0 = module_0.ShellModule()
        bool_0 = True
        var_0 = shell_module_0.exists(bool_0)
        dict_0 = {}
        int_0 = -255
        tuple_0 = (int_0,)
        list_0 = [tuple_0, dict_0]
        float_0 = 0.0
        str_0 = '1_vb\r2qm&puvA'
        dict_1 = {str_0: int_0}
        var_1 = shell_module_0.build_module_command(list_0, float_0, str_0, dict_1)
    except BaseException:
        pass

def test_case_10():
    try:
        shell_module_0 = module_0.ShellModule()
        var_0 = shell_module_0.mkdtemp(shell_module_0)
    except BaseException:
        pass

def test_case_11():
    try:
        shell_module_0 = module_0.ShellModule()
        set_0 = {shell_module_0, shell_module_0}
        list_0 = [shell_module_0, set_0]
        var_0 = shell_module_0.remove(set_0, list_0)
    except BaseException:
        pass

def test_case_12():
    try:
        int_0 = -511
        list_0 = [int_0, int_0, int_0]
        shell_module_0 = module_0.ShellModule()
        var_0 = shell_module_0.join_path(*list_0)
        bytes_0 = b'\xe6'
        shell_module_1 = module_0.ShellModule()
        var_1 = shell_module_1.expand_user(bytes_0)
    except BaseException:
        pass

def test_case_13():
    try:
        shell_module_0 = module_0.ShellModule()
        str_0 = '/root/'
        var_0 = shell_module_0.path_has_trailing_slash(str_0)
        str_1 = 'root/'
        var_1 = shell_module_0.path_has_trailing_slash(str_1)
        str_2 = 'C:\temp'
        var_2 = shell_module_0.path_has_trailing_slash(str_2)
    except BaseException:
        pass

def test_case_14():
    try:
        str_0 = ''
        int_0 = 10
        bool_0 = None
        shell_module_0 = module_0.ShellModule()
        var_0 = shell_module_0.expand_user(bool_0, str_0)
        bool_1 = True
        shell_module_1 = module_0.ShellModule()
        str_1 = '#!powershell'
        shell_module_2 = module_0.ShellModule()
        var_1 = shell_module_1.build_module_command(str_0, str_1, str_0)
        str_2 = '2W)775P)\x0br$>7'
        var_2 = shell_module_0.exists(str_2)
        shell_module_3 = module_0.ShellModule()
        var_3 = shell_module_0.mkdtemp()
    except BaseException:
        pass

def test_case_15():
    try:
        str_0 = ';5f8V\tc.x/of`?2%'
        str_1 = '/usr/bin/ansible'
        int_0 = 10
        bool_0 = True
        shell_module_0 = module_0.ShellModule()
        str_2 = 'Get-Proces'
        var_0 = shell_module_0.build_module_command(str_0, str_2, str_2)
        str_3 = 'bootstrap_wrapper.ps1'
        var_1 = shell_module_0.remove(str_2, str_1)
        var_2 = shell_module_0.get_remote_filename(str_3)
        var_3 = shell_module_0.mkdtemp(int_0, bool_0)
    except BaseException:
        pass