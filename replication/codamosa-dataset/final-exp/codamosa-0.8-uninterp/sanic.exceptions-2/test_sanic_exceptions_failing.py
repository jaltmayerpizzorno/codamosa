# Automatically generated by Pynguin.
import sanic.exceptions as module_0

def test_case_0():
    try:
        dict_0 = {}
        dict_1 = {}
        invalid_usage_0 = None
        method_not_supported_0 = module_0.MethodNotSupported(dict_0, dict_1, invalid_usage_0)
    except BaseException:
        pass

def test_case_1():
    try:
        u_r_l_build_error_0 = None
        int_0 = 2601
        str_0 = 'n$?m|O.MF_Z{k'
        list_0 = [u_r_l_build_error_0, u_r_l_build_error_0, str_0]
        invalid_usage_0 = module_0.InvalidUsage(list_0)
        load_file_exception_0 = module_0.LoadFileException(int_0, invalid_usage_0)
        content_range_error_0 = module_0.ContentRangeError(u_r_l_build_error_0, load_file_exception_0)
    except BaseException:
        pass

def test_case_2():
    try:
        int_0 = 508
        var_0 = module_0.abort(int_0)
    except BaseException:
        pass

def test_case_3():
    try:
        int_0 = -1337
        var_0 = module_0.abort(int_0)
    except BaseException:
        pass

def test_case_4():
    try:
        bytes_0 = b'\x05\xd3\x85d\xc0\x19\xd5!\xabf\xaf\xf5o\x18'
        header_expectation_failed_0 = module_0.HeaderExpectationFailed(bytes_0)
        dict_0 = {}
        bool_0 = False
        int_0 = -3444
        u_r_l_build_error_0 = module_0.URLBuildError(dict_0, int_0)
        unauthorized_0 = module_0.Unauthorized(bytes_0, bool_0, u_r_l_build_error_0)
        int_1 = 1246
        py_file_error_0 = module_0.PyFileError(int_1)
        server_error_0 = module_0.ServerError(py_file_error_0)
        server_error_1 = module_0.ServerError(u_r_l_build_error_0, dict_0, server_error_0)
        forbidden_0 = module_0.Forbidden(server_error_1)
        method_not_supported_0 = module_0.MethodNotSupported(bytes_0, unauthorized_0, forbidden_0)
    except BaseException:
        pass

def test_case_5():
    try:
        unauthorized_0 = None
        int_0 = 510
        str_0 = 'k_fS5AB%sLrzVyP\t'
        tuple_0 = ()
        header_expectation_failed_0 = module_0.HeaderExpectationFailed(int_0, str_0, tuple_0)
        content_range_error_0 = module_0.ContentRangeError(unauthorized_0, header_expectation_failed_0)
    except BaseException:
        pass

def test_case_6():
    try:
        server_error_0 = None
        unauthorized_0 = module_0.Unauthorized(server_error_0)
        float_0 = -3046.0
        header_not_found_0 = module_0.HeaderNotFound(float_0)
        int_0 = -1337
        var_0 = module_0.abort(int_0)
    except BaseException:
        pass

def test_case_7():
    try:
        int_0 = -793
        bytes_0 = b'F\x0bc.\xaa\xa8\xaa\x80\x92\x80\x9bJ\x97'
        var_0 = module_0.abort(int_0, bytes_0)
    except BaseException:
        pass