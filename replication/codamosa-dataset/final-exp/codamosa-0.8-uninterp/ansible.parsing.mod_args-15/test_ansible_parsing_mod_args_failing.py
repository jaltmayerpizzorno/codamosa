# Automatically generated by Pynguin.
import ansible.parsing.mod_args as module_0

def test_case_0():
    try:
        float_0 = -805.38
        module_args_parser_0 = module_0.ModuleArgsParser(float_0)
    except BaseException:
        pass

def test_case_1():
    try:
        module_args_parser_0 = module_0.ModuleArgsParser()
        var_0 = module_args_parser_0.parse()
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'shell'
        str_1 = {str_0: str_0}
        module_args_parser_0 = module_0.ModuleArgsParser(str_1, str_1)
        var_0 = module_args_parser_0.parse()
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'iff'
        str_1 = {str_0: str_0, str_0: str_0}
        module_args_parser_0 = module_0.ModuleArgsParser(str_1)
        var_0 = module_args_parser_0.parse(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = "'Hnu"
        str_1 = '>|z6\tKC5/otw.'
        int_0 = -1667
        dict_0 = {str_1: int_0}
        module_args_parser_0 = module_0.ModuleArgsParser(dict_0)
        var_0 = module_args_parser_0.parse(str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = '/tmp'
        var_0 = dict(action=str_0, args=str_0)
        module_args_parser_0 = module_0.ModuleArgsParser(var_0)
        var_1 = module_args_parser_0.parse()
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'copy src=a dest=b'
        str_1 = 'local_action'
        str_2 = {str_0: str_0, str_1: str_0}
        module_args_parser_0 = module_0.ModuleArgsParser(str_2)
        var_0 = module_args_parser_0.parse(str_1)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'action'
        str_1 = 'diff'
        str_2 = {str_0: str_0, str_0: str_0, str_1: str_0, str_1: str_0}
        str_3 = {str_0: str_2, str_1: str_1, str_1: str_2, str_1: str_1}
        module_args_parser_0 = module_0.ModuleArgsParser(str_3)
        bytes_0 = b'\x94\xfc\xbd\x0f\x0f\xf5\xb1\xf8U\x02:\x16\x19\xe5\xe7%\xf0\xd5\xbe\x95'
        var_0 = module_args_parser_0.parse(bytes_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = 'action'
        str_1 = 'copy src=a dest=b'
        str_2 = 'local_action'
        str_3 = {str_0: str_1, str_2: str_1}
        module_args_parser_0 = module_0.ModuleArgsParser(str_3)
        var_0 = module_args_parser_0.parse()
    except BaseException:
        pass

def test_case_9():
    try:
        var_0 = globals()
        var_1 = locals()
        var_2 = dict()
        var_3 = None
        var_4 = dict()
        str_0 = 'action'
        var_5 = {str_0: var_3}
        module_args_parser_0 = module_0.ModuleArgsParser(var_5)
        var_6 = module_args_parser_0.parse()
    except BaseException:
        pass