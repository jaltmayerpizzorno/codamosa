# Automatically generated by Pynguin.
import ansible.playbook.task_include as module_0
import ansible.playbook.included_file as module_1

def test_case_0():
    try:
        str_0 = 'tasks/main.yml'
        task_include_0 = module_0.TaskInclude()
        included_file_0 = module_1.IncludedFile(str_0, task_include_0, task_include_0, task_include_0)
        var_0 = included_file_0.__eq__(included_file_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = None
        bool_0 = True
        int_0 = 400
        dict_0 = None
        str_1 = 'I ^'
        str_2 = 'Connection failure: connection was closed before a valid response was received: %s'
        included_file_0 = module_1.IncludedFile(int_0, dict_0, str_1, str_2)
        int_1 = -2410
        str_3 = 'SHUTDOWN_COMMAND_ARGS'
        dict_1 = {int_1: str_3, int_1: int_1, str_3: str_3}
        float_0 = 1093.0
        included_file_1 = module_1.IncludedFile(int_1, str_3, dict_1, float_0)
        var_0 = included_file_1.process_include_results(str_0, bool_0, included_file_0, str_1)
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b'T2bh)\x0b\x0c\xbcN0\x04s'
        dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
        list_0 = [dict_0, dict_0]
        int_0 = -206
        tuple_0 = (list_0, int_0)
        set_0 = set()
        str_0 = '$Qq,#N2 K(y\\PcG7Z'
        bytes_1 = b'K\x84/\xfd5ihW\xf9\x82\x9a\x10\x80\xc4\xbf'
        tuple_1 = ()
        dict_1 = {str_0: str_0, str_0: tuple_1, str_0: tuple_1}
        included_file_0 = module_1.IncludedFile(str_0, bytes_1, dict_1, tuple_1)
        var_0 = included_file_0.process_include_results(list_0, tuple_0, set_0, int_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'r1/tasks/main.yml'
        var_0 = None
        included_file_0 = module_1.IncludedFile(str_0, var_0, var_0, var_0)
        str_1 = 'h1'
        var_1 = included_file_0.add_host(str_1)
        var_2 = included_file_0.add_host(str_1)
    except BaseException:
        pass