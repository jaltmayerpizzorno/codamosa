# Automatically generated by Pynguin.
import pymonet.semigroups as module_0

def test_case_0():
    pass

def test_case_1():
    int_0 = -851
    first_0 = module_0.First(int_0)

def test_case_2():
    str_0 = 'pE{Dl'
    all_0 = module_0.All(str_0)
    str_1 = '\\JH-F3'
    max_0 = module_0.Max(str_1)
    first_0 = module_0.First(max_0)
    all_1 = module_0.All(first_0)
    all_2 = all_1.concat(all_0)
    all_3 = all_2.concat(all_1)
    str_2 = all_2.__str__()
    str_3 = all_2.__str__()

def test_case_3():
    float_0 = 2334.0
    max_0 = module_0.Max(float_0)
    one_0 = module_0.One(max_0)
    min_0 = module_0.Min(one_0)
    str_0 = min_0.__str__()

def test_case_4():
    bytes_0 = b' `\x85\xa0h'
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    min_0 = module_0.Min(dict_0)
    bool_0 = True
    one_0 = module_0.One(bool_0)
    var_0 = one_0.concat(min_0)
    int_0 = -1602
    max_0 = module_0.Max(int_0)
    min_1 = module_0.Min(bytes_0)
    str_0 = min_1.__str__()

def test_case_5():
    int_0 = -3596
    str_0 = ';'
    set_0 = {str_0, int_0, int_0, int_0}
    last_0 = module_0.Last(set_0)
    min_0 = module_0.Min(str_0)
    str_1 = min_0.__str__()
    first_0 = module_0.First(int_0)
    str_2 = first_0.__str__()
    bytes_0 = None
    max_0 = module_0.Max(bytes_0)
    one_0 = None
    all_0 = module_0.All(one_0)

def test_case_6():
    bool_0 = None
    min_0 = module_0.Min(bool_0)
    one_0 = module_0.One(bool_0)
    bytes_0 = b'\x17\x8c\xa0\xfd\xbfS\xc5\xf6N\x03nV`\xa3Q\xecK\xdc\xbc'
    last_0 = module_0.Last(bytes_0)
    var_0 = one_0.concat(last_0)
    first_0 = module_0.First(min_0)
    max_0 = module_0.Max(first_0)
    int_0 = 2447
    min_1 = module_0.Min(int_0)
    str_0 = min_0.__str__()

def test_case_7():
    int_0 = 1
    min_0 = module_0.Min(int_0)
    var_0 = min_0.concat(min_0)
    str_0 = None
    min_1 = module_0.Min(str_0)

def test_case_8():
    tuple_0 = ()
    list_0 = []
    first_0 = module_0.First(list_0)
    sum_0 = None
    semigroup_0 = module_0.Semigroup(sum_0)
    all_0 = module_0.All(semigroup_0)
    semigroup_1 = None
    semigroup_2 = module_0.Semigroup(semigroup_1)
    semigroup_3 = module_0.Semigroup(semigroup_2)
    first_1 = module_0.First(tuple_0)
    all_1 = module_0.All(tuple_0)
    sum_1 = module_0.Sum(first_1)
    all_2 = module_0.All(sum_1)
    all_3 = module_0.All(tuple_0)
    all_4 = all_3.concat(all_2)
    all_5 = all_4.concat(all_1)
    list_1 = [all_2, first_1, all_3, tuple_0]
    last_0 = module_0.Last(list_1)
    map_0 = module_0.Map(last_0)
    sum_2 = module_0.Sum(map_0)
    str_0 = first_1.__str__()
    str_1 = 'p2tV3'
    map_1 = module_0.Map(str_1)
    all_6 = module_0.All(map_1)

def test_case_9():
    str_0 = 'a'
    int_0 = 1
    sum_0 = module_0.Sum(int_0)
    sum_1 = {str_0: sum_0}
    map_0 = module_0.Map(sum_1)
    int_1 = 2
    sum_2 = module_0.Sum(int_1)
    sum_3 = {str_0: sum_2}
    map_1 = module_0.Map(sum_3)
    var_0 = map_0.concat(map_1)
    sum_4 = module_0.Sum(int_1)
    sum_5 = {str_0: sum_4}
    map_2 = module_0.Map(sum_5)

def test_case_10():
    int_0 = 1
    min_0 = module_0.Min(int_0)
    int_1 = 2
    min_1 = module_0.Min(int_1)
    var_0 = min_0.concat(min_1)
    min_2 = module_0.Min(int_0)
    min_3 = module_0.Min(int_1)
    min_4 = module_0.Min(int_0)
    var_1 = min_3.concat(min_4)
    min_5 = module_0.Min(int_0)