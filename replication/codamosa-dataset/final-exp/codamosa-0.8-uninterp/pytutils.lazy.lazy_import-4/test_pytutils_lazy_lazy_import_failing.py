# Automatically generated by Pynguin.
import pytutils.lazy.lazy_import as module_0

def test_case_0():
    try:
        bytes_0 = b'\x9b%:S\r\x926\xb7'
        bool_0 = False
        illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(bytes_0, bool_0)
        var_0 = illegal_use_of_scope_replacer_0.__repr__()
    except BaseException:
        pass

def test_case_1():
    try:
        float_0 = -322.671
        set_0 = {float_0, float_0, float_0}
        list_0 = [set_0]
        illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(float_0, set_0, list_0)
        var_0 = illegal_use_of_scope_replacer_0.__unicode__()
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'LINEMODE'
        dict_0 = {str_0: str_0, str_0: str_0}
        illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(dict_0, str_0)
        var_0 = illegal_use_of_scope_replacer_0.__unicode__()
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '[;p5dOTY(YlX]WAyC_'
        bool_0 = True
        illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(bool_0, bool_0)
        var_0 = illegal_use_of_scope_replacer_0.__eq__(str_0)
        str_1 = '\n    from bzrl%b import (        errs,        osutils,\n       brach,\n       )\n   import bzrlib.branch\n    '
        var_1 = module_0.lazy_import(str_1, str_1)
    except BaseException:
        pass

def test_case_4():
    try:
        int_0 = 2
        scope_replacer_0 = None
        int_1 = -3374
        scope_replacer_1 = module_0.ScopeReplacer(int_0, scope_replacer_0, int_1)
    except BaseException:
        pass

def test_case_5():
    try:
        var_0 = module_0.disallow_proxying()
        str_0 = '\n    from bzrlib import (        errrs,\n        osutils,\n       brch,\n       )\n    import bzrl#b.branch\n    '
        var_1 = module_0.lazy_import(str_0, str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        int_0 = -3141
        str_0 = '<='
        dict_0 = {}
        list_0 = [str_0, int_0, str_0]
        str_1 = 'r(>otb9v\r\n\n['
        str_2 = None
        dict_1 = {str_2: str_0}
        illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(list_0, str_1, dict_1)
        var_0 = illegal_use_of_scope_replacer_0.__eq__(dict_0)
        float_0 = -1622.057
        dict_2 = {}
        list_1 = [dict_2, float_0, int_0, int_0]
        import_replacer_0 = module_0.ImportReplacer(int_0, str_0, float_0, dict_2, list_1)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = '\n    from bzrlib import (        errrs,\n        osutils,\n       brch,\n       )\n    import bzrl#b.branch\n    '
        int_0 = 44
        dict_0 = {str_0: int_0, str_0: str_0, str_0: int_0}
        str_1 = ':'
        import_replacer_0 = module_0.ImportReplacer(dict_0, str_1, dict_0)
        var_0 = module_0.lazy_import(int_0, import_replacer_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = '\n    a = None\n    '
        var_0 = module_0.lazy_import(str_0, str_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = "\n    from bz0lib import ( ,      errrs,        osutils,\n       brach,'       )\n    import bzrib.brgch\n   "
        set_0 = {str_0}
        dict_0 = {str_0: set_0}
        bool_0 = False
        import_processor_0 = module_0.ImportProcessor()
        import_replacer_0 = module_0.ImportReplacer(dict_0, bool_0, set_0, import_processor_0)
        var_0 = module_0.lazy_import(set_0, import_replacer_0, import_processor_0)
    except BaseException:
        pass

def test_case_10():
    try:
        tuple_0 = ()
        bool_0 = True
        illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(tuple_0, bool_0)
        var_0 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
        var_1 = illegal_use_of_scope_replacer_0.__unicode__()
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = '\n    from bzrlib import (        errrs,        osutils,\n       brach,\n       )\n    import bzrlib.branch\n    '
        var_0 = module_0.lazy_import(str_0, str_0)
    except BaseException:
        pass

def test_case_12():
    try:
        var_0 = {}
        str_0 = 'zrl&ib'
        scope_replacer_0 = module_0.ScopeReplacer(var_0, var_0, str_0)
        var_1 = scope_replacer_0.__getattribute__(str_0)
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = '\n    from bzrlib import (        errrs,\n        osutils,\n       brch,\n       )\n    import bzrl#b.branch\n    '
        var_0 = module_0.lazy_import(str_0, str_0)
    except BaseException:
        pass

def test_case_14():
    try:
        float_0 = -59.6015
        import_processor_0 = module_0.ImportProcessor(float_0)
        str_0 = '1NR,S(\x0cc`AiCLU3N'
        var_0 = import_processor_0.lazy_import(float_0, str_0)
    except BaseException:
        pass

def test_case_15():
    try:
        str_0 = "\n    from bz0lib import ( ,      errrs,        osutils,       brach,'       )\n   Cimport bzrib.brgch   "
        var_0 = module_0.lazy_import(str_0, str_0)
    except BaseException:
        pass