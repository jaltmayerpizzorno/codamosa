# Automatically generated by Pynguin.
import flutils.codecs.raw_utf8_escape as module_0
import collections as module_1
import codecs as module_2

def test_case_0():
    try:
        str_0 = None
        tuple_0 = module_0.encode(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = b'\x90M\x98\xec\xb0\xee\xa3\xe0(\xbb\xc3\xe4'
        user_string_0 = module_1.UserString(bytes_0)
        tuple_0 = module_0.encode(user_string_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b'8gJ\xf7Da\tc\xff\xef\xe9\xfdE\x03{\xc6'
        str_0 = None
        tuple_0 = module_0.decode(bytes_0, str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        byte_string_0 = None
        tuple_0 = module_0.decode(byte_string_0)
    except BaseException:
        pass

def test_case_4():
    try:
        module_0.register()
        module_0.register()
        str_0 = 'k%I38'
        byte_string_0 = None
        tuple_0 = module_0.decode(byte_string_0, str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        int_0 = -1
        str_0 = '?'
        var_0 = __name__.split(str_0)[int_0]
        module_0.register()
        module_0.register()
        var_1 = module_2.getdecoder(var_0)
    except BaseException:
        pass

def test_case_6():
    try:
        module_0.register()
        bool_0 = False
        user_string_0 = module_1.UserString(bool_0)
        str_0 = ''
        bytes_0 = b'\x19\xd3\xd6&\xae\xb4\xcc1\xec'
        int_0 = 2473
        tuple_0 = (bytes_0, int_0)
        tuple_1 = (user_string_0, str_0, tuple_0)
        user_string_1 = module_1.UserString(tuple_1)
        tuple_2 = module_0.encode(user_string_1, user_string_0)
    except BaseException:
        pass

def test_case_7():
    try:
        bytes_0 = b'\xa7\x05$\x04\xbc.'
        str_0 = '3\t-p~5Q\tim2P'
        tuple_0 = module_0.encode(str_0, str_0)
        str_1 = 'strict'
        tuple_1 = module_0.encode(str_1)
        module_0.register()
        tuple_2 = module_0.encode(str_0)
        tuple_3 = module_0.encode(str_1)
        tuple_4 = module_0.encode(str_1)
        module_0.register()
        module_0.register()
        tuple_5 = module_0.decode(bytes_0)
    except BaseException:
        pass