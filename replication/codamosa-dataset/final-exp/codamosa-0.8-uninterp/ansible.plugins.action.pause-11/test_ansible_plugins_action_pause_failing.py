# Automatically generated by Pynguin.
import ansible.plugins.action.pause as module_0

def test_case_0():
    try:
        int_0 = -3232
        dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
        dict_1 = {}
        list_0 = [dict_0, int_0]
        ansible_timeout_exceeded_0 = module_0.AnsibleTimeoutExceeded(*list_0)
        ansible_timeout_exceeded_1 = module_0.AnsibleTimeoutExceeded(**dict_1)
        ansible_timeout_exceeded_2 = module_0.AnsibleTimeoutExceeded(*list_0)
        var_0 = module_0.timeout_handler(dict_0, ansible_timeout_exceeded_1)
    except BaseException:
        pass

def test_case_1():
    try:
        dict_0 = {}
        var_0 = module_0.clear_line(dict_0)
    except BaseException:
        pass

def test_case_2():
    try:
        tuple_0 = ()
        var_0 = module_0.is_interactive(tuple_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bool_0 = True
        var_0 = module_0.is_interactive(bool_0)
        list_0 = None
        int_0 = -417
        bool_1 = False
        bytes_0 = b'\x006\xf2]\xba\xec\x8a\xd2p'
        int_1 = -1982
        tuple_0 = ()
        action_module_0 = module_0.ActionModule(list_0, tuple_0, bytes_0, bool_1, bytes_0, int_0)
        var_1 = action_module_0.run(int_1)
    except BaseException:
        pass

def test_case_4():
    try:
        bool_0 = True
        var_0 = module_0.is_interactive(bool_0)
        list_0 = None
        str_0 = 'GI4%n<W4'
        int_0 = -417
        bool_1 = False
        bool_2 = False
        dict_0 = {}
        list_1 = [bool_2, str_0, dict_0]
        bool_3 = True
        action_module_0 = module_0.ActionModule(list_0, dict_0, list_1, bool_3, list_0, bool_1)
        ansible_timeout_exceeded_0 = module_0.AnsibleTimeoutExceeded()
        bool_4 = False
        bytes_0 = b':\xd9\xe3\xc0\xf5'
        bytes_1 = b'\x03\x1f\x81,\xbdJ\xde3F\x86\xbfZ\x8c\xbe\x96\x8a-\xf2\xfc'
        action_module_1 = module_0.ActionModule(dict_0, ansible_timeout_exceeded_0, bool_4, bytes_0, bytes_1, bytes_0)
        var_1 = action_module_1.run(dict_0, int_0)
    except BaseException:
        pass