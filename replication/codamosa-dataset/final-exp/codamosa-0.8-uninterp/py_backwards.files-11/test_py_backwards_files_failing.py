# Automatically generated by Pynguin.
import py_backwards.files as module_0

def test_case_0():
    try:
        str_0 = './test/test_sorcefiles_copy'
        iterable_0 = module_0.get_input_output_paths(str_0, str_0, str_0)
        var_0 = [x.output.parent for x in iterable_0]
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'output/sample.py'
        iterable_0 = module_0.get_input_output_paths(str_0, str_0, str_0)
        var_0 = list(iterable_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'input.txt'
        str_1 = 'output.py'
        str_2 = 'root'
        iterable_0 = module_0.get_input_output_paths(str_0, str_1, str_2)
        str_3 = 'input.txt'
        str_4 = 'output.txt'
        str_5 = 'root'
        iterable_1 = module_0.get_input_output_paths(str_3, str_4, str_5)
        str_6 = 'output.py'
        iterable_2 = module_0.get_input_output_paths(str_5, str_6, str_5)
        var_0 = list(iterable_2)
    except BaseException:
        pass