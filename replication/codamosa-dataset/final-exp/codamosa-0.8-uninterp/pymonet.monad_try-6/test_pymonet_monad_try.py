# Automatically generated by Pynguin.
import pymonet.monad_try as module_0

def test_case_0():
    pass

def test_case_1():
    str_0 = 'cgz'
    bool_0 = False
    try_0 = module_0.Try(str_0, bool_0)
    var_0 = try_0.get()

def test_case_2():
    str_0 = 'A\n'
    float_0 = -507.8
    bool_0 = False
    try_0 = module_0.Try(float_0, bool_0)
    bool_1 = try_0.__eq__(str_0)

def test_case_3():
    str_0 = 'hYbmn:}G[J'
    bool_0 = False
    try_0 = module_0.Try(str_0, bool_0)
    str_1 = try_0.__str__()

def test_case_4():
    bool_0 = True
    str_0 = 'ko0\t0t}U\n1k<O>'
    bool_1 = True
    try_0 = module_0.Try(str_0, bool_1)
    bool_2 = True
    try_1 = module_0.Try(try_0, bool_2)
    try_2 = module_0.Try(try_1, bool_1)
    var_0 = try_2.on_fail(bool_0)

def test_case_5():
    int_0 = 3192
    bool_0 = True
    bool_1 = False
    tuple_0 = ()
    try_0 = module_0.Try(tuple_0, bool_0)
    bool_2 = True
    try_1 = module_0.Try(try_0, bool_2)
    var_0 = try_1.get()
    list_0 = [bool_0, bool_0, bool_0, bool_1]
    try_2 = module_0.Try(list_0, bool_1)
    var_1 = try_2.get_or_else(int_0)

def test_case_6():
    str_0 = 'Q/D\\vW\nh3(A'
    tuple_0 = ()
    bool_0 = True
    try_0 = module_0.Try(tuple_0, bool_0)
    var_0 = try_0.get_or_else(str_0)