# Automatically generated by Pynguin.
import thonny.roughparse as module_0

def test_case_0():
    pass

def test_case_1():
    int_0 = 2272
    bytes_0 = b'Q\x07\xf8&\xe5\xb9\xe8\x18+\x11\xaa`n\xef\x05\x99D\xfe\xde\xf6'
    rough_parser_0 = module_0.RoughParser(int_0, bytes_0)
    bool_0 = False
    var_0 = rough_parser_0.set_lo(bool_0)

def test_case_2():
    int_0 = 2309
    string_translate_pseudo_mapping_0 = None
    dict_0 = {int_0: int_0, int_0: int_0, int_0: string_translate_pseudo_mapping_0, string_translate_pseudo_mapping_0: int_0}
    float_0 = -2609.7
    string_translate_pseudo_mapping_1 = module_0.StringTranslatePseudoMapping(dict_0, float_0)
    var_0 = string_translate_pseudo_mapping_1.__iter__()
    str_0 = '^!\n'
    list_0 = [string_translate_pseudo_mapping_0, string_translate_pseudo_mapping_1, string_translate_pseudo_mapping_1, var_0]
    set_0 = {float_0}
    rough_parser_0 = module_0.RoughParser(list_0, set_0)
    var_1 = rough_parser_0.set_str(str_0)
    bool_0 = False
    var_2 = rough_parser_0.get_last_stmt_bracketing()
    var_3 = rough_parser_0.set_lo(bool_0)
    var_4 = rough_parser_0.get_num_lines_in_stmt()