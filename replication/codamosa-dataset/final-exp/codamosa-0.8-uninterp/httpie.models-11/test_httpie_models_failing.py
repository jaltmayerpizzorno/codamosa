# Automatically generated by Pynguin.
import httpie.models as module_0

def test_case_0():
    try:
        int_0 = 1350
        int_1 = 3
        h_t_t_p_message_0 = module_0.HTTPMessage(int_1)
        iterable_0 = h_t_t_p_message_0.iter_body(int_0)
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = -2418
        int_1 = -415
        h_t_t_p_message_0 = module_0.HTTPMessage(int_1)
        h_t_t_p_response_0 = module_0.HTTPResponse(h_t_t_p_message_0)
        h_t_t_p_message_1 = module_0.HTTPMessage(h_t_t_p_response_0)
        iterable_0 = h_t_t_p_message_1.iter_lines(int_0)
    except BaseException:
        pass

def test_case_2():
    try:
        list_0 = []
        h_t_t_p_response_0 = module_0.HTTPResponse(list_0)
        var_0 = h_t_t_p_response_0.iter_body()
    except BaseException:
        pass

def test_case_3():
    try:
        list_0 = []
        bytes_0 = b"\x1c\xc9\x8e\xc6\xbc\x9a\x93\xbf&\xfb\x18 e\xabp'"
        set_0 = {bytes_0, bytes_0}
        h_t_t_p_request_0 = module_0.HTTPRequest(set_0)
        h_t_t_p_response_0 = module_0.HTTPResponse(h_t_t_p_request_0)
        h_t_t_p_message_0 = module_0.HTTPMessage(h_t_t_p_response_0)
        h_t_t_p_response_1 = module_0.HTTPResponse(h_t_t_p_message_0)
        var_0 = h_t_t_p_response_1.iter_lines(list_0)
    except BaseException:
        pass

def test_case_4():
    try:
        var_0 = None
        h_t_t_p_request_0 = module_0.HTTPRequest(var_0)
        int_0 = 1
        var_1 = h_t_t_p_request_0.iter_lines(int_0)
        var_2 = next(var_1)
    except BaseException:
        pass

def test_case_5():
    try:
        bool_0 = None
        int_0 = -1830
        h_t_t_p_request_0 = module_0.HTTPRequest(int_0)
        set_0 = {int_0, int_0, bool_0}
        h_t_t_p_request_1 = module_0.HTTPRequest(set_0)
        var_0 = h_t_t_p_request_0.iter_body(bool_0)
        var_1 = None
        h_t_t_p_request_2 = module_0.HTTPRequest(var_1)
        int_1 = 1
        var_2 = h_t_t_p_request_2.iter_lines(int_1)
        var_3 = next(var_0)
    except BaseException:
        pass