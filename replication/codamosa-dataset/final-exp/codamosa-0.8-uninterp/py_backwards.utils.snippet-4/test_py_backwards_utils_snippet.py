# Automatically generated by Pynguin.
import typed_ast.ast3 as module_0
import py_backwards.utils.snippet as module_1
import typed_ast._ast3 as module_2

def test_case_0():
    pass

def test_case_1():
    str_0 = 'x = 1\ny = 2\nlet(a)\na = 1 + 1\nlet(b)\n'
    var_0 = module_0.parse(str_0)
    iterable_0 = module_1.find_variables(var_0)

def test_case_2():
    keyword_0 = module_2.keyword()
    str_0 = '@0['
    dict_0 = {str_0: str_0}
    variables_replacer_0 = module_1.VariablesReplacer(dict_0)
    keyword_1 = variables_replacer_0.visit_keyword(keyword_0)

def test_case_3():
    str_0 = '"{]K+i\tk<~AR"uA"o\n{'
    list_0 = [str_0]
    class_def_0 = module_2.ClassDef(*list_0)
    dict_0 = {str_0: str_0}
    variables_replacer_0 = module_1.VariablesReplacer(dict_0)
    class_def_1 = variables_replacer_0.visit_ClassDef(class_def_0)
    dict_1 = {str_0: str_0}
    keyword_0 = module_2.keyword(**dict_1)
    dict_2 = {}
    a_s_t_0 = module_2.AST(**dict_2)
    dict_3 = {}
    module_1.extend_tree(a_s_t_0, dict_3)
    module_1.let(keyword_0)

def test_case_4():
    arg_0 = module_2.arg()
    str_0 = None
    str_1 = 'Kf\r5@9H=1gq\tN}>E<A'
    str_2 = ''
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_0, str_2: str_1}
    variables_replacer_0 = module_1.VariablesReplacer(dict_0)
    arg_1 = variables_replacer_0.visit_arg(arg_0)
    variables_replacer_1 = module_1.VariablesReplacer(dict_0)
    arg_2 = variables_replacer_1.visit_arg(arg_1)

def test_case_5():
    name_0 = module_2.Name()
    dict_0 = {}
    variables_replacer_0 = module_1.VariablesReplacer(dict_0)
    name_1 = variables_replacer_0.visit_Name(name_0)
    dict_1 = {}
    variables_replacer_1 = module_1.VariablesReplacer(dict_1)
    name_2 = variables_replacer_1.visit_Name(name_1)
    str_0 = "a[DTM6}}*,'r"
    arg_0 = module_2.arg()
    arg_1 = variables_replacer_0.visit_arg(arg_0)
    arg_2 = variables_replacer_0.visit_arg(arg_1)
    dict_2 = {str_0: str_0}
    variables_replacer_2 = module_1.VariablesReplacer(dict_2)
    name_3 = variables_replacer_2.visit_Name(name_2)

def test_case_6():
    function_def_0 = module_2.FunctionDef()
    dict_0 = {}
    variables_replacer_0 = module_1.VariablesReplacer(dict_0)
    function_def_1 = variables_replacer_0.visit_FunctionDef(function_def_0)
    list_0 = [dict_0]
    except_handler_0 = module_2.ExceptHandler(*list_0)
    except_handler_1 = variables_replacer_0.visit_ExceptHandler(except_handler_0)
    str_0 = 'r` 2I.g*2nK;"_G<'
    a_s_t_0 = module_2.AST()
    dict_1 = {str_0: str_0, str_0: a_s_t_0, str_0: a_s_t_0}
    variables_replacer_1 = module_1.VariablesReplacer(dict_1)
    iterable_0 = module_1.find_variables(a_s_t_0)

def test_case_7():
    str_0 = 'x'
    str_1 = 'x=1'
    str_2 = 'x=2'
    a_s_t_0 = module_2.AST()
    iterable_0 = module_1.find_variables(a_s_t_0)
    attribute_0 = module_2.Attribute()
    dict_0 = {}
    variables_replacer_0 = module_1.VariablesReplacer(dict_0)
    attribute_1 = variables_replacer_0.visit_Attribute(attribute_0)
    dict_1 = {str_2: a_s_t_0, str_2: str_2, str_1: str_0}
    variables_replacer_1 = module_1.VariablesReplacer(dict_1)
    attribute_2 = variables_replacer_1.visit_Attribute(attribute_1)

def test_case_8():
    class_def_0 = module_2.ClassDef()
    str_0 = '!d<FQi'
    str_1 = "'B"
    dict_0 = {str_0: str_0, str_1: str_0}
    variables_replacer_0 = module_1.VariablesReplacer(dict_0)
    class_def_1 = variables_replacer_0.visit_ClassDef(class_def_0)

def test_case_9():
    arg_0 = module_2.arg()
    str_0 = "^i,B{'.jVji9"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    variables_replacer_0 = module_1.VariablesReplacer(dict_0)
    arg_1 = variables_replacer_0.visit_arg(arg_0)
    dict_1 = {}
    variables_replacer_1 = module_1.VariablesReplacer(dict_1)
    arg_2 = variables_replacer_1.visit_arg(arg_1)

def test_case_10():
    str_0 = '4\x0c-tmS\x0b?eyP!=`'
    list_0 = [str_0]
    import_from_0 = module_2.ImportFrom(*list_0)
    dict_0 = {str_0: str_0}
    variables_replacer_0 = module_1.VariablesReplacer(dict_0)
    import_from_1 = variables_replacer_0.visit_ImportFrom(import_from_0)
    module_1.let(str_0)

def test_case_11():
    str_0 = 'extend(x)'
    var_0 = module_0.parse(str_0)
    str_1 = 'x'
    str_2 = 'x=2'
    var_1 = module_0.parse(str_2)
    var_2 = {str_1: str_2}
    module_1.extend_tree(var_0, var_2)
    list_0 = [str_0, var_0]
    import_from_0 = module_2.ImportFrom(*list_0)
    str_3 = '#('
    str_4 = '6?.Qs\x0b\nO=\nx'
    str_5 = '[:KNe3u5y4uk8"&c'
    dict_0 = {str_3: str_0, str_4: str_1, str_5: str_2}
    variables_replacer_0 = module_1.VariablesReplacer(dict_0)
    import_from_1 = variables_replacer_0.visit_ImportFrom(import_from_0)

def test_case_12():
    a_s_t_0 = module_2.AST()
    dict_0 = None
    module_1.extend_tree(a_s_t_0, dict_0)

def test_case_13():
    callable_0 = None
    snippet_0 = module_1.snippet(callable_0)

def test_case_14():
    str_0 = '\na = let(x)\nb = let(y)\nc = let(x)\nd = x\ne = y\nf = let(y)\ng = y\n'
    var_0 = module_0.parse(str_0)
    module_1.extend(str_0)
    iterable_0 = module_1.find_variables(var_0)
    var_1 = set(iterable_0)

def test_case_15():
    str_0 = '\na = let(x)\nb = let(y)\nc = let(x)\nd = x\ne = y\nf = let(y)\ng = y\n'
    var_0 = module_0.parse(str_0)
    list_0 = [str_0]
    str_1 = 'f9_TEQ)lZ0nB%R'
    dict_0 = {str_0: str_0, str_1: str_0}
    variables_replacer_0 = module_1.VariablesReplacer(dict_0)
    iterable_0 = module_1.find_variables(var_0)
    str_2 = '4\x0c-tmS\x0b?eyP!=`'
    str_3 = 'tkinter.ttk'
    dict_1 = {str_3: str_0}
    variables_replacer_1 = module_1.VariablesReplacer(dict_1)
    alias_0 = module_2.alias(*list_0)
    alias_1 = variables_replacer_1.visit_alias(alias_0)
    str_4 = 'q\x0bSIcM_}'
    dict_2 = {str_2: str_0, str_3: iterable_0, str_4: str_3}
    a_s_t_0 = module_2.AST(**dict_2)
    dict_3 = {}
    module_1.extend_tree(a_s_t_0, dict_3)
    var_1 = set(iterable_0)
    import_from_0 = module_2.ImportFrom(*list_0)
    import_from_1 = variables_replacer_0.visit_ImportFrom(import_from_0)

def test_case_16():
    str_0 = 'x = 1\ny = 2\nlet(a)\na = 1 +1\nlt(b)'
    var_0 = module_0.parse(str_0)
    iterable_0 = module_1.find_variables(var_0)

def test_case_17():
    str_0 = '\na = let(x)\nb = let(y)\nc = let(x)\nd = x\ne = y\nf = let(y)\ng = y\n'
    var_0 = module_0.parse(str_0)
    iterable_0 = module_1.find_variables(var_0)
    str_1 = '4\x0c-tmS\x0b?eyP!=`'
    str_2 = None
    str_3 = 'O_4N7?'
    str_4 = None
    dict_0 = {str_1: str_1, str_0: str_2, str_3: str_2, str_4: str_0}
    variables_replacer_0 = module_1.VariablesReplacer(dict_0)
    str_5 = 'JfEN`m '
    str_6 = 'ex6enZ'
    str_7 = "\\#:g&oX0'C?"
    dict_1 = {str_0: str_0, str_5: str_1, str_6: str_5, str_7: str_0}
    variables_replacer_1 = module_1.VariablesReplacer(dict_1)
    list_0 = [str_0]
    import_from_0 = module_2.ImportFrom(*list_0)
    dict_2 = {str_0: str_0}
    import_from_1 = variables_replacer_0.visit_ImportFrom(import_from_0)
    str_8 = '_Szc_'
    dict_3 = {str_1: str_0, str_6: iterable_0, str_8: str_6}
    module_1.let(str_1)
    a_s_t_0 = module_2.AST(**dict_3)
    module_1.extend_tree(a_s_t_0, dict_2)