# Automatically generated by Pynguin.
import ansible.playbook.task as module_0
import ansible.utils.display as module_1
import ansible.parsing.yaml.objects as module_2
import ansible.playbook.block as module_3

def test_case_0():
    try:
        int_0 = -169
        set_0 = None
        bytes_0 = b'\xaa\xf0\x03\xdd\x89\x9e\xdf\x17m\x84\xa6\xc7}\xc0u'
        bytes_1 = b'j\x9f.H/\x96\xb0\xd7\x87\x0c'
        dict_0 = {bytes_0: bytes_1, int_0: set_0, set_0: set_0}
        list_0 = [int_0, int_0, int_0]
        task_0 = module_0.Task(int_0, list_0)
        var_0 = task_0.load(set_0, bytes_0, bytes_1, dict_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'FX^#\x0c{ RNaD\x0c'
        str_1 = "Using a variable for a task's 'args' is unsafe in some situations (see https://docs.ansible.com/ansible/devel/reference_appendices/faq.html#argsplat-unsafe)"
        tuple_0 = (str_0, str_1)
        int_0 = -4294
        bool_0 = True
        task_0 = module_0.Task()
        var_0 = task_0.load(tuple_0, int_0, bool_0)
    except BaseException:
        pass

def test_case_2():
    try:
        task_0 = module_0.Task()
        var_0 = {}
        var_1 = task_0.preprocess_data(var_0)
    except BaseException:
        pass

def test_case_3():
    try:
        task_0 = module_0.Task()
        var_0 = task_0.preprocess_data(task_0)
    except BaseException:
        pass

def test_case_4():
    try:
        bytes_0 = b'!\xe7\xe3'
        task_0 = module_0.Task()
        var_0 = task_0.post_validate(bytes_0)
    except BaseException:
        pass

def test_case_5():
    try:
        bytes_0 = b'u\xdf\x06~\xb6i\xeb\x84\xbe\xf4\xe6_\xa0\x93j'
        bytes_1 = b'S\x86An\x1a\x15\xd2n\xd8\xf3\x12\xee!8'
        int_0 = -1451
        task_0 = module_0.Task(bytes_1, int_0)
        var_0 = task_0.post_validate(bytes_0)
    except BaseException:
        pass

def test_case_6():
    try:
        task_0 = module_0.Task()
        task_1 = module_0.Task(task_0)
        var_0 = task_1.__repr__()
        bool_0 = True
        var_1 = task_1.all_parents_static()
        var_2 = task_0.__repr__()
        str_0 = 'x=ou%9'
        var_3 = task_0.get_first_parent_include()
        var_4 = task_0.copy(bool_0, str_0)
        var_5 = task_1.get_first_parent_include()
        var_6 = task_1.get_include_params()
        var_7 = task_1.all_parents_static()
        var_8 = task_1.serialize()
        var_9 = task_1.get_vars()
        int_0 = 700
        var_10 = task_1.preprocess_data(int_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'O}I]iR'
        task_0 = module_0.Task(str_0)
        var_0 = task_0.copy()
    except BaseException:
        pass

def test_case_8():
    try:
        display_0 = module_1.Display()
        task_0 = module_0.Task(display_0)
        var_0 = task_0.serialize()
    except BaseException:
        pass

def test_case_9():
    try:
        ansible_base_y_a_m_l_object_0 = module_2.AnsibleBaseYAMLObject()
        block_0 = module_3.Block(ansible_base_y_a_m_l_object_0)
        str_0 = 'k'
        task_0 = module_0.Task(block_0, str_0)
        var_0 = task_0.serialize()
    except BaseException:
        pass

def test_case_10():
    try:
        int_0 = 511
        bool_0 = False
        task_0 = module_0.Task(bool_0)
        var_0 = task_0.deserialize(int_0)
    except BaseException:
        pass

def test_case_11():
    try:
        bool_0 = False
        task_0 = module_0.Task(bool_0)
        var_0 = task_0.copy()
        dict_0 = {}
        task_1 = module_0.Task()
        str_0 = 'U"\tf9HpFD$:Wn,^U'
        var_1 = task_1.set_loader(str_0)
        str_1 = 'Cc#LQ\x0btudM\t.} !MAW\x0cn'
        var_2 = task_1.copy(str_1)
        var_3 = task_1.preprocess_data(dict_0)
    except BaseException:
        pass

def test_case_12():
    try:
        task_0 = module_0.Task()
        int_0 = -2060
        task_1 = module_0.Task(int_0)
        var_0 = task_1.set_loader(task_1)
    except BaseException:
        pass

def test_case_13():
    try:
        task_0 = module_0.Task()
        var_0 = task_0.all_parents_static()
        set_0 = {task_0}
        task_1 = module_0.Task()
        var_1 = task_1.preprocess_data(set_0)
    except BaseException:
        pass

def test_case_14():
    try:
        ansible_base_y_a_m_l_object_0 = module_2.AnsibleBaseYAMLObject()
        task_0 = module_0.Task(ansible_base_y_a_m_l_object_0)
        var_0 = task_0.get_first_parent_include()
    except BaseException:
        pass

def test_case_15():
    try:
        str_0 = 'YqCC?t@C01T\x0b4gAK'
        task_0 = module_0.Task()
        var_0 = {str_0: task_0, task_0: str_0}
        var_1 = task_0.preprocess_data(var_0)
    except BaseException:
        pass

def test_case_16():
    try:
        task_0 = module_0.Task()
        var_0 = task_0.__repr__()
        task_1 = module_0.Task()
        task_2 = module_0.Task(task_1)
        var_1 = task_2.copy()
        var_2 = task_2.__repr__()
        bool_0 = True
        var_3 = task_2.all_parents_static()
        str_0 = 'x=odu%B'
        var_4 = task_1.copy(bool_0, str_0)
        var_5 = task_0.get_first_parent_include()
        bytes_0 = b'\xbca6XV@\x9d\x84\x12zi\xc0\xf8\x1ei/'
        task_3 = module_0.Task()
        var_6 = task_0.get_include_params()
        list_0 = [var_4]
        task_4 = module_0.Task(list_0)
        dict_0 = {task_1: task_4, var_5: var_3, task_2: task_1, bytes_0: var_3}
        task_5 = module_0.Task(list_0, dict_0)
        var_7 = task_5.copy(bytes_0)
        var_8 = task_5.get_include_params()
    except BaseException:
        pass

def test_case_17():
    try:
        dict_0 = {}
        str_0 = 'Yio>u!"\x0bV('
        dict_1 = {str_0: str_0}
        task_0 = module_0.Task(dict_1)
        var_0 = task_0.deserialize(dict_0)
        task_1 = module_0.Task()
        task_2 = module_0.Task(task_1)
        var_1 = task_2.__repr__()
        bool_0 = True
        str_1 = '.hi\x0b68kRe)(u'
        var_2 = task_1.copy(bool_0, str_1)
        var_3 = task_2.get_name()
        var_4 = task_1.copy()
        var_5 = task_2.serialize()
        bytes_0 = b'\xbca6XV@\x9d\x84\x12zi\xc0\xf8\x1ei/'
        var_6 = task_2.all_parents_static()
        var_7 = task_2.get_vars()
        dict_2 = {task_1: task_2, str_0: dict_1, task_2: task_1, bytes_0: dict_1}
        var_8 = task_0.__repr__()
        var_9 = task_2.get_vars()
        float_0 = 2926.91
        bytes_1 = b"\xc3F3\x92\x1a\x14\x0c'\xfb\xaa"
        task_3 = module_0.Task(float_0, bytes_1)
        var_10 = task_3.preprocess_data(dict_2)
    except BaseException:
        pass

def test_case_18():
    try:
        task_0 = module_0.Task()
        task_1 = module_0.Task(task_0)
        var_0 = task_1.__repr__()
        bool_0 = True
        var_1 = task_1.all_parents_static()
        str_0 = '.hi\x0b68kRe)(u'
        var_2 = task_0.get_first_parent_include()
        var_3 = task_0.copy(bool_0, str_0)
        var_4 = task_1.get_first_parent_include()
        var_5 = task_1.get_name()
        var_6 = task_0.copy()
        var_7 = task_1.serialize()
        bytes_0 = b'\xbca6XV@\x9d\x84\x12zi\xc0\xf8\x1ei/'
        var_8 = task_1.get_include_params()
        var_9 = task_1.all_parents_static()
        var_10 = task_1.get_vars()
        dict_0 = {task_0: task_1, var_4: var_1, task_1: task_0, bytes_0: var_1}
        var_11 = task_1.get_vars()
        bytes_1 = b'\xa6C;\xa1\x82\xf4\x1fsW'
        task_2 = module_0.Task(bytes_1)
        str_1 = '\n!('
        dict_1 = {str_0: var_10, str_1: str_0, str_0: dict_0}
        var_12 = task_2.preprocess_data(dict_1)
    except BaseException:
        pass

def test_case_19():
    try:
        dict_0 = {}
        str_0 = 'Yio>u!"\x0bV('
        dict_1 = {str_0: str_0}
        task_0 = module_0.Task(dict_1)
        var_0 = task_0.deserialize(dict_0)
        task_1 = module_0.Task()
        task_2 = module_0.Task(task_1)
        var_1 = task_2.__repr__()
        bool_0 = True
        var_2 = task_2.all_parents_static()
        var_3 = task_1.get_first_parent_include()
        var_4 = task_1.copy(bool_0, str_0)
        var_5 = task_2.get_first_parent_include()
        var_6 = task_2.get_name()
        var_7 = task_1.copy()
        var_8 = task_2.serialize()
        var_9 = task_2.get_include_params()
        var_10 = task_2.all_parents_static()
        var_11 = task_2.get_vars()
        var_12 = task_2.get_vars()
        float_0 = -595.2819
        str_1 = 'r*\x0bmxGMSE%R'
        bytes_0 = None
        task_3 = module_0.Task(float_0, str_1, bytes_0)
        var_13 = task_0.serialize()
    except BaseException:
        pass

def test_case_20():
    try:
        dict_0 = {}
        str_0 = '>|l4<\\AI2y'
        dict_1 = {str_0: str_0}
        task_0 = module_0.Task(dict_1)
        var_0 = task_0.deserialize(dict_0)
        task_1 = module_0.Task()
        task_2 = module_0.Task(task_1)
        var_1 = task_2.__repr__()
        bool_0 = True
        var_2 = task_2.all_parents_static()
        str_1 = '.hi\x0b68kRe)(u'
        var_3 = task_1.get_first_parent_include()
        var_4 = task_1.copy(bool_0, str_1)
        var_5 = task_2.get_first_parent_include()
        var_6 = task_2.get_name()
        var_7 = task_1.copy()
        var_8 = task_2.serialize()
        var_9 = task_2.get_include_params()
        var_10 = task_2.all_parents_static()
        var_11 = task_2.get_vars()
        var_12 = task_2.get_vars()
        ansible_mapping_0 = module_2.AnsibleMapping()
        task_3 = module_0.Task(ansible_mapping_0)
        var_13 = task_2.serialize()
        var_14 = task_2.preprocess_data(ansible_mapping_0)
    except BaseException:
        pass

def test_case_21():
    try:
        task_0 = module_0.Task()
        str_0 = 'tags'
        str_1 = 'tag1'
        str_2 = 'tag2'
        str_3 = [str_1, str_2]
        str_4 = (str_0, str_3)
        str_5 = 'name'
        str_6 = (str_5, str_5)
        str_7 = 'action'
        str_8 = 'shell'
        str_9 = (str_7, str_8)
        str_10 = 'args'
        str_11 = 'r*YQ3oSE>T}t)XE'
        str_12 = 'chdir'
        str_13 = 'ePo7Rcd'
        str_14 = '/home/user'
        str_15 = {str_11: str_13, str_12: str_14}
        str_16 = (str_10, str_15)
        str_17 = 'register'
        str_18 = 'test_value'
        str_19 = (str_17, str_1)
        str_20 = 'environment'
        str_21 = 'e+8nv'
        str_22 = {task_0: str_4, str_6: str_20, str_21: str_18}
        str_23 = (str_20, str_22)
        var_0 = task_0.serialize()
        str_24 = 'changed_when'
        str_25 = (str_24, str_18)
        str_26 = 'failed_when'
        str_27 = (str_26, str_18)
        str_28 = (str_7, str_18)
        str_29 = [str_4, str_6, str_9, str_16, str_19, str_23, str_25, str_27, str_28]
        var_1 = dict(str_29)
        bool_0 = True
        var_2 = task_0.preprocess_data(var_1)
        str_30 = ''
        ansible_mapping_0 = module_2.AnsibleMapping()
        int_0 = -1955
        block_0 = module_3.Block(ansible_mapping_0, int_0)
        int_1 = -2140
        var_3 = task_0.load(task_0, str_30, block_0, int_1)
    except BaseException:
        pass