# Automatically generated by Pynguin.
import tornado.simple_httpclient as module_0
import tornado.ioloop as module_1
import tornado.httpclient as module_2
import tornado.httputil as module_3
import ssl as module_4
import concurrent.futures._base as module_5
import tornado.tcpclient as module_6
import tornado.netutil as module_7

def test_case_0():
    pass

def test_case_1():
    str_0 = 'P.F\t0iu'
    h_t_t_p_timeout_error_0 = module_0.HTTPTimeoutError(str_0)

def test_case_2():
    str_0 = '$60K'
    h_t_t_p_timeout_error_0 = module_0.HTTPTimeoutError(str_0)
    str_1 = h_t_t_p_timeout_error_0.__str__()

def test_case_3():
    str_0 = '.6'
    h_t_t_p_stream_closed_error_0 = module_0.HTTPStreamClosedError(str_0)

def test_case_4():
    str_0 = 'B1\r7U)aR2}xNyfo,s'
    h_t_t_p_stream_closed_error_0 = module_0.HTTPStreamClosedError(str_0)
    str_1 = h_t_t_p_stream_closed_error_0.__str__()

def test_case_5():
    i_o_loop_0 = module_1.IOLoop()
    str_0 = 'bt;4Sa=z(\x0b'
    h_t_t_p_stream_closed_error_0 = module_0.HTTPStreamClosedError(str_0)
    i_o_loop_1 = i_o_loop_0.instance()
    str_1 = h_t_t_p_stream_closed_error_0.__str__()
    simple_async_h_t_t_p_client_0 = module_0.SimpleAsyncHTTPClient()
    str_2 = '(J^;9+C'
    bytes_0 = b'\n\xa0\x8d\xba<\xe0\xb0\xc9-\x0c\xe5'
    async_h_t_t_p_client_0 = module_2.AsyncHTTPClient()
    int_0 = -1025
    none_type_0 = None
    bool_0 = None
    h_t_t_p_request_0 = module_2.HTTPRequest(str_2, str_1, str_1, bytes_0, async_h_t_t_p_client_0, int_0, str_1, str_1, str_1, bool_0, str_2, none_type_0, bool_0)
    callable_0 = None
    simple_async_h_t_t_p_client_0.fetch_impl(h_t_t_p_request_0, callable_0)

def test_case_6():
    i_o_loop_0 = module_1.IOLoop()
    i_o_loop_0.make_current()
    simple_async_h_t_t_p_client_0 = module_0.SimpleAsyncHTTPClient()

def test_case_7():
    i_o_loop_0 = module_1.IOLoop()
    i_o_loop_0.make_current()
    simple_async_h_t_t_p_client_0 = module_0.SimpleAsyncHTTPClient()
    none_type_0 = None
    str_0 = None
    str_1 = '< 187e1)kt\x0bG8n9et'
    bool_0 = True
    str_2 = 'tornado.simple_httpclient'
    dict_0 = {str_0: str_0, str_1: bool_0, str_2: simple_async_h_t_t_p_client_0}
    simple_async_h_t_t_p_client_0.initialize(none_type_0, dict_0)

def test_case_8():
    i_o_loop_0 = module_1.IOLoop()
    str_0 = 'bWt\x0c;4S5=z(\x0b'
    h_t_t_p_stream_closed_error_0 = module_0.HTTPStreamClosedError(str_0)
    i_o_loop_1 = i_o_loop_0.instance()
    str_1 = h_t_t_p_stream_closed_error_0.__str__()
    i_o_loop_2 = i_o_loop_0.instance()
    simple_async_h_t_t_p_client_0 = module_0.SimpleAsyncHTTPClient()
    async_h_t_t_p_client_0 = module_2.AsyncHTTPClient()
    simple_async_h_t_t_p_client_0.close()

def test_case_9():
    i_o_loop_0 = module_1.IOLoop()
    str_0 = "~ia!QN$j'\n^+"
    h_t_t_p_timeout_error_0 = module_0.HTTPTimeoutError(str_0)
    simple_async_h_t_t_p_client_0 = module_0.SimpleAsyncHTTPClient()
    str_1 = h_t_t_p_timeout_error_0.__str__()
    str_2 = h_t_t_p_timeout_error_0.__str__()
    str_3 = 'q3l'
    h_t_t_p_stream_closed_error_0 = module_0.HTTPStreamClosedError(str_3)
    i_o_loop_1 = i_o_loop_0.instance()
    str_4 = '=<o+!*jOX'
    h_t_t_p_headers_0 = module_3.HTTPHeaders()
    bool_0 = False
    str_5 = h_t_t_p_timeout_error_0.__str__()
    bool_1 = False
    s_s_l_context_0 = module_4.SSLContext()
    h_t_t_p_request_0 = module_2.HTTPRequest(str_4, h_t_t_p_headers_0, str_4, str_4, bool_0, str_0, str_0, bool_1, s_s_l_context_0)
    executor_0 = module_5.Executor()
    t_c_p_client_0 = module_6.TCPClient()
    callable_0 = None
    int_0 = 1303
    int_1 = 1024
    int_2 = 100
    h_t_t_p_connection_0 = module_0._HTTPConnection(simple_async_h_t_t_p_client_0, h_t_t_p_request_0, callable_0, i_o_loop_1, int_0, t_c_p_client_0, int_1, int_2)
    bytes_0 = b't\xd6\xef\x1a\xd8_d\xfb\xc8\x17\x1f>\xce'
    h_t_t_p_connection_0.data_received(bytes_0)

def test_case_10():
    i_o_loop_0 = module_1.IOLoop()
    str_0 = "~ia!QN$j'\n^+"
    h_t_t_p_timeout_error_0 = module_0.HTTPTimeoutError(str_0)
    str_1 = h_t_t_p_timeout_error_0.__str__()
    str_2 = h_t_t_p_timeout_error_0.__str__()
    str_3 = 'bWt\x0c;4S5z(\x0b'
    h_t_t_p_stream_closed_error_0 = module_0.HTTPStreamClosedError(str_3)
    str_4 = h_t_t_p_timeout_error_0.__str__()
    str_5 = "(`zm'z"
    h_t_t_p_stream_closed_error_1 = module_0.HTTPStreamClosedError(str_5)
    str_6 = h_t_t_p_stream_closed_error_1.__str__()
    i_o_loop_1 = i_o_loop_0.instance()
    simple_async_h_t_t_p_client_0 = module_0.SimpleAsyncHTTPClient()
    str_7 = h_t_t_p_stream_closed_error_1.__str__()
    simple_async_h_t_t_p_client_0.close()
    bool_0 = None
    str_8 = None
    dict_0 = None
    float_0 = 2698.0
    h_t_t_p_request_0 = module_2.HTTPRequest(str_8, dict_0, str_0, str_3, str_4, bool_0, str_6, str_1, str_4, bool_0, str_8, bool_0, float_0, bool_0)
    callable_0 = None
    simple_async_h_t_t_p_client_0.fetch_impl(h_t_t_p_request_0, callable_0)
    t_c_p_client_0 = module_6.TCPClient(h_t_t_p_timeout_error_0)
    callable_1 = None
    int_0 = -2956
    int_1 = -2875
    int_2 = -1095
    int_3 = -967
    h_t_t_p_connection_0 = module_0._HTTPConnection(simple_async_h_t_t_p_client_0, h_t_t_p_request_0, callable_1, callable_0, int_2, t_c_p_client_0, int_0, int_3)
    h_t_t_p_connection_0.on_connection_close()
    int_4 = -601
    h_t_t_p_connection_1 = module_0._HTTPConnection(simple_async_h_t_t_p_client_0, h_t_t_p_request_0, callable_1, callable_0, int_0, t_c_p_client_0, int_1, int_4)
    bytes_0 = b't\xd6\xef\x1a\xd8_d\xfb\xc8\x17\x1f>\xce'
    h_t_t_p_connection_1.data_received(bytes_0)

def test_case_11():
    i_o_loop_0 = module_1.IOLoop()
    str_0 = "~ia!QN$j'\n^+"
    h_t_t_p_timeout_error_0 = module_0.HTTPTimeoutError(str_0)
    str_1 = h_t_t_p_timeout_error_0.__str__()
    str_2 = h_t_t_p_timeout_error_0.__str__()
    str_3 = 'bWt\x0c;4S5=z(\x0b'
    h_t_t_p_stream_closed_error_0 = module_0.HTTPStreamClosedError(str_3)
    i_o_loop_1 = i_o_loop_0.instance()
    str_4 = h_t_t_p_timeout_error_0.__str__()
    str_5 = h_t_t_p_stream_closed_error_0.__str__()
    i_o_loop_2 = i_o_loop_1.instance()
    simple_async_h_t_t_p_client_0 = module_0.SimpleAsyncHTTPClient()
    int_0 = -1025
    str_6 = h_t_t_p_stream_closed_error_0.__str__()
    str_7 = h_t_t_p_timeout_error_0.__str__()
    simple_async_h_t_t_p_client_0.close()
    bool_0 = None
    str_8 = None
    simple_async_h_t_t_p_client_1 = module_0.SimpleAsyncHTTPClient()
    dict_0 = None
    float_0 = 2698.0
    h_t_t_p_request_0 = module_2.HTTPRequest(str_8, dict_0, str_0, str_3, str_4, bool_0, str_5, str_1, str_4, bool_0, str_4, bool_0, float_0, bool_0)
    callable_0 = None
    simple_async_h_t_t_p_client_0.fetch_impl(h_t_t_p_request_0, callable_0)
    simple_async_h_t_t_p_client_0.fetch_impl(h_t_t_p_request_0, callable_0)
    resolver_0 = module_7.Resolver()
    i_o_loop_0.start()
    t_c_p_client_0 = module_6.TCPClient()
    int_1 = -849
    callable_1 = None
    int_2 = None
    h_t_t_p_connection_0 = module_0._HTTPConnection(simple_async_h_t_t_p_client_0, h_t_t_p_request_0, callable_1, callable_0, int_0, t_c_p_client_0, int_2, int_1)
    h_t_t_p_connection_0.finish()