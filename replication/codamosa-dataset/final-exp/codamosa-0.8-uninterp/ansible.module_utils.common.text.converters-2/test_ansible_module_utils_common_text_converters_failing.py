# Automatically generated by Pynguin.
import ansible.module_utils.common.text.converters as module_0

def test_case_0():
    try:
        str_0 = '1'
        dict_0 = None
        var_0 = module_0.container_to_bytes(str_0, dict_0)
    except BaseException:
        pass

def test_case_1():
    try:
        tuple_0 = ()
        set_0 = {tuple_0}
        bool_0 = False
        var_0 = module_0.to_text(bool_0)
        var_1 = module_0.to_bytes(set_0)
        list_0 = []
        var_2 = module_0.jsonify(set_0)
        var_3 = module_0.container_to_bytes(list_0, set_0)
        str_0 = 'v]FOV6Mofg\x0c0qol=6uOB'
        var_4 = module_0.to_bytes(str_0)
        dict_0 = {}
        var_5 = module_0.to_bytes(str_0, dict_0)
    except BaseException:
        pass

def test_case_2():
    try:
        float_0 = -130.7
        str_0 = None
        float_1 = -1162.391
        var_0 = module_0.to_text(float_1)
        list_0 = [float_0, str_0]
        int_0 = -2162
        str_1 = '@gh8FIcMsB=h'
        dict_0 = None
        var_1 = module_0.to_text(list_0, int_0, str_1, dict_0)
    except BaseException:
        pass

def test_case_3():
    try:
        tuple_0 = ()
        set_0 = {tuple_0}
        bool_0 = False
        var_0 = module_0.to_text(bool_0)
        var_1 = module_0.to_bytes(set_0)
        list_0 = [tuple_0, tuple_0, bool_0, var_0]
        var_2 = module_0.jsonify(list_0)
        var_3 = module_0.container_to_bytes(list_0, set_0)
    except BaseException:
        pass

def test_case_4():
    try:
        bool_0 = False
        var_0 = module_0.jsonify(bool_0)
        bool_1 = False
        dict_0 = {bool_0: bool_0}
        bool_2 = False
        var_1 = module_0.container_to_bytes(bool_2)
        var_2 = module_0.container_to_text(dict_0)
        list_0 = None
        var_3 = module_0.to_bytes(list_0)
        dict_1 = {bool_1: bool_0}
        list_1 = [dict_1, list_0, bool_1]
        var_4 = module_0.to_bytes(dict_1, list_1)
    except BaseException:
        pass

def test_case_5():
    try:
        bytes_0 = b'\x7f\x93$@w!k\xb5\x81\xb9@8\x95J\xbd0\xdb'
        var_0 = module_0.container_to_text(bytes_0)
        str_0 = 'v]FO,6Mofg\x0c0qol=6uOB'
        var_1 = module_0.to_bytes(str_0)
        set_0 = {bytes_0}
        var_2 = module_0.jsonify(set_0)
    except BaseException:
        pass

def test_case_6():
    try:
        float_0 = 1405.954
        bool_0 = True
        set_0 = {bool_0, bool_0, bool_0, float_0}
        complex_0 = None
        str_0 = 'o'
        dict_0 = {str_0: bool_0}
        bytes_0 = b'\xbfc\x02\xf31\xe6\x1a1\xfcO'
        dict_1 = {float_0: str_0}
        tuple_0 = (complex_0, dict_0, bytes_0, dict_1)
        var_0 = module_0.to_bytes(float_0, bool_0, set_0, tuple_0)
    except BaseException:
        pass

def test_case_7():
    try:
        float_0 = 1.0
        var_0 = module_0.to_bytes(float_0)
        str_0 = 'test'
        var_1 = module_0.to_bytes(str_0)
        str_1 = 'latin-1'
        var_2 = module_0.to_bytes(str_0, str_1)
        str_2 = 't&st'
        var_3 = module_0.to_bytes(str_2)
        str_3 = '¢'
        var_4 = module_0.to_bytes(str_3, str_1)
        str_4 = 'utf-8'
        var_5 = module_0.to_bytes(str_3, str_4)
        str_5 = 'ascii'
        str_6 = 'surrogate_or_strict'
        var_6 = module_0.to_bytes(str_3, str_5, str_6)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = 'hello'
        var_0 = module_0.to_bytes(str_0)
        str_1 = 'κόσμε'
        var_1 = module_0.to_bytes(str_1)
        str_2 = 'ሴ'
        var_2 = module_0.to_bytes(str_2)
        str_3 = '\ud800'
        var_3 = module_0.to_bytes(str_3)
    except BaseException:
        pass