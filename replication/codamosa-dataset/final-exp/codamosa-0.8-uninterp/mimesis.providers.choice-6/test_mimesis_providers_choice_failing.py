# Automatically generated by Pynguin.
import mimesis.providers.choice as module_0

def test_case_0():
    try:
        str_0 = '652'
        str_1 = '+507'
        str_2 = ')Nm&\t,b\x0bw]&'
        str_3 = 'application/ocsp-response'
        dict_0 = {str_0: str_1, str_0: str_0, str_2: str_2, str_3: str_1}
        bool_0 = None
        choice_0 = module_0.Choice()
        var_0 = choice_0.__call__(dict_0, bool_0)
    except BaseException:
        pass

def test_case_1():
    try:
        list_0 = None
        dict_0 = {list_0: list_0}
        bool_0 = False
        choice_0 = module_0.Choice()
        var_0 = choice_0.__call__(dict_0, bool_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b''
        bool_0 = False
        choice_0 = module_0.Choice()
        var_0 = choice_0.__call__(bytes_0, bool_0)
    except BaseException:
        pass

def test_case_3():
    try:
        int_0 = -35
        dict_0 = {int_0: int_0, int_0: int_0}
        dict_1 = {}
        list_0 = [dict_0, int_0, int_0, dict_1]
        choice_0 = module_0.Choice()
        var_0 = choice_0.__call__(list_0)
        var_1 = choice_0.__call__(list_0, int_0)
    except BaseException:
        pass

def test_case_4():
    try:
        bytes_0 = b'\xcc\xb6\xd4\x98D\x8a\xf2[\xf2C\x15'
        list_0 = [bytes_0]
        int_0 = 1131
        bool_0 = True
        choice_0 = module_0.Choice()
        var_0 = choice_0.__call__(list_0, int_0, bool_0)
    except BaseException:
        pass