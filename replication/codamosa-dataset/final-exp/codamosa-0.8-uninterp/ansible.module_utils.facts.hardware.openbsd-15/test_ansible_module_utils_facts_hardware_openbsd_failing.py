# Automatically generated by Pynguin.
import ansible.module_utils.facts.hardware.openbsd as module_0

def test_case_0():
    try:
        bytes_0 = b'\xb4\x9e\xd2\x1e\x8c\x9cd\x7fu\xf1+\r\xfcbt/\xd5'
        open_b_s_d_hardware_0 = module_0.OpenBSDHardware(bytes_0)
        var_0 = open_b_s_d_hardware_0.populate()
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'rJJeFeQ3.\n}LKO,b'
        open_b_s_d_hardware_0 = module_0.OpenBSDHardware(str_0)
        var_0 = open_b_s_d_hardware_0.get_memory_facts()
    except BaseException:
        pass

def test_case_2():
    try:
        list_0 = []
        open_b_s_d_hardware_collector_0 = module_0.OpenBSDHardwareCollector(list_0)
        open_b_s_d_hardware_0 = module_0.OpenBSDHardware(open_b_s_d_hardware_collector_0)
        var_0 = open_b_s_d_hardware_0.get_uptime_facts()
    except BaseException:
        pass

def test_case_3():
    try:
        float_0 = -1808.64
        open_b_s_d_hardware_collector_0 = module_0.OpenBSDHardwareCollector()
        tuple_0 = None
        tuple_1 = (float_0, open_b_s_d_hardware_collector_0, tuple_0, float_0)
        open_b_s_d_hardware_0 = module_0.OpenBSDHardware(tuple_1)
        var_0 = open_b_s_d_hardware_0.get_processor_facts()
    except BaseException:
        pass

def test_case_4():
    try:
        int_0 = 10
        open_b_s_d_hardware_0 = module_0.OpenBSDHardware(int_0)
        var_0 = open_b_s_d_hardware_0.get_device_facts()
    except BaseException:
        pass

def test_case_5():
    try:
        int_0 = -297
        open_b_s_d_hardware_0 = module_0.OpenBSDHardware(int_0)
        var_0 = open_b_s_d_hardware_0.get_dmi_facts()
    except BaseException:
        pass