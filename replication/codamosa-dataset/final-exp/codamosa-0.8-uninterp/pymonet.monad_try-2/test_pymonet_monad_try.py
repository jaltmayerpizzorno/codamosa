# Automatically generated by Pynguin.
import pymonet.monad_try as module_0

def test_case_0():
    pass

def test_case_1():
    bool_0 = False
    try_0 = module_0.Try(bool_0, bool_0)

def test_case_2():
    list_0 = None
    tuple_0 = ()
    bool_0 = True
    try_0 = module_0.Try(tuple_0, bool_0)
    bool_1 = try_0.__eq__(list_0)

def test_case_3():
    float_0 = -671.5
    int_0 = 1037
    list_0 = [int_0, int_0, int_0]
    bool_0 = False
    try_0 = module_0.Try(list_0, bool_0)
    var_0 = try_0.map(float_0)

def test_case_4():
    bool_0 = True
    try_0 = module_0.Try(bool_0, bool_0)
    dict_0 = {bool_0: bool_0}
    bool_1 = try_0.__eq__(dict_0)
    bool_2 = True
    dict_1 = {bool_2: bool_2, bool_2: bool_2, bool_2: bool_2, bool_2: bool_2}
    tuple_0 = (bool_0, dict_1, dict_1, dict_1)
    set_0 = set()
    tuple_1 = (set_0,)
    bool_3 = False
    try_1 = module_0.Try(tuple_1, bool_3)
    var_0 = try_1.bind(tuple_0)

def test_case_5():
    float_0 = 36.456
    str_0 = 'Q3u\x0c<IUjO4c^, *qRGk'
    bool_0 = False
    try_0 = module_0.Try(str_0, bool_0)
    var_0 = try_0.on_success(float_0)

def test_case_6():
    float_0 = -232.8344
    tuple_0 = ()
    dict_0 = {float_0: tuple_0}
    tuple_1 = (dict_0,)
    bool_0 = False
    try_0 = module_0.Try(bool_0, bool_0)
    var_0 = try_0.filter(tuple_1)

def test_case_7():
    dict_0 = {}
    bytes_0 = b'\xb4\xab\xa8\x95\n-)\x98\xf96=T\xcb\xb7\x94"\x10\xb7\x8c\xa0'
    bool_0 = True
    bool_1 = False
    try_0 = module_0.Try(bool_0, bool_1)
    var_0 = try_0.get()
    bool_2 = False
    try_1 = module_0.Try(bytes_0, bool_2)
    var_1 = try_1.get_or_else(dict_0)