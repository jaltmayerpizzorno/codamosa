# Automatically generated by Pynguin.
import pymonet.semigroups as module_0

def test_case_0():
    pass

def test_case_1():
    map_0 = None
    semigroup_0 = module_0.Semigroup(map_0)

def test_case_2():
    list_0 = []
    float_0 = 1571.1
    semigroup_0 = module_0.Semigroup(float_0)
    one_0 = module_0.One(semigroup_0)
    tuple_0 = (list_0, one_0)
    map_0 = module_0.Map(tuple_0)
    map_1 = module_0.Map(map_0)
    one_1 = module_0.One(map_1)
    str_0 = 'a5,\x0b3R1'
    all_0 = module_0.All(str_0)
    str_1 = all_0.__str__()

def test_case_3():
    bytes_0 = b''
    set_0 = {bytes_0}
    min_0 = module_0.Min(set_0)
    map_0 = module_0.Map(min_0)
    str_0 = map_0.__str__()

def test_case_4():
    bool_0 = False
    max_0 = module_0.Max(bool_0)
    int_0 = -2542
    map_0 = module_0.Map(int_0)
    str_0 = max_0.__str__()
    var_0 = max_0.concat(map_0)
    first_0 = module_0.First(int_0)
    all_0 = module_0.All(bool_0)
    all_1 = all_0.concat(all_0)
    str_1 = all_1.__str__()
    str_2 = first_0.__str__()