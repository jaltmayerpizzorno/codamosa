# Automatically generated by Pynguin.
import sanic.exceptions as module_0

def test_case_0():
    pass

def test_case_1():
    tuple_0 = None
    sanic_exception_0 = module_0.SanicException(tuple_0)

def test_case_2():
    unauthorized_0 = None
    dict_0 = {unauthorized_0: unauthorized_0, unauthorized_0: unauthorized_0}
    request_timeout_0 = module_0.RequestTimeout(dict_0)
    invalid_signal_0 = module_0.InvalidSignal(unauthorized_0, request_timeout_0)
    dict_1 = {invalid_signal_0: invalid_signal_0, invalid_signal_0: dict_0}
    service_unavailable_0 = module_0.ServiceUnavailable(dict_1)

def test_case_3():
    float_0 = 1.0
    invalid_signal_0 = module_0.InvalidSignal(float_0)
    str_0 = 'KIjZ'
    header_expectation_failed_0 = module_0.HeaderExpectationFailed(str_0)
    str_1 = ', '
    dict_0 = {str_0: str_0, str_1: str_1}
    payload_too_large_0 = module_0.PayloadTooLarge(header_expectation_failed_0, dict_0)
    invalid_usage_0 = module_0.InvalidUsage(payload_too_large_0)
    not_found_0 = module_0.NotFound(invalid_usage_0)
    bool_0 = False
    file_not_found_0 = module_0.FileNotFound(invalid_signal_0, not_found_0, bool_0)

def test_case_4():
    str_0 = '\n    This is a testcase.\n    '
    str_1 = 'testing Auth required.'
    str_2 = 'Restricted Area'
    unauthorized_0 = module_0.Unauthorized(str_1, str_0, str_2)

def test_case_5():
    list_0 = None
    u_r_l_build_error_0 = module_0.URLBuildError(list_0)
    request_timeout_0 = module_0.RequestTimeout(u_r_l_build_error_0)
    set_0 = {list_0}
    unauthorized_0 = module_0.Unauthorized(set_0)
    invalid_usage_0 = module_0.InvalidUsage(request_timeout_0)
    server_error_0 = module_0.ServerError(u_r_l_build_error_0, request_timeout_0)