# Automatically generated by Pynguin.
import docstring_parser.rest as module_0

def test_case_0():
    try:
        str_0 = ':'
        docstring_0 = module_0.parse(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'A short summary.\n\nA long description.\n\nA paragraph in long description.\n\n:param int arg1: A short description of arg1.\n:param int arg2: A short description of arg2.\n           This is a continuation of the previous line.\n:param int? arg3: A short description of arg3.\n:param int arg4 default: A short description of arg4.\n:param int arg5 defaults to 3: A short description of arg5.\n:return: A short description of return value.\n:return:? int: A short description of return value.\n:yield int: A short description of return value.\n:raises TypeError: A short description of return value.\n:raises ValueError: A short description of return value.\n    '
        docstring_0 = module_0.parse(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '    This function computes the value of x squared.\n\n    If a negative value is given, an exception is raised.\n\n    Amore elaborat description ofthe function.\n\n    :par3m x: The value to square.\n    :type x: float\n    :returns: x**2\n    :rtype: float\n    :raises ValueEr or: if x is negative\n    '
        docstring_0 = module_0.parse(str_0)
    except BaseException:
        pass