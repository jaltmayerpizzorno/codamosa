# Automatically generated by Pynguin.
import tornado.options as module_0
import typing as module_1
import builtins as module_2

def test_case_0():
    try:
        str_0 = '%W:\\4}[M"Q Y'
        option_parser_0 = module_0.OptionParser()
        mockable_0 = option_parser_0.mockable()
        any_0 = mockable_0.__getattr__(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = None
        list_0 = [str_0]
        bool_0 = True
        list_1 = module_0.parse_command_line(list_0, bool_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'bw{]@&|34MEQP!GZc'
        option_parser_0 = module_0.OptionParser()
        option_parser_0.__setattr__(str_0, str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '/input/tornado/options.py'
        option_parser_0 = module_0.OptionParser()
        option_parser_0.parse_config_file(str_0)
        option_parser_0.print_help()
        option_parser_1 = module_0.OptionParser()
        str_1 = '<V\n\\*'
        dict_0 = option_parser_0.group_dict(str_1)
        option_parser_2 = module_0.OptionParser()
        set_0 = {option_parser_2, option_parser_1}
        bool_0 = option_parser_2.__contains__(str_1)
        option_parser_0.__setattr__(str_0, set_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = '/input/tornado/log.py'
        option_parser_0 = module_0.OptionParser()
        dict_0 = option_parser_0.as_dict()
        option_parser_1 = module_0.OptionParser()
        any_0 = option_parser_1.__getitem__(str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = '\\'
        option_parser_0 = module_0.OptionParser()
        option_parser_0.__setitem__(str_0, str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = '/input/tornado/options.py'
        option_parser_0 = module_0.OptionParser()
        option_parser_0.parse_config_file(str_0)
        option_parser_0.print_help()
        option_parser_1 = module_0.OptionParser()
        str_1 = '-'
        dict_0 = option_parser_0.group_dict(str_1)
        iterable_0 = option_parser_1.items()
        list_0 = module_0.parse_command_line()
    except BaseException:
        pass

def test_case_7():
    try:
        option_parser_0 = module_0.OptionParser()
        set_0 = option_parser_0.groups()
        option_parser_1 = module_0.OptionParser()
        list_0 = []
        module_0.add_parse_callback(list_0)
        dict_0 = option_parser_1.as_dict()
        list_1 = module_0.parse_command_line()
    except BaseException:
        pass

def test_case_8():
    try:
        option_parser_0 = module_0.OptionParser()
        str_0 = '{(\rpTG%uXjbR9lB'
        dict_0 = option_parser_0.group_dict(str_0)
        list_0 = option_parser_0.parse_command_line()
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = '^Vm\n)i\x0cCLM?x\x0cxw:Sh~ '
        str_1 = '/input/tornado/log.py'
        option_parser_0 = module_0.OptionParser()
        option_parser_0.define(str_1, str_0)
        bool_0 = option_parser_0.__contains__(str_0)
        option_parser_1 = module_0.OptionParser()
        option_parser_1.define(str_0, str_0)
        mockable_0 = option_parser_1.mockable()
        option_parser_1.define(str_0, option_parser_0, mockable_0)
    except BaseException:
        pass

def test_case_10():
    try:
        list_0 = module_0.parse_command_line()
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = '\nw\tQN?vMZyZIg'
        module_0.parse_config_file(str_0)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = 'info'
        option_parser_0 = module_0.OptionParser()
        mockable_0 = module_0._Mockable(option_parser_0)
        mockable_0.__setattr__(str_0, str_0)
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = '/input/tornado/options.py'
        option_parser_0 = module_0.OptionParser()
        str_1 = '<ast>'
        option_parser_0.define(str_1)
        mockable_0 = option_parser_0.mockable()
        option_parser_0.print_help()
        option_parser_1 = module_0.OptionParser()
        option_parser_1.parse_config_file(str_0)
        option_parser_2 = module_0.OptionParser()
        iterator_0 = option_parser_2.__iter__()
        str_2 = 'BY!;|[xKx'
        option_0 = module_0._Option(str_0, str_2, str_0, str_2)
        iterable_0 = option_parser_2.items()
        mockable_1 = option_parser_0.mockable()
        mockable_1.__setattr__(str_1, str_0)
        str_3 = '[J,2a;i)YZ{>6'
        mockable_0.__delattr__(str_3)
    except BaseException:
        pass

def test_case_14():
    try:
        callable_0 = None
        option_parser_0 = module_0.OptionParser()
        iterable_0 = option_parser_0.items()
        option_parser_1 = module_0.OptionParser()
        option_parser_1.add_parse_callback(callable_0)
        str_0 = '/input/tornado/log.py'
        option_0 = module_0._Option(str_0)
    except BaseException:
        pass

def test_case_15():
    try:
        module_0.print_help()
    except BaseException:
        pass

def test_case_16():
    try:
        option_parser_0 = module_0.OptionParser()
        list_0 = []
        module_0.add_parse_callback(list_0)
        dict_0 = option_parser_0.as_dict()
        list_1 = module_0.parse_command_line()
    except BaseException:
        pass

def test_case_17():
    try:
        str_0 = 'y4'
        option_parser_0 = module_0.OptionParser()
        dict_0 = option_parser_0.group_dict(str_0)
        bool_0 = False
        list_0 = option_parser_0.parse_command_line(bool_0)
    except BaseException:
        pass

def test_case_18():
    try:
        str_0 = '/input/tornado/options.py'
        text_i_o_0 = module_1.TextIO()
        option_parser_0 = module_0.OptionParser()
        mockable_0 = option_parser_0.mockable()
        option_parser_0.print_help(text_i_o_0)
        option_parser_1 = module_0.OptionParser()
        option_parser_1.__setitem__(str_0, str_0)
    except BaseException:
        pass

def test_case_19():
    try:
        str_0 = None
        option_parser_0 = module_0.OptionParser()
        dict_0 = option_parser_0.group_dict(str_0)
        module_0.print_help()
    except BaseException:
        pass

def test_case_20():
    try:
        str_0 = '/input/tornado/options.py'
        text_i_o_0 = module_1.TextIO()
        option_parser_0 = module_0.OptionParser()
        str_1 = '<ast>'
        option_parser_0.define(str_1)
        mockable_0 = module_0._Mockable(option_parser_0)
        option_parser_0.print_help(text_i_o_0)
        option_parser_0.print_help()
        option_parser_1 = module_0.OptionParser()
        option_parser_1.parse_config_file(str_0)
        mockable_1 = module_0._Mockable(option_parser_1)
        str_2 = '=E~y)BQGcS9fx\t%'
        mockable_1.__setattr__(str_2, str_2)
    except BaseException:
        pass

def test_case_21():
    try:
        str_0 = 'qxd\tgc@2t"/l$$0rIP'
        str_1 = '_xsrf'
        option_0 = module_0._Option(str_1, str_1, str_1)
        any_0 = option_0.parse(str_0)
    except BaseException:
        pass

def test_case_22():
    try:
        text_i_o_0 = module_1.TextIO()
        str_0 = '+Txu?`5g`gk'
        bool_0 = True
        dict_0 = {}
        option_0 = module_0._Option(str_0, str_0, bool_0, str_0, str_0, dict_0)
        option_0.set(text_i_o_0)
    except BaseException:
        pass

def test_case_23():
    try:
        str_0 = '/input/tornado/options.py'
        option_parser_0 = module_0.OptionParser()
        bool_0 = False
        option_parser_0.parse_config_file(str_0, bool_0)
        option_parser_1 = module_0.OptionParser()
        list_0 = option_parser_1.parse_command_line(bool_0)
    except BaseException:
        pass

def test_case_24():
    try:
        str_0 = '/input/tornado/options.py'
        option_parser_0 = module_0.OptionParser()
        option_parser_0.parse_config_file(str_0)
        option_parser_1 = module_0.OptionParser()
        dict_0 = option_parser_0.as_dict()
        option_parser_2 = module_0.OptionParser()
        option_parser_3 = module_0.OptionParser()
        dict_1 = option_parser_1.as_dict()
        str_1 = '4Z?qNj\n\tpN*'
        str_2 = '--'
        str_3 = '--'
        list_0 = [str_1, str_2, str_3]
        list_1 = module_0.parse_command_line(list_0)
    except BaseException:
        pass

def test_case_25():
    try:
        option_0 = None
        module_0.add_parse_callback(option_0)
        str_0 = '{Txw\x0bODGt(o\n1f'
        option_parser_0 = module_0.OptionParser()
        iterator_0 = option_parser_0.__iter__()
        dict_0 = option_parser_0.group_dict(str_0)
        iterator_1 = option_parser_0.__iter__()
        option_parser_1 = module_0.OptionParser()
        option_parser_1.run_parse_callbacks()
        none_type_0 = None
        str_1 = '/input/tornado/log.py'
        int_0 = -553
        iterator_2 = option_parser_0.__iter__()
        module_0.define(str_0, none_type_0, str_0, str_1, str_0, int_0)
        iterable_0 = option_parser_1.items()
        dict_1 = option_parser_0.group_dict(str_0)
        mockable_0 = module_0._Mockable(option_parser_0)
        option_parser_2 = module_0.OptionParser()
        set_0 = option_parser_2.groups()
        str_2 = 'Returns a dictionary from HTTP header text.\n\n        >>> h = HTTPHeaders.parse("Content-Type: text/html\\r\\nContent-Length: 42\\r\\n")\n        >>> sorted(h.items())\n        [(\'Content-Length\', \'42\'), (\'Content-Type\', \'text/html\')]\n\n        .. versionchanged:: 5.1\n\n           Raises `HTTPInputError` on malformed headers instead of a\n           mix of `KeyError`, and `ValueError`.\n\n        '
        option_parser_1.__setitem__(str_2, iterator_0)
    except BaseException:
        pass

def test_case_26():
    try:
        str_0 = '/input/tornado/options.py'
        option_parser_0 = module_0.OptionParser()
        iterator_0 = option_parser_0.__iter__()
        option_parser_0.define(str_0, iterator_0)
        option_parser_0.parse_config_file(str_0)
        str_1 = '{(\rpTG%uXjbR9lB'
        dict_0 = {}
        option_parser_0.add_parse_callback(dict_0)
        dict_1 = option_parser_0.group_dict(str_1)
        dict_2 = option_parser_0.group_dict(str_1)
        str_2 = '<ast>'
        dict_3 = option_parser_0.group_dict(str_2)
        list_0 = module_0.parse_command_line()
    except BaseException:
        pass

def test_case_27():
    try:
        str_0 = 'Z\tE1u6_@~.^'
        set_0 = {str_0, str_0, str_0}
        option_0 = module_0._Option(str_0, set_0, str_0)
        str_1 = 'wuX3$cjoOB67^FiN'
        option_parser_0 = module_0.OptionParser()
        iterable_0 = option_parser_0.items()
        list_0 = [str_1]
        type_0 = module_2.type(*list_0)
        bool_0 = False
        option_1 = module_0._Option(str_1, iterable_0, type_0, bool_0, str_1)
        option_1.set(option_0)
    except BaseException:
        pass

def test_case_28():
    try:
        text_i_o_0 = module_1.TextIO()
        str_0 = '+Txu?`5g`gk'
        bool_0 = True
        dict_0 = {text_i_o_0: str_0}
        option_0 = module_0._Option(str_0, str_0, bool_0, str_0, str_0, dict_0)
        option_0.set(text_i_o_0)
    except BaseException:
        pass

def test_case_29():
    try:
        str_0 = '/input/tornado/options.py'
        option_parser_0 = module_0.OptionParser()
        option_parser_0.parse_config_file(str_0)
        option_parser_1 = module_0.OptionParser()
        list_0 = None
        str_1 = 'W@\x0cNdeE]$]>T~wB45(5'
        str_2 = 'BY!;|[xKx'
        option_0 = module_0._Option(str_1, str_2, str_1, str_2)
        option_0.set(list_0)
        any_0 = option_0.value()
        dict_0 = option_parser_0.group_dict(str_0)
        list_1 = module_0.parse_command_line()
    except BaseException:
        pass

def test_case_30():
    try:
        option_parser_0 = module_0.OptionParser()
        str_0 = '<zV\n\\*'
        dict_0 = option_parser_0.group_dict(str_0)
        option_parser_1 = module_0.OptionParser()
        set_0 = option_parser_1.groups()
        option_parser_2 = module_0.OptionParser()
        dict_1 = option_parser_0.as_dict()
        iterator_0 = option_parser_0.__iter__()
        str_1 = '4Z?qNj\n\tpN*'
        str_2 = '-'
        list_0 = []
        list_1 = option_parser_2.parse_command_line(list_0)
        str_3 = '--'
        list_2 = [str_1, str_2, str_3]
        list_3 = module_0.parse_command_line(list_2)
    except BaseException:
        pass

def test_case_31():
    try:
        str_0 = '.uv?<-Dv'
        str_1 = "7|32PE@'V;jG%\x0bE8JUe"
        bool_0 = False
        list_0 = [bool_0, bool_0, bool_0, bool_0]
        error_0 = module_0.Error(*list_0)
        option_0 = module_0._Option(str_1, str_1, bool_0, str_1, str_1, error_0)
        any_0 = option_0.parse(str_0)
    except BaseException:
        pass

def test_case_32():
    try:
        str_0 = '/input/tornado/options.py'
        text_i_o_0 = module_1.TextIO()
        text_i_o_1 = text_i_o_0.__enter__()
        option_parser_0 = module_0.OptionParser()
        option_parser_0.define(str_0)
        bool_0 = False
        module_0.parse_config_file(str_0, bool_0)
        option_parser_0.print_help(text_i_o_0)
        set_0 = option_parser_0.groups()
        option_parser_0.print_help()
        option_parser_1 = module_0.OptionParser()
        option_parser_1.parse_config_file(str_0)
        option_parser_2 = module_0.OptionParser()
        iterator_0 = option_parser_2.__iter__()
        str_1 = 'BY!;|[xKx'
        option_0 = module_0._Option(str_1, str_1, str_1, str_1)
        iterable_0 = option_parser_2.items()
        mockable_0 = option_parser_0.mockable()
        mockable_0.__setattr__(str_0, str_0)
        option_parser_3 = module_0.OptionParser()
        mockable_0.__setattr__(str_0, option_parser_3)
    except BaseException:
        pass

def test_case_33():
    try:
        str_0 = '/input/tornado/options.py'
        bool_0 = False
        module_0.parse_config_file(str_0, bool_0)
        option_parser_0 = module_0.OptionParser()
        option_parser_0.parse_config_file(str_0)
        option_parser_1 = module_0.OptionParser()
        iterator_0 = option_parser_1.__iter__()
        str_1 = 'BY!;|[xKx'
        option_0 = module_0._Option(str_1, str_1, str_1, str_1)
        iterable_0 = option_parser_1.items()
        list_0 = module_0.parse_command_line()
    except BaseException:
        pass

def test_case_34():
    try:
        option_parser_0 = module_0.OptionParser()
        var_0 = option_parser_0.define
        var_1 = option_parser_0._options
        var_2 = len(var_1)
        var_3 = iter(option_parser_0)
        var_4 = next(var_3)
        var_5 = var_4.name
    except BaseException:
        pass