# Automatically generated by Pynguin.
import ansible.utils._junit_xml as module_0
import decimal as module_1

def test_case_0():
    try:
        test_result_0 = module_0.TestResult()
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '/etc/rc?.d/K??'
        list_0 = None
        test_suites_0 = module_0.TestSuites()
        var_0 = test_suites_0.__eq__(list_0)
        str_1 = 'fhQs"/3Z,'
        test_case_0 = module_0.TestCase(str_0, str_0, str_1)
        dict_0 = test_case_0.get_attributes()
        test_suite_0 = module_0.TestSuite(str_0, str_0, str_1, dict_0, str_1)
        element_0 = test_suite_0.get_xml_element()
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = ''
        test_case_0 = module_0.TestCase(str_0, str_0, str_0)
        dict_0 = test_case_0.get_attributes()
        dict_1 = test_case_0.get_attributes()
        element_0 = test_case_0.get_xml_element()
        str_1 = "\n        Return the cls itself.  This makes both equality and identity True for comparing the class\n        to an instance of the class, preventing common usage errors.\n\n        Preferred usage::\n\n            a = Sentinel\n            if a is Sentinel:\n                print('Sentinel value')\n\n        However, these are True as well, eliminating common usage errors::\n\n            if Sentinel is Sentinel():\n                print('Sentinel value')\n\n            if Sentinel == Sentinel():\n                print('Sentinel value')\n        "
        bool_0 = True
        list_0 = [test_case_0, test_case_0, test_case_0, test_case_0]
        test_suite_0 = module_0.TestSuite(str_1, str_0, str_1, str_1, bool_0, list_0, str_1)
        dict_2 = test_suite_0.get_attributes()
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'cIg#v<5D$Lu_Tb>Si'
        str_1 = 'i7[WcDs'
        str_2 = ''
        decimal_0 = module_1.Decimal()
        test_error_0 = module_0.TestError(str_1, str_0)
        list_0 = [test_error_0, test_error_0]
        bool_0 = False
        test_case_0 = module_0.TestCase(str_2, str_1, decimal_0, list_0, str_2, str_1, bool_0)
        element_0 = test_case_0.get_xml_element()
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'No roles match your search.'
        list_0 = []
        test_suite_0 = module_0.TestSuite(str_0, str_0, str_0, str_0, list_0, str_0)
        element_0 = test_suite_0.get_xml_element()
    except BaseException:
        pass