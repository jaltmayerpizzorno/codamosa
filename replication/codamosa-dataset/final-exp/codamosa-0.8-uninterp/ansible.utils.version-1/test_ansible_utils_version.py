# Automatically generated by Pynguin.
import ansible.utils.version as module_0
import ansible.module_utils.compat.version as module_1

def test_case_0():
    pass

def test_case_1():
    semantic_version_0 = module_0.SemanticVersion()
    bytes_0 = b'\x99\xe3'
    str_0 = ',C?L\x0baT'
    alpha_0 = module_0._Alpha(str_0)
    var_0 = alpha_0.__ne__(bytes_0)

def test_case_2():
    bool_0 = False
    numeric_0 = module_0._Numeric(bool_0)

def test_case_3():
    semantic_version_0 = module_0.SemanticVersion()
    var_0 = semantic_version_0.__repr__()
    semantic_version_1 = module_0.SemanticVersion()
    var_1 = semantic_version_1.__gt__(semantic_version_1)
    float_0 = 4163.2
    bytes_0 = b'\x9f"8\x9e\x90Sp\xd7'
    alpha_0 = module_0._Alpha(bytes_0)
    numeric_0 = module_0._Numeric(float_0)
    var_2 = numeric_0.__le__(alpha_0)
    dict_0 = {}
    var_3 = alpha_0.__ne__(dict_0)
    var_4 = numeric_0.__repr__()

def test_case_4():
    semantic_version_0 = module_0.SemanticVersion()
    var_0 = semantic_version_0.__gt__(semantic_version_0)

def test_case_5():
    str_0 = ''
    str_1 = 'dvj}xfEwqgb g'
    alpha_0 = module_0._Alpha(str_1)
    list_0 = [alpha_0, alpha_0, str_0, alpha_0]
    var_0 = alpha_0.__eq__(list_0)
    var_1 = alpha_0.__gt__(alpha_0)

def test_case_6():
    int_0 = 1
    numeric_0 = module_0._Numeric(int_0)
    int_1 = 2
    numeric_1 = module_0._Numeric(int_1)
    var_0 = numeric_0.__ge__(numeric_1)

def test_case_7():
    semantic_version_0 = module_0.SemanticVersion()
    var_0 = semantic_version_0.__repr__()
    str_0 = ''
    var_1 = semantic_version_0.__le__(str_0)

def test_case_8():
    str_0 = 'a'
    alpha_0 = module_0._Alpha(str_0)
    str_1 = 'b'
    alpha_1 = module_0._Alpha(str_1)
    var_0 = alpha_0 <= alpha_1
    alpha_2 = module_0._Alpha(str_0)
    var_1 = alpha_2 <= str_1
    var_2 = var_0 and var_1

def test_case_9():
    semantic_version_0 = module_0.SemanticVersion()
    var_0 = semantic_version_0.__repr__()
    float_0 = 4163.2
    bytes_0 = b'\x9f"8\x9e\x90Sp\xd7'
    alpha_0 = module_0._Alpha(bytes_0)
    numeric_0 = module_0._Numeric(float_0)
    var_1 = numeric_0.__le__(alpha_0)

def test_case_10():
    int_0 = 5
    numeric_0 = module_0._Numeric(int_0)
    numeric_1 = module_0._Numeric(int_0)
    var_0 = numeric_0.__ge__(numeric_1)
    numeric_2 = module_0._Numeric(int_0)
    numeric_3 = module_0._Numeric(int_0)
    var_1 = numeric_2.__ge__(numeric_3)
    numeric_4 = module_0._Numeric(int_0)
    int_1 = 0
    var_2 = numeric_4.__ge__(int_1)
    numeric_5 = module_0._Numeric(int_1)
    var_3 = numeric_5.__ge__(int_1)
    numeric_6 = module_0._Numeric(int_1)
    numeric_7 = module_0._Numeric(int_0)
    var_4 = numeric_6.__ge__(numeric_7)
    int_2 = -5
    numeric_8 = module_0._Numeric(int_2)
    var_5 = numeric_6.__ge__(numeric_8)
    numeric_9 = module_0._Numeric(int_0)

def test_case_11():
    str_0 = '1.2.3'
    loose_version_0 = module_1.LooseVersion(str_0)
    str_1 = '1.2.3-beta.2'
    loose_version_1 = module_1.LooseVersion(str_1)
    semantic_version_0 = module_0.SemanticVersion(str_1)
    str_2 = '1.2.3+build.21'
    loose_version_2 = module_1.LooseVersion(str_2)
    semantic_version_1 = module_0.SemanticVersion(str_2)
    loose_version_3 = module_1.LooseVersion(str_0)
    str_3 = '0.2.0'
    semantic_version_2 = module_0.SemanticVersion(str_3)

def test_case_12():
    int_0 = 1
    numeric_0 = module_0._Numeric(int_0)
    numeric_1 = module_0._Numeric(int_0)
    numeric_2 = module_0._Numeric(int_0)
    int_1 = 2
    numeric_3 = module_0._Numeric(int_1)
    numeric_4 = module_0._Numeric(int_1)
    numeric_5 = module_0._Numeric(int_0)
    var_0 = numeric_4 <= numeric_5
    numeric_6 = module_0._Numeric(int_0)
    numeric_7 = module_0._Numeric(int_0)
    numeric_8 = module_0._Numeric(int_1)
    var_1 = numeric_8 <= int_0
    numeric_9 = module_0._Numeric(int_0)
    str_0 = '1'
    alpha_0 = module_0._Alpha(str_0)
    numeric_10 = module_0._Numeric(int_1)
    alpha_1 = module_0._Alpha(str_0)
    var_2 = numeric_10 <= alpha_1