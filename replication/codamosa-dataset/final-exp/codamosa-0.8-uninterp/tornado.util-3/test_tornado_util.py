# Automatically generated by Pynguin.
import tornado.util as module_0
import builtins as module_1

def test_case_0():
    pass

def test_case_1():
    gzip_decompressor_0 = module_0.GzipDecompressor()

def test_case_2():
    base_exception_0 = module_1.BaseException()
    optional_0 = module_0.errno_from_exception(base_exception_0)

def test_case_3():
    str_0 = 'JnmN-9k,VFu'
    list_0 = [str_0, str_0]
    dict_0 = {}
    base_exception_0 = module_1.BaseException(*list_0, **dict_0)
    optional_0 = module_0.errno_from_exception(base_exception_0)

def test_case_4():
    str_0 = '*\\%y3(mwC\rsr,`ESO{k'
    str_1 = module_0.re_unescape(str_0)

def test_case_5():
    str_0 = 'Wt5S'
    str_1 = module_0.re_unescape(str_0)

def test_case_6():
    var_0 = module_0.doctests()

def test_case_7():
    str_0 = None
    var_0 = module_0.doctests()
    gzip_decompressor_0 = module_0.GzipDecompressor()
    arg_replacer_0 = module_0.ArgReplacer(var_0, str_0)
    list_0 = [str_0, arg_replacer_0, arg_replacer_0]
    timeout_error_0 = module_0.TimeoutError(*list_0)
    dict_0 = {str_0: timeout_error_0, str_0: arg_replacer_0, str_0: gzip_decompressor_0}
    tuple_0 = arg_replacer_0.replace(gzip_decompressor_0, timeout_error_0, dict_0)
    base_exception_0 = module_1.BaseException()
    any_0 = arg_replacer_0.get_old_value(base_exception_0, dict_0)

def test_case_8():
    str_0 = 'error message'
    var_0 = IOError(str_0)
    optional_0 = module_0.errno_from_exception(var_0)
    var_1 = IOError()
    optional_1 = module_0.errno_from_exception(var_1)
    var_2 = Exception()
    optional_2 = module_0.errno_from_exception(var_2)