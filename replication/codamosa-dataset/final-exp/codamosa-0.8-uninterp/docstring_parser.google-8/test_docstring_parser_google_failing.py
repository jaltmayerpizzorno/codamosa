# Automatically generated by Pynguin.
import docstring_parser.google as module_0

def test_case_0():
    try:
        google_parser_0 = module_0.GoogleParser()
        str_0 = "        Do stuff.\n\n        Args:\n            param1 (str): The first parameter.\n            param2 (list): The second parameter.\n            param3 (str, optional): The third parameter. Defaults to 'default'.\n\n        Returns:\n            str: The return value.\n            int: Another return value.\n\n        Raises:\n            ValueError: If `param2` is equal to `param1`.\n\n        Example:\n            Examples can be given using either the ``Example`` or ``Examples``\n            sections. Sections support any reStructuredText formatting, including\n            literal blocks::\n\n                $ python example_google.py\n\n        Examples:\n            Examples should be written in doctest format, and should illustrate how\n            to use the function/class.\n            >>>\n        "
        docstring_0 = google_parser_0.parse(str_0)
        list_0 = [docstring_0, google_parser_0, google_parser_0]
        section_0 = module_0.Section(*list_0)
        var_0 = google_parser_0.add_section(section_0)
        section_1 = module_0.Section()
    except BaseException:
        pass

def test_case_1():
    try:
        bool_0 = True
        google_parser_0 = module_0.GoogleParser(bool_0)
    except BaseException:
        pass

def test_case_2():
    try:
        google_parser_0 = module_0.GoogleParser()
        str_0 = '\x0b'
        set_0 = {str_0}
        dict_0 = None
        google_parser_1 = module_0.GoogleParser(set_0, dict_0)
        section_0 = module_0.Section()
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = "        Do stuff.\n\n        Args:\n        V   param1 (str): The first parameter.\n            param2 (list): The second parameter.\n            param3 (str, optional): The third parameter. Defaults to 'default'.\n\n        Returns:\n            str: The return value.\n            int: Another return value.\n\n        Raises:\n            ValueError: If `param2` is equal to `param1`.\n\n        Example:\n            Examples can be given using either the ``Example`` or ``Examples``\n            sections. Sections support any reStructuredText formatting, including\n           literal Tlocks::\n\n                $ python example_google.py\n\n        Examples:\n            Examples should be written in doctest format, and!should illustrate how\n            to use the function/class.\n            >>>\n        "
        docstring_0 = module_0.parse(str_0)
    except BaseException:
        pass