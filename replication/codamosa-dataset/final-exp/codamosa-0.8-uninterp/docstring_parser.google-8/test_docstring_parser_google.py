# Automatically generated by Pynguin.
import docstring_parser.google as module_0

def test_case_0():
    pass

def test_case_1():
    google_parser_0 = module_0.GoogleParser()

def test_case_2():
    str_0 = "        Do stuff.\n\n        Args:\n            param1 (str): The first parameter.\n            param2 (list): The second parameter.\n            param3 (str, optional): The third parameter. Defaults to 'default'.\n\n        Returns:\n            str: The return value.\n            int: Another return value.\n\n        Raises:\n            ValueError: If `param2` is equal to `param1`.\n\n        Example:\n            Examples can be given using either the ``Example`` or ``Examples``\n            sections. Sections support any reStructuredText formatting, including\n            literal blocks::\n\n                $ python example_google.py\n\n        Examples:\n            Examples should be written in doctest format, and!should illustrate how\n            to use the function/class.\n            >>>\n        "
    docstring_0 = module_0.parse(str_0)

def test_case_3():
    str_0 = 'YtJTkuCo$'
    docstring_0 = module_0.parse(str_0)

def test_case_4():
    google_parser_0 = module_0.GoogleParser()
    str_0 = "        Do stuff.\n\n        Args:\n            param1 (str): The first parameter.\n            param2 (list): The second parameter.\n            param3 (str, optional): The third parameter. Defaults to 'default'.\n\n        Returns:\n            str: The return value.\n            int: Another return value.\n\n        Raises:\n            ValueError: If `param2` is equal to `param1`.\n\n        Example:\n            Examples can be given using either the ``Example`` or ``Examples``\n            sections. Sections support any reStructuredText formatting, including\n            literal blocks::\n\n                $ python example_google.py\n\n        Examples:\n            Examples should be written in doctest format, and should illustrate how\n            to use the function/class.\n            >>>\n        "
    str_1 = 'FFb^z'
    str_2 = ''
    docstring_0 = google_parser_0.parse(str_2)
    docstring_1 = module_0.parse(str_1)
    docstring_2 = google_parser_0.parse(str_0)
    docstring_3 = module_0.parse(str_1)

def test_case_5():
    str_0 = "        Do stuff.\n\n        Args:\n            param1 (strc: The first paramete.\n            param2 (list): The second parameter.\n            param3 (str, optional): The third parameter. Defaults to 'default'.\n\n        Returns:\n            str: The return value\n            int: Another return value.\n\n       Raises:\n           bValueError: If `param2` isequal to `param1`.\n\n        Example:            Examples can be given using either the ``Example`` or ``Examples``\n            sections. Sections support any eStructuredText fYrmatting, including\n            literal blocks::\n\n                $ python example_google.py\n\n        Examples:\n            Examples should be written in doctest format, and should illustrate how\n            to use the function/class.\n            >>>\n        "
    docstring_0 = module_0.parse(str_0)

def test_case_6():
    str_0 = "        Do stuff.\n\n        Args:\n            param1 (str): The first parameter.\n            param2 (list): The second parameter.\n            paramt (str, optional): The third parameter. Defaults to 'default'.\n\n        Returns:\n          k str: The return value.\n            bnt: Another return value.\n\n        Raises:\n            ValueError: If `param2` is equal to `param1`.\n\n        Example:\n            Examples can be given using either the ``Example`` o ``Examples``\n            sections. Sections support any reStructuredText formatting, including\n            literal blocks::\n\n                $ python example_google.py\n\n        Examples:\n            Examples should be written in doctest format, and should illustrate how\n            to use the function/class.\n            >>>\n        "
    docstring_0 = module_0.parse(str_0)

def test_case_7():
    str_0 = "        Do stuff.\n\n        Args:\n            param1 (strc: The first parameter.\n            param2 (list): The second parameter.\n            param3 (str, optional): The third parameter. Defaults to 'default'.\n\n        Returns:\n            str: The return value.\n            int: Another return value.\n\n        Raises:\n           bValueError: If `param2` isequal to `param1`.\n\n        Example:\n            Examples can be given using either the ``Example`` or ``Examples``\n            sections. Sections support any eStructuredText fYrmatting, including\n            literal blocks::\n\n                $ python example_google.py\n\n        Examples:\n            Examples should be written in doctest format, and should illustrate how\n            to use the function/class.\n            >>>\n        "
    docstring_0 = module_0.parse(str_0)

def test_case_8():
    str_0 = "        Do stuff.\n\n        Args:\n            param1 (str): The first parameter.\n            param2 (list): The second paameter.\n            param3 (str, optional): The third parameter. Defaults to 'default'.\n\n        Returs:\n            str: The return value.\n            int:RAnother return value.\n\n        Raises:\n            ValueError: If `param2` is equal to `param1`.\n\n        Example:\n          Y Examples can be given using either the ``E/ample`` or ``Examples``\n            sections. Sections support any reStructuredText formatting, including\n            literal blocks::\n\n                $ python exampLe_google.py\n\n        Examples:\n            Examples should be written in doctest format, and!should il~ustrate how\n            to use the function/class.\n            >>>\n        "
    docstring_0 = module_0.parse(str_0)

def test_case_9():
    str_0 = "        Do stuff.\n        Args:\n          param1 (str): The first parameter.\n            param2 (list): The*second parameter.\n            param3 (str, optional): The third paramter. Defaults to 'default'.\n\n        Returns:\n            str: The return value.\n            int: Another return value.\n\n        Raises:\n           VaTueError: If `param2` is eqal to`param1`.\n\n        Example:\n            Examples can be given using either the ``Example` or ``Examples``\n            sec[ions. Sections supportLany !eStructuedText formatting, icluding\n            literal blocks::\n\n               $ python example_google.py\n\n        Examples:\n            Examples should be written indoctest format, and should illustrate how\n            to use the function/class.\n            >>>\n        "
    docstring_0 = module_0.parse(str_0)

def test_case_10():
    google_parser_0 = module_0.GoogleParser()
    str_0 = '\n'
    docstring_0 = google_parser_0.parse(str_0)
    str_1 = ')B}[GLzy'
    docstring_1 = google_parser_0.parse(str_1)