# Automatically generated by Pynguin.
import pytutils.trees as module_0

def test_case_0():
    try:
        tree_0 = module_0.Tree()
        str_0 = 'pformat'
        var_0 = tree_0.__getitem__(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        tree_0 = module_0.Tree()
        var_0 = tree_0.__getitem__(tree_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b'A\x94I\xbcC$\xef\x8b\xd3\xf8~\x80\xd8\xd2\x1d\xfd\xf5\x81'
        int_0 = -3176
        tree_0 = module_0.Tree()
        var_0 = tree_0.__setitem__(bytes_0, int_0)
    except BaseException:
        pass

def test_case_3():
    try:
        tree_0 = module_0.Tree()
        str_0 = "U_'2hP{Xb<?h;/tdI|N<"
        bool_0 = False
        bytes_0 = b'q&\xec*G*'
        var_0 = tree_0.__setitem__(str_0, bool_0, bytes_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = '_`'
        registry_tree_0 = module_0.RegistryTree(str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        bytes_0 = b'EE\x03\xff_\xca\x86 Z\x18\x11'
        dict_0 = {bytes_0: bytes_0}
        list_0 = [dict_0, bytes_0, bytes_0]
        int_0 = 820
        set_0 = set()
        tree_0 = module_0.Tree(set_0)
        var_0 = tree_0.__setitem__(list_0, list_0, int_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = ':IZ'
        bytes_0 = b'\xf5\x949\xe4\\\x04\xe5+\xafry\x8d\xf6\x03'
        str_1 = 'pN8'
        tuple_0 = (str_0, bytes_0, str_1)
        registry_tree_0 = None
        dict_0 = {tuple_0: registry_tree_0}
        tree_0 = module_0.Tree(dict_0)
        var_0 = module_0.tree()
        str_2 = 'args'
        str_3 = ''
        list_0 = [str_3, str_2, dict_0, str_3]
        tree_1 = module_0.Tree(bytes_0, str_0, list_0)
    except BaseException:
        pass

def test_case_7():
    try:
        bytes_0 = b'\x0b\xac\xd5\xef\xb4\x9f.m'
        str_0 = 'D3\x0c\x0b)'
        list_0 = []
        float_0 = 4045.0
        var_0 = module_0.get_tree_node(bytes_0, str_0, list_0, float_0)
    except BaseException:
        pass