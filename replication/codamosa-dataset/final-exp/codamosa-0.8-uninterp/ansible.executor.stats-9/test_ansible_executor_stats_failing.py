# Automatically generated by Pynguin.
import ansible.executor.stats as module_0

def test_case_0():
    try:
        str_0 = 'b|?lB>'
        bytes_0 = b'5I\xf6"\xd7\xfe\xc3C\xce\x1b\xa6MU\x9e\xc3\x80'
        tuple_0 = (bytes_0,)
        aggregate_stats_0 = module_0.AggregateStats()
        var_0 = aggregate_stats_0.increment(str_0, tuple_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = b"\n\x81nU\xca\xe7\xf6\x97V\xe0FV!\xe9'\x10\x8f"
        str_0 = '8.\r\tF@n1s{-q^'
        aggregate_stats_0 = module_0.AggregateStats()
        var_0 = aggregate_stats_0.decrement(bytes_0, str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        aggregate_stats_0 = module_0.AggregateStats()
        float_0 = -1198.89667
        str_0 = 'Failed to connect to the host via ssh:'
        var_0 = aggregate_stats_0.update_custom_stats(float_0, str_0)
        aggregate_stats_1 = None
        aggregate_stats_2 = module_0.AggregateStats()
        list_0 = [aggregate_stats_2, aggregate_stats_1]
        var_1 = aggregate_stats_1.increment(aggregate_stats_1, list_0)
    except BaseException:
        pass

def test_case_3():
    try:
        aggregate_stats_0 = module_0.AggregateStats()
        str_0 = 'failures'
        int_0 = 3670
        var_0 = aggregate_stats_0.update_custom_stats(str_0, int_0, str_0)
        int_1 = -25
        var_1 = aggregate_stats_0.update_custom_stats(str_0, int_1, str_0)
        str_1 = {str_0: str_0}
        var_2 = aggregate_stats_0.update_custom_stats(str_0, str_1, str_1)
    except BaseException:
        pass

def test_case_4():
    try:
        aggregate_stats_0 = module_0.AggregateStats()
        str_0 = 'failures'
        int_0 = 3670
        var_0 = aggregate_stats_0.update_custom_stats(str_0, int_0, str_0)
        int_1 = -25
        var_1 = aggregate_stats_0.update_custom_stats(str_0, int_1, str_0)
        str_1 = {str_0: str_0, int_1: var_0}
        var_2 = aggregate_stats_0.update_custom_stats(str_0, str_1, str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        aggregate_stats_0 = module_0.AggregateStats()
        str_0 = 'localhost'
        str_1 = 'failures'
        int_0 = 2
        var_0 = aggregate_stats_0.update_custom_stats(str_1, int_0, str_0)
        set_0 = {str_1}
        var_1 = aggregate_stats_0.decrement(str_1, set_0)
    except BaseException:
        pass