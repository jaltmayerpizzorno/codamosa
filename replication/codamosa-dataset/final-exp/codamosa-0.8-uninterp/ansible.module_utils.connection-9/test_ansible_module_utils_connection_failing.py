# Automatically generated by Pynguin.
import ansible.module_utils.connection as module_0

def test_case_0():
    try:
        str_0 = "dE&xtLEL16m'nD:g"
        var_0 = module_0.write_to_file_descriptor(str_0, str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bool_0 = True
        str_0 = None
        var_0 = module_0.write_to_file_descriptor(bool_0, str_0)
        connection_0 = module_0.Connection(bool_0)
        var_1 = module_0.recv_data(connection_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'q::~!gAJJ'
        dict_0 = {str_0: str_0, str_0: str_0}
        var_0 = module_0.send_data(str_0, dict_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = None
        var_0 = module_0.recv_data(bytes_0)
    except BaseException:
        pass

def test_case_4():
    try:
        bool_0 = False
        connection_0 = module_0.Connection(bool_0)
        list_0 = [connection_0]
        bytes_0 = b'\x80\xf7\x85\x83WtND\xf9s{\xe8\xcc\xce\xe47'
        var_0 = module_0.exec_command(list_0, bytes_0)
    except BaseException:
        pass

def test_case_5():
    try:
        bool_0 = True
        connection_0 = module_0.Connection(bool_0)
        var_0 = connection_0.__rpc__(bool_0)
    except BaseException:
        pass

def test_case_6():
    try:
        bool_0 = False
        connection_0 = module_0.Connection(bool_0)
        var_0 = connection_0.__rpc__(connection_0)
    except BaseException:
        pass

def test_case_7():
    try:
        bool_0 = True
        connection_0 = module_0.Connection(bool_0)
        str_0 = '\x0bc2I6T'
        dict_0 = {str_0: connection_0}
        connection_error_0 = module_0.ConnectionError(str_0, **dict_0)
        var_0 = connection_0.__rpc__(connection_error_0, **dict_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = 'lUOHE?\x0c7c'
        connection_0 = module_0.Connection(str_0)
        bool_0 = None
        connection_1 = module_0.Connection(bool_0)
    except BaseException:
        pass

def test_case_9():
    try:
        bool_0 = False
        connection_0 = module_0.Connection(bool_0)
        var_0 = module_0.recv_data(connection_0)
    except BaseException:
        pass

def test_case_10():
    try:
        bool_0 = False
        str_0 = None
        list_0 = [str_0, str_0]
        connection_error_0 = module_0.ConnectionError(list_0)
        var_0 = module_0.write_to_file_descriptor(bool_0, str_0)
        float_0 = -2057.43345
        bytes_0 = b'\xc9\xe4\xa4E\x9d\x00\xb0xn[[\xf9UH\xdf@\x00\xa6'
        connection_0 = module_0.Connection(bytes_0)
        var_1 = connection_0.send(float_0)
    except BaseException:
        pass

def test_case_11():
    try:
        bytes_0 = b'\x1dl$\x91b\xc1]\x8a\xd0'
        connection_0 = module_0.Connection(bytes_0)
        var_0 = connection_0.__rpc__(bytes_0)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = 'Uzdj<\n{Q\t$\n}&<v='
        str_1 = '^ai]~"x{k2'
        list_0 = [str_1, str_1, str_1, str_1]
        bytes_0 = b'\x0e*\xd1'
        tuple_0 = (list_0, list_0, bytes_0)
        connection_0 = module_0.Connection(tuple_0)
        int_0 = -4856
        str_2 = '_=_yGz`'
        dict_0 = {str_0: int_0, str_2: str_2}
        connection_1 = module_0.Connection(dict_0)
        var_0 = connection_1.__getattr__(dict_0)
    except BaseException:
        pass