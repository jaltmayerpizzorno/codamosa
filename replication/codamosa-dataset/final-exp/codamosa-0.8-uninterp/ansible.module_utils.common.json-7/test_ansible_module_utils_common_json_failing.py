# Automatically generated by Pynguin.
import ansible.module_utils.common.json as module_0
import datetime as module_1

def test_case_0():
    try:
        bool_0 = True
        str_0 = '%Ic5L;'
        list_0 = [bool_0, str_0, bool_0]
        dict_0 = {str_0: str_0, bool_0: str_0}
        ansible_j_s_o_n_encoder_0 = module_0.AnsibleJSONEncoder(dict_0)
        var_0 = ansible_j_s_o_n_encoder_0.iterencode(list_0)
        str_1 = 'tg<BTl=q?ZHQJ'
        int_0 = 36
        ansible_j_s_o_n_encoder_1 = module_0.AnsibleJSONEncoder(int_0)
        dict_1 = {str_0: str_0, str_1: str_1}
        ansible_j_s_o_n_encoder_2 = module_0.AnsibleJSONEncoder(**dict_1)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = ''
        ansible_j_s_o_n_encoder_0 = module_0.AnsibleJSONEncoder(str_0)
        dict_0 = {ansible_j_s_o_n_encoder_0: str_0}
        var_0 = ansible_j_s_o_n_encoder_0.default(dict_0)
        bool_0 = True
        var_1 = ansible_j_s_o_n_encoder_0.default(bool_0)
    except BaseException:
        pass

def test_case_2():
    try:
        ansible_j_s_o_n_encoder_0 = module_0.AnsibleJSONEncoder()
        var_0 = ansible_j_s_o_n_encoder_0.default(ansible_j_s_o_n_encoder_0)
    except BaseException:
        pass

def test_case_3():
    try:
        ansible_j_s_o_n_encoder_0 = module_0.AnsibleJSONEncoder()
        var_0 = ansible_j_s_o_n_encoder_0.encode(ansible_j_s_o_n_encoder_0)
    except BaseException:
        pass

def test_case_4():
    try:
        bool_0 = True
        str_0 = '%Ic5L;'
        list_0 = [bool_0, bool_0, bool_0, bool_0]
        dict_0 = {str_0: str_0, bool_0: str_0}
        ansible_j_s_o_n_encoder_0 = module_0.AnsibleJSONEncoder(dict_0)
        var_0 = ansible_j_s_o_n_encoder_0.iterencode(list_0)
        datetime_0 = module_1.datetime(*list_0)
        var_1 = ansible_j_s_o_n_encoder_0.default(datetime_0)
        var_2 = ansible_j_s_o_n_encoder_0.default(ansible_j_s_o_n_encoder_0)
    except BaseException:
        pass