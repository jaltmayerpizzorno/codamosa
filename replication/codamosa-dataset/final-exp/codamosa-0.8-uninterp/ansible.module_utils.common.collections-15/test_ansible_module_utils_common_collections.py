# Automatically generated by Pynguin.
import ansible.module_utils.common.collections as module_0

def test_case_0():
    bytes_0 = b't\x00\xe4lZ\x1d5"1H\xe5C3\xe9\xad\x00Y\xbd\xa4f'
    immutable_dict_0 = module_0.ImmutableDict()
    var_0 = immutable_dict_0.difference(bytes_0)

def test_case_1():
    dict_0 = {}
    immutable_dict_0 = module_0.ImmutableDict()
    var_0 = immutable_dict_0.__eq__(dict_0)

def test_case_2():
    bool_0 = True
    var_0 = module_0.is_iterable(bool_0)
    immutable_dict_0 = module_0.ImmutableDict()
    var_1 = immutable_dict_0.__hash__()
    var_2 = immutable_dict_0.__len__()

def test_case_3():
    immutable_dict_0 = module_0.ImmutableDict()
    immutable_dict_1 = module_0.ImmutableDict()
    var_0 = immutable_dict_1.__iter__()
    var_1 = immutable_dict_0.__repr__()

def test_case_4():
    float_0 = 100.0
    var_0 = module_0.is_sequence(float_0)
    immutable_dict_0 = module_0.ImmutableDict()
    var_1 = module_0.count(immutable_dict_0)

def test_case_5():
    bytes_0 = b'\xc9\xa0\xfc"\xe2\xf6'
    var_0 = module_0.is_sequence(bytes_0)

def test_case_6():
    int_0 = -3007
    dict_0 = {}
    immutable_dict_0 = module_0.ImmutableDict(**dict_0)
    var_0 = module_0.is_sequence(int_0)

def test_case_7():
    bytes_0 = b'\xc9\xa0\xfc"\xe2\xf6'
    bytes_1 = b']\xd0\x9bxq\x142\x1c\xca\x07\x9d'
    list_0 = [bytes_1]
    var_0 = module_0.is_sequence(list_0)
    list_1 = [bytes_0]
    var_1 = module_0.count(list_1)

def test_case_8():
    str_0 = '*)?qw"&/z\r#'
    set_0 = {str_0}
    dict_0 = {str_0: str_0, str_0: set_0}
    bytes_0 = b'P\xa6\x1a\x1a\x1d3A7\xc0\xd4\xa7,'
    var_0 = module_0.is_iterable(dict_0, bytes_0)
    str_1 = ':class:`list` of :class:`AnsibleValidationError` objects'
    dict_1 = {str_0: str_0, str_0: str_0, str_1: str_1}
    immutable_dict_0 = module_0.ImmutableDict(**dict_1)
    var_1 = immutable_dict_0.__iter__()
    float_0 = -1502.825
    var_2 = immutable_dict_0.__eq__(float_0)
    var_3 = immutable_dict_0.__hash__()

def test_case_9():
    immutable_dict_0 = module_0.ImmutableDict()
    var_0 = immutable_dict_0.__hash__()
    dict_0 = {}
    str_0 = 'ansible_discovered_interpreter_'
    tuple_0 = (immutable_dict_0, str_0)
    var_1 = immutable_dict_0.difference(tuple_0)
    str_1 = '25}"7bXC TX"BM}'
    list_0 = None
    int_0 = 3046
    tuple_1 = (str_1, list_0, int_0)
    var_2 = module_0.is_iterable(tuple_1)
    immutable_dict_1 = module_0.ImmutableDict(**dict_0)
    var_3 = immutable_dict_1.__repr__()
    var_4 = immutable_dict_1.__repr__()
    var_5 = immutable_dict_0.__iter__()
    list_1 = []
    immutable_dict_2 = module_0.ImmutableDict(*list_1)
    var_6 = immutable_dict_2.__eq__(immutable_dict_1)
    var_7 = immutable_dict_0.__iter__()

def test_case_10():
    int_0 = 480
    str_0 = 'x(P0H&\x0c~'
    str_1 = '"\n\x0c'
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_0, str_1: str_0}
    set_0 = {int_0, int_0, str_0}
    var_0 = module_0.count(set_0)
    list_0 = []
    immutable_dict_0 = module_0.ImmutableDict(*list_0, **dict_0)
    var_1 = immutable_dict_0.difference(dict_0)
    immutable_dict_1 = module_0.ImmutableDict(**dict_0)