# Automatically generated by Pynguin.
import ansible.vars.reserved as module_0

def test_case_0():
    try:
        str_0 = "8MhUh|,se0'/SD2Y;ge+"
        var_0 = module_0.is_reserved_name(str_0)
        str_1 = 'T)r&'
        list_0 = []
        var_1 = module_0.get_reserved_names(list_0)
        list_1 = [str_1, str_1]
        var_2 = module_0.warn_if_reserved(list_1)
        bytes_0 = None
        int_0 = -1700
        var_3 = module_0.is_reserved_name(int_0)
        var_4 = module_0.get_reserved_names(bytes_0)
        var_5 = module_0.warn_if_reserved(str_1)
        var_6 = module_0.is_reserved_name(list_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = b'b\xe8\xb9'
        list_0 = [bytes_0]
        list_1 = [bytes_0, bytes_0, list_0]
        bytes_1 = b'\xa5\xee\xe76N\x99#M\x06\xe2\xc1\x9b\xa6\x06'
        var_0 = module_0.warn_if_reserved(list_1, bytes_1)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '&Ju;8")\x0bD}cY$'
        var_0 = module_0.warn_if_reserved(str_0, str_0)
        str_1 = "k}_t?Wv'k\n?@Buo|+\x0b:X"
        int_0 = 638
        tuple_0 = (str_0, str_1, int_0)
        var_1 = module_0.is_reserved_name(tuple_0)
        int_1 = 1023
        var_2 = module_0.warn_if_reserved(int_1)
    except BaseException:
        pass