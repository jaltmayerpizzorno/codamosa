# Automatically generated by Pynguin.
import pymonet.box as module_0
import builtins as module_1

def test_case_0():
    pass

def test_case_1():
    var_0 = None
    box_0 = module_0.Box(var_0)

def test_case_2():
    dict_0 = {}
    object_0 = module_1.object(**dict_0)
    box_0 = module_0.Box(object_0)
    str_0 = box_0.__str__()

def test_case_3():
    str_0 = '\n    Data type for storage any type of function.\n    This function (and all his mappers) will be called only during calling fold method\n    '
    box_0 = module_0.Box(str_0)
    var_0 = box_0.to_maybe()

def test_case_4():
    str_0 = ''
    set_0 = {str_0, str_0, str_0, str_0}
    box_0 = module_0.Box(set_0)
    var_0 = box_0.to_either()

def test_case_5():
    object_0 = module_1.object()
    float_0 = -3977.4482
    str_0 = 'KCW#kcxC`'
    tuple_0 = (float_0, str_0)
    box_0 = module_0.Box(tuple_0)
    var_0 = box_0.to_lazy()
    bytes_0 = b'\xd6\x14\xa3i\x879\xe3\xf4\x06\xc3\xc7\x81\x13\xd4\xcb*'
    box_1 = module_0.Box(bytes_0)
    var_1 = box_1.to_validation()
    bool_0 = box_1.__eq__(object_0)

def test_case_6():
    str_0 = "GqY1+slt'R/`H`"
    box_0 = module_0.Box(str_0)
    var_0 = box_0.to_validation()
    bool_0 = True
    box_1 = module_0.Box(bool_0)

def test_case_7():
    int_0 = 1
    box_0 = module_0.Box(int_0)
    var_0 = box_0 == box_0
    box_1 = module_0.Box(int_0)
    int_1 = 2
    box_2 = module_0.Box(int_1)
    var_1 = box_1 == box_2