# Automatically generated by Pynguin.
import pysnooper.utils as module_0

def test_case_0():
    pass

def test_case_1():
    str_0 = ''
    var_0 = module_0.shitcode(str_0)

def test_case_2():
    bytes_0 = b'\xc1\x0f\xa1\x1e\xc9'
    var_0 = module_0.get_shortish_repr(bytes_0)

def test_case_3():
    str_0 = 'TjpTF+KK\x0cK $Uwuk\x0b8|@'
    var_0 = module_0.normalize_repr(str_0)

def test_case_4():
    str_0 = 'e\t~\x0b='
    var_0 = module_0.ensure_tuple(str_0)

def test_case_5():
    str_0 = 'SOURCE IS UNAVAILABLE'
    var_0 = module_0.shitcode(str_0)

def test_case_6():
    str_0 = 'K:u\\>\x0c<kUxeS+*F`'
    var_0 = module_0.shitcode(str_0)
    str_1 = 'R_fspagh_>_'
    var_1 = module_0.normalize_repr(str_1)
    int_0 = 326
    var_2 = module_0.ensure_tuple(int_0)

def test_case_7():
    tuple_0 = ()
    var_0 = module_0.ensure_tuple(tuple_0)

def test_case_8():
    str_0 = 'a'
    var_0 = module_0.shitcode(str_0)
    int_0 = 256
    var_1 = str_0 * int_0
    var_2 = module_0.shitcode(var_1)
    str_1 = 'a😄'
    var_3 = module_0.shitcode(str_1)

def test_case_9():
    str_0 = '\x00ÿ'
    var_0 = module_0.shitcode(str_0)
    str_1 = '�'
    var_1 = module_0.shitcode(str_1)
    str_2 = 'ÿ'
    var_2 = module_0.shitcode(str_2)
    var_3 = module_0.shitcode(str_1)
    str_3 = '\x00'
    var_4 = module_0.shitcode(str_3)
    var_5 = module_0.shitcode(str_3)
    str_4 = 'क'
    var_6 = module_0.shitcode(str_4)
    str_5 = '👀'
    var_7 = module_0.shitcode(str_5)
    str_6 = '🐀'
    var_8 = module_0.shitcode(str_6)