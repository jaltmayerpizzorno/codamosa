# Automatically generated by Pynguin.
import ansible.module_utils.facts.system.distribution as module_0

def test_case_0():
    pass

def test_case_1():
    float_0 = 2.0
    distribution_files_0 = module_0.DistributionFiles(float_0)
    var_0 = distribution_files_0.process_dist_files()

def test_case_2():
    bool_0 = True
    str_0 = '&_4_AYv[\x0c]r r'
    float_0 = -1697.683779
    distribution_fact_collector_0 = module_0.DistributionFactCollector()
    tuple_0 = (distribution_fact_collector_0,)
    distribution_files_0 = module_0.DistributionFiles(tuple_0)
    var_0 = distribution_files_0.parse_distribution_file_OpenWrt(bool_0, str_0, str_0, float_0)

def test_case_3():
    float_0 = -1755.043119
    distribution_files_0 = None
    set_0 = {float_0}
    distribution_0 = module_0.Distribution(set_0)
    str_0 = '\x0b8c0pZ '
    distribution_files_1 = module_0.DistributionFiles(str_0)
    var_0 = distribution_files_1.parse_distribution_file_Alpine(float_0, distribution_files_0, distribution_0, distribution_files_0)
    complex_0 = None
    int_0 = 396
    distribution_files_2 = module_0.DistributionFiles(int_0)
    distribution_fact_collector_0 = module_0.DistributionFactCollector()
    tuple_0 = ()
    tuple_1 = ()
    distribution_1 = module_0.Distribution(complex_0)
    var_1 = distribution_files_2.parse_distribution_file_Slackware(tuple_0, tuple_1, distribution_fact_collector_0, distribution_1)
    distribution_2 = module_0.Distribution(distribution_fact_collector_0)
    var_2 = distribution_2.get_distribution_SMGL()

def test_case_4():
    tuple_0 = ()
    distribution_fact_collector_0 = module_0.DistributionFactCollector()
    var_0 = distribution_fact_collector_0.collect(tuple_0)
    distribution_0 = module_0.Distribution(tuple_0)
    set_0 = {distribution_0}
    var_1 = distribution_0.get_distribution_FreeBSD()
    bytes_0 = b'\xc1\xee\xeeJ'
    distribution_files_0 = module_0.DistributionFiles(bytes_0)
    list_0 = []
    distribution_files_1 = module_0.DistributionFiles(distribution_fact_collector_0)
    var_2 = distribution_files_1.parse_distribution_file_Debian(set_0, tuple_0, distribution_files_0, list_0)

def test_case_5():
    list_0 = []
    distribution_files_0 = module_0.DistributionFiles(list_0)
    str_0 = 'C@gORo#e*Jj*'
    bytes_0 = None
    distribution_0 = module_0.Distribution(bytes_0)
    float_0 = -895.1
    distribution_files_1 = module_0.DistributionFiles(float_0)
    var_0 = distribution_files_1.parse_distribution_file_Mandriva(distribution_files_0, str_0, distribution_0, distribution_0)
    distribution_fact_collector_0 = module_0.DistributionFactCollector()
    list_1 = [distribution_fact_collector_0]
    distribution_files_2 = module_0.DistributionFiles(list_1)
    var_1 = distribution_files_2.process_dist_files()
    var_2 = distribution_files_2.process_dist_files()

def test_case_6():
    dict_0 = None
    str_0 = 'lA*.-Re&%\tMu(&O$\x0cW'
    distribution_0 = module_0.Distribution(str_0)
    distribution_fact_collector_0 = module_0.DistributionFactCollector(dict_0, distribution_0)
    distribution_fact_collector_1 = module_0.DistributionFactCollector(distribution_fact_collector_0)
    str_1 = 'DoQ)25'
    distribution_files_0 = module_0.DistributionFiles(distribution_fact_collector_0)
    distribution_files_1 = module_0.DistributionFiles(distribution_files_0)
    distribution_files_2 = module_0.DistributionFiles(distribution_files_1)
    set_0 = {dict_0, distribution_files_2, distribution_files_1}
    bool_0 = True
    distribution_files_3 = module_0.DistributionFiles(bool_0)
    distribution_files_4 = module_0.DistributionFiles(distribution_files_3)
    var_0 = distribution_files_4.parse_distribution_file_NA(str_0, str_1, distribution_files_1, set_0)
    var_1 = distribution_files_3.process_dist_files()

def test_case_7():
    var_0 = None
    distribution_files_0 = module_0.DistributionFiles(var_0)
    str_0 = 'CoreOS'
    str_1 = 'GROUP=stable\nID=coreos\nVERSION_ID=835.11.0\nBUILD_ID=2019-01-30-2228\nPRETTY_NAME="CoreOS 835.11.0 (Update Channel: stable)"\nANSI_COLOR="1;31"\nHOME_URL="https://coreos.com/"\nBUG_REPORT_URL="https://issues.coreos.com"\nBUILDER_ID=2019-01-30-2228'
    str_2 = ''
    var_1 = {}
    var_2 = distribution_files_0.parse_distribution_file_Coreos(str_0, str_1, str_2, var_1)

def test_case_8():
    dict_0 = None
    distribution_files_0 = module_0.DistributionFiles(dict_0)
    str_0 = '{sI/'
    bool_0 = False
    bytes_0 = b'eH\xf6x\xdb/\xc0\xc6\x87\xe6\xdf'
    int_0 = -5504
    distribution_files_1 = module_0.DistributionFiles(int_0)
    var_0 = distribution_files_1.parse_distribution_file_Flatcar(distribution_files_0, str_0, bool_0, bytes_0)

def test_case_9():
    int_0 = 1915
    distribution_fact_collector_0 = module_0.DistributionFactCollector()
    str_0 = 'kw)!QPuG'
    distribution_files_0 = module_0.DistributionFiles(str_0)
    str_1 = '?.9(2_\t~u+pMs\\ga5srx'
    set_0 = set()
    var_0 = distribution_files_0.parse_distribution_file_ClearLinux(str_1, int_0, set_0, str_1)

def test_case_10():
    float_0 = 0.5
    distribution_0 = module_0.Distribution(float_0)

def test_case_11():
    bool_0 = False
    distribution_0 = module_0.Distribution(bool_0)
    var_0 = distribution_0.get_distribution_facts()

def test_case_12():
    str_0 = '\n    Test method get_distribution_FreeBSD from class Distribution\n    '
    distribution_0 = module_0.Distribution(str_0)
    var_0 = distribution_0.get_distribution_FreeBSD()

def test_case_13():
    distribution_fact_collector_0 = module_0.DistributionFactCollector()
    var_0 = distribution_fact_collector_0.collect()
    str_0 = 'L]g_7=8nM.K"?g'
    distribution_files_0 = module_0.DistributionFiles(str_0)

def test_case_14():
    tuple_0 = ()
    distribution_fact_collector_0 = module_0.DistributionFactCollector()
    var_0 = distribution_fact_collector_0.collect(tuple_0)
    distribution_0 = module_0.Distribution(tuple_0)
    set_0 = {distribution_0}
    var_1 = distribution_fact_collector_0.collect(distribution_0)
    var_2 = distribution_0.get_distribution_FreeBSD()
    bytes_0 = b'\xc1\xee\xeeJ'
    distribution_files_0 = module_0.DistributionFiles(bytes_0)
    list_0 = []
    distribution_files_1 = module_0.DistributionFiles(distribution_fact_collector_0)
    var_3 = distribution_files_1.parse_distribution_file_Debian(set_0, tuple_0, distribution_files_0, list_0)

def test_case_15():
    str_0 = None
    str_1 = '|:jX3_|a2v2'
    str_2 = '#{VE2eG\r~Xq\rTY'
    distribution_fact_collector_0 = None
    distribution_0 = module_0.Distribution(distribution_fact_collector_0)
    int_0 = 1560
    distribution_files_0 = module_0.DistributionFiles(int_0)
    var_0 = distribution_files_0.parse_distribution_file_Slackware(str_0, str_1, str_2, distribution_0)

def test_case_16():
    distribution_fact_collector_0 = module_0.DistributionFactCollector()
    var_0 = distribution_fact_collector_0.collect()
    str_0 = '\\'
    int_0 = -2371
    dict_0 = {}
    distribution_files_0 = module_0.DistributionFiles(dict_0)
    str_1 = 'runas'
    str_2 = 'NA'
    distribution_files_1 = module_0.DistributionFiles(str_2)
    list_0 = [int_0, str_1]
    set_0 = set()
    str_3 = 'dTVn'
    distribution_files_2 = module_0.DistributionFiles(str_3)
    var_1 = distribution_files_2.parse_distribution_file_CentOS(set_0, list_0, distribution_fact_collector_0, str_2)
    var_2 = distribution_files_1.parse_distribution_file_Alpine(int_0, distribution_files_0, str_1, dict_0)
    bytes_0 = b'\xf8'
    var_3 = distribution_fact_collector_0.collect(bytes_0)
    distribution_0 = module_0.Distribution(str_0)
    var_4 = distribution_files_1.process_dist_files()

def test_case_17():
    tuple_0 = ()
    distribution_fact_collector_0 = module_0.DistributionFactCollector()
    var_0 = distribution_fact_collector_0.collect(tuple_0)
    distribution_0 = module_0.Distribution(tuple_0)
    set_0 = {distribution_0}
    distribution_files_0 = module_0.DistributionFiles(distribution_fact_collector_0)
    var_1 = distribution_fact_collector_0.collect(distribution_files_0, set_0)
    distribution_files_1 = module_0.DistributionFiles(distribution_0)
    var_2 = distribution_0.get_distribution_FreeBSD()
    bytes_0 = b'\xc1\xee\xeeJ'
    distribution_files_2 = module_0.DistributionFiles(bytes_0)
    list_0 = []
    distribution_files_3 = module_0.DistributionFiles(distribution_fact_collector_0)
    var_3 = distribution_files_3.parse_distribution_file_Debian(set_0, tuple_0, distribution_files_2, list_0)
    bytes_1 = b"\xc0\xbf\x1dh\x08'\x84A\x9e\x99\x80@|.\xe1YPN"
    distribution_files_4 = module_0.DistributionFiles(bytes_1)
    str_0 = '\t,ps\'"~Z\'\x0bG/G{-e'
    var_4 = distribution_files_2.parse_distribution_file_ClearLinux(str_0, bytes_0, distribution_0, str_0)