# Automatically generated by Pynguin.
import tornado.auth as module_0
import tornado.httputil as module_1

def test_case_0():
    try:
        str_0 = '^EbMX!=9\\'
        open_id_mixin_0 = module_0.OpenIdMixin()
        open_id_mixin_0.authenticate_redirect(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        facebook_graph_mixin_0 = module_0.FacebookGraphMixin()
        dict_0 = {}
        facebook_graph_mixin_1 = module_0.FacebookGraphMixin()
        open_id_mixin_0 = module_0.OpenIdMixin(**dict_0)
        o_auth_mixin_0 = module_0.OAuthMixin(**dict_0)
        async_h_t_t_p_client_0 = open_id_mixin_0.get_auth_http_client()
    except BaseException:
        pass

def test_case_2():
    try:
        o_auth_mixin_0 = module_0.OAuthMixin()
        async_h_t_t_p_client_0 = o_auth_mixin_0.get_auth_http_client()
    except BaseException:
        pass

def test_case_3():
    try:
        o_auth2_mixin_0 = module_0.OAuth2Mixin()
        o_auth2_mixin_0.authorize_redirect()
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = '8i `\\Nsm\rnJ3N$Z1bX:'
        o_auth2_mixin_0 = module_0.OAuth2Mixin()
        o_auth2_mixin_0.authorize_redirect(str_0, str_0, str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'ep/'
        str_1 = ':^U`%5F.'
        open_id_mixin_0 = module_0.OpenIdMixin()
        dict_0 = open_id_mixin_0.get_authenticated_user()
        list_0 = [str_1, str_0, str_1]
        async_h_t_t_p_client_0 = None
        o_auth_mixin_0 = module_0.OAuthMixin()
        o_auth_mixin_0.authorize_redirect(list_0, async_h_t_t_p_client_0)
        str_2 = None
        dict_1 = {str_1: str_0, str_0: str_2}
        h_t_t_p_headers_0 = module_1.HTTPHeaders(**dict_1)
        iterator_0 = h_t_t_p_headers_0.__iter__()
        list_1 = [str_0]
        str_3 = '(G(>S`[x)\tcUkNZpd}f'
        list_2 = []
        dict_2 = {}
        o_auth2_mixin_0 = module_0.OAuth2Mixin(*list_2, **dict_2)
        o_auth2_mixin_0.authorize_redirect(str_0, str_0, str_0, iterator_0, list_1, str_3)
    except BaseException:
        pass

def test_case_6():
    try:
        o_auth2_mixin_0 = module_0.OAuth2Mixin()
        async_h_t_t_p_client_0 = o_auth2_mixin_0.get_auth_http_client()
    except BaseException:
        pass

def test_case_7():
    try:
        list_0 = []
        twitter_mixin_0 = module_0.TwitterMixin(*list_0)
        twitter_mixin_1 = module_0.TwitterMixin()
        o_auth2_mixin_0 = module_0.OAuth2Mixin()
        str_0 = 'w<Vgf4PC'
        str_1 = 'am_ET'
        str_2 = 'Override to customize the login URL based on the request.\n\n        By default, we use the ``login_url`` application setting.\n        '
        str_3 = 'No module named %s'
        dict_0 = {str_2: str_0, str_2: o_auth2_mixin_0, str_3: str_3}
        any_0 = twitter_mixin_1.twitter_request(str_1, dict_0, dict_0)
        str_4 = 'SCRIPT_NAME'
        str_5 = 'Exception class for malformed HTTP requests or responses\n    from remote sources.\n\n    .. versionadded:: 4.0\n    '
        dict_1 = {}
        facebook_graph_mixin_0 = module_0.FacebookGraphMixin(**dict_1)
        any_1 = facebook_graph_mixin_0.facebook_request(str_5, str_4)
        open_id_mixin_0 = module_0.OpenIdMixin(*list_0)
        open_id_mixin_0.authenticate_redirect()
    except BaseException:
        pass