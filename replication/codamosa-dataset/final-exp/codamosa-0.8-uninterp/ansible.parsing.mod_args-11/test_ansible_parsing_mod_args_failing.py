# Automatically generated by Pynguin.
import ansible.parsing.mod_args as module_0

def test_case_0():
    try:
        bytes_0 = b'-!\x1c\x02+\xd1\xd6\x98\x1a\x88\x17\xdd\xfeI\\\x95\xeb'
        module_args_parser_0 = module_0.ModuleArgsParser(bytes_0)
    except BaseException:
        pass

def test_case_1():
    try:
        module_args_parser_0 = module_0.ModuleArgsParser()
        var_0 = module_args_parser_0.parse()
    except BaseException:
        pass

def test_case_2():
    try:
        bool_0 = True
        dict_0 = {bool_0: bool_0}
        module_args_parser_0 = module_0.ModuleArgsParser(dict_0)
        var_0 = module_args_parser_0.parse()
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'b'
        var_0 = dict(a=str_0)
        module_args_parser_0 = module_0.ModuleArgsParser(var_0)
        var_1 = module_args_parser_0.parse()
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'local_action'
        str_1 = 'ping'
        str_2 = {str_0: str_1}
        str_3 = {str_1: str_2}
        module_args_parser_0 = module_0.ModuleArgsParser(str_3)
        var_0 = module_args_parser_0.parse()
        module_args_parser_1 = module_0.ModuleArgsParser(str_1)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'copy rc=a desj5b'
        var_0 = dict(action=str_0, delegate_to=str_0)
        module_args_parser_0 = module_0.ModuleArgsParser(var_0)
        var_1 = module_args_parser_0.parse()
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'test'
        str_1 = 'test2'
        var_0 = dict(module=str_0, src=str_0, dest=str_1)
        var_1 = dict(action=var_0)
        module_args_parser_0 = module_0.ModuleArgsParser(var_1)
        var_2 = module_args_parser_0.parse()
        var_3 = module_args_parser_0.parse()
        var_4 = None
        var_5 = (str_1, str_1, var_4)
        var_6 = dict(module=str_1)
        var_7 = dict(action=var_5)
        module_args_parser_1 = module_0.ModuleArgsParser(var_7)
        var_8 = module_args_parser_1.parse()
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'opy'
        str_1 = 'test'
        str_2 = 'tet2'
        var_0 = dict(module=str_0, src=str_1, dest=str_2)
        var_1 = dict(action=var_0)
        module_args_parser_0 = module_0.ModuleArgsParser(var_1)
        var_2 = module_args_parser_0.parse()
        var_3 = module_args_parser_0.parse()
        var_4 = dict(src=str_1, dest=str_2)
        var_5 = dict(module=var_0)
        var_6 = dict(action=var_1)
        module_args_parser_1 = module_0.ModuleArgsParser(var_6)
        var_7 = module_args_parser_1.parse()
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = 'action'
        str_1 = 'copy src=a dest=b'
        str_2 = {str_1: str_0, str_0: str_1, str_1: str_0}
        bool_0 = True
        str_3 = 'dest'
        str_4 = 's~c'
        str_5 = {str_3: str_4, str_4: str_4}
        module_args_parser_0 = module_0.ModuleArgsParser(str_2, str_5)
        var_0 = module_args_parser_0.parse(bool_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'copy'
        str_1 = 'ping'
        str_2 = {str_0: str_1}
        module_args_parser_0 = module_0.ModuleArgsParser(str_2)
        var_0 = module_args_parser_0.parse()
    except BaseException:
        pass

def test_case_10():
    try:
        module_args_parser_0 = module_0.ModuleArgsParser()
        str_0 = 'to'
        str_1 = {str_0: module_args_parser_0}
        module_args_parser_1 = module_0.ModuleArgsParser(str_1)
        bool_0 = True
        var_0 = module_args_parser_1.parse(bool_0)
    except BaseException:
        pass