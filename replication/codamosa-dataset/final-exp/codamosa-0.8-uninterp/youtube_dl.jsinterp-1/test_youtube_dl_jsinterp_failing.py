# Automatically generated by Pynguin.
import youtube_dl.jsinterp as module_0

def test_case_0():
    try:
        str_0 = '{4$$l4x'
        j_s_interpreter_0 = module_0.JSInterpreter(str_0, str_0)
        set_0 = set()
        var_0 = j_s_interpreter_0.interpret_statement(str_0, set_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'u-.q\t'
        j_s_interpreter_0 = module_0.JSInterpreter(str_0, str_0)
        set_0 = set()
        var_0 = j_s_interpreter_0.interpret_statement(str_0, set_0)
    except BaseException:
        pass

def test_case_2():
    try:
        float_0 = 3197.13642
        bool_0 = None
        tuple_0 = (float_0, bool_0)
        float_1 = -1984.410715
        set_0 = {float_1, float_1}
        str_0 = 'L5|Df\x0b#s?B_*s'
        j_s_interpreter_0 = module_0.JSInterpreter(set_0, str_0)
        var_0 = j_s_interpreter_0.extract_object(tuple_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = "\n        function test() {\n          let a = 'test';\n          return a;\n        }\n    "
        j_s_interpreter_0 = module_0.JSInterpreter(str_0)
        str_1 = 'jcwV.t=Se&tJa'
        bytes_0 = b''
        tuple_0 = (bytes_0,)
        var_0 = j_s_interpreter_0.interpret_statement(str_1, tuple_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = '4$$l4x'
        j_s_interpreter_0 = module_0.JSInterpreter(str_0, str_0)
        var_0 = j_s_interpreter_0.extract_function(str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        dict_0 = None
        str_0 = 'm?'
        j_s_interpreter_0 = module_0.JSInterpreter(str_0)
        var_0 = j_s_interpreter_0.call_function(dict_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = "\n        function test() {\n          let a = 'test';\n          return a;\n        }\n    "
        j_s_interpreter_0 = module_0.JSInterpreter(str_0)
        str_1 = 'test'
        var_0 = j_s_interpreter_0.call_function(str_1)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = '[EdA%S`a>'
        j_s_interpreter_0 = module_0.JSInterpreter(str_0, str_0)
        set_0 = set()
        var_0 = j_s_interpreter_0.interpret_statement(str_0, set_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = 'f='
        j_s_interpreter_0 = module_0.JSInterpreter(str_0, str_0)
        set_0 = set()
        var_0 = j_s_interpreter_0.interpret_statement(str_0, set_0)
    except BaseException:
        pass

def test_case_9():
    try:
        float_0 = -612.5093039404481
        int_0 = -3932
        str_0 = '(?:p][\\da-#]{}|[d-]@714})'
        j_s_interpreter_0 = module_0.JSInterpreter(int_0)
        var_0 = j_s_interpreter_0.interpret_expression(str_0, float_0, int_0)
    except BaseException:
        pass

def test_case_10():
    try:
        int_0 = 1092
        str_0 = '3^0ScKF62 ls\r\x0cg!J'
        j_s_interpreter_0 = module_0.JSInterpreter(int_0)
        var_0 = j_s_interpreter_0.interpret_expression(str_0, j_s_interpreter_0, int_0)
    except BaseException:
        pass

def test_case_11():
    try:
        float_0 = 1530634778.6494784
        int_0 = 1138
        str_0 = '(?:[p][\\da-z]{7}|w[\\d-]{714})'
        j_s_interpreter_0 = module_0.JSInterpreter(int_0)
        var_0 = j_s_interpreter_0.interpret_expression(str_0, float_0, int_0)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = 'u.qc\t'
        j_s_interpreter_0 = module_0.JSInterpreter(str_0, str_0)
        set_0 = {str_0}
        var_0 = j_s_interpreter_0.interpret_statement(str_0, set_0)
    except BaseException:
        pass

def test_case_13():
    try:
        float_0 = 1530634789.592436
        int_0 = 1153
        str_0 = '(eval\\(function\\(p,a,c,k,e,d\\){.+)'
        list_0 = [str_0, str_0]
        j_s_interpreter_0 = module_0.JSInterpreter(list_0)
        var_0 = j_s_interpreter_0.interpret_expression(str_0, float_0, int_0)
    except BaseException:
        pass

def test_case_14():
    try:
        float_0 = -602.0447218239415
        int_0 = 468
        str_0 = '(?:p][\\da-#]{}|[d-]@714})'
        list_0 = [float_0, int_0, str_0]
        j_s_interpreter_0 = module_0.JSInterpreter(list_0)
        str_1 = 'xR3IP()'
        list_1 = [str_0, list_0, list_0, j_s_interpreter_0]
        j_s_interpreter_1 = module_0.JSInterpreter(int_0)
        var_0 = j_s_interpreter_1.interpret_expression(str_1, list_1, int_0)
    except BaseException:
        pass