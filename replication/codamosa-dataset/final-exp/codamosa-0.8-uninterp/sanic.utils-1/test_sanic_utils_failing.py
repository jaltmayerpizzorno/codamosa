# Automatically generated by Pynguin.
import sanic.utils as module_0
import pathlib as module_1

def test_case_0():
    try:
        str_0 = ''
        bool_0 = module_0.str_to_bool(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '#\x0c=|]xjH/|\t..'
        var_0 = module_0.load_module_from_file_location(str_0, str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'e:uEW.en'
        var_0 = module_0.load_module_from_file_location(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'B'
        var_0 = module_0.load_module_from_file_location(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        bytes_0 = b'\n\xf8Q\x08T\xfbc\x8d'
        var_0 = module_0.load_module_from_file_location(bytes_0)
    except BaseException:
        pass

def test_case_5():
    try:
        path_0 = module_1.Path()
        str_0 = '\tLYR\\HJ;C9}{y{'
        var_0 = module_0.load_module_from_file_location(path_0, str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'f'
        bool_0 = module_0.str_to_bool(str_0)
        str_1 = "b8&\x0cB'l7_o$"
        bool_1 = module_0.str_to_bool(str_1)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'yA$-WYg_ CYL<I45Bv'
        var_0 = module_0.load_module_from_file_location(str_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = 'true'
        bool_0 = module_0.str_to_bool(str_0)
        str_1 = 'True'
        bool_1 = module_0.str_to_bool(str_1)
        str_2 = 'YES'
        bool_2 = module_0.str_to_bool(str_2)
        str_3 = '1'
        bool_3 = module_0.str_to_bool(str_3)
        str_4 = 'on'
        bool_4 = module_0.str_to_bool(str_4)
        str_5 = 'On'
        bool_5 = module_0.str_to_bool(str_5)
        str_6 = 'yepp'
        bool_6 = module_0.str_to_bool(str_6)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = '/some/random/nonexistent/path/to/some_file.py'
        var_0 = module_0.load_module_from_file_location(str_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = 'sanic/${foo}/test.py'
        var_0 = module_0.load_module_from_file_location(str_0)
    except BaseException:
        pass