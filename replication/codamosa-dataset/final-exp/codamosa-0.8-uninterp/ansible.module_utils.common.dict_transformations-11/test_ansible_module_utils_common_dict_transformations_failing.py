# Automatically generated by Pynguin.
import ansible.module_utils.common.dict_transformations as module_0

def test_case_0():
    try:
        int_0 = -820
        var_0 = module_0.camel_dict_to_snake_dict(int_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = b'\x0c\xd0A\xd8\xeaO\x04\xc9\xbaI\x1e\xe4\xf0\xfc\xa2\x1a\x7f\xfb\xb9'
        tuple_0 = None
        str_0 = '!j'
        dict_0 = {bytes_0: tuple_0, str_0: str_0}
        var_0 = module_0.snake_dict_to_camel_dict(dict_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bool_0 = True
        bytes_0 = b'\xfc\xac7\xed\x91'
        var_0 = module_0.dict_merge(bool_0, bytes_0)
        str_0 = 'who'
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
        var_1 = module_0.recursive_diff(dict_0, dict_0)
        var_2 = module_0.dict_merge(str_0, dict_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'\x8b)\x8a\x98\xa5\x19\xadZ\xaf'
        var_0 = module_0.recursive_diff(bytes_0, bytes_0)
    except BaseException:
        pass

def test_case_4():
    try:
        int_0 = 19
        dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
        var_0 = module_0.camel_dict_to_snake_dict(dict_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = '=,(!An%tX:[\x0b'
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
        float_0 = 2753.639375
        var_0 = module_0.snake_dict_to_camel_dict(dict_0, float_0)
    except BaseException:
        pass

def test_case_6():
    try:
        bool_0 = True
        bytes_0 = b'\xfc\xac7\xed\x91'
        var_0 = module_0.dict_merge(bool_0, bytes_0)
        str_0 = 'who'
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
        var_1 = module_0.recursive_diff(dict_0, dict_0)
        str_1 = "QP\nI'0o2nB;rL)"
        var_2 = module_0.dict_merge(str_1, dict_0)
    except BaseException:
        pass

def test_case_7():
    try:
        tuple_0 = ()
        var_0 = module_0.dict_merge(tuple_0, tuple_0)
        tuple_1 = None
        dict_0 = {tuple_1: tuple_1, tuple_1: tuple_1, tuple_1: tuple_1, tuple_1: tuple_1}
        var_1 = module_0.dict_merge(dict_0, dict_0)
        int_0 = 1364
        var_2 = module_0.dict_merge(dict_0, int_0)
        float_0 = 1153.06
        set_0 = {int_0}
        list_0 = [float_0, set_0, var_1]
        tuple_2 = (float_0, set_0, list_0)
        complex_0 = None
        dict_1 = {float_0: var_2, float_0: tuple_2, complex_0: var_1}
        list_1 = [dict_1, tuple_2]
        list_2 = [var_0, list_1, var_1, tuple_2]
        var_3 = module_0.camel_dict_to_snake_dict(list_2, list_2)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = {}
        str_1 = 'TestVe`alueTwo'
        str_2 = [str_0, str_0]
        str_3 = {str_1: str_2}
        var_0 = module_0.camel_dict_to_snake_dict(str_3)
        var_1 = module_0.camel_dict_to_snake_dict(str_1)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = '\n.c'
        str_1 = 'fm%u\tS'
        str_2 = 'TestSubSubKey'
        str_3 = {str_2: str_1}
        str_4 = {str_1: str_3}
        str_5 = {str_0: str_4}
        str_6 = {str_2: str_4}
        str_7 = [str_5, str_6]
        str_8 = {str_0: str_7}
        var_0 = module_0.camel_dict_to_snake_dict(str_8)
        dict_0 = {str_1: str_8}
        var_1 = module_0.dict_merge(str_4, dict_0)
    except BaseException:
        pass