# Automatically generated by Pynguin.
import ansible.module_utils.facts.network.aix as module_0

def test_case_0():
    try:
        tuple_0 = ()
        a_i_x_network_collector_0 = module_0.AIXNetworkCollector(tuple_0)
        str_0 = 'short_description'
        dict_0 = {str_0: str_0}
        tuple_1 = (dict_0,)
        float_0 = -799.292
        tuple_2 = (str_0, tuple_1, float_0)
        tuple_3 = (tuple_2, dict_0, tuple_2)
        a_i_x_network_0 = module_0.AIXNetwork(tuple_3)
        var_0 = a_i_x_network_0.get_default_interfaces(a_i_x_network_collector_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = ''
        tuple_0 = (str_0,)
        float_0 = 330.813237
        tuple_1 = ()
        a_i_x_network_0 = module_0.AIXNetwork(float_0, tuple_1)
        var_0 = a_i_x_network_0.get_interfaces_info(tuple_0)
    except BaseException:
        pass

def test_case_2():
    try:
        a_i_x_network_collector_0 = module_0.AIXNetworkCollector()
        int_0 = 2419
        a_i_x_network_0 = module_0.AIXNetwork(int_0)
        int_1 = 229
        var_0 = a_i_x_network_0.parse_interface_line(int_1)
    except BaseException:
        pass

def test_case_3():
    try:
        set_0 = None
        str_0 = '&'
        str_1 = 'sending connection stop: %s'
        float_0 = -2710.957
        bytes_0 = b'\xa6\x95\xf2\xfb'
        int_0 = -3152
        tuple_0 = (float_0, bytes_0, int_0)
        a_i_x_network_0 = module_0.AIXNetwork(tuple_0)
        var_0 = a_i_x_network_0.parse_interface_line(str_1)
        dict_0 = {}
        a_i_x_network_1 = module_0.AIXNetwork(str_0, dict_0)
        var_1 = a_i_x_network_1.get_interfaces_info(set_0)
    except BaseException:
        pass