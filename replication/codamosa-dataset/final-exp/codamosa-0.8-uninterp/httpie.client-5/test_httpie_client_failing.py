# Automatically generated by Pynguin.
import argparse as module_0
import httpie.client as module_1
import pathlib as module_2
import httpie.cli.dicts as module_3

def test_case_0():
    try:
        namespace_0 = module_0.Namespace()
        request_headers_dict_0 = module_1.make_default_headers(namespace_0)
    except BaseException:
        pass

def test_case_1():
    try:
        namespace_0 = module_0.Namespace()
        dict_0 = module_1.make_send_kwargs(namespace_0)
    except BaseException:
        pass

def test_case_2():
    try:
        namespace_0 = module_0.Namespace()
        dict_0 = module_1.make_send_kwargs_mergeable_from_env(namespace_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bool_0 = True
        session_0 = module_1.build_requests_session(bool_0)
        namespace_0 = module_0.Namespace()
        dict_0 = {}
        path_0 = module_2.Path(**dict_0)
        iterable_0 = module_1.collect_messages(namespace_0, path_0)
        namespace_1 = module_0.Namespace()
        dict_1 = module_1.make_request_kwargs(namespace_1)
    except BaseException:
        pass

def test_case_4():
    try:
        dict_0 = None
        bool_0 = True
        dict_1 = {dict_0: dict_0, dict_0: dict_0}
        session_0 = module_1.build_requests_session(bool_0, dict_1)
    except BaseException:
        pass

def test_case_5():
    try:
        bool_0 = False
        session_0 = module_1.build_requests_session(bool_0)
        str_0 = 'w_e[x]lA;U'
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
        request_headers_dict_0 = module_3.RequestHeadersDict(**dict_0)
        request_headers_dict_1 = module_1.finalize_headers(request_headers_dict_0)
        dict_1 = {}
        namespace_0 = module_0.Namespace(**dict_1)
        request_headers_dict_2 = module_1.finalize_headers(request_headers_dict_1)
        namespace_1 = module_0.Namespace()
        path_0 = module_2.Path(**dict_0)
        iterable_0 = module_1.collect_messages(namespace_1, path_0, request_headers_dict_0)
        request_headers_dict_3 = module_3.RequestHeadersDict(iterable_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = None
        str_1 = ')\rzt&6}a'
        str_2 = 'wZS^/k'
        str_3 = 'n:b/.\x0c('
        dict_0 = {str_1: str_0, str_1: str_0, str_2: str_1, str_3: str_3}
        request_headers_dict_0 = module_3.RequestHeadersDict(**dict_0)
        request_headers_dict_1 = module_1.finalize_headers(request_headers_dict_0)
        namespace_0 = module_0.Namespace()
        dict_1 = module_1.make_send_kwargs(namespace_0)
    except BaseException:
        pass