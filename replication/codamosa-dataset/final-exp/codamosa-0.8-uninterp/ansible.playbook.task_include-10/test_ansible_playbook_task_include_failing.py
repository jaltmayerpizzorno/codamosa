# Automatically generated by Pynguin.
import ansible.playbook.task_include as module_0
import ansible.playbook.block as module_1

def test_case_0():
    try:
        task_include_0 = module_0.TaskInclude()
        var_0 = task_include_0.build_parent_block()
        bool_0 = False
        float_0 = 1218.3
        var_1 = task_include_0.load(bool_0, float_0)
    except BaseException:
        pass

def test_case_1():
    try:
        task_include_0 = module_0.TaskInclude()
        var_0 = task_include_0.check_options(task_include_0, task_include_0)
    except BaseException:
        pass

def test_case_2():
    try:
        list_0 = []
        str_0 = 'H:IUY>TE>'
        task_include_0 = module_0.TaskInclude(str_0)
        var_0 = task_include_0.preprocess_data(list_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'some_attr'
        str_1 = 'action'
        str_2 = 'some_value'
        str_3 = 'include_role'
        str_4 = {str_0: str_2, str_1: str_3}
        task_include_0 = module_0.TaskInclude()
        var_0 = task_include_0.preprocess_data(str_4)
    except BaseException:
        pass

def test_case_4():
    try:
        task_include_0 = module_0.TaskInclude()
        str_0 = 'include'
        var_0 = dict(invalid_opt1=str_0, invalid_opt2=str_0)
        var_1 = dict(action=str_0, args=var_0)
        var_2 = task_include_0.load_data(var_1)
        var_3 = task_include_0.get_vars()
        var_4 = dict()
        var_5 = task_include_0.load_data(var_0)
    except BaseException:
        pass

def test_case_5():
    try:
        task_include_0 = module_0.TaskInclude()
        str_0 = 'include'
        str_1 = 'invalid'
        var_0 = dict(invalid_opt1=str_1, invalid_opt2=str_1)
        var_1 = dict(action=str_0, args=var_0)
        var_2 = task_include_0.load_data(var_1)
        var_3 = task_include_0.check_options(var_2, var_1)
    except BaseException:
        pass

def test_case_6():
    try:
        task_include_0 = module_0.TaskInclude()
        str_0 = 'include'
        dict_0 = {str_0: str_0}
        block_0 = module_1.Block(dict_0, str_0)
        var_0 = task_include_0.load(dict_0, block_0)
        var_1 = dict(action=str_0, args=dict_0)
        var_2 = task_include_0.build_parent_block()
        var_3 = task_include_0.check_options(var_2, var_1)
    except BaseException:
        pass