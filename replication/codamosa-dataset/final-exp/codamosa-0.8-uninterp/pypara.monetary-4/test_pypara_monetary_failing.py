# Automatically generated by Pynguin.
import pypara.monetary as module_0
import pypara.currencies as module_1
import decimal as module_2
import datetime as module_3

def test_case_0():
    try:
        none_money_0 = module_0.NoneMoney()
        float_0 = none_money_0.as_float()
    except BaseException:
        pass

def test_case_1():
    try:
        none_money_0 = module_0.NoneMoney()
        list_0 = [none_money_0, none_money_0, none_money_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        int_0 = some_money_0.as_integer()
    except BaseException:
        pass

def test_case_2():
    try:
        none_money_0 = module_0.NoneMoney()
        none_money_1 = module_0.NoneMoney()
        money_0 = none_money_1.scalar_subtract(none_money_0)
        bool_0 = none_money_1.gt(money_0)
        str_0 = 'EGP'
        bool_1 = none_money_1.gte(money_0)
        str_1 = 'Undefined monetary values do not have quantity information.'
        dict_0 = {str_0: str_0, str_1: str_0}
        some_money_0 = module_0.SomeMoney(**dict_0)
    except BaseException:
        pass

def test_case_3():
    try:
        none_money_0 = module_0.NoneMoney()
        list_0 = [none_money_0, none_money_0, none_money_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.negative()
        bool_0 = none_money_0.lte(money_0)
        var_0 = None
        money_1 = none_money_0.multiply(var_0)
        list_1 = [none_money_0, none_money_0, none_money_0]
        some_money_1 = module_0.SomeMoney(*list_0)
        bool_1 = some_money_1.is_equal(list_1)
        int_0 = 998
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.floor_divide(var_0)
        price_1 = price_0.round(int_0)
        some_price_0 = module_0.SomePrice()
    except BaseException:
        pass

def test_case_4():
    try:
        float_0 = -1899.370694
        list_0 = [float_0, float_0]
        monetary_operation_exception_0 = module_0.MonetaryOperationException(*list_0)
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.scalar_subtract(monetary_operation_exception_0)
        price_1 = price_0.positive()
        float_1 = price_1.__float__()
    except BaseException:
        pass

def test_case_5():
    try:
        price_0 = module_0.Price()
        none_price_0 = module_0.NonePrice()
        price_1 = none_price_0.negative()
        currency_type_0 = module_1.CurrencyType.CRYPTO
        str_0 = "!A>Ko['T"
        int_0 = -876
        currency_type_1 = None
        decimal_0 = module_2.Decimal()
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_1, decimal_0, int_0)
        list_0 = [price_0]
        bool_0 = False
        price_2 = none_price_0.convert(currency_0, list_0, bool_0)
        price_3 = none_price_0.scalar_subtract(currency_type_0)
        bool_1 = price_0.lt(price_3)
        none_money_0 = module_0.NoneMoney()
        float_0 = none_money_0.as_float()
    except BaseException:
        pass

def test_case_6():
    try:
        none_money_0 = module_0.NoneMoney()
        list_0 = [none_money_0, none_money_0, none_money_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.negative()
        bool_0 = none_money_0.lte(money_0)
        var_0 = None
        money_1 = money_0.__add__(money_0)
        bool_1 = money_0.__ge__(money_0)
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.scalar_subtract(var_0)
        price_1 = price_0.__floordiv__(var_0)
        price_2 = price_1.__mul__(var_0)
        price_3 = price_2.__mul__(var_0)
        dict_0 = {}
        none_price_1 = module_0.NonePrice(**dict_0)
        bool_2 = none_price_1.gte(price_3)
        money_2 = none_money_0.abs()
        decimal_0 = module_2.Decimal()
        money_3 = some_money_0.subtract(money_1)
        money_4 = none_money_0.add(money_3)
        str_0 = 'Syrian Pound'
        dict_1 = {str_0: money_2}
        none_price_2 = module_0.NonePrice(**dict_1)
    except BaseException:
        pass

def test_case_7():
    try:
        decimal_0 = None
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.with_qty(decimal_0)
        money_0 = module_0.Money()
        money_1 = money_0.__neg__()
        str_0 = 'Ro'
        money_2 = money_0.scalar_subtract(str_0)
    except BaseException:
        pass

def test_case_8():
    try:
        none_money_0 = module_0.NoneMoney()
        list_0 = [none_money_0, none_money_0, none_money_0]
        currency_0 = None
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.abs()
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.negative()
        money_1 = money_0.with_ccy(currency_0)
        bool_0 = money_0.__ge__(money_0)
        bool_1 = some_money_0.lte(money_0)
        bool_2 = money_0.__lt__(money_1)
    except BaseException:
        pass

def test_case_9():
    try:
        none_money_0 = module_0.NoneMoney()
        list_0 = [none_money_0, none_money_0, none_money_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.negative()
        bool_0 = none_money_0.lte(money_0)
        var_0 = None
        money_1 = none_money_0.multiply(var_0)
        str_0 = '_Rz#*$\n\t7GY'
        str_1 = 'TimeDelta'
        str_2 = '\n    Indicates if the date is the last day of the month.\n    '
        int_0 = 998
        currency_type_0 = module_1.CurrencyType.CRYPTO
        money_2 = none_money_0.abs()
        decimal_0 = module_2.Decimal()
        int_1 = -1134
        decimal_1 = module_2.Decimal()
        currency_0 = module_1.Currency(str_0, str_0, int_1, currency_type_0, decimal_1, int_1)
        decimal_2 = currency_0.quantize(decimal_0)
        int_2 = 771
        currency_1 = module_1.Currency(str_1, str_2, int_0, currency_type_0, decimal_2, int_2)
        price_0 = module_0.Price()
        price_1 = price_0.multiply(var_0)
    except BaseException:
        pass

def test_case_10():
    try:
        price_0 = module_0.Price()
        none_price_0 = module_0.NonePrice()
        price_1 = none_price_0.subtract(price_0)
        var_0 = None
        price_2 = price_0.__mul__(var_0)
        price_3 = price_1.__neg__()
    except BaseException:
        pass

def test_case_11():
    try:
        currency_0 = None
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.floor_divide(currency_0)
        price_0 = module_0.Price()
        var_0 = price_0.__round__(currency_0)
    except BaseException:
        pass

def test_case_12():
    try:
        none_money_0 = module_0.NoneMoney()
        list_0 = [none_money_0, none_money_0, none_money_0]
        some_price_0 = module_0.SomePrice(*list_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        price_0 = some_price_0.round()
        money_0 = some_money_0.abs()
        var_0 = None
        bool_0 = price_0.gte(price_0)
        money_1 = money_0.__add__(money_0)
        bool_1 = money_0.__ge__(money_1)
        bool_2 = none_money_0.as_boolean()
        bool_3 = some_money_0.lte(money_0)
        int_0 = 977
        money_2 = money_1.__neg__()
        money_3 = none_money_0.scalar_add(var_0)
        money_4 = some_money_0.subtract(money_0)
        bool_4 = some_money_0.is_equal(int_0)
        bool_5 = money_0.__lt__(money_0)
        dict_0 = {}
        none_price_0 = module_0.NonePrice(**dict_0)
        var_1 = price_0.__round__()
        money_5 = money_0.floor_divide(var_0)
    except BaseException:
        pass

def test_case_13():
    try:
        none_money_0 = module_0.NoneMoney()
        list_0 = [none_money_0, none_money_0, none_money_0]
        currency_0 = None
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.abs()
        some_money_0 = module_0.SomeMoney(*list_0)
        price_1 = some_price_0.subtract(price_0)
        price_2 = price_0.__abs__()
        bool_0 = price_0.__le__(price_0)
        price_3 = price_0.__neg__()
        price_4 = some_price_0.with_ccy(currency_0)
        money_0 = some_money_0.negative()
        bool_1 = price_2.__ge__(price_3)
        bool_2 = money_0.__eq__(list_0)
        price_5 = price_4.convert(currency_0)
    except BaseException:
        pass

def test_case_14():
    try:
        incompatible_currency_error_0 = None
        complex_0 = None
        list_0 = []
        monetary_operation_exception_0 = module_0.MonetaryOperationException(*list_0)
        tuple_0 = (complex_0, monetary_operation_exception_0)
        list_1 = [tuple_0, complex_0, monetary_operation_exception_0]
        some_price_0 = module_0.SomePrice(*list_1)
        set_0 = set()
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.divide(set_0)
        bool_0 = some_price_0.gt(price_0)
        price_1 = some_price_0.divide(incompatible_currency_error_0)
    except BaseException:
        pass

def test_case_15():
    try:
        none_money_0 = module_0.NoneMoney()
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.negative()
        list_0 = []
        monetary_operation_exception_0 = module_0.MonetaryOperationException(*list_0)
        list_1 = [monetary_operation_exception_0, monetary_operation_exception_0, list_0, monetary_operation_exception_0]
        list_2 = [list_1, monetary_operation_exception_0, list_1, list_0]
        str_0 = 'H'
        int_0 = -168
        currency_type_0 = module_1.CurrencyType.ALTERNATIVE
        decimal_0 = module_2.Decimal()
        int_1 = -3510
        currency_0 = module_1.Currency(str_0, str_0, int_1, currency_type_0, decimal_0, int_0)
        decimal_1 = currency_0.quantize(decimal_0)
        str_1 = '~)a8clS*# c/WrVBI'
        str_2 = '\\'
        int_2 = -158
        decimal_2 = module_2.Decimal()
        int_3 = 0
        decimal_3 = module_2.Decimal()
        currency_1 = module_1.Currency(str_0, str_1, int_3, currency_type_0, decimal_3, int_3)
        decimal_4 = currency_1.quantize(decimal_2)
        int_4 = 2346
        currency_2 = module_1.Currency(str_1, str_2, int_2, currency_type_0, decimal_4, int_4)
        decimal_5 = currency_2.quantize(decimal_1)
        bool_0 = none_price_0.gt(price_0)
        currency_3 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_5, int_3)
        str_3 = 'SomePrice'
        incompatible_currency_error_0 = module_0.IncompatibleCurrencyError(currency_3, currency_1, str_3)
        none_price_1 = module_0.NonePrice(*list_2)
    except BaseException:
        pass

def test_case_16():
    try:
        none_money_0 = module_0.NoneMoney()
        list_0 = [none_money_0, none_money_0, none_money_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.negative()
        bool_0 = none_money_0.lte(money_0)
        var_0 = None
        money_1 = none_money_0.multiply(var_0)
        list_1 = [none_money_0, none_money_0, none_money_0]
        bool_1 = some_money_0.is_equal(list_1)
        money_2 = none_money_0.abs()
        decimal_0 = module_2.Decimal()
        money_3 = some_money_0.subtract(money_1)
        bool_2 = money_0.__lt__(money_1)
        decimal_1 = module_2.Decimal()
        none_price_0 = module_0.NonePrice(*list_1)
    except BaseException:
        pass

def test_case_17():
    try:
        none_money_0 = module_0.NoneMoney()
        list_0 = [none_money_0, none_money_0, none_money_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.negative()
        bool_0 = none_money_0.lte(money_0)
        var_0 = None
        money_1 = none_money_0.multiply(var_0)
        str_0 = '_Rz#*$\n\t7GY'
        int_0 = 998
        currency_type_0 = module_1.CurrencyType.CRYPTO
        money_2 = none_money_0.abs()
        decimal_0 = module_2.Decimal()
        decimal_1 = module_2.Decimal()
        str_1 = '['
        int_1 = 31
        currency_0 = module_1.Currency(str_1, str_0, int_0, currency_type_0, decimal_1, int_1)
        money_3 = none_money_0.with_ccy(currency_0)
        none_price_0 = module_0.NonePrice()
        int_2 = none_price_0.as_integer()
    except BaseException:
        pass

def test_case_18():
    try:
        none_money_0 = module_0.NoneMoney()
        list_0 = [none_money_0, none_money_0, none_money_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.abs()
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_0 = some_price_0.lt(price_0)
        price_1 = some_price_0.round()
        money_0 = some_money_0.negative()
        bool_1 = none_money_0.lte(money_0)
        money_1 = money_0.__add__(money_0)
        price_2 = price_1.add(price_0)
        bool_2 = some_money_0.lte(money_0)
        money_2 = some_money_0.subtract(money_1)
        money_3 = some_money_0.add(money_1)
        money_4 = some_money_0.positive()
        bool_3 = money_2.__lt__(money_3)
        decimal_0 = module_2.Decimal(*list_0)
    except BaseException:
        pass

def test_case_19():
    try:
        none_money_0 = module_0.NoneMoney()
        list_0 = [none_money_0, none_money_0, none_money_0]
        currency_0 = None
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.abs()
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_0 = price_0.__le__(price_0)
        price_1 = some_price_0.add(price_0)
        money_0 = some_money_0.negative()
        var_0 = None
        bool_1 = price_1.gte(price_1)
        money_1 = money_0.__add__(money_0)
        price_2 = some_price_0.subtract(price_0)
        bool_2 = money_0.__ge__(money_1)
        bool_3 = none_money_0.as_boolean()
        bool_4 = some_money_0.lte(money_0)
        int_0 = 977
        bool_5 = price_0.gt(price_0)
        money_2 = none_money_0.round()
        money_3 = some_money_0.subtract(money_0)
        bool_6 = some_money_0.is_equal(int_0)
        bool_7 = money_0.__lt__(money_0)
        dict_0 = {}
        none_price_0 = module_0.NonePrice(**dict_0)
        bool_8 = some_money_0.gte(money_3)
        price_3 = none_price_0.with_ccy(currency_0)
        money_4 = money_0.floor_divide(var_0)
    except BaseException:
        pass

def test_case_20():
    try:
        date_0 = None
        decimal_0 = module_2.Decimal()
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.with_dov(date_0)
        price_1 = price_0.__abs__()
        some_price_0 = module_0.SomePrice()
    except BaseException:
        pass

def test_case_21():
    try:
        money_0 = module_0.Money()
        var_0 = money_0.__round__()
    except BaseException:
        pass

def test_case_22():
    try:
        none_money_0 = module_0.NoneMoney()
        list_0 = [none_money_0, none_money_0, none_money_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.negative()
        money_1 = money_0.__add__(money_0)
        bool_0 = money_0.__ge__(money_0)
        money_2 = none_money_0.abs()
        money_3 = some_money_0.subtract(money_1)
        var_0 = money_1.__round__()
    except BaseException:
        pass

def test_case_23():
    try:
        none_money_0 = module_0.NoneMoney()
        list_0 = [none_money_0, none_money_0, none_money_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.negative()
        bool_0 = none_money_0.lte(money_0)
        var_0 = None
        money_1 = none_money_0.multiply(var_0)
        list_1 = [none_money_0, none_money_0, none_money_0]
        some_money_1 = module_0.SomeMoney(*list_0)
        bool_1 = some_money_1.is_equal(list_1)
        str_0 = '_Rz#*$\n\t7GY'
        currency_type_0 = module_1.CurrencyType.CRYPTO
        money_2 = none_money_0.abs()
        decimal_0 = module_2.Decimal()
        int_0 = -1134
        money_3 = some_money_0.subtract(money_1)
        money_4 = none_money_0.add(money_3)
        bool_2 = money_4.__lt__(money_1)
        decimal_1 = module_2.Decimal()
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_1, int_0)
        decimal_2 = currency_0.quantize(decimal_0)
        money_5 = some_money_0.multiply(var_0)
    except BaseException:
        pass

def test_case_24():
    try:
        date_0 = None
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.with_dov(date_0)
        none_money_1 = module_0.NoneMoney()
        list_0 = [none_money_1, none_money_1, none_money_1]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_1 = some_money_0.negative()
        bool_0 = none_money_1.lte(money_1)
        var_0 = None
        money_2 = none_money_1.multiply(var_0)
        list_1 = [none_money_1, none_money_1, none_money_1]
        str_0 = '_Rz#*$\n\t7GY'
        str_1 = 'TimeDelta'
        str_2 = '\n    Indicates if the date is the last day of the month.\n    '
        int_0 = 998
        currency_type_0 = module_1.CurrencyType.CRYPTO
        money_3 = none_money_1.abs()
        decimal_0 = module_2.Decimal()
        int_1 = -1134
        money_4 = some_money_0.subtract(money_2)
        money_5 = none_money_1.add(money_4)
        bool_1 = money_5.__lt__(money_2)
        decimal_1 = module_2.Decimal()
        currency_0 = module_1.Currency(str_0, str_0, int_1, currency_type_0, decimal_1, int_1)
        decimal_2 = currency_0.quantize(decimal_0)
        int_2 = 771
        currency_1 = module_1.Currency(str_1, str_2, int_0, currency_type_0, decimal_2, int_2)
        none_price_0 = module_0.NonePrice(*list_1)
    except BaseException:
        pass

def test_case_25():
    try:
        none_money_0 = module_0.NoneMoney()
        list_0 = [none_money_0, none_money_0, none_money_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.abs()
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_0 = some_price_0.lt(price_0)
        price_1 = some_price_0.round()
        money_0 = some_money_0.negative()
        bool_1 = none_money_0.lte(money_0)
        var_0 = None
        money_1 = money_0.__add__(money_0)
        price_2 = price_1.add(price_0)
        money_2 = money_0.scalar_subtract(var_0)
    except BaseException:
        pass

def test_case_26():
    try:
        none_money_0 = module_0.NoneMoney()
        list_0 = [none_money_0, none_money_0, none_money_0]
        currency_0 = None
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.abs()
        some_money_0 = module_0.SomeMoney(*list_0)
        price_1 = some_price_0.subtract(price_0)
        price_2 = price_0.__abs__()
        bool_0 = price_0.__le__(price_0)
        price_3 = price_0.__neg__()
        price_4 = some_price_0.with_ccy(currency_0)
        money_0 = some_money_0.negative()
        bool_1 = price_2.__ge__(price_3)
        bool_2 = money_0.__eq__(list_0)
        var_0 = None
        money_1 = money_0.__truediv__(var_0)
    except BaseException:
        pass

def test_case_27():
    try:
        none_money_0 = module_0.NoneMoney()
        list_0 = [none_money_0, none_money_0, none_money_0]
        currency_0 = None
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_0 = none_money_0.as_boolean()
        money_0 = none_money_0.positive()
        bool_1 = True
        money_1 = some_money_0.convert(currency_0, bool_1)
    except BaseException:
        pass

def test_case_28():
    try:
        incompatible_currency_error_0 = None
        complex_0 = None
        list_0 = []
        monetary_operation_exception_0 = module_0.MonetaryOperationException(*list_0)
        tuple_0 = (complex_0, monetary_operation_exception_0)
        list_1 = [tuple_0, complex_0, monetary_operation_exception_0]
        some_price_0 = module_0.SomePrice(*list_1)
        price_0 = some_price_0.divide(incompatible_currency_error_0)
    except BaseException:
        pass

def test_case_29():
    try:
        none_money_0 = module_0.NoneMoney()
        list_0 = [none_money_0, none_money_0, none_money_0]
        money_0 = none_money_0.positive()
        some_money_0 = module_0.SomeMoney(*list_0)
        str_0 = 'TimeDelta'
        currency_type_0 = module_1.CurrencyType.ALTERNATIVE
        money_1 = none_money_0.abs()
        decimal_0 = module_2.Decimal()
        money_2 = some_money_0.subtract(money_0)
        str_1 = '~5X6U#?^\\e^\x0c'
        int_0 = 1293
        currency_0 = module_1.Currency(str_0, str_1, int_0, currency_type_0, decimal_0, int_0)
        money_3 = some_money_0.convert(currency_0)
    except BaseException:
        pass

def test_case_30():
    try:
        none_money_0 = module_0.NoneMoney()
        list_0 = [none_money_0, none_money_0, none_money_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.abs()
        bool_0 = none_money_0.lte(money_0)
        var_0 = None
        money_1 = money_0.__add__(money_0)
        money_2 = money_0.floor_divide(var_0)
    except BaseException:
        pass

def test_case_31():
    try:
        none_money_0 = module_0.NoneMoney()
        list_0 = [none_money_0, none_money_0, none_money_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.negative()
        bool_0 = none_money_0.lte(money_0)
        var_0 = None
        money_1 = none_money_0.multiply(var_0)
        list_1 = [none_money_0, none_money_0, none_money_0]
        some_money_1 = module_0.SomeMoney(*list_0)
        bool_1 = some_money_1.is_equal(list_1)
        money_2 = none_money_0.abs()
        decimal_0 = module_2.Decimal()
        money_3 = some_money_0.subtract(money_1)
        money_4 = money_3.scalar_add(var_0)
    except BaseException:
        pass

def test_case_32():
    try:
        none_money_0 = module_0.NoneMoney()
        list_0 = [none_money_0, none_money_0, none_money_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.negative()
        bool_0 = none_money_0.lte(money_0)
        var_0 = None
        money_1 = none_money_0.multiply(var_0)
        list_1 = [none_money_0, none_money_0, none_money_0]
        some_money_1 = module_0.SomeMoney(*list_0)
        bool_1 = some_money_1.is_equal(list_1)
        money_2 = none_money_0.abs()
        decimal_0 = module_2.Decimal()
        money_3 = some_money_1.add(money_2)
        money_4 = none_money_0.add(money_3)
        bool_2 = money_4.__lt__(money_1)
        float_0 = money_3.as_float()
    except BaseException:
        pass

def test_case_33():
    try:
        none_money_0 = module_0.NoneMoney()
        list_0 = [none_money_0, none_money_0, none_money_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.negative()
        bool_0 = none_money_0.lte(money_0)
        money_1 = money_0.__add__(money_0)
        currency_type_0 = module_1.CurrencyType.ALTERNATIVE
        money_2 = none_money_0.scalar_add(currency_type_0)
        bool_1 = money_1.__ge__(money_2)
        bool_2 = some_money_0.lte(money_0)
        decimal_0 = module_2.Decimal(*list_0)
    except BaseException:
        pass

def test_case_34():
    try:
        none_money_0 = module_0.NoneMoney()
        list_0 = [none_money_0, none_money_0, none_money_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = none_money_0.negative()
        bool_0 = none_money_0.lte(money_0)
        money_1 = money_0.__add__(money_0)
        bool_1 = money_0.__ge__(money_0)
        bool_2 = some_money_0.lte(money_0)
        decimal_0 = module_2.Decimal()
        money_2 = some_money_0.subtract(money_1)
        money_3 = none_money_0.add(money_2)
        str_0 = 'S~rian .oun-'
        dict_0 = {str_0: money_0}
        none_price_0 = module_0.NonePrice(**dict_0)
    except BaseException:
        pass

def test_case_35():
    try:
        none_money_0 = module_0.NoneMoney()
        list_0 = [none_money_0, none_money_0, none_money_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.negative()
        bool_0 = none_money_0.lte(money_0)
        var_0 = None
        money_1 = money_0.__add__(money_0)
        bool_1 = money_0.__ge__(money_0)
        decimal_0 = module_2.Decimal()
        money_2 = some_money_0.subtract(money_1)
        money_3 = none_money_0.add(money_2)
        bool_2 = money_0.__lt__(money_3)
        money_4 = money_1.floor_divide(var_0)
    except BaseException:
        pass

def test_case_36():
    try:
        none_money_0 = module_0.NoneMoney()
        list_0 = [none_money_0, none_money_0, none_money_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.negative()
        bool_0 = none_money_0.lte(money_0)
        money_1 = money_0.__add__(money_0)
        bool_1 = money_0.__ge__(money_0)
        money_2 = none_money_0.abs()
        decimal_0 = module_2.Decimal()
        money_3 = some_money_0.with_qty(decimal_0)
    except BaseException:
        pass

def test_case_37():
    try:
        currency_0 = None
        currency_type_0 = module_1.CurrencyType.CRYPTO
        dict_0 = {}
        none_price_0 = module_0.NonePrice(**dict_0)
        none_money_0 = module_0.NoneMoney()
        list_0 = [none_money_0, currency_0, currency_type_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.convert(currency_0)
    except BaseException:
        pass

def test_case_38():
    try:
        str_0 = "yby.!O\t+aX'#n4\t"
        str_1 = '\n        Converts the monetary value from one currency to another.\n\n        Raises :class:`FXRateLookupError` if no foreign exchange rate can be found for conversion.\n\n        Note that we will carry the date forward as per ``asof`` date.\n        '
        int_0 = 2
        currency_type_0 = module_1.CurrencyType.METAL
        decimal_0 = None
        currency_0 = module_1.Currency(str_0, str_1, int_0, currency_type_0, decimal_0, int_0)
        bool_0 = True
        bytes_0 = None
        list_0 = [bytes_0, bytes_0, bytes_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.convert(currency_0, bool_0)
    except BaseException:
        pass

def test_case_39():
    try:
        list_0 = []
        dict_0 = {}
        price_0 = module_0.Price(**dict_0)
        price_1 = price_0.scalar_subtract(list_0)
    except BaseException:
        pass

def test_case_40():
    try:
        none_money_0 = module_0.NoneMoney()
        list_0 = [none_money_0, none_money_0, none_money_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.abs()
        some_money_0 = module_0.SomeMoney(*list_0)
        price_1 = some_price_0.round()
        money_0 = some_money_0.negative()
        bool_0 = none_money_0.lte(money_0)
        money_1 = money_0.__add__(money_0)
        price_2 = price_1.add(price_0)
        bool_1 = money_1.__ge__(money_0)
        bool_2 = some_money_0.lte(money_0)
        decimal_0 = module_2.Decimal()
        money_2 = none_money_0.with_qty(decimal_0)
        some_money_1 = module_0.SomeMoney()
    except BaseException:
        pass

def test_case_41():
    try:
        none_money_0 = module_0.NoneMoney()
        list_0 = [none_money_0, none_money_0, none_money_0]
        currency_0 = None
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.with_ccy(currency_0)
        currency_type_0 = module_1.CurrencyType.MONEY
        price_1 = price_0.__mul__(currency_type_0)
    except BaseException:
        pass

def test_case_42():
    try:
        none_money_0 = module_0.NoneMoney()
        list_0 = [none_money_0, none_money_0, none_money_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.abs()
        some_money_0 = module_0.SomeMoney(*list_0)
        price_1 = some_price_0.round()
        money_0 = some_money_0.negative()
        bool_0 = none_money_0.lte(money_0)
        money_1 = money_0.__add__(money_0)
        float_0 = some_price_0.as_float()
    except BaseException:
        pass

def test_case_43():
    try:
        none_money_0 = module_0.NoneMoney()
        list_0 = [none_money_0, none_money_0, none_money_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.negative()
        var_0 = None
        money_1 = money_0.__add__(money_0)
        price_0 = module_0.Price()
        price_1 = price_0.divide(var_0)
    except BaseException:
        pass

def test_case_44():
    try:
        none_money_0 = module_0.NoneMoney()
        list_0 = [none_money_0, none_money_0, none_money_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.abs()
        bool_0 = some_price_0.lt(price_0)
        var_0 = None
        price_1 = price_0.add(price_0)
        price_2 = price_0.__floordiv__(var_0)
    except BaseException:
        pass

def test_case_45():
    try:
        none_money_0 = module_0.NoneMoney()
        list_0 = [none_money_0, none_money_0, none_money_0]
        currency_0 = None
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.abs()
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.negative()
        money_1 = money_0.with_ccy(currency_0)
        bool_0 = money_0.__ge__(money_0)
        bool_1 = some_money_0.lte(money_0)
        money_2 = some_money_0.subtract(money_1)
    except BaseException:
        pass

def test_case_46():
    try:
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.abs()
        list_0 = [none_money_0, none_money_0, none_money_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_1 = some_money_0.negative()
        bool_0 = none_money_0.lte(money_1)
        bool_1 = money_1.__gt__(money_1)
        var_0 = None
        money_2 = money_1.__add__(money_1)
        bool_2 = some_money_0.lte(money_1)
        money_3 = some_money_0.subtract(money_2)
        bool_3 = money_1.__lt__(money_3)
        money_4 = money_3.floor_divide(var_0)
    except BaseException:
        pass

def test_case_47():
    try:
        none_money_0 = module_0.NoneMoney()
        list_0 = [none_money_0, none_money_0, none_money_0]
        some_price_0 = module_0.SomePrice(*list_0)
        str_0 = '2*"c8azBMYO-e.TY,jk'
        decimal_0 = module_2.Decimal()
        dict_0 = {str_0: decimal_0}
        price_0 = some_price_0.scalar_add(dict_0)
    except BaseException:
        pass

def test_case_48():
    try:
        none_money_0 = module_0.NoneMoney()
        list_0 = [none_money_0, none_money_0, none_money_0]
        currency_0 = None
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.abs()
        some_money_0 = module_0.SomeMoney(*list_0)
        int_0 = 1724
        price_1 = some_price_0.round(int_0)
        money_0 = some_money_0.with_ccy(currency_0)
        bool_0 = none_money_0.lte(money_0)
        money_1 = money_0.__add__(money_0)
        price_2 = some_price_0.negative()
        price_3 = price_2.__add__(price_0)
        price_4 = price_3.add(price_1)
        bool_1 = money_1.__ge__(money_1)
        bool_2 = some_money_0.lte(money_0)
    except BaseException:
        pass

def test_case_49():
    try:
        none_money_0 = module_0.NoneMoney()
        list_0 = [none_money_0, none_money_0, none_money_0]
        currency_0 = None
        some_price_0 = module_0.SomePrice(*list_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        price_0 = some_price_0.round()
        money_0 = some_money_0.negative()
        bool_0 = none_money_0.lte(money_0)
        money_1 = some_money_0.with_ccy(currency_0)
        bool_1 = money_1.__ge__(money_0)
    except BaseException:
        pass

def test_case_50():
    try:
        none_money_0 = module_0.NoneMoney()
        list_0 = [none_money_0, none_money_0, none_money_0]
        currency_0 = None
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.abs()
        some_money_0 = module_0.SomeMoney(*list_0)
        price_1 = some_price_0.round()
        money_0 = some_money_0.negative()
        bool_0 = none_money_0.lte(money_0)
        var_0 = None
        money_1 = money_0.__add__(money_0)
        price_2 = price_1.add(price_0)
        bool_1 = money_0.__ge__(money_0)
        bool_2 = some_money_0.lte(money_0)
        money_2 = some_money_0.subtract(money_1)
        money_3 = none_money_0.negative()
        money_4 = some_money_0.subtract(money_3)
        bool_3 = money_2.__lt__(money_4)
        money_5 = module_0.Money()
        money_6 = money_5.with_ccy(currency_0)
        money_7 = money_5.floor_divide(var_0)
    except BaseException:
        pass

def test_case_51():
    try:
        none_money_0 = module_0.NoneMoney()
        list_0 = [none_money_0, none_money_0, none_money_0]
        currency_0 = None
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.abs()
        some_money_0 = module_0.SomeMoney(*list_0)
        price_1 = some_price_0.round()
        money_0 = some_money_0.negative()
        bool_0 = none_money_0.lte(money_0)
        money_1 = money_0.__add__(money_0)
        none_price_0 = module_0.NonePrice()
        price_2 = none_price_0.convert(currency_0)
        price_3 = price_1.add(price_2)
        bool_1 = money_0.__ge__(money_0)
        bool_2 = some_money_0.lte(money_0)
        some_money_1 = module_0.SomeMoney()
    except BaseException:
        pass

def test_case_52():
    try:
        none_money_0 = module_0.NoneMoney()
        list_0 = [none_money_0, none_money_0, none_money_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.abs()
        some_money_0 = module_0.SomeMoney(*list_0)
        price_1 = some_price_0.round()
        money_0 = some_money_0.negative()
        bool_0 = none_money_0.lte(money_0)
        var_0 = None
        money_1 = money_0.__add__(money_0)
        str_0 = '$=TD(1@A<uW,r>Q9CX}'
        bool_1 = money_0.__ge__(money_0)
        bool_2 = some_money_0.lte(money_0)
        none_price_0 = module_0.NonePrice()
        money_2 = none_price_0.times(var_0)
        bool_3 = money_0.__lt__(money_2)
        list_1 = [str_0]
        none_price_1 = module_0.NonePrice(*list_1)
    except BaseException:
        pass

def test_case_53():
    try:
        none_money_0 = module_0.NoneMoney()
        list_0 = [none_money_0, none_money_0, none_money_0]
        currency_0 = None
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.abs()
        some_money_0 = module_0.SomeMoney(*list_0)
        price_1 = some_price_0.round()
        money_0 = some_money_0.negative()
        bool_0 = none_money_0.lte(money_0)
        money_1 = money_0.__add__(money_0)
        price_2 = some_price_0.with_ccy(currency_0)
        price_3 = price_0.add(price_2)
    except BaseException:
        pass

def test_case_54():
    try:
        money_0 = module_0.Money()
        int_0 = money_0.as_integer()
    except BaseException:
        pass

def test_case_55():
    try:
        none_money_0 = module_0.NoneMoney()
        list_0 = [none_money_0, none_money_0, none_money_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.round()
        bool_0 = price_0.__ge__(price_0)
        var_0 = None
        price_1 = price_0.add(price_0)
        price_2 = price_1.add(price_1)
        bool_1 = some_price_0.as_boolean()
        price_3 = some_price_0.divide(var_0)
    except BaseException:
        pass

def test_case_56():
    try:
        none_money_0 = module_0.NoneMoney()
        list_0 = [none_money_0, none_money_0, none_money_0]
        currency_0 = None
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.with_ccy(currency_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_0 = some_price_0.lt(price_0)
    except BaseException:
        pass

def test_case_57():
    try:
        none_money_0 = module_0.NoneMoney()
        list_0 = [none_money_0, none_money_0, none_money_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.abs()
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_0 = some_price_0.lt(price_0)
        price_1 = some_price_0.round()
        money_0 = some_money_0.negative()
        price_2 = some_price_0.round()
        money_1 = some_money_0.negative()
        bool_1 = none_money_0.lte(money_1)
        var_0 = None
        money_2 = money_1.__add__(money_0)
        price_3 = price_0.add(price_1)
        bool_2 = some_money_0.lte(money_1)
        money_3 = some_money_0.subtract(money_1)
        money_4 = price_1.times(var_0)
    except BaseException:
        pass

def test_case_58():
    try:
        none_money_0 = module_0.NoneMoney()
        list_0 = [none_money_0, none_money_0, none_money_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.abs()
        some_money_0 = module_0.SomeMoney(*list_0)
        price_1 = some_price_0.round()
        money_0 = some_money_0.negative()
        bool_0 = none_money_0.lte(money_0)
        var_0 = None
        money_1 = money_0.__add__(money_0)
        price_2 = price_0.add(price_0)
        bool_1 = money_0.__ge__(money_1)
        bool_2 = some_money_0.lte(money_0)
        int_0 = 998
        money_2 = some_money_0.subtract(money_0)
        bool_3 = some_money_0.is_equal(int_0)
        bool_4 = money_0.__lt__(money_0)
        bool_5 = price_2.gte(price_1)
        bool_6 = price_0.__lt__(price_0)
        dict_0 = {}
        none_price_0 = module_0.NonePrice(**dict_0)
        var_1 = price_0.__round__(int_0)
        none_price_1 = module_0.NonePrice()
        price_3 = none_price_1.subtract(price_1)
        money_3 = money_1.floor_divide(var_0)
    except BaseException:
        pass

def test_case_59():
    try:
        none_money_0 = module_0.NoneMoney()
        list_0 = [none_money_0, none_money_0, none_money_0]
        currency_0 = None
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.abs()
        some_money_0 = module_0.SomeMoney(*list_0)
        price_1 = some_price_0.positive()
        price_2 = some_price_0.subtract(price_1)
        bool_0 = price_0.__le__(price_0)
        price_3 = some_price_0.round()
        bool_1 = some_price_0.is_equal(price_2)
        money_0 = some_money_0.negative()
        price_4 = some_price_0.with_ccy(currency_0)
        var_0 = None
        bool_2 = price_3.gte(price_3)
        price_5 = price_0.add(price_0)
        bool_3 = money_0.__ge__(money_0)
        bool_4 = none_money_0.as_boolean()
        bool_5 = some_money_0.lte(money_0)
        money_1 = none_money_0.multiply(var_0)
        money_2 = money_0.convert(currency_0, bool_5)
    except BaseException:
        pass

def test_case_60():
    try:
        none_money_0 = module_0.NoneMoney()
        list_0 = [none_money_0, none_money_0, none_money_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.abs()
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_0 = price_0.__le__(price_0)
        price_1 = some_price_0.add(price_0)
        money_0 = some_money_0.negative()
        bool_1 = price_1.gt(price_0)
        bool_2 = price_1.gte(price_1)
        decimal_0 = module_2.Decimal()
        price_2 = some_price_0.with_qty(decimal_0)
        money_1 = money_0.__add__(money_0)
        str_0 = "E;i3I5[ _ /x'[u>"
        str_1 = 'Moldovan Leu'
        int_0 = 1026
        currency_type_0 = module_1.CurrencyType.METAL
        currency_0 = module_1.Currency(str_0, str_1, int_0, currency_type_0, decimal_0, int_0)
        optional_0 = None
        price_3 = some_price_0.convert(currency_0, optional_0)
    except BaseException:
        pass

def test_case_61():
    try:
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.abs()
        list_0 = [none_money_0, none_money_0, none_money_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.abs()
        bool_0 = price_0.gt(price_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        money_1 = some_money_0.negative()
        bool_1 = none_money_0.lte(money_1)
        var_0 = None
        money_2 = money_1.__add__(money_1)
        date_0 = None
        price_1 = price_0.with_dov(date_0)
        bool_2 = money_1.__ge__(money_1)
        bool_3 = some_money_0.lte(money_1)
        money_3 = some_money_0.subtract(money_2)
        bool_4 = price_0.__eq__(list_0)
        bool_5 = money_1.__lt__(money_3)
        money_4 = money_1.floor_divide(var_0)
    except BaseException:
        pass

def test_case_62():
    try:
        none_money_0 = module_0.NoneMoney()
        list_0 = [none_money_0, none_money_0, none_money_0]
        currency_0 = None
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.with_ccy(currency_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_0 = price_0.__le__(price_0)
        price_1 = some_price_0.round()
        money_0 = some_money_0.abs()
        bool_1 = price_1.gte(price_1)
        money_1 = money_0.__add__(money_0)
        price_2 = price_0.subtract(price_1)
    except BaseException:
        pass

def test_case_63():
    try:
        none_money_0 = module_0.NoneMoney()
        list_0 = [none_money_0, none_money_0, none_money_0]
        currency_0 = None
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.abs()
        some_money_0 = module_0.SomeMoney(*list_0)
        price_1 = some_price_0.round()
        money_0 = some_money_0.negative()
        bool_0 = none_money_0.lte(money_0)
        var_0 = None
        money_1 = money_0.__add__(money_0)
        none_price_0 = module_0.NonePrice()
        price_2 = none_price_0.convert(currency_0)
        price_3 = price_1.add(price_2)
        price_4 = price_0.scalar_subtract(var_0)
    except BaseException:
        pass

def test_case_64():
    try:
        var_0 = None
        price_0 = module_0.Price()
        money_0 = price_0.times(var_0)
    except BaseException:
        pass

def test_case_65():
    try:
        none_money_0 = module_0.NoneMoney()
        list_0 = [none_money_0, none_money_0, none_money_0]
        some_price_0 = module_0.SomePrice(*list_0)
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.negative()
        price_1 = price_0.negative()
        price_2 = price_1.__pos__()
        price_3 = some_price_0.negative()
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_0 = price_3.__le__(price_3)
        price_4 = some_price_0.add(price_3)
        money_0 = None
        money_1 = none_money_0.add(money_0)
        money_2 = some_money_0.negative()
        var_0 = None
        bool_1 = price_4.gte(price_4)
        money_3 = money_2.__add__(money_2)
        price_5 = price_3.subtract(price_4)
        price_6 = some_price_0.subtract(price_5)
        bool_2 = money_2.__ge__(money_3)
        bool_3 = none_money_0.as_boolean()
        money_4 = none_money_0.round()
        bool_4 = some_price_0.lt(price_0)
        money_5 = some_money_0.subtract(money_2)
        bool_5 = money_2.__lt__(money_2)
        dict_0 = {}
        none_price_1 = module_0.NonePrice(**dict_0)
        price_7 = price_3.__floordiv__(var_0)
    except BaseException:
        pass

def test_case_66():
    try:
        bytes_0 = b'~\xfdm\x1b\xe7\x0ce\x9b\xa9:OY\xca\xd1\x13\xad\xd3'
        decimal_0 = None
        int_0 = -471
        list_0 = []
        none_money_0 = module_0.NoneMoney(*list_0)
        money_0 = none_money_0.round(int_0)
        list_1 = [decimal_0, bytes_0, bytes_0]
        some_money_0 = module_0.SomeMoney(*list_1)
        money_1 = none_money_0.abs()
        str_0 = '\n        Type of the account.\n        '
        dict_0 = {str_0: str_0}
        none_price_0 = module_0.NonePrice()
        bool_0 = none_price_0.is_equal(bytes_0)
        none_price_1 = module_0.NonePrice(**dict_0)
    except BaseException:
        pass

def test_case_67():
    try:
        none_money_0 = module_0.NoneMoney()
        list_0 = [none_money_0, none_money_0, none_money_0]
        currency_0 = None
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.abs()
        some_money_0 = module_0.SomeMoney(*list_0)
        price_1 = some_price_0.subtract(price_0)
        price_2 = price_0.__abs__()
        bool_0 = price_0.__le__(price_0)
        price_3 = some_price_0.with_ccy(currency_0)
        money_0 = some_money_0.negative()
        bool_1 = price_2.__ge__(price_3)
    except BaseException:
        pass

def test_case_68():
    try:
        none_money_0 = module_0.NoneMoney()
        list_0 = [none_money_0, none_money_0, none_money_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.abs()
        some_money_0 = module_0.SomeMoney(*list_0)
        date_0 = None
        money_0 = some_money_0.with_dov(date_0)
        bool_0 = price_0.__le__(price_0)
        money_1 = some_money_0.negative()
        var_0 = None
        bool_1 = price_0.gte(price_0)
        money_2 = money_1.__add__(money_1)
        price_1 = price_0.subtract(price_0)
        price_2 = some_price_0.subtract(price_1)
        bool_2 = money_1.__ge__(money_2)
        bool_3 = none_money_0.as_boolean()
        bool_4 = some_money_0.lte(money_1)
        int_0 = 977
        money_3 = none_money_0.round()
        money_4 = some_money_0.subtract(money_1)
        bool_5 = some_money_0.is_equal(int_0)
        bool_6 = money_1.__lt__(money_1)
        price_3 = some_price_0.divide(var_0)
    except BaseException:
        pass

def test_case_69():
    try:
        none_money_0 = module_0.NoneMoney()
        list_0 = [none_money_0, none_money_0, none_money_0]
        some_price_0 = module_0.SomePrice(*list_0)
        money_0 = module_0.Money()
        money_1 = none_money_0.subtract(money_0)
        money_2 = money_0.__pos__()
        some_money_0 = module_0.SomeMoney(*list_0)
        money_3 = money_0.__add__(money_0)
        bool_0 = money_2.__ge__(money_3)
        bool_1 = none_money_0.as_boolean()
        bool_2 = some_money_0.lte(money_0)
    except BaseException:
        pass

def test_case_70():
    try:
        none_money_0 = module_0.NoneMoney()
        list_0 = [none_money_0, none_money_0, none_money_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.abs()
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_0 = price_0.__le__(price_0)
        price_1 = some_price_0.add(price_0)
        money_0 = some_money_0.negative()
        bool_1 = price_1.gt(price_0)
        var_0 = None
        none_price_0 = module_0.NonePrice()
        bool_2 = none_price_0.lt(price_1)
        bool_3 = price_1.gte(price_1)
        money_1 = money_0.__add__(money_0)
        price_2 = price_0.subtract(price_1)
        price_3 = price_2.abs()
        bool_4 = money_0.__ge__(money_1)
        bool_5 = none_money_0.as_boolean()
        bool_6 = some_money_0.lte(money_0)
        int_0 = 977
        money_2 = none_money_0.round()
        money_3 = some_money_0.subtract(money_0)
        bool_7 = some_money_0.is_equal(int_0)
        bool_8 = money_0.__lt__(money_0)
        dict_0 = {}
        none_price_1 = module_0.NonePrice(**dict_0)
        none_price_2 = module_0.NonePrice()
        price_4 = none_price_1.subtract(price_2)
        money_4 = money_0.floor_divide(var_0)
    except BaseException:
        pass

def test_case_71():
    try:
        none_money_0 = module_0.NoneMoney()
        list_0 = [none_money_0, none_money_0, none_money_0]
        currency_0 = None
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.abs()
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_0 = price_0.__le__(price_0)
        price_1 = some_price_0.positive()
        price_2 = some_price_0.with_ccy(currency_0)
        money_0 = some_money_0.negative()
        bool_1 = price_2.gt(price_0)
    except BaseException:
        pass

def test_case_72():
    try:
        none_money_0 = module_0.NoneMoney()
        list_0 = [none_money_0, none_money_0, none_money_0]
        some_price_0 = module_0.SomePrice(*list_0)
        money_0 = module_0.Money()
        money_1 = none_money_0.subtract(money_0)
        money_2 = money_0.__pos__()
        some_money_0 = module_0.SomeMoney(*list_0)
        money_3 = some_money_0.negative()
        var_0 = None
        money_4 = money_3.__add__(money_3)
        bool_0 = money_3.__ge__(money_4)
        bool_1 = none_money_0.as_boolean()
        bool_2 = some_money_0.lte(money_3)
        int_0 = 977
        money_5 = none_money_0.round()
        money_6 = some_money_0.subtract(money_3)
        bool_3 = some_money_0.is_equal(int_0)
        bool_4 = money_0.__ge__(money_3)
        bool_5 = money_3.__lt__(money_3)
        dict_0 = {}
        none_price_0 = module_0.NonePrice(**dict_0)
        none_price_1 = module_0.NonePrice(**dict_0)
        none_price_2 = module_0.NonePrice()
        money_7 = money_4.floor_divide(var_0)
    except BaseException:
        pass

def test_case_73():
    try:
        price_0 = module_0.Price()
        bool_0 = price_0.__bool__()
        some_money_0 = module_0.SomeMoney()
    except BaseException:
        pass

def test_case_74():
    try:
        money_0 = module_0.Money()
        bool_0 = money_0.is_equal(money_0)
    except BaseException:
        pass

def test_case_75():
    try:
        none_money_0 = module_0.NoneMoney()
        list_0 = [none_money_0, none_money_0, none_money_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.abs()
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_0 = price_0.__le__(price_0)
        price_1 = some_price_0.add(price_0)
        currency_type_0 = module_1.CurrencyType.ALTERNATIVE
        money_0 = none_money_0.divide(currency_type_0)
        bool_1 = some_money_0.gt(money_0)
        money_1 = some_money_0.negative()
        bool_2 = price_1.gt(price_0)
        bool_3 = price_1.gte(price_1)
        decimal_0 = module_2.Decimal()
        price_2 = some_price_0.with_qty(decimal_0)
        money_2 = money_1.__add__(money_1)
        str_0 = '$=TD(1@A<uW,r>Q9CX}'
        price_3 = price_0.subtract(price_1)
        money_3 = money_1.subtract(money_1)
        price_4 = price_3.abs()
        bool_4 = money_1.__ge__(money_2)
        bool_5 = none_money_0.as_boolean()
        int_0 = 979
        money_4 = none_money_0.round(int_0)
        currency_type_1 = module_1.CurrencyType.ALTERNATIVE
        str_1 = ':'
        int_1 = 365
        currency_0 = module_1.Currency(str_1, str_0, int_1, currency_type_1, decimal_0, int_1)
        price_5 = price_0.convert(currency_0, some_money_0)
    except BaseException:
        pass

def test_case_76():
    try:
        none_money_0 = module_0.NoneMoney()
        list_0 = [none_money_0, none_money_0, none_money_0]
        currency_0 = None
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.negative()
        bool_0 = price_0.__ge__(price_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_1 = price_0.__le__(price_0)
        price_1 = some_price_0.add(price_0)
        money_0 = some_money_0.negative()
        bool_2 = price_1.gte(price_1)
        money_1 = money_0.__add__(money_0)
        price_2 = price_0.subtract(price_1)
        price_3 = some_price_0.with_ccy(currency_0)
        bool_3 = money_0.__ge__(money_1)
        bool_4 = none_money_0.as_boolean()
        bool_5 = price_0.__gt__(price_0)
        bool_6 = some_money_0.lte(money_0)
        bool_7 = price_3.__le__(price_2)
    except BaseException:
        pass

def test_case_77():
    try:
        money_0 = module_0.Money()
        int_0 = money_0.__int__()
        some_price_0 = module_0.SomePrice()
    except BaseException:
        pass

def test_case_78():
    try:
        price_0 = module_0.Price()
        price_1 = price_0.positive()
    except BaseException:
        pass

def test_case_79():
    try:
        price_0 = module_0.Price()
        price_1 = price_0.__neg__()
        some_price_0 = module_0.SomePrice()
    except BaseException:
        pass

def test_case_80():
    try:
        none_money_0 = module_0.NoneMoney()
        list_0 = [none_money_0, none_money_0, none_money_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.negative()
        bool_0 = none_money_0.lte(money_0)
        str_0 = 'Jw3-sze=M$HO'
        money_1 = some_money_0.divide(str_0)
        var_0 = None
        money_2 = none_money_0.multiply(var_0)
        list_1 = [none_money_0, none_money_0, none_money_0]
        some_money_1 = module_0.SomeMoney(*list_0)
        bool_1 = some_money_1.is_equal(list_1)
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.floor_divide(var_0)
        price_1 = price_0.divide(var_0)
        some_price_0 = module_0.SomePrice()
    except BaseException:
        pass

def test_case_81():
    try:
        str_0 = "x3C|\t'c2bf~\nm+arOD"
        int_0 = 365
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        int_1 = -2891
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_1)
        money_0 = module_0.Money()
        money_1 = money_0.abs()
    except BaseException:
        pass

def test_case_82():
    try:
        none_money_0 = module_0.NoneMoney()
        list_0 = [none_money_0, none_money_0, none_money_0]
        currency_0 = None
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.negative()
        bool_0 = price_0.__ge__(price_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_1 = price_0.__le__(price_0)
        price_1 = some_price_0.add(price_0)
        money_0 = some_money_0.negative()
        str_0 = 'Q!+J.a'
        price_2 = price_1.__floordiv__(str_0)
        bool_2 = price_1.gte(price_1)
        money_1 = money_0.__add__(money_0)
        price_3 = price_0.subtract(price_1)
        price_4 = some_price_0.with_ccy(currency_0)
        bool_3 = money_0.__ge__(money_1)
        bool_4 = none_money_0.as_boolean()
        bool_5 = price_0.__gt__(price_0)
        bool_6 = some_money_0.lte(money_0)
        int_0 = 977
        money_2 = some_money_0.positive()
        price_5 = price_3.abs()
        money_3 = some_money_0.subtract(money_0)
        bool_7 = some_money_0.is_equal(int_0)
        bool_8 = money_1.__gt__(money_0)
        bool_9 = money_0.__lt__(money_0)
        bool_10 = True
        money_4 = some_money_0.convert(currency_0, bool_10)
    except BaseException:
        pass

def test_case_83():
    try:
        none_money_0 = module_0.NoneMoney()
        list_0 = [none_money_0, none_money_0, none_money_0]
        currency_0 = None
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.negative()
        bool_0 = price_0.__ge__(price_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_1 = price_0.__le__(price_0)
        price_1 = some_price_0.add(price_0)
        money_0 = some_money_0.negative()
        str_0 = 'Q!+J.a'
        price_2 = price_1.__floordiv__(str_0)
        bool_2 = price_0.lte(price_2)
        bool_3 = price_1.gte(price_1)
        money_1 = money_0.__add__(money_0)
        price_3 = price_0.subtract(price_1)
        price_4 = some_price_0.with_ccy(currency_0)
        bool_4 = money_0.__ge__(money_1)
        bool_5 = none_money_0.as_boolean()
        bool_6 = price_0.__gt__(price_0)
        bool_7 = some_money_0.lte(money_0)
        money_2 = some_money_0.positive()
        money_3 = some_money_0.subtract(money_0)
        bool_8 = money_1.__gt__(money_0)
        bool_9 = money_0.__lt__(money_0)
        bool_10 = True
        money_4 = some_money_0.convert(currency_0, bool_10)
    except BaseException:
        pass

def test_case_84():
    try:
        none_money_0 = module_0.NoneMoney()
        list_0 = [none_money_0, none_money_0, none_money_0]
        currency_0 = None
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.negative()
        bool_0 = price_0.__ge__(price_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_1 = price_0.__le__(price_0)
        money_0 = some_money_0.negative()
        str_0 = 'Q!+J.a'
        price_1 = price_0.__floordiv__(str_0)
        bool_2 = price_0.lte(price_1)
        bool_3 = price_0.gte(price_0)
        money_1 = money_0.__add__(money_0)
        price_2 = price_0.subtract(price_1)
        price_3 = some_price_0.with_ccy(currency_0)
        bool_4 = money_0.__ge__(money_1)
        bool_5 = none_money_0.as_boolean()
        bool_6 = price_0.__gt__(price_0)
        bool_7 = some_money_0.lte(money_0)
        int_0 = 977
        money_2 = some_money_0.positive()
        money_3 = some_money_0.subtract(money_0)
        bool_8 = some_money_0.is_equal(int_0)
        bool_9 = money_1.__gt__(money_0)
        bool_10 = money_0.__lt__(money_0)
        bool_11 = True
        money_4 = some_money_0.convert(currency_0, bool_11)
    except BaseException:
        pass

def test_case_85():
    try:
        currency_0 = None
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.floor_divide(currency_0)
        price_0 = module_0.Price()
        price_1 = price_0.__pos__()
        var_0 = price_0.__round__(currency_0)
    except BaseException:
        pass

def test_case_86():
    try:
        currency_0 = None
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.floor_divide(currency_0)
        price_0 = module_0.Price()
        price_1 = price_0.__add__(price_0)
        var_0 = price_0.__round__(currency_0)
    except BaseException:
        pass

def test_case_87():
    try:
        str_0 = 'wtuM^'
        int_0 = 1231
        list_0 = []
        none_price_0 = module_0.NonePrice(*list_0)
        price_0 = none_price_0.round()
        currency_type_0 = module_1.CurrencyType.METAL
        decimal_0 = module_2.Decimal()
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        price_1 = module_0.Price()
        price_2 = price_1.with_ccy(currency_0)
        price_3 = price_2.positive()
    except BaseException:
        pass

def test_case_88():
    try:
        none_money_0 = module_0.NoneMoney()
        list_0 = [none_money_0, none_money_0, none_money_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.negative()
        bool_0 = none_money_0.lte(money_0)
        bool_1 = money_0.as_boolean()
        var_0 = None
        money_1 = money_0.add(money_0)
        money_2 = none_money_0.multiply(var_0)
        str_0 = '_Rz#*$\n\t7GY'
        str_1 = 'TimeDelta'
        str_2 = '\n    Indicates if the date is the last day of the month.\n    '
        int_0 = 998
        currency_type_0 = module_1.CurrencyType.CRYPTO
        money_3 = none_money_0.abs()
        decimal_0 = module_2.Decimal()
        int_1 = -1134
        decimal_1 = module_2.Decimal()
        currency_0 = module_1.Currency(str_0, str_0, int_1, currency_type_0, decimal_1, int_1)
        decimal_2 = currency_0.quantize(decimal_0)
        bool_2 = none_money_0.gt(money_0)
        int_2 = 771
        currency_1 = module_1.Currency(str_1, str_2, int_0, currency_type_0, decimal_2, int_2)
        price_0 = module_0.Price()
        bool_3 = price_0.__le__(price_0)
        price_1 = price_0.multiply(var_0)
    except BaseException:
        pass

def test_case_89():
    try:
        price_0 = module_0.Price()
        bool_0 = price_0.lte(price_0)
        bool_1 = price_0.__bool__()
        some_money_0 = module_0.SomeMoney()
    except BaseException:
        pass

def test_case_90():
    try:
        price_0 = module_0.Price()
        bool_0 = price_0.__lt__(price_0)
        monetary_operation_exception_0 = module_0.MonetaryOperationException()
        some_price_0 = module_0.SomePrice()
    except BaseException:
        pass

def test_case_91():
    try:
        none_money_0 = module_0.NoneMoney()
        list_0 = [none_money_0, none_money_0, none_money_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.abs()
        some_money_0 = module_0.SomeMoney(*list_0)
        price_1 = some_price_0.add(price_0)
        none_money_1 = module_0.NoneMoney()
        money_0 = some_money_0.negative()
        bool_0 = some_money_0.gt(money_0)
        money_1 = money_0.abs()
        bool_1 = price_1.gt(price_0)
        money_2 = money_0.__neg__()
        bool_2 = price_1.gte(price_1)
        decimal_0 = module_2.Decimal()
        price_2 = some_price_0.with_qty(decimal_0)
        money_3 = money_1.__add__(money_1)
        price_3 = price_0.subtract(price_1)
        money_4 = some_money_0.abs()
        money_5 = money_1.subtract(money_1)
        money_6 = none_money_1.with_qty(decimal_0)
        price_4 = price_3.abs()
        bool_3 = money_1.__ge__(money_3)
        bool_4 = none_money_0.as_boolean()
        money_7 = money_3.negative()
        currency_type_0 = module_1.CurrencyType.ALTERNATIVE
        str_0 = 'Sudanese Pound'
        int_0 = 365
        bool_5 = some_money_0.is_equal(money_1)
        str_1 = 'hE)Bb@]E&'
        currency_0 = module_1.Currency(str_0, str_1, int_0, currency_type_0, decimal_0, int_0)
        price_5 = price_0.convert(currency_0)
    except BaseException:
        pass

def test_case_92():
    try:
        none_money_0 = module_0.NoneMoney()
        list_0 = [none_money_0, none_money_0, none_money_0]
        currency_0 = None
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.negative()
        some_money_0 = module_0.SomeMoney(*list_0)
        price_1 = some_price_0.add(price_0)
        money_0 = some_money_0.negative()
        bool_0 = price_1.gte(price_1)
        str_0 = 'Z1\x0bn4"P\nhd'
        money_1 = money_0.__floordiv__(str_0)
        money_2 = money_0.__add__(money_0)
        price_2 = price_0.subtract(price_1)
        price_3 = some_price_0.with_ccy(currency_0)
        bool_1 = money_0.__ge__(money_2)
        bool_2 = none_money_0.as_boolean()
        bool_3 = price_0.__gt__(price_0)
        bool_4 = some_money_0.lte(money_0)
        money_3 = none_money_0.positive()
        money_4 = some_money_0.subtract(money_0)
        bool_5 = money_2.__gt__(money_0)
        bool_6 = money_0.__lt__(money_0)
        bool_7 = True
        money_5 = some_money_0.convert(currency_0, bool_7)
    except BaseException:
        pass

def test_case_93():
    try:
        none_money_0 = module_0.NoneMoney()
        list_0 = [none_money_0, none_money_0, none_money_0]
        currency_0 = None
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.negative()
        bool_0 = price_0.__ge__(price_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_1 = price_0.__le__(price_0)
        price_1 = some_price_0.add(price_0)
        money_0 = some_money_0.negative()
        str_0 = 'Q!+J.a'
        price_2 = price_1.__floordiv__(str_0)
        bool_2 = price_1.gte(price_1)
        money_1 = money_0.__add__(money_0)
        price_3 = price_0.subtract(price_1)
        bool_3 = money_0.__ge__(money_1)
        bool_4 = none_money_0.as_boolean()
        bool_5 = price_0.__gt__(price_0)
        bool_6 = some_money_0.lte(money_0)
        int_0 = 977
        money_2 = some_money_0.positive()
        money_3 = some_money_0.subtract(money_0)
        bool_7 = some_money_0.is_equal(int_0)
        bool_8 = money_1.__gt__(money_0)
        bool_9 = money_0.__lt__(money_0)
        bool_10 = True
        bool_11 = price_3.gte(price_2)
        money_4 = some_money_0.convert(currency_0, bool_10)
    except BaseException:
        pass

def test_case_94():
    try:
        str_0 = '[35_6Tw>D68'
        str_1 = 'K4S^@%U<{hGXH~/lm @'
        int_0 = 12
        currency_type_0 = module_1.CurrencyType.ALTERNATIVE
        decimal_0 = None
        int_1 = -1773
        currency_0 = module_1.Currency(str_0, str_1, int_0, currency_type_0, decimal_0, int_1)
        money_0 = module_0.Money()
        money_1 = money_0.convert(currency_0)
    except BaseException:
        pass

def test_case_95():
    try:
        list_0 = []
        none_money_0 = module_0.NoneMoney(*list_0)
        var_0 = None
        price_0 = module_0.Price(*list_0)
        price_1 = price_0.__truediv__(var_0)
        some_price_0 = module_0.SomePrice()
    except BaseException:
        pass

def test_case_96():
    try:
        list_0 = []
        none_money_0 = module_0.NoneMoney()
        price_0 = module_0.Price()
        var_0 = None
        price_1 = price_0.__floordiv__(var_0)
        money_0 = none_money_0.negative()
        date_0 = module_3.date(*list_0)
    except BaseException:
        pass

def test_case_97():
    try:
        int_0 = 2751
        tuple_0 = (int_0,)
        dict_0 = {}
        none_money_0 = module_0.NoneMoney(**dict_0)
        list_0 = [dict_0, int_0, none_money_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_0 = none_money_0.is_equal(tuple_0)
        price_0 = module_0.Price()
        price_1 = price_0.__abs__()
        int_1 = price_1.__int__()
    except BaseException:
        pass

def test_case_98():
    try:
        money_0 = module_0.Money()
        money_1 = money_0.__abs__()
        bool_0 = money_1.__le__(money_0)
        str_0 = 'NoneMoney'
        str_1 = '\n        Provides a comparison for account type enums.\n        '
        dict_0 = {str_0: str_0, str_1: money_0, str_1: money_0, str_0: bool_0}
        none_price_0 = module_0.NonePrice(**dict_0)
    except BaseException:
        pass

def test_case_99():
    try:
        price_0 = module_0.Price()
        price_1 = price_0.subtract(price_0)
    except BaseException:
        pass

def test_case_100():
    try:
        price_0 = module_0.Price()
        bool_0 = price_0.__bool__()
        price_1 = price_0.negative()
    except BaseException:
        pass

def test_case_101():
    try:
        decimal_0 = None
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.with_qty(decimal_0)
        money_0 = module_0.Money()
        money_1 = money_0.add(money_0)
    except BaseException:
        pass

def test_case_102():
    try:
        int_0 = 2754
        tuple_0 = (int_0,)
        dict_0 = {}
        none_money_0 = module_0.NoneMoney(**dict_0)
        list_0 = [dict_0, int_0, none_money_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_0 = none_money_0.is_equal(tuple_0)
        price_0 = module_0.Price()
        int_1 = price_0.__int__()
        int_2 = price_0.as_integer()
    except BaseException:
        pass

def test_case_103():
    try:
        str_0 = "x3C|\t'c2bf~\nm+arOD"
        int_0 = 365
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        int_1 = -2891
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_1)
        money_0 = module_0.Money()
        money_1 = money_0.positive()
    except BaseException:
        pass

def test_case_104():
    try:
        none_money_0 = module_0.NoneMoney()
        list_0 = [none_money_0, none_money_0, none_money_0, none_money_0]
        money_0 = none_money_0.floor_divide(list_0)
        price_0 = module_0.Price()
        float_0 = price_0.as_float()
    except BaseException:
        pass

def test_case_105():
    try:
        money_0 = module_0.Money()
        float_0 = money_0.as_float()
    except BaseException:
        pass

def test_case_106():
    try:
        none_money_0 = module_0.NoneMoney()
        list_0 = [none_money_0, none_money_0, none_money_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.negative()
        bool_0 = price_0.__ge__(price_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        currency_type_0 = module_1.CurrencyType.METAL
        money_0 = module_0.Money()
        money_1 = money_0.divide(currency_type_0)
    except BaseException:
        pass

def test_case_107():
    try:
        price_0 = module_0.Price()
        price_1 = price_0.add(price_0)
    except BaseException:
        pass

def test_case_108():
    try:
        money_0 = module_0.Money()
        money_1 = money_0.negative()
    except BaseException:
        pass

def test_case_109():
    try:
        decimal_0 = module_2.Decimal()
        dict_0 = {}
        money_0 = module_0.Money(**dict_0)
        date_0 = None
        bool_0 = money_0.__lt__(money_0)
        money_1 = money_0.with_dov(date_0)
        some_price_0 = module_0.SomePrice()
    except BaseException:
        pass