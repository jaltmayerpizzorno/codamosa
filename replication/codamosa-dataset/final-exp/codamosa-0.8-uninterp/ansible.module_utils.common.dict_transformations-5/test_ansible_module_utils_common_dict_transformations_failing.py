# Automatically generated by Pynguin.
import ansible.module_utils.common.dict_transformations as module_0

def test_case_0():
    try:
        int_0 = 50
        dict_0 = {int_0: int_0, int_0: int_0}
        str_0 = 'M*~p<~(LwWRqm;/r>'
        var_0 = module_0.camel_dict_to_snake_dict(dict_0, str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'J\t- imm1vo'
        tuple_0 = ()
        bytes_0 = b'0OW\xc2\xe9\x84\xdd5e\xab\x03V\xef\x05S\xf3I\x8b\xd2C'
        list_0 = [str_0, str_0, tuple_0, bytes_0]
        var_0 = module_0.snake_dict_to_camel_dict(list_0)
        var_1 = module_0.camel_dict_to_snake_dict(tuple_0, bytes_0)
    except BaseException:
        pass

def test_case_2():
    try:
        complex_0 = None
        var_0 = module_0.snake_dict_to_camel_dict(complex_0)
        bytes_0 = None
        dict_0 = {bytes_0: bytes_0}
        var_1 = module_0.camel_dict_to_snake_dict(dict_0)
    except BaseException:
        pass

def test_case_3():
    try:
        float_0 = 347.395
        str_0 = '/'
        set_0 = {str_0, float_0, str_0}
        dict_0 = {float_0: str_0}
        var_0 = module_0.dict_merge(set_0, dict_0)
    except BaseException:
        pass

def test_case_4():
    try:
        float_0 = -595.3227
        str_0 = None
        var_0 = module_0.recursive_diff(float_0, str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = '_|(,Lwg[k'
        dict_0 = {str_0: str_0, str_0: str_0}
        var_0 = module_0.snake_dict_to_camel_dict(dict_0)
        str_1 = "(%i'N6Sn9Vtk\tk:?"
        float_0 = -1259.6903
        list_0 = [dict_0, float_0, dict_0]
        var_1 = module_0.dict_merge(list_0, list_0)
        var_2 = module_0.dict_merge(str_1, dict_0)
    except BaseException:
        pass

def test_case_6():
    try:
        float_0 = 347.395
        bytes_0 = b')?\xbe'
        dict_0 = {float_0: bytes_0}
        dict_1 = {float_0: float_0, float_0: bytes_0, float_0: dict_0}
        str_0 = '/'
        var_0 = module_0.snake_dict_to_camel_dict(dict_1, str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = '_|(,Lwg[k'
        dict_0 = {str_0: str_0, str_0: str_0}
        var_0 = module_0.snake_dict_to_camel_dict(dict_0)
        float_0 = -1259.6903
        list_0 = [dict_0, float_0, dict_0]
        var_1 = module_0.dict_merge(list_0, list_0)
        int_0 = None
        bytes_0 = b''
        bytes_1 = b'\xb3\xd9\x140\xfea\x82^C\xf9?\xe4\xd76\x15t\x9b/k'
        var_2 = module_0.snake_dict_to_camel_dict(dict_0, bytes_1)
        var_3 = module_0.camel_dict_to_snake_dict(dict_0, int_0)
        var_4 = module_0.dict_merge(bytes_0, float_0)
        int_1 = 212
        var_5 = module_0.recursive_diff(int_1, dict_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = 'Instanc\\eIds'
        str_1 = 'i-0123456789abcdef0'
        str_2 = 'i-0123456789abcdef1'
        str_3 = [str_1, str_2]
        str_4 = {str_0: str_3}
        var_0 = module_0.camel_dict_to_snake_dict(str_4)
        var_1 = module_0.camel_dict_to_snake_dict(str_1)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'TayKges'
        str_1 = 'HTTPEndpoint'
        str_2 = 'HttpsEndpoin,'
        str_3 = 'A_B_ '
        str_4 = 'H+p}Gi@SY3FFVl'
        set_0 = {str_2, str_0}
        var_0 = module_0.snake_dict_to_camel_dict(set_0)
        str_5 = [str_4]
        str_6 = '_|(,w[k'
        bool_0 = False
        str_7 = '#hi@[9A\\`p",8l'
        list_0 = [str_7, str_6, bool_0, str_5]
        bytes_0 = None
        str_8 = '}+ayN'
        tuple_0 = (list_0, bytes_0, str_8)
        var_1 = module_0.snake_dict_to_camel_dict(tuple_0)
        bool_1 = {str_6: bool_0}
        bool_2 = {str_6: bool_0}
        str_9 = 'soI@smevalue'
        var_2 = module_0.snake_dict_to_camel_dict(bool_1)
        var_3 = {str_0: str_5, str_9: list_0, str_1: bool_1, bytes_0: str_4, str_2: bool_2, str_3: str_9, str_4: str_2}
        var_4 = module_0.camel_dict_to_snake_dict(var_3)
    except BaseException:
        pass