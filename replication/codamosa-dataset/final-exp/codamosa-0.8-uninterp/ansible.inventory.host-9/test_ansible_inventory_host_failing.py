# Automatically generated by Pynguin.
import ansible.inventory.host as module_0

def test_case_0():
    try:
        bool_0 = False
        host_0 = module_0.Host(bool_0)
        var_0 = host_0.__getstate__()
        str_0 = 'uNSO(I8v\x0ck{>I'
        var_1 = host_0.__setstate__(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = b'\xee\xc3\x98B\xa7&\x84i\xe1R'
        host_0 = module_0.Host()
        var_0 = host_0.__setstate__(bytes_0)
    except BaseException:
        pass

def test_case_2():
    try:
        host_0 = module_0.Host()
        host_1 = module_0.Host(host_0)
        var_0 = host_1.serialize()
        var_1 = host_1.get_magic_vars()
    except BaseException:
        pass

def test_case_3():
    try:
        int_0 = 125
        str_0 = 'JWy'
        host_0 = module_0.Host(int_0, str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        list_0 = []
        host_0 = module_0.Host(list_0)
        host_1 = module_0.Host()
        var_0 = host_1.populate_ancestors(host_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = '0242ac11-0006-a559-d318-00000000006c'
        host_0 = module_0.Host(str_0)
        var_0 = host_0.get_vars()
        host_1 = module_0.Host()
        var_1 = host_1.__getstate__()
        var_2 = host_0.populate_ancestors()
        var_3 = host_1.__repr__()
        var_4 = host_1.get_groups()
        float_0 = 782.2692670871412
        host_2 = module_0.Host(host_1)
        list_0 = [float_0, float_0]
        var_5 = host_0.populate_ancestors(list_0)
        var_6 = host_0.__repr__()
        var_7 = host_0.get_vars()
    except BaseException:
        pass

def test_case_6():
    try:
        float_0 = 1564.29809
        host_0 = module_0.Host(float_0)
        var_0 = host_0.get_vars()
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = '0242ac11-0006-a559-d318-00000000006c'
        host_0 = module_0.Host(str_0)
        var_0 = host_0.__getstate__()
        var_1 = host_0.serialize()
        int_0 = -811
        var_2 = host_0.get_vars()
        set_0 = {int_0, int_0}
        host_1 = module_0.Host()
        var_3 = host_1.remove_group(set_0)
        var_4 = host_1.__getstate__()
        dict_0 = {int_0: host_1, int_0: host_1, host_1: host_1}
        float_0 = 780.7089
        host_2 = module_0.Host(host_1)
        var_5 = host_2.__ne__(float_0)
        host_3 = module_0.Host()
        var_6 = host_3.set_variable(host_1, dict_0)
        float_1 = 2109.22909
        var_7 = host_1.get_name()
        tuple_0 = ()
        list_0 = []
        bool_0 = True
        tuple_1 = (tuple_0, list_0, bool_0, dict_0)
        list_1 = [float_1, float_1]
        var_8 = host_3.populate_ancestors(list_1)
        tuple_2 = (tuple_1, set_0, list_0, dict_0)
        var_9 = host_3.populate_ancestors(tuple_2)
        var_10 = host_3.populate_ancestors()
    except BaseException:
        pass