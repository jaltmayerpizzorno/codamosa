# Automatically generated by Pynguin.
import ansible.inventory.host as module_0
import ansible.inventory.group as module_1

def test_case_0():
    str_0 = 'Pausing for %d seconds%s'
    host_0 = module_0.Host()
    var_0 = host_0.__eq__(str_0)

def test_case_1():
    int_0 = -994
    host_0 = module_0.Host(int_0)
    var_0 = host_0.__repr__()
    dict_0 = {int_0: var_0, int_0: host_0}
    var_1 = host_0.__ne__(dict_0)
    var_2 = host_0.get_name()

def test_case_2():
    host_0 = module_0.Host()
    int_0 = 719
    var_0 = host_0.__str__()
    var_1 = host_0.set_variable(host_0, int_0)
    var_2 = host_0.populate_ancestors()
    var_3 = host_0.__getstate__()
    var_4 = host_0.__eq__(int_0)

def test_case_3():
    int_0 = 1847
    dict_0 = {int_0: int_0, int_0: int_0}
    host_0 = module_0.Host()
    var_0 = host_0.deserialize(dict_0)
    var_1 = host_0.__repr__()

def test_case_4():
    str_0 = 'loclht'
    host_0 = module_0.Host(str_0)
    str_1 = 'group2'
    group_0 = module_1.Group(str_1)
    str_2 = 'group3'
    group_1 = module_1.Group(str_2)
    str_3 = 'group1'
    group_2 = module_1.Group(str_3)
    var_0 = group_0.add_child_group(group_1)
    var_1 = host_0.add_group(group_2)
    var_2 = host_0.add_group(group_0)
    var_3 = host_0.add_group(group_1)
    var_4 = host_0.remove_group(group_0)
    var_5 = host_0.serialize()
    var_6 = host_0.remove_group(group_2)

def test_case_5():
    str_0 = 'test_host'
    host_0 = module_0.Host(str_0)
    var_0 = {}
    group_0 = module_1.Group(var_0)
    var_1 = host_0.add_group(group_0)
    var_2 = host_0.add_group(group_0)

def test_case_6():
    str_0 = '6\r8^_"y(nWR\\Y'
    host_0 = module_0.Host()
    var_0 = host_0.remove_group(str_0)

def test_case_7():
    str_0 = 'host1'
    host_0 = module_0.Host(str_0)
    str_1 = 'a_dict'
    str_2 = '8Us@N@6=sdFNcF/o0'
    str_3 = {str_1: str_2}
    var_0 = host_0.set_variable(str_1, str_3)
    var_1 = host_0.set_variable(str_1, str_1)

def test_case_8():
    int_0 = 1847
    dict_0 = {int_0: int_0, int_0: int_0}
    bytes_0 = b'\x02\xb5\xee\xfd\x1cQV\xa0\x07_\x91@\x8b\xe8\x10\xa7\xddpC'
    host_0 = module_0.Host(bytes_0)
    var_0 = host_0.get_groups()
    host_1 = module_0.Host()
    var_1 = host_1.deserialize(dict_0)
    var_2 = host_1.__repr__()

def test_case_9():
    str_0 = 'host1'
    host_0 = module_0.Host(str_0)
    str_1 = 'a_dict'
    var_0 = host_0.get_magic_vars()
    var_1 = host_0.set_variable(str_1, str_1)
    str_2 = 'vle2'
    str_3 = {str_2: str_2}
    var_2 = host_0.set_variable(str_1, str_3)

def test_case_10():
    host_0 = module_0.Host()
    var_0 = host_0.get_name()
    int_0 = 20
    bool_0 = True
    host_1 = module_0.Host(int_0, bool_0)
    host_2 = module_0.Host(host_1)
    var_1 = host_2.__ne__(host_0)
    tuple_0 = ()
    host_3 = module_0.Host(tuple_0)
    var_2 = host_3.__str__()

def test_case_11():
    str_0 = 'loclhwos'
    host_0 = module_0.Host(str_0)
    str_1 = 'a4"'
    group_0 = module_1.Group(str_1)
    var_0 = host_0.add_group(group_0)
    var_1 = host_0.get_vars()
    group_1 = module_1.Group(str_1)
    var_2 = group_1.add_child_group(group_0)

def test_case_12():
    str_0 = 'loclhwos'
    host_0 = module_0.Host(str_0)
    str_1 = 'a4"'
    group_0 = module_1.Group(str_1)
    var_0 = host_0.add_group(group_0)
    group_1 = module_1.Group(str_1)
    var_1 = group_1.add_child_group(group_0)
    var_2 = host_0.remove_group(group_0)

def test_case_13():
    str_0 = 'name'
    str_1 = 'vars'
    str_2 = 'address'
    str_3 = 'uuid'
    str_4 = 'groups'
    str_5 = 'implicit'
    str_6 = 'a'
    str_7 = "Z\x0bC@1P\r'O"
    str_8 = {str_6: str_7}
    str_9 = 'localhost'
    str_10 = '0000000123456789abcdefabcdefabcdefabcdef'
    str_11 = 'test'
    str_12 = 'group'
    str_13 = {str_11: str_12}
    var_0 = [str_13]
    bool_0 = False
    var_1 = {str_0: str_7, str_1: str_8, str_2: str_9, str_3: str_10, str_4: var_0, str_5: bool_0}
    host_0 = module_0.Host()
    var_2 = host_0.deserialize(var_1)

def test_case_14():
    str_0 = 'HOST_NAME'
    host_0 = module_0.Host(str_0)
    str_1 = 'PARENT_GROUP'
    group_0 = module_1.Group(str_1)
    str_2 = 'CHILD_GROUP'
    group_1 = module_1.Group(str_2)
    var_0 = group_0.add_child_group(group_1)
    var_1 = host_0.add_group(group_0)
    var_2 = host_0.add_group(group_1)

def test_case_15():
    str_0 = 'host1'
    host_0 = module_0.Host(str_0)
    str_1 = 'a_dict'
    str_2 = '8Us@N@6=sdFNcF/o0'
    str_3 = {str_1: str_2}
    var_0 = host_0.set_variable(str_1, str_3)
    str_4 = 'key2'
    str_5 = {str_4: str_3}
    var_1 = host_0.set_variable(str_1, str_5)

def test_case_16():
    str_0 = 'localhost'
    host_0 = module_0.Host(str_0)
    group_0 = module_1.Group(str_0)
    str_1 = 'group3'
    group_1 = module_1.Group(str_1)
    str_2 = 'rp1'
    group_2 = module_1.Group(str_2)
    var_0 = group_2.add_child_group(group_0)
    var_1 = host_0.add_group(group_0)
    var_2 = host_0.add_group(group_1)
    var_3 = group_1.get_vars()
    var_4 = host_0.remove_group(group_0)
    var_5 = host_0.remove_group(group_2)

def test_case_17():
    str_0 = 'localhost'
    host_0 = module_0.Host(str_0)
    str_1 = 'group2'
    group_0 = module_1.Group(str_1)
    str_2 = 'group3'
    group_1 = module_1.Group(str_2)
    str_3 = 'group1'
    group_2 = module_1.Group(str_3)
    var_0 = group_0.add_child_group(group_1)
    var_1 = group_2.add_child_group(group_0)
    var_2 = host_0.add_group(group_2)
    var_3 = host_0.add_group(group_0)
    var_4 = host_0.add_group(group_1)
    var_5 = host_0.remove_group(group_0)
    var_6 = host_0.remove_group(group_2)

def test_case_18():
    str_0 = 'all'
    group_0 = module_1.Group(str_0)
    str_1 = 'base'
    group_1 = module_1.Group(str_1)
    str_2 = 'webserver'
    group_2 = module_1.Group(str_2)
    str_3 = 'database'
    group_3 = module_1.Group(str_3)
    var_0 = group_0.add_child_group(group_1)
    var_1 = group_1.add_child_group(group_2)
    var_2 = group_1.add_child_group(group_3)
    str_4 = 'db.example.com'
    host_0 = module_0.Host(str_4)
    var_3 = host_0.add_group(group_0)
    var_4 = host_0.add_group(group_1)
    var_5 = host_0.add_group(group_3)
    var_6 = host_0.get_magic_vars()
    var_7 = type(var_6)
    var_8 = len(var_6)