# Automatically generated by Pynguin.
import pysnooper.utils as module_0

def test_case_0():
    pass

def test_case_1():
    list_0 = []
    var_0 = module_0.shitcode(list_0)

def test_case_2():
    bytes_0 = b'\xd0'
    var_0 = module_0.get_shortish_repr(bytes_0)

def test_case_3():
    str_0 = 'Xo'
    var_0 = module_0.normalize_repr(str_0)

def test_case_4():
    bytes_0 = b'\xcfL'
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    var_0 = module_0.ensure_tuple(dict_0)

def test_case_5():
    str_0 = '\x0bwkh}0dnL3q\x0c/'
    var_0 = module_0.ensure_tuple(str_0)

def test_case_6():
    var_0 = lambda x: x
    var_1 = lambda x: x
    str_0 = '<[RQZ\t\teo'
    var_2 = module_0.shitcode(str_0)
    str_1 = '7)//\x0c9BY'
    var_3 = (var_1, str_1)
    var_4 = [var_3]
    var_5 = module_0.get_shortish_repr(var_0, var_4)

def test_case_7():
    str_0 = 'a'
    var_0 = module_0.shitcode(str_0)
    str_1 = 'a\x00\x00'
    var_1 = module_0.shitcode(str_1)
    str_2 = 'a\x00\x00b'
    str_3 = 'a\x00\x00b\x00ÿ'
    var_2 = module_0.shitcode(str_3)
    var_3 = module_0.shitcode(str_3)
    var_4 = module_0.shitcode(str_3)
    var_5 = module_0.shitcode(str_2)
    var_6 = module_0.shitcode(str_3)

def test_case_8():
    str_0 = 'a'
    var_0 = module_0.shitcode(str_0)
    str_1 = 'a\x00\x00'
    var_1 = module_0.shitcode(str_1)
    var_2 = module_0.shitcode(str_0)
    str_2 = 'a\x00\x00b\x00ÿ'
    var_3 = module_0.shitcode(str_2)
    var_4 = module_0.shitcode(str_2)
    var_5 = module_0.shitcode(str_2)
    str_3 = 'a☢'
    var_6 = module_0.shitcode(str_3)

def test_case_9():
    var_0 = lambda x: x
    str_0 = 'works'
    var_1 = (var_0, str_0)
    var_2 = [var_1]
    var_3 = module_0.get_shortish_repr(var_2, var_2)

def test_case_10():
    int_0 = 5
    var_0 = []
    var_1 = module_0.get_repr_function(int_0, var_0)
    str_0 = 'foo'
    var_2 = lambda x: str_0
    var_3 = lambda x: str_0
    var_4 = lambda x, y=5: x == y
    var_5 = lambda x: str_0
    var_6 = (var_4, var_5)
    var_7 = lambda x, y=6: x == y
    str_1 = 'bar'
    var_8 = lambda x: str_1
    var_9 = (var_7, var_8)
    var_10 = [var_6, var_9]
    var_11 = module_0.get_repr_function(int_0, var_10)
    int_1 = 6
    var_12 = lambda x, y=5: x == y
    var_13 = lambda x: str_0
    var_14 = (var_12, var_13)
    var_15 = lambda x, y=6: x == y
    var_16 = lambda x: str_1
    var_17 = (var_15, var_16)
    var_18 = [var_14, var_17]
    var_19 = module_0.get_repr_function(int_1, var_18)

def test_case_11():
    var_0 = lambda x: x
    var_1 = lambda x: x
    str_0 = 'worPks'
    str_1 = 'Cq>7S\x0bQ;rW!u=5H'
    tuple_0 = ()
    int_0 = 294
    float_0 = -434.74
    tuple_1 = (str_1, tuple_0, int_0, float_0)
    int_1 = -2011
    var_2 = module_0.get_shortish_repr(tuple_1, tuple_0, int_1, str_0)