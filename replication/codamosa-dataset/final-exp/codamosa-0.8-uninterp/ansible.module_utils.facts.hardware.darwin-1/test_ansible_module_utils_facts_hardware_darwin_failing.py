# Automatically generated by Pynguin.
import ansible.module_utils.facts.hardware.darwin as module_0

def test_case_0():
    try:
        int_0 = 535000
        bytes_0 = b'\x12<\xcd\xb4z'
        list_0 = [bytes_0]
        darwin_hardware_0 = module_0.DarwinHardware(bytes_0, list_0)
        var_0 = darwin_hardware_0.populate(int_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'K%Q*iqHX@\r$JNSMKB'
        str_1 = 'on\rZb'
        list_0 = [str_1, str_0, str_1]
        darwin_hardware_0 = module_0.DarwinHardware(list_0)
        var_0 = darwin_hardware_0.get_system_profile()
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '\n- name: Find out what the remote machine\'s mounts are\n  ansible.builtin.slurp:\n    src: /proc/mounts\n  register: mounts\n\n- name: Print returned information\n  ansible.builtin.debug:\n    msg: "{{ mounts[\'content\'] | b64decode }}"\n\n# From the commandline, find the pid of the remote machine\'s sshd\n# $ ansible host -m slurp -a \'src=/var/run/sshd.pid\'\n# host | SUCCESS => {\n#     "changed": false,\n#     "content": "MjE3OQo=",\n#     "encoding": "base64",\n#     "source": "/var/run/sshd.pid"\n# }\n# $ echo MjE3OQo= | base64 -d\n# 2179\n'
        darwin_hardware_collector_0 = module_0.DarwinHardwareCollector(str_0)
        darwin_hardware_0 = module_0.DarwinHardware(darwin_hardware_collector_0)
        var_0 = darwin_hardware_0.get_mac_facts()
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'\xa6l:R\xef\r\xda\xb8\xaf\x1f\x81.?'
        darwin_hardware_0 = module_0.DarwinHardware(bytes_0)
        var_0 = darwin_hardware_0.get_cpu_facts()
    except BaseException:
        pass

def test_case_4():
    try:
        int_0 = 64
        darwin_hardware_0 = module_0.DarwinHardware(int_0)
        bool_0 = True
        darwin_hardware_1 = module_0.DarwinHardware(darwin_hardware_0, bool_0)
        var_0 = darwin_hardware_1.get_memory_facts()
    except BaseException:
        pass

def test_case_5():
    try:
        bool_0 = False
        darwin_hardware_0 = module_0.DarwinHardware(bool_0)
        var_0 = darwin_hardware_0.get_uptime_facts()
    except BaseException:
        pass