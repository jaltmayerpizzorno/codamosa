# Automatically generated by Pynguin.
import dataclasses_json.cfg as module_0

def test_case_0():
    try:
        str_0 = 'E\n6'
        dict_0 = module_0.config(undefined=str_0, field_name=str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '/2S9+9O'
        dict_0 = module_0.config(mm_field=str_0, undefined=str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '51y(O\tmOGP'
        dict_0 = {str_0: str_0, str_0: str_0}
        bytes_0 = b'a\x1f\xcfdk\x952\xb5JL\xdf6\xaa\x8a\x9e2\x9f'
        dict_1 = None
        dict_2 = module_0.config(encoder=dict_0, letter_case=bytes_0, undefined=str_0, field_name=str_0, exclude=dict_1)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'E\n6'
        global_config_0 = module_0._GlobalConfig()
        str_1 = ';;`RV*I'
        dict_0 = {}
        bool_0 = False
        dict_1 = {str_1: global_config_0}
        dict_2 = module_0.config(encoder=dict_0, decoder=bool_0, field_name=str_1, exclude=dict_1)
        optional_0 = None
        set_0 = None
        dict_3 = module_0.config(encoder=optional_0, mm_field=set_0, undefined=str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'E\n6'
        dict_0 = {str_0: str_0}
        dict_1 = module_0.config(dict_0, encoder=dict_0, undefined=str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'E\n6'
        dict_0 = module_0.config(undefined=str_0)
    except BaseException:
        pass