# Automatically generated by Pynguin.
import ansible.plugins.callback.junit as module_0

def test_case_0():
    try:
        callback_module_0 = None
        callback_module_1 = module_0.CallbackModule()
        var_0 = callback_module_1.v2_runner_on_ok(callback_module_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = b'\x8c\xbc\x81\x05\x91\xcfg\xf1\xdeV]\xac\x07'
        dict_0 = {bytes_0: bytes_0}
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_task_start(bytes_0, dict_0)
    except BaseException:
        pass

def test_case_2():
    try:
        task_data_0 = None
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_on_ok(task_data_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = "'23\x0b-KwFFl"
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_start(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = '6B+:E:Qw"vH$*@Vb'
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_play_start(str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        dict_0 = None
        dict_1 = {dict_0: dict_0, dict_0: dict_0}
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_on_no_hosts(dict_1)
    except BaseException:
        pass

def test_case_6():
    try:
        callback_module_0 = module_0.CallbackModule()
        callback_module_1 = module_0.CallbackModule()
        var_0 = callback_module_1.v2_playbook_on_cleanup_task_start(callback_module_0)
    except BaseException:
        pass

def test_case_7():
    try:
        callback_module_0 = module_0.CallbackModule()
        callback_module_1 = module_0.CallbackModule()
        bool_0 = True
        var_0 = callback_module_1.v2_playbook_on_handler_task_start(bool_0)
    except BaseException:
        pass

def test_case_8():
    try:
        float_0 = 1896.77
        list_0 = [float_0, float_0]
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_on_failed(float_0, list_0)
    except BaseException:
        pass

def test_case_9():
    try:
        int_0 = 8
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_on_failed(int_0)
    except BaseException:
        pass

def test_case_10():
    try:
        callback_module_0 = module_0.CallbackModule()
        str_0 = '+p?/yvq'
        var_0 = callback_module_0.v2_runner_on_skipped(str_0)
    except BaseException:
        pass

def test_case_11():
    try:
        bytes_0 = b'\x8c\x8d\xf6\xed\t\x1d'
        dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
        bool_0 = False
        list_0 = [bytes_0, bool_0, bytes_0, bytes_0]
        task_data_0 = module_0.TaskData(bytes_0, dict_0, bool_0, bytes_0, list_0)
        bytes_1 = b'e'
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_include(bytes_1)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = 'uuid'
        str_1 = 'name'
        str_2 = 'path'
        str_3 = 'play'
        str_4 = 'action'
        task_data_0 = module_0.TaskData(str_0, str_1, str_2, str_3, str_4)
        str_5 = 'ok'
        host_data_0 = module_0.HostData(str_0, str_1, str_5, str_3)
        str_6 = 'included'
        host_data_1 = module_0.HostData(str_0, str_1, str_6, str_4)
        str_7 = 'name1'
        str_8 = 'result1'
        host_data_2 = module_0.HostData(str_0, str_7, str_5, str_8)
        var_0 = task_data_0.add_host(host_data_0)
        var_1 = task_data_0.add_host(host_data_1)
        var_2 = task_data_0.add_host(host_data_2)
    except BaseException:
        pass