# Automatically generated by Pynguin.
import ansible.parsing.yaml.constructor as module_0
import ansible.parsing.yaml.objects as module_1
import yaml.nodes as module_2

def test_case_0():
    try:
        int_0 = -2196
        ansible_constructor_0 = module_0.AnsibleConstructor(int_0)
        var_0 = ansible_constructor_0.construct_mapping(int_0)
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = -2196
        ansible_constructor_0 = module_0.AnsibleConstructor(int_0)
        var_0 = ansible_constructor_0.construct_yaml_str(int_0)
    except BaseException:
        pass

def test_case_2():
    try:
        dict_0 = None
        str_0 = 'failed to copy: %s to %s'
        ansible_constructor_0 = module_0.AnsibleConstructor(dict_0, str_0)
        float_0 = -1446.42
        ansible_constructor_1 = module_0.AnsibleConstructor(float_0)
        var_0 = ansible_constructor_1.construct_vault_encrypted_unicode(dict_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'\x864'
        ansible_constructor_0 = module_0.AnsibleConstructor(bytes_0)
        var_0 = ansible_constructor_0.construct_yaml_unsafe(ansible_constructor_0)
    except BaseException:
        pass

def test_case_4():
    try:
        ansible_constructor_0 = module_0.AnsibleConstructor()
        float_0 = 1138.3361
        var_0 = ansible_constructor_0.construct_yaml_map(float_0)
        list_0 = [var_0]
        ansible_mapping_0 = module_1.AnsibleMapping(*list_0)
    except BaseException:
        pass

def test_case_5():
    try:
        bytes_0 = b'|\xde\x9f?\xd7\x82\xed(\x07\xd3\x92\x8c\xbdp;*\x0e\xa5'
        set_0 = set()
        str_0 = 'e'
        mapping_node_0 = module_2.MappingNode(bytes_0, set_0, str_0)
        ansible_constructor_0 = module_0.AnsibleConstructor()
        var_0 = ansible_constructor_0.construct_yaml_unsafe(mapping_node_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'e'
        str_1 = 'b'
        list_0 = [str_1, str_1]
        dict_0 = {str_1: list_0}
        ansible_constructor_0 = module_0.AnsibleConstructor()
        var_0 = ansible_constructor_0.construct_yaml_map(dict_0)
        list_1 = [list_0, str_0, list_0]
        ansible_constructor_1 = module_0.AnsibleConstructor()
        var_1 = ansible_constructor_1.construct_yaml_seq(list_1)
        list_2 = [var_1]
        ansible_sequence_0 = module_1.AnsibleSequence(*list_2, **dict_0)
    except BaseException:
        pass