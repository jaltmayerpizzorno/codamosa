# Automatically generated by Pynguin.
import builtins as module_0
import pymonet.box as module_1

def test_case_0():
    try:
        dict_0 = {}
        object_0 = module_0.object(**dict_0)
        list_0 = [object_0, dict_0, object_0, dict_0]
        list_1 = [dict_0, dict_0, object_0, dict_0]
        box_0 = module_1.Box(list_1)
        box_1 = module_1.Box(box_0)
        var_0 = box_1.map(list_0)
    except BaseException:
        pass

def test_case_1():
    try:
        list_0 = []
        box_0 = module_1.Box(list_0)
        str_0 = 'x[m*qxpj:r'
        var_0 = box_0.bind(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        float_0 = 649.536861
        box_0 = module_1.Box(float_0)
        var_0 = box_0.to_try()
        str_0 = '~.)fi^CK^cB0/-\rM'
        str_1 = '?VzoR'
        set_0 = {str_1, str_1}
        box_1 = module_1.Box(set_0)
        var_1 = box_1.to_validation()
        box_2 = module_1.Box(str_1)
        var_2 = box_2.ap(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'ImmutableList[T]'
        str_1 = '3|@u8Ugl6@5\thW"\rC'
        dict_0 = {str_0: str_0, str_0: str_0, str_1: str_1, str_0: str_0}
        callable_0 = None
        object_0 = module_0.object()
        box_0 = module_1.Box(dict_0)
        dict_1 = {}
        tuple_0 = (object_0, dict_1)
        box_1 = module_1.Box(tuple_0)
        var_0 = box_1.to_maybe()
        box_2 = module_1.Box(object_0)
        var_1 = box_2.map(callable_0)
    except BaseException:
        pass