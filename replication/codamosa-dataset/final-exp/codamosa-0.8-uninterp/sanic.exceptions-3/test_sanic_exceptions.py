# Automatically generated by Pynguin.
import sanic.exceptions as module_0

def test_case_0():
    pass

def test_case_1():
    header_not_found_0 = None
    server_error_0 = module_0.ServerError(header_not_found_0)

def test_case_2():
    unauthorized_0 = None
    str_0 = 'sanic.error'
    invalid_usage_0 = module_0.InvalidUsage(str_0)
    u_r_l_build_error_0 = module_0.URLBuildError(unauthorized_0, invalid_usage_0)

def test_case_3():
    payload_too_large_0 = None
    py_file_error_0 = None
    sanic_exception_0 = module_0.SanicException(py_file_error_0)
    u_r_l_build_error_0 = module_0.URLBuildError(payload_too_large_0, sanic_exception_0)
    set_0 = {py_file_error_0, payload_too_large_0, py_file_error_0, sanic_exception_0}
    float_0 = 1065.0
    unauthorized_0 = module_0.Unauthorized(float_0)
    file_not_found_0 = module_0.FileNotFound(u_r_l_build_error_0, set_0, u_r_l_build_error_0)

def test_case_4():
    bytes_0 = b'\xba\xdf\xc5\xae\xbd\xed\xb8\xf89\x90\x98C\x91\r'
    u_r_l_build_error_0 = module_0.URLBuildError(bytes_0)
    py_file_error_0 = module_0.PyFileError(u_r_l_build_error_0)
    u_r_l_build_error_1 = module_0.URLBuildError(py_file_error_0)
    list_0 = None
    bool_0 = None
    set_0 = set()
    not_found_0 = module_0.NotFound(set_0)
    invalid_signal_0 = module_0.InvalidSignal(not_found_0)
    sanic_exception_0 = module_0.SanicException(not_found_0, invalid_signal_0)
    unauthorized_0 = module_0.Unauthorized(bool_0, sanic_exception_0)
    file_not_found_0 = module_0.FileNotFound(u_r_l_build_error_1, list_0, unauthorized_0)