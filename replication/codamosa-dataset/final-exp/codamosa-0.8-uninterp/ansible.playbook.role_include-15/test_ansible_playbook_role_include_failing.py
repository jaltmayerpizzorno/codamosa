# Automatically generated by Pynguin.
import ansible.playbook.role_include as module_0

def test_case_0():
    try:
        bytes_0 = b'\xd5>\xa8\x94\x847\xc3\x92\xf2'
        bool_0 = False
        tuple_0 = ()
        set_0 = {bool_0, bool_0, bool_0, tuple_0}
        include_role_0 = module_0.IncludeRole(set_0)
        include_role_1 = module_0.IncludeRole(include_role_0)
        var_0 = include_role_1.get_block_list(bytes_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = b'\x89\x0e\x15\xa5jA2\x96'
        include_role_0 = module_0.IncludeRole(bytes_0)
        var_0 = include_role_0.get_block_list()
    except BaseException:
        pass

def test_case_2():
    try:
        include_role_0 = module_0.IncludeRole()
        var_0 = include_role_0.get_name()
        var_1 = include_role_0.get_name()
        var_2 = include_role_0.get_name()
        bool_0 = False
        bytes_0 = b'\xddK\x81$\xce\x06\x10]\xda\x94\xc9\x10\xdd\xb1\x7f\nZP'
        var_3 = include_role_0.load(bool_0, bytes_0)
    except BaseException:
        pass

def test_case_3():
    try:
        include_role_0 = module_0.IncludeRole()
        var_0 = include_role_0.get_include_params()
        dict_0 = None
        str_0 = '{29>pUG\x0c:.0\\JiOn9'
        dict_1 = {str_0: str_0, str_0: str_0, str_0: str_0}
        include_role_1 = module_0.IncludeRole(str_0, dict_1)
        var_1 = include_role_1.copy(dict_0)
    except BaseException:
        pass

def test_case_4():
    try:
        include_role_0 = module_0.IncludeRole()
        str_0 = 'testname'
        var_0 = dict(action=str_0, name=str_0)
        var_1 = include_role_0.load(var_0)
    except BaseException:
        pass