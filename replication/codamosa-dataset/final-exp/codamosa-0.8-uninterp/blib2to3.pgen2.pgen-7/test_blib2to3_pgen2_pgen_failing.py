# Automatically generated by Pynguin.
import blib2to3.pgen2.pgen as module_0

def test_case_0():
    try:
        str_0 = 'V'
        n_f_a_state_0 = module_0.NFAState()
        n_f_a_state_1 = module_0.NFAState()
        tuple_0 = (n_f_a_state_0, n_f_a_state_1)
        parser_generator_0 = module_0.ParserGenerator(str_0, tuple_0)
    except BaseException:
        pass

def test_case_1():
    try:
        pgen_grammar_0 = module_0.generate_grammar()
    except BaseException:
        pass

def test_case_2():
    try:
        n_f_a_state_0 = module_0.NFAState()
        none_type_0 = None
        n_f_a_state_0.addarc(n_f_a_state_0)
        n_f_a_state_0.addarc(n_f_a_state_0, none_type_0)
        pgen_grammar_0 = module_0.PgenGrammar()
        n_f_a_state_0.addarc(n_f_a_state_0, pgen_grammar_0)
    except BaseException:
        pass

def test_case_3():
    try:
        n_f_a_state_0 = module_0.NFAState()
        dict_0 = {n_f_a_state_0: n_f_a_state_0, n_f_a_state_0: n_f_a_state_0, n_f_a_state_0: n_f_a_state_0, n_f_a_state_0: n_f_a_state_0}
        d_f_a_state_0 = None
        d_f_a_state_1 = module_0.DFAState(dict_0, n_f_a_state_0)
        d_f_a_state_1.unifystate(d_f_a_state_0, d_f_a_state_0)
        str_0 = None
        d_f_a_state_1.addarc(d_f_a_state_1, str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        n_f_a_state_0 = module_0.NFAState()
        dict_0 = {n_f_a_state_0: n_f_a_state_0, n_f_a_state_0: n_f_a_state_0, n_f_a_state_0: n_f_a_state_0, n_f_a_state_0: n_f_a_state_0}
        d_f_a_state_0 = module_0.DFAState(dict_0, n_f_a_state_0)
        d_f_a_state_1 = module_0.DFAState(dict_0, n_f_a_state_0)
        bool_0 = d_f_a_state_1.__eq__(n_f_a_state_0)
    except BaseException:
        pass

def test_case_5():
    try:
        n_f_a_state_0 = module_0.NFAState()
        str_0 = 'ic:An)su*"(K'
        n_f_a_state_0.addarc(n_f_a_state_0, str_0)
        dict_0 = {n_f_a_state_0: n_f_a_state_0, n_f_a_state_0: n_f_a_state_0, n_f_a_state_0: n_f_a_state_0, n_f_a_state_0: n_f_a_state_0}
        n_f_a_state_1 = module_0.NFAState()
        d_f_a_state_0 = module_0.DFAState(dict_0, n_f_a_state_0)
        d_f_a_state_1 = module_0.DFAState(dict_0, n_f_a_state_1)
        d_f_a_state_1.unifystate(d_f_a_state_0, d_f_a_state_0)
        str_1 = '8>4R=YloL>7eu/G;^\x0bZ9'
        d_f_a_state_1.addarc(d_f_a_state_1, str_1)
        dict_1 = None
        d_f_a_state_2 = module_0.DFAState(dict_1, n_f_a_state_1)
    except BaseException:
        pass

def test_case_6():
    try:
        n_f_a_state_0 = module_0.NFAState()
        dict_0 = {n_f_a_state_0: n_f_a_state_0, n_f_a_state_0: n_f_a_state_0, n_f_a_state_0: n_f_a_state_0, n_f_a_state_0: n_f_a_state_0}
        d_f_a_state_0 = module_0.DFAState(dict_0, n_f_a_state_0)
        n_f_a_state_0.addarc(n_f_a_state_0)
        n_f_a_state_1 = module_0.NFAState()
        d_f_a_state_0.unifystate(d_f_a_state_0, d_f_a_state_0)
        str_0 = '0[lL]?'
        n_f_a_state_0.addarc(n_f_a_state_1, str_0)
        str_1 = 'untokenize'
        d_f_a_state_0.addarc(d_f_a_state_0, str_1)
        bool_0 = d_f_a_state_0.__eq__(d_f_a_state_0)
        n_f_a_state_2 = None
        n_f_a_state_1.addarc(n_f_a_state_2)
    except BaseException:
        pass

def test_case_7():
    try:
        n_f_a_state_0 = module_0.NFAState()
        dict_0 = {n_f_a_state_0: n_f_a_state_0, n_f_a_state_0: n_f_a_state_0, n_f_a_state_0: n_f_a_state_0, n_f_a_state_0: n_f_a_state_0}
        d_f_a_state_0 = module_0.DFAState(dict_0, n_f_a_state_0)
        d_f_a_state_1 = module_0.DFAState(dict_0, n_f_a_state_0)
        d_f_a_state_2 = module_0.DFAState(dict_0, n_f_a_state_0)
        d_f_a_state_1.unifystate(d_f_a_state_0, d_f_a_state_2)
        n_f_a_state_1 = None
        d_f_a_state_3 = module_0.DFAState(dict_0, n_f_a_state_1)
    except BaseException:
        pass

def test_case_8():
    try:
        n_f_a_state_0 = None
        dict_0 = {n_f_a_state_0: n_f_a_state_0}
        d_f_a_state_0 = module_0.DFAState(dict_0, n_f_a_state_0)
    except BaseException:
        pass

def test_case_9():
    try:
        n_f_a_state_0 = module_0.NFAState()
        n_f_a_state_0.addarc(n_f_a_state_0)
        n_f_a_state_1 = module_0.NFAState()
        dict_0 = {n_f_a_state_0: n_f_a_state_0, n_f_a_state_1: n_f_a_state_0}
        d_f_a_state_0 = None
        str_0 = '9sjiVLx@R`f){xHuul'
        d_f_a_state_1 = module_0.DFAState(dict_0, n_f_a_state_1)
        d_f_a_state_1.addarc(d_f_a_state_0, str_0)
    except BaseException:
        pass

def test_case_10():
    try:
        n_f_a_state_0 = module_0.NFAState()
        str_0 = 'ic:An)su*"(K'
        n_f_a_state_0.addarc(n_f_a_state_0, str_0)
        dict_0 = {n_f_a_state_0: n_f_a_state_0, n_f_a_state_0: n_f_a_state_0, n_f_a_state_0: n_f_a_state_0, n_f_a_state_0: n_f_a_state_0}
        n_f_a_state_1 = module_0.NFAState()
        d_f_a_state_0 = module_0.DFAState(dict_0, n_f_a_state_0)
        d_f_a_state_1 = module_0.DFAState(dict_0, n_f_a_state_0)
        d_f_a_state_0.unifystate(d_f_a_state_1, d_f_a_state_0)
        str_1 = '8>4R=YloL>7eu/G;^\x0bZ9'
        d_f_a_state_1.addarc(d_f_a_state_1, str_1)
        n_f_a_state_2 = module_0.NFAState()
        d_f_a_state_1.addarc(d_f_a_state_0, str_1)
    except BaseException:
        pass

def test_case_11():
    try:
        n_f_a_state_0 = module_0.NFAState()
        dict_0 = {n_f_a_state_0: n_f_a_state_0, n_f_a_state_0: n_f_a_state_0, n_f_a_state_0: n_f_a_state_0, n_f_a_state_0: n_f_a_state_0}
        d_f_a_state_0 = module_0.DFAState(dict_0, n_f_a_state_0)
        n_f_a_state_1 = module_0.NFAState()
        str_0 = 'V'
        d_f_a_state_0.addarc(d_f_a_state_0, str_0)
        str_1 = '&%!G0BRMpL_\\[Qw|G&'
        n_f_a_state_0.addarc(n_f_a_state_0, str_1)
        d_f_a_state_0.unifystate(d_f_a_state_0, d_f_a_state_0)
        n_f_a_state_0.addarc(n_f_a_state_0)
        str_2 = "`Qs2%KX'"
        d_f_a_state_0.addarc(d_f_a_state_0, str_2)
        bool_0 = d_f_a_state_0.__eq__(n_f_a_state_0)
    except BaseException:
        pass

def test_case_12():
    try:
        n_f_a_state_0 = module_0.NFAState()
        dict_0 = {n_f_a_state_0: n_f_a_state_0, n_f_a_state_0: n_f_a_state_0, n_f_a_state_0: n_f_a_state_0, n_f_a_state_0: n_f_a_state_0}
        d_f_a_state_0 = module_0.DFAState(dict_0, n_f_a_state_0)
        str_0 = 'e}X=e'
        str_1 = '\\x@;JUL^Cdv`J{a '
        n_f_a_state_1 = module_0.NFAState()
        n_f_a_state_1.addarc(n_f_a_state_0)
        d_f_a_state_1 = module_0.DFAState(dict_0, n_f_a_state_1)
        d_f_a_state_0.addarc(d_f_a_state_1, str_0)
        d_f_a_state_0.unifystate(d_f_a_state_0, d_f_a_state_0)
        n_f_a_state_2 = module_0.NFAState()
        n_f_a_state_2.addarc(n_f_a_state_1, str_1)
        d_f_a_state_0.addarc(d_f_a_state_0, str_0)
    except BaseException:
        pass