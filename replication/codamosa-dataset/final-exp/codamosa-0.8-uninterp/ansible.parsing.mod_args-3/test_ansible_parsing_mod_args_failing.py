# Automatically generated by Pynguin.
import ansible.parsing.mod_args as module_0

def test_case_0():
    try:
        bytes_0 = b'\x1b\x89K\xa3z\xb1\xf3/:a\xaf#\xe9\xc2-'
        set_0 = {bytes_0, bytes_0}
        module_args_parser_0 = module_0.ModuleArgsParser(set_0)
    except BaseException:
        pass

def test_case_1():
    try:
        module_args_parser_0 = module_0.ModuleArgsParser()
        var_0 = module_args_parser_0.parse()
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '0hell echo hi'
        str_1 = {str_0: str_0}
        module_args_parser_0 = module_0.ModuleArgsParser(str_1)
        var_0 = module_args_parser_0.parse()
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '0hell echo hi'
        str_1 = {str_0: str_0}
        module_args_parser_0 = module_0.ModuleArgsParser(str_1)
        var_0 = module_args_parser_0.parse(str_1)
    except BaseException:
        pass

def test_case_4():
    try:
        var_0 = None
        str_0 = 'ping'
        str_1 = 'action'
        module_args_parser_0 = module_0.ModuleArgsParser()
        str_2 = {str_1: str_1, str_1: str_1}
        str_3 = {str_1: str_2}
        str_4 = {str_0: str_3}
        module_args_parser_1 = module_0.ModuleArgsParser(str_4, var_0)
        var_1 = module_args_parser_1.parse()
        var_2 = module_args_parser_0.parse()
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'ansible.legacy.command'
        str_1 = {str_0: str_0}
        module_args_parser_0 = module_0.ModuleArgsParser(str_1, str_0)
        var_0 = module_args_parser_0.parse()
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'action'
        str_1 = 'local_action'
        str_2 = 'delegate_to'
        str_3 = 'args'
        str_4 = 'setup'
        str_5 = 'localhost'
        var_0 = None
        var_1 = {str_0: str_4, str_1: str_0, str_2: str_5, str_3: var_0}
        module_args_parser_0 = module_0.ModuleArgsParser(var_1)
        var_2 = module_args_parser_0.parse()
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'action'
        str_1 = 'module'
        str_2 = 'ping-2'
        str_3 = '1'
        str_4 = {str_1: str_2, str_2: str_3}
        str_5 = {str_0: str_4}
        module_args_parser_0 = module_0.ModuleArgsParser(str_5, str_0)
        var_0 = module_args_parser_0.parse()
        str_6 = 'print-3 anstest "test"'
        module_args_parser_1 = module_0.ModuleArgsParser(str_6, str_1)
    except BaseException:
        pass

def test_case_8():
    try:
        var_0 = None
        str_0 = 'ping'
        str_1 = 'action'
        str_2 = ''
        str_3 = {str_0: str_2}
        module_args_parser_0 = module_0.ModuleArgsParser(str_3, var_0)
        var_1 = module_args_parser_0.parse()
        str_4 = '[N)a'
        module_args_parser_1 = module_0.ModuleArgsParser()
        str_5 = {str_1: str_3, str_4: str_3}
        module_args_parser_2 = module_0.ModuleArgsParser()
        module_args_parser_3 = module_0.ModuleArgsParser(str_5, var_0)
        var_2 = module_args_parser_3.parse()
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'ping'
        str_1 = ''
        str_2 = {str_0: str_1}
        str_3 = '[N)a'
        module_args_parser_0 = module_0.ModuleArgsParser()
        str_4 = 'pri^t3 anstest "test"'
        str_5 = {str_1: str_4, str_3: str_2}
        module_args_parser_1 = module_0.ModuleArgsParser(str_5, str_5)
        var_0 = module_args_parser_1.parse(str_2)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = 'action'
        str_1 = 'local_action'
        str_2 = 'delegate_to'
        str_3 = 'args'
        str_4 = 'setup'
        str_5 = 'localhost'
        var_0 = {str_0: str_4, str_1: str_0, str_2: str_5, str_3: str_4}
        module_args_parser_0 = module_0.ModuleArgsParser(var_0)
        var_1 = module_args_parser_0.parse()
    except BaseException:
        pass

def test_case_11():
    try:
        var_0 = None
        str_0 = 'ping'
        str_1 = 'action'
        str_2 = ''
        str_3 = {str_1: var_0, str_0: str_2, str_0: str_2}
        module_args_parser_0 = module_0.ModuleArgsParser(str_3, var_0)
        var_1 = module_args_parser_0.parse()
    except BaseException:
        pass

def test_case_12():
    try:
        var_0 = None
        str_0 = 'ping'
        str_1 = {str_0: str_0, str_0: str_0, str_0: var_0}
        module_args_parser_0 = module_0.ModuleArgsParser(str_1, var_0)
        var_1 = module_args_parser_0.parse()
    except BaseException:
        pass