# Automatically generated by Pynguin.
import ansible.module_utils.facts.hardware.aix as module_0

def test_case_0():
    try:
        tuple_0 = ()
        a_i_x_hardware_0 = module_0.AIXHardware(tuple_0)
        var_0 = a_i_x_hardware_0.populate()
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = 411
        a_i_x_hardware_0 = module_0.AIXHardware(int_0)
        var_0 = a_i_x_hardware_0.get_memory_facts()
    except BaseException:
        pass

def test_case_2():
    try:
        tuple_0 = ()
        a_i_x_hardware_0 = module_0.AIXHardware(tuple_0)
        var_0 = a_i_x_hardware_0.get_dmi_facts()
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'\xb7\xe2\xda=?'
        str_0 = '3[J'
        a_i_x_hardware_collector_0 = module_0.AIXHardwareCollector()
        a_i_x_hardware_collector_1 = module_0.AIXHardwareCollector(str_0)
        a_i_x_hardware_collector_2 = module_0.AIXHardwareCollector()
        a_i_x_hardware_0 = module_0.AIXHardware(bytes_0)
        var_0 = a_i_x_hardware_0.get_vgs_facts()
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'distribute'
        dict_0 = {}
        a_i_x_hardware_0 = module_0.AIXHardware(dict_0)
        str_1 = '`\x0b^/d3&(\nKdo:\x0b #H'
        a_i_x_hardware_collector_0 = module_0.AIXHardwareCollector(str_0, str_1)
        var_0 = a_i_x_hardware_0.get_mount_facts()
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = '2Jz?[0,cgyH'
        a_i_x_hardware_0 = module_0.AIXHardware(str_0)
        var_0 = a_i_x_hardware_0.get_device_facts()
    except BaseException:
        pass