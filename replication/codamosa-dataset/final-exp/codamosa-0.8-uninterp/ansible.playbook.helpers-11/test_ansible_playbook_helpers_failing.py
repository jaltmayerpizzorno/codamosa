# Automatically generated by Pynguin.
import ansible.playbook.helpers as module_0

def test_case_0():
    try:
        float_0 = 126.60649270410065
        list_0 = [float_0, float_0, float_0, float_0, float_0, float_0, float_0, float_0]
        var_0 = module_0.load_list_of_blocks(list_0, float_0, float_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bool_0 = False
        float_0 = 0.0
        int_0 = 254
        list_0 = []
        tuple_0 = (float_0, int_0, list_0)
        var_0 = module_0.load_list_of_blocks(bool_0, tuple_0, bool_0)
    except BaseException:
        pass

def test_case_2():
    try:
        int_0 = -1979
        str_0 = '-9r.~"u@=PI)uUecn'
        var_0 = module_0.load_list_of_tasks(int_0, str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bool_0 = True
        list_0 = [bool_0, bool_0, bool_0, bool_0]
        float_0 = -2950.403
        int_0 = 40
        var_0 = module_0.load_list_of_roles(list_0, float_0, int_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'n`)[z\x0bpj;>`Iw(\x0b[&yaJ'
        bool_0 = False
        set_0 = {str_0, bool_0, str_0}
        str_1 = 'ZIO F^K&\r o"HeT'
        var_0 = module_0.load_list_of_roles(str_0, set_0, str_0, str_1)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = ''
        list_0 = [str_0, str_0]
        var_0 = module_0.load_list_of_roles(list_0, list_0)
        str_1 = ';V^D|QS!~O$oDL7'
        str_2 = 'B'
        bytes_0 = b'"m\xd0\xe9dKKr\x1c\x1fpWS\xf1'
        bool_0 = True
        var_1 = module_0.load_list_of_blocks(str_2, bytes_0, bool_0, str_1)
    except BaseException:
        pass

def test_case_6():
    try:
        float_0 = 129.032067
        list_0 = [float_0]
        set_0 = None
        bool_0 = None
        str_0 = 'w'
        var_0 = module_0.load_list_of_blocks(bool_0, set_0, str_0, set_0, set_0)
        set_1 = set()
        var_1 = module_0.load_list_of_blocks(list_0, set_0, set_1)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'c6aBP\n3'
        list_0 = []
        float_0 = 0.1
        var_0 = module_0.load_list_of_tasks(list_0, float_0)
        str_1 = '`'
        bool_0 = True
        bytes_0 = b''
        var_1 = module_0.load_list_of_tasks(str_1, str_0, bool_0, bytes_0)
    except BaseException:
        pass

def test_case_8():
    try:
        int_0 = -1979
        str_0 = '-9r.~"u@=PI)uUecn'
        dict_0 = {str_0: int_0, str_0: str_0, str_0: int_0}
        list_0 = [dict_0, dict_0, int_0, int_0]
        bytes_0 = None
        var_0 = module_0.load_list_of_tasks(list_0, bytes_0, bytes_0, dict_0, dict_0)
    except BaseException:
        pass

def test_case_9():
    try:
        float_0 = 126.60649270410065
        set_0 = None
        list_0 = [set_0, float_0]
        bool_0 = False
        float_1 = 674.957851
        var_0 = module_0.load_list_of_blocks(list_0, bool_0, float_1)
    except BaseException:
        pass

def test_case_10():
    try:
        dict_0 = {}
        list_0 = [dict_0, dict_0, dict_0, dict_0]
        dict_1 = None
        str_0 = ''
        var_0 = module_0.load_list_of_tasks(list_0, dict_1, str_0)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = ''
        dict_0 = {str_0: str_0}
        list_0 = [dict_0, dict_0, str_0]
        int_0 = 4096
        var_0 = module_0.load_list_of_blocks(list_0, str_0, int_0, int_0, int_0)
    except BaseException:
        pass

def test_case_12():
    try:
        bytes_0 = b'\xdd\xd6H\x89\x81\x82\xbe\r\x81Q\xc3\xbf\x85\xf0\x07\x97'
        dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
        list_0 = [dict_0, dict_0, bytes_0]
        str_0 = '/|'
        bool_0 = True
        var_0 = module_0.load_list_of_tasks(list_0, str_0, bool_0)
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = ''
        dict_0 = {str_0: str_0, str_0: str_0}
        list_0 = [dict_0, dict_0]
        int_0 = -1797
        var_0 = module_0.load_list_of_blocks(list_0, str_0, int_0, list_0, int_0, int_0)
    except BaseException:
        pass

def test_case_14():
    try:
        str_0 = None
        list_0 = [str_0]
        var_0 = module_0.load_list_of_blocks(list_0, list_0)
        int_0 = -58
        tuple_0 = ()
        bytes_0 = b'\x02\xb2\xb989'
        str_1 = 'run asynchronously, failing after X seconds (default=N/A)'
        tuple_1 = (int_0, tuple_0, bytes_0, str_1)
        str_2 = 'updated_at'
        str_3 = '<WMjI\x0cPa`m[+N@ b<_'
        var_1 = module_0.load_list_of_tasks(tuple_1, int_0, str_2, str_3)
    except BaseException:
        pass