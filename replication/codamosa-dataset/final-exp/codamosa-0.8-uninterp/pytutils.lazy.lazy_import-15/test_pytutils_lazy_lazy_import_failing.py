# Automatically generated by Pynguin.
import pytutils.lazy.lazy_import as module_0

def test_case_0():
    try:
        str_0 = 'some error'
        illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, str_0)
        var_0 = illegal_use_of_scope_replacer_0.__str__()
    except BaseException:
        pass

def test_case_1():
    try:
        import_processor_0 = module_0.ImportProcessor()
        str_0 = 'I'
        dict_0 = {str_0: import_processor_0, str_0: str_0, str_0: str_0, str_0: import_processor_0}
        str_1 = ':)o@(\nMN{38\n\r~qIcP'
        illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(import_processor_0, dict_0, str_1)
        var_0 = illegal_use_of_scope_replacer_0.__unicode__()
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = None
        set_0 = {str_0}
        illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(str_0, set_0)
        var_0 = illegal_use_of_scope_replacer_0.__repr__()
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '``:9c^cp.!\r\x0bJ"\\WaWTu'
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
        int_0 = 849
        scope_replacer_0 = module_0.ScopeReplacer(dict_0, dict_0, int_0)
        var_0 = scope_replacer_0.__getattribute__(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'import bzrliw.revision as _mo_fvvision'
        var_0 = module_0.disallow_proxying()
        var_1 = module_0.lazy_import(str_0, str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = '?G\r\nCmFC'
        dict_0 = {str_0: str_0, str_0: str_0}
        import_processor_0 = None
        bytes_0 = b'\x0bo'
        bool_0 = True
        import_replacer_0 = module_0.ImportReplacer(dict_0, import_processor_0, import_processor_0, bytes_0, bool_0)
    except BaseException:
        pass

def test_case_6():
    try:
        dict_0 = {}
        list_0 = []
        bool_0 = None
        import_replacer_0 = module_0.ImportReplacer(dict_0, bool_0, list_0, bool_0)
        var_0 = module_0.lazy_import(list_0, import_replacer_0, bool_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'import bzrliw.revision as _mofvvision'
        bool_0 = True
        var_0 = module_0.lazy_import(bool_0, str_0, bool_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = 'import bzrlib.revision as _mod_revision'
        var_0 = module_0.lazy_import(str_0, str_0)
    except BaseException:
        pass

def test_case_9():
    try:
        complex_0 = None
        dict_0 = {complex_0: complex_0, complex_0: complex_0}
        float_0 = 1271.65202
        import_replacer_0 = module_0.ImportReplacer(dict_0, float_0, dict_0, float_0)
        bytes_0 = b"\xcf\xbfh\x0c\xb5\xefP\x00\xf9\rD\xc3\x8f\xb6'\xae\xb0\xe4"
        var_0 = module_0.lazy_import(bytes_0, import_replacer_0)
    except BaseException:
        pass

def test_case_10():
    try:
        import_processor_0 = module_0.ImportProcessor()
        int_0 = 154
        illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(import_processor_0, int_0)
        var_0 = illegal_use_of_scope_replacer_0.__unicode__()
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = '\n    import bzrlib.timetamp\n x  '
        var_0 = module_0.lazy_import(str_0, str_0)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = '\n   import bzrlib.tiestamp\n    '
        var_0 = module_0.lazy_import(str_0, str_0)
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = '\n    from bzrlib import (\n        errors\n        )\n    '
        bool_0 = True
        var_0 = module_0.lazy_import(str_0, str_0)
    except BaseException:
        pass

def test_case_14():
    try:
        bool_0 = None
        set_0 = {bool_0, bool_0, bool_0, bool_0}
        list_0 = [set_0, set_0]
        complex_0 = None
        import_processor_0 = module_0.ImportProcessor(complex_0)
        str_0 = '5.@[J}Y_\nBI`U"8Oym'
        illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(list_0, str_0)
        import_processor_1 = module_0.ImportProcessor()
        str_1 = "\n    Update and/or insert query parameters in a URL.\n\n    >>> update_query_params('http://example.com?foo=bar&biz=baz', dict(foo='stuff'))\n    'http://example.com?...foo=stuff...'\n\n    :param url: URL\n    :type url: str\n    :param kwargs: Query parameters\n    :type kwargs: dict\n    :return: Modified URL\n    :rtype: str\n    "
        var_0 = module_0.lazy_import(bool_0, str_1)
    except BaseException:
        pass

def test_case_15():
    try:
        set_0 = set()
        str_0 = '.c(skolvme,yh=dY]'
        var_0 = module_0.lazy_import(set_0, str_0)
    except BaseException:
        pass

def test_case_16():
    try:
        bool_0 = None
        import_processor_0 = module_0.ImportProcessor()
        str_0 = '"xH %\\M]#`_~[z'
        import_processor_1 = module_0.ImportProcessor(bool_0)
        var_0 = import_processor_1.lazy_import(import_processor_0, str_0)
    except BaseException:
        pass

def test_case_17():
    try:
        bool_0 = None
        var_0 = module_0.disallow_proxying()
        set_0 = {bool_0, bool_0, bool_0, bool_0}
        str_0 = '5.@[J}Y_\nBI`U"8Oym'
        illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(set_0, str_0)
        var_1 = illegal_use_of_scope_replacer_0.__eq__(illegal_use_of_scope_replacer_0)
        var_2 = illegal_use_of_scope_replacer_0.__eq__(bool_0)
        import_processor_0 = module_0.ImportProcessor()
        var_3 = illegal_use_of_scope_replacer_0.__repr__()
    except BaseException:
        pass

def test_case_18():
    try:
        str_0 = 'import bzrliw.revision aH _moxfvvision'
        var_0 = module_0.lazy_import(str_0, str_0)
    except BaseException:
        pass

def test_case_19():
    try:
        str_0 = '\n   import ,zrlib.tiestamp\n    '
        var_0 = module_0.lazy_import(str_0, str_0)
    except BaseException:
        pass

def test_case_20():
    try:
        str_0 = 'pj_BgX'
        list_0 = [str_0]
        bool_0 = False
        bytes_0 = b'\xdcO\xca\x0e1\xec'
        import_replacer_0 = module_0.ImportReplacer(list_0, bool_0, bytes_0)
        str_1 = 'E k]cXE'
        dict_0 = {str_1: str_0}
        float_0 = -381.2
        scope_replacer_0 = module_0.ScopeReplacer(dict_0, import_replacer_0, float_0)
        tuple_0 = None
        var_0 = scope_replacer_0.__setattr__(dict_0, tuple_0)
    except BaseException:
        pass

def test_case_21():
    try:
        str_0 = 'V,pup\r"rER'
        dict_0 = {str_0: str_0, str_0: str_0}
        bool_0 = False
        list_0 = [str_0]
        import_replacer_0 = module_0.ImportReplacer(dict_0, bool_0, list_0, bool_0)
        var_0 = module_0.lazy_import(str_0, import_replacer_0, bool_0)
    except BaseException:
        pass