# Automatically generated by Pynguin.
import tornado.netutil as module_0

def test_case_0():
    pass

def test_case_1():
    str_0 = './test_unix_socket'
    socket_0 = module_0.bind_unix_socket(str_0)

def test_case_2():
    dict_0 = {}
    s_s_l_context_0 = module_0.ssl_options_to_context(dict_0)

def test_case_3():
    int_0 = 3769
    bool_0 = None
    list_0 = module_0.bind_sockets(int_0, bool_0)

def test_case_4():
    int_0 = 3345
    str_0 = ''
    bool_0 = False
    list_0 = module_0.bind_sockets(int_0, str_0, bool_0)

def test_case_5():
    str_0 = None
    int_0 = 0
    list_0 = module_0.bind_sockets(int_0, str_0)

def test_case_6():
    str_0 = ':60'
    bool_0 = module_0.is_valid_ip(str_0)

def test_case_7():
    str_0 = '999.995K9.999.999'
    bool_0 = module_0.is_valid_ip(str_0)
    str_1 = '<Gp'
    bool_1 = module_0.is_valid_ip(str_1)
    str_2 = '5.5.5.5'
    bool_2 = module_0.is_valid_ip(str_2)
    str_3 = '::1'
    bool_3 = module_0.is_valid_ip(str_3)
    str_4 = ''
    bool_4 = module_0.is_valid_ip(str_4)
    str_5 = 'foo'
    bool_5 = module_0.is_valid_ip(str_5)
    str_6 = 'foo.com'
    bool_6 = module_0.is_valid_ip(str_6)
    str_7 = 'localhost'
    bool_7 = module_0.is_valid_ip(str_7)
    str_8 = '127.0.0.1'
    bool_8 = module_0.is_valid_ip(str_8)
    str_9 = '::ffff:127.0.0.1'
    bool_9 = module_0.is_valid_ip(str_9)

def test_case_8():
    int_0 = 0
    str_0 = 'localhost'
    list_0 = module_0.bind_sockets(int_0, str_0)
    str_1 = ''
    list_1 = module_0.bind_sockets(int_0, str_1)
    str_2 = '127.0.0.1'
    list_2 = module_0.bind_sockets(int_0, str_2)