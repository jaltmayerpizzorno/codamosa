# Automatically generated by Pynguin.
import dataclasses_json.core as module_0
import decimal as module_1

def test_case_0():
    try:
        str_0 = ''
        extended_encoder_0 = module_0._ExtendedEncoder(skipkeys=str_0)
        var_0 = extended_encoder_0.default(str_0)
        var_1 = extended_encoder_0.default(extended_encoder_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = ''
        extended_encoder_0 = module_0._ExtendedEncoder(skipkeys=str_0)
        var_0 = extended_encoder_0.default(extended_encoder_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bool_0 = False
        list_0 = []
        extended_encoder_0 = module_0._ExtendedEncoder(sort_keys=list_0)
        int_0 = -4240
        bool_1 = True
        float_0 = -1401.6
        extended_encoder_1 = module_0._ExtendedEncoder(skipkeys=bool_0, allow_nan=int_0, indent=bool_1, default=float_0)
        dict_0 = {extended_encoder_0: extended_encoder_0}
        var_0 = extended_encoder_0.default(dict_0)
        field_override_0 = module_0.FieldOverride()
    except BaseException:
        pass

def test_case_3():
    try:
        extended_encoder_0 = module_0._ExtendedEncoder()
        decimal_0 = module_1.Decimal()
        var_0 = extended_encoder_0.encode(decimal_0)
        str_0 = ''
        extended_encoder_1 = module_0._ExtendedEncoder(skipkeys=str_0)
        var_1 = extended_encoder_1.default(str_0)
        var_2 = extended_encoder_1.default(extended_encoder_1)
    except BaseException:
        pass