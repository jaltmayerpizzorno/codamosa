# Automatically generated by Pynguin.
import typesystem.composites as module_0
import typesystem.fields as module_1

def test_case_0():
    pass

def test_case_1():
    never_match_0 = module_0.NeverMatch()

def test_case_2():
    field_0 = module_1.Field()
    list_0 = [field_0, field_0]
    one_of_0 = module_0.OneOf(list_0)

def test_case_3():
    field_0 = module_1.Field()
    dict_0 = {}
    if_then_else_0 = module_0.IfThenElse(field_0, field_0, **dict_0)

def test_case_4():
    int_0 = 1
    any_0 = module_1.Any()
    if_then_else_0 = module_0.IfThenElse(any_0, any_0)
    bool_0 = True
    any_1 = if_then_else_0.validate(int_0, bool_0)

def test_case_5():
    list_0 = None
    field_0 = module_1.Field(default=list_0)
    if_then_else_0 = module_0.IfThenElse(field_0)
    one_of_0 = module_0.OneOf(list_0)
    one_of_1 = module_0.OneOf(list_0)
    never_match_0 = module_0.NeverMatch()

def test_case_6():
    any_0 = module_1.Any()
    any_1 = module_1.Any()
    any_2 = [any_0]
    one_of_0 = module_0.OneOf(any_2)
    bytes_0 = b'\xb9\x8a\x88\x16\x8ce\xfb\xfc\x16\xd68\x80\xd7'
    str_0 = 'Z*J3w\t#>&K@p7^'
    str_1 = 'only_null'
    field_0 = module_1.Field(title=str_1, description=str_0)
    any_3 = one_of_0.validate(bytes_0)