# Automatically generated by Pynguin.
import ansible.inventory.group as module_0

def test_case_0():
    try:
        float_0 = 0.0001
        group_0 = module_0.Group(float_0)
    except BaseException:
        pass

def test_case_1():
    try:
        group_0 = module_0.Group()
        var_0 = group_0.__repr__()
        float_0 = 1703.42922
        group_1 = module_0.Group()
        var_1 = group_1.get_hosts()
        var_2 = group_1.__setstate__(float_0)
    except BaseException:
        pass

def test_case_2():
    try:
        group_0 = module_0.Group()
        var_0 = group_0.remove_host(group_0)
        group_1 = module_0.Group()
        var_1 = group_1.__setstate__(group_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'Vq*"k,X{{<'
        list_0 = [str_0, str_0]
        tuple_0 = (str_0, list_0)
        group_0 = module_0.Group()
        var_0 = group_0.add_child_group(tuple_0)
    except BaseException:
        pass

def test_case_4():
    try:
        group_0 = module_0.Group()
        var_0 = group_0.add_host(group_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'c|~4dF*8vX3b)k'
        group_0 = module_0.Group()
        var_0 = group_0.set_priority(str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        group_0 = module_0.Group()
        var_0 = group_0.get_hosts()
        str_0 = ''
        var_1 = group_0.__getstate__()
        var_2 = group_0.get_hosts()
        var_3 = group_0.get_hosts()
        dict_0 = {}
        var_4 = group_0.deserialize(dict_0)
        var_5 = group_0.__getstate__()
        var_6 = group_0.__setstate__(str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        group_0 = module_0.Group()
        group_1 = module_0.Group()
        var_0 = group_1.add_child_group(group_0)
        var_1 = group_0.add_child_group(group_0)
    except BaseException:
        pass

def test_case_8():
    try:
        group_0 = module_0.Group()
        group_1 = module_0.Group()
        group_2 = module_0.Group()
        group_3 = module_0.Group()
        group_4 = module_0.Group()
        group_5 = module_0.Group()
        var_0 = group_0.add_child_group(group_1)
        var_1 = group_0.add_child_group(group_1)
        var_2 = group_1.add_child_group(group_2)
        var_3 = group_1.add_child_group(group_0)
    except BaseException:
        pass