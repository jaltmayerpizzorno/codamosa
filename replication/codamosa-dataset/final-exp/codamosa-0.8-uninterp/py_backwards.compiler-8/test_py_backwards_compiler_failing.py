# Automatically generated by Pynguin.
import py_backwards.compiler as module_0

def test_case_0():
    try:
        tuple_0 = None
        str_0 = '/'
        compilation_result_0 = module_0.compile_files(str_0, str_0, tuple_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '9J\'({"`'
        int_0 = 2557
        tuple_0 = (int_0, int_0)
        compilation_result_0 = module_0.compile_files(str_0, str_0, tuple_0)
        str_1 = '{6$0'
        str_2 = 'kcRveKND6O^EP:G"='
        compilation_result_1 = module_0.compile_files(str_1, str_2, tuple_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '9J\'({"`'
        int_0 = 2557
        tuple_0 = (int_0, int_0)
        compilation_result_0 = module_0.compile_files(str_0, str_0, tuple_0)
        str_1 = '/'
        compilation_result_1 = module_0.compile_files(str_0, str_0, tuple_0)
        compilation_result_2 = module_0.compile_files(str_1, str_1, tuple_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = ''
        int_0 = -1913
        int_1 = 14
        tuple_0 = (int_0, int_1)
        compilation_result_0 = module_0.compile_files(str_0, str_0, tuple_0)
    except BaseException:
        pass