# Automatically generated by Pynguin.
import ansible.module_utils.facts.hardware.sunos as module_0

def test_case_0():
    try:
        set_0 = set()
        sun_o_s_hardware_collector_0 = module_0.SunOSHardwareCollector(set_0)
        bool_0 = False
        sun_o_s_hardware_0 = module_0.SunOSHardware(bool_0)
        var_0 = sun_o_s_hardware_0.populate()
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = 760
        sun_o_s_hardware_0 = module_0.SunOSHardware(int_0)
        var_0 = sun_o_s_hardware_0.get_cpu_facts()
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '9tnjn\x0bOPS2>(-C)\t41)'
        sun_o_s_hardware_0 = module_0.SunOSHardware(str_0)
        var_0 = sun_o_s_hardware_0.get_memory_facts()
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'W}\xc5'
        sun_o_s_hardware_0 = module_0.SunOSHardware(bytes_0)
        var_0 = sun_o_s_hardware_0.get_dmi_facts()
    except BaseException:
        pass

def test_case_4():
    try:
        sun_o_s_hardware_collector_0 = module_0.SunOSHardwareCollector()
        sun_o_s_hardware_0 = module_0.SunOSHardware(sun_o_s_hardware_collector_0)
        var_0 = sun_o_s_hardware_0.get_device_facts()
    except BaseException:
        pass

def test_case_5():
    try:
        float_0 = 761.5969
        sun_o_s_hardware_0 = module_0.SunOSHardware(float_0)
        var_0 = sun_o_s_hardware_0.get_uptime_facts()
    except BaseException:
        pass

def test_case_6():
    try:
        set_0 = set()
        sun_o_s_hardware_0 = module_0.SunOSHardware(set_0)
        bytes_0 = b'\xf0#f6\x00'
        var_0 = sun_o_s_hardware_0.get_cpu_facts(bytes_0)
    except BaseException:
        pass