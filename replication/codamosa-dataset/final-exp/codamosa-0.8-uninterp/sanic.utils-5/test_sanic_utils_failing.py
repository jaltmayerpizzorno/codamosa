# Automatically generated by Pynguin.
import sanic.utils as module_0
import pathlib as module_1

def test_case_0():
    try:
        str_0 = "p!U'9oK="
        bool_0 = module_0.str_to_bool(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = None
        bool_0 = module_0.str_to_bool(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = './/boolean.7py'
        var_0 = module_0.load_module_from_file_location(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '/some/pagh/to/module.py'
        var_0 = module_0.load_module_from_file_location(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = "p!U'9oK="
        var_0 = module_0.load_module_from_file_location(str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        bytes_0 = b"\x9e\xf0\x0fV%\x80K\x98Q\x12\n'"
        var_0 = module_0.load_module_from_file_location(bytes_0)
    except BaseException:
        pass

def test_case_6():
    try:
        path_0 = module_1.Path()
        var_0 = module_0.load_module_from_file_location(path_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = '$\x0b'
        var_0 = module_0.load_module_from_file_location(str_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = 'no'
        bool_0 = module_0.str_to_bool(str_0)
        str_1 = 'yes'
        bool_1 = module_0.str_to_bool(str_1)
        str_2 = '1'
        bool_2 = module_0.str_to_bool(str_2)
        str_3 = '0'
        bool_3 = module_0.str_to_bool(str_3)
        bool_4 = module_0.str_to_bool(str_1)
        str_4 = 'false'
        bool_5 = module_0.str_to_bool(str_4)
        str_5 = 'OFF'
        bool_6 = module_0.str_to_bool(str_5)
        var_0 = module_0.load_module_from_file_location(str_2)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'protocol.connect_made'
        var_0 = module_0.load_module_from_file_location(str_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = '/some/path/${some_env_var}'
        var_0 = module_0.load_module_from_file_location(str_0)
    except BaseException:
        pass