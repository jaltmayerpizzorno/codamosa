# Automatically generated by Pynguin.
import youtube_dl.swfinterp as module_0

def test_case_0():
    try:
        int_0 = -488
        tuple_0 = (int_0,)
        s_w_f_interpreter_0 = module_0.SWFInterpreter(tuple_0)
    except BaseException:
        pass

def test_case_1():
    try:
        undefined_0 = None
        s_w_f_interpreter_0 = module_0.SWFInterpreter(undefined_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '@j~6*'
        a_v_m_class__object_0 = module_0._AVMClass_Object(str_0)
        str_1 = 'WA~r5V57'
        str_2 = 'uW'
        dict_0 = {str_1: str_1, str_0: str_1, str_2: str_1, str_1: str_0}
        undefined_0 = module_0._Undefined(**dict_0)
    except BaseException:
        pass

def test_case_3():
    try:
        a_v_m_class_0 = None
        a_v_m_class__object_0 = module_0._AVMClass_Object(a_v_m_class_0)
        list_0 = [a_v_m_class__object_0]
        s_w_f_interpreter_0 = module_0.SWFInterpreter(list_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'O,ije-^hW.*,Yw;'
        list_0 = [str_0, str_0, str_0]
        scope_dict_0 = module_0._ScopeDict(list_0)
        var_0 = scope_dict_0.__repr__()
    except BaseException:
        pass

def test_case_5():
    try:
        undefined_0 = module_0._Undefined()
        var_0 = undefined_0.__hash__()
        bool_0 = True
        scope_dict_0 = module_0._ScopeDict(bool_0)
        int_0 = 810
        int_1 = 1495033267
        multiname_0 = module_0._Multiname(int_1)
        bytes_0 = b''
        list_0 = [bytes_0]
        a_v_m_class_0 = module_0._AVMClass(multiname_0, list_0)
        var_1 = a_v_m_class_0.register_methods(int_0)
    except BaseException:
        pass

def test_case_6():
    try:
        tuple_0 = ()
        multiname_0 = module_0._Multiname(tuple_0)
        var_0 = multiname_0.__repr__()
    except BaseException:
        pass

def test_case_7():
    try:
        undefined_0 = module_0._Undefined()
        var_0 = undefined_0.__str__()
        var_1 = undefined_0.__bool__()
        var_2 = undefined_0.__bool__()
        int_0 = None
        var_3 = undefined_0.__bool__()
        var_4 = undefined_0.__hash__()
        scope_dict_0 = module_0._ScopeDict(int_0)
        s_w_f_interpreter_0 = module_0.SWFInterpreter(scope_dict_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = 'tNT}s)#Bp'
        tuple_0 = (str_0,)
        int_0 = -4042
        a_v_m_class_0 = module_0._AVMClass(tuple_0, int_0)
        var_0 = a_v_m_class_0.make_object()
        var_1 = a_v_m_class_0.__repr__()
        bytes_0 = b'\x89y~\x11\x9a\x94\xfc^\xfa\x9e\xd8\xf8<\x8f\xc6\xf1r\xfc\x87'
        s_w_f_interpreter_0 = module_0.SWFInterpreter(bytes_0)
    except BaseException:
        pass

def test_case_9():
    try:
        bytes_0 = b'\xacp\x03\xd2\xc0\xb0\xfe\xb7\xa9~\xc8na\xb6'
        list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
        set_0 = set()
        list_1 = [set_0]
        a_v_m_class__object_0 = module_0._AVMClass_Object(list_1)
        a_v_m_class_0 = module_0._AVMClass(list_0, a_v_m_class__object_0)
        scope_dict_0 = module_0._ScopeDict(a_v_m_class_0)
        var_0 = scope_dict_0.__repr__()
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = 'Fishing for piranha - the easy way'
        str_1 = 'w)^k/O('
        str_2 = '4+cBB!cc\nX'
        float_0 = 2309.89
        int_0 = -443
        undefined_0 = module_0._Undefined()
        bytes_0 = b"\xafN9K\x9c\x9f\xbbi\x06'$q\xdd#"
        a_v_m_class_0 = module_0._AVMClass(undefined_0, bytes_0, int_0)
        var_0 = a_v_m_class_0.__repr__()
        a_v_m_class__object_0 = module_0._AVMClass_Object(int_0)
        a_v_m_class_1 = module_0._AVMClass(float_0, a_v_m_class__object_0)
        scope_dict_0 = None
        dict_0 = {str_0: int_0, str_0: bytes_0, str_0: scope_dict_0, str_2: str_0}
        var_1 = a_v_m_class_1.register_methods(dict_0)
        var_2 = a_v_m_class_1.make_object()
        str_3 = 'EZqvRyKBJLrgpClDPDF8I7Xpdp40Vx73'
        dict_1 = {str_0: str_0, str_0: str_0, str_1: str_2, str_3: str_2}
        undefined_1 = module_0._Undefined()
        var_3 = undefined_1.__str__()
        undefined_2 = module_0._Undefined(**dict_1)
    except BaseException:
        pass