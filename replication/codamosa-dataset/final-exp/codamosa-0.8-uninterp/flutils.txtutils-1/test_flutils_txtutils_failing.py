# Automatically generated by Pynguin.
import flutils.txtutils as module_0

def test_case_0():
    try:
        bytes_0 = b'(\xa5\xad\x9b'
        int_0 = module_0.len_without_ansi(bytes_0)
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = 41
        str_0 = 'M['
        bool_0 = True
        ansi_text_wrapper_0 = module_0.AnsiTextWrapper(bool_0, max_lines=int_0)
        str_1 = ansi_text_wrapper_0.fill(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '.5'
        int_0 = -2226
        str_1 = 'Nx*-J:'
        bool_0 = True
        ansi_text_wrapper_0 = module_0.AnsiTextWrapper(int_0, str_1, bool_0, max_lines=int_0)
        bool_1 = True
        ansi_text_wrapper_1 = module_0.AnsiTextWrapper(bool_1, bool_1, bool_1, max_lines=int_0)
        str_2 = ansi_text_wrapper_0.fill(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '\x0c#M-4cW~jZkta8'
        ansi_text_wrapper_0 = module_0.AnsiTextWrapper(str_0)
        str_1 = ansi_text_wrapper_0.fill(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'x\x1b[38;5;209mfoobar\x1b[0m'
        str_1 = 'RmHvn}2g,.mS~'
        bool_0 = False
        int_0 = -1473
        ansi_text_wrapper_0 = module_0.AnsiTextWrapper(str_1, bool_0, int_0)
        str_2 = ansi_text_wrapper_0.fill(str_0)
    except BaseException:
        pass