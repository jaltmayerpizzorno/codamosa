# Automatically generated by Pynguin.
import ansible.modules.subversion as module_0

def test_case_0():
    try:
        var_0 = None
        subversion_0 = module_0.Subversion(var_0, var_0, var_0, var_0, var_0, var_0, var_0, var_0)
        var_1 = subversion_0.has_local_mods()
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '/home/foo/myrepo'
        subversion_0 = module_0.Subversion(str_0, str_0, str_0, str_0, str_0, str_0, str_0, str_0)
        var_0 = subversion_0.has_local_mods()
    except BaseException:
        pass

def test_case_2():
    try:
        var_0 = None
        subversion_0 = module_0.Subversion(var_0, var_0, var_0, var_0, var_0, var_0, var_0, var_0)
        var_1 = subversion_0.is_svn_repo()
    except BaseException:
        pass

def test_case_3():
    try:
        var_0 = None
        subversion_0 = module_0.Subversion(var_0, var_0, var_0, var_0, var_0, var_0, var_0, var_0)
        var_1 = subversion_0.checkout()
    except BaseException:
        pass

def test_case_4():
    try:
        var_0 = None
        subversion_0 = module_0.Subversion(var_0, var_0, var_0, var_0, var_0, var_0, var_0, var_0)
        var_1 = subversion_0.export()
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = '/home/foo/myrepo'
        subversion_0 = module_0.Subversion(str_0, str_0, str_0, str_0, str_0, str_0, str_0, str_0)
        var_0 = subversion_0.export(str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        var_0 = None
        subversion_0 = module_0.Subversion(var_0, var_0, var_0, var_0, var_0, var_0, var_0, var_0)
        var_1 = subversion_0.switch()
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'VW'
        float_0 = -3815.0
        list_0 = [str_0, str_0]
        float_1 = 659.4669
        tuple_0 = (float_0, float_1)
        set_0 = set()
        bool_0 = False
        str_1 = '!yN7F:M`c/\x0cCN@gw5'
        int_0 = -1836
        int_1 = 522
        bool_1 = False
        bytes_0 = b'\xc0\xb6:\xa9H\xe8\xd7\xb5\xe45\\\xed\x0e\xfa\xae\xc1\x02P\xa2'
        bool_2 = False
        str_2 = '__main__'
        subversion_0 = module_0.Subversion(bytes_0, bool_2, set_0, bool_0, tuple_0, set_0, list_0, str_2)
        subversion_1 = module_0.Subversion(int_0, float_1, tuple_0, tuple_0, int_1, set_0, bool_1, subversion_0)
        subversion_2 = module_0.Subversion(list_0, tuple_0, set_0, set_0, bool_0, str_1, subversion_1, str_1)
        var_0 = subversion_2.needs_update()
    except BaseException:
        pass

def test_case_8():
    try:
        list_0 = []
        int_0 = -2138
        bytes_0 = b'\x05\x1eoB!\x07\xa2*;\x03\xd5\x92'
        dict_0 = {int_0: bytes_0, int_0: list_0}
        list_1 = [list_0, bytes_0]
        subversion_0 = module_0.Subversion(list_0, list_0, int_0, bytes_0, dict_0, list_1, int_0, list_1)
        var_0 = subversion_0.get_remote_revision()
    except BaseException:
        pass

def test_case_9():
    try:
        bool_0 = False
        set_0 = {bool_0, bool_0, bool_0, bool_0}
        int_0 = -344
        bool_1 = False
        str_0 = ',hD)xv\tU0)RKO8uK'
        dict_0 = {int_0: int_0, bool_0: bool_1}
        str_1 = '*14'
        subversion_0 = module_0.Subversion(bool_0, set_0, int_0, bool_1, str_0, dict_0, dict_0, str_1)
        var_0 = subversion_0.update()
    except BaseException:
        pass

def test_case_10():
    try:
        var_0 = None
        subversion_0 = module_0.Subversion(var_0, var_0, var_0, var_0, var_0, var_0, var_0, var_0)
        var_1 = subversion_0.revert()
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = 'S'
        subversion_0 = module_0.Subversion(str_0, str_0, str_0, str_0, str_0, str_0, str_0, str_0)
        var_0 = subversion_0.checkout(str_0)
    except BaseException:
        pass