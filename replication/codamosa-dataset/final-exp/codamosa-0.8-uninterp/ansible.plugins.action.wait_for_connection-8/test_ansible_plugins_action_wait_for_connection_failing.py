# Automatically generated by Pynguin.
import ansible.plugins.action.wait_for_connection as module_0

def test_case_0():
    try:
        bool_0 = True
        int_0 = None
        bytes_0 = b'\xb5\x8b\xfa'
        set_0 = {bytes_0, bytes_0, bytes_0}
        str_0 = 'P+-\rU2-ijUo\nnNeC'
        int_1 = -913
        bool_1 = False
        action_module_0 = module_0.ActionModule(bytes_0, set_0, str_0, str_0, int_1, bool_1)
        var_0 = action_module_0.do_until_success_or_timeout(str_0, bool_0, action_module_0, int_0)
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = 11
        timed_out_exception_0 = module_0.TimedOutException()
        list_0 = [timed_out_exception_0, timed_out_exception_0, timed_out_exception_0]
        bytes_0 = b'\xc1\xa2\xfd \x7f\x05n\x80\xc0\x90\x1dt\x90f\n'
        float_0 = 512.0
        dict_0 = {}
        action_module_0 = module_0.ActionModule(list_0, list_0, bytes_0, float_0, dict_0, float_0)
        var_0 = action_module_0.run(int_0)
    except BaseException:
        pass

def test_case_2():
    try:
        list_0 = []
        bool_0 = True
        bool_1 = True
        bytes_0 = b'N5"'
        list_1 = [bool_1, list_0]
        bool_2 = None
        float_0 = 2070.38358
        dict_0 = {}
        timed_out_exception_0 = module_0.TimedOutException(**dict_0)
        action_module_0 = module_0.ActionModule(bool_1, bytes_0, list_1, bool_2, float_0, timed_out_exception_0)
        tuple_0 = (timed_out_exception_0,)
        int_0 = 1024
        set_0 = {int_0, int_0, int_0, int_0}
        str_0 = 'cl3'
        list_2 = [int_0, set_0, str_0]
        tuple_1 = (list_2, float_0)
        dict_1 = {str_0: float_0}
        action_module_1 = module_0.ActionModule(int_0, set_0, str_0, str_0, tuple_1, dict_1)
        var_0 = action_module_1.do_until_success_or_timeout(list_0, bool_0, action_module_0, list_1, tuple_0)
    except BaseException:
        pass

def test_case_3():
    try:
        list_0 = []
        timed_out_exception_0 = module_0.TimedOutException(*list_0)
        str_0 = 'X{)QM Zj\\W2.+`y'
        list_1 = []
        dict_0 = {}
        int_0 = 2062
        tuple_0 = (dict_0, int_0)
        bool_0 = False
        bytes_0 = b'b\xc9s\x8b\xae\xe9\xc8\x8e\xa0\xe5%$\xac\t'
        str_1 = '\x0c'
        set_0 = set()
        float_0 = -810.929022
        str_2 = 'mQ|R`~>k/C`~7\n8DO$C'
        complex_0 = None
        dict_1 = {str_0: str_0, str_2: complex_0}
        action_module_0 = module_0.ActionModule(timed_out_exception_0, str_0, tuple_0, float_0, bytes_0, dict_1)
        action_module_1 = module_0.ActionModule(str_1, list_0, set_0, action_module_0, set_0, list_1)
        action_module_2 = module_0.ActionModule(dict_0, bytes_0, timed_out_exception_0, action_module_1, list_0, tuple_0)
        var_0 = action_module_2.do_until_success_or_timeout(list_0, bool_0, timed_out_exception_0, list_0, tuple_0)
    except BaseException:
        pass

def test_case_4():
    try:
        int_0 = -2994
        str_0 = 'u}H7N^D?T-Pq5.b?'
        timed_out_exception_0 = module_0.TimedOutException()
        str_1 = 'sfK\x0beG@boL'
        str_2 = 'R;z'
        dict_0 = {str_2: str_2, str_0: str_1}
        set_0 = {int_0, str_2}
        str_3 = 'kyURoK@3Mou\r"ZN(D'
        bytes_0 = b'\x03\x92'
        str_4 = 'WCPA\n&Yl\rS\x0b'
        str_5 = '\x0bKs3JSN[K#sg\n$T!'
        action_module_0 = module_0.ActionModule(str_3, bytes_0, str_4, timed_out_exception_0, str_5, timed_out_exception_0)
        var_0 = action_module_0.run(dict_0, set_0)
    except BaseException:
        pass