# Automatically generated by Pynguin.
import ansible.module_utils.facts.network.generic_bsd as module_0

def test_case_0():
    try:
        str_0 = 'Q>8^JFY #+Z-J'
        float_0 = 2.0
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(float_0)
        var_0 = generic_bsd_ifconfig_network_0.detect_type_media(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = None
        set_0 = set()
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(set_0)
        var_0 = generic_bsd_ifconfig_network_0.get_default_interfaces(int_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'v6'
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(str_0)
        var_0 = generic_bsd_ifconfig_network_0.parse_interface_line(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        float_0 = -588.0
        bytes_0 = b'y \xe17&g\xc8gd\xa3\xa5d\x12\xef'
        dict_0 = {float_0: bytes_0, bytes_0: float_0}
        int_0 = 830
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(int_0)
        var_0 = generic_bsd_ifconfig_network_0.parse_options_line(float_0, bytes_0, dict_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = ''
        set_0 = {str_0, str_0, str_0, str_0}
        list_0 = [set_0, str_0, set_0, str_0]
        int_0 = 1257
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(int_0)
        var_0 = generic_bsd_ifconfig_network_0.parse_nd6_line(set_0, set_0, list_0)
    except BaseException:
        pass

def test_case_5():
    try:
        int_0 = None
        set_0 = {int_0}
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(set_0)
        bool_0 = False
        str_0 = "5%s\\'Z\x0c!M="
        var_0 = generic_bsd_ifconfig_network_0.get_options(str_0)
        bytes_0 = b'\x8e\xa5\x07\xcaU\xb8\xfd\xe8\xd0\xbb\xb38Q-}\\\xfc\x99\x1b\x01'
        generic_bsd_ifconfig_network_1 = module_0.GenericBsdIfconfigNetwork(bytes_0)
        list_0 = [bytes_0, str_0, bool_0, int_0]
        str_1 = 'K\x0b-0=^uPQNp|HS'
        var_1 = generic_bsd_ifconfig_network_0.parse_media_line(str_0, list_0, str_1)
    except BaseException:
        pass

def test_case_6():
    try:
        bytes_0 = b'\xd7[\xfb|\xf2\x82&F\xfab'
        set_0 = {bytes_0}
        float_0 = -1212.531931
        str_0 = 'gW.2WQqg1\x0bA3S9q/'
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(str_0)
        var_0 = generic_bsd_ifconfig_network_0.parse_status_line(set_0, set_0, float_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'provides'
        int_0 = 7
        list_0 = [str_0, int_0, int_0]
        bytes_0 = None
        bool_0 = False
        tuple_0 = (bool_0,)
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(tuple_0)
        var_0 = generic_bsd_ifconfig_network_0.parse_lladdr_line(list_0, bytes_0, bytes_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = "cICCQ^#*6'1Xdv 5i[i"
        tuple_0 = ()
        bytes_0 = None
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(bytes_0)
        var_0 = generic_bsd_ifconfig_network_0.parse_inet6_line(str_0, tuple_0, bytes_0)
    except BaseException:
        pass

def test_case_9():
    try:
        int_0 = 2196
        int_1 = 2837
        list_0 = None
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(int_1, list_0)
        str_0 = 'j\r&?`h}in8LG]c8'
        dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
        generic_bsd_ifconfig_network_1 = module_0.GenericBsdIfconfigNetwork(dict_0)
        var_0 = generic_bsd_ifconfig_network_1.parse_tunnel_line(generic_bsd_ifconfig_network_0, str_0, int_1)
    except BaseException:
        pass

def test_case_10():
    try:
        float_0 = -290.66575
        str_0 = '\x0c?a{Y4A.\\$J'
        int_0 = 411
        str_1 = 'UBy/B=2E\rVB('
        list_0 = [str_1]
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(list_0, list_0)
        var_0 = generic_bsd_ifconfig_network_0.merge_default_interface(float_0, str_0, int_0)
    except BaseException:
        pass

def test_case_11():
    try:
        int_0 = 830
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(int_0)
        var_0 = generic_bsd_ifconfig_network_0.populate()
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = '+!%p3A'
        dict_0 = {}
        bytes_0 = b''
        str_1 = '*8@dOoxhll$\x0b'
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(str_1)
        var_0 = generic_bsd_ifconfig_network_0.parse_inet_line(str_0, dict_0, bytes_0)
    except BaseException:
        pass

def test_case_13():
    try:
        bytes_0 = b'*7w\xf2A;\x92S\xa9E1\x13j\xf3\xa6\xf4\xe2\x85\xf3s'
        float_0 = 548.0
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(float_0)
        float_1 = 540.65248
        set_0 = set()
        int_0 = 989
        bool_0 = True
        generic_bsd_ifconfig_network_1 = module_0.GenericBsdIfconfigNetwork(int_0, bool_0)
        tuple_0 = (set_0, generic_bsd_ifconfig_network_1, float_1, bool_0)
        str_0 = 'vKb&'
        tuple_1 = (float_1, tuple_0, str_0, bytes_0)
        generic_bsd_ifconfig_network_2 = module_0.GenericBsdIfconfigNetwork(tuple_1, generic_bsd_ifconfig_network_1)
        str_1 = 'Y8+Q+HsQa\r1^k'
        var_0 = generic_bsd_ifconfig_network_2.parse_inet_line(str_1, generic_bsd_ifconfig_network_2, tuple_1)
    except BaseException:
        pass

def test_case_14():
    try:
        str_0 = 'mS9iYQ'
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(str_0)
        bool_0 = False
        str_1 = '=Q?{qFtbW'
        dict_0 = {generic_bsd_ifconfig_network_0: bool_0, generic_bsd_ifconfig_network_0: generic_bsd_ifconfig_network_0, str_0: str_1}
        str_2 = "\n    .. deprecated:: 1.6.0\n\n        :func:`distro.linux_distribution()` is deprecated. It should only be\n        used as a compatibility shim with Python's\n        :py:func:`platform.linux_distribution()`. Please use :func:`distro.id`,\n        :func:`distro.version` and :func:`distro.name` instead.\n\n    Return information about the current OS distribution as a tuple\n    ``(id_name, version, codename)`` with items as follows:\n\n    * ``id_name``:  If *full_distribution_name* is false, the result of\n      :func:`distro.id`. Otherwise, the result of :func:`distro.name`.\n\n    * ``version``:  The result of :func:`distro.version`.\n\n    * ``codename``:  The result of :func:`distro.codename`.\n\n    The interface of this function is compatible with the original\n    :py:func:`platform.linux_distribution` function, supporting a subset of\n    its parameters.\n\n    The data it returns may not exactly be the same, because it uses more data\n    sources than the original function, and that may lead to different data if\n    the OS distribution is not consistent across multiple data sources it\n    provides (there are indeed such distributions ...).\n\n    Another reason for differences is the fact that the :func:`distro.id`\n    method normalizes the distro ID string to a reliable machine-readable value\n    for a number of popular OS distributions.\n    "
        var_0 = generic_bsd_ifconfig_network_0.parse_unknown_line(dict_0, str_0, str_2)
        str_3 = 'UoD#`:Jm9f<C'
        var_1 = generic_bsd_ifconfig_network_0.get_options(str_3)
    except BaseException:
        pass

def test_case_15():
    try:
        bool_0 = False
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(bool_0)
        list_0 = [bool_0, bool_0, bool_0]
        generic_bsd_ifconfig_network_1 = module_0.GenericBsdIfconfigNetwork(list_0)
        bytes_0 = None
        var_0 = generic_bsd_ifconfig_network_0.get_interfaces_info(bytes_0)
    except BaseException:
        pass

def test_case_16():
    try:
        set_0 = set()
        bool_0 = True
        list_0 = [bool_0, bool_0, set_0, set_0]
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(list_0)
        var_0 = generic_bsd_ifconfig_network_0.detect_type_media(set_0)
        tuple_0 = (bool_0,)
        str_0 = 'yJXl'
        var_1 = generic_bsd_ifconfig_network_0.merge_default_interface(set_0, tuple_0, str_0)
        bytes_0 = b'\xeeh9\x9b\xd5k\xdb\x98\xac \xd5\x98C'
        var_2 = generic_bsd_ifconfig_network_0.parse_unknown_line(bytes_0, set_0, set_0)
        str_1 = 'Q>8^`JFY #+Z-J'
        str_2 = 'Sj,9iYQ'
        var_3 = generic_bsd_ifconfig_network_0.parse_interface_line(str_2)
        generic_bsd_ifconfig_network_1 = module_0.GenericBsdIfconfigNetwork(str_2)
        str_3 = 'UD#`:Jm9f<C'
        var_4 = generic_bsd_ifconfig_network_0.parse_interface_line(str_1)
        var_5 = generic_bsd_ifconfig_network_0.merge_default_interface(var_3, var_3, set_0)
        var_6 = generic_bsd_ifconfig_network_1.get_options(str_3)
        var_7 = generic_bsd_ifconfig_network_0.get_default_interfaces(list_0)
    except BaseException:
        pass

def test_case_17():
    try:
        str_0 = 'alias'
        list_0 = [str_0, str_0]
        complex_0 = None
        dict_0 = {}
        int_0 = 781
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(dict_0, int_0)
        generic_bsd_ifconfig_network_1 = module_0.GenericBsdIfconfigNetwork(list_0, generic_bsd_ifconfig_network_0)
        bool_0 = False
        bytes_0 = b'\xc8\xf4-?\xeb\xb1\xe4\x83\xf5\xb2o'
        list_1 = [bytes_0, bool_0, bool_0]
        bool_1 = False
        tuple_0 = (bytes_0, list_1, bool_1)
        generic_bsd_ifconfig_network_2 = module_0.GenericBsdIfconfigNetwork(tuple_0)
        generic_bsd_ifconfig_network_3 = module_0.GenericBsdIfconfigNetwork(bool_0, generic_bsd_ifconfig_network_2)
        var_0 = generic_bsd_ifconfig_network_3.parse_inet_line(list_0, complex_0, generic_bsd_ifconfig_network_1)
    except BaseException:
        pass

def test_case_18():
    try:
        str_0 = '@LSe'
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
        bytes_0 = b'\xe9\x91'
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(dict_0)
        var_0 = generic_bsd_ifconfig_network_0.parse_inet6_line(str_0, dict_0, bytes_0)
    except BaseException:
        pass

def test_case_19():
    try:
        str_0 = 'Q>8^`JFY #+Z-J'
        str_1 = 'mS9iYQ'
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(str_1)
        str_2 = 'UoD#`:Jm9f<C'
        var_0 = generic_bsd_ifconfig_network_0.get_options(str_2)
        dict_0 = {str_0: str_2}
        var_1 = generic_bsd_ifconfig_network_0.get_default_interfaces(dict_0)
    except BaseException:
        pass

def test_case_20():
    try:
        int_0 = None
        bytes_0 = b'\x8e\xa5\x07\xcaU\xb8\xfd\xe8\xd0\xbb\xb38Q-}\\\xfc\x99\x1b\x01'
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(bytes_0)
        str_0 = 'g\\Q'
        var_0 = generic_bsd_ifconfig_network_0.parse_inet6_line(str_0, int_0, bytes_0)
    except BaseException:
        pass

def test_case_21():
    try:
        bytes_0 = b'\xc8P\x1b\xfc5\xf9)N\xcd'
        str_0 = 'prefixlen'
        dict_0 = {str_0: str_0, bytes_0: str_0, str_0: str_0, str_0: bytes_0}
        str_1 = 'BN}<zIo\r&5D1\tw)z'
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(str_1)
        generic_bsd_ifconfig_network_1 = module_0.GenericBsdIfconfigNetwork(generic_bsd_ifconfig_network_0)
        bytes_1 = b'\x7fF\xcb=L\x0f\x80pT\xd1\xcf\xa9\xd7'
        var_0 = generic_bsd_ifconfig_network_0.parse_media_line(bytes_1, dict_0, bytes_1)
    except BaseException:
        pass

def test_case_22():
    try:
        set_0 = set()
        bool_0 = True
        list_0 = [bool_0, bool_0, set_0, set_0]
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(list_0)
        var_0 = generic_bsd_ifconfig_network_0.detect_type_media(set_0)
        tuple_0 = (bool_0,)
        str_0 = 'yJXl'
        var_1 = generic_bsd_ifconfig_network_0.merge_default_interface(set_0, tuple_0, str_0)
        str_1 = 'Q>8^`JFY #+Z-J'
        float_0 = 2.0
        bool_1 = False
        str_2 = '>\tt9h_R><Ib/'
        var_2 = generic_bsd_ifconfig_network_0.parse_interface_line(str_1)
        var_3 = generic_bsd_ifconfig_network_0.get_options(str_2)
        str_3 = 'VZjH.t#u"P"j:'
        generic_bsd_ifconfig_network_1 = module_0.GenericBsdIfconfigNetwork(generic_bsd_ifconfig_network_0)
        bytes_0 = b'\x92%^\x01.\xcfz'
        dict_0 = {bool_1: str_0, str_1: float_0}
        list_1 = [dict_0, str_3, bytes_0]
        str_4 = '%3\t\x0bUfku67}igd;EfK'
        str_5 = 'G"LDU*'
        generic_bsd_ifconfig_network_2 = module_0.GenericBsdIfconfigNetwork(set_0)
        var_4 = generic_bsd_ifconfig_network_2.parse_inet_line(str_4, str_5, list_1)
    except BaseException:
        pass