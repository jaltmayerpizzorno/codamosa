# Automatically generated by Pynguin.
import ansible.utils.version as module_0
import ansible.module_utils.compat.version as module_1

def test_case_0():
    pass

def test_case_1():
    str_0 = '0('
    alpha_0 = module_0._Alpha(str_0)
    semantic_version_0 = module_0.SemanticVersion()

def test_case_2():
    semantic_version_0 = module_0.SemanticVersion()
    var_0 = semantic_version_0.__ge__(semantic_version_0)
    var_1 = semantic_version_0.__repr__()
    dict_0 = {var_1: var_1, var_0: var_0}
    alpha_0 = module_0._Alpha(dict_0)
    var_2 = alpha_0.__repr__()

def test_case_3():
    int_0 = 81
    numeric_0 = module_0._Numeric(int_0)
    var_0 = numeric_0.__repr__()
    bytes_0 = b'O1\xce=2\x86\xaeI\x14x\x173\xa4]'
    alpha_0 = module_0._Alpha(bytes_0)
    str_0 = 'B\x0c@qe}TA\rzeRhb{t'
    var_1 = alpha_0.__eq__(str_0)

def test_case_4():
    str_0 = '0,Oqh3\t@'
    alpha_0 = module_0._Alpha(str_0)
    semantic_version_0 = module_0.SemanticVersion()
    var_0 = alpha_0.__lt__(str_0)

def test_case_5():
    float_0 = 2328.2625
    numeric_0 = module_0._Numeric(float_0)

def test_case_6():
    int_0 = 81
    numeric_0 = module_0._Numeric(int_0)
    var_0 = numeric_0.__repr__()
    bool_0 = True
    var_1 = numeric_0.__gt__(bool_0)
    bytes_0 = b'O1\xce=2\x86\xaeI\x14x\x173\xa4]'
    alpha_0 = module_0._Alpha(bytes_0)

def test_case_7():
    semantic_version_0 = module_0.SemanticVersion()

def test_case_8():
    semantic_version_0 = module_0.SemanticVersion()
    var_0 = semantic_version_0.__ge__(semantic_version_0)
    var_1 = semantic_version_0.__repr__()

def test_case_9():
    semantic_version_0 = module_0.SemanticVersion()
    var_0 = semantic_version_0.__ge__(semantic_version_0)

def test_case_10():
    str_0 = '0.1.2'
    semantic_version_0 = module_0.SemanticVersion()
    var_0 = semantic_version_0.__eq__(semantic_version_0)
    loose_version_0 = module_1.LooseVersion(str_0)
    var_1 = semantic_version_0.from_loose_version(loose_version_0)

def test_case_11():
    str_0 = '0.1.2'
    semantic_version_0 = module_0.SemanticVersion()
    var_0 = semantic_version_0.parse(str_0)

def test_case_12():
    str_0 = '1.2.3'
    loose_version_0 = module_1.LooseVersion(str_0)
    str_1 = '1.2.3-0.0'
    semantic_version_0 = module_0.SemanticVersion()
    var_0 = semantic_version_0.parse(str_1)

def test_case_13():
    str_0 = '1.0.0+build'
    semantic_version_0 = module_0.SemanticVersion(str_0)

def test_case_14():
    str_0 = '2.0.0'
    loose_version_0 = module_1.LooseVersion(str_0)
    semantic_version_0 = module_0.SemanticVersion(str_0)
    str_1 = '2.0.0+a.b.c.d'
    loose_version_1 = module_1.LooseVersion(str_1)
    semantic_version_1 = module_0.SemanticVersion(str_1)
    str_2 = '2.0.0-a.b.c.d+a.b.c.d'
    loose_version_2 = module_1.LooseVersion(str_2)
    semantic_version_2 = module_0.SemanticVersion(str_2)

def test_case_15():
    str_0 = '1.1.1+build.0'
    loose_version_0 = module_1.LooseVersion(str_0)
    semantic_version_0 = module_0.SemanticVersion(str_0)
    str_1 = '1.1.1-alpha-0'
    loose_version_1 = module_1.LooseVersion(str_1)
    semantic_version_1 = module_0.SemanticVersion(str_1)
    str_2 = '1.1.1'
    loose_version_2 = module_1.LooseVersion(str_2)
    semantic_version_2 = module_0.SemanticVersion(str_2)