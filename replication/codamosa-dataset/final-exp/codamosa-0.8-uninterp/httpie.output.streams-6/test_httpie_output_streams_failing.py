# Automatically generated by Pynguin.
import httpie.output.streams as module_0
import httpie.output.processing as module_1
import httpie.models as module_2

def test_case_0():
    try:
        h_t_t_p_message_0 = None
        base_stream_0 = module_0.BaseStream(h_t_t_p_message_0)
        iterable_0 = base_stream_0.iter_body()
    except BaseException:
        pass

def test_case_1():
    try:
        raw_stream_0 = module_0.RawStream()
    except BaseException:
        pass

def test_case_2():
    try:
        encoded_stream_0 = module_0.EncodedStream()
    except BaseException:
        pass

def test_case_3():
    try:
        conversion_0 = module_1.Conversion()
        list_0 = []
        str_0 = 'z>w>d0(|S'
        dict_0 = {str_0: str_0, str_0: str_0}
        formatting_0 = module_1.Formatting(list_0, **dict_0)
        buffered_pretty_stream_0 = module_0.BufferedPrettyStream(conversion_0, formatting_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'Ff\th:mR('
        str_1 = "I!9as^/s6<\x0b\n~'<\n0\x0bC5"
        dict_0 = {str_0: str_0, str_1: str_1, str_0: str_1}
        h_t_t_p_message_0 = module_2.HTTPMessage(dict_0)
        h_t_t_p_message_1 = None
        base_stream_0 = module_0.BaseStream(h_t_t_p_message_1)
        bytes_0 = base_stream_0.get_headers()
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = "\rA'L\tZ,qpctjq5ql"
        h_t_t_p_message_0 = module_2.HTTPMessage(str_0)
        list_0 = None
        base_stream_0 = module_0.BaseStream(h_t_t_p_message_0, list_0)
        conversion_0 = module_1.Conversion()
        buffered_pretty_stream_0 = None
        callable_0 = None
        base_stream_1 = module_0.BaseStream(h_t_t_p_message_0, buffered_pretty_stream_0, callable_0)
    except BaseException:
        pass