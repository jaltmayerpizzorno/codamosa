# Automatically generated by Pynguin.
import cookiecutter.replay as module_0

def test_case_0():
    try:
        str_0 = 'cooXkiecutter'
        str_1 = {str_0: str_0}
        var_0 = module_0.dump(str_0, str_0, str_1)
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = b'%~X\xa4qz\x93\xb0Y\xf6B\xa1#\x10\xcb\t\\'
        bytes_1 = b''
        int_0 = -3374
        var_0 = module_0.dump(bytes_1, int_0, bytes_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'T/N4'
        int_0 = 413
        str_1 = '\ncookiecutter.replay.\n\n-------------------\n'
        var_0 = module_0.dump(str_0, int_0, str_1)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = "O40O0T'sWv+"
        bytes_0 = b'z\xba\x15E\xb1\x81\xfe6P9\x8f7\xe2'
        var_0 = module_0.dump(str_0, str_0, bytes_0)
    except BaseException:
        pass

def test_case_4():
    try:
        float_0 = 243.0
        tuple_0 = ()
        var_0 = module_0.dump(float_0, tuple_0, float_0)
    except BaseException:
        pass

def test_case_5():
    try:
        tuple_0 = ()
        bool_0 = False
        var_0 = module_0.load(tuple_0, bool_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'cookiecutter'
        str_1 = {str_0: str_0}
        var_0 = module_0.dump(str_0, str_0, str_1)
        bytes_0 = b"\xc0'"
        dict_0 = {}
        var_1 = module_0.dump(bytes_0, str_0, dict_0)
    except BaseException:
        pass