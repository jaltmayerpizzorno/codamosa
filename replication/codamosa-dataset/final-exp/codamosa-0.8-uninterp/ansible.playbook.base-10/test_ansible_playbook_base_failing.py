# Automatically generated by Pynguin.
import ansible.playbook.base as module_0

def test_case_0():
    try:
        bytes_0 = b'\xf1\x0e\xc9\xd0\xe6M&\x882\xa1\x8c'
        field_attribute_base_0 = module_0.FieldAttributeBase()
        var_0 = field_attribute_base_0.load_data(bytes_0)
    except BaseException:
        pass

def test_case_1():
    try:
        list_0 = None
        base_0 = module_0.Base()
        field_attribute_base_0 = module_0.FieldAttributeBase()
        var_0 = field_attribute_base_0.load_data(list_0, base_0)
    except BaseException:
        pass

def test_case_2():
    try:
        field_attribute_base_0 = module_0.FieldAttributeBase()
        var_0 = field_attribute_base_0.copy()
        float_0 = -1218.75145
        dict_0 = {var_0: float_0, float_0: float_0, float_0: float_0}
        var_1 = field_attribute_base_0.get_validated_value(field_attribute_base_0, field_attribute_base_0, float_0, dict_0)
    except BaseException:
        pass

def test_case_3():
    try:
        field_attribute_base_0 = module_0.FieldAttributeBase()
        dict_0 = {field_attribute_base_0: field_attribute_base_0, field_attribute_base_0: field_attribute_base_0, field_attribute_base_0: field_attribute_base_0}
        bool_0 = False
        bool_1 = True
        tuple_0 = (dict_0, bool_0, bool_1, bool_0)
        var_0 = field_attribute_base_0.post_validate(tuple_0)
    except BaseException:
        pass

def test_case_4():
    try:
        field_attribute_base_0 = module_0.FieldAttributeBase()
        var_0 = field_attribute_base_0.serialize()
        var_1 = field_attribute_base_0.get_loader()
        field_attribute_base_1 = module_0.FieldAttributeBase()
        var_2 = field_attribute_base_1.get_variable_manager()
        list_0 = [var_1, var_1, field_attribute_base_1, field_attribute_base_1]
        field_attribute_base_2 = module_0.FieldAttributeBase()
        var_3 = field_attribute_base_2.deserialize(list_0)
    except BaseException:
        pass

def test_case_5():
    try:
        field_attribute_base_0 = module_0.FieldAttributeBase()
        dict_0 = {}
        var_0 = field_attribute_base_0.load_data(dict_0)
        var_1 = field_attribute_base_0.copy()
        float_0 = -1218.75145
        dict_1 = {var_1: float_0, float_0: float_0, float_0: float_0}
        var_2 = field_attribute_base_0.serialize()
        var_3 = field_attribute_base_0.get_validated_value(field_attribute_base_0, field_attribute_base_0, float_0, dict_1)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'I&+s\t*)d%{"K(\nd{Bx'
        dict_0 = {str_0: str_0}
        list_0 = [str_0, dict_0, dict_0]
        base_meta_0 = module_0.BaseMeta(*list_0)
    except BaseException:
        pass