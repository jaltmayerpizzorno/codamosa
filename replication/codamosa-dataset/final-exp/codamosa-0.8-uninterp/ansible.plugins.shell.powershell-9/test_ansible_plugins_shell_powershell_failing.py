# Automatically generated by Pynguin.
import ansible.plugins.shell.powershell as module_0

def test_case_0():
    try:
        shell_module_0 = module_0.ShellModule()
        str_0 = ':7o3S'
        var_0 = shell_module_0.build_module_command(shell_module_0, str_0, str_0)
        var_1 = shell_module_0.join_path()
    except BaseException:
        pass

def test_case_1():
    try:
        tuple_0 = None
        shell_module_0 = module_0.ShellModule()
        var_0 = shell_module_0.get_remote_filename(tuple_0)
    except BaseException:
        pass

def test_case_2():
    try:
        shell_module_0 = module_0.ShellModule()
        str_0 = '91:9f\n|\\&Tc@'
        var_0 = shell_module_0.path_has_trailing_slash(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'transport'
        dict_0 = {str_0: str_0}
        int_0 = -517
        str_1 = 'n.&[\r3'
        shell_module_0 = module_0.ShellModule()
        var_0 = shell_module_0.exists(str_1)
        shell_module_1 = module_0.ShellModule()
        var_1 = shell_module_1.chmod(dict_0, int_0)
    except BaseException:
        pass

def test_case_4():
    try:
        shell_module_0 = module_0.ShellModule()
        str_0 = ''
        str_1 = '/usr/bin/python'
        str_2 = 'foo'
        var_0 = shell_module_0.build_module_command(str_0, str_0, str_1, str_2)
        var_1 = print(shell_module_0)
        str_3 = '#!/usr/bin/env python'
        var_2 = shell_module_0.build_module_command(str_0, str_3, str_1, str_2)
        var_3 = print(var_2)
        var_4 = shell_module_0.build_module_command(str_0, str_3, str_1, str_2)
        var_5 = print(var_4)
        str_4 = "U$e'-Lvr*\x0c&4Sd=Y:"
        str_5 = "o><H/Q8zk`q${~+'"
        dict_0 = None
        tuple_0 = (str_4, str_5, dict_0, shell_module_0)
        tuple_1 = (tuple_0, shell_module_0)
        dict_1 = {str_1: str_2, str_2: var_3, var_2: var_4, tuple_1: tuple_1}
        bool_0 = True
        dict_2 = {var_3: bool_0, tuple_0: dict_0}
        var_6 = shell_module_0.chown(dict_1, dict_2)
    except BaseException:
        pass

def test_case_5():
    try:
        int_0 = -3357
        int_1 = 257
        set_0 = {int_0, int_0, int_0}
        shell_module_0 = module_0.ShellModule()
        var_0 = shell_module_0.set_user_facl(int_0, int_1, set_0)
    except BaseException:
        pass

def test_case_6():
    try:
        shell_module_0 = module_0.ShellModule()
        var_0 = shell_module_0.mkdtemp()
    except BaseException:
        pass

def test_case_7():
    try:
        shell_module_0 = module_0.ShellModule()
        float_0 = 1.0
        var_0 = shell_module_0.wrap_for_exec(float_0)
        str_0 = '7OlR5-X[+\x0b}XS"yl'
        dict_0 = {str_0: shell_module_0, str_0: shell_module_0, str_0: str_0}
        var_1 = shell_module_0.remove(dict_0)
        float_1 = None
        var_2 = shell_module_0.path_has_trailing_slash(float_1)
    except BaseException:
        pass

def test_case_8():
    try:
        shell_module_0 = module_0.ShellModule()
        str_0 = ':7o3S'
        str_1 = 'c:/abcdY'
        var_0 = shell_module_0.build_module_command(shell_module_0, str_0, str_0)
        list_0 = [str_1, var_0]
        var_1 = shell_module_0.join_path(*list_0)
        var_2 = shell_module_0.mkdtemp()
    except BaseException:
        pass

def test_case_9():
    try:
        shell_module_0 = module_0.ShellModule()
        str_0 = 'c:\\temp'
        var_0 = shell_module_0.mkdtemp(str_0)
    except BaseException:
        pass

def test_case_10():
    try:
        bytes_0 = b'\x13\xf8\x9f\xee\x17\xc4b\xa0b\x05'
        str_0 = 'title'
        shell_module_0 = module_0.ShellModule()
        var_0 = shell_module_0.remove(bytes_0, str_0)
    except BaseException:
        pass

def test_case_11():
    try:
        shell_module_0 = module_0.ShellModule()
        str_0 = 'ab d/'
        var_0 = shell_module_0.path_has_trailing_slash(str_0)
        var_1 = shell_module_0.build_module_command(shell_module_0, str_0, str_0)
        var_2 = shell_module_0.mkdtemp()
    except BaseException:
        pass

def test_case_12():
    try:
        shell_module_0 = module_0.ShellModule()
        shell_module_1 = module_0.ShellModule()
        str_0 = "'%s' keyword cannot be used without 'block'"
        var_0 = shell_module_1.expand_user(str_0)
        str_1 = '_wT'
        var_1 = shell_module_0.expand_user(str_1, shell_module_0)
        list_0 = []
        var_2 = shell_module_1.expand_user(list_0)
        var_3 = shell_module_0.mkdtemp(shell_module_0)
    except BaseException:
        pass

def test_case_13():
    try:
        shell_module_0 = module_0.ShellModule()
        str_0 = '"abc"'
        var_0 = shell_module_0.path_has_trailing_slash(str_0)
    except BaseException:
        pass