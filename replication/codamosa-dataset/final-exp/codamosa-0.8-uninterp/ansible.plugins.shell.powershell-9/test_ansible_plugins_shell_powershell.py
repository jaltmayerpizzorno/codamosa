# Automatically generated by Pynguin.
import ansible.plugins.shell.powershell as module_0

def test_case_0():
    pass

def test_case_1():
    shell_module_0 = module_0.ShellModule()
    var_0 = shell_module_0.env_prefix()
    str_0 = ''
    dict_0 = {str_0: shell_module_0}
    var_1 = shell_module_0.expand_user(dict_0)

def test_case_2():
    shell_module_0 = module_0.ShellModule()
    str_0 = 'test.exe'
    var_0 = shell_module_0.get_remote_filename(str_0)
    str_1 = 'test.txt'
    var_1 = shell_module_0.get_remote_filename(str_1)

def test_case_3():
    shell_module_0 = module_0.ShellModule()
    var_0 = shell_module_0.remove(shell_module_0)

def test_case_4():
    shell_module_0 = module_0.ShellModule()
    var_0 = shell_module_0.expand_user(shell_module_0)

def test_case_5():
    dict_0 = None
    shell_module_0 = module_0.ShellModule()
    bool_0 = False
    var_0 = shell_module_0.expand_user(bool_0)
    var_1 = shell_module_0.exists(dict_0)

def test_case_6():
    shell_module_0 = module_0.ShellModule()
    var_0 = shell_module_0.checksum(shell_module_0)

def test_case_7():
    shell_module_0 = module_0.ShellModule()
    str_0 = 'c:/abcdY'
    var_0 = shell_module_0.build_module_command(shell_module_0, str_0, str_0)

def test_case_8():
    shell_module_0 = module_0.ShellModule()
    str_0 = ''
    str_1 = '/usr/bin/python'
    str_2 = 'foo'
    var_0 = shell_module_0.build_module_command(str_0, str_0, str_1, str_2)
    var_1 = print(var_0)
    str_3 = '#!/usr/bin/env python'
    var_2 = shell_module_0.build_module_command(str_0, str_3, str_1, str_2)
    var_3 = print(var_2)
    var_4 = shell_module_0.build_module_command(str_0, str_3, str_1, str_2)
    var_5 = print(var_4)

def test_case_9():
    shell_module_0 = None
    shell_module_1 = module_0.ShellModule()
    var_0 = shell_module_1.expand_user(shell_module_0)

def test_case_10():
    var_0 = None
    shell_module_0 = module_0.ShellModule()
    str_0 = '~'
    str_1 = ''
    var_1 = shell_module_0.expand_user(str_0, str_1)
    str_2 = '~\\'
    var_2 = shell_module_0.expand_user(str_2, str_1)

def test_case_11():
    shell_module_0 = module_0.ShellModule()
    shell_module_1 = module_0.ShellModule()
    str_0 = ''
    var_0 = shell_module_1.expand_user(str_0)
    str_1 = '_wT'
    var_1 = shell_module_0.expand_user(str_1, shell_module_0)
    int_0 = 744
    bool_0 = False
    list_0 = []
    var_2 = shell_module_1.expand_user(list_0)
    set_0 = {bool_0, int_0, int_0}
    str_2 = "\n            If (Test-Path '[<ansible.plugins.shell.powershell.ShellModule object at 0x7f3d795704c0>, <ansible.plugins.shell.powershell.ShellModule object at 0x7f3d795704c0>]')\n            {\n                $res = 0;\n            }\n            Else\n            {\n                $res = 1;\n            }\n            Write-Output '$res';\n            Exit $res;\n         "
    bool_1 = False
    var_3 = shell_module_0.build_module_command(set_0, str_2, str_0, bool_1)

def test_case_12():
    str_0 = '/usr/bin/env'
    shell_module_0 = module_0.ShellModule()
    str_1 = '#!powershell'
    str_2 = 'foo.ps1'
    var_0 = shell_module_0.build_module_command(str_1, str_1, str_2)
    var_1 = shell_module_0.build_module_command(str_0, str_1, str_2, str_0)

def test_case_13():
    var_0 = None
    str_0 = '/usr/bin/env'
    shell_module_0 = module_0.ShellModule()
    str_1 = '#!powershell'
    str_2 = '_<f\x0bc'
    var_1 = shell_module_0.build_module_command(str_1, str_1, str_2)
    var_2 = shell_module_0.build_module_command(str_0, str_1, str_2, str_0)

def test_case_14():
    var_0 = None
    shell_module_0 = module_0.ShellModule()
    shell_module_1 = module_0.ShellModule()
    str_0 = ''
    var_1 = shell_module_1.expand_user(str_0)
    str_1 = '_wT'
    var_2 = shell_module_0.expand_user(str_1, shell_module_0)
    int_0 = 744
    list_0 = []
    str_2 = '|<IE^P[(jiMA(uk'
    bytes_0 = None
    int_1 = -1757
    list_1 = []
    set_0 = None
    dict_0 = {var_0: str_2, int_0: int_1, str_0: var_1, bytes_0: str_0}
    var_3 = shell_module_0.mkdtemp(list_0, list_1, set_0, dict_0)