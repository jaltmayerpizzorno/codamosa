# Automatically generated by Pynguin.
import ansible.plugins.callback.junit as module_0

def test_case_0():
    try:
        task_data_0 = None
        callback_module_0 = None
        str_0 = ''
        tuple_0 = (task_data_0, task_data_0)
        str_1 = '$"TUqV\r[Aa\\b3]K$\t#'
        host_data_0 = module_0.HostData(callback_module_0, str_0, tuple_0, str_1)
        callback_module_1 = module_0.CallbackModule()
        var_0 = callback_module_1.v2_playbook_on_handler_task_start(task_data_0)
    except BaseException:
        pass

def test_case_1():
    try:
        float_0 = 354.948725
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_on_skipped(float_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'zmaE'
        callback_module_0 = module_0.CallbackModule()
        int_0 = 391
        bytes_0 = b'\x0c\x1a\xd5\xa3\xb6\xe6\x1f\xb1\xbfu^3'
        float_0 = 1333.16243
        bool_0 = True
        tuple_0 = (int_0, bytes_0, float_0, bool_0)
        var_0 = callback_module_0.v2_playbook_on_stats(tuple_0)
        callback_module_1 = module_0.CallbackModule()
        var_1 = callback_module_1.v2_playbook_on_start(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        callback_module_0 = module_0.CallbackModule()
        complex_0 = None
        var_0 = callback_module_0.v2_playbook_on_stats(complex_0)
        callback_module_1 = module_0.CallbackModule()
        var_1 = callback_module_1.v2_playbook_on_play_start(callback_module_0)
    except BaseException:
        pass

def test_case_4():
    try:
        float_0 = None
        list_0 = [float_0, float_0, float_0]
        list_1 = [list_0, list_0, float_0]
        bytes_0 = b'/\x81/r\xab!4\xd2\x12\xac#\xbe'
        bytes_1 = b'Cp~\xfc\xd9H\xf8\x036rw\xf1'
        callback_module_0 = module_0.CallbackModule()
        tuple_0 = (callback_module_0, bytes_1)
        bool_0 = False
        bytes_2 = b'\xc6\x16\xf4<\xb9\x19;G'
        dict_0 = {callback_module_0: list_0, callback_module_0: bool_0}
        str_0 = None
        host_data_0 = module_0.HostData(tuple_0, str_0, tuple_0, float_0)
        task_data_0 = module_0.TaskData(bool_0, tuple_0, bytes_2, dict_0, host_data_0)
        bool_1 = False
        task_data_1 = module_0.TaskData(bytes_1, tuple_0, task_data_0, bool_1, bool_0)
        int_0 = 303
        host_data_1 = module_0.HostData(list_1, bytes_0, task_data_1, int_0)
        set_0 = None
        set_1 = {host_data_1, set_0}
        callback_module_1 = module_0.CallbackModule()
        var_0 = callback_module_1.v2_playbook_on_stats(set_1)
        callback_module_2 = module_0.CallbackModule()
        callback_module_3 = module_0.CallbackModule()
        var_1 = callback_module_0.v2_runner_on_no_hosts(tuple_0)
    except BaseException:
        pass

def test_case_5():
    try:
        int_0 = -629
        bool_0 = True
        list_0 = [int_0, int_0, int_0, int_0]
        callback_module_0 = module_0.CallbackModule()
        callback_module_1 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_task_start(bool_0, list_0)
    except BaseException:
        pass

def test_case_6():
    try:
        callback_module_0 = module_0.CallbackModule()
        str_0 = '+b5?o$u\x0c'
        var_0 = callback_module_0.v2_playbook_on_stats(str_0)
        int_0 = 2066
        list_0 = [callback_module_0]
        bool_0 = True
        task_data_0 = module_0.TaskData(int_0, list_0, list_0, list_0, bool_0)
        var_1 = callback_module_0.v2_playbook_on_cleanup_task_start(task_data_0)
    except BaseException:
        pass

def test_case_7():
    try:
        callback_module_0 = module_0.CallbackModule()
        int_0 = 2519
        var_0 = callback_module_0.v2_runner_on_failed(int_0, int_0)
    except BaseException:
        pass

def test_case_8():
    try:
        bytes_0 = None
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_on_failed(bytes_0)
    except BaseException:
        pass

def test_case_9():
    try:
        callback_module_0 = None
        callback_module_1 = module_0.CallbackModule()
        var_0 = callback_module_1.v2_runner_on_ok(callback_module_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = 'H<|F%&'
        callback_module_0 = module_0.CallbackModule()
        list_0 = [str_0, callback_module_0, str_0, callback_module_0]
        tuple_0 = (list_0,)
        var_0 = callback_module_0.v2_playbook_on_include(tuple_0)
    except BaseException:
        pass

def test_case_11():
    try:
        callback_module_0 = module_0.CallbackModule()
        int_0 = 2519
        tuple_0 = ()
        var_0 = callback_module_0.v2_playbook_on_stats(tuple_0)
        list_0 = [callback_module_0, int_0, int_0]
        bool_0 = False
        task_data_0 = module_0.TaskData(tuple_0, list_0, list_0, list_0, bool_0)
        bytes_0 = b'\xd5\xa3\x94oL'
        float_0 = -1386.0
        var_1 = callback_module_0.v2_runner_on_failed(bytes_0, float_0)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = '1'
        str_1 = 'name1'
        str_2 = 'path1'
        task_data_0 = module_0.TaskData(str_0, str_1, str_2, str_0, str_1)
        str_3 = 'staus1'
        str_4 = 'result1'
        host_data_0 = module_0.HostData(str_0, str_1, str_3, str_4)
        var_0 = task_data_0.add_host(host_data_0)
        var_1 = task_data_0.add_host(host_data_0)
    except BaseException:
        pass