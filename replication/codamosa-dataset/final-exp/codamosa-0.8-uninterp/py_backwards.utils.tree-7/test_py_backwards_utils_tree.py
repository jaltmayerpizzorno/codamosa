# Automatically generated by Pynguin.
import typed_ast.ast3 as module_0
import py_backwards.utils.tree as module_1

def test_case_0():
    pass

def test_case_1():
    str_0 = 'def fn(x):\n    while True:\n        yield x'
    str_1 = '<test file>'
    str_2 = 'exec'
    var_0 = module_0.parse(str_0, str_1, str_2)
    int_0 = 0
    var_1 = var_0.body[int_0]
    var_2 = var_1.body[int_0]
    var_3 = var_2.body[int_0]
    a_s_t_0 = module_1.get_parent(var_0, var_3)
    var_4 = var_0.body[int_0]
    var_5 = var_4.body[int_0]
    var_6 = var_5.body
    module_1.replace_at(int_0, a_s_t_0, var_6)

def test_case_2():
    str_0 = '1 + 1'
    var_0 = module_0.parse(str_0)
    int_0 = 0
    var_1 = var_0.body[int_0]
    var_2 = var_1.value.left
    tuple_0 = module_1.get_non_exp_parent_and_index(var_0, var_2)

def test_case_3():
    str_0 = '1 + 1'
    var_0 = module_0.parse(str_0)
    int_0 = 0
    var_1 = var_0.body[int_0]
    var_2 = var_0.body[int_0]
    var_3 = var_2.value.left
    tuple_0 = module_1.get_non_exp_parent_and_index(var_0, var_3)
    tuple_1 = module_1.get_non_exp_parent_and_index(var_0, var_2)