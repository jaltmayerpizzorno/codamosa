# Automatically generated by Pynguin.
import sanic.utils as module_0
import pathlib as module_1

def test_case_0():
    try:
        str_0 = 's?uC*a-k!mNCd,_O]T'
        bool_0 = module_0.str_to_bool(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '$#"uOmd`n'
        var_0 = module_0.load_module_from_file_location(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'ST'
        var_0 = module_0.load_module_from_file_location(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'\xf7\xa1Gf*\xbb\x04L\xc7\x8bP\x11\xeb\x03(}\x1a\r\xa9'
        str_0 = "xU3!M[Vz'6.{(DHd\\:sW"
        dict_0 = {str_0: str_0}
        var_0 = module_0.load_module_from_file_location(bytes_0, **dict_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = ']xHfcS[Ut[f?.~9A\\j'
        list_0 = [str_0]
        var_0 = module_0.load_module_from_file_location(str_0, *list_0)
    except BaseException:
        pass

def test_case_5():
    try:
        path_0 = module_1.Path()
        var_0 = module_0.load_module_from_file_location(path_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = '$5some_env_var}/some_mod(epy'
        var_0 = module_0.load_module_from_file_location(str_0, str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'true'
        bool_0 = module_0.str_to_bool(str_0)
        str_1 = 'TRUE'
        bool_1 = module_0.str_to_bool(str_1)
        str_2 = 'yes'
        bool_2 = module_0.str_to_bool(str_2)
        str_3 = 'yEs'
        bool_3 = module_0.str_to_bool(str_3)
        str_4 = 'Y'
        bool_4 = module_0.str_to_bool(str_4)
        str_5 = 'on'
        bool_5 = module_0.str_to_bool(str_5)
        str_6 = 'ON'
        bool_6 = module_0.str_to_bool(str_6)
        str_7 = '1'
        bool_7 = module_0.str_to_bool(str_7)
        str_8 = 'FALSE'
        bool_8 = module_0.str_to_bool(str_8)
        str_9 = 'no'
        bool_9 = module_0.str_to_bool(str_9)
        str_10 = 'nO'
        bool_10 = module_0.str_to_bool(str_10)
        dict_0 = {}
        var_0 = module_0.load_module_from_file_location(str_4, **dict_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = '${some_env_var}/some_modue.py'
        var_0 = module_0.load_module_from_file_location(str_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'tests/data/sanic_app.py'
        var_0 = module_0.load_module_from_file_location(str_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = '${PWD}/tests/test_loader.py'
        var_0 = module_0.load_module_from_file_location(str_0)
    except BaseException:
        pass