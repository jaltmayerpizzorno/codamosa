# Automatically generated by Pynguin.
import ansible.utils._junit_xml as module_0
import decimal as module_1
import xml.etree.ElementTree as module_2

def test_case_0():
    try:
        str_0 = 'ansible_play_hosts_all'
        test_failure_0 = module_0.TestFailure(str_0, str_0, str_0)
        int_0 = -1572
        test_error_0 = module_0.TestError()
        list_0 = [test_error_0, test_error_0]
        test_case_0 = module_0.TestCase(str_0, int_0, str_0, str_0, list_0, str_0)
        var_0 = test_case_0.__eq__(test_failure_0)
        test_suite_0 = module_0.TestSuite(str_0)
        list_1 = [test_suite_0, test_suite_0]
        test_suites_0 = module_0.TestSuites(str_0, list_1)
        test_result_0 = module_0.TestResult()
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '\n&`'
        test_suite_0 = module_0.TestSuite(str_0, str_0, str_0, str_0, str_0)
        element_0 = test_suite_0.get_xml_element()
    except BaseException:
        pass

def test_case_2():
    try:
        test_suites_0 = module_0.TestSuites()
        str_0 = test_suites_0.to_pretty_xml()
        str_1 = 'eVO 46%4^slce'
        str_2 = 'D:I'
        test_failure_0 = module_0.TestFailure(str_2)
        var_0 = test_failure_0.__repr__()
        element_0 = test_suites_0.get_xml_element()
        test_suite_0 = module_0.TestSuite(str_1, str_1, str_2, str_2, element_0, str_2)
        element_1 = test_suite_0.get_xml_element()
    except BaseException:
        pass

def test_case_3():
    try:
        float_0 = -1241.49
        test_suites_0 = module_0.TestSuites(float_0)
        element_0 = test_suites_0.get_xml_element()
        str_0 = 'cxd%j#=my5Kz'
        str_1 = ')e\nOFh)|CA!4jep\x0cK|C'
        dict_0 = {str_0: str_1, str_0: str_0}
        test_suite_0 = module_0.TestSuite(str_0, str_0, dict_0, str_1)
        list_0 = [test_suite_0, test_suite_0]
        test_suites_1 = module_0.TestSuites(str_0, list_0)
        str_2 = test_suites_1.to_pretty_xml()
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = '5]`Vr+\r\n'
        bool_0 = False
        decimal_0 = module_1.Decimal()
        test_case_0 = module_0.TestCase(str_0, bool_0, str_0, decimal_0, str_0, str_0, str_0)
        str_1 = 'WINRM CLOSE SHELL: %s'
        optional_0 = None
        test_suite_0 = module_0.TestSuite(str_1, str_0, optional_0)
        element_0 = test_case_0.get_xml_element()
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = ':<V:iY"d^'
        str_1 = '8i%'
        element_tree_0 = module_2.ElementTree()
        str_2 = 'JAy\x0bV"b~7)('
        str_3 = '_)\x0bw(D@4fc.gj\\5Dxb'
        str_4 = '_original_path'
        test_suites_0 = module_0.TestSuites(str_1)
        var_0 = test_suites_0.__repr__()
        dict_0 = {str_2: str_3, str_0: str_3, str_2: str_1, str_0: str_4}
        test_failure_0 = module_0.TestFailure(str_0)
        list_0 = [test_failure_0, test_failure_0]
        bool_0 = False
        test_case_0 = module_0.TestCase(str_3, list_0, bool_0)
        list_1 = [test_case_0, test_case_0, test_case_0, test_case_0]
        test_suite_0 = module_0.TestSuite(str_1, str_0, str_0, element_tree_0, dict_0, list_1, str_4)
        element_0 = test_suite_0.get_xml_element()
    except BaseException:
        pass