# Automatically generated by Pynguin.
import typesystem.formats as module_0

def test_case_0():
    try:
        str_0 = 'QHwb'
        base_format_0 = module_0.BaseFormat()
        validation_error_0 = base_format_0.validation_error(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '+00:00'
        date_format_0 = module_0.DateFormat()
        date_0 = date_format_0.validate(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        date_time_format_0 = module_0.DateTimeFormat()
        str_0 = '2020-04-19T11:03:10Z'
        datetime_0 = date_time_format_0.validate(str_0)
        int_0 = 4
        base_format_0 = module_0.BaseFormat()
        var_0 = base_format_0.validate(int_0)
    except BaseException:
        pass

def test_case_3():
    try:
        base_format_0 = module_0.BaseFormat()
        base_format_1 = module_0.BaseFormat()
        base_format_2 = module_0.BaseFormat()
        optional_0 = base_format_2.serialize(base_format_1)
    except BaseException:
        pass

def test_case_4():
    try:
        int_0 = -979
        date_format_0 = module_0.DateFormat()
        date_0 = date_format_0.validate(int_0)
    except BaseException:
        pass

def test_case_5():
    try:
        int_0 = 1180
        str_0 = '&"-iM'
        list_0 = [int_0, int_0, str_0]
        date_format_0 = module_0.DateFormat()
        optional_0 = date_format_0.serialize(list_0)
    except BaseException:
        pass

def test_case_6():
    try:
        u_u_i_d_0 = None
        date_format_0 = module_0.DateFormat()
        optional_0 = date_format_0.serialize(u_u_i_d_0)
        date_time_format_0 = module_0.DateTimeFormat()
        datetime_0 = date_time_format_0.validate(u_u_i_d_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = '+00:00'
        time_format_0 = module_0.TimeFormat()
        bool_0 = time_format_0.is_native_type(str_0)
        date_format_0 = module_0.DateFormat()
        date_0 = date_format_0.validate(str_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = 'si3hm7q\r]j+o\x0cu'
        time_format_0 = module_0.TimeFormat()
        time_0 = time_format_0.validate(str_0)
    except BaseException:
        pass

def test_case_9():
    try:
        tuple_0 = None
        time_format_0 = module_0.TimeFormat()
        optional_0 = time_format_0.serialize(tuple_0)
        str_0 = '31:11459'
        time_0 = time_format_0.validate(str_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = '2!]uH@ZR'
        float_0 = 3924.801711
        date_time_format_0 = module_0.DateTimeFormat()
        bool_0 = date_time_format_0.is_native_type(float_0)
        date_format_0 = module_0.DateFormat()
        date_0 = date_format_0.validate(str_0)
    except BaseException:
        pass

def test_case_11():
    try:
        date_time_format_0 = module_0.DateTimeFormat()
        str_0 = '2019-05-30T19:20:30.456789+01:00'
        datetime_0 = date_time_format_0.validate(str_0)
        str_1 = '2019-05-30T19:20:30.456789-0d:00'
        datetime_1 = date_time_format_0.validate(str_1)
    except BaseException:
        pass

def test_case_12():
    try:
        date_time_format_0 = module_0.DateTimeFormat()
        optional_0 = date_time_format_0.serialize(date_time_format_0)
    except BaseException:
        pass

def test_case_13():
    try:
        float_0 = 2216.48
        u_u_i_d_format_0 = module_0.UUIDFormat()
        bool_0 = u_u_i_d_format_0.is_native_type(float_0)
        time_format_0 = module_0.TimeFormat()
        str_0 = '31:11:5\\'
        time_0 = time_format_0.validate(str_0)
    except BaseException:
        pass

def test_case_14():
    try:
        date_format_0 = module_0.DateFormat()
        str_0 = '2019007'
        u_u_i_d_format_0 = module_0.UUIDFormat()
        u_u_i_d_0 = u_u_i_d_format_0.validate(str_0)
    except BaseException:
        pass

def test_case_15():
    try:
        bool_0 = False
        u_u_i_d_format_0 = module_0.UUIDFormat()
        str_0 = u_u_i_d_format_0.serialize(bool_0)
        u_u_i_d_0 = u_u_i_d_format_0.validate(str_0)
    except BaseException:
        pass

def test_case_16():
    try:
        date_format_0 = module_0.DateFormat()
        str_0 = '20190307'
        date_format_1 = module_0.DateFormat()
        bool_0 = date_format_0.is_native_type(date_format_1)
        date_0 = date_format_0.validate(str_0)
    except BaseException:
        pass

def test_case_17():
    try:
        u_u_i_d_format_0 = module_0.UUIDFormat()
        base_format_0 = module_0.BaseFormat()
        bool_0 = base_format_0.is_native_type(u_u_i_d_format_0)
    except BaseException:
        pass

def test_case_18():
    try:
        time_format_0 = module_0.TimeFormat()
        date_time_format_0 = module_0.DateTimeFormat()
        optional_0 = time_format_0.serialize(date_time_format_0)
    except BaseException:
        pass

def test_case_19():
    try:
        tuple_0 = None
        date_time_format_0 = module_0.DateTimeFormat()
        optional_0 = date_time_format_0.serialize(tuple_0)
        str_0 = '12:11:59'
        dict_0 = {}
        time_format_0 = module_0.TimeFormat(**dict_0)
        time_0 = time_format_0.validate(str_0)
        str_1 = '2008-02-30T12:12:12'
        date_time_format_1 = module_0.DateTimeFormat(**dict_0)
        datetime_0 = date_time_format_1.validate(str_1)
    except BaseException:
        pass

def test_case_20():
    try:
        date_format_0 = module_0.DateFormat()
        str_0 = '2016-07-32'
        date_0 = date_format_0.validate(str_0)
    except BaseException:
        pass

def test_case_21():
    try:
        date_time_format_0 = module_0.DateTimeFormat()
        str_0 = '2008-02-30T12:12:12'
        datetime_0 = date_time_format_0.validate(str_0)
    except BaseException:
        pass

def test_case_22():
    try:
        date_time_format_0 = module_0.DateTimeFormat()
        str_0 = '2019-05-30T19:20:30.456789+01:00'
        datetime_0 = date_time_format_0.validate(str_0)
        date_format_0 = module_0.DateFormat()
        optional_0 = date_format_0.serialize(datetime_0)
        list_0 = None
        str_1 = 'q?"U1#'
        str_2 = 'd&WX'
        dict_0 = {str_1: list_0, str_2: date_time_format_0}
        date_time_format_1 = module_0.DateTimeFormat(*list_0, **dict_0)
    except BaseException:
        pass

def test_case_23():
    try:
        date_time_format_0 = module_0.DateTimeFormat()
        str_0 = '2019-05-30T19:20:30.456789+01:00'
        datetime_0 = date_time_format_0.validate(str_0)
        optional_0 = date_time_format_0.serialize(datetime_0)
        time_format_0 = module_0.TimeFormat()
        list_0 = []
        time_format_1 = module_0.TimeFormat(*list_0)
        str_1 = 'YXb`ne"n'
        time_0 = time_format_1.validate(str_1)
    except BaseException:
        pass

def test_case_24():
    try:
        time_format_0 = module_0.TimeFormat()
        str_0 = '31:11:5\\'
        time_0 = time_format_0.validate(str_0)
    except BaseException:
        pass