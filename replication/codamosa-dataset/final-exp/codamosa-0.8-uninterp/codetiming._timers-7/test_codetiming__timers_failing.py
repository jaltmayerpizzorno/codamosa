# Automatically generated by Pynguin.
import codetiming._timers as module_0

def test_case_0():
    try:
        str_0 = "Uf9J]\nfm\x0c'&A;="
        bool_0 = False
        str_1 = '\x0ct~{&'
        dict_0 = {str_0: bool_0, str_1: str_1, str_1: str_1}
        timers_0 = module_0.Timers(**dict_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'FI5I%l\\BXq>Y-0#?f}E'
        timers_0 = module_0.Timers()
        float_0 = timers_0.total(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'GP$#\t(?AD1xET%|LG'
        timers_0 = module_0.Timers()
        float_0 = timers_0.count(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'milliseconds'
        dict_0 = {}
        timers_0 = module_0.Timers(**dict_0)
        float_0 = timers_0.min(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = "B{J)'aG\t'n(j\nO~C"
        timers_0 = module_0.Timers()
        float_0 = timers_0.max(str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = '\x0c`$s(*W{:@G'
        timers_0 = module_0.Timers()
        float_0 = timers_0.stdev(str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'Ekvc6K%.6!\\ *j>W;,Y'
        str_1 = 'GP$#\t(?AD1xET%|LG'
        timers_0 = module_0.Timers()
        float_0 = -1023.205694
        timers_0.add(str_1, float_0)
        float_1 = timers_0.stdev(str_1)
        complex_0 = None
        float_2 = timers_0.apply(complex_0, str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'GP$#\t(?AD1xET%|LG'
        timers_0 = module_0.Timers()
        float_0 = -1023.205694
        timers_0.clear()
        float_1 = 250.47
        timers_0.add(str_0, float_1)
        timers_0.add(str_0, float_0)
        float_2 = timers_0.stdev(str_0)
        float_3 = timers_0.count(str_0)
        float_4 = timers_0.min(str_0)
        str_1 = 'b[/tTQ9&t\tGd|N\nYk'
        str_2 = ''
        dict_0 = {str_1: str_0, str_1: str_0, str_1: str_0, str_2: str_0}
        timers_1 = module_0.Timers(**dict_0)
    except BaseException:
        pass