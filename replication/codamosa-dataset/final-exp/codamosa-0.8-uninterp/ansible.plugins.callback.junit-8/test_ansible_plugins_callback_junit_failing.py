# Automatically generated by Pynguin.
import ansible.plugins.callback.junit as module_0

def test_case_0():
    try:
        bytes_0 = b"\x1a\xf6\xce\x95\xee\xbf\xc1'\x0b"
        float_0 = 1096.01011
        str_0 = 'z_."'
        bool_0 = False
        host_data_0 = module_0.HostData(bytes_0, float_0, str_0, bool_0)
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_stats(host_data_0)
        callback_module_1 = module_0.CallbackModule()
        str_1 = '\tH9]DNOS'
        var_1 = callback_module_1.v2_runner_on_ok(str_1)
    except BaseException:
        pass

def test_case_1():
    try:
        dict_0 = {}
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_handler_task_start(dict_0)
    except BaseException:
        pass

def test_case_2():
    try:
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_on_failed(callback_module_0, callback_module_0)
    except BaseException:
        pass

def test_case_3():
    try:
        float_0 = 376.705
        str_0 = ''
        set_0 = {str_0, float_0, float_0}
        callback_module_0 = module_0.CallbackModule()
        host_data_0 = module_0.HostData(float_0, str_0, set_0, callback_module_0)
        callback_module_1 = module_0.CallbackModule()
        var_0 = callback_module_1.v2_runner_on_no_hosts(host_data_0)
    except BaseException:
        pass

def test_case_4():
    try:
        complex_0 = None
        str_0 = 'E-!CfzrT[_"gS!O1'
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_task_start(complex_0, str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        float_0 = 0.1
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_cleanup_task_start(float_0)
    except BaseException:
        pass

def test_case_6():
    try:
        bytes_0 = b'\xf7.:\x1c\x1an\x15\x0c\xa8\xcb\x14\xf1\x89\xcb\xf2\xe2'
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_on_failed(bytes_0)
    except BaseException:
        pass

def test_case_7():
    try:
        callback_module_0 = module_0.CallbackModule()
        bool_0 = True
        callback_module_1 = module_0.CallbackModule()
        var_0 = callback_module_1.v2_playbook_on_stats(bool_0)
        callback_module_2 = module_0.CallbackModule()
        int_0 = 90
        var_1 = callback_module_1.v2_runner_on_ok(int_0)
    except BaseException:
        pass

def test_case_8():
    try:
        tuple_0 = ()
        str_0 = 'R#"czz9|N7'
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: tuple_0}
        host_data_0 = module_0.HostData(tuple_0, str_0, dict_0, tuple_0)
        list_0 = [host_data_0, dict_0]
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_on_skipped(list_0)
    except BaseException:
        pass

def test_case_9():
    try:
        host_data_0 = None
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_stats(host_data_0)
        tuple_0 = ()
        callback_module_1 = module_0.CallbackModule()
        var_1 = callback_module_1.v2_playbook_on_include(tuple_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = ''
        task_data_0 = module_0.TaskData(str_0, str_0, str_0, str_0, str_0)
        str_1 = 'ok'
        str_2 = 'included'
        str_3 = 'include'
        host_data_0 = module_0.HostData(str_0, str_0, str_2, str_3)
        host_data_1 = module_0.HostData(str_0, str_0, str_1, str_1)
        var_0 = task_data_0.add_host(host_data_0)
        var_1 = task_data_0.add_host(host_data_0)
        var_2 = task_data_0.add_host(host_data_1)
    except BaseException:
        pass

def test_case_11():
    try:
        bool_0 = True
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_play_start(bool_0)
    except BaseException:
        pass