# Automatically generated by Pynguin.
import typesystem.tokenize.tokenize_json as module_0

def test_case_0():
    try:
        str_0 = 'fields'
        token_0 = module_0.tokenize_json(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '7'
        any_0 = module_0.validate_json(str_0, str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        tokenizing_decoder_0 = module_0._TokenizingDecoder()
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b':L\x86\xc7J\x8f'
        token_0 = module_0.tokenize_json(bytes_0)
    except BaseException:
        pass

def test_case_4():
    try:
        bytes_0 = b''
        tuple_0 = ()
        any_0 = module_0.validate_json(bytes_0, tuple_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'n7'
        any_0 = module_0.validate_json(str_0, str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        bytes_0 = b'\xf8\xa4t#\xcd\x97\xc5\xb5\x01\xac\x05=\x13J\x07\xf6\xb9`'
        token_0 = module_0.tokenize_json(bytes_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = '{'
        token_0 = module_0.tokenize_json(str_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = '{E'
        token_0 = module_0.tokenize_json(str_0)
    except BaseException:
        pass

def test_case_9():
    try:
        bytes_0 = b'{\n        "name": "Kenneth Reitz1",\n        "occupation": "Pythonista",\n        "age": 38,\n        "height": null,\n        "children": ["Ronald", "Ernest", "Edwin", "Thomas"],\n        "hometown": {\n            "name": "Fells Point",\n            "latitude": 39.284,\n            "longitude": 76.603,\n        },\n    }'
        token_0 = module_0.tokenize_json(bytes_0)
    except BaseException:
        pass

def test_case_10():
    try:
        bytes_0 = b'{\n        "name": "Kenneth Reitz1",\n        "occupation": "Pythonista",\n        "age": 38,\n        "height": null,\n        "children": ["Ronald", "Ernest", "\xa4dwin", "Thomas"],\n        "hometown": {\n            "name": "Fells Point",\n            "latitude": 39.284\n            "longitude": 76.603,\n        },\n    }'
        token_0 = module_0.tokenize_json(bytes_0)
    except BaseException:
        pass

def test_case_11():
    try:
        bytes_0 = b'{\n        "name": "Kenneth Reitz1",\n        "occupation\xbc: "Pythonista",\n        "age": 38,\n        "height": null,\n      \xc8 "childrn": ["Ronald", "Ernest", "Edwin", "Thomas"],\n        "hometown": {\n            "name": "Fells Point",\n            "latitude": 39.284,\n            "longitude": 76.603,\n        },\n    }'
        token_0 = module_0.tokenize_json(bytes_0)
    except BaseException:
        pass

def test_case_12():
    try:
        bytes_0 = b'[\xe3\xf3'
        token_0 = module_0.tokenize_json(bytes_0)
    except BaseException:
        pass

def test_case_13():
    try:
        bytes_0 = b'{\n        "name": "Kenneth Reitz1",\n        "occupation": "Pythonist",\n        "age": 38,\n        "heigt": nll,\n  \xb0    "children": ["Ronald", "Ernest" "Edwin", "Thomas"],\n        "hometown": {\n           "name": "Febls Point",\n            "latitude" 39.284,\n            "lZngitude": 6603,\n        },\n    }'
        token_0 = module_0.tokenize_json(bytes_0)
    except BaseException:
        pass

def test_case_14():
    try:
        bytes_0 = b'{\n        "name": "Kenneth Reitz1",\n        "occupation": "Pythonista",\n        "age": 38,\n        "height": null,\n       "children": ["Ronald","Ernest", "Edwin", "Thomas"],\n        "hometown": \n            "name": "Fells Point",\n            "latitude" 39.284,\n     P      "longitude": 76.603,\n        },\n    }'
        token_0 = module_0.tokenize_json(bytes_0)
    except BaseException:
        pass

def test_case_15():
    try:
        bytes_0 = b'7E6\xc5\x02\x01m{\x9b\x9bs\x7f\xef@y\x11\x82\x0e\x90\\'
        token_0 = module_0.tokenize_json(bytes_0)
    except BaseException:
        pass