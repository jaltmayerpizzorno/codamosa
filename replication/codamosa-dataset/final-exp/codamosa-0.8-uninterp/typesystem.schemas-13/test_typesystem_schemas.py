# Automatically generated by Pynguin.
import typesystem.schemas as module_0
import typesystem.fields as module_1

def test_case_0():
    pass

def test_case_1():
    schema_0 = module_0.Schema()
    str_0 = schema_0.__repr__()
    schema_definitions_0 = module_0.SchemaDefinitions()

def test_case_2():
    schema_0 = module_0.Schema()
    iterator_0 = schema_0.__iter__()
    list_0 = [iterator_0]
    schema_definitions_0 = module_0.SchemaDefinitions(*list_0)
    int_0 = schema_definitions_0.__len__()

def test_case_3():
    field_0 = module_1.Field()
    schema_definitions_0 = module_0.SchemaDefinitions()
    module_0.set_definitions(field_0, schema_definitions_0)

def test_case_4():
    schema_0 = module_0.Schema()

def test_case_5():
    field_0 = module_1.Field()
    list_0 = [field_0]
    schema_0 = module_0.Schema(*list_0)
    iterator_0 = schema_0.__iter__()

def test_case_6():
    schema_0 = module_0.Schema()
    str_0 = schema_0.__repr__()

def test_case_7():
    schema_0 = module_0.Schema()
    bool_0 = schema_0.__eq__(schema_0)

def test_case_8():
    schema_0 = module_0.Schema()
    int_0 = schema_0.__len__()

def test_case_9():
    str_0 = '1234567890'
    reference_0 = module_0.Reference(str_0)

def test_case_10():
    validation_error_0 = None
    str_0 = ';b:x?_m16'
    reference_0 = module_0.Reference(str_0)
    any_0 = reference_0.serialize(validation_error_0)

def test_case_11():
    schema_0 = module_0.Schema()
    var_0 = list(schema_0)