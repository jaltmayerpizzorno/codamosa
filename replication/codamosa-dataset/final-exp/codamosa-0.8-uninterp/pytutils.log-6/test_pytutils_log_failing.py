# Automatically generated by Pynguin.
import pytutils.log as module_0

def test_case_0():
    try:
        var_0 = module_0.configure()
        var_1 = module_0.get_logger()
    except BaseException:
        pass

def test_case_1():
    try:
        float_0 = -758.82
        var_0 = module_0.configure(float_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '\x0bews'
        var_0 = module_0.configure(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'w\r%\x0bI<'
        py_info_0 = module_0._PyInfo()
        set_0 = None
        var_0 = module_0.logger_level(str_0, set_0)
        int_0 = None
        var_1 = module_0.get_config(int_0)
    except BaseException:
        pass

def test_case_4():
    try:
        var_0 = module_0.get_logger()
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = '\txX'
        var_0 = module_0.get_logger(str_0)
        var_1 = module_0.configure(str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        complex_0 = None
        list_0 = [complex_0]
        dict_0 = {complex_0: complex_0, complex_0: complex_0, complex_0: complex_0, complex_0: list_0}
        var_0 = module_0.configure(dict_0)
    except BaseException:
        pass

def test_case_7():
    try:
        var_0 = None
        str_0 = 'log_config.yaml'
        var_1 = module_0.get_config(var_0, var_0, str_0)
    except BaseException:
        pass