# Automatically generated by Pynguin.
import ansible.playbook.task as module_0
import ansible.utils.display as module_1
import ansible.playbook.block as module_2

def test_case_0():
    try:
        bool_0 = True
        tuple_0 = (bool_0,)
        float_0 = 2789.23
        task_0 = module_0.Task(float_0)
        dict_0 = {float_0: bool_0, bool_0: bool_0, float_0: tuple_0, float_0: task_0}
        task_1 = module_0.Task(tuple_0, task_0, dict_0)
        var_0 = task_1.serialize()
    except BaseException:
        pass

def test_case_1():
    try:
        bool_0 = True
        int_0 = 493
        task_0 = module_0.Task(int_0)
        var_0 = task_0.load(bool_0)
    except BaseException:
        pass

def test_case_2():
    try:
        task_0 = module_0.Task()
        var_0 = {}
        var_1 = task_0.preprocess_data(var_0)
    except BaseException:
        pass

def test_case_3():
    try:
        task_0 = module_0.Task()
        var_0 = task_0.preprocess_data(task_0)
    except BaseException:
        pass

def test_case_4():
    try:
        task_0 = module_0.Task()
        int_0 = -383
        var_0 = task_0.post_validate(int_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'suboptions'
        complex_0 = None
        tuple_0 = (str_0, complex_0)
        bytes_0 = b'\xb5~\xb4\xa4\xd3\xd3\xd2\\\xe8'
        task_0 = module_0.Task(bytes_0)
        var_0 = task_0.post_validate(tuple_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = '~E1TTbm/'
        str_1 = None
        set_0 = {str_0, str_0, str_1}
        dict_0 = {str_0: set_0}
        task_0 = module_0.Task(dict_0, set_0)
        var_0 = task_0.get_vars()
    except BaseException:
        pass

def test_case_7():
    try:
        task_0 = module_0.Task()
        task_1 = module_0.Task(task_0, task_0)
        var_0 = task_1.get_name()
        var_1 = task_1.__repr__()
        var_2 = task_0.get_first_parent_include()
        var_3 = task_0.get_vars()
        var_4 = task_0.__repr__()
        var_5 = task_0.__repr__()
        var_6 = task_1.serialize()
        var_7 = task_1.copy()
        str_0 = 'oRx>_'
        var_8 = task_0.deserialize(str_0)
    except BaseException:
        pass

def test_case_8():
    try:
        int_0 = -1442
        task_0 = module_0.Task(int_0)
        var_0 = task_0.serialize()
    except BaseException:
        pass

def test_case_9():
    try:
        tuple_0 = ()
        bytes_0 = b'\xf4a\xda\xd1\xb9\x81\xd5'
        task_0 = module_0.Task(tuple_0, bytes_0)
        var_0 = task_0.serialize()
    except BaseException:
        pass

def test_case_10():
    try:
        bool_0 = False
        str_0 = 'sMQy'
        float_0 = -2208.42
        tuple_0 = ()
        task_0 = module_0.Task(str_0, float_0, tuple_0)
        var_0 = task_0.set_loader(bool_0)
    except BaseException:
        pass

def test_case_11():
    try:
        int_0 = 493
        task_0 = module_0.Task(int_0)
        var_0 = task_0.get_first_parent_include()
    except BaseException:
        pass

def test_case_12():
    try:
        task_0 = module_0.Task()
        dict_0 = {task_0: task_0}
        var_0 = task_0.preprocess_data(dict_0)
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = '&V!k`\tK1M@oqdG'
        task_0 = module_0.Task(str_0)
        var_0 = task_0.get_name()
        tuple_0 = ()
        int_0 = 390
        task_1 = module_0.Task(tuple_0, int_0)
        display_0 = module_1.Display()
        var_1 = task_0.copy(display_0)
        var_2 = task_0.preprocess_data(task_0)
    except BaseException:
        pass

def test_case_14():
    try:
        float_0 = 12.806041
        tuple_0 = ()
        int_0 = 173
        task_0 = module_0.Task(tuple_0)
        task_1 = module_0.Task(tuple_0, int_0)
        var_0 = task_1.copy(float_0)
        var_1 = task_1.get_first_parent_include()
        str_0 = "-zDr*9'C{="
        var_2 = task_1.set_loader(str_0)
        var_3 = task_1.get_vars()
        var_4 = task_0.deserialize(tuple_0)
    except BaseException:
        pass

def test_case_15():
    try:
        int_0 = 1434
        bytes_0 = b'\x9d\x01\xcc'
        block_0 = module_2.Block(bytes_0)
        block_1 = module_2.Block(int_0, block_0)
        task_0 = module_0.Task(block_1)
        var_0 = task_0.get_include_params()
        task_1 = module_0.Task()
        task_2 = None
        var_1 = task_1.preprocess_data(task_2)
    except BaseException:
        pass

def test_case_16():
    try:
        task_0 = module_0.Task()
        str_0 = 'xegistOr'
        str_1 = 'shell'
        var_0 = task_0.all_parents_static()
        str_2 = {str_1: str_0, str_0: str_1}
        var_1 = task_0.load(str_2)
    except BaseException:
        pass

def test_case_17():
    try:
        task_0 = module_0.Task()
        str_0 = 'action'
        str_1 = 'args'
        str_2 = 'delegate_to'
        var_0 = {}
        var_1 = {}
        str_3 = '{{ mock }}'
        var_2 = {str_0: var_0, str_1: var_1, str_2: str_3}
        var_3 = task_0.preprocess_data(var_2)
    except BaseException:
        pass

def test_case_18():
    try:
        task_0 = module_0.Task()
        var_0 = task_0.get_first_parent_include()
        task_1 = module_0.Task()
        str_0 = 'action'
        var_1 = task_1.serialize()
        str_1 = 'module'
        str_2 = 'args'
        str_3 = 'vars'
        str_4 = 'shell'
        var_2 = task_1.__repr__()
        str_5 = '<cho "ello"'
        str_6 = 'out'
        task_2 = module_0.Task()
        var_3 = task_1.__repr__()
        str_7 = {str_1: str_4, str_2: str_5, str_3: str_6}
        str_8 = {str_0: str_7}
        var_4 = task_1.get_include_params()
        var_5 = task_1.load(str_8)
        task_3 = module_0.Task()
        str_9 = {str_4: str_5, str_3: str_6}
        var_6 = task_1.get_vars()
        var_7 = task_3.load(str_9)
    except BaseException:
        pass

def test_case_19():
    try:
        task_0 = module_0.Task()
        var_0 = task_0.get_first_parent_include()
        task_1 = module_0.Task()
        str_0 = 'action'
        var_1 = task_1.serialize()
        str_1 = 'module'
        str_2 = 'args'
        str_3 = 'y*V'
        str_4 = 'shell'
        var_2 = task_1.__repr__()
        str_5 = ''
        str_6 = 'out'
        var_3 = task_1.get_include_params()
        var_4 = task_1.__repr__()
        str_7 = {str_1: str_4, str_2: str_5, str_3: str_6}
        str_8 = {str_0: str_7}
        var_5 = task_1.get_include_params()
        var_6 = task_1.load(str_8)
        task_2 = module_0.Task()
        var_7 = task_1.get_vars()
        var_8 = task_1.load(var_1, var_3)
    except BaseException:
        pass