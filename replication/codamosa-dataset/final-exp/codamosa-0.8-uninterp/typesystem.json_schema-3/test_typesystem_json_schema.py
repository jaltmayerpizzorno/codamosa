# Automatically generated by Pynguin.
import typesystem.json_schema as module_0
import typesystem.schemas as module_1
import typesystem.fields as module_2
import typesystem.composites as module_3
import typing as module_4

def test_case_0():
    bool_0 = False
    field_0 = module_0.from_json_schema(bool_0)

def test_case_1():
    str_0 = "'5HLyhrA"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    field_0 = module_0.from_json_schema(dict_0)

def test_case_2():
    dict_0 = {}
    schema_definitions_0 = module_1.SchemaDefinitions()
    field_0 = module_0.type_from_json_schema(dict_0, schema_definitions_0)

def test_case_3():
    str_0 = '$ref'
    str_1 = '#/definitions/foo'
    str_2 = {str_0: str_1}
    schema_definitions_0 = module_1.SchemaDefinitions()
    field_0 = module_0.ref_from_json_schema(str_2, schema_definitions_0)

def test_case_4():
    integer_0 = module_2.Integer()
    var_0 = module_0.to_json_schema(integer_0)

def test_case_5():
    choice_0 = module_2.Choice()
    dict_0 = {}
    schema_definitions_0 = module_1.SchemaDefinitions()
    field_0 = module_0.type_from_json_schema(dict_0, schema_definitions_0)
    schema_definitions_1 = module_1.SchemaDefinitions()
    var_0 = module_0.to_json_schema(field_0)

def test_case_6():
    choice_0 = module_2.Choice()
    int_0 = 1
    var_0 = module_0.to_json_schema(choice_0, int_0)

def test_case_7():
    str_0 = 'anyOf'
    str_1 = 'number'
    str_2 = {str_0: str_1}
    str_3 = {str_0: str_0}
    str_4 = [str_2, str_3]
    str_5 = {str_0: str_4}
    var_0 = None
    field_0 = module_0.any_of_from_json_schema(str_5, var_0)
    const_0 = module_2.Const(str_5)

def test_case_8():
    int_0 = 255
    integer_0 = module_2.Integer(minimum=int_0, maximum=int_0)
    var_0 = module_0.to_json_schema(integer_0)
    any_0 = module_2.Any()
    var_1 = module_0.to_json_schema(any_0)

def test_case_9():
    never_match_0 = module_3.NeverMatch()
    var_0 = module_0.to_json_schema(never_match_0)
    str_0 = 'here it is!'
    schema_0 = module_1.Schema()
    var_1 = module_0.to_json_schema(schema_0)

def test_case_10():
    str_0 = 'here it is!'
    schema_0 = module_1.Schema()
    var_0 = module_0.to_json_schema(schema_0)

def test_case_11():
    string_0 = module_2.String()
    var_0 = module_0.to_json_schema(string_0)

def test_case_12():
    str_0 = 'if'
    str_1 = 'theyn'
    str_2 = 'else'
    str_3 = 'integer'
    str_4 = {str_2: str_3}
    str_5 = {}
    str_6 = 'voolebn'
    str_7 = {str_1: str_6}
    str_8 = {str_0: str_4, str_1: str_5, str_2: str_7}
    field_0 = module_0.from_json_schema(str_8)

def test_case_13():
    str_0 = 'anyOf'
    str_1 = 'type'
    str_2 = 'number'
    str_3 = {str_1: str_2}
    str_4 = 'const'
    str_5 = 'bar'
    str_6 = {str_4: str_5}
    str_7 = [str_3, str_6]
    str_8 = {str_0: str_7}
    var_0 = None
    field_0 = module_0.any_of_from_json_schema(str_8, var_0)
    const_0 = module_2.Const(str_5)

def test_case_14():
    bool_0 = True
    field_0 = module_0.from_json_schema(bool_0)
    any_0 = module_2.Any()
    bool_1 = False
    field_1 = module_0.from_json_schema(bool_1)
    str_0 = 'type'
    str_1 = 'string'
    str_2 = {str_0: str_1}
    field_2 = module_0.from_json_schema(str_2)
    string_0 = module_2.String()
    str_3 = {str_0: str_1}
    field_3 = module_0.from_json_schema(str_3)
    number_0 = module_2.Number()
    str_4 = 'integer'
    str_5 = {str_0: str_4}
    field_4 = module_0.from_json_schema(str_5)
    integer_0 = module_2.Integer()
    str_6 = 'boolean'
    str_7 = {str_0: str_6}
    field_5 = module_0.from_json_schema(str_7)
    boolean_0 = module_2.Boolean()
    str_8 = 'default'
    var_0 = {str_0: str_6, str_8: bool_0}
    field_6 = module_0.from_json_schema(var_0)
    boolean_1 = module_2.Boolean(default=bool_0)
    str_9 = 'items'
    str_10 = 'array'
    str_11 = {str_0: str_1}
    str_12 = {str_0: str_10, str_9: str_11}
    field_7 = module_0.from_json_schema(str_12)
    string_1 = module_2.String()
    array_0 = module_2.Array(string_1)

def test_case_15():
    str_0 = 'allOf'
    str_1 = 'type'
    str_2 = 'string'
    str_3 = {str_1: str_2}
    str_4 = 'integer'
    str_5 = {str_1: str_4}
    str_6 = [str_3, str_5]
    str_7 = {str_0: str_6}
    schema_definitions_0 = module_1.SchemaDefinitions()
    field_0 = module_0.all_of_from_json_schema(str_7, schema_definitions_0)
    bool_0 = False
    string_0 = module_2.String()
    integer_0 = module_2.Integer()

def test_case_16():
    str_0 = 'if'
    str_1 = 'then'
    str_2 = 'else'
    str_3 = 'integer'
    str_4 = {str_3: str_3}
    str_5 = {}
    str_6 = {str_0: str_4, str_1: str_5, str_2: str_3}
    field_0 = module_0.from_json_schema(str_6)
    int_0 = 1
    validation_result_0 = field_0.validate_or_error(field_0)
    any_0 = field_0.validate(int_0)
    any_1 = field_0.validate(str_6)
    bool_0 = True
    any_2 = field_0.validate(bool_0)
    field_1 = module_0.from_json_schema(str_6)

def test_case_17():
    schema_definitions_0 = module_1.SchemaDefinitions()
    var_0 = module_0.to_json_schema(schema_definitions_0)
    integer_0 = module_2.Integer()

def test_case_18():
    int_0 = 275
    integer_0 = module_2.Integer(minimum=int_0, maximum=int_0)
    var_0 = module_0.to_json_schema(integer_0)

def test_case_19():
    int_0 = -4
    generic_0 = module_4.Generic()
    string_0 = module_2.String(min_length=int_0)
    var_0 = module_0.to_json_schema(string_0)

def test_case_20():
    any_0 = module_2.Any()
    never_match_0 = module_3.NeverMatch()
    var_0 = module_0.to_json_schema(never_match_0)
    int_0 = 1
    string_0 = module_2.String(min_length=int_0)
    var_1 = module_0.to_json_schema(string_0)
    integer_0 = module_2.Integer(minimum=int_0)
    var_2 = module_0.to_json_schema(integer_0)
    bool_0 = True
    integer_1 = module_2.Integer(minimum=int_0)
    var_3 = module_0.to_json_schema(integer_1)
    bool_1 = True
    boolean_0 = module_2.Boolean(allow_null=bool_1)
    var_4 = module_0.to_json_schema(boolean_0)

def test_case_21():
    str_0 = 'if'
    str_1 = 't'
    str_2 = 'type'
    str_3 = 'integer'
    str_4 = {str_2: str_3}
    str_5 = '*"\'\'NL$5Q-1A'
    str_6 = {str_2: str_5}
    str_7 = {str_0: str_4, str_1: str_3, str_1: str_6}
    field_0 = module_0.from_json_schema(str_7)
    int_0 = 1
    any_0 = field_0.validate(int_0)
    str_8 = 'a'
    any_1 = field_0.serialize(field_0)
    bool_0 = True
    any_2 = field_0.validate(bool_0)
    field_1 = module_0.from_json_schema(str_7)
    any_3 = field_1.validate(str_8)
    any_4 = field_1.validate(str_8)
    any_5 = field_1.validate(str_8)

def test_case_22():
    str_0 = 'enum'
    int_0 = 0
    int_1 = 1
    int_2 = [int_0, int_1]
    int_3 = {str_0: int_2}
    schema_definitions_0 = module_1.SchemaDefinitions()
    field_0 = module_0.enum_from_json_schema(int_3, schema_definitions_0)

def test_case_23():
    str_0 = 'not'
    str_1 = 'def^>ault'
    str_2 = 'type'
    str_3 = 'string'
    str_4 = {str_2: str_3}
    str_5 = {str_2: str_3, str_0: str_4}
    var_0 = None
    var_1 = {str_0: str_5, str_1: var_0}
    str_6 = {str_2: str_3}
    var_2 = {str_0: str_6, str_1: var_0}
    schema_definitions_0 = module_1.SchemaDefinitions()
    field_0 = module_0.not_from_json_schema(var_1, schema_definitions_0)
    field_1 = module_0.not_from_json_schema(var_2, schema_definitions_0)
    string_0 = module_2.String()
    not_0 = module_3.Not(string_0)
    not_1 = module_3.Not(not_0)
    string_1 = module_2.String()
    not_2 = module_3.Not(string_1)

def test_case_24():
    string_0 = module_2.String()
    var_0 = module_0.to_json_schema(string_0)
    object_0 = module_2.Object()
    var_1 = module_0.to_json_schema(object_0)
    bool_0 = True
    string_1 = module_2.String()
    var_2 = module_0.to_json_schema(string_1)
    str_0 = 'name'
    str_1 = 'age'
    string_2 = module_2.String()
    integer_0 = module_2.Integer()
    var_3 = {str_0: string_2, str_1: integer_0}
    object_1 = module_2.Object(properties=var_3)
    var_4 = module_0.to_json_schema(object_1)

def test_case_25():
    string_0 = module_2.String()
    var_0 = module_0.to_json_schema(string_0)
    object_0 = module_2.Object()
    var_1 = module_0.to_json_schema(object_0)
    bool_0 = True
    string_1 = module_2.String()
    var_2 = module_0.to_json_schema(string_1)
    str_0 = 'name'
    str_1 = 'age'
    string_2 = module_2.String()
    integer_0 = module_2.Integer()
    var_3 = {str_0: string_2, str_1: integer_0}
    object_1 = module_2.Object(properties=var_3)

def test_case_26():
    string_0 = module_2.String()
    var_0 = module_0.to_json_schema(string_0)
    integer_0 = module_2.Integer()
    var_1 = module_0.to_json_schema(integer_0)
    array_0 = module_2.Array()
    var_2 = module_0.to_json_schema(array_0)
    object_0 = module_2.Object()
    var_3 = module_0.to_json_schema(object_0)
    string_1 = module_2.String()
    integer_1 = module_2.Integer()
    dict_0 = {}
    optional_0 = None
    field_0 = module_0.from_json_schema(dict_0, optional_0)