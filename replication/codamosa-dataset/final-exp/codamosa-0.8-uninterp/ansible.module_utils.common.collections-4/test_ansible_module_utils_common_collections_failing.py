# Automatically generated by Pynguin.
import ansible.module_utils.common.collections as module_0

def test_case_0():
    try:
        str_0 = None
        immutable_dict_0 = module_0.ImmutableDict()
        var_0 = immutable_dict_0.__len__()
        var_1 = immutable_dict_0.union(immutable_dict_0)
        var_2 = immutable_dict_0.difference(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        immutable_dict_0 = module_0.ImmutableDict()
        immutable_dict_1 = module_0.ImmutableDict()
        str_0 = 'Pv0-*YFq:3X`9e(m~\t'
        dict_0 = {immutable_dict_0: immutable_dict_1, immutable_dict_1: str_0}
        var_0 = immutable_dict_0.difference(dict_0)
        str_1 = None
        var_1 = immutable_dict_1.union(str_1)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'K_Cd7~\\;]+TQ@!1s!'
        var_0 = module_0.count(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = "Imf/s}N'ws<E"
        bool_0 = False
        set_0 = {bool_0}
        var_0 = module_0.is_string(set_0)
        str_1 = None
        bytes_0 = b'j\xae\xff\xefJ\x10\xce\xe2\xb5v\xfb'
        var_1 = module_0.is_sequence(bytes_0)
        str_2 = '^>9X<t'
        dict_0 = {str_0: str_0, str_1: bool_0, str_0: str_1, str_2: str_2}
        var_2 = module_0.count(dict_0)
        dict_1 = {}
        immutable_dict_0 = module_0.ImmutableDict(**dict_1)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'K|]=e'
        list_0 = [str_0, str_0, str_0]
        var_0 = module_0.count(list_0)
        set_0 = None
        var_1 = module_0.is_sequence(set_0)
        dict_0 = None
        immutable_dict_0 = module_0.ImmutableDict()
        var_2 = immutable_dict_0.union(dict_0)
    except BaseException:
        pass

def test_case_5():
    try:
        float_0 = 238.9861
        var_0 = module_0.count(float_0)
    except BaseException:
        pass

def test_case_6():
    try:
        immutable_dict_0 = module_0.ImmutableDict()
        list_0 = [immutable_dict_0, immutable_dict_0, immutable_dict_0, immutable_dict_0]
        list_1 = None
        str_0 = None
        var_0 = immutable_dict_0.__eq__(str_0)
        int_0 = -107
        dict_0 = {immutable_dict_0: immutable_dict_0, list_1: immutable_dict_0, int_0: list_0}
        tuple_0 = (dict_0, list_0)
        var_1 = immutable_dict_0.__len__()
        var_2 = module_0.is_iterable(tuple_0, tuple_0)
        var_3 = immutable_dict_0.__eq__(tuple_0)
        var_4 = immutable_dict_0.__hash__()
        var_5 = immutable_dict_0.difference(list_0)
        bool_0 = True
        var_6 = module_0.count(bool_0)
    except BaseException:
        pass

def test_case_7():
    try:
        int_0 = 5
        set_0 = {int_0, int_0, int_0, int_0}
        var_0 = module_0.is_sequence(int_0, set_0)
        bool_0 = False
        var_1 = module_0.is_string(bool_0)
        dict_0 = None
        var_2 = module_0.is_sequence(dict_0)
        list_0 = [set_0]
        immutable_dict_0 = module_0.ImmutableDict(*list_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = '0uL70%9'
        list_0 = [str_0, str_0, str_0, str_0]
        dict_0 = {str_0: list_0}
        str_1 = '0YNa'
        var_0 = module_0.is_sequence(str_1)
        immutable_dict_0 = module_0.ImmutableDict(**dict_0)
        var_1 = immutable_dict_0.__iter__()
        immutable_dict_1 = module_0.ImmutableDict()
        list_1 = [immutable_dict_1, immutable_dict_1, immutable_dict_1, immutable_dict_1, immutable_dict_1]
        var_2 = immutable_dict_1.__hash__()
        var_3 = module_0.is_string(list_1)
        var_4 = immutable_dict_1.__len__()
        var_5 = immutable_dict_1.difference(list_1)
        bool_0 = False
        var_6 = immutable_dict_0.difference(dict_0)
        var_7 = module_0.count(bool_0)
    except BaseException:
        pass