# Automatically generated by Pynguin.
import httpie.uploads as module_0
import httpie.cli.dicts as module_1
import typing as module_2
import requests_toolbelt.multipart.encoder as module_3
import requests.models as module_4

def test_case_0():
    pass

def test_case_1():
    bool_0 = False
    chunked_upload_stream_0 = module_0.ChunkedUploadStream(bool_0, bool_0)

def test_case_2():
    request_data_dict_0 = module_1.RequestDataDict()
    i_o_0 = module_2.IO()
    var_0 = module_0.prepare_request_body(request_data_dict_0, i_o_0, i_o_0)

def test_case_3():
    str_0 = 'test_data'
    str_1 = {str_0: str_0}
    tuple_0 = module_0.get_multipart_data_and_content_type(str_1, str_0, str_0)

def test_case_4():
    multipart_request_data_dict_0 = module_1.MultipartRequestDataDict()
    tuple_0 = module_0.get_multipart_data_and_content_type(multipart_request_data_dict_0)

def test_case_5():
    str_0 = 'hello'
    str_1 = 'world!'
    str_2 = [str_0, str_1]
    var_0 = lambda x: print(x)
    chunked_upload_stream_0 = module_0.ChunkedUploadStream(str_2, var_0)
    var_1 = list(chunked_upload_stream_0)

def test_case_6():
    iterable_0 = None
    str_0 = 'l!\rwCjlnBM:\x0bA{u'
    complex_0 = None
    str_1 = '$ymL\x0btww4Y/4'
    dict_0 = {str_0: iterable_0, str_1: str_0, str_1: complex_0, str_1: str_1}
    multipart_encoder_0 = module_3.MultipartEncoder(dict_0, complex_0)
    float_0 = -3572.0
    int_0 = None
    var_0 = module_0.prepare_request_body(multipart_encoder_0, float_0, int_0)

def test_case_7():
    str_0 = 'test'
    var_0 = lambda x: x
    bool_0 = False
    bool_1 = True
    var_1 = module_0.prepare_request_body(str_0, var_0, str_0, bool_0, bool_1)

def test_case_8():
    str_0 = 'field1'
    str_1 = 'value1'
    str_2 = (str_0, str_1)
    str_3 = 'field2'
    str_4 = (str_3, str_0)
    str_5 = [str_2, str_4]
    multipart_encoder_0 = module_3.MultipartEncoder(str_5)
    chunked_multipart_upload_stream_0 = module_0.ChunkedMultipartUploadStream(multipart_encoder_0)
    var_0 = [chunk.decode() for chunk in chunked_multipart_upload_stream_0]
    var_1 = multipart_encoder_0.to_string()

def test_case_9():
    str_0 = 'Like `write`, but colorized chunks are written as text\n    directly to `outfile` to ensure it gets processed by colorama.\n    Applies only to Windows with Python 3 and colorized terminal output.\n\n    '
    list_0 = []
    list_1 = [str_0]
    multipart_encoder_0 = module_3.MultipartEncoder(list_0, list_1)
    str_1 = ';'
    var_0 = module_0.prepare_request_body(str_0, str_1)
    callable_0 = None
    prepared_request_0 = module_4.PreparedRequest()
    int_0 = -2603
    i_o_0 = module_2.IO()
    var_1 = i_o_0.readline()
    var_2 = module_0.prepare_request_body(multipart_encoder_0, callable_0, int_0)
    var_3 = module_0.prepare_request_body(multipart_encoder_0, callable_0, int_0, prepared_request_0)
    prepared_request_1 = module_4.PreparedRequest()