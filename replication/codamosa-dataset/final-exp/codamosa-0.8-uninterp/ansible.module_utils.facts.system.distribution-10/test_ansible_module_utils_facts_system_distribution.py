# Automatically generated by Pynguin.
import ansible.module_utils.facts.system.distribution as module_0

def test_case_0():
    pass

def test_case_1():
    distribution_fact_collector_0 = module_0.DistributionFactCollector()
    str_0 = '6^e^9F4]W=u'
    var_0 = distribution_fact_collector_0.collect(str_0)

def test_case_2():
    float_0 = 466.325
    str_0 = 'cc:CC{B2u(\x0cuo'
    float_1 = -754.9
    distribution_0 = module_0.Distribution(float_1)
    distribution_1 = module_0.Distribution(distribution_0)
    distribution_files_0 = module_0.DistributionFiles(distribution_1)
    dict_0 = {}
    str_1 = '#+itjjQS7gw&%Th'
    distribution_files_1 = module_0.DistributionFiles(str_1)
    var_0 = distribution_files_1.parse_distribution_file_OpenWrt(float_0, str_0, distribution_files_0, dict_0)

def test_case_3():
    int_0 = 23
    dict_0 = {}
    int_1 = 0
    bool_0 = True
    list_0 = [int_0, int_1, int_0, bool_0]
    tuple_0 = ()
    int_2 = 4096
    distribution_files_0 = module_0.DistributionFiles(int_2)
    var_0 = distribution_files_0.parse_distribution_file_Debian(int_1, list_0, tuple_0, list_0)
    distribution_files_1 = module_0.DistributionFiles(list_0)
    var_1 = distribution_files_1.process_dist_files()
    bytes_0 = b'\xaa\xdc\xd7.\xab\x174\xc5\x9a#\xcf\xac\x99b\x8e#\xba?B'
    tuple_1 = (bytes_0,)
    bytes_1 = b'\xe3N\xdf"J\xa2t'
    distribution_files_2 = module_0.DistributionFiles(bytes_1)
    var_2 = distribution_files_2.parse_distribution_file_Flatcar(int_0, dict_0, int_1, tuple_1)

def test_case_4():
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    dict_0 = {bool_0: bool_0}
    distribution_files_0 = module_0.DistributionFiles(dict_0)
    list_0 = [distribution_files_0, dict_0, set_0]
    int_0 = -127
    distribution_files_1 = module_0.DistributionFiles(int_0)
    var_0 = distribution_files_1.parse_distribution_file_Mandriva(bool_0, set_0, distribution_files_0, list_0)

def test_case_5():
    str_0 = '`bW>%e+isnx]D'
    distribution_0 = module_0.Distribution(str_0)
    str_1 = 'n;Z)-YA.9`p\x0bLWv=>'
    float_0 = 2976.4601
    float_1 = -2066.93
    distribution_1 = module_0.Distribution(float_1)
    distribution_files_0 = module_0.DistributionFiles(distribution_1)
    var_0 = distribution_files_0.parse_distribution_file_NA(distribution_0, str_1, distribution_0, float_0)

def test_case_6():
    str_0 = 'Depsolve Error occurred attempting to install environment: {0}'
    dict_0 = {str_0: str_0}
    distribution_files_0 = module_0.DistributionFiles(dict_0)
    list_0 = [distribution_files_0, distribution_files_0, distribution_files_0]
    distribution_files_1 = module_0.DistributionFiles(str_0)
    var_0 = distribution_files_1.parse_distribution_file_Coreos(str_0, distribution_files_0, dict_0, list_0)

def test_case_7():
    var_0 = {}
    distribution_files_0 = module_0.DistributionFiles(var_0)
    str_0 = 'flatcar'
    str_1 = 'GROUP=alpha\n'
    str_2 = '/etc/os-release'
    var_1 = {}
    var_2 = distribution_files_0.parse_distribution_file_Flatcar(str_0, str_1, str_2, var_1)

def test_case_8():
    str_0 = 'U2'
    str_1 = 'zkq)R~Hi$q,&qcG#}w '
    float_0 = -2843.41
    int_0 = -2030
    distribution_fact_collector_0 = module_0.DistributionFactCollector(int_0)
    bool_0 = True
    distribution_files_0 = module_0.DistributionFiles(bool_0)
    var_0 = distribution_files_0.parse_distribution_file_ClearLinux(str_0, str_1, float_0, distribution_fact_collector_0)

def test_case_9():
    var_0 = None
    distribution_0 = module_0.Distribution(var_0)
    var_1 = distribution_0.get_distribution_FreeBSD()

def test_case_10():
    tuple_0 = None
    distribution_fact_collector_0 = module_0.DistributionFactCollector()
    var_0 = distribution_fact_collector_0.collect(tuple_0)

def test_case_11():
    float_0 = 1368.44
    list_0 = []
    int_0 = 420
    distribution_files_0 = None
    bytes_0 = b'\xa9\xd9\x0fT\xd2'
    distribution_files_1 = module_0.DistributionFiles(bytes_0)
    var_0 = distribution_files_1.parse_distribution_file_Slackware(float_0, list_0, int_0, distribution_files_0)