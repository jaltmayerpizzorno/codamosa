# Automatically generated by Pynguin.
import ansible.utils._junit_xml as module_0
import decimal as module_1

def test_case_0():
    pass

def test_case_1():
    test_error_0 = module_0.TestError()

def test_case_2():
    str_0 = 'host-pattern'
    test_failure_0 = module_0.TestFailure(str_0)
    var_0 = test_failure_0.__repr__()

def test_case_3():
    str_0 = 'test_case_1'
    test_case_0 = module_0.TestCase(str_0)
    element_0 = test_case_0.get_xml_element()

def test_case_4():
    str_0 = 'test'
    test_suite_0 = module_0.TestSuite(str_0)
    element_0 = test_suite_0.get_xml_element()

def test_case_5():
    test_suites_0 = module_0.TestSuites()
    int_0 = 232
    var_0 = test_suites_0.__eq__(int_0)
    dict_0 = test_suites_0.get_attributes()

def test_case_6():
    str_0 = "^5P6'0Yp,/LWShJ"
    test_suite_0 = module_0.TestSuite(str_0, str_0, str_0)
    list_0 = [test_suite_0, test_suite_0, test_suite_0, test_suite_0]
    test_suites_0 = module_0.TestSuites(str_0, list_0)
    str_1 = test_suites_0.to_pretty_xml()
    decimal_0 = module_1.Decimal()
    var_0 = test_suites_0.__eq__(decimal_0)

def test_case_7():
    str_0 = 'This is an error output.'
    str_1 = 'This is an error message.'
    str_2 = 'SyntaxError'
    test_error_0 = module_0.TestError(str_0, str_1, str_2)
    element_0 = test_error_0.get_xml_element()

def test_case_8():
    str_0 = 'This is an error output.'
    str_1 = 'SyntaxError'
    test_error_0 = module_0.TestError(str_1, str_0)
    element_0 = test_error_0.get_xml_element()