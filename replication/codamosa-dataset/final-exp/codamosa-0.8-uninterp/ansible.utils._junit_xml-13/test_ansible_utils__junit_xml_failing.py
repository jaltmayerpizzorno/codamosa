# Automatically generated by Pynguin.
import ansible.utils._junit_xml as module_0
import decimal as module_1

def test_case_0():
    try:
        test_suites_0 = module_0.TestSuites()
        test_failure_0 = module_0.TestFailure()
        var_0 = test_failure_0.__eq__(test_failure_0)
        str_0 = test_suites_0.to_pretty_xml()
        str_1 = test_suites_0.to_pretty_xml()
        element_0 = test_suites_0.get_xml_element()
        str_2 = 'C9:&x^~,K+cd[M'
        test_suite_0 = module_0.TestSuite(str_2, str_2, str_2, str_2)
        var_1 = test_suite_0.__eq__(test_suites_0)
        test_error_0 = module_0.TestError(str_0)
        var_2 = test_suite_0.__repr__()
        list_0 = [test_suite_0, test_suite_0, test_suite_0, test_suite_0]
        test_suites_1 = module_0.TestSuites(element_0, list_0)
        dict_0 = test_suites_0.get_attributes()
        str_3 = 'P Hua[0WT^)>H]'
        test_error_1 = module_0.TestError(str_3)
        decimal_0 = module_1.Decimal()
        list_1 = [test_error_0, test_error_0, test_error_1]
        list_2 = []
        bool_0 = False
        test_case_0 = module_0.TestCase(str_2, str_3, decimal_0, list_1, list_2, str_2, str_2, bool_0)
        test_failure_1 = module_0.TestFailure()
        str_4 = test_suites_1.to_pretty_xml()
        dict_1 = test_suites_1.get_attributes()
        element_1 = test_case_0.get_xml_element()
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'l9QcxN'
        str_1 = 'D\x0byZSuS\nXu`QCgnV!'
        none_type_0 = None
        list_0 = []
        decimal_0 = module_1.Decimal(*list_0)
        test_failure_0 = module_0.TestFailure(str_0, str_0)
        list_1 = [test_failure_0, test_failure_0, test_failure_0, test_failure_0, test_failure_0]
        test_case_0 = module_0.TestCase(str_1, none_type_0, str_1, decimal_0, list_1, str_1)
        list_2 = [test_case_0, test_case_0, test_case_0]
        test_suite_0 = module_0.TestSuite(str_0, str_1, str_0, list_2, str_0)
        dict_0 = test_suite_0.get_attributes()
    except BaseException:
        pass

def test_case_2():
    try:
        test_suites_0 = module_0.TestSuites()
        test_failure_0 = module_0.TestFailure()
        var_0 = test_failure_0.__eq__(test_failure_0)
        str_0 = 'u*2d|t2f['
        str_1 = 'SYn/x\x0c%])?\nXf,G\x0b(X$T'
        str_2 = '`!Mq>s_!?R1V'
        dict_0 = {str_1: str_2}
        list_0 = []
        test_suite_0 = module_0.TestSuite(str_0, str_0, str_0, dict_0, list_0, str_2, str_1)
        dict_1 = test_suite_0.get_attributes()
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'G|#|yV!}IYk>{+ha\r'
        test_suite_0 = module_0.TestSuite(str_0, str_0)
        str_1 = '~5@0SKY}<L'
        list_0 = [str_1, test_suite_0, test_suite_0, str_1]
        list_1 = []
        test_failure_0 = module_0.TestFailure(str_1)
        list_2 = [test_failure_0]
        bool_0 = True
        test_case_0 = module_0.TestCase(str_1, str_0, list_0, list_1, list_2, str_1, str_0, bool_0)
        element_0 = test_case_0.get_xml_element()
    except BaseException:
        pass

def test_case_4():
    try:
        test_suites_0 = module_0.TestSuites()
        test_failure_0 = module_0.TestFailure()
        var_0 = test_failure_0.__eq__(test_failure_0)
        str_0 = test_suites_0.to_pretty_xml()
        str_1 = test_suites_0.to_pretty_xml()
        element_0 = test_suites_0.get_xml_element()
        str_2 = 'C9:&x^~,K+cd[M'
        test_suite_0 = module_0.TestSuite(str_2, str_2, str_2, str_2)
        var_1 = test_suite_0.__eq__(test_suites_0)
        test_error_0 = module_0.TestError(str_0)
        var_2 = test_suite_0.__repr__()
        list_0 = [test_suite_0, test_suite_0, test_suite_0, test_suite_0]
        test_suites_1 = module_0.TestSuites(element_0, list_0)
        dict_0 = test_suites_0.get_attributes()
        str_3 = 'P Hua[0WT^)>H]'
        test_error_1 = module_0.TestError(str_3)
        str_4 = '\nVEP>8mI{H)xK>a)u/t'
        decimal_0 = module_1.Decimal()
        list_1 = []
        test_failure_1 = module_0.TestFailure()
        str_5 = test_suites_1.to_pretty_xml()
        int_0 = 86
        test_case_0 = module_0.TestCase(str_0, int_0, str_4, str_4, decimal_0, list_1, str_0)
        element_1 = test_case_0.get_xml_element()
    except BaseException:
        pass