# Automatically generated by Pynguin.
import ansible.module_utils.common.network as module_0

def test_case_0():
    try:
        str_0 = 'Directory %s already exists, but not as a symlink\n'
        var_0 = module_0.to_masklen(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '25.253.255.0'
        var_0 = module_0.to_masklen(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '[n-=:t$2&z<DFV{q)q'
        var_0 = module_0.to_netmask(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bool_0 = False
        set_0 = {bool_0, bool_0, bool_0}
        var_0 = module_0.to_subnet(bool_0, bool_0, set_0)
    except BaseException:
        pass

def test_case_4():
    try:
        dict_0 = {}
        float_0 = 707.0
        var_0 = module_0.to_subnet(dict_0, float_0)
    except BaseException:
        pass

def test_case_5():
    try:
        bytes_0 = b"\xb3fs\xcfw\xd9'\xbf"
        var_0 = module_0.is_masklen(bytes_0)
        bool_0 = True
        list_0 = [bytes_0, var_0]
        var_1 = module_0.to_subnet(bool_0, list_0)
    except BaseException:
        pass

def test_case_6():
    try:
        set_0 = None
        var_0 = module_0.to_ipv6_network(set_0)
    except BaseException:
        pass

def test_case_7():
    try:
        bool_0 = False
        var_0 = module_0.to_bits(bool_0)
    except BaseException:
        pass

def test_case_8():
    try:
        float_0 = 2423.117
        var_0 = module_0.is_mac(float_0)
    except BaseException:
        pass

def test_case_9():
    try:
        int_0 = 1082
        dict_0 = {int_0: int_0, int_0: int_0}
        var_0 = module_0.to_netmask(dict_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = '255.255.255.0'
        str_1 = '] h&"*H+$N+CvNL'
        var_0 = module_0.to_ipv6_subnet(str_1)
        str_2 = 'G\reF{YW`9O'
        var_1 = module_0.to_subnet(str_2, str_0)
    except BaseException:
        pass