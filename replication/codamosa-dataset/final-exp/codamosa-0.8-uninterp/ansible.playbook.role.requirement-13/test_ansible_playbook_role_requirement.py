# Automatically generated by Pynguin.
import ansible.playbook.role.requirement as module_0

def test_case_0():
    pass

def test_case_1():
    role_requirement_0 = module_0.RoleRequirement()

def test_case_2():
    role_requirement_0 = module_0.RoleRequirement()
    str_0 = 'n'
    var_0 = role_requirement_0.role_yaml_parse(str_0)

def test_case_3():
    str_0 = '\temZ'
    role_requirement_0 = module_0.RoleRequirement()
    var_0 = role_requirement_0.role_yaml_parse(str_0)
    role_requirement_1 = module_0.RoleRequirement()
    var_1 = role_requirement_0.role_yaml_parse(var_0)
    role_requirement_2 = module_0.RoleRequirement()

def test_case_4():
    role_requirement_0 = module_0.RoleRequirement()
    str_0 = '8 8tdn4q3=@+'
    var_0 = role_requirement_0.role_yaml_parse(str_0)

def test_case_5():
    role_requirement_0 = module_0.RoleRequirement()
    str_0 = '\n    name: linear\n    short_description: Executes tasks in a linear fashion\n    description:\n        - Task execution is in lockstep per host batch as defined by C(serial) (default all).\n          Up to the fork limit of hosts will execute each task at the same time and then\n          the next series of hosts until the batch is done, before going on to the next task.\n    version_added: "2.0"\n    notes:\n     - This was the default Ansible behaviour before \'strategy plugins\' were introduced in 2.0.\n    author: Ansible Core Team\n'
    var_0 = role_requirement_0.repo_url_to_role_name(str_0)
    var_1 = role_requirement_0.role_yaml_parse(str_0)

def test_case_6():
    str_0 = 'ST#o,Z60,YB9)EO'
    role_requirement_0 = module_0.RoleRequirement()
    var_0 = role_requirement_0.role_yaml_parse(str_0)

def test_case_7():
    str_0 = 'role'
    var_0 = dict(name=str_0, src=str_0, scm=str_0, version=str_0)
    role_requirement_0 = module_0.RoleRequirement()
    str_1 = {str_0: str_0}
    var_1 = dict(name=str_1, src=var_0, scm=var_0, version=str_0)
    str_2 = '=42J'
    var_2 = role_requirement_0.role_yaml_parse(str_1)
    role_requirement_1 = module_0.RoleRequirement()
    var_3 = role_requirement_1.repo_url_to_role_name(str_2)
    str_3 = 'name1'
    var_4 = dict(name=str_3, src=role_requirement_1, scm=role_requirement_1, version=str_0)