# Automatically generated by Pynguin.
import ansible.vars.hostvars as module_0

def test_case_0():
    try:
        bytes_0 = None
        dict_0 = {}
        bool_0 = False
        str_0 = 'NU45'
        str_1 = 'I/%I'
        list_0 = []
        host_vars_vars_0 = module_0.HostVarsVars(str_1, list_0)
        bool_1 = False
        host_vars_0 = module_0.HostVars(str_0, host_vars_vars_0, bool_1)
        var_0 = host_vars_0.set_host_variable(bytes_0, dict_0, bool_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bool_0 = False
        tuple_0 = ()
        str_0 = 'HT\rB/wl!U\x0c\'`5X"wJSt'
        host_vars_vars_0 = module_0.HostVarsVars(str_0, tuple_0)
        var_0 = host_vars_vars_0.__getitem__(bool_0)
        str_1 = '=^=d"V+#33~~$/Q:L'
        set_0 = {str_1, str_1, str_1}
        host_vars_vars_1 = module_0.HostVarsVars(set_0, bool_0)
        host_vars_0 = module_0.HostVars(str_1, host_vars_vars_1, tuple_0)
        var_1 = host_vars_0.__setstate__(tuple_0)
        var_2 = host_vars_0.__getitem__(host_vars_vars_1)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '5S'
        list_0 = []
        host_vars_vars_0 = module_0.HostVarsVars(str_0, list_0)
        var_0 = host_vars_vars_0.__len__()
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '\x0cK'
        list_0 = [str_0]
        set_0 = set()
        host_vars_vars_0 = module_0.HostVarsVars(list_0, set_0)
        host_vars_vars_1 = module_0.HostVarsVars(list_0, host_vars_vars_0)
        var_0 = host_vars_vars_1.__repr__()
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = '>_B\x0bX'
        dict_0 = {}
        host_vars_vars_0 = module_0.HostVarsVars(str_0, dict_0)
        var_0 = host_vars_vars_0.__repr__()
    except BaseException:
        pass

def test_case_5():
    try:
        bool_0 = False
        list_0 = [bool_0, bool_0, bool_0, bool_0]
        str_0 = None
        tuple_0 = ()
        bytes_0 = b'\xe0\x07\xc4\xfe\x0f'
        host_vars_vars_0 = module_0.HostVarsVars(list_0, bytes_0)
        host_vars_0 = module_0.HostVars(tuple_0, host_vars_vars_0, bool_0)
        var_0 = host_vars_0.set_variable_manager(str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        int_0 = None
        float_0 = 2010.4
        dict_0 = {}
        float_1 = 0.001
        tuple_0 = ()
        host_vars_vars_0 = module_0.HostVarsVars(float_1, tuple_0)
        dict_1 = {int_0: host_vars_vars_0}
        host_vars_0 = module_0.HostVars(dict_0, host_vars_vars_0, dict_1)
        var_0 = host_vars_0.__iter__()
        str_0 = 'xkR\\dJZ.&D(GQ@Kqe'
        var_1 = host_vars_0.set_inventory(float_1)
        str_1 = '+ y\nbn|!\x0bu\\RKI|(5(*f'
        host_vars_1 = module_0.HostVars(float_0, str_0, str_1)
    except BaseException:
        pass

def test_case_7():
    try:
        int_0 = 24
        bytes_0 = b'\xc8\xdeG\xe9ou\xd0'
        str_0 = 'c'
        host_vars_vars_0 = module_0.HostVarsVars(bytes_0, str_0)
        int_1 = -1015
        host_vars_0 = module_0.HostVars(int_0, host_vars_vars_0, int_1)
        str_1 = 'iBdE'
        var_0 = host_vars_0.__getitem__(str_1)
    except BaseException:
        pass

def test_case_8():
    try:
        bool_0 = False
        tuple_0 = ()
        str_0 = '*$FS'
        set_0 = {str_0, str_0, str_0}
        host_vars_vars_0 = module_0.HostVarsVars(set_0, bool_0)
        host_vars_0 = module_0.HostVars(str_0, host_vars_vars_0, tuple_0)
        var_0 = host_vars_0.__setstate__(tuple_0)
        str_1 = 'The collection(s) name or path/url to a tar.gz collection artifact. This is mutually exclusive with --requirements-file.'
        var_1 = host_vars_0.__contains__(str_1)
    except BaseException:
        pass

def test_case_9():
    try:
        bool_0 = False
        list_0 = [bool_0, bool_0, bool_0, bool_0]
        tuple_0 = ()
        bytes_0 = b'\xe0\x07\xc4\xfe\x0f'
        host_vars_vars_0 = module_0.HostVarsVars(list_0, bytes_0)
        host_vars_0 = module_0.HostVars(tuple_0, host_vars_vars_0, bool_0)
        var_0 = host_vars_0.__repr__()
    except BaseException:
        pass

def test_case_10():
    try:
        int_0 = None
        dict_0 = {}
        float_0 = 0.001
        tuple_0 = ()
        host_vars_vars_0 = module_0.HostVarsVars(float_0, tuple_0)
        dict_1 = {int_0: host_vars_vars_0}
        host_vars_0 = module_0.HostVars(dict_0, host_vars_vars_0, dict_1)
        var_0 = host_vars_0.__iter__()
        bool_0 = None
        var_1 = host_vars_0.set_nonpersistent_facts(host_vars_0, bool_0)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = '^9/"'
        set_0 = {str_0}
        float_0 = 3206.548001
        tuple_0 = (float_0,)
        bytes_0 = b'\x99k\xd2\xc0\xea\x9fu\xad\xbaL\xe0\xf6b\x97\xb4'
        host_vars_vars_0 = module_0.HostVarsVars(tuple_0, bytes_0)
        str_1 = 'S\t?Q\t'
        host_vars_0 = module_0.HostVars(set_0, host_vars_vars_0, str_1)
        var_0 = host_vars_0.__len__()
    except BaseException:
        pass

def test_case_12():
    try:
        bool_0 = False
        str_0 = '*$FS'
        set_0 = {str_0, str_0, str_0}
        host_vars_vars_0 = module_0.HostVarsVars(set_0, bool_0)
        float_0 = -1993.4632
        str_1 = "l?('uHWW`lewq"
        int_0 = -692
        host_vars_0 = module_0.HostVars(str_1, host_vars_vars_0, int_0)
        var_0 = host_vars_0.set_host_facts(set_0, float_0)
    except BaseException:
        pass

def test_case_13():
    try:
        bool_0 = False
        tuple_0 = ()
        str_0 = '*$FS'
        set_0 = {str_0, str_0, str_0}
        host_vars_vars_0 = module_0.HostVarsVars(set_0, bool_0)
        host_vars_0 = module_0.HostVars(str_0, host_vars_vars_0, tuple_0)
        var_0 = host_vars_0.__setstate__(tuple_0)
        var_1 = host_vars_0.__deepcopy__(host_vars_0)
        var_2 = host_vars_vars_0.__contains__(set_0)
        float_0 = 1873.395044
        var_3 = host_vars_0.__getitem__(float_0)
    except BaseException:
        pass

def test_case_14():
    try:
        bool_0 = False
        tuple_0 = ()
        str_0 = '*$FS'
        set_0 = {str_0, str_0, str_0}
        host_vars_vars_0 = module_0.HostVarsVars(set_0, bool_0)
        host_vars_0 = module_0.HostVars(str_0, host_vars_vars_0, tuple_0)
        var_0 = host_vars_0.__setstate__(tuple_0)
        var_1 = host_vars_0.__setstate__(host_vars_0)
    except BaseException:
        pass

def test_case_15():
    try:
        tuple_0 = ()
        str_0 = 'Fp'
        set_0 = {str_0, str_0, str_0}
        bool_0 = None
        host_vars_vars_0 = module_0.HostVarsVars(set_0, bool_0)
        host_vars_0 = module_0.HostVars(str_0, host_vars_vars_0, tuple_0)
        var_0 = host_vars_0.__setstate__(tuple_0)
        var_1 = host_vars_0.__setstate__(host_vars_0)
    except BaseException:
        pass