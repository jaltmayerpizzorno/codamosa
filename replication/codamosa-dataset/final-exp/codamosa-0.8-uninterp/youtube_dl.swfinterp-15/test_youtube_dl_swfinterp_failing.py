# Automatically generated by Pynguin.
import youtube_dl.swfinterp as module_0

def test_case_0():
    try:
        str_0 = "o(?<J&{'+x>vq!"
        s_w_f_interpreter_0 = module_0.SWFInterpreter(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bool_0 = False
        int_0 = -70
        multiname_0 = module_0._Multiname(int_0)
        multiname_1 = module_0._Multiname(multiname_0)
        str_0 = 'r'
        dict_0 = None
        multiname_2 = module_0._Multiname(dict_0)
        str_1 = 'http://imgur.com/gallery/Q95ko'
        a_v_m_class_0 = module_0._AVMClass(int_0, str_1)
        var_0 = a_v_m_class_0.make_object()
        a_v_m_class__object_0 = module_0._AVMClass_Object(str_0)
        s_w_f_interpreter_0 = module_0.SWFInterpreter(bool_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = ''
        a_v_m_class__object_0 = module_0._AVMClass_Object(str_0)
        var_0 = a_v_m_class__object_0.__repr__()
    except BaseException:
        pass

def test_case_3():
    try:
        int_0 = 76
        set_0 = {int_0, int_0, int_0}
        scope_dict_0 = module_0._ScopeDict(set_0)
        scope_dict_1 = module_0._ScopeDict(scope_dict_0)
        scope_dict_2 = module_0._ScopeDict(scope_dict_1)
        var_0 = scope_dict_2.__repr__()
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = '9@4B/'
        undefined_0 = module_0._Undefined()
        var_0 = undefined_0.__str__()
        str_1 = None
        set_0 = {str_1, str_0}
        a_v_m_class__object_0 = module_0._AVMClass_Object(set_0)
        var_1 = undefined_0.__bool__()
        dict_0 = {}
        str_2 = 'kEA+|n0#AK+f!11'
        multiname_0 = module_0._Multiname(str_2)
        a_v_m_class_0 = module_0._AVMClass(multiname_0, multiname_0)
        var_2 = a_v_m_class_0.register_methods(dict_0)
        bytes_0 = b'\xdb\xe0S\xc4'
        s_w_f_interpreter_0 = module_0.SWFInterpreter(bytes_0)
    except BaseException:
        pass

def test_case_5():
    try:
        undefined_0 = module_0._Undefined()
        set_0 = {undefined_0, undefined_0, undefined_0, undefined_0}
        str_0 = 'Z'
        list_0 = [set_0, str_0, str_0]
        bool_0 = False
        dict_0 = {undefined_0: set_0, str_0: bool_0}
        str_1 = 'r%@<g+8~L/[fxo'
        dict_1 = {str_0: str_0, str_0: list_0, str_1: str_1}
        bool_1 = False
        a_v_m_class_0 = module_0._AVMClass(dict_1, bool_1, list_0)
        var_0 = a_v_m_class_0.register_methods(dict_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'K\\'
        multiname_0 = module_0._Multiname(str_0)
        var_0 = multiname_0.__repr__()
    except BaseException:
        pass

def test_case_7():
    try:
        undefined_0 = module_0._Undefined()
        var_0 = undefined_0.__hash__()
        var_1 = undefined_0.__hash__()
        var_2 = undefined_0.__hash__()
        var_3 = undefined_0.__str__()
        var_4 = undefined_0.__str__()
        var_5 = undefined_0.__bool__()
        var_6 = undefined_0.__str__()
        s_w_f_interpreter_0 = module_0.SWFInterpreter(undefined_0)
    except BaseException:
        pass

def test_case_8():
    try:
        undefined_0 = module_0._Undefined()
        var_0 = undefined_0.__str__()
        var_1 = undefined_0.__bool__()
        bytes_0 = b'\xdb\xe01S\xc4'
        s_w_f_interpreter_0 = module_0.SWFInterpreter(bytes_0)
    except BaseException:
        pass

def test_case_9():
    try:
        undefined_0 = module_0._Undefined()
        var_0 = undefined_0.__hash__()
        int_0 = -1623
        set_0 = {undefined_0, undefined_0, var_0}
        a_v_m_class_0 = module_0._AVMClass(int_0, set_0)
        scope_dict_0 = module_0._ScopeDict(a_v_m_class_0)
        var_1 = scope_dict_0.__repr__()
        var_2 = undefined_0.__hash__()
        var_3 = undefined_0.__hash__()
        var_4 = undefined_0.__str__()
        var_5 = undefined_0.__str__()
        var_6 = undefined_0.__bool__()
        var_7 = undefined_0.__str__()
        s_w_f_interpreter_0 = module_0.SWFInterpreter(undefined_0)
    except BaseException:
        pass