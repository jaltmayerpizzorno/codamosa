# Automatically generated by Pynguin.
import semantic_release.hvcs as module_0

def test_case_0():
    try:
        gitlab_0 = module_0.Gitlab()
        optional_0 = gitlab_0.token()
        str_0 = gitlab_0.api_url()
        optional_1 = module_0.get_domain()
        dict_0 = {}
        base_0 = module_0.Base(**dict_0)
        str_1 = base_0.api_url()
    except BaseException:
        pass

def test_case_1():
    try:
        base_0 = module_0.Base()
        optional_0 = base_0.token()
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '6\r,{pPpc;J3u\x0c-'
        list_0 = []
        base_0 = module_0.Base(*list_0)
        bool_0 = base_0.check_build_status(str_0, str_0, str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'CHANGE_ID'
        bool_0 = False
        base_0 = module_0.get_hvcs()
        str_1 = base_0.domain()
        token_auth_0 = module_0.TokenAuth(bool_0)
        var_0 = token_auth_0.__call__(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = None
        str_1 = None
        str_2 = '## v'
        bool_0 = module_0.post_changelog(str_0, str_1, str_2, str_2)
        gitlab_0 = module_0.Gitlab()
        str_3 = 'major_emoji'
        str_4 = '/i6=^\rsZrpXwN>]:l'
        str_5 = '#V'
        bool_1 = gitlab_0.check_build_status(str_5, str_4, str_3)
    except BaseException:
        pass

def test_case_5():
    try:
        gitlab_0 = module_0.Gitlab()
        str_0 = gitlab_0.api_url()
        base_0 = module_0.Base()
        str_1 = base_0.domain()
    except BaseException:
        pass