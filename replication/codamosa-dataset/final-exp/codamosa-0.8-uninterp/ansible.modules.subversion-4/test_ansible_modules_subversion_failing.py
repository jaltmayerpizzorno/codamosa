# Automatically generated by Pynguin.
import ansible.modules.subversion as module_0

def test_case_0():
    try:
        str_0 = 'svn'
        bool_0 = True
        subversion_0 = module_0.Subversion(bool_0, str_0, str_0, str_0, bool_0, bool_0, str_0, bool_0)
        var_0 = subversion_0.revert()
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'svn'
        bool_0 = False
        subversion_0 = module_0.Subversion(bool_0, str_0, str_0, str_0, bool_0, bool_0, str_0, bool_0)
        var_0 = subversion_0.revert()
    except BaseException:
        pass

def test_case_2():
    try:
        bool_0 = True
        str_0 = 'sn1Phu!%aF>E1[XI'
        set_0 = {bool_0, str_0}
        list_0 = [set_0, set_0]
        tuple_0 = ()
        subversion_0 = module_0.Subversion(bool_0, str_0, set_0, str_0, bool_0, list_0, tuple_0, tuple_0)
        var_0 = subversion_0.checkout()
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'PZ"x(`Xy=2`\\<:NA'
        str_1 = '5:z-Qd_}k;\x0c'
        dict_0 = {str_0: str_0, str_1: str_1}
        float_0 = 635.85791
        bytes_0 = b'.!\x7f\xbc\xf4\xe3O|\xa2\x14\xc4['
        set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
        list_0 = [float_0, set_0, float_0, bytes_0]
        int_0 = 1652
        float_1 = -1038.713102
        tuple_0 = (int_0, int_0, float_1)
        subversion_0 = None
        tuple_1 = (subversion_0,)
        float_2 = 1564.06
        str_2 = 'ansible.modules.subversion'
        bool_0 = False
        float_3 = 755.0
        subversion_1 = module_0.Subversion(tuple_1, float_2, str_2, bool_0, list_0, float_3, bool_0, float_1)
        float_4 = 0.0001
        int_1 = -365
        subversion_2 = module_0.Subversion(float_0, bytes_0, list_0, tuple_0, subversion_1, float_4, int_1, str_2)
        var_0 = subversion_2.checkout(dict_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = '\r.dB1(OKU7#1K%JNe>y'
        bool_0 = True
        subversion_0 = module_0.Subversion(bool_0, str_0, str_0, str_0, bool_0, bool_0, str_0, bool_0)
        var_0 = subversion_0.export()
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'svn'
        bool_0 = True
        subversion_0 = module_0.Subversion(bool_0, str_0, str_0, str_0, bool_0, bool_0, str_0, bool_0)
        var_0 = subversion_0.switch()
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = '=zu?>'
        int_0 = 25
        str_1 = '%r'
        tuple_0 = (int_0, str_1)
        float_0 = 4412.1
        float_1 = -1328.46
        list_0 = [float_0, float_1, tuple_0]
        subversion_0 = module_0.Subversion(str_0, tuple_0, float_0, float_1, float_1, list_0, int_0, tuple_0)
        bool_0 = True
        bytes_0 = b'\x83\x9ap\x8a\xa1V\x8c\xda'
        bytes_1 = b'\xaf\xd5I\x809{\xd9\xf2)\x181\x0b\xc4Nc'
        dict_0 = {tuple_0: bytes_1, tuple_0: bytes_1}
        subversion_1 = module_0.Subversion(subversion_0, str_0, list_0, bool_0, bytes_0, bytes_1, str_0, dict_0)
        var_0 = subversion_1.update()
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'C'
        str_1 = 'G=0HF\n4jos#z\n)5.'
        str_2 = '#1>\n}{\x0c^YTa}d2+'
        float_0 = 2143.76997
        bytes_0 = b'j\xefq\xf6(Y'
        dict_0 = {str_0: str_1}
        bool_0 = True
        subversion_0 = module_0.Subversion(str_0, str_1, str_2, float_0, float_0, bytes_0, dict_0, bool_0)
        var_0 = subversion_0.needs_update()
    except BaseException:
        pass

def test_case_8():
    try:
        float_0 = 635.85791
        bytes_0 = b'.!\x7f\xbc\xf4\xe3O|\xa2\x14\xc4['
        set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
        list_0 = [float_0, set_0, float_0, bytes_0]
        int_0 = 1652
        float_1 = -1038.713102
        tuple_0 = (int_0, int_0, float_1)
        subversion_0 = None
        tuple_1 = (subversion_0,)
        float_2 = 1564.06
        str_0 = 'ansible.modules.subversion'
        bool_0 = False
        float_3 = 755.0
        subversion_1 = module_0.Subversion(tuple_1, float_2, str_0, bool_0, list_0, float_3, bool_0, float_1)
        float_4 = 0.0001
        int_1 = -365
        subversion_2 = module_0.Subversion(float_0, bytes_0, list_0, tuple_0, subversion_1, float_4, int_1, str_0)
        var_0 = subversion_2.get_remote_revision()
    except BaseException:
        pass

def test_case_9():
    try:
        bool_0 = True
        str_0 = 's%n1P&hu!%aF>E1[XIj'
        set_0 = {bool_0, str_0}
        list_0 = [set_0, set_0]
        tuple_0 = ()
        subversion_0 = module_0.Subversion(bool_0, str_0, set_0, str_0, bool_0, list_0, tuple_0, tuple_0)
        var_0 = subversion_0.has_local_mods()
    except BaseException:
        pass

def test_case_10():
    try:
        bool_0 = True
        str_0 = 's%n1P&hu!%aF>E1[XIj'
        set_0 = {bool_0, str_0}
        list_0 = [set_0, set_0]
        tuple_0 = ()
        subversion_0 = module_0.Subversion(bool_0, str_0, set_0, str_0, bool_0, list_0, tuple_0, tuple_0)
        var_0 = subversion_0.is_svn_repo()
    except BaseException:
        pass

def test_case_11():
    try:
        bool_0 = True
        str_0 = 's%n1P&hu!%aF>E1[XIj'
        set_0 = {bool_0, str_0}
        list_0 = [set_0, set_0]
        tuple_0 = ()
        subversion_0 = module_0.Subversion(bool_0, str_0, set_0, str_0, bool_0, list_0, tuple_0, tuple_0)
        var_0 = subversion_0.export(set_0)
    except BaseException:
        pass