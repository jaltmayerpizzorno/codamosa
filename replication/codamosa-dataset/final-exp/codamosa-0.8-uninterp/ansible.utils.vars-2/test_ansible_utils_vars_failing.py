# Automatically generated by Pynguin.
import ansible.utils.vars as module_0

def test_case_0():
    try:
        bytes_0 = b';Z'
        str_0 = '=af/'
        var_0 = module_0.merge_hash(bytes_0, str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bool_0 = False
        tuple_0 = ()
        var_0 = module_0.combine_vars(bool_0, tuple_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'eyQb'
        int_0 = -255
        str_1 = 'replace'
        var_0 = module_0._isidentifier_PY3(str_1)
        bytes_0 = b'\x0eV\x11\x92\x80\x92t\xaa\x8f\xb9\xd7\xdc\xdfb!d\xfb\xde\xd9\xa6'
        var_1 = module_0._isidentifier_PY3(bytes_0)
        str_2 = 'Key already exists'
        var_2 = module_0.combine_vars(str_2, int_0, str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '`"^*Tb0)'
        tuple_0 = None
        bytes_0 = b'\xc00\xce\xcfSW$\xd9[G\xc7'
        dict_0 = {str_0: str_0, str_0: str_0, str_0: tuple_0, bytes_0: bytes_0}
        list_0 = None
        var_0 = module_0.merge_hash(dict_0, dict_0, list_0)
        var_1 = module_0.get_unique_id()
        var_2 = module_0.combine_vars(str_0, str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        int_0 = 2380
        bool_0 = False
        complex_0 = None
        var_0 = module_0.load_options_vars(complex_0)
        var_1 = module_0.combine_vars(int_0, bool_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'eyQb'
        bytes_0 = b'\x9e\x18'
        bool_0 = True
        var_0 = module_0.load_options_vars(bytes_0)
        float_0 = None
        var_1 = module_0.load_options_vars(float_0)
        var_2 = module_0._isidentifier_PY3(str_0)
        dict_0 = {bool_0: var_0}
        int_0 = 932
        var_3 = module_0.merge_hash(dict_0, int_0, float_0)
    except BaseException:
        pass

def test_case_6():
    try:
        bool_0 = False
        bool_1 = True
        var_0 = module_0.get_unique_id()
        str_0 = 'WzBG&\\'
        var_1 = module_0._isidentifier_PY3(str_0)
        var_2 = module_0.get_unique_id()
        list_0 = [bool_1]
        float_0 = -100.3
        var_3 = module_0.combine_vars(list_0, float_0, bool_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = '<"Me(c'
        int_0 = -1670
        dict_0 = {int_0: str_0}
        list_0 = [int_0, str_0, str_0, dict_0]
        bytes_0 = b'v\xc2l\xe4\xe5\xf1'
        var_0 = module_0.merge_hash(str_0, int_0, list_0, bytes_0)
    except BaseException:
        pass

def test_case_8():
    try:
        int_0 = 2118
        var_0 = module_0.load_options_vars(int_0)
        str_0 = ''
        str_1 = '0c_\x0b7j/c '
        var_1 = module_0.load_options_vars(str_1)
        int_1 = {}
        str_2 = 'C:4q`^&'
        var_2 = module_0._isidentifier_PY3(str_2)
        int_2 = 4
        int_3 = {str_0: int_2}
        bool_0 = True
        str_3 = 'replace'
        var_3 = module_0.merge_hash(int_1, int_3, bool_0, str_3)
        var_4 = module_0.load_extra_vars(int_2)
        var_5 = module_0._isidentifier_PY3(bool_0)
        var_6 = module_0.load_extra_vars(int_0)
        bytes_0 = b'P\xedK\xb5'
        var_7 = module_0.load_options_vars(bytes_0)
        var_8 = module_0.combine_vars(str_0, int_0)
    except BaseException:
        pass