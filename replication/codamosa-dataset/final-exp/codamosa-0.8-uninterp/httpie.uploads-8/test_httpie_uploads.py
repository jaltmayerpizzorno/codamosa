# Automatically generated by Pynguin.
import httpie.uploads as module_0
import requests_toolbelt.multipart.encoder as module_1
import httpie.cli.dicts as module_2

def test_case_0():
    pass

def test_case_1():
    iterable_0 = None
    callable_0 = None
    chunked_upload_stream_0 = module_0.ChunkedUploadStream(iterable_0, callable_0)

def test_case_2():
    multipart_encoder_0 = None
    chunked_multipart_upload_stream_0 = module_0.ChunkedMultipartUploadStream(multipart_encoder_0)

def test_case_3():
    str_0 = ';-s>pD/f\r5h'
    complex_0 = None
    var_0 = module_0.prepare_request_body(str_0, complex_0)

def test_case_4():
    str_0 = ';-s>pD/f\r5h'
    dict_0 = {str_0: str_0}
    multipart_encoder_0 = module_1.MultipartEncoder(dict_0)
    list_0 = [multipart_encoder_0, str_0, str_0]
    var_0 = module_0.prepare_request_body(multipart_encoder_0, list_0)

def test_case_5():
    bytes_0 = b'\xf46#o'
    i_o_0 = None
    str_0 = ''
    multipart_encoder_0 = module_1.MultipartEncoder(str_0)
    str_1 = None
    tuple_0 = (multipart_encoder_0, str_1)
    float_0 = 945.0
    var_0 = module_0.prepare_request_body(bytes_0, i_o_0, tuple_0, float_0)

def test_case_6():
    dict_0 = {}
    request_data_dict_0 = module_2.RequestDataDict(**dict_0)
    bool_0 = None
    var_0 = module_0.prepare_request_body(request_data_dict_0, bool_0)

def test_case_7():
    multipart_request_data_dict_0 = module_2.MultipartRequestDataDict()
    tuple_0 = module_0.get_multipart_data_and_content_type(multipart_request_data_dict_0)

def test_case_8():
    str_0 = ';-s>pD/f\r5h'
    dict_0 = {str_0: str_0}
    multipart_encoder_0 = module_1.MultipartEncoder(dict_0)
    list_0 = [multipart_encoder_0, str_0, str_0]
    callable_0 = None
    int_0 = 293
    var_0 = module_0.prepare_request_body(multipart_encoder_0, callable_0, int_0, list_0)

def test_case_9():
    multipart_request_data_dict_0 = module_2.MultipartRequestDataDict()
    str_0 = "'y"
    tuple_0 = module_0.get_multipart_data_and_content_type(multipart_request_data_dict_0, str_0, str_0)

def test_case_10():
    bytes_0 = b'a'
    bytes_1 = b'b'
    bytes_2 = [bytes_0, bytes_1]
    var_0 = lambda chunk: print(chunk)
    chunked_upload_stream_0 = module_0.ChunkedUploadStream(bytes_2, var_0)
    iterable_0 = chunked_upload_stream_0.__iter__()
    var_1 = next(iterable_0)
    var_2 = next(iterable_0)