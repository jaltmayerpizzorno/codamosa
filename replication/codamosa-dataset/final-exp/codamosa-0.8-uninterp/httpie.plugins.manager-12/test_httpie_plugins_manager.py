# Automatically generated by Pynguin.
import httpie.plugins.manager as module_0

def test_case_0():
    pass

def test_case_1():
    str_0 = 'Apply defaults to output options, or validate the provided ones.\n\n        The default output options are stdout-type-sensitive.\n\n        '
    dict_0 = {str_0: str_0}
    plugin_manager_0 = module_0.PluginManager(**dict_0)
    var_0 = plugin_manager_0.register()
    var_1 = plugin_manager_0.load_installed_plugins()

def test_case_2():
    plugin_manager_0 = module_0.PluginManager()
    list_0 = plugin_manager_0.get_transport_plugins()

def test_case_3():
    plugin_manager_0 = module_0.PluginManager()
    var_0 = plugin_manager_0.load_installed_plugins()

def test_case_4():
    plugin_manager_0 = module_0.PluginManager()
    dict_0 = plugin_manager_0.get_auth_plugin_mapping()

def test_case_5():
    plugin_manager_0 = module_0.PluginManager()
    dict_0 = plugin_manager_0.get_formatters_grouped()

def test_case_6():
    str_0 = '^n'
    dict_0 = {str_0: str_0, str_0: str_0}
    plugin_manager_0 = module_0.PluginManager()
    var_0 = plugin_manager_0.__repr__()
    plugin_manager_1 = module_0.PluginManager(**dict_0)
    list_0 = plugin_manager_1.get_converters()

def test_case_7():
    str_0 = '?%;'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    plugin_manager_0 = module_0.PluginManager(**dict_0)
    var_0 = plugin_manager_0.__repr__()