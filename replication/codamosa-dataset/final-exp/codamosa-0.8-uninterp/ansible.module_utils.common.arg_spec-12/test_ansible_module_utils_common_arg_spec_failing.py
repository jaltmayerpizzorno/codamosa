# Automatically generated by Pynguin.
import ansible.module_utils.common.arg_spec as module_0

def test_case_0():
    try:
        str_0 = '8<c27\x0c'
        str_1 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
        str_2 = {str_0: str_1}
        argument_spec_validator_0 = module_0.ArgumentSpecValidator(str_2)
        list_0 = []
        var_0 = argument_spec_validator_0.validate(list_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '#('
        list_0 = [str_0, str_0, str_0, str_0]
        argument_spec_validator_0 = module_0.ArgumentSpecValidator(str_0, list_0)
    except BaseException:
        pass

def test_case_2():
    try:
        module_argument_spec_validator_0 = module_0.ModuleArgumentSpecValidator()
    except BaseException:
        pass

def test_case_3():
    try:
        dict_0 = {}
        bool_0 = False
        argument_spec_validator_0 = module_0.ArgumentSpecValidator(dict_0, bool_0)
        var_0 = argument_spec_validator_0.validate(dict_0)
        float_0 = -673.966
        argument_spec_validator_1 = module_0.ArgumentSpecValidator(argument_spec_validator_0, float_0)
    except BaseException:
        pass

def test_case_4():
    try:
        dict_0 = {}
        list_0 = [dict_0, dict_0, dict_0]
        module_argument_spec_validator_0 = module_0.ModuleArgumentSpecValidator(*list_0)
        argument_spec_validator_0 = module_0.ArgumentSpecValidator(dict_0)
        var_0 = module_argument_spec_validator_0.validate(list_0)
    except BaseException:
        pass