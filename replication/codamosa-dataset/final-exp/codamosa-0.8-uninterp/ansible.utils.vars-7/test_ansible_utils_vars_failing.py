# Automatically generated by Pynguin.
import ansible.utils.vars as module_0

def test_case_0():
    try:
        int_0 = 4095
        dict_0 = {int_0: int_0, int_0: int_0}
        var_0 = module_0.combine_vars(int_0, dict_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = b''
        set_0 = set()
        var_0 = module_0.combine_vars(bytes_0, set_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b'u_^\xcf\xe4V\x15\x99\x99u\xb5S\xa4H\x15)\x1c\\'
        str_0 = '4_Uy9UKh\rf+]l/x'
        bool_0 = True
        var_0 = module_0.combine_vars(bytes_0, str_0, bool_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'n)AV&<s,|(\x0c=oA1@p'
        bytes_0 = b'qM;[4\x89q\x17'
        var_0 = module_0.merge_hash(str_0, bytes_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'u\t?N+Kim}u9NJ[y'
        var_0 = module_0._isidentifier_PY3(str_0)
        int_0 = None
        var_1 = module_0.load_options_vars(int_0)
        float_0 = 119.3578
        set_0 = {float_0}
        tuple_0 = (float_0, set_0, set_0)
        var_2 = module_0.get_unique_id()
        set_1 = set()
        bytes_0 = b'&\x15\xba\xc4\x1a\x08\xbf'
        list_0 = [var_1, str_0, int_0, str_0]
        dict_0 = {float_0: tuple_0, int_0: set_0}
        var_3 = module_0.merge_hash(set_1, bytes_0, list_0, dict_0)
    except BaseException:
        pass

def test_case_5():
    try:
        dict_0 = {}
        float_0 = 1530.0
        var_0 = module_0.combine_vars(dict_0, float_0)
    except BaseException:
        pass

def test_case_6():
    try:
        list_0 = []
        var_0 = module_0._isidentifier_PY3(list_0)
        bool_0 = True
        var_1 = module_0.load_extra_vars(bool_0)
        str_0 = '}X[m_('
        set_0 = None
        var_2 = module_0.combine_vars(str_0, set_0, list_0)
    except BaseException:
        pass

def test_case_7():
    try:
        var_0 = {}
        str_0 = 'foo'
        str_1 = 'bar'
        str_2 = {str_0: str_1}
        var_1 = module_0.merge_hash(var_0, str_2)
        var_2 = module_0.merge_hash(str_2, var_1)
        bool_0 = True
        var_3 = module_0.load_options_vars(bool_0)
        str_3 = {str_0: str_1}
        str_4 = {str_0: str_1}
        var_4 = module_0.merge_hash(str_3, str_4)
        str_5 = 'baz'
        str_6 = {str_0: str_5}
        var_5 = module_0.merge_hash(str_0, str_6)
    except BaseException:
        pass

def test_case_8():
    try:
        var_0 = {}
        str_0 = 'foo'
        str_1 = 'm{rg'
        str_2 = {str_0: str_1}
        var_1 = module_0.merge_hash(var_0, str_2)
        var_2 = {}
        var_3 = module_0._isidentifier_PY3(str_0)
        var_4 = module_0.merge_hash(str_2, var_2)
        str_3 = {str_0: str_1}
        str_4 = {str_0: str_3, str_1: var_0}
        var_5 = module_0.load_extra_vars(str_2)
        var_6 = module_0.merge_hash(str_3, str_4)
        str_5 = {str_0: str_1}
        str_6 = {str_0: str_0}
        var_7 = module_0.merge_hash(str_5, str_6)
        bytes_0 = b'\x7f@ma!\x17\xb7\xddH'
        var_8 = module_0.load_extra_vars(bytes_0)
        str_7 = 'def'
        var_9 = module_0.load_extra_vars(bytes_0)
        var_10 = module_0._isidentifier_PY3(str_7)
        list_0 = None
        var_11 = module_0.load_options_vars(list_0)
        bytes_1 = b'6\xf7\xfb\xaa'
        var_12 = module_0.combine_vars(bytes_1, bytes_1)
    except BaseException:
        pass