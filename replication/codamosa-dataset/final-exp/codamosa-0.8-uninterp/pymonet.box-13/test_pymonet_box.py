# Automatically generated by Pynguin.
import pymonet.box as module_0
import builtins as module_1

def test_case_0():
    pass

def test_case_1():
    float_0 = -2079.24275
    box_0 = module_0.Box(float_0)

def test_case_2():
    var_0 = None
    box_0 = module_0.Box(var_0)
    var_1 = box_0.to_either()
    var_2 = box_0.to_either()
    box_1 = module_0.Box(var_0)
    dict_0 = {}
    object_0 = module_1.object(**dict_0)
    var_3 = box_0.to_lazy()
    bool_0 = box_1.__eq__(object_0)

def test_case_3():
    dict_0 = None
    int_0 = 2341
    box_0 = module_0.Box(int_0)
    str_0 = box_0.__str__()
    object_0 = module_1.object()
    box_1 = module_0.Box(dict_0)
    bool_0 = box_1.__eq__(object_0)
    box_2 = module_0.Box(object_0)
    bool_1 = box_2.__eq__(object_0)

def test_case_4():
    int_0 = -2490
    str_0 = '\n        Transform Validation to Try.\n\n        :returns: successfully Try with Validation value value. Try is successful when Validation has no errors\n        :rtype: Try[A]\n        '
    str_1 = '\n        Transform Box into not empty Maybe.\n\n        :returns: non empty Maybe monad with previous value\n        :rtype: Maybe[A]\n        '
    dict_0 = {str_0: str_0, str_1: str_0}
    box_0 = module_0.Box(dict_0)
    var_0 = box_0.to_maybe()
    box_1 = module_0.Box(int_0)
    var_1 = box_1.to_try()

def test_case_5():
    set_0 = set()
    box_0 = module_0.Box(set_0)
    var_0 = box_0.to_either()

def test_case_6():
    float_0 = 2235.0
    dict_0 = {float_0: float_0, float_0: float_0}
    box_0 = module_0.Box(dict_0)
    var_0 = box_0.to_lazy()
    box_1 = module_0.Box(float_0)
    var_1 = box_1.to_lazy()

def test_case_7():
    float_0 = -2079.24275
    box_0 = module_0.Box(float_0)
    var_0 = box_0.to_validation()

def test_case_8():
    int_0 = 1
    box_0 = module_0.Box(int_0)
    box_1 = module_0.Box(int_0)
    int_1 = 2
    box_2 = module_0.Box(int_1)
    box_3 = module_0.Box(int_1)
    box_4 = module_0.Box(int_0)
    box_5 = module_0.Box(int_1)
    var_0 = box_4 != box_5
    box_6 = module_0.Box(int_1)
    box_7 = module_0.Box(int_0)
    var_1 = box_6 != box_7
    box_8 = module_0.Box(int_1)
    int_2 = 3
    box_9 = module_0.Box(int_2)
    int_3 = [int_0, int_1, int_2]
    box_10 = module_0.Box(int_3)
    box_11 = module_0.Box(int_3)