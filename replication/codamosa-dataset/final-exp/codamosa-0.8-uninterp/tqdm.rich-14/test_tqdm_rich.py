# Automatically generated by Pynguin.
import tqdm.rich as module_0
import rich.progress as module_1
import typing as module_2

def test_case_0():
    pass

def test_case_1():
    fraction_column_0 = module_0.FractionColumn()
    str_0 = 'n>]'
    float_0 = 5072.742971
    bool_0 = False
    progress_0 = module_1.Progress(refresh_per_second=float_0, speed_estimate_period=float_0, redirect_stderr=bool_0)
    var_0 = progress_0.add_task(str_0, bool_0, float_0, bool_0)
    list_0 = []
    bool_1 = True
    task_0 = module_1.Task(var_0, str_0, float_0, float_0, list_0, bool_1)
    var_1 = fraction_column_0.render(task_0)
    fraction_column_1 = module_0.FractionColumn()

def test_case_2():
    rate_column_0 = module_0.RateColumn()

def test_case_3():
    var_0 = None
    str_0 = 'disable'
    float_0 = 1060.360462428699
    callable_0 = None
    task_0 = module_1.Task(var_0, str_0, float_0, float_0, callable_0)
    bytes_0 = b'\xf1\x82.\xcf\xff\xc1\xfb\x1dk\xd5\\\xc4X\xc1H'
    rate_column_0 = module_0.RateColumn(bytes_0)
    var_1 = rate_column_0.render(task_0)

def test_case_4():
    str_0 = 'disable'
    float_0 = 1074.0405587666255
    str_1 = '{0:2.1f}'
    console_dimensions_0 = None
    dict_0 = {str_0: float_0, str_1: console_dimensions_0}
    tqdm_rich_0 = module_0.tqdm_rich(**dict_0)
    var_0 = tqdm_rich_0.display()

def test_case_5():
    str_0 = 'disable'
    float_0 = 1062.8
    str_1 = '{0:H2.1f}'
    console_dimensions_0 = None
    dict_0 = {str_0: float_0, str_1: console_dimensions_0}
    tqdm_rich_0 = module_0.tqdm_rich(**dict_0)
    var_0 = tqdm_rich_0.reset()

def test_case_6():
    var_0 = None
    str_0 = 'disable'
    text_i_o_0 = module_2.TextIO()
    fraction_column_0 = module_0.FractionColumn(text_i_o_0)
    float_0 = 1062.8
    str_1 = '{0:2.1f}'
    console_dimensions_0 = None
    dict_0 = {str_0: float_0, str_1: console_dimensions_0}
    callable_0 = None
    str_2 = 'S@'
    task_0 = module_1.Task(var_0, str_2, float_0, float_0, callable_0)
    var_1 = fraction_column_0.render(task_0)
    bytes_0 = b'\xf1\x82.\xcf\xff\xc1\xfb\x1dk\xd5\\\xc4X\xc1H'
    rate_column_0 = module_0.RateColumn(bytes_0)
    var_2 = rate_column_0.render(task_0)
    tqdm_rich_0 = module_0.tqdm_rich(**dict_0)
    var_3 = tqdm_rich_0.close()