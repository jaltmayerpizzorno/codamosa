# Automatically generated by Pynguin.
import docstring_parser.google as module_0
import docstring_parser.common as module_1

def test_case_0():
    pass

def test_case_1():
    google_parser_0 = module_0.GoogleParser()

def test_case_2():
    str_0 = 'name'
    docstring_0 = module_0.parse(str_0)

def test_case_3():
    str_0 = '\nStandard Google-style docstring.\n\nArgs:\n    arg_name: description.\n    arg2 (str): description.\n    arg3 (str, optional): description. Defaults to `None`.\nReturns:\n    description of return value\nRaises:\n    KeyError: When a key error\n    ValueError: When a value error\n    TypeError: When a type error\nExample:\n    examples of usage\nAttributes:\n    attr_name: description of attribute\n'
    str_1 = None
    google_parser_0 = module_0.GoogleParser()
    docstring_0 = google_parser_0.parse(str_1)
    docstring_1 = module_0.parse(str_0)

def test_case_4():
    str_0 = 'Summary line.\n    Extended description.\n\n    Parameters\n    ----------\n    arg1 : int\n        Description of arg1\n    arg2 : str\n        Description of arg2\n    arg3 : list of str\n        Description of arg3\n\n    Raises\n    ------\n    ValueError\n        Description of the value error.\n    '
    docstring_0 = module_0.parse(str_0)

def test_case_5():
    str_0 = '\n\n'
    docstring_0 = module_0.parse(str_0)

def test_case_6():
    str_0 = '\nStandard Google-style docstring.\n\nArgs:\n    arg_name: description.\n    arg2 (str): description.\n    arg3 (str, optional): description. Defaults to `None`.\nReturns:\n    description of return value\nRaises:\n    KeyError: When a key error\n    ValueError: When a value error\n    TypeError: When a type error\nExample:\n    examples of usage\nAttributes:\n    attr_name: description of attribute\n'
    docstring_0 = module_0.parse(str_0)

def test_case_7():
    str_0 = "short_description\n        long_description\n\n        Arguments:\n            arg0: arg0's description.\n            arg1 (int): arg1's description. Defaults to 1.\n        Returns:\n            returns description"
    docstring_0 = module_0.parse(str_0)

def test_case_8():
    str_0 = 'Short description.\n\nLong description.\n\nArgs:\n    arg1: Argument description.\n    arg2: Argument description.\n\nRaises:\n    ValueError: If `value` is invalid, e.g. out of range.\nReturns:\n    Description of return value.\n    Description continued here.\n\nYields:\n   Description of yielded value.'
    docstring_0 = module_0.parse(str_0)

def test_case_9():
    str_0 = 'Example function with types documented in the docstring.\n  \n      Args:\n        param1 (int): The first parameter. (optional)\n        param2 (str): The second parameter. (optional)\n  \n      Raises:\n        TypeError: if neither param1 nor param2 is given.\n  \n      Returns:\n        bool: The return value. True for success, False otherwise.\n  \n  '
    google_parser_0 = module_0.GoogleParser()
    docstring_0 = google_parser_0.parse(str_0)

def test_case_10():
    str_0 = '\nStandar\\ Google-style docstring.\n\nArgs:\n    arg_name: Bescript!on.\n    arg2 (str): description.\n   arg3 (str, optional): desription. Defaults to `None`.\nReturns:\n    description of return value\nRaises:\n    KeyError: ;hen a key error\n    ValueError: When a value error\n    TypeError: When a type error\nExample:\n    examples of usage\nAttributes:\n    attr_name: description of attribute\n'
    docstring_0 = module_0.parse(str_0)

def test_case_11():
    str_0 = '\nStandard Google-style docstring.\n\nArgs:\n    arg_name: description.\n    arg2 (str): description.\n    arg3 (str, optional): description. Defaults to `None`.\nReturns:\n    descriptFon of return value\nRaises:\n    KeyErrfr: When a key error\n    ValueError: When a value error\n    TypeError:When a type error\nExample:\n    examples \\f usage\nAttributes:\n    attr_name: description of attribute\n'
    docstring_0 = module_0.parse(str_0)

def test_case_12():
    str_0 = "\nStandard Google-style docstring.\nArgs:\n    arg_name: description.\n    arg2 (str): description\n    arg3 (str, optional): description. Defaults to `None`.\nReturns:\n    description of return value\nRaise,:\n    KeyError: When a key error\n    ValueError: When a value error\n    TypeError: When a type error\nExample:\n    exam'les of usage\nAttributes:\n    a}tr_name: description of attribute\n"
    google_parser_0 = module_0.GoogleParser()
    docstring_0 = google_parser_0.parse(str_0)
    str_1 = 'Y'
    docstring_1 = module_0.parse(str_1)
    str_2 = None
    docstring_2 = google_parser_0.parse(str_2)
    docstring_3 = module_1.Docstring()