# Automatically generated by Pynguin.
import httpie.context as module_0
import httpie.output.formatters.colors as module_1

def test_case_0():
    try:
        environment_0 = module_0.Environment()
        color_formatter_0 = module_1.ColorFormatter(environment_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'application/json'
        environment_0 = module_0.Environment()
        optional_0 = module_1.get_lexer(str_0)
        var_0 = environment_0.__repr__()
        color_formatter_0 = module_1.ColorFormatter(environment_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = "Return processed `content`.\n\n        :param mime: E.g., 'application/atom+xml'.\n        :param content: The body content as text\n\n        "
        solarized256_style_0 = module_1.Solarized256Style()
        optional_0 = module_1.get_lexer(str_0, solarized256_style_0)
        environment_0 = module_0.Environment()
        optional_1 = module_1.get_lexer(str_0)
        color_formatter_0 = module_1.ColorFormatter(environment_0)
    except BaseException:
        pass

def test_case_3():
    try:
        solarized256_style_0 = module_1.Solarized256Style()
        str_0 = "({&'(XnY}obQ%\r/b\nj\n"
        list_0 = [solarized256_style_0, str_0, solarized256_style_0, str_0]
        simplified_h_t_t_p_lexer_0 = module_1.SimplifiedHTTPLexer()
        optional_0 = module_1.get_lexer(str_0, list_0, simplified_h_t_t_p_lexer_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = '/CZM\ng=o'
        solarized256_style_0 = module_1.Solarized256Style()
        list_0 = [solarized256_style_0, str_0, solarized256_style_0, str_0]
        simplified_h_t_t_p_lexer_0 = module_1.SimplifiedHTTPLexer()
        optional_0 = module_1.get_lexer(str_0, list_0, str_0)
        optional_1 = module_1.get_lexer(str_0, solarized256_style_0)
        optional_2 = module_1.get_lexer(str_0)
        solarized256_style_1 = module_1.Solarized256Style()
        environment_0 = module_0.Environment()
        color_formatter_0 = module_1.ColorFormatter(environment_0)
    except BaseException:
        pass