# Automatically generated by Pynguin.
import ansible.plugins.action.assert as module_0

def test_case_0():
    try:
        tuple_0 = ()
        str_0 = '?qNNvI"ydGz\tl'
        float_0 = 1829.955787
        bytes_0 = b'\x15e\xbf1\xb6{!\x15\xc6\xf9\x04\xdf\xfe\xf0\x01\xe9\xa4\xb1\xc1'
        set_0 = None
        int_0 = 307
        action_module_0 = None
        tuple_1 = ()
        action_module_1 = module_0.ActionModule(bytes_0, set_0, int_0, action_module_0, tuple_1, int_0)
        tuple_2 = (action_module_1, tuple_1, float_0)
        str_1 = '3[8W\\1E4@'
        action_module_2 = module_0.ActionModule(str_0, float_0, tuple_2, tuple_2, str_1, bytes_0)
        var_0 = action_module_2.run(tuple_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bool_0 = False
        str_0 = 'recurse'
        int_0 = 1652
        tuple_0 = ()
        list_0 = [int_0]
        set_0 = {int_0, int_0, tuple_0, int_0}
        bool_1 = True
        int_1 = 15
        float_0 = 102.0
        action_module_0 = module_0.ActionModule(tuple_0, list_0, set_0, bool_1, int_1, float_0)
        str_1 = 'artifact'
        int_2 = 3
        action_module_1 = module_0.ActionModule(int_0, action_module_0, int_1, str_1, set_0, int_2)
        var_0 = action_module_1.run(bool_0, str_0)
    except BaseException:
        pass