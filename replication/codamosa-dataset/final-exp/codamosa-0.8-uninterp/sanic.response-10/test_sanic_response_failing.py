# Automatically generated by Pynguin.
import sanic.response as module_0
import pathlib as module_1

def test_case_0():
    try:
        str_0 = 'ej.?O\r=3)>!\x0c~5LeP'
        h_t_t_p_response_0 = module_0.HTTPResponse(str_0, str_0)
        dict_0 = None
        pure_path_0 = module_1.PurePath(**dict_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '/'
        int_0 = -158
        str_1 = None
        h_t_t_p_response_0 = module_0.html(str_1, int_0)
        h_t_t_p_response_1 = module_0.file(str_1, int_0, str_0)
        h_t_t_p_response_2 = module_0.json(int_0)
        bytes_0 = None
        h_t_t_p_response_1.send(bytes_0)
    except BaseException:
        pass

def test_case_2():
    try:
        pure_path_0 = module_1.PurePath()
        str_0 = 'sI0O0zhw"\x0b*"G.7'
        str_1 = None
        base_h_t_t_p_response_0 = module_0.BaseHTTPResponse()
        str_2 = 'X.'
        str_3 = None
        dict_0 = {str_1: str_2, str_3: str_3}
        h_t_t_p_response_0 = module_0.text(str_1, dict_0, str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '!'
        dict_0 = {}
        h_t_t_p_response_0 = module_0.redirect(str_0, dict_0)
        str_1 = None
        int_0 = 2508
        str_2 = 'deprecated'
        h_t_t_p_response_1 = module_0.file(str_1, int_0, str_2)
        bytes_0 = None
        h_t_t_p_response_1.send(bytes_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = None
        list_0 = [str_0]
        h_t_t_p_response_0 = module_0.html(str_0)
        callable_0 = None
        int_0 = 474
        var_0 = module_0.stream(callable_0, int_0, list_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = '!'
        dict_0 = {str_0: str_0, str_0: str_0}
        h_t_t_p_response_0 = module_0.redirect(str_0, dict_0)
        int_0 = -158
        str_1 = None
        h_t_t_p_response_1 = module_0.html(str_1, int_0)
        int_1 = 2508
        str_2 = 'deprecated'
        h_t_t_p_response_2 = module_0.file(str_1, int_1, str_2)
        bytes_0 = None
        h_t_t_p_response_2.send(bytes_0)
    except BaseException:
        pass

def test_case_6():
    try:
        tuple_0 = ()
        int_0 = 511
        streaming_h_t_t_p_response_0 = module_0.StreamingHTTPResponse(tuple_0, int_0)
        list_0 = [streaming_h_t_t_p_response_0, int_0, int_0, streaming_h_t_t_p_response_0]
        dict_0 = {}
        var_0 = streaming_h_t_t_p_response_0.send(*list_0, **dict_0)
        tuple_1 = ()
        base_h_t_t_p_response_0 = module_0.BaseHTTPResponse()
        str_0 = '` does not match pattern for type `'
        base_h_t_t_p_response_1 = module_0.BaseHTTPResponse()
        str_1 = '5d{g:~z|E4(0\x0b'
        dict_1 = {str_0: str_1}
        str_2 = '\x0bY\r'
        base_h_t_t_p_response_2 = None
        list_1 = [base_h_t_t_p_response_0, base_h_t_t_p_response_2, str_0, str_1]
        h_t_t_p_response_0 = module_0.json(tuple_1, int_0, dict_1, str_2, list_1, **dict_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = None
        list_0 = [str_0]
        streaming_h_t_t_p_response_0 = module_0.file_stream(str_0, str_0)
        var_0 = streaming_h_t_t_p_response_0.send(*list_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = ''
        str_1 = None
        list_0 = [str_1]
        streaming_h_t_t_p_response_0 = module_0.file_stream(str_0, str_0)
        var_0 = streaming_h_t_t_p_response_0.send(*list_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = '/'
        int_0 = -158
        h_t_t_p_response_0 = module_0.file(str_0, int_0, str_0)
        bytes_0 = None
        h_t_t_p_response_0.send(bytes_0)
    except BaseException:
        pass

def test_case_10():
    try:
        int_0 = -158
        str_0 = None
        h_t_t_p_response_0 = module_0.html(str_0, int_0)
        int_1 = -3060
        str_1 = ''
        str_2 = 'ZsAF+n:~,?z1Ogw,7K|'
        dict_0 = {str_1: str_2, str_2: str_0, str_1: str_0, str_2: str_0}
        none_type_0 = None
        h_t_t_p_response_1 = module_0.file(str_0, int_1, str_0, dict_0, none_type_0)
        streaming_h_t_t_p_response_0 = None
        h_t_t_p_response_1.send(streaming_h_t_t_p_response_0)
    except BaseException:
        pass