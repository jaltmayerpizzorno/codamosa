# Automatically generated by Pynguin.
import ansible.module_utils.common.dict_transformations as module_0

def test_case_0():
    try:
        str_0 = 's%%hPgU:Xh1-[Gl\r?H4L'
        var_0 = module_0.camel_dict_to_snake_dict(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = "Write-Output '%s'"
        set_0 = {str_0}
        var_0 = module_0.dict_merge(str_0, set_0)
        str_1 = '\n        Compiles and returns the task list for this play, compiled from the\n        roles (which are themselves compiled recursively) and/or the list of\n        tasks specified in the play.\n        '
        str_2 = ''
        list_0 = []
        dict_0 = {str_1: str_1, str_1: list_0}
        var_1 = module_0.dict_merge(str_2, dict_0)
    except BaseException:
        pass

def test_case_2():
    try:
        complex_0 = None
        list_0 = []
        var_0 = module_0.recursive_diff(complex_0, list_0)
    except BaseException:
        pass

def test_case_3():
    try:
        int_0 = 401
        bytes_0 = b''
        tuple_0 = (int_0, bytes_0)
        dict_0 = {tuple_0: int_0}
        var_0 = module_0.camel_dict_to_snake_dict(dict_0)
    except BaseException:
        pass

def test_case_4():
    try:
        set_0 = set()
        var_0 = module_0.snake_dict_to_camel_dict(set_0)
        int_0 = -2031
        bool_0 = True
        complex_0 = None
        var_1 = module_0.snake_dict_to_camel_dict(complex_0)
        var_2 = module_0.recursive_diff(bool_0, int_0)
    except BaseException:
        pass

def test_case_5():
    try:
        list_0 = []
        var_0 = module_0.snake_dict_to_camel_dict(list_0)
        bytes_0 = None
        str_0 = "sshpass: invalid option -- 'P'"
        var_1 = module_0.dict_merge(bytes_0, str_0)
        set_0 = {str_0, str_0, str_0, bytes_0}
        dict_0 = {var_1: set_0}
        int_0 = -2031
        var_2 = module_0.camel_dict_to_snake_dict(dict_0)
        var_3 = module_0.recursive_diff(int_0, dict_0)
    except BaseException:
        pass

def test_case_6():
    try:
        bytes_0 = None
        list_0 = [bytes_0, bytes_0, bytes_0]
        var_0 = module_0.snake_dict_to_camel_dict(list_0)
        str_0 = "sshpass: invalid option -- 'P'"
        var_1 = module_0.dict_merge(bytes_0, str_0)
        str_1 = 'swapinfo'
        var_2 = module_0.snake_dict_to_camel_dict(str_1)
        str_2 = 'lqpz@~acr;9sb91'
        bytes_1 = b'\xd4\x02k\xe8\xfdQ>x\x8f}\x1e\xf3'
        var_3 = module_0.recursive_diff(str_2, bytes_1)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'V?8Jz(-ydr_X>)'
        float_0 = -490.0
        dict_0 = {str_0: str_0, str_0: str_0, float_0: float_0, float_0: str_0}
        var_0 = module_0.dict_merge(str_0, dict_0)
    except BaseException:
        pass

def test_case_8():
    try:
        bytes_0 = None
        str_0 = 'Entr PIN f_Wr'
        var_0 = module_0.dict_merge(bytes_0, str_0)
        set_0 = {str_0, str_0, str_0, bytes_0}
        dict_0 = {var_0: set_0}
        var_1 = module_0.snake_dict_to_camel_dict(dict_0)
        var_2 = module_0.camel_dict_to_snake_dict(dict_0)
        var_3 = module_0.dict_merge(dict_0, dict_0)
        tuple_0 = ()
        tuple_1 = (set_0, tuple_0)
        var_4 = module_0.recursive_diff(str_0, tuple_1)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'dromedaryCase'
        str_1 = 'SubValue'
        int_0 = 2
        str_2 = 'cs@noORZu*}mHLAz?u_'
        str_3 = '~[qPo}O;(.1=A'
        int_1 = -763
        list_0 = [int_1]
        var_0 = module_0.dict_merge(str_3, list_0)
        float_0 = None
        dict_0 = {str_1: str_0, str_2: float_0, str_2: str_0, float_0: str_2}
        tuple_0 = (str_1, dict_0, int_0)
        int_2 = 3766
        var_1 = module_0.dict_merge(tuple_0, int_2)
        tuple_1 = (tuple_0,)
        var_2 = module_0.dict_merge(float_0, tuple_1)
        var_3 = module_0.snake_dict_to_camel_dict(dict_0)
    except BaseException:
        pass