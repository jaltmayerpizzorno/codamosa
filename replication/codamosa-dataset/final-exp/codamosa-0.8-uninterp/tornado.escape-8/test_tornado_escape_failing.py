# Automatically generated by Pynguin.
import tornado.escape as module_0

def test_case_0():
    try:
        bytes_0 = None
        str_0 = module_0.linkify(bytes_0)
    except BaseException:
        pass

def test_case_1():
    try:
        var_0 = None
        str_0 = module_0.json_encode(var_0)
        bytes_0 = None
        str_1 = module_0.xhtml_unescape(bytes_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b'q\xf0\xb0\xb8\x01\xa2\xf8qU'
        any_0 = module_0.json_decode(bytes_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'You can link to http://www.tornadowe.org/enCsable/ or '
        str_1 = 'to https://github.com/tornadoweb/tornado'
        var_0 = str_0 + str_1
        bool_0 = True
        str_2 = module_0.linkify(str_0, bool_0, str_0)
        bool_1 = False
        bool_2 = None
        str_3 = module_0.linkify(str_0, bool_1, bool_2)
        str_4 = module_0.linkify(str_2)
        optional_0 = module_0.utf8(str_4)
        str_5 = module_0.linkify(str_3)
        bytes_0 = b'\xcd'
        bool_3 = True
        bool_4 = True
        dict_0 = module_0.parse_qs_bytes(bytes_0, bool_3, bool_4)
    except BaseException:
        pass

def test_case_4():
    try:
        bytes_0 = b'2\xb485\x8c\x8c\xfe\xd7\xf4&B\xa6\x93i\xf1rKN\xa8'
        any_0 = module_0.recursive_unicode(bytes_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'You can link to http://www.tornadowe.org/enCstable/ or '
        str_1 = 'to https://github.com/tornadoweb/tornado'
        var_0 = str_0 + str_1
        str_2 = module_0.xhtml_unescape(str_0)
        bool_0 = True
        str_3 = module_0.linkify(str_2, bool_0, str_0)
        bool_1 = None
        var_1 = module_0.url_unescape(str_3, bool_1)
        any_0 = module_0.json_decode(str_3)
    except BaseException:
        pass

def test_case_6():
    try:
        bytes_0 = b'\x0c'
        optional_0 = module_0.utf8(bytes_0)
        bytes_1 = b'\xe6\x14]\x16'
        bool_0 = True
        dict_0 = None
        bool_1 = None
        var_0 = module_0.url_unescape(bytes_0, dict_0, bool_1)
        str_0 = '#'
        str_1 = module_0.linkify(bytes_1, bool_0, str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = '\tar*'
        str_1 = module_0.url_escape(str_0)
        str_2 = module_0.xhtml_unescape(str_0)
        str_3 = 'Spt;u(%'
        str_4 = module_0.xhtml_unescape(str_3)
        bool_0 = False
        str_5 = 'Ner4t{\tp81-[O\\Mg7\np#'
        any_0 = module_0.recursive_unicode(bool_0)
        str_6 = module_0.linkify(str_1, bool_0, str_5)
        optional_0 = module_0.utf8(str_0)
        optional_1 = module_0.utf8(str_0)
        bytes_0 = b'\x17+3\xc9\x86\x1a\t\xb7[\x118\x03'
        bool_1 = True
        dict_0 = module_0.parse_qs_bytes(bytes_0, bool_1)
        var_0 = module_0.url_unescape(str_2, str_4, bool_0)
        optional_2 = module_0.to_unicode(bytes_0)
    except BaseException:
        pass

def test_case_8():
    try:
        bool_0 = False
        optional_0 = module_0.utf8(bool_0)
    except BaseException:
        pass

def test_case_9():
    try:
        bytes_0 = None
        set_0 = {bytes_0}
        tuple_0 = (set_0, set_0)
        list_0 = [tuple_0, bytes_0, set_0, tuple_0]
        any_0 = module_0.recursive_unicode(list_0)
        str_0 = 'frf!s&!\nt{%E'
        var_0 = module_0.url_unescape(str_0, str_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = 'a*<.v'
        bool_0 = False
        dict_0 = module_0.parse_qs_bytes(str_0)
        str_1 = module_0.url_escape(str_0, bool_0)
        bool_1 = False
        optional_0 = module_0.to_unicode(bool_1)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = 'to https:/>githb.com/tornau&web/tornado'
        str_1 = module_0.linkify(str_0)
        bool_0 = True
        str_2 = 'y/\x0c$^N,^F0xFnZQb]-'
        str_3 = module_0.linkify(str_1, bool_0)
        str_4 = module_0.url_escape(str_2, bool_0)
        str_5 = module_0.xhtml_unescape(str_3)
        any_0 = module_0.recursive_unicode(str_0)
        str_6 = module_0.linkify(str_1, bool_0, bool_0)
    except BaseException:
        pass