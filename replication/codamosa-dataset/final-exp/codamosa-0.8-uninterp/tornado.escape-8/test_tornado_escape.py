# Automatically generated by Pynguin.
import tornado.escape as module_0

def test_case_0():
    pass

def test_case_1():
    str_0 = '<u>!E4=31&C$'
    str_1 = module_0.xhtml_unescape(str_0)

def test_case_2():
    str_0 = '<='
    str_1 = module_0.squeeze(str_0)

def test_case_3():
    str_0 = 'VBsZ%9N\rA<\\7!7['
    str_1 = module_0.url_escape(str_0)

def test_case_4():
    str_0 = 'You can link to http://www.tornadoweb.org/en/stable/ or '
    str_1 = 'to https://github.com/tornadoweb/tornaio'
    var_0 = str_0 + str_1
    bool_0 = True
    var_1 = module_0.url_unescape(str_0)
    str_2 = module_0.linkify(str_1, bool_0, str_1)

def test_case_5():
    str_0 = 'You can link to http://www.tornadoweb.org/en/stable/ or '
    str_1 = 'to https://github.com/tornadoweb/tornado'
    var_0 = str_0 + str_1
    str_2 = module_0.linkify(var_0)
    str_3 = module_0.linkify(str_1)
    bool_0 = True
    str_4 = module_0.linkify(str_2, bool_0, str_3)
    dict_0 = module_0.parse_qs_bytes(str_4)

def test_case_6():
    bytes_0 = b'\x16:\x9a\x91\xeepe=kkq'
    optional_0 = module_0.utf8(bytes_0)

def test_case_7():
    str_0 = 'l%r.My>/l'
    any_0 = module_0.recursive_unicode(str_0)

def test_case_8():
    bytes_0 = b'k\xf5\x80\x9f\xd4\x07\xc0\x16\xd6\xf5\x99'
    optional_0 = module_0.utf8(bytes_0)
    int_0 = -2137
    list_0 = [int_0, int_0, int_0, int_0]
    any_0 = module_0.recursive_unicode(list_0)
    any_1 = module_0.recursive_unicode(any_0)
    bool_0 = False
    str_0 = module_0.url_escape(bytes_0, bool_0)
    bytes_1 = b'<\x9d\xad\x91%by\xf7\r\xa4\x13&\xees\x87\xeb'
    optional_1 = module_0.utf8(bytes_1)

def test_case_9():
    str_0 = 'The test string is "http://www.test.com/test" for my test. The test string is "www.test.com" for my test. The test string is "www.test.com/test" for my test. The test string is "http://www.test.com/index.html" for my test. The test string is "Https://www.test.com/index.html" for my test.'
    bool_0 = False
    str_1 = module_0.linkify(str_0, bool_0, str_0)

def test_case_10():
    str_0 = 'Hello http://www.facebook.com/world!'
    str_1 = module_0.linkify(str_0)

def test_case_11():
    str_0 = 'vtC>?_2B'
    str_1 = module_0.linkify(str_0)

def test_case_12():
    str_0 = '\tar*'
    str_1 = module_0.url_escape(str_0)
    str_2 = module_0.xhtml_unescape(str_0)
    str_3 = module_0.json_encode(str_1)
    bool_0 = True
    dict_0 = module_0.parse_qs_bytes(str_0, bool_0)
    str_4 = 'Spt;u(%'
    str_5 = module_0.xhtml_unescape(str_1)
    str_6 = module_0.squeeze(str_1)
    optional_0 = module_0.utf8(str_0)
    bool_1 = False
    any_0 = module_0.recursive_unicode(str_2)
    str_7 = module_0.linkify(str_5, bool_1)
    optional_1 = module_0.utf8(str_5)
    optional_2 = module_0.utf8(str_0)
    bool_2 = False
    dict_1 = module_0.parse_qs_bytes(str_5, bool_2)
    var_0 = module_0.url_unescape(str_4)
    optional_3 = module_0.to_unicode(str_6)
    var_1 = module_0.url_unescape(str_5)
    optional_4 = module_0.to_unicode(str_7)
    any_1 = module_0.recursive_unicode(dict_0)
    str_8 = module_0.json_encode(str_3)
    str_9 = module_0.xhtml_unescape(str_5)

def test_case_13():
    str_0 = "b K's`Ls_3)1=v>.rU}"
    str_1 = module_0.xhtml_escape(str_0)
    str_2 = module_0.xhtml_unescape(str_1)

def test_case_14():
    str_0 = 'to https://github.com/tornadoweb/tornado'
    str_1 = module_0.linkify(str_0, str_0)

def test_case_15():
    str_0 = 'The test string is "http://www.test.com/test" for my test. The test string is "www.test.com" for my test. The test string is "www.test.com/test" for my test. The test string is "http://www.test.com/index.html" for my test. The test string is "Https://www.test.com/index.html" for my test.'
    str_1 = module_0.linkify(str_0, str_0)

def test_case_16():
    str_0 = 'to htt s://github.com/tornadoweb/tornado'
    str_1 = module_0.linkify(str_0, str_0)

def test_case_17():
    str_0 = 'The test string is "http://www.test.com/test" for my test. The test string is "www.test.com" for my test. The test string is "www.test.com/test" for my test. The test string is "http://www.test.com/index.html" for my test. The test string is "Https://www.test.com/index.html" for my test.'
    bool_0 = True
    str_1 = module_0.linkify(str_0, bool_0)
    bool_1 = False
    str_2 = module_0.linkify(str_1, bool_1, str_1, bool_0)

def test_case_18():
    str_0 = 'You can link to http://www.tornadowe.org/enCstable/ or '
    str_1 = 'to https://github.com/tornadoweb/tornado'
    var_0 = str_0 + str_1
    str_2 = module_0.xhtml_unescape(str_0)
    bool_0 = True
    str_3 = module_0.linkify(str_2, bool_0, str_0)
    list_0 = [str_3, str_0, str_0]
    str_4 = module_0.linkify(str_0, list_0)

def test_case_19():
    str_0 = 'to https:/>github.com/tornauoweb/tornado'
    var_0 = str_0 + str_0
    str_1 = module_0.linkify(var_0)
    bool_0 = True
    str_2 = ':sAuQ!c_!F@s6<.b('
    str_3 = module_0.linkify(str_1, bool_0)
    str_4 = module_0.linkify(str_3, bool_0, str_2)

def test_case_20():
    str_0 = 'https:/&amp;amp;amp;gt;gitub.com/ornauoweb/tornado'
    var_0 = str_0 + str_0
    str_1 = module_0.linkify(var_0)
    bool_0 = True
    str_2 = '2&NHAd\\4Nks;N-uCYKN'
    str_3 = module_0.linkify(str_1, bool_0)
    str_4 = module_0.url_escape(str_1, bool_0)
    optional_0 = module_0.utf8(str_2)
    str_5 = module_0.xhtml_unescape(str_3)
    str_6 = module_0.linkify(str_3, str_1)
    optional_1 = module_0.to_unicode(str_6)
    bool_1 = True
    str_7 = module_0.linkify(str_6, bool_1, str_0)

def test_case_21():
    str_0 = 'https}/&am4;amp;amp;gt;gitub.com/ornauoweb/tornado'
    var_0 = str_0 + str_0
    str_1 = module_0.linkify(var_0)
    bool_0 = True
    str_2 = '2&NHAd\\4Nks;N-uCYKN'
    str_3 = module_0.linkify(str_1, bool_0)
    str_4 = module_0.url_escape(str_1, bool_0)
    optional_0 = module_0.utf8(str_2)
    str_5 = module_0.xhtml_unescape(str_0)
    str_6 = module_0.linkify(str_3, str_1)
    optional_1 = module_0.to_unicode(str_6)
    bool_1 = True
    str_7 = module_0.linkify(str_6, bool_1, str_0)