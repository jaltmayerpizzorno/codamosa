# Automatically generated by Pynguin.
import pymonet.immutable_list as module_0
import builtins as module_1

def test_case_0():
    try:
        bytes_0 = b'\x81\x93DZ\xfe*'
        immutable_list_0 = module_0.ImmutableList(bytes_0)
        var_0 = immutable_list_0.to_list()
        str_0 = immutable_list_0.__str__()
        callable_0 = None
        optional_0 = immutable_list_0.find(callable_0)
    except BaseException:
        pass

def test_case_1():
    try:
        callable_0 = None
        var_0 = None
        str_0 = "JeLP0[N'b!4I.urz"
        bool_0 = True
        immutable_list_0 = module_0.ImmutableList(str_0, bool_0)
        var_1 = immutable_list_0.append(var_0)
        bool_1 = False
        dict_0 = {bool_1: bool_1, bool_1: callable_0, bool_1: bool_1}
        immutable_list_1 = module_0.ImmutableList(dict_0)
        var_2 = immutable_list_1.__len__()
        immutable_list_2 = module_0.ImmutableList(bool_1)
        var_3 = immutable_list_2.map(callable_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bool_0 = True
        var_0 = None
        immutable_list_0 = module_0.ImmutableList(bool_0)
        var_1 = immutable_list_0.__add__(var_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'\x81\x93DZ\xfe*'
        immutable_list_0 = module_0.ImmutableList(bytes_0)
        var_0 = immutable_list_0.to_list()
        var_1 = immutable_list_0.__len__()
        callable_0 = None
        optional_0 = immutable_list_0.find(callable_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = ''
        immutable_list_0 = module_0.ImmutableList()
        var_0 = immutable_list_0.__len__()
        str_1 = 'mUcr" @cf*5\'E\n'
        dict_0 = {str_1: str_1}
        bool_0 = False
        immutable_list_1 = module_0.ImmutableList(dict_0, bool_0)
        optional_0 = immutable_list_1.find(str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'n4fBT*L24\x0cchRN=o9V9s'
        str_1 = ''
        dict_0 = {str_0: str_0, str_1: str_0, str_0: str_0}
        bool_0 = False
        immutable_list_0 = module_0.ImmutableList(dict_0, bool_0)
        var_0 = immutable_list_0.to_list()
    except BaseException:
        pass

def test_case_6():
    try:
        bytes_0 = b'\x81\x93DZ\xfe*'
        immutable_list_0 = module_0.ImmutableList(bytes_0)
        var_0 = immutable_list_0.to_list()
        callable_0 = None
        optional_0 = immutable_list_0.find(callable_0)
    except BaseException:
        pass

def test_case_7():
    try:
        bool_0 = True
        immutable_list_0 = module_0.ImmutableList(bool_0)
        object_0 = None
        var_0 = immutable_list_0.unshift(object_0)
        optional_0 = immutable_list_0.find(bool_0)
    except BaseException:
        pass

def test_case_8():
    try:
        list_0 = []
        object_0 = module_1.object()
        bool_0 = False
        immutable_list_0 = module_0.ImmutableList(object_0, bool_0)
        var_0 = immutable_list_0.unshift(list_0)
        str_0 = 'q|s,/|bq#_X\x0c\rZ'
        immutable_list_1 = module_0.ImmutableList()
        var_1 = immutable_list_1.__len__()
        str_1 = immutable_list_1.__str__()
        float_0 = 1150.5182
        list_1 = []
        tuple_0 = (str_0, float_0, list_1)
        bool_1 = False
        immutable_list_2 = module_0.ImmutableList(tuple_0, bool_1)
        int_0 = None
        var_2 = immutable_list_2.map(int_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = '16\x0bnW|oKR'
        dict_0 = {str_0: str_0}
        bool_0 = True
        immutable_list_0 = module_0.ImmutableList(bool_0)
        var_0 = immutable_list_0.map(dict_0)
    except BaseException:
        pass

def test_case_10():
    try:
        int_0 = None
        set_0 = None
        set_1 = {set_0}
        float_0 = 2000.8
        immutable_list_0 = module_0.ImmutableList(set_1, float_0)
        var_0 = immutable_list_0.filter(int_0)
    except BaseException:
        pass

def test_case_11():
    try:
        callable_0 = None
        immutable_list_0 = module_0.ImmutableList()
        var_0 = immutable_list_0.filter(callable_0)
    except BaseException:
        pass

def test_case_12():
    try:
        bool_0 = True
        immutable_list_0 = module_0.ImmutableList(bool_0)
        optional_0 = immutable_list_0.find(bool_0)
    except BaseException:
        pass

def test_case_13():
    try:
        callable_0 = None
        callable_1 = None
        immutable_list_0 = module_0.ImmutableList()
        optional_0 = immutable_list_0.find(callable_1)
        list_0 = [optional_0, callable_1, optional_0, immutable_list_0]
        immutable_list_1 = module_0.ImmutableList(list_0)
        optional_1 = immutable_list_1.find(callable_0)
    except BaseException:
        pass

def test_case_14():
    try:
        bool_0 = True
        immutable_list_0 = module_0.ImmutableList(bool_0)
        object_0 = module_1.object()
        bool_1 = immutable_list_0.__eq__(object_0)
        callable_0 = None
        var_0 = None
        var_1 = immutable_list_0.reduce(callable_0, var_0)
    except BaseException:
        pass

def test_case_15():
    try:
        object_0 = module_1.object()
        callable_0 = None
        var_0 = None
        bytes_0 = b'\xf4\xe9\x05\xd8 \xd9U9@F\x0b\xf1\xfe'
        bool_0 = True
        immutable_list_0 = module_0.ImmutableList(bytes_0, bool_0)
        var_1 = immutable_list_0.reduce(callable_0, var_0)
    except BaseException:
        pass

def test_case_16():
    try:
        bool_0 = False
        var_0 = None
        immutable_list_0 = module_0.ImmutableList()
        var_1 = immutable_list_0.reduce(bool_0, var_0)
        immutable_list_1 = module_0.ImmutableList(var_1)
        bool_1 = False
        list_0 = [bool_1]
        immutable_list_2 = module_0.ImmutableList(list_0)
        optional_0 = immutable_list_2.find(immutable_list_1)
    except BaseException:
        pass

def test_case_17():
    try:
        immutable_list_0 = module_0.ImmutableList()
        str_0 = 'mUcr" @cf*5\'E\n'
        dict_0 = {str_0: str_0}
        bool_0 = False
        immutable_list_1 = module_0.ImmutableList(dict_0, bool_0)
        optional_0 = immutable_list_1.find(str_0)
    except BaseException:
        pass

def test_case_18():
    try:
        immutable_list_0 = module_0.ImmutableList()
        immutable_list_1 = module_0.ImmutableList()
        var_0 = immutable_list_1.__len__()
        var_1 = None
        var_2 = immutable_list_1.unshift(var_1)
        str_0 = immutable_list_0.__str__()
        callable_0 = None
        optional_0 = immutable_list_1.find(callable_0)
        var_3 = immutable_list_1.to_list()
        var_4 = immutable_list_0.__add__(var_2)
        immutable_list_2 = module_0.ImmutableList()
        var_5 = immutable_list_2.__len__()
        dict_0 = {}
        object_0 = module_1.object(**dict_0)
        bool_0 = immutable_list_2.__eq__(object_0)
        bool_1 = True
        var_6 = immutable_list_0.__len__()
        var_7 = immutable_list_0.append(var_1)
        bool_2 = immutable_list_2.__eq__(object_0)
        immutable_list_3 = module_0.ImmutableList(var_4, bool_1)
        var_8 = immutable_list_3.__len__()
    except BaseException:
        pass