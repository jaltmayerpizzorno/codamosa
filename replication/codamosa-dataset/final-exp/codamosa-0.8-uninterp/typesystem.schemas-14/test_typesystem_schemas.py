# Automatically generated by Pynguin.
import typesystem.schemas as module_0
import typesystem.fields as module_1

def test_case_0():
    pass

def test_case_1():
    schema_definitions_0 = module_0.SchemaDefinitions()

def test_case_2():
    str_0 = '?Z8p^j\x0c!)Q%6i"1\nEA74'
    schema_definitions_0 = module_0.SchemaDefinitions()
    str_1 = 'grd84jZ}vu'
    field_0 = module_1.Field(title=str_1, description=str_0)
    int_0 = schema_definitions_0.__len__()
    list_0 = [int_0]
    schema_0 = module_0.Schema(*list_0)

def test_case_3():
    str_0 = '[d+CC^9#7rrU'
    field_0 = module_1.Field(title=str_0)
    schema_definitions_0 = module_0.SchemaDefinitions()
    module_0.set_definitions(field_0, schema_definitions_0)

def test_case_4():
    field_0 = module_1.Field()
    dict_0 = {}
    schema_definitions_0 = module_0.SchemaDefinitions()
    int_0 = schema_definitions_0.__len__()
    list_0 = [dict_0]
    schema_0 = module_0.Schema(*list_0)
    int_1 = schema_0.__len__()
    schema_definitions_1 = module_0.SchemaDefinitions(**dict_0)

def test_case_5():
    schema_0 = module_0.Schema()

def test_case_6():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    list_1 = [list_0]
    schema_0 = module_0.Schema(*list_1)

def test_case_7():
    schema_0 = module_0.Schema()
    int_0 = schema_0.__len__()
    bool_0 = schema_0.__eq__(schema_0)

def test_case_8():
    schema_0 = module_0.Schema()
    int_0 = schema_0.__len__()
    bool_0 = schema_0.__eq__(int_0)

def test_case_9():
    schema_0 = module_0.Schema()
    int_0 = schema_0.__len__()

def test_case_10():
    schema_0 = module_0.Schema()
    iterator_0 = schema_0.__iter__()
    str_0 = '\\\x0cJl[aM~5zF{t'
    reference_0 = module_0.Reference(str_0)
    any_0 = reference_0.serialize(iterator_0)

def test_case_11():
    str_0 = '?Z8p^j\x0c!)Q%6i"1\nEA74'
    schema_definitions_0 = module_0.SchemaDefinitions()
    str_1 = 'grd84jZ}vu'
    bool_0 = True
    schema_definitions_0.__setitem__(bool_0, str_0)
    field_0 = module_1.Field(title=str_1, description=str_0)
    int_0 = schema_definitions_0.__len__()
    list_0 = [int_0]
    schema_0 = module_0.Schema(*list_0)

def test_case_12():
    schema_0 = module_0.Schema()
    str_0 = schema_0.__repr__()