# Automatically generated by Pynguin.
import flutes.structure as module_0

def test_case_0():
    try:
        int_0 = 8192
        set_0 = {int_0, int_0, int_0}
        float_0 = None
        var_0 = module_0.map_structure(float_0, set_0)
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = 1849
        str_0 = 'Iterable has length '
        var_0 = module_0.map_structure(int_0, str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'N)rzrk$4)x",z/+(4;\\'
        bytes_0 = b'~V\xa5\xca\xecLN\x8a;\x81\xe61\xfd'
        var_0 = module_0.map_structure_zip(str_0, bytes_0)
    except BaseException:
        pass

def test_case_3():
    try:
        float_0 = 1169.14
        int_0 = 908
        var_0 = None
        dict_0 = {float_0: int_0, var_0: int_0}
        list_0 = module_0.reverse_map(dict_0)
        str_0 = ''
        list_1 = [dict_0, list_0]
        var_1 = module_0.map_structure_zip(str_0, list_1)
    except BaseException:
        pass

def test_case_4():
    try:
        int_0 = 278
        list_0 = []
        var_0 = None
        list_1 = [list_0, var_0, var_0]
        var_1 = module_0.map_structure_zip(int_0, list_1)
    except BaseException:
        pass

def test_case_5():
    try:
        bool_0 = False
        set_0 = {bool_0, bool_0, bool_0}
        list_0 = None
        tuple_0 = (set_0, set_0, list_0, bool_0)
        list_1 = [tuple_0, set_0]
        var_0 = module_0.map_structure_zip(bool_0, list_1)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = ' is specified'
        set_0 = {str_0, str_0, str_0, str_0}
        float_0 = None
        int_0 = 2217
        bool_0 = False
        str_1 = '1Hbzs \\AyPSF('
        list_0 = []
        tuple_0 = (bool_0, str_1, list_0)
        list_1 = [list_0, list_0]
        bytes_0 = b'Y.M'
        tuple_1 = (tuple_0, list_1, list_0, bytes_0)
        var_0 = module_0.map_structure_zip(int_0, tuple_1)
        var_1 = module_0.map_structure(set_0, float_0)
    except BaseException:
        pass

def test_case_7():
    try:
        float_0 = -464.884
        dict_0 = {float_0: float_0, float_0: float_0}
        tuple_0 = (dict_0,)
        var_0 = module_0.map_structure(float_0, tuple_0)
    except BaseException:
        pass

def test_case_8():
    try:
        bool_0 = False
        module_0.register_no_map_class(bool_0)
        float_0 = -4.241040596768394
        module_0.register_no_map_class(float_0)
        var_0 = None
        int_0 = -807
        dict_0 = {float_0: float_0}
        var_1 = module_0.no_map_instance(dict_0)
        tuple_0 = ()
        str_0 = None
        str_1 = "\nNI'x|q5TP~"
        set_0 = set()
        var_2 = module_0.map_structure(str_1, set_0)
        var_3 = module_0.map_structure(str_0, tuple_0)
        str_2 = 'z0:Y]'
        var_4 = module_0.no_map_instance(str_2)
        dict_1 = {var_0: int_0, var_0: int_0}
        list_0 = module_0.reverse_map(dict_1)
        list_1 = [dict_0]
        var_5 = module_0.map_structure_zip(dict_0, list_1)
    except BaseException:
        pass

def test_case_9():
    try:
        bool_0 = False
        module_0.register_no_map_class(bool_0)
        float_0 = -4.241040596768394
        module_0.register_no_map_class(float_0)
        var_0 = None
        int_0 = -807
        int_1 = None
        int_2 = 580
        dict_0 = {float_0: float_0}
        var_1 = module_0.no_map_instance(dict_0)
        dict_1 = {var_0: int_0, var_0: int_1, var_0: int_0, var_0: int_2}
        list_0 = module_0.reverse_map(dict_1)
        tuple_0 = ()
        list_1 = module_0.reverse_map(dict_1)
        str_0 = None
        str_1 = "\nNI'x|q5TP~"
        set_0 = set()
        var_2 = module_0.map_structure(str_1, set_0)
        var_3 = module_0.map_structure(str_0, tuple_0)
        list_2 = module_0.reverse_map(dict_1)
        list_3 = module_0.reverse_map(dict_1)
        var_4 = module_0.no_map_instance(var_1)
        list_4 = module_0.reverse_map(dict_1)
        dict_2 = {var_0: int_0, var_0: int_0}
        list_5 = module_0.reverse_map(dict_2)
        list_6 = [list_5]
        var_5 = module_0.map_structure_zip(dict_0, list_6)
    except BaseException:
        pass

def test_case_10():
    try:
        bool_0 = False
        module_0.register_no_map_class(bool_0)
        float_0 = -4.241040596768394
        module_0.register_no_map_class(float_0)
        dict_0 = {float_0: float_0}
        var_0 = module_0.no_map_instance(dict_0)
        list_0 = [var_0, bool_0]
        var_1 = module_0.map_structure_zip(float_0, list_0)
    except BaseException:
        pass