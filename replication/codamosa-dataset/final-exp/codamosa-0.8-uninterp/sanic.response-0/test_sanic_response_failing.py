# Automatically generated by Pynguin.
import sanic.compat as module_0
import sanic.response as module_1
import pathlib as module_2

def test_case_0():
    try:
        header_0 = module_0.Header()
        var_0 = module_1.stream(header_0)
        str_0 = 'p3)7%IX^c\rFm\x0cC{Q\ruk'
        int_0 = -1038
        h_t_t_p_response_0 = module_1.file(str_0, int_0, str_0)
        none_type_0 = None
        none_type_1 = None
        h_t_t_p_response_1 = module_1.raw(none_type_1)
        h_t_t_p_response_0.send(none_type_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '\n        Trigger "before_server_stop" events\n        '
        h_t_t_p_response_0 = module_1.json(str_0, str_0)
        str_1 = 'xI7(<*|Jt'
        h_t_t_p_response_1 = module_1.html(str_0)
        h_t_t_p_response_2 = module_1.empty()
        str_2 = ')aUPt=h\ra2x~r:JE=4Nm'
        h_t_t_p_response_3 = module_1.redirect(str_1, str_2)
    except BaseException:
        pass

def test_case_2():
    try:
        pure_path_0 = module_2.PurePath()
        bool_0 = False
        base_h_t_t_p_response_0 = module_1.BaseHTTPResponse()
        base_h_t_t_p_response_0.send(bool_0)
        callable_0 = None
        bytes_0 = b'c\r\x82z\x88\x88\x8b\xfb'
        streaming_h_t_t_p_response_0 = module_1.StreamingHTTPResponse(callable_0)
        str_0 = ')aUPt=h\ra2x~r:JE=4Nm'
        dict_0 = {base_h_t_t_p_response_0: str_0, bytes_0: streaming_h_t_t_p_response_0, str_0: base_h_t_t_p_response_0}
        int_0 = 205
        h_t_t_p_response_0 = module_1.redirect(str_0, dict_0, int_0)
    except BaseException:
        pass

def test_case_3():
    try:
        int_0 = None
        dict_0 = {}
        str_0 = '|%I5*[@=9;JJ\x0c85u'
        h_t_t_p_response_0 = module_1.json(int_0, dict_0, str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = None
        int_0 = None
        h_t_t_p_response_0 = module_1.html(str_0, int_0)
        header_0 = module_0.Header()
        var_0 = module_1.stream(header_0)
        none_type_0 = None
        h_t_t_p_response_1 = module_1.text(str_0, none_type_0)
    except BaseException:
        pass

def test_case_5():
    try:
        pure_path_0 = module_2.PurePath()
        callable_0 = None
        int_0 = 1336
        str_0 = 'F|\x0cID yNl1B\n:R95[I'
        streaming_h_t_t_p_response_0 = module_1.StreamingHTTPResponse(callable_0, int_0, str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        bytes_0 = b'\xce]'
        int_0 = -534
        str_0 = None
        str_1 = 'T^}%K0'
        str_2 = '/'
        dict_0 = {str_0: str_0, str_1: str_2}
        dict_1 = {str_1: int_0, str_0: str_2}
        streaming_h_t_t_p_response_0 = module_1.StreamingHTTPResponse(bytes_0, int_0, dict_0, str_0, dict_1)
    except BaseException:
        pass

def test_case_7():
    try:
        callable_0 = None
        str_0 = '\nbX\r8'
        h_t_t_p_response_0 = module_1.html(str_0)
        base_h_t_t_p_response_0 = module_1.BaseHTTPResponse()
        h_t_t_p_response_1 = module_1.text(str_0)
        dict_0 = {}
        str_1 = '4{:'
        int_0 = -4318
        dict_1 = {}
        h_t_t_p_response_2 = module_1.json(str_1, int_0, **dict_1)
        int_1 = -559
        streaming_h_t_t_p_response_0 = module_1.StreamingHTTPResponse(callable_0, dict_0)
        base_h_t_t_p_response_1 = module_1.BaseHTTPResponse()
        h_t_t_p_response_3 = module_1.html(str_0, int_1)
        streaming_h_t_t_p_response_1 = module_1.StreamingHTTPResponse(callable_0, dict_0)
        str_2 = '="2J^$}!k^6ZxkY0,)c'
        h_t_t_p_response_4 = module_1.json(h_t_t_p_response_3, int_0, dict_0, str_2, h_t_t_p_response_0)
    except BaseException:
        pass

def test_case_8():
    try:
        int_0 = 1960
        header_0 = module_0.Header()
        var_0 = module_1.stream(header_0)
        str_0 = 'p3)7%IX^c\rFm\x0cC{Q\ruk'
        h_t_t_p_response_0 = module_1.file(str_0, int_0, str_0)
        none_type_0 = None
        h_t_t_p_response_0.send(none_type_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'v\n, g\x0c`$S_|\x0b*3'
        int_0 = -607
        h_t_t_p_response_0 = module_1.raw(str_0, int_0)
        int_1 = -439
        str_1 = None
        h_t_t_p_response_1 = module_1.html(str_1, int_1)
        header_0 = module_0.Header()
        var_0 = module_1.stream(header_0)
        bytes_0 = b'\x15\n6\xa1\xc6\x15\x84{\x92\x98\xaf\x13\x1b\xd8\xcd'
        set_0 = {int_0}
        str_2 = "^l8[>3'V)YZ:_ie"
        var_1 = module_1.stream(bytes_0, int_0, set_0, str_2, set_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = 'J-cl'
        pure_path_0 = module_2.PurePath()
        str_1 = 'Xo8v\n`\x0bP\r'
        str_2 = '1| >i#s,\x0cef\x0c;7j=EfG'
        dict_0 = {str_0: str_1, str_1: str_1, str_2: str_1}
        str_3 = '<2sp('
        int_0 = -229
        h_t_t_p_response_0 = module_1.text(str_3, int_0)
        h_t_t_p_response_1 = module_1.empty()
        h_t_t_p_response_2 = module_1.raw(pure_path_0, dict_0)
        h_t_t_p_response_2.send()
        str_4 = None
        int_1 = None
        h_t_t_p_response_3 = module_1.html(str_4, int_1)
        h_t_t_p_response_4 = module_1.redirect(str_1, dict_0)
        h_t_t_p_response_5 = module_1.text(str_0)
        str_5 = 'p3~7%IX^cKFm\x0cC{QHuk'
        int_2 = -539
        h_t_t_p_response_6 = module_1.file(str_0, int_2, dict_0, str_5)
        optional_0 = None
        h_t_t_p_response_6.send(optional_0)
    except BaseException:
        pass