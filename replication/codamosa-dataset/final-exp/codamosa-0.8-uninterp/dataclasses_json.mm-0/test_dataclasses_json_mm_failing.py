# Automatically generated by Pynguin.
import dataclasses_json.mm as module_0
import builtins as module_1

def test_case_0():
    try:
        str_0 = None
        set_0 = {str_0}
        timestamp_field_0 = module_0._TimestampField(load_default=str_0, default=set_0)
        str_1 = None
        str_2 = 'decoder'
        str_3 = 'fields'
        str_4 = 'EthWz\x0b+XKJ{0Uu1'
        dict_0 = {str_1: set_0, str_2: str_2, str_3: str_1, str_4: str_2}
        list_0 = [timestamp_field_0, str_2, timestamp_field_0, str_0]
        union_field_0 = module_0._UnionField(set_0, timestamp_field_0, dict_0, *list_0)
    except BaseException:
        pass

def test_case_1():
    try:
        schema_f_0 = module_0.SchemaF()
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = None
        bytes_0 = b'\xcb\xf5 \x0e\xb3\xc2g\xdc\xdf6R'
        set_0 = {str_0, str_0, bytes_0}
        var_0 = module_0.schema(str_0, bytes_0, set_0)
    except BaseException:
        pass

def test_case_3():
    try:
        float_0 = -1199.74
        dict_0 = {}
        bytearray_0 = module_1.bytearray()
        str_0 = '?H+g;2-uR8bp_)Uy+/-'
        type_0 = module_0.build_schema(float_0, dict_0, bytearray_0, str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        float_0 = 363.27
        list_0 = None
        union_field_0 = None
        list_1 = []
        dict_0 = {}
        bytearray_0 = module_1.bytearray(*list_1, **dict_0)
        var_0 = module_0.build_type(float_0, list_0, union_field_0, bytearray_0, float_0)
    except BaseException:
        pass

def test_case_5():
    try:
        int_0 = 5
        timestamp_field_0 = module_0._TimestampField(default=int_0)
        str_0 = 'dumps'
        var_0 = timestamp_field_0.serialize(str_0, int_0)
    except BaseException:
        pass