# Automatically generated by Pynguin.
import ansible.parsing.splitter as module_0

def test_case_0():
    try:
        str_0 = '\n    docker_extra_args="--log-opt max-size=10m --log-opt max-file=3"\n    '
        var_0 = module_0.parse_kv(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        list_0 = []
        var_0 = module_0.parse_kv(list_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = "8;NPuF/\x0b'\x0b(,mb]"
        var_0 = module_0.parse_kv(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        float_0 = -2770.0
        var_0 = module_0.split_args(float_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = "o*'H#1-;\nxY"
        var_0 = module_0.parse_kv(str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = '"D>\\*uM3\'uVY5BdJvV \x0c'
        int_0 = None
        var_0 = module_0.parse_kv(int_0)
        str_1 = 'L'
        var_1 = module_0.split_args(str_1)
        bytes_0 = b'\xa7\x0cv\x80\xbb\xfag\xb4\xca\x13'
        str_2 = '\\\'\\"\\\\'
        var_2 = module_0.split_args(str_2)
        var_3 = module_0.parse_kv(bytes_0)
        str_3 = "[\x0bj\\Bm3'u0E\x0clINJM83f"
        var_4 = module_0.join_args(str_3)
        var_5 = module_0.split_args(str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = '"D>\\*uM3\'uVY5BdJvV \x0c'
        int_0 = None
        var_0 = module_0.parse_kv(int_0)
        str_1 = 'U`\tX.z,>!!7kj:hW'
        var_1 = module_0.split_args(str_1)
        str_2 = '\\\'\\"\\\\'
        var_2 = module_0.parse_kv(str_2)
        var_3 = module_0.split_args(str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'a=oo b= barc="{{test}" d baz'
        int_0 = -748
        var_0 = module_0.parse_kv(str_0, int_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = 'creates=/root/test_file warn=yes executable=/bin/bash'
        bool_0 = True
        var_0 = module_0.parse_kv(str_0, bool_0)
        float_0 = -1226.543
        str_1 = '\udca7\x0c\udcf2\udc80\udcbb\udcfag\udcb4\udcca\x13'
        var_1 = module_0.parse_kv(float_0, str_1)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'Ge'
        str_1 = 'd6J36Vfm"U> 8lK6oOC\n'
        str_2 = 'iZ={#)eW"o<,f&'
        list_0 = [str_1, str_0, str_1]
        var_0 = module_0.parse_kv(str_2, list_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = '\'|:m\\Qc}"l$(M'
        var_0 = module_0.join_args(str_0)
        var_1 = module_0.parse_kv(var_0, str_0)
    except BaseException:
        pass