# Automatically generated by Pynguin.
import ansible.cli.arguments.option_helpers as module_0
import argparse as module_1

def test_case_0():
    try:
        str_0 = '5!'
        bool_0 = True
        str_1 = 'fz'
        set_0 = {str_0, bool_0, bool_0}
        str_2 = ':b'
        dict_0 = {}
        set_1 = set()
        bool_1 = False
        sorting_help_formatter_0 = module_0.SortingHelpFormatter(set_1, bool_1)
        int_0 = 200000
        unrecognized_argument_0 = module_0.UnrecognizedArgument(sorting_help_formatter_0, int_0, dict_0)
        ansible_version_0 = module_0.AnsibleVersion(str_0, dict_0, set_1, unrecognized_argument_0)
        var_0 = ansible_version_0.__call__(str_1, set_0, str_2)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'diNeI.'
        float_0 = -236.094949
        bool_0 = True
        unrecognized_argument_0 = module_0.UnrecognizedArgument(str_0, float_0, bool_0)
        int_0 = None
        dict_0 = {str_0: str_0, float_0: str_0, str_0: int_0}
        var_0 = unrecognized_argument_0.__call__(int_0, bool_0, dict_0)
    except BaseException:
        pass

def test_case_2():
    try:
        int_0 = -325
        str_0 = '=V\n|9nlP\n\\6+Tlg,^,a5'
        ansible_version_0 = None
        prepend_list_action_0 = module_0.PrependListAction(int_0, str_0, ansible_version_0)
        dict_0 = {prepend_list_action_0: str_0}
        var_0 = module_0.add_module_options(dict_0)
    except BaseException:
        pass

def test_case_3():
    try:
        list_0 = None
        str_0 = '^'
        bytes_0 = b'\x16\xce]\xd1\xff\xe2=h\xb5\x9a'
        prepend_list_action_0 = module_0.PrependListAction(list_0, list_0, str_0, bytes_0)
    except BaseException:
        pass

def test_case_4():
    try:
        var_0 = module_0.version()
        int_0 = 9000
        tuple_0 = None
        str_0 = None
        bytes_0 = b'\xab\x1e#\xe8\x9f\xc3A\x0b\x8f\xec\x01\xb0\xd0'
        str_1 = '\\\\[0-9]{3}'
        list_0 = [tuple_0, str_0]
        set_0 = {bytes_0, var_0, int_0}
        ansible_version_0 = module_0.AnsibleVersion(str_1, list_0, set_0)
        bool_0 = True
        ansible_version_1 = module_0.AnsibleVersion(bool_0, ansible_version_0)
        str_2 = 'u"",t/2lY2W%Qyb6\n$|{'
        prepend_list_action_0 = module_0.PrependListAction(str_2, int_0)
        var_1 = module_0.create_base_parser(prepend_list_action_0, list_0)
        var_2 = module_0.add_runas_prompt_options(bool_0)
    except BaseException:
        pass

def test_case_5():
    try:
        bool_0 = True
        var_0 = module_0.version()
        list_0 = [bool_0, var_0, bool_0, var_0]
        var_1 = module_0.add_async_options(list_0)
    except BaseException:
        pass

def test_case_6():
    try:
        float_0 = -59.98321
        var_0 = module_0.add_basedir_options(float_0)
    except BaseException:
        pass

def test_case_7():
    try:
        complex_0 = None
        var_0 = module_0.add_runas_options(complex_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = 'R}Cn,R'
        var_0 = module_0.add_runas_prompt_options(str_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'n3Pd]~i#jz!y~s'
        var_0 = module_0.add_runtask_options(str_0)
    except BaseException:
        pass

def test_case_10():
    try:
        var_0 = module_0.version()
        int_0 = 9000
        tuple_0 = None
        str_0 = 'y'
        str_1 = None
        bytes_0 = b'\xab\x1e#\xe8\x9f\xc3A\x0b\x8f\xec\x01\xb0\xd0'
        str_2 = '\\\\[0-9]{3}'
        list_0 = [tuple_0, str_1]
        set_0 = {bytes_0, var_0, int_0}
        ansible_version_0 = module_0.AnsibleVersion(str_2, list_0, set_0)
        str_3 = ';\r|d?6M%jwdE,|Q{=/S'
        unrecognized_argument_0 = module_0.UnrecognizedArgument(str_0, str_3)
        str_4 = 'u"",t/2lY2W%Qyb6\n$|{'
        prepend_list_action_0 = module_0.PrependListAction(str_4, int_0)
        unrecognized_argument_1 = None
        var_1 = module_0.version()
        var_2 = module_0.add_tasknoplay_options(unrecognized_argument_1)
    except BaseException:
        pass

def test_case_11():
    try:
        bool_0 = True
        var_0 = module_0.add_subset_options(bool_0)
    except BaseException:
        pass

def test_case_12():
    try:
        tuple_0 = ()
        sorting_help_formatter_0 = module_0.SortingHelpFormatter(tuple_0)
        set_0 = set()
        var_0 = sorting_help_formatter_0.add_arguments(set_0)
        var_1 = module_0.create_base_parser(sorting_help_formatter_0)
        dict_0 = {sorting_help_formatter_0: tuple_0, tuple_0: tuple_0}
        var_2 = sorting_help_formatter_0.add_arguments(dict_0)
    except BaseException:
        pass

def test_case_13():
    try:
        tuple_0 = ()
        dict_0 = {tuple_0: tuple_0}
        ansible_version_0 = None
        prepend_list_action_0 = module_0.PrependListAction(dict_0, tuple_0, ansible_version_0)
        complex_0 = None
        var_0 = module_0.version()
        bytes_0 = b'\xe7\x14"/\xd5\xe0\x96\xa5\xbe\xd4\xc8\xc6'
        bool_0 = False
        list_0 = [ansible_version_0, complex_0]
        var_1 = prepend_list_action_0.__call__(bytes_0, bool_0, list_0)
    except BaseException:
        pass

def test_case_14():
    try:
        var_0 = module_0.version()
        int_0 = 9000
        tuple_0 = None
        str_0 = None
        bytes_0 = b'\xab\x1e\xf7\x9f\xc3A\x0b\xc3\xec\x01\xb0\xd0'
        str_1 = '\\\\[0-9]{3}'
        list_0 = [tuple_0, str_0]
        set_0 = {bytes_0, var_0, int_0}
        ansible_version_0 = module_0.AnsibleVersion(str_1, list_0, set_0)
        bool_0 = True
        ansible_version_1 = module_0.AnsibleVersion(bool_0, ansible_version_0)
        str_2 = 'u"",t/2lY2W%Qyb6\n$|{'
        var_1 = module_0.unfrack_path(list_0)
        prepend_list_action_0 = module_0.PrependListAction(str_2, int_0)
        var_2 = module_0.create_base_parser(prepend_list_action_0, list_0)
        float_0 = 374.01105
        str_3 = ''
        bool_1 = False
        bytes_1 = b'C\x8d\xe0C\x8e\xaf\x17Xw\xd0\xebZ\x85j\xdd\x13'
        prepend_list_action_1 = module_0.PrependListAction(float_0, str_3, bool_1, bytes_1)
    except BaseException:
        pass

def test_case_15():
    try:
        var_0 = module_0.version()
        dict_0 = None
        list_0 = [dict_0, dict_0]
        bool_0 = False
        bytes_0 = None
        str_0 = '8n+hojvyM5'
        unrecognized_argument_0 = module_0.UnrecognizedArgument(dict_0, list_0, bool_0, bytes_0, str_0)
        str_1 = ':'
        prepend_list_action_0 = module_0.PrependListAction(unrecognized_argument_0, list_0, str_1)
        int_0 = 9000
        tuple_0 = None
        str_2 = None
        bytes_1 = b'\xab\x1e#\xe8\x9f\xc3A\x0b\x8f\xec\x01\xb0\xd0'
        str_3 = '\\\\[0-9]{3}'
        list_1 = [tuple_0, str_2]
        set_0 = {bytes_1, var_0, int_0}
        ansible_version_0 = module_0.AnsibleVersion(str_3, list_1, set_0)
        bool_1 = False
        ansible_version_1 = module_0.AnsibleVersion(bool_1, ansible_version_0)
        str_4 = 'u"",t/2lY2W%Qyb6\n$|{'
        prepend_list_action_1 = module_0.PrependListAction(str_4, int_0)
        tuple_1 = (prepend_list_action_1, tuple_0)
        tuple_2 = (tuple_1, tuple_0)
        var_1 = module_0.create_base_parser(prepend_list_action_1, list_1)
        ansible_version_2 = module_0.AnsibleVersion(str_2, bytes_1, ansible_version_0, list_1, ansible_version_1, tuple_2)
        int_1 = 401
        sorting_help_formatter_0 = module_0.SortingHelpFormatter(set_0, int_1)
        var_2 = module_0.create_base_parser(sorting_help_formatter_0, list_0)
        float_0 = 426.6
        var_3 = module_0.add_runas_prompt_options(float_0, sorting_help_formatter_0)
    except BaseException:
        pass

def test_case_16():
    try:
        var_0 = module_0.version()
        dict_0 = {var_0: var_0, var_0: var_0}
        var_1 = module_0.version(dict_0)
        int_0 = 9000
        tuple_0 = None
        str_0 = None
        bytes_0 = b'\xab\x1e#\xe8\x9f\xc3A\x0b\x8f\xec\x01\xb0\xd0'
        str_1 = '\\\\[0-9]{3}'
        list_0 = [tuple_0, str_0]
        set_0 = {bytes_0, var_0, int_0}
        ansible_version_0 = module_0.AnsibleVersion(str_1, list_0, set_0)
        bool_0 = False
        ansible_version_1 = module_0.AnsibleVersion(bool_0, ansible_version_0)
        str_2 = 'u"",t/2lY2W%Qyb6\n$|{'
        prepend_list_action_0 = module_0.PrependListAction(str_2, int_0)
        var_2 = module_0.create_base_parser(prepend_list_action_0, list_0)
        var_3 = module_0.add_runas_prompt_options(bool_0)
    except BaseException:
        pass

def test_case_17():
    try:
        list_0 = None
        float_0 = None
        tuple_0 = (float_0,)
        str_0 = '9FDrh5^'
        int_0 = 2084
        sorting_help_formatter_0 = module_0.SortingHelpFormatter(int_0)
        bytes_0 = None
        ansible_version_0 = module_0.AnsibleVersion(tuple_0, str_0, sorting_help_formatter_0, bytes_0)
        unrecognized_argument_0 = module_0.UnrecognizedArgument(list_0, tuple_0, ansible_version_0)
        float_1 = 1125.64816
        sorting_help_formatter_1 = module_0.SortingHelpFormatter(unrecognized_argument_0, float_1)
        var_0 = module_0.add_basedir_options(sorting_help_formatter_1)
    except BaseException:
        pass

def test_case_18():
    try:
        var_0 = module_0.version()
        dict_0 = None
        sorting_help_formatter_0 = module_0.SortingHelpFormatter(dict_0)
        var_1 = module_0.add_module_options(sorting_help_formatter_0)
    except BaseException:
        pass

def test_case_19():
    try:
        var_0 = module_0.version()
        int_0 = 9000
        tuple_0 = None
        str_0 = None
        bytes_0 = b'\xab\x1e#\xe8\x9f\xc3A\x0b\x8f\xec\x01\xb0\xd0'
        str_1 = '\\\\[0-9]{3@}'
        list_0 = [tuple_0, str_0]
        set_0 = {bytes_0, var_0, int_0}
        ansible_version_0 = module_0.AnsibleVersion(str_1, list_0, set_0)
        bool_0 = True
        ansible_version_1 = module_0.AnsibleVersion(bool_0, ansible_version_0)
        str_2 = 'u"",t/2lY2W%Qyb6\n$|{'
        prepend_list_action_0 = module_0.PrependListAction(str_2, int_0)
        sorting_help_formatter_0 = module_0.SortingHelpFormatter(set_0)
        var_1 = module_0.add_tasknoplay_options(sorting_help_formatter_0)
    except BaseException:
        pass

def test_case_20():
    try:
        var_0 = module_0.version()
        int_0 = 9000
        list_0 = []
        prepend_list_action_0 = None
        bytes_0 = b'p\xa4\xe0\xd0'
        set_0 = {prepend_list_action_0, bytes_0, prepend_list_action_0, var_0, int_0}
        unrecognized_argument_0 = None
        bool_0 = None
        tuple_0 = (bytes_0, set_0, bool_0)
        str_0 = 'Ib9/_\\z*&'
        argument_parser_0 = module_1.ArgumentParser(unrecognized_argument_0, tuple_0, str_0)
        var_1 = module_0.add_runtask_options(argument_parser_0)
        ansible_version_0 = module_0.AnsibleVersion(list_0, prepend_list_action_0, bytes_0, prepend_list_action_0, set_0, int_0, bool_0)
        str_1 = None
        bytes_1 = b'\xab\x1e#\xe8\x9f\xc3A\x0b\x8f\xec\x01\xb0\xd0'
        str_2 = '\\\\[0-9]{3@}'
        list_1 = [tuple_0, str_1]
        set_1 = {bytes_1, var_0, int_0}
        ansible_version_1 = module_0.AnsibleVersion(str_2, list_1, set_1)
        bool_1 = True
        ansible_version_2 = module_0.AnsibleVersion(bool_1, ansible_version_1)
        str_3 = 'u"",t/2lY2W%Qyb6\n$|{'
        prepend_list_action_1 = module_0.PrependListAction(str_3, int_0)
        tuple_1 = (prepend_list_action_1, tuple_0)
        var_2 = module_0.create_base_parser(prepend_list_action_1, list_1)
        bool_2 = False
        float_0 = None
        str_4 = 'S'
        int_1 = 1905
        unrecognized_argument_1 = module_0.UnrecognizedArgument(int_1, bool_1, tuple_1)
        set_2 = {bool_2, bytes_1}
        prepend_list_action_2 = module_0.PrependListAction(int_0, float_0, str_4, unrecognized_argument_1, set_2)
    except BaseException:
        pass