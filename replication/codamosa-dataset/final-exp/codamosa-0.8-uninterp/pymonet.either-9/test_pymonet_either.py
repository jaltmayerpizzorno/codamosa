# Automatically generated by Pynguin.
import pymonet.either as module_0
import builtins as module_1

def test_case_0():
    pass

def test_case_1():
    list_0 = []
    left_0 = module_0.Left(list_0)

def test_case_2():
    int_0 = 2
    left_0 = module_0.Left(int_0)
    left_1 = module_0.Left(int_0)
    left_2 = module_0.Left(int_0)
    int_1 = 1
    left_3 = module_0.Left(int_1)
    var_0 = left_2 != left_3

def test_case_3():
    dict_0 = {}
    list_0 = [dict_0, dict_0, dict_0, dict_0]
    either_0 = module_0.Either(list_0)
    object_0 = module_1.object()
    bool_0 = either_0.__eq__(object_0)
    var_0 = either_0.to_box()
    bytes_0 = None
    either_1 = module_0.Either(bytes_0)
    var_1 = either_1.to_try()

def test_case_4():
    set_0 = None
    either_0 = module_0.Either(set_0)
    var_0 = either_0.to_try()
    object_0 = module_1.object()
    left_0 = module_0.Left(object_0)
    bool_0 = left_0.is_right()

def test_case_5():
    bool_0 = True
    either_0 = module_0.Either(bool_0)
    var_0 = either_0.to_lazy()

def test_case_6():
    str_0 = '\n        Transform Either to Maybe.\n\n        :returns: Maybe with previous value\n        :rtype: Maybe[A]\n        '
    list_0 = [str_0]
    list_1 = []
    left_0 = module_0.Left(list_1)
    var_0 = left_0.bind(list_0)

def test_case_7():
    var_0 = None
    bytes_0 = b'{lL\xf6\x8d@\xe1\x8b-\xf0T'
    left_0 = module_0.Left(var_0)
    var_1 = left_0.bind(bytes_0)
    left_1 = module_0.Left(var_0)
    left_2 = module_0.Left(var_0)
    bool_0 = left_2.is_left()

def test_case_8():
    str_0 = 'Gq|2cC=Xu8l'
    int_0 = 3089
    object_0 = module_1.object()
    left_0 = module_0.Left(object_0)
    var_0 = left_0.to_maybe()
    left_1 = module_0.Left(int_0)
    var_1 = left_1.to_validation()
    var_2 = left_1.bind(str_0)
    var_3 = None
    either_0 = module_0.Either(var_3)
    left_2 = module_0.Left(var_2)
    bool_0 = left_2.is_right()
    right_0 = module_0.Right(left_2)
    var_4 = right_0.to_maybe()

def test_case_9():
    dict_0 = {}
    right_0 = module_0.Right(dict_0)
    bool_0 = right_0.is_right()

def test_case_10():
    bool_0 = False
    right_0 = module_0.Right(bool_0)
    var_0 = right_0.to_maybe()

def test_case_11():
    int_0 = 2
    left_0 = module_0.Left(int_0)
    left_1 = module_0.Left(int_0)
    var_0 = left_0 == left_1
    left_2 = module_0.Left(int_0)
    int_1 = 1
    left_3 = module_0.Left(int_1)
    var_1 = left_2 != left_3