# Automatically generated by Pynguin.
import ansible.module_utils.compat.version as module_0

def test_case_0():
    try:
        bool_0 = True
        strict_version_0 = module_0.StrictVersion(bool_0)
    except BaseException:
        pass

def test_case_1():
    try:
        version_0 = module_0.Version()
        var_0 = version_0.__repr__()
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '2y0'
        loose_version_0 = module_0.LooseVersion(str_0)
        str_1 = '1.0'
        loose_version_1 = module_0.LooseVersion(str_1)
        str_2 = '1.2'
        loose_version_2 = module_0.LooseVersion(str_2)
        var_0 = str_1 >= loose_version_2
        loose_version_3 = module_0.LooseVersion(str_2)
        loose_version_4 = module_0.LooseVersion(str_2)
        str_3 = 'XK(2Q{"@r\tb_'
        version_0 = module_0.Version()
        var_1 = version_0.__eq__(str_3)
    except BaseException:
        pass

def test_case_3():
    try:
        loose_version_0 = None
        list_0 = []
        version_0 = module_0.Version(list_0)
        var_0 = version_0.__lt__(loose_version_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = ']\n "-\\\n90`E}%r\t:xU'
        version_0 = module_0.Version()
        var_0 = version_0.__le__(str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        loose_version_0 = module_0.LooseVersion()
        bytes_0 = b'A\x83\x00\x0c\x03\x13\x95\x89J\x14\xac\x9b\x8e\xf3'
        str_0 = '\rp\x0b>'
        var_0 = loose_version_0.parse(str_0)
        version_0 = module_0.Version()
        version_1 = module_0.Version()
        float_0 = 1885.0
        int_0 = 2811
        tuple_0 = (float_0, bytes_0, int_0)
        list_0 = [tuple_0, loose_version_0, version_1]
        var_1 = version_1.__gt__(list_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'kI"33"k g0\\:EgD/jWM'
        strict_version_0 = module_0.StrictVersion(str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'X^=h[d\r7l-&z(,D"NPe'
        loose_version_0 = module_0.LooseVersion(str_0)
        var_0 = loose_version_0.__repr__()
        strict_version_0 = module_0.StrictVersion(str_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = '1.2'
        loose_version_0 = module_0.LooseVersion(str_0)
        loose_version_1 = module_0.LooseVersion(str_0)
        str_1 = '1.1.0-'
        loose_version_2 = module_0.LooseVersion(str_1)
        var_0 = loose_version_0 >= loose_version_2
        var_1 = var_0 >= loose_version_1
    except BaseException:
        pass

def test_case_9():
    try:
        strict_version_0 = module_0.StrictVersion()
        str_0 = '2D*\x0b\\=2CBs*hU'
        loose_version_0 = module_0.LooseVersion(str_0)
        str_1 = '1.1.0-'
        var_0 = str_1 >= loose_version_0
        strict_version_1 = module_0.StrictVersion()
        var_1 = strict_version_0.__str__()
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = '2.0'
        loose_version_0 = module_0.LooseVersion(str_0)
        str_1 = '1.2'
        loose_version_1 = module_0.LooseVersion(str_1)
        var_0 = loose_version_0 >= loose_version_1
        loose_version_2 = module_0.LooseVersion(str_1)
        loose_version_3 = module_0.LooseVersion(str_1)
        loose_version_4 = module_0.LooseVersion(str_1)
        loose_version_5 = module_0.LooseVersion(str_0)
        var_1 = loose_version_0 >= var_0
    except BaseException:
        pass

def test_case_11():
    try:
        strict_version_0 = module_0.StrictVersion()
        var_0 = strict_version_0 >= strict_version_0
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = 'x#5c0'
        strict_version_0 = module_0.StrictVersion()
        loose_version_0 = module_0.LooseVersion(str_0)
        var_0 = loose_version_0 >= strict_version_0
    except BaseException:
        pass

def test_case_13():
    try:
        strict_version_0 = module_0.StrictVersion()
        str_0 = '1.2'
        var_0 = str_0 >= strict_version_0
    except BaseException:
        pass