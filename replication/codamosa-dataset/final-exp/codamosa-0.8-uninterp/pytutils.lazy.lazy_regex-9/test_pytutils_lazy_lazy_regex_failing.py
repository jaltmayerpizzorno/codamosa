# Automatically generated by Pynguin.
import pytutils.lazy.lazy_regex as module_0

def test_case_0():
    try:
        str_0 = 'j0\x0ce? 0?vzvz\\8EIV ?4'
        invalid_pattern_0 = module_0.InvalidPattern(str_0)
        var_0 = invalid_pattern_0.__unicode__()
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'E^ol|rb5u%uZd'
        invalid_pattern_0 = module_0.InvalidPattern(str_0)
        var_0 = invalid_pattern_0.__str__()
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'me\x0csage'
        invalid_pattern_0 = module_0.InvalidPattern(str_0)
        var_0 = invalid_pattern_0.__repr__()
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'InvalidPattern._format() returns the message when the string is\n    already unicode.\n    '
        invalid_pattern_0 = module_0.InvalidPattern(str_0)
        dict_0 = {str_0: str_0, str_0: invalid_pattern_0, str_0: invalid_pattern_0}
        var_0 = invalid_pattern_0.__eq__(dict_0)
        var_1 = invalid_pattern_0.__str__()
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'i1fC|8f!BH8'
        invalid_pattern_0 = module_0.InvalidPattern(str_0)
        var_0 = invalid_pattern_0.__eq__(invalid_pattern_0)
        var_1 = invalid_pattern_0.__str__()
    except BaseException:
        pass

def test_case_5():
    try:
        lazy_regex_0 = module_0.LazyRegex()
        float_0 = -1993.9
        var_0 = lazy_regex_0.__getattr__(float_0)
    except BaseException:
        pass

def test_case_6():
    try:
        float_0 = 4198.1
        float_1 = 2646.3
        set_0 = {float_1, float_1}
        lazy_regex_0 = module_0.LazyRegex(set_0)
        var_0 = lazy_regex_0.__setstate__(float_0)
    except BaseException:
        pass

def test_case_7():
    try:
        list_0 = None
        dict_0 = {list_0: list_0}
        var_0 = module_0.finditer_public(list_0, dict_0)
    except BaseException:
        pass

def test_case_8():
    try:
        var_0 = module_0.install_lazy_compile()
        str_0 = 'RP'
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
        var_1 = module_0.reset_compile()
        lazy_regex_0 = module_0.LazyRegex(dict_0)
        str_1 = ";p'\x0ckST"
        var_2 = lazy_regex_0.__getattr__(str_1)
    except BaseException:
        pass

def test_case_9():
    try:
        lazy_regex_0 = module_0.LazyRegex()
        tuple_0 = ()
        var_0 = module_0.finditer_public(lazy_regex_0, tuple_0)
    except BaseException:
        pass