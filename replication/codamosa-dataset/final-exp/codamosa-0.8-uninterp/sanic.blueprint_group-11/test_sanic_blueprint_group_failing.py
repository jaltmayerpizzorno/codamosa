# Automatically generated by Pynguin.
import sanic.blueprints as module_0
import sanic.blueprint_group as module_1

def test_case_0():
    try:
        str_0 = 'D@]y&'
        blueprint_0 = module_0.Blueprint(str_0, str_0, str_0)
        str_1 = '?'
        bytes_0 = b"\xf2\xfe'[\xd8w\xaaf<"
        blueprint_group_0 = module_1.BlueprintGroup(str_1, bytes_0)
        blueprint_group_0.append(blueprint_0)
        dict_0 = {}
        dict_1 = {}
        blueprint_group_0.__setitem__(dict_0, dict_1)
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = b'.4'
        blueprint_group_0 = module_1.BlueprintGroup()
        var_0 = blueprint_group_0.__getitem__(bytes_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b''
        str_0 = 'c!+}gIpy'
        dict_0 = {}
        str_1 = '\t* ?J'
        tuple_0 = (dict_0, str_1)
        blueprint_group_0 = module_1.BlueprintGroup(tuple_0)
        blueprint_group_0.__setitem__(bytes_0, str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '\x0c6V*M(1'
        str_1 = '7\r;)I'
        dict_0 = {str_0: str_0, str_1: str_0}
        str_2 = 'lifespan.startup'
        blueprint_group_0 = None
        dict_1 = {str_2: blueprint_group_0, str_2: blueprint_group_0}
        list_0 = [dict_1, str_2, blueprint_group_0, dict_1]
        blueprint_group_1 = module_1.BlueprintGroup(dict_1, list_0)
        blueprint_group_1.__delitem__(dict_0)
    except BaseException:
        pass

def test_case_4():
    try:
        int_0 = 1309
        str_0 = '*SC(-zb"Ps'
        none_type_0 = None
        blueprint_0 = module_0.Blueprint(str_0, str_0, int_0, none_type_0)
        blueprint_group_0 = module_1.BlueprintGroup()
        blueprint_group_0.insert(int_0, blueprint_0)
        str_1 = 'end'
        blueprint_1 = module_0.Blueprint(str_1, str_1)
        list_0 = [blueprint_1]
        bytes_0 = b'\xf0jNe\xcew\xd7\x04'
        tuple_0 = (str_0,)
        str_2 = "The Web server (running the Web site) thinks that there has been too\n    long an interval of time between 1) the establishment of an IP\n    connection (socket) between the client and the server and\n    2) the receipt of any data on that socket, so the server has dropped\n    the connection. The socket connection has actually been lost - the Web\n    server has 'timed out' on that particular socket connection.\n    "
        str_3 = 'keep-alive'
        dict_0 = {str_2: blueprint_group_0, str_3: str_1, str_2: list_0, str_2: int_0}
        blueprint_group_1 = module_1.BlueprintGroup(dict_0)
        blueprint_group_1.__setitem__(bytes_0, tuple_0)
    except BaseException:
        pass

def test_case_5():
    try:
        bool_0 = False
        list_0 = [bool_0, bool_0, bool_0, bool_0]
        blueprint_group_0 = module_1.BlueprintGroup()
        bytes_0 = b'\x1dM@O\xfd>d^\x81\xeb\xd4'
        str_0 = ',*I#?Q=|'
        int_0 = -3918
        blueprint_0 = module_0.Blueprint(str_0, str_0, int_0, bool_0)
        blueprint_group_0.append(blueprint_0)
        blueprint_group_1 = module_1.BlueprintGroup(blueprint_group_0, bytes_0)
        var_0 = blueprint_group_1.middleware(*list_0)
        str_1 = "\x0boa<.e4\tWu7Q6LnPw'"
        bool_1 = True
        blueprint_1 = module_0.Blueprint(str_1, bool_1)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'bp2'
        blueprint_0 = module_0.Blueprint(str_0)
        str_1 = 'bp3'
        blueprint_1 = module_0.Blueprint(str_1)
        str_2 = 'bp4'
        blueprint_2 = module_0.Blueprint(str_2)
        str_3 = '/api/v1'
        blueprint_group_0 = module_1.BlueprintGroup(str_3)
        blueprint_group_0.append(blueprint_0)
        blueprint_group_0.append(blueprint_0)
        str_4 = '/api/v2'
        str_5 = 'v2'
        blueprint_group_1 = module_1.BlueprintGroup(str_4, str_5)
        blueprint_group_0.append(blueprint_group_1)
    except BaseException:
        pass