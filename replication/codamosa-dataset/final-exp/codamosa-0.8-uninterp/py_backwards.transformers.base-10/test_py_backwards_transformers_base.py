# Automatically generated by Pynguin.
import typed_ast._ast3 as module_0
import py_backwards.transformers.base as module_1
import typed_ast.ast3 as module_2

def test_case_0():
    pass

def test_case_1():
    a_s_t_0 = module_0.AST()
    base_import_rewrite_0 = module_1.BaseImportRewrite(a_s_t_0)

def test_case_2():
    str_0 = 'import foo'
    var_0 = module_2.parse(str_0)
    base_import_rewrite_0 = module_1.BaseImportRewrite(var_0)
    var_1 = base_import_rewrite_0.visit(var_0)

def test_case_3():
    list_0 = []
    list_1 = [list_0, list_0, list_0]
    a_s_t_0 = module_0.AST()
    import_from_0 = module_0.ImportFrom(*list_1)
    base_import_rewrite_0 = module_1.BaseImportRewrite(a_s_t_0)
    var_0 = base_import_rewrite_0.visit_ImportFrom(import_from_0)

def test_case_4():
    int_0 = 0
    str_0 = 'from os import *'
    var_0 = module_2.parse(str_0)
    base_import_rewrite_0 = module_1.BaseImportRewrite(var_0)
    var_1 = var_0.body[int_0]
    var_2 = base_import_rewrite_0.visit_ImportFrom(var_1)

def test_case_5():
    str_0 = 'from io import StringIO'
    var_0 = module_2.parse(str_0)
    base_import_rewrite_0 = module_1.BaseImportRewrite(var_0)
    int_0 = 0
    var_1 = var_0.body[int_0]
    var_2 = module_2.parse(str_0)
    var_3 = base_import_rewrite_0.visit_ImportFrom(var_1)