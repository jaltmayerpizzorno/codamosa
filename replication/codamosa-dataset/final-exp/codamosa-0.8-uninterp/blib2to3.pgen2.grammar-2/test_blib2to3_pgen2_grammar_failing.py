# Automatically generated by Pynguin.
import blib2to3.pgen2.grammar as module_0

def test_case_0():
    try:
        grammar_0 = module_0.Grammar()
        grammar_0.dump(grammar_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '|93zSN*;*g@LgTPg_'
        grammar_0 = module_0.Grammar()
        grammar_0.dump(str_0)
        grammar_0.report()
        grammar_1 = module_0.Grammar()
        grammar_0.load(str_0)
        grammar_0.load(str_0)
        bytes_0 = b'W\xd4\xcaD'
        grammar_0.loads(bytes_0)
    except BaseException:
        pass

def test_case_2():
    try:
        path_like_0 = None
        grammar_0 = module_0.Grammar()
        grammar_0.load(path_like_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'xu\xbeV\xca*Q\x08\x98\x0b\x04\xba<\x88\xcf\xc4J\xe1'
        grammar_0 = module_0.Grammar()
        var_0 = grammar_0.copy()
        var_1 = grammar_0.copy()
        grammar_0.report()
        grammar_0.loads(bytes_0)
    except BaseException:
        pass