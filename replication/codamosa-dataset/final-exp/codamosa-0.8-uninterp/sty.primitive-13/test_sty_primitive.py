# Automatically generated by Pynguin.
import sty.primitive as module_0

def test_case_0():
    pass

def test_case_1():
    style_0 = module_0.Style()

def test_case_2():
    bool_0 = False
    dict_0 = {}
    register_0 = module_0.Register()
    register_0.set_renderfunc(bool_0, dict_0)
    str_0 = '7naU9IhEW\x0b'
    register_1 = module_0.Register()
    register_2 = register_1.copy()
    style_0 = module_0.Style()
    var_0 = register_1.__setattr__(str_0, style_0)
    register_3 = module_0.Register()
    var_1 = register_3.__setattr__(str_0, style_0)

def test_case_3():
    register_0 = module_0.Register()

def test_case_4():
    str_0 = '7naU9IhEW\x0b'
    register_0 = module_0.Register()
    register_1 = register_0.copy()
    register_0.unmute()
    style_0 = module_0.Style()
    var_0 = register_0.__setattr__(str_0, style_0)
    register_2 = register_0.copy()
    register_3 = register_2.copy()
    str_1 = register_2.__call__()
    dict_0 = register_2.as_dict()
    var_1 = register_1.as_namedtuple()

def test_case_5():
    bool_0 = False
    int_0 = -199
    list_0 = [int_0]
    register_0 = module_0.Register()
    register_1 = register_0.copy()
    register_2 = register_1.copy()
    register_3 = register_2.copy()
    register_4 = register_3.copy()
    register_5 = register_4.copy()
    register_6 = register_5.copy()
    str_0 = register_6.__call__(*list_0)
    dict_0 = {}
    register_7 = module_0.Register()
    register_7.set_renderfunc(bool_0, dict_0)
    register_8 = module_0.Register()
    register_9 = register_8.copy()
    style_0 = module_0.Style()

def test_case_6():
    type_0 = None
    str_0 = 'L2!}nk*ejZ\re'
    register_0 = module_0.Register()
    register_0.set_renderfunc(type_0, str_0)

def test_case_7():
    register_0 = module_0.Register()
    register_0.mute()

def test_case_8():
    register_0 = module_0.Register()
    register_1 = register_0.copy()
    register_2 = register_1.copy()
    register_2.unmute()

def test_case_9():
    register_0 = module_0.Register()
    register_1 = register_0.copy()
    var_0 = register_1.as_namedtuple()

def test_case_10():
    register_0 = module_0.Register()
    var_0 = register_0.as_namedtuple()
    str_0 = 'Z]IkRQ'
    register_1 = register_0.copy()
    int_0 = -1414
    str_1 = '*c\n9w;\\+zx#^'
    style_0 = module_0.Style()
    register_2 = module_0.Register()
    register_3 = register_1.copy()
    register_3.unmute()
    str_2 = '?\x0cb"tEKX[Td'
    list_0 = [str_1, str_0, int_0, str_2]
    style_1 = module_0.Style(*list_0)
    str_3 = '#\t_DHW[C'
    var_1 = register_3.__setattr__(str_3, style_0)
    register_4 = module_0.Register()
    register_3.mute()

def test_case_11():
    bool_0 = False
    dict_0 = {}
    register_0 = module_0.Register()
    register_0.set_renderfunc(bool_0, dict_0)
    str_0 = '7naU9IhEW\x0b'
    register_1 = module_0.Register()
    register_2 = register_0.copy()
    register_1.unmute()
    style_0 = module_0.Style()
    var_0 = register_1.__setattr__(str_0, style_0)
    register_3 = register_1.copy()
    register_4 = register_3.copy()
    str_1 = register_3.__call__()
    register_4.unmute()
    str_2 = "\n        This function is to handle calls such as `fg(42)`, `bg(102, 49, 42)`, `fg('red')`.\n        "
    var_1 = register_1.__setattr__(str_2, style_0)
    register_5 = module_0.Register()
    str_3 = ' F)H\x0b50}}m59O'
    var_2 = register_1.__setattr__(str_3, style_0)

def test_case_12():
    register_0 = module_0.Register()
    register_0.mute()
    register_1 = module_0.Register()
    register_1.unmute()
    str_0 = register_1.__call__()
    register_2 = register_0.copy()
    register_3 = module_0.Register()
    register_4 = module_0.Register()
    dict_0 = {}
    var_0 = register_4.as_namedtuple()
    str_1 = register_3.__call__(**dict_0)
    register_5 = register_2.copy()
    register_2.mute()
    register_6 = register_3.copy()
    style_0 = module_0.Style()
    register_7 = register_5.copy()
    dict_1 = register_7.as_dict()
    register_7.unmute()
    register_8 = register_3.copy()
    register_9 = register_8.copy()
    register_10 = module_0.Register()
    register_11 = module_0.Register()
    dict_2 = {}
    style_1 = module_0.Style(**dict_2)
    register_8.unmute()
    register_12 = register_7.copy()
    var_1 = register_1.__setattr__(str_0, style_0)
    list_0 = [str_1]
    str_2 = register_0.__call__(*list_0, **dict_0)
    dict_3 = register_5.as_dict()
    var_2 = register_11.as_namedtuple()

def test_case_13():
    bool_0 = True
    dict_0 = {}
    register_0 = module_0.Register()
    register_0.set_renderfunc(bool_0, dict_0)
    str_0 = '7naU9IhEW\x0b'
    register_1 = module_0.Register()
    register_2 = register_0.copy()
    register_1.unmute()
    style_0 = module_0.Style()
    var_0 = register_1.__setattr__(str_0, style_0)
    register_3 = register_1.copy()
    register_4 = register_0.copy()
    register_5 = register_4.copy()
    dict_1 = register_2.as_dict()
    list_0 = [str_0, str_0, str_0]
    str_1 = register_4.__call__(*list_0)
    dict_2 = register_2.as_dict()
    register_6 = register_1.copy()

def test_case_14():
    register_0 = module_0.Register()
    register_0.mute()
    register_0.unmute()
    type_0 = None
    callable_0 = None
    register_0.set_renderfunc(type_0, callable_0)
    str_0 = register_0.__call__()
    register_1 = register_0.copy()
    register_2 = register_1.copy()
    dict_0 = {}
    style_0 = module_0.Style(**dict_0)
    var_0 = register_0.as_namedtuple()
    str_1 = register_2.__call__(**dict_0)
    register_3 = register_1.copy()
    register_1.mute()
    register_4 = register_1.copy()
    register_4.set_eightbit_call(type_0)
    register_1.set_eightbit_call(type_0)
    style_1 = module_0.Style()
    register_5 = register_3.copy()
    register_4.set_rgb_call(type_0)
    dict_1 = register_5.as_dict()
    str_2 = ']vx_9Mdm'
    register_5.unmute()
    register_6 = register_2.copy()
    register_7 = register_6.copy()
    register_8 = module_0.Register()
    register_9 = module_0.Register()
    dict_2 = {}
    style_2 = module_0.Style(**dict_2)
    register_6.unmute()
    var_1 = register_2.__setattr__(str_2, style_1)
    register_10 = module_0.Register()
    var_2 = register_4.__setattr__(str_2, style_2)

def test_case_15():
    register_0 = module_0.Register()
    register_0.mute()
    register_0.unmute()
    type_0 = None
    callable_0 = None
    register_0.set_renderfunc(type_0, callable_0)
    str_0 = register_0.__call__()
    register_1 = register_0.copy()
    register_2 = register_1.copy()
    dict_0 = {}
    style_0 = module_0.Style(**dict_0)
    var_0 = register_0.as_namedtuple()
    str_1 = register_2.__call__(**dict_0)
    register_3 = register_1.copy()
    register_1.mute()
    register_4 = register_1.copy()
    register_4.set_eightbit_call(type_0)
    register_1.set_eightbit_call(type_0)
    style_1 = module_0.Style()
    register_5 = register_3.copy()
    register_4.set_rgb_call(type_0)
    dict_1 = register_5.as_dict()
    register_5.unmute()
    register_6 = register_2.copy()
    register_7 = register_6.copy()
    register_8 = module_0.Register()
    register_9 = module_0.Register()
    dict_2 = {}
    style_2 = module_0.Style(**dict_2)
    register_6.unmute()
    var_1 = register_8.__setattr__(str_0, style_1)
    register_8.set_renderfunc(type_0, callable_0)
    register_10 = module_0.Register()
    register_11 = register_10.copy()