# Automatically generated by Pynguin.
import mimesis.providers.person as module_0
import mimesis.enums as module_1

def test_case_0():
    try:
        list_0 = []
        person_0 = module_0.Person()
        str_0 = person_0.title(list_0)
    except BaseException:
        pass

def test_case_1():
    try:
        person_0 = module_0.Person()
        int_0 = person_0.age()
        str_0 = person_0.sexual_orientation()
        str_1 = person_0.sexual_orientation()
        bytes_0 = b'\xb9\xab$\xb7\x1b^\x01\xd66\xb8KR\xdd.k\x14\xb0^Th'
        gender_0 = module_1.Gender.MALE
        list_0 = [bytes_0, gender_0]
        var_0 = person_0.sex(*list_0)
        str_2 = person_0.social_media_profile()
        str_3 = person_0.title()
        str_4 = person_0.worldview()
        bool_0 = True
        int_1 = person_0.age(int_0)
        str_5 = person_0.full_name(bool_0)
    except BaseException:
        pass

def test_case_2():
    try:
        person_0 = module_0.Person()
        str_0 = person_0.views_on()
        person_1 = module_0.Person()
        str_1 = person_1.views_on()
        person_2 = module_0.Person()
        person_3 = module_0.Person()
        str_2 = person_3.height()
        title_type_0 = module_1.TitleType.ACADEMIC
        dict_0 = {str_0: title_type_0, str_0: str_1}
        person_4 = module_0.Person(**dict_0)
    except BaseException:
        pass

def test_case_3():
    try:
        list_0 = []
        person_0 = module_0.Person(*list_0)
        str_0 = person_0.occupation()
        int_0 = 193
        str_1 = 'op'
        str_2 = person_0.social_media_profile()
        str_3 = person_0.name()
        bool_0 = False
        str_4 = person_0.password(int_0, bool_0)
        dict_0 = {str_1: str_1}
        str_5 = person_0.blood_type()
        list_1 = [dict_0, dict_0, str_1]
        person_1 = module_0.Person(*list_1, **dict_0)
    except BaseException:
        pass

def test_case_4():
    try:
        person_0 = module_0.Person()
        str_0 = person_0.occupation()
        str_1 = '.mo'
        dict_0 = {str_1: str_1}
        person_1 = module_0.Person(**dict_0)
    except BaseException:
        pass

def test_case_5():
    try:
        person_0 = module_0.Person()
        str_0 = person_0.political_views()
        person_1 = module_0.Person()
        str_1 = person_1.views_on()
        gender_0 = module_1.Gender.FEMALE
        str_2 = person_1.nationality(gender_0)
        dict_0 = {}
        person_2 = module_0.Person(**dict_0)
        str_3 = person_2.username()
        list_0 = [str_2]
        person_3 = module_0.Person(*list_0)
    except BaseException:
        pass

def test_case_6():
    try:
        person_0 = module_0.Person()
        str_0 = person_0.telephone()
        str_1 = person_0.last_name()
        str_2 = 'disbelief'
        str_3 = person_0.identifier(str_2)
        str_4 = person_0.nationality()
        title_type_0 = module_1.TitleType.TYPICAL
        none_type_0 = None
        str_5 = person_0.last_name(none_type_0)
        person_1 = module_0.Person()
        str_6 = person_1.title(title_type_0)
    except BaseException:
        pass

def test_case_7():
    try:
        person_0 = module_0.Person()
        tuple_0 = None
        bool_0 = True
        str_0 = person_0.email(tuple_0, bool_0)
        str_1 = person_0.username(str_0)
    except BaseException:
        pass

def test_case_8():
    try:
        person_0 = module_0.Person()
        bool_0 = True
        list_0 = [person_0]
        str_0 = person_0.email(list_0, bool_0)
    except BaseException:
        pass

def test_case_9():
    try:
        person_0 = module_0.Person()
        str_0 = person_0.avatar()
        str_1 = person_0.worldview()
        person_1 = module_0.Person()
        int_0 = person_0.work_experience()
        var_0 = person_1.first_name()
        int_1 = -72
        str_2 = person_0.last_name()
        int_2 = person_1.age(int_1)
        str_3 = person_1.occupation()
        str_4 = person_0.telephone()
        str_5 = person_1.password()
        str_6 = person_1.language()
        person_2 = module_0.Person()
        bool_0 = False
        var_1 = person_1.gender()
        str_7 = person_1.social_media_profile()
        str_8 = person_0.sexual_orientation(bool_0)
        str_9 = person_2.views_on()
        str_10 = person_1.email()
        str_11 = person_0.full_name(bool_0)
    except BaseException:
        pass

def test_case_10():
    try:
        person_0 = module_0.Person()
        str_0 = person_0.avatar()
        str_1 = person_0.worldview()
        person_1 = module_0.Person()
        int_0 = person_0.work_experience()
        var_0 = person_1.first_name()
        int_1 = -72
        str_2 = person_0.last_name()
        int_2 = person_1.age(int_1)
        str_3 = person_1.occupation()
        int_3 = person_1.age()
        str_4 = person_1.telephone()
        str_5 = person_1.password()
        str_6 = person_1.occupation()
        str_7 = person_1.language()
        person_2 = module_0.Person()
        str_8 = person_2.surname()
        str_9 = person_0.language()
        bool_0 = True
        str_10 = person_0.sexual_orientation(bool_0)
        str_11 = person_2.views_on()
        str_12 = person_1.email()
        str_13 = person_1.telephone()
        str_14 = person_1.full_name()
        str_15 = person_2.full_name(bool_0)
    except BaseException:
        pass