# Automatically generated by Pynguin.
import ansible.parsing.yaml.objects as module_0

def test_case_0():
    try:
        ansible_mapping_0 = module_0.AnsibleMapping()
        ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(ansible_mapping_0)
        var_0 = ansible_vault_encrypted_unicode_0.encode()
    except BaseException:
        pass

def test_case_1():
    try:
        ansible_base_y_a_m_l_object_0 = module_0.AnsibleBaseYAMLObject()
        ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(ansible_base_y_a_m_l_object_0)
        var_0 = ansible_vault_encrypted_unicode_0.__int__()
    except BaseException:
        pass

def test_case_2():
    try:
        bool_0 = True
        ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(bool_0)
        var_0 = ansible_vault_encrypted_unicode_0.__complex__()
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'HANDLER: %s'
        ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(str_0)
        list_0 = [str_0, str_0, ansible_vault_encrypted_unicode_0]
        var_0 = ansible_vault_encrypted_unicode_0.__lt__(list_0)
    except BaseException:
        pass

def test_case_4():
    try:
        bytes_0 = b'\x9e\x1f\xcc\x89w\xd0I'
        str_0 = '('
        ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(str_0)
        var_0 = ansible_vault_encrypted_unicode_0.__gt__(bytes_0)
    except BaseException:
        pass

def test_case_5():
    try:
        bytes_0 = b'\x00\x0e,\xa6\xb7E\x9d\xf7\x9b\xeb\xa9{\xafh'
        float_0 = 2662.01
        bytes_1 = None
        str_0 = 'N?[r.=b'
        ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(str_0)
        var_0 = ansible_vault_encrypted_unicode_0.__ne__(bytes_1)
        ansible_vault_encrypted_unicode_1 = module_0.AnsibleVaultEncryptedUnicode(float_0)
        ansible_vault_encrypted_unicode_2 = module_0.AnsibleVaultEncryptedUnicode(ansible_vault_encrypted_unicode_1)
        var_1 = ansible_vault_encrypted_unicode_2.__contains__(bytes_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = None
        ansible_base_y_a_m_l_object_0 = None
        str_1 = 'V.>@!\\d\x0cu.x4n4\t+tc'
        ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(str_1)
        ansible_vault_encrypted_unicode_1 = module_0.AnsibleVaultEncryptedUnicode(ansible_vault_encrypted_unicode_0)
        dict_0 = {ansible_base_y_a_m_l_object_0: str_0, ansible_base_y_a_m_l_object_0: str_0}
        ansible_vault_encrypted_unicode_2 = module_0.AnsibleVaultEncryptedUnicode(dict_0)
        var_0 = ansible_vault_encrypted_unicode_2.__contains__(ansible_vault_encrypted_unicode_1)
        var_1 = ansible_vault_encrypted_unicode_1.ljust(ansible_base_y_a_m_l_object_0)
    except BaseException:
        pass

def test_case_7():
    try:
        list_0 = []
        bool_0 = False
        ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(list_0)
        var_0 = ansible_vault_encrypted_unicode_0.splitlines()
        ansible_vault_encrypted_unicode_1 = module_0.AnsibleVaultEncryptedUnicode(bool_0)
        var_1 = ansible_vault_encrypted_unicode_1.upper()
        ansible_sequence_0 = module_0.AnsibleSequence(*list_0)
        ansible_vault_encrypted_unicode_2 = module_0.AnsibleVaultEncryptedUnicode(ansible_sequence_0)
        set_0 = None
        var_2 = ansible_vault_encrypted_unicode_1.__mul__(set_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = ',dX'
        dict_0 = {str_0: str_0}
        ansible_sequence_0 = module_0.AnsibleSequence(**dict_0)
        list_0 = [str_0, str_0, str_0]
        float_0 = 1338.32
        ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(float_0)
        var_0 = ansible_vault_encrypted_unicode_0.__complex__()
        bool_0 = False
        ansible_vault_encrypted_unicode_1 = module_0.AnsibleVaultEncryptedUnicode(bool_0)
        var_1 = ansible_vault_encrypted_unicode_1.islower()
        var_2 = ansible_vault_encrypted_unicode_1.split()
        ansible_sequence_1 = module_0.AnsibleSequence(**dict_0)
        ansible_base_y_a_m_l_object_0 = module_0.AnsibleBaseYAMLObject()
        var_3 = ansible_vault_encrypted_unicode_1.__hash__()
        ansible_vault_encrypted_unicode_2 = module_0.AnsibleVaultEncryptedUnicode(ansible_base_y_a_m_l_object_0)
        var_4 = ansible_vault_encrypted_unicode_2.__rmod__(list_0)
        dict_1 = {str_0: str_0}
        ansible_sequence_2 = module_0.AnsibleSequence(**dict_1)
        var_5 = ansible_vault_encrypted_unicode_2.__len__()
    except BaseException:
        pass

def test_case_9():
    try:
        bytes_0 = b'6\xfc\xccn\x03l5E\t\xe30'
        ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(bytes_0)
        bool_0 = False
        var_0 = ansible_vault_encrypted_unicode_0.__hash__()
        var_1 = ansible_vault_encrypted_unicode_0.__add__(bool_0)
        bytes_1 = b"'\xee\xfe\x88\x13m\x86)"
        var_2 = ansible_vault_encrypted_unicode_0.__repr__()
        ansible_vault_encrypted_unicode_1 = module_0.AnsibleVaultEncryptedUnicode(bytes_1)
        var_3 = ansible_vault_encrypted_unicode_1.__repr__()
        var_4 = ansible_vault_encrypted_unicode_1.isidentifier()
        ansible_sequence_0 = module_0.AnsibleSequence()
        var_5 = ansible_vault_encrypted_unicode_1.is_encrypted()
        int_0 = -1136
        var_6 = ansible_vault_encrypted_unicode_0.endswith(int_0)
    except BaseException:
        pass

def test_case_10():
    try:
        bytes_0 = b'6\xfc\xccn\x03l5E\t\xe30'
        ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(bytes_0)
        list_0 = []
        float_0 = 2816.0
        ansible_vault_encrypted_unicode_1 = module_0.AnsibleVaultEncryptedUnicode(float_0)
        var_0 = ansible_vault_encrypted_unicode_1.format_map(list_0)
        bool_0 = False
        var_1 = ansible_vault_encrypted_unicode_0.__hash__()
        float_1 = None
        var_2 = ansible_vault_encrypted_unicode_0.__radd__(float_1)
        var_3 = ansible_vault_encrypted_unicode_0.__add__(bool_0)
        bytes_1 = b"'\xee\x88\x13m()"
        ansible_vault_encrypted_unicode_2 = module_0.AnsibleVaultEncryptedUnicode(bytes_1)
        dict_0 = {}
        var_4 = ansible_vault_encrypted_unicode_0.join(dict_0)
        var_5 = ansible_vault_encrypted_unicode_2.__repr__()
        var_6 = ansible_vault_encrypted_unicode_2.isidentifier()
        ansible_sequence_0 = module_0.AnsibleSequence()
        ansible_vault_encrypted_unicode_3 = module_0.AnsibleVaultEncryptedUnicode(ansible_sequence_0)
        var_7 = ansible_vault_encrypted_unicode_2.is_encrypted()
        bool_1 = True
        var_8 = ansible_vault_encrypted_unicode_2.__getslice__(bool_1, ansible_vault_encrypted_unicode_0)
    except BaseException:
        pass

def test_case_11():
    try:
        list_0 = []
        bool_0 = False
        set_0 = {bool_0}
        ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(set_0)
        var_0 = ansible_vault_encrypted_unicode_0.ljust(list_0)
    except BaseException:
        pass

def test_case_12():
    try:
        int_0 = 1372
        ansible_mapping_0 = module_0.AnsibleMapping()
        ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(ansible_mapping_0)
        ansible_vault_encrypted_unicode_1 = module_0.AnsibleVaultEncryptedUnicode(ansible_vault_encrypted_unicode_0)
        var_0 = ansible_vault_encrypted_unicode_1.__radd__(int_0)
        set_0 = set()
        int_1 = 2461
        ansible_vault_encrypted_unicode_2 = module_0.AnsibleVaultEncryptedUnicode(int_1)
        var_1 = ansible_vault_encrypted_unicode_2.isupper()
        var_2 = ansible_vault_encrypted_unicode_2.lstrip(set_0)
    except BaseException:
        pass

def test_case_13():
    try:
        bool_0 = False
        str_0 = 'zypper'
        ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(str_0)
        ansible_vault_encrypted_unicode_1 = module_0.AnsibleVaultEncryptedUnicode(ansible_vault_encrypted_unicode_0)
        var_0 = ansible_vault_encrypted_unicode_1.partition(bool_0)
    except BaseException:
        pass

def test_case_14():
    try:
        ansible_sequence_0 = module_0.AnsibleSequence()
        list_0 = [ansible_sequence_0, ansible_sequence_0, ansible_sequence_0, ansible_sequence_0]
        ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(list_0)
        list_1 = []
        ansible_base_y_a_m_l_object_0 = module_0.AnsibleBaseYAMLObject(*list_1)
        int_0 = 1478
        var_0 = ansible_vault_encrypted_unicode_0.rindex(int_0)
    except BaseException:
        pass

def test_case_15():
    try:
        list_0 = []
        ansible_base_y_a_m_l_object_0 = module_0.AnsibleBaseYAMLObject(*list_0)
        int_0 = 741
        ansible_unicode_0 = module_0.AnsibleUnicode(*list_0)
        int_1 = None
        ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(int_1)
        ansible_vault_encrypted_unicode_1 = module_0.AnsibleVaultEncryptedUnicode(int_0)
        var_0 = ansible_vault_encrypted_unicode_1.is_encrypted()
        ansible_unicode_1 = module_0.AnsibleUnicode()
        bool_0 = True
        var_1 = ansible_vault_encrypted_unicode_0.rpartition(bool_0)
    except BaseException:
        pass

def test_case_16():
    try:
        bool_0 = True
        ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(bool_0)
        var_0 = ansible_vault_encrypted_unicode_0.isdigit()
        bytes_0 = b'\xef\x8b[Yq\xc0\xef&\x8d\x95h%\xce53G\x08*\x9a'
        dict_0 = {ansible_vault_encrypted_unicode_0: bytes_0}
        list_0 = []
        list_1 = [bool_0]
        var_1 = ansible_vault_encrypted_unicode_0.startswith(dict_0, list_0, list_1)
    except BaseException:
        pass

def test_case_17():
    try:
        float_0 = 1.0
        ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(float_0)
        var_0 = ansible_vault_encrypted_unicode_0.translate()
    except BaseException:
        pass

def test_case_18():
    try:
        str_0 = 'D4'
        ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(str_0)
        var_0 = ansible_vault_encrypted_unicode_0.isdecimal()
        ansible_vault_encrypted_unicode_1 = module_0.AnsibleVaultEncryptedUnicode(str_0)
        var_1 = ansible_vault_encrypted_unicode_1.casefold()
        var_2 = ansible_vault_encrypted_unicode_1.isupper()
        var_3 = ansible_vault_encrypted_unicode_1.__hash__()
        ansible_unicode_0 = module_0.AnsibleUnicode()
        var_4 = ansible_vault_encrypted_unicode_1.isdecimal()
        float_0 = -375.0
        var_5 = ansible_vault_encrypted_unicode_1.zfill(float_0)
    except BaseException:
        pass

def test_case_19():
    try:
        bytes_0 = b'6\xfc\xccn\x03l5E\t\xe30'
        ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(bytes_0)
        list_0 = [bytes_0, ansible_vault_encrypted_unicode_0, bytes_0]
        bool_0 = False
        var_0 = ansible_vault_encrypted_unicode_0.__hash__()
        var_1 = ansible_vault_encrypted_unicode_0.__add__(bool_0)
        bytes_1 = b"'\xee\x88\x13m()"
        var_2 = ansible_vault_encrypted_unicode_0.__repr__()
        ansible_vault_encrypted_unicode_1 = module_0.AnsibleVaultEncryptedUnicode(bytes_1)
        str_0 = '\t'
        dict_0 = {}
        var_3 = ansible_vault_encrypted_unicode_0.replace(list_0, str_0, dict_0)
    except BaseException:
        pass

def test_case_20():
    try:
        str_0 = 'dJ.LlB]gJ'
        ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(str_0)
        bytes_0 = b'\xbeu0\x9e\x80U\x90\x91\xc8s'
        var_0 = ansible_vault_encrypted_unicode_0.__ge__(bytes_0)
    except BaseException:
        pass

def test_case_21():
    try:
        bytes_0 = b'6\xfc\xccn\x03l5E\t\xe30'
        ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(bytes_0)
        var_0 = ansible_vault_encrypted_unicode_0.__hash__()
        var_1 = ansible_vault_encrypted_unicode_0.__repr__()
        ansible_vault_encrypted_unicode_1 = module_0.AnsibleVaultEncryptedUnicode(bytes_0)
        bool_0 = True
        var_2 = ansible_vault_encrypted_unicode_1.isidentifier()
        ansible_sequence_0 = module_0.AnsibleSequence()
        var_3 = ansible_vault_encrypted_unicode_1.__getslice__(bool_0, ansible_vault_encrypted_unicode_0)
    except BaseException:
        pass

def test_case_22():
    try:
        float_0 = 2662.01
        bytes_0 = None
        str_0 = 'N?[r.=b'
        ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(str_0)
        var_0 = ansible_vault_encrypted_unicode_0.__ne__(bytes_0)
        ansible_vault_encrypted_unicode_1 = module_0.AnsibleVaultEncryptedUnicode(float_0)
        str_1 = '=h6'
        var_1 = ansible_vault_encrypted_unicode_0.__radd__(str_1)
        list_0 = [bytes_0, str_1]
        ansible_vault_encrypted_unicode_2 = module_0.AnsibleVaultEncryptedUnicode(list_0)
        str_2 = '{79WQx\n,$'
        dict_0 = {str_0: var_1, str_0: ansible_vault_encrypted_unicode_0, str_2: list_0}
        ansible_unicode_0 = module_0.AnsibleUnicode(**dict_0)
    except BaseException:
        pass

def test_case_23():
    try:
        int_0 = 366
        tuple_0 = (int_0,)
        ansible_unicode_0 = module_0.AnsibleUnicode()
        int_1 = 257
        ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(int_1)
        var_0 = ansible_vault_encrypted_unicode_0.find(tuple_0, ansible_unicode_0)
    except BaseException:
        pass

def test_case_24():
    try:
        dict_0 = {}
        float_0 = 1.5
        list_0 = [float_0]
        list_1 = [dict_0, dict_0, dict_0, dict_0]
        ansible_sequence_0 = module_0.AnsibleSequence()
        ansible_base_y_a_m_l_object_0 = module_0.AnsibleBaseYAMLObject()
        tuple_0 = (list_1, ansible_sequence_0, ansible_base_y_a_m_l_object_0)
        ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(tuple_0)
        var_0 = ansible_vault_encrypted_unicode_0.center(float_0, *list_0)
    except BaseException:
        pass

def test_case_25():
    try:
        str_0 = 'HANDLER: %s'
        ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(str_0)
        bytes_0 = b'\x9a\n|\xf8h\x1d\x8e\xf5\xb5\xab\x1b\x185\x1d\xbc\xf3'
        ansible_vault_encrypted_unicode_1 = module_0.AnsibleVaultEncryptedUnicode(bytes_0)
        var_0 = ansible_vault_encrypted_unicode_1.is_encrypted()
        var_1 = ansible_vault_encrypted_unicode_1.isalnum()
        float_0 = 685.81751
        var_2 = ansible_vault_encrypted_unicode_0.__getslice__(float_0, ansible_vault_encrypted_unicode_0)
    except BaseException:
        pass

def test_case_26():
    try:
        bytes_0 = b'\xc6`\xc2\x88\xf9a\xe6k&\x08!\xa5Y\xb8\x8e\x00'
        bool_0 = False
        set_0 = {bytes_0, bool_0, bytes_0}
        float_0 = -2252.2
        ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(float_0)
        var_0 = ansible_vault_encrypted_unicode_0.__ne__(ansible_vault_encrypted_unicode_0)
        var_1 = ansible_vault_encrypted_unicode_0.__mod__(set_0)
    except BaseException:
        pass

def test_case_27():
    try:
        float_0 = 1518.724727
        ansible_unicode_0 = module_0.AnsibleUnicode()
        str_0 = ''
        tuple_0 = (str_0,)
        ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(tuple_0)
        float_1 = -483.25371
        list_0 = [float_0, float_0, float_0]
        ansible_vault_encrypted_unicode_1 = module_0.AnsibleVaultEncryptedUnicode(list_0)
        var_0 = ansible_vault_encrypted_unicode_1.format_map(float_1)
        ansible_vault_encrypted_unicode_2 = module_0.AnsibleVaultEncryptedUnicode(ansible_unicode_0)
        var_1 = ansible_vault_encrypted_unicode_2.rstrip(float_0)
    except BaseException:
        pass

def test_case_28():
    try:
        float_0 = -657.641022
        list_0 = []
        str_0 = '$Bkw\x0c\n'
        str_1 = None
        str_2 = 'k![(vVVU={0{GJ}:fEn-'
        list_1 = [float_0, list_0, str_2]
        dict_0 = {str_0: float_0, str_1: float_0, str_1: str_1, str_2: list_1}
        ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(dict_0)
        ansible_vault_encrypted_unicode_1 = module_0.AnsibleVaultEncryptedUnicode(list_0)
        var_0 = ansible_vault_encrypted_unicode_0.__reversed__()
        var_1 = ansible_vault_encrypted_unicode_1.isidentifier()
        var_2 = ansible_vault_encrypted_unicode_1.__repr__()
        list_2 = []
        ansible_vault_encrypted_unicode_2 = module_0.AnsibleVaultEncryptedUnicode(ansible_vault_encrypted_unicode_0)
        var_3 = ansible_vault_encrypted_unicode_2.isupper()
        ansible_vault_encrypted_unicode_3 = module_0.AnsibleVaultEncryptedUnicode(list_2)
        var_4 = ansible_vault_encrypted_unicode_3.isdigit()
        var_5 = ansible_vault_encrypted_unicode_1.rjust(list_0)
    except BaseException:
        pass

def test_case_29():
    try:
        bytes_0 = b'6\xfc\xccn\x03l5E\t\xe30'
        ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(bytes_0)
        var_0 = ansible_vault_encrypted_unicode_0.__hash__()
        int_0 = -780
        str_0 = '1.0'
        var_1 = ansible_vault_encrypted_unicode_0.index(int_0, str_0)
    except BaseException:
        pass

def test_case_30():
    try:
        bytes_0 = b'\x99O\xd9\x90t\xeeeGG\xa2&\xc1B'
        str_0 = '5xYV'
        dict_0 = {str_0: bytes_0}
        ansible_mapping_0 = module_0.AnsibleMapping(**dict_0)
        ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(ansible_mapping_0)
        var_0 = ansible_vault_encrypted_unicode_0.rstrip()
        ansible_vault_encrypted_unicode_1 = module_0.AnsibleVaultEncryptedUnicode(bytes_0)
        list_0 = [bytes_0]
        var_1 = ansible_vault_encrypted_unicode_1.isupper()
        var_2 = ansible_vault_encrypted_unicode_0.__reversed__()
        var_3 = ansible_vault_encrypted_unicode_1.__eq__(bytes_0)
        var_4 = ansible_vault_encrypted_unicode_0.splitlines()
        bool_0 = True
        var_5 = ansible_vault_encrypted_unicode_0.isascii()
        var_6 = ansible_vault_encrypted_unicode_1.__add__(bool_0)
        var_7 = ansible_vault_encrypted_unicode_0.lower()
        ansible_mapping_1 = module_0.AnsibleMapping()
        var_8 = ansible_vault_encrypted_unicode_1.lower()
        ansible_vault_encrypted_unicode_2 = module_0.AnsibleVaultEncryptedUnicode(ansible_vault_encrypted_unicode_1)
        var_9 = ansible_vault_encrypted_unicode_2.is_encrypted()
        ansible_sequence_0 = module_0.AnsibleSequence(*list_0)
        var_10 = ansible_vault_encrypted_unicode_1.__ge__(ansible_vault_encrypted_unicode_2)
        str_1 = '012345'
        var_11 = ansible_vault_encrypted_unicode_1.count(str_1)
        var_12 = ansible_vault_encrypted_unicode_1.endswith(list_0)
    except BaseException:
        pass

def test_case_31():
    try:
        str_0 = '\x0c-'
        ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(str_0)
        var_0 = ansible_vault_encrypted_unicode_0.is_encrypted()
        int_0 = 2828
        float_0 = 3451.0
        var_1 = ansible_vault_encrypted_unicode_0.__getslice__(int_0, float_0)
    except BaseException:
        pass

def test_case_32():
    try:
        str_0 = 'HANDLER: %s'
        ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(str_0)
        bytes_0 = b'\x9a\n|\xf8h\x1d\x8e\xf5\xb5\xab\x1b\x185\x1d\xbc\xf3'
        ansible_vault_encrypted_unicode_1 = module_0.AnsibleVaultEncryptedUnicode(bytes_0)
        var_0 = ansible_vault_encrypted_unicode_1.is_encrypted()
        var_1 = ansible_vault_encrypted_unicode_0.__lt__(ansible_vault_encrypted_unicode_1)
        var_2 = ansible_vault_encrypted_unicode_1.__int__()
    except BaseException:
        pass