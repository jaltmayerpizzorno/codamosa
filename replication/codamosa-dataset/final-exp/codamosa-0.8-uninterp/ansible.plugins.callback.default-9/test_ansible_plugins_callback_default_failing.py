# Automatically generated by Pynguin.
import ansible.plugins.callback.default as module_0

def test_case_0():
    try:
        callback_module_0 = module_0.CallbackModule()
        bool_0 = True
        bytes_0 = b'\x1a\xd7\x04'
        var_0 = callback_module_0.v2_playbook_on_no_hosts_matched()
        var_1 = callback_module_0.v2_playbook_on_notify(bool_0, bytes_0)
        var_2 = callback_module_0.v2_playbook_on_no_hosts_remaining()
        callback_module_1 = module_0.CallbackModule()
        var_3 = callback_module_0.set_options()
    except BaseException:
        pass

def test_case_1():
    try:
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_no_hosts_remaining()
        bytes_0 = b''
        var_1 = callback_module_0.v2_runner_on_failed(bytes_0)
    except BaseException:
        pass

def test_case_2():
    try:
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_on_ok(callback_module_0)
    except BaseException:
        pass

def test_case_3():
    try:
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_no_hosts_matched()
        callback_module_1 = module_0.CallbackModule()
        set_0 = {var_0}
        var_1 = callback_module_1.v2_runner_on_skipped(set_0)
    except BaseException:
        pass

def test_case_4():
    try:
        bytes_0 = b'O\xaf\xda\xb4\xd6\xe7\x0c\x98\r'
        set_0 = {bytes_0}
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_on_unreachable(set_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = '#Op[]""\r$O\n\\Sb>hY'
        tuple_0 = (str_0,)
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_notify(callback_module_0, str_0)
        bool_0 = False
        var_1 = callback_module_0.v2_playbook_on_task_start(tuple_0, bool_0)
    except BaseException:
        pass

def test_case_6():
    try:
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_cleanup_task_start(callback_module_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = '/ifMD>aT_r^*1AC4<+'
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_handler_task_start(str_0)
    except BaseException:
        pass

def test_case_8():
    try:
        callback_module_0 = module_0.CallbackModule()
        list_0 = [callback_module_0, callback_module_0]
        str_0 = 'lsb-release'
        callback_module_1 = module_0.CallbackModule()
        var_0 = callback_module_1.v2_runner_on_start(list_0, str_0)
    except BaseException:
        pass

def test_case_9():
    try:
        callback_module_0 = module_0.CallbackModule()
        bytes_0 = b'~!\xa9\x8f\xb6\x840\x08\xb0uYY$Lc\xba\xcfm='
        str_0 = 'H'
        var_0 = callback_module_0.v2_playbook_on_notify(bytes_0, str_0)
        var_1 = callback_module_0.v2_playbook_on_play_start(callback_module_0)
    except BaseException:
        pass

def test_case_10():
    try:
        float_0 = 1752.61812
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_on_file_diff(float_0)
    except BaseException:
        pass

def test_case_11():
    try:
        int_0 = 82
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_item_on_ok(int_0)
    except BaseException:
        pass

def test_case_12():
    try:
        callback_module_0 = module_0.CallbackModule()
        callback_module_1 = module_0.CallbackModule()
        dict_0 = {callback_module_1: callback_module_1}
        var_0 = callback_module_1.v2_runner_item_on_skipped(dict_0)
    except BaseException:
        pass

def test_case_13():
    try:
        callback_module_0 = module_0.CallbackModule()
        bool_0 = True
        bytes_0 = b'\x1a\xd7\x04'
        var_0 = callback_module_0.v2_playbook_on_notify(bool_0, bytes_0)
        var_1 = callback_module_0.v2_playbook_on_no_hosts_remaining()
        callback_module_1 = module_0.CallbackModule()
        set_0 = {callback_module_1, var_1, callback_module_0, bool_0}
        var_2 = callback_module_0.v2_playbook_on_stats(set_0)
    except BaseException:
        pass

def test_case_14():
    try:
        str_0 = 'N!\nQ'
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_no_hosts_matched()
        var_1 = callback_module_0.v2_runner_retry(str_0)
    except BaseException:
        pass

def test_case_15():
    try:
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_on_async_poll(callback_module_0)
    except BaseException:
        pass

def test_case_16():
    try:
        callback_module_0 = module_0.CallbackModule()
        list_0 = [callback_module_0]
        var_0 = callback_module_0.v2_runner_on_async_ok(list_0)
    except BaseException:
        pass

def test_case_17():
    try:
        bool_0 = False
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_on_async_failed(bool_0)
    except BaseException:
        pass

def test_case_18():
    try:
        str_0 = 'done copying, going to template now'
        tuple_0 = (str_0,)
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_item_on_failed(tuple_0)
    except BaseException:
        pass

def test_case_19():
    try:
        callback_module_0 = module_0.CallbackModule()
        callback_module_1 = module_0.CallbackModule()
        float_0 = 0.5
        var_0 = callback_module_0.v2_playbook_on_include(float_0)
    except BaseException:
        pass

def test_case_20():
    try:
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_start(callback_module_0)
    except BaseException:
        pass