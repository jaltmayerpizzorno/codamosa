# Automatically generated by Pynguin.
import ansible.utils._junit_xml as module_0
import datetime as module_1

def test_case_0():
    try:
        list_0 = []
        test_suites_0 = module_0.TestSuites(list_0)
        element_0 = test_suites_0.get_xml_element()
        test_failure_0 = module_0.TestFailure()
        dict_0 = {}
        datetime_0 = module_1.datetime(**dict_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'Z5K:n\x0cX64<\'T\r&"*}'
        dict_0 = {}
        list_0 = None
        test_suite_0 = module_0.TestSuite(str_0, str_0, str_0, dict_0, list_0, str_0)
        dict_1 = {}
        test_suite_1 = module_0.TestSuite(str_0, dict_1, list_0)
        list_1 = [test_suite_0, test_suite_0, test_suite_1]
        test_suites_0 = module_0.TestSuites(str_0, list_1)
        str_1 = test_suites_0.to_pretty_xml()
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'Y1rNcD\\8'
        str_1 = '~g9eo5~\t-(NjseQoDn'
        str_2 = ''
        str_3 = '\x0c\t(9>*9$ZvfD`'
        str_4 = 'RQf.q&'
        str_5 = "'T\nt?:gyc?"
        test_error_0 = module_0.TestError(str_4)
        list_0 = [test_error_0, test_error_0]
        test_case_0 = module_0.TestCase(str_0, str_1, list_0, str_2)
        element_0 = test_case_0.get_xml_element()
        dict_0 = {str_1: str_2, str_3: str_4, str_2: str_5}
        test_suite_0 = module_0.TestSuite(str_0, str_0, dict_0)
        element_1 = test_suite_0.get_xml_element()
        str_6 = '" *TL? hbxXhh|S"wS77'
        test_failure_0 = module_0.TestFailure(str_6)
        var_0 = test_failure_0.__repr__()
        str_7 = 'application/x-www-form-urlencoded'
        float_0 = -688.95273
        test_suites_0 = module_0.TestSuites()
        var_1 = test_suites_0.__eq__(float_0)
        none_type_0 = None
        test_failure_1 = module_0.TestFailure()
        list_1 = [test_failure_1, test_failure_1, test_failure_1]
        test_case_1 = module_0.TestCase(str_7, test_failure_1, list_1, str_7, str_7)
        list_2 = [var_0]
        test_error_1 = module_0.TestError()
        var_2 = test_error_1.__eq__(list_2)
        str_8 = '5"%Gu:]-9o]rE'
        test_suite_1 = module_0.TestSuite(str_8)
        var_3 = test_case_0.__eq__(test_suite_1)
        test_case_2 = module_0.TestCase(str_7, none_type_0, str_7, str_7, str_7, str_7)
        str_9 = "Destination '%s' not readable"
        list_3 = [test_failure_1, test_failure_0]
        test_case_3 = module_0.TestCase(str_9, list_0, list_3)
        element_2 = test_case_3.get_xml_element()
        element_3 = test_case_2.get_xml_element()
    except BaseException:
        pass

def test_case_3():
    try:
        test_suites_0 = module_0.TestSuites()
        dict_0 = test_suites_0.get_attributes()
        str_0 = 'CONFIG_FILE'
        element_0 = test_suites_0.get_xml_element()
        str_1 = 'gpg-pubkey-%s'
        str_2 = '\\5V>|BY(n'
        test_failure_0 = module_0.TestFailure()
        list_0 = [test_failure_0, test_failure_0]
        bool_0 = None
        test_case_0 = module_0.TestCase(str_2, list_0, str_1, bool_0)
        list_1 = [test_case_0, test_case_0]
        test_suite_0 = module_0.TestSuite(str_1, str_0, dict_0, list_1, str_1, str_2)
        element_1 = test_suite_0.get_xml_element()
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'test_add'
        var_0 = None
        str_1 = 'TestCalculator'
        str_2 = '.001'
        bool_0 = False
        test_case_0 = module_0.TestCase(str_0, var_0, str_1, var_0, str_2, var_0, var_0, var_0, var_0, var_0, bool_0)
        str_3 = 'test_suite_calculator'
        test_case_1 = [test_case_0]
        test_suite_0 = module_0.TestSuite(str_3, var_0, var_0, var_0, var_0, var_0, test_case_1, var_0, var_0)
        element_0 = test_suite_0.get_xml_element()
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'test_add'
        str_1 = 'TestCalculator'
        str_2 = '.001'
        bool_0 = False
        test_case_0 = module_0.TestCase(str_0, str_1, str_1, str_1, str_2, str_1, str_1, str_1, str_1, str_1, bool_0)
        str_3 = 'test_suite_calculator'
        test_case_1 = [str_1, test_case_0, str_0]
        test_suite_0 = module_0.TestSuite(str_3, str_0, str_0, str_0, str_0, str_0, test_case_1, str_0, str_0)
        element_0 = test_suite_0.get_xml_element()
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'test_add'
        str_1 = '554'
        test_failure_0 = module_0.TestFailure(str_1, str_0, str_1)
        str_2 = '.001'
        bool_0 = False
        test_case_0 = module_0.TestCase(str_0, test_failure_0, str_2, test_failure_0, str_2, test_failure_0, test_failure_0, test_failure_0, test_failure_0, test_failure_0, bool_0)
        str_3 = '5N:H'
        dict_0 = {}
        test_suite_0 = module_0.TestSuite(str_3, str_3, dict_0)
        element_0 = test_suite_0.get_xml_element()
        test_case_1 = module_0.TestCase(str_0)
        test_suites_0 = module_0.TestSuites()
        element_1 = test_case_0.get_xml_element()
    except BaseException:
        pass