# Automatically generated by Pynguin.
import typed_ast._ast3 as module_0
import py_backwards.utils.snippet as module_1
import typed_ast.ast3 as module_2

def test_case_0():
    pass

def test_case_1():
    a_s_t_0 = module_0.AST()
    iterable_0 = module_1.find_variables(a_s_t_0)

def test_case_2():
    class_def_0 = module_0.ClassDef()
    str_0 = '}=,c$d%mg/#>01w+<S'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    variables_replacer_0 = module_1.VariablesReplacer(dict_0)
    class_def_1 = variables_replacer_0.visit_ClassDef(class_def_0)

def test_case_3():
    arg_0 = module_0.arg()
    str_0 = 'J=+{'
    int_0 = 2485
    list_0 = [str_0, str_0, arg_0, int_0]
    function_def_0 = module_0.FunctionDef(*list_0)
    dict_0 = {str_0: str_0}
    variables_replacer_0 = module_1.VariablesReplacer(dict_0)
    function_def_1 = variables_replacer_0.visit_FunctionDef(function_def_0)
    str_1 = ''
    dict_1 = {str_1: str_1}
    variables_replacer_1 = module_1.VariablesReplacer(dict_1)
    function_def_2 = variables_replacer_1.visit_FunctionDef(function_def_1)
    arg_1 = variables_replacer_0.visit_arg(arg_0)
    dict_2 = {str_0: str_0}
    variables_replacer_2 = module_1.VariablesReplacer(dict_2)
    arg_2 = variables_replacer_2.visit_arg(arg_0)

def test_case_4():
    name_0 = module_0.Name()
    str_0 = 'u{Ej<|G*r]'
    a_s_t_0 = module_0.AST()
    list_0 = [a_s_t_0, a_s_t_0]
    dict_0 = {str_0: list_0}
    variables_replacer_0 = module_1.VariablesReplacer(dict_0)
    name_1 = variables_replacer_0.visit_Name(name_0)
    str_1 = 'kI)/:='
    str_2 = 'Uw9d#ehB6)}'
    dict_1 = {str_1: str_1, str_2: str_1, str_1: str_1}
    variables_replacer_1 = module_1.VariablesReplacer(dict_1)
    name_2 = variables_replacer_1.visit_Name(name_1)

def test_case_5():
    function_def_0 = module_0.FunctionDef()
    str_0 = '}fyw#o'
    str_1 = '3CA'
    str_2 = 'InputOutput'
    dict_0 = {str_0: str_0, str_1: str_0, str_2: str_1, str_0: str_2}
    variables_replacer_0 = module_1.VariablesReplacer(dict_0)
    function_def_1 = variables_replacer_0.visit_FunctionDef(function_def_0)

def test_case_6():
    attribute_0 = module_0.Attribute()
    str_0 = ''
    a_s_t_0 = module_0.AST()
    dict_0 = {}
    variables_replacer_0 = module_1.VariablesReplacer(dict_0)
    attribute_1 = variables_replacer_0.visit_Attribute(attribute_0)
    str_1 = ''
    dict_1 = {}
    variables_replacer_1 = module_1.VariablesReplacer(dict_1)
    attribute_2 = variables_replacer_1.visit_Attribute(attribute_0)
    dict_2 = {str_0: a_s_t_0, str_1: str_0, str_1: str_0}
    variables_replacer_2 = module_1.VariablesReplacer(dict_2)
    attribute_3 = variables_replacer_2.visit_Attribute(attribute_0)

def test_case_7():
    list_0 = []
    callable_0 = None
    snippet_0 = module_1.snippet(callable_0)
    class_def_0 = module_0.ClassDef(*list_0)
    str_0 = 'KC3cj-'
    dict_0 = {str_0: str_0}
    variables_replacer_0 = module_1.VariablesReplacer(dict_0)
    class_def_1 = variables_replacer_0.visit_ClassDef(class_def_0)
    a_s_t_0 = module_0.AST(*list_0)
    module_1.extend_tree(a_s_t_0, dict_0)

def test_case_8():
    a_s_t_0 = module_0.AST()
    dict_0 = {}
    attribute_0 = module_0.Attribute(**dict_0)
    str_0 = 'parse_qsl'
    str_1 = '%Mc09V$J?*TSQ{hGj'
    str_2 = '+~NVwN%U'
    dict_1 = {str_0: str_0, str_1: str_1, str_2: str_2, str_1: str_0}
    variables_replacer_0 = module_1.VariablesReplacer(dict_1)
    attribute_1 = variables_replacer_0.visit_Attribute(attribute_0)
    str_3 = None
    str_4 = 'US{vR8s-hUo_'
    dict_2 = {str_3: a_s_t_0, str_3: str_3, str_3: a_s_t_0, str_4: a_s_t_0}
    variables_replacer_1 = module_1.VariablesReplacer(dict_2)
    attribute_2 = variables_replacer_1.visit_Attribute(attribute_1)
    iterable_0 = module_1.find_variables(a_s_t_0)
    iterable_1 = module_1.find_variables(a_s_t_0)

def test_case_9():
    list_0 = []
    a_s_t_0 = module_0.AST(*list_0)
    str_0 = None
    str_1 = 'DbK}+Phc<T4\nRrj'
    str_2 = 'k.q7`]wcS'
    dict_0 = {str_0: str_1, str_2: str_2, str_1: a_s_t_0}
    module_1.extend_tree(a_s_t_0, dict_0)

def test_case_10():
    str_0 = 'extend(vars)\nx = 1\nx = 2'
    var_0 = module_2.parse(str_0)
    str_1 = 'input'
    a_s_t_0 = module_0.AST()
    iterable_0 = module_1.find_variables(a_s_t_0)
    var_1 = module_2.parse(str_1)
    str_2 = 'vars'
    var_2 = {str_2: var_1}
    module_1.extend(var_1)
    module_1.extend_tree(var_0, var_2)
    var_3 = module_2.dump(var_1)
    var_4 = module_2.dump(var_0)

def test_case_11():
    str_0 = '*%hY0=5Yzy,Sgn'
    list_0 = [str_0, str_0]
    alias_0 = module_0.alias(*list_0)
    str_1 = 'BLM^~J3\nEx ^['
    str_2 = '9__lzbb<2'
    str_3 = '6m1`W+\\RIw5\x0b[Tb@tm{'
    dict_0 = {str_1: str_1, str_2: str_2, str_3: str_2}
    variables_replacer_0 = module_1.VariablesReplacer(dict_0)
    alias_1 = variables_replacer_0.visit_alias(alias_0)
    str_4 = None
    str_5 = '-i'
    str_6 = '1J1Pwl\x0bE\rHhFLOf{<C@&'
    str_7 = "\x0busVBlm[;\\W^'0?P{"
    dict_1 = {str_4: str_4, str_5: str_4, str_6: str_4, str_7: str_5}
    variables_replacer_1 = module_1.VariablesReplacer(dict_1)
    alias_2 = variables_replacer_1.visit_alias(alias_1)
    str_8 = 'super'
    str_9 = '\x0c@'
    dict_2 = {str_8: str_8, str_8: str_8, str_8: str_8, str_9: str_8}
    variables_replacer_2 = module_1.VariablesReplacer(dict_2)

def test_case_12():
    str_0 = 'let(a=2); let(b=3); a+b'
    var_0 = module_2.parse(str_0)
    str_1 = 'a'
    module_1.extend_tree(var_0, str_1)
    var_1 = module_2.dump(var_0)

def test_case_13():
    str_0 = '\na = 1\nb = 2\net(c)\nc = 1\n'
    var_0 = module_2.parse(str_0)
    iterable_0 = module_1.find_variables(var_0)
    str_1 = '\nQ = 1\nb = 2\n'
    var_1 = module_2.parse(str_1)
    str_2 = 'RPydEp'
    dict_0 = {str_0: str_1, str_0: str_1, str_1: str_1, str_2: str_0}
    variables_replacer_0 = module_1.VariablesReplacer(dict_0)
    iterable_1 = module_1.find_variables(var_1)
    var_2 = set(iterable_1)
    var_3 = set()
    dict_1 = {}
    snippet_0 = module_1.snippet(dict_1)
    snippet_1 = module_1.snippet(snippet_0)