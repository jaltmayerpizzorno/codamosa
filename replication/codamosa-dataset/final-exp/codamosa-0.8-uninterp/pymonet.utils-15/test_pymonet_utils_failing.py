# Automatically generated by Pynguin.
import pymonet.utils as module_0

def test_case_0():
    try:
        callable_0 = None
        bytes_0 = b'\x80-\x0e\xda\x16\xd1\xa2\xcbqrs\r'
        int_0 = 2156
        int_1 = module_0.increase(int_0)
        callable_1 = module_0.memoize(callable_0, bytes_0)
        list_0 = [callable_1, callable_0, callable_1, callable_1, callable_0]
        var_0 = module_0.pipe(callable_0, *list_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = None
        var_0 = module_0.compose(str_0)
        var_1 = module_0.fn()
    except BaseException:
        pass

def test_case_2():
    try:
        callable_0 = None
        bytes_0 = b'\xfc%=|\x99j~\x06\xe1\xf5\xe9\xe4.qh\xc8'
        callable_1 = module_0.memoize(callable_0, bytes_0)
        list_0 = [callable_1]
        var_0 = module_0.pipe(callable_1, *list_0)
    except BaseException:
        pass

def test_case_3():
    try:
        list_0 = None
        var_0 = module_0.cond(list_0)
        list_1 = [var_0, list_0, var_0]
        var_1 = module_0.compose(list_1, *list_1)
    except BaseException:
        pass

def test_case_4():
    try:
        int_0 = -1414
        callable_0 = None
        callable_1 = module_0.memoize(callable_0)
        var_0 = module_0.compose(callable_1)
        var_1 = module_0.curry(int_0, int_0)
        float_0 = 2025.7032
        float_1 = -1720.0482
        list_0 = [callable_1, float_1, callable_0, var_1]
        var_2 = module_0.compose(float_0, *list_0)
    except BaseException:
        pass