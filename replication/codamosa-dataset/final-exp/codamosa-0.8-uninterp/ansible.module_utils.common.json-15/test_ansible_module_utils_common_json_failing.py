# Automatically generated by Pynguin.
import ansible.module_utils.common.json as module_0
import datetime as module_1

def test_case_0():
    try:
        str_0 = 's.xpb>OQIx\t-G\n'
        set_0 = {str_0, str_0, str_0}
        ansible_j_s_o_n_encoder_0 = module_0.AnsibleJSONEncoder(set_0)
        dict_0 = {str_0: ansible_j_s_o_n_encoder_0, str_0: str_0, str_0: set_0}
        str_1 = 'N'
        ansible_j_s_o_n_encoder_1 = module_0.AnsibleJSONEncoder(str_1)
        list_0 = [set_0, ansible_j_s_o_n_encoder_0]
        var_0 = ansible_j_s_o_n_encoder_0.iterencode(list_0)
        var_1 = ansible_j_s_o_n_encoder_0.default(dict_0)
        float_0 = 0.529145238673939
        var_2 = ansible_j_s_o_n_encoder_0.iterencode(float_0)
        ansible_j_s_o_n_encoder_2 = module_0.AnsibleJSONEncoder(**dict_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '@k)x"\tXd2eV<X~%'
        ansible_j_s_o_n_encoder_0 = module_0.AnsibleJSONEncoder(str_0)
        dict_0 = {ansible_j_s_o_n_encoder_0: ansible_j_s_o_n_encoder_0, str_0: str_0}
        var_0 = ansible_j_s_o_n_encoder_0.encode(dict_0)
    except BaseException:
        pass

def test_case_2():
    try:
        ansible_j_s_o_n_encoder_0 = module_0.AnsibleJSONEncoder()
        var_0 = ansible_j_s_o_n_encoder_0.default(ansible_j_s_o_n_encoder_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '{Fgjpyr>Pm'
        str_1 = ']Om\nW$9Qg)Wr(h?mu\x0b'
        str_2 = 'Initiator Name'
        dict_0 = {str_0: str_0, str_0: str_0, str_1: str_1, str_2: str_1}
        ansible_j_s_o_n_encoder_0 = module_0.AnsibleJSONEncoder()
        var_0 = ansible_j_s_o_n_encoder_0.iterencode(dict_0, **dict_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = '&\n|m%jZ\x0c'
        str_1 = None
        str_2 = 'G)=REg:_:F'
        dict_0 = {str_0: str_0, str_1: str_1, str_1: str_0, str_2: str_2}
        int_0 = -2500
        dict_1 = {int_0: int_0, int_0: int_0, int_0: int_0}
        ansible_j_s_o_n_encoder_0 = module_0.AnsibleJSONEncoder(int_0, dict_1)
        var_0 = ansible_j_s_o_n_encoder_0.iterencode(dict_0)
        ansible_j_s_o_n_encoder_1 = module_0.AnsibleJSONEncoder()
        int_1 = 12
        var_1 = ansible_j_s_o_n_encoder_0.default(dict_0)
        list_0 = [int_1, int_1, int_1, int_1]
        datetime_0 = module_1.datetime(*list_0)
        ansible_j_s_o_n_encoder_2 = module_0.AnsibleJSONEncoder()
        var_2 = ansible_j_s_o_n_encoder_2.default(datetime_0)
        set_0 = None
        var_3 = ansible_j_s_o_n_encoder_1.default(set_0)
    except BaseException:
        pass