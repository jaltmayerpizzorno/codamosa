# Automatically generated by Pynguin.
import concurrent.futures._base as module_0
import tornado.concurrent as module_1
import builtins as module_2

def test_case_0():
    try:
        future_0 = module_0.Future()
        list_0 = [future_0, future_0]
        callable_0 = module_1.run_on_executor(*list_0)
    except BaseException:
        pass

def test_case_1():
    try:
        future_0 = None
        module_1.chain_future(future_0, future_0)
    except BaseException:
        pass

def test_case_2():
    try:
        callable_0 = None
        str_0 = 'df\tw\x0b.Xk93QecdhD'
        str_1 = 'tMu8N1'
        dict_0 = {str_0: callable_0, str_1: str_1, str_0: str_1}
        dummy_executor_0 = module_1.DummyExecutor()
        future_0 = dummy_executor_0.submit(callable_0, **dict_0)
        dummy_executor_1 = module_1.DummyExecutor()
        set_0 = {callable_0, dummy_executor_1, dummy_executor_0, dummy_executor_1}
        module_1.future_add_done_callback(future_0, set_0)
    except BaseException:
        pass

def test_case_3():
    try:
        callable_0 = module_1.run_on_executor()
        future_0 = module_0.Future()
        bool_0 = True
        module_1.future_add_done_callback(future_0, bool_0)
        list_0 = [callable_0]
        base_exception_0 = module_2.BaseException(*list_0)
        callable_1 = module_1.run_on_executor(*list_0)
        str_0 = ':k<'
        dict_0 = {str_0: callable_0}
        callable_2 = None
        dummy_executor_0 = module_1.DummyExecutor()
        future_1 = dummy_executor_0.submit(callable_2, **dict_0)
        var_0 = None
        module_1.future_set_result_unless_cancelled(future_1, var_0)
    except BaseException:
        pass

def test_case_4():
    try:
        future_0 = module_0.Future()
        str_0 = 'fO&>$y9'
        module_1.future_set_result_unless_cancelled(future_0, str_0)
        dummy_executor_0 = module_1.DummyExecutor()
        dummy_executor_0.shutdown()
        list_0 = None
        none_type_0 = None
        bool_0 = False
        tuple_0 = (list_0, none_type_0, bool_0)
        module_1.future_set_exc_info(future_0, tuple_0)
    except BaseException:
        pass

def test_case_5():
    try:
        callable_0 = module_1.run_on_executor()
        list_0 = [callable_0]
        base_exception_0 = module_2.BaseException(*list_0)
        callable_1 = module_1.run_on_executor(*list_0)
        str_0 = '}u'
        dict_0 = {str_0: list_0}
        callable_2 = module_1.run_on_executor(*list_0, **dict_0)
    except BaseException:
        pass

def test_case_6():
    try:
        callable_0 = module_1.run_on_executor()
        list_0 = [callable_0]
        future_0 = module_0.Future()
        int_0 = -2161
        module_1.future_set_result_unless_cancelled(future_0, int_0)
        callable_1 = module_1.run_on_executor(*list_0)
        module_1.future_add_done_callback(future_0, callable_1)
    except BaseException:
        pass