# Automatically generated by Pynguin.
import ansible.inventory.host as module_0
import ansible.inventory.group as module_1

def test_case_0():
    pass

def test_case_1():
    host_0 = module_0.Host()
    var_0 = host_0.__getstate__()

def test_case_2():
    host_0 = module_0.Host()
    str_0 = 'ZVKgPYf5Nf-U/sui4A!Z'
    str_1 = 'dR^ {1d0,#'
    dict_0 = {str_0: host_0, str_0: host_0, str_1: host_0}
    var_0 = host_0.__setstate__(dict_0)

def test_case_3():
    bool_0 = True
    host_0 = module_0.Host(bool_0)
    var_0 = host_0.__ne__(host_0)
    bytes_0 = b'\x98\x9b'
    host_1 = module_0.Host(bytes_0)
    var_1 = host_0.serialize()
    var_2 = host_1.__hash__()
    var_3 = host_1.get_name()

def test_case_4():
    float_0 = -2865.9912
    host_0 = module_0.Host()
    var_0 = host_0.__getstate__()
    var_1 = host_0.__ne__(float_0)

def test_case_5():
    host_0 = module_0.Host()
    float_0 = 966.3186
    set_0 = {float_0, host_0}
    var_0 = host_0.remove_group(set_0)
    host_1 = module_0.Host(host_0)

def test_case_6():
    bool_0 = False
    host_0 = module_0.Host(bool_0)
    bytes_0 = b'\x84\x98\xc9'
    set_0 = set()
    host_1 = module_0.Host(set_0)
    var_0 = host_1.__repr__()
    host_2 = module_0.Host(bytes_0)
    var_1 = host_2.remove_group(host_0)

def test_case_7():
    host_0 = module_0.Host()

def test_case_8():
    bool_0 = False
    host_0 = module_0.Host(bool_0)
    str_0 = '0^3'
    tuple_0 = (host_0, str_0)
    float_0 = 3188.01
    host_1 = module_0.Host(tuple_0, float_0)
    var_0 = host_1.populate_ancestors()

def test_case_9():
    host_0 = module_0.Host()
    var_0 = host_0.populate_ancestors()

def test_case_10():
    float_0 = 100.0
    host_0 = module_0.Host()
    var_0 = host_0.remove_group(float_0)

def test_case_11():
    str_0 = 'myserver.domain.tld'
    host_0 = module_0.Host(str_0)
    str_1 = 'all'
    group_0 = module_1.Group(str_1)
    var_0 = host_0.add_group(group_0)
    str_2 = 'webservers'
    group_1 = module_1.Group(str_2)
    var_1 = host_0.add_group(group_1)
    str_3 = 'dbservers'
    group_2 = module_1.Group(str_3)
    var_2 = host_0.add_group(group_2)
    var_3 = host_0.get_magic_vars()
    var_4 = print(var_3)

def test_case_12():
    host_0 = module_0.Host()
    float_0 = 966.3
    set_0 = {float_0, host_0}
    var_0 = host_0.remove_group(set_0)
    host_1 = module_0.Host(host_0)
    list_0 = [float_0]
    host_2 = module_0.Host(list_0)
    var_1 = host_1.populate_ancestors(list_0)

def test_case_13():
    host_0 = module_0.Host()
    str_0 = 'foo'
    str_1 = 'bar'
    var_0 = host_0.set_variable(str_0, str_1)
    str_2 = 'baz'
    var_1 = host_0.set_variable(str_0, str_2)
    str_3 = 'bar1'
    str_4 = 'baz1'
    str_5 = {str_3: str_4}
    var_2 = host_0.set_variable(str_0, str_5)
    str_6 = 'bar2'
    str_7 = 'baz2'
    str_8 = {str_6: str_7}
    var_3 = host_0.set_variable(str_0, str_8)

def test_case_14():
    host_0 = module_0.Host()
    str_0 = 'k'
    str_1 = 'k2'
    str_2 = 'k3'
    int_0 = 3
    int_1 = {str_1: int_0, str_2: int_0}
    var_0 = host_0.set_variable(str_0, int_1)
    int_2 = {str_1: int_0, str_2: int_0}
    var_1 = host_0.set_variable(str_0, int_2)

def test_case_15():
    host_0 = module_0.Host()
    str_0 = 'Invalid "hosts" entry for "%s" group, requires a dict, found "%s" instead.'
    var_0 = host_0.populate_ancestors(str_0)
    host_1 = module_0.Host()
    str_1 = '0242ac11-001a-e033-2398-00000000045d'
    dict_0 = {host_1: str_1}
    var_1 = host_1.set_variable(str_1, dict_0)
    var_2 = host_1.serialize()
    str_2 = '#U-E4D/ew(>'
    var_3 = host_1.set_variable(str_2, str_1)
    str_3 = 'RxXQBm'
    set_0 = set()
    var_4 = host_1.set_variable(str_1, set_0)
    var_5 = host_0.__repr__()
    var_6 = host_1.set_variable(str_0, str_3)
    host_2 = module_0.Host()
    var_7 = host_2.populate_ancestors()

def test_case_16():
    str_0 = 'myhost'
    host_0 = module_0.Host(str_0)
    str_1 = 'group01'
    group_0 = module_1.Group(str_1)
    var_0 = host_0.add_group(group_0)
    var_1 = host_0.serialize()
    var_2 = host_0.deserialize(var_1)

def test_case_17():
    str_0 = 'g1'
    group_0 = module_1.Group(str_0)
    str_1 = 'g2'
    group_1 = module_1.Group(str_1)
    str_2 = 'g3'
    group_2 = module_1.Group(str_2)
    var_0 = group_1.add_child_group(group_0)
    str_3 = '0242ac11-001a-e033-2398-0000000006e4'
    var_1 = group_2.__getstate__()
    host_0 = module_0.Host(str_3)
    var_2 = host_0.get_magic_vars()
    var_3 = host_0.add_group(group_0)
    var_4 = host_0.add_group(group_1)
    var_5 = host_0.add_group(group_2)
    var_6 = host_0.remove_group(group_0)
    var_7 = host_0.populate_ancestors()

def test_case_18():
    str_0 = 'test_host'
    host_0 = module_0.Host(str_0)
    str_1 = 'abc'
    str_2 = 'a'
    str_3 = 'b'
    str_4 = {str_2: str_3}
    var_0 = host_0.set_variable(str_1, str_4)
    var_1 = Exception()
    str_5 = 'c'
    str_6 = 'd'
    str_7 = {str_5: str_6}
    var_2 = host_0.set_variable(str_1, str_7)
    str_8 = 'e'
    str_9 = {str_2: str_8}
    var_3 = host_0.set_variable(str_1, str_9)
    var_4 = Exception()
    str_10 = 'f'
    var_5 = host_0.set_variable(str_1, str_10)
    var_6 = Exception()

def test_case_19():
    str_0 = 'g1'
    group_0 = module_1.Group(str_0)
    group_1 = module_1.Group(str_0)
    var_0 = group_0.add_child_group(group_1)
    str_1 = 'h'
    host_0 = module_0.Host(str_1)
    var_1 = host_0.add_group(group_0)
    var_2 = host_0.add_group(group_1)
    var_3 = host_0.add_group(group_1)
    var_4 = host_0.remove_group(group_1)

def test_case_20():
    str_0 = 'TestHost'
    host_0 = module_0.Host(str_0)
    str_1 = 'TestGroup'
    group_0 = module_1.Group(str_1)
    var_0 = host_0.add_group(group_0)
    var_1 = host_0.remove_group(group_0)

def test_case_21():
    str_0 = 'g1'
    group_0 = module_1.Group(str_0)
    str_1 = 'g2'
    group_1 = module_1.Group(str_1)
    group_2 = module_1.Group(str_1)
    var_0 = group_2.add_child_group(group_1)
    var_1 = group_1.add_child_group(group_0)
    str_2 = 'h'
    host_0 = module_0.Host(str_2)
    var_2 = host_0.add_group(group_0)
    var_3 = host_0.add_group(group_1)
    var_4 = host_0.add_group(group_2)
    var_5 = host_0.remove_group(group_1)

def test_case_22():
    str_0 = 'g2'
    group_0 = module_1.Group(str_0)
    str_1 = 'g3'
    group_1 = module_1.Group(str_1)
    var_0 = group_1.add_child_group(group_0)
    host_0 = module_0.Host(str_0)
    var_1 = host_0.add_group(group_0)
    var_2 = host_0.add_group(group_1)
    group_2 = module_1.Group()

def test_case_23():
    str_0 = 'all'
    group_0 = module_1.Group(str_0)
    str_1 = 'unix'
    group_1 = module_1.Group(str_1)
    str_2 = 'linux'
    group_2 = module_1.Group(str_2)
    str_3 = 'debian'
    group_3 = module_1.Group(str_3)
    var_0 = group_0.add_child_group(group_1)
    var_1 = group_0.add_child_group(group_2)
    var_2 = group_1.add_child_group(group_3)
    str_4 = 'localhost'
    host_0 = module_0.Host(str_4)
    var_3 = host_0.add_group(group_0)
    var_4 = host_0.add_group(group_1)
    var_5 = host_0.add_group(group_3)
    var_6 = host_0.get_groups()
    var_7 = host_0.remove_group(group_3)