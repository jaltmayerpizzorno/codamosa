# Automatically generated by Pynguin.
import ansible.module_utils.common.dict_transformations as module_0

def test_case_0():
    pass

def test_case_1():
    str_0 = 'k!,"rnf%pj'
    var_0 = module_0.snake_dict_to_camel_dict(str_0)

def test_case_2():
    str_0 = "'?t8"
    dict_0 = {str_0: str_0}
    str_1 = 'Nc+l0 F:Wc|'
    var_0 = module_0.snake_dict_to_camel_dict(dict_0, str_1)

def test_case_3():
    str_0 = '_'
    str_1 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    str_2 = {str_0: str_1}
    var_0 = module_0.camel_dict_to_snake_dict(str_2)
    str_3 = [str_0]
    str_4 = {str_0: str_3}
    var_1 = module_0.camel_dict_to_snake_dict(str_4)
    list_0 = [str_1, var_1]
    var_2 = module_0.snake_dict_to_camel_dict(list_0, str_2)

def test_case_4():
    float_0 = None
    bool_0 = False
    bytes_0 = b'Z\xe3'
    int_0 = 32603
    tuple_0 = (float_0, bool_0, bytes_0, int_0)
    var_0 = module_0.snake_dict_to_camel_dict(float_0, tuple_0)

def test_case_5():
    str_0 = 'H8\'4@D[XzUYsVW?0|"x '
    dict_0 = {str_0: str_0}
    int_0 = -5822
    tuple_0 = (dict_0, int_0)
    var_0 = module_0.dict_merge(str_0, tuple_0)

def test_case_6():
    str_0 = 'a'
    str_1 = 'b'
    str_2 = 'c'
    str_3 = 'd'
    str_4 = 'e'
    int_0 = 1
    int_1 = 2
    int_2 = 3
    int_3 = 4
    int_4 = 5
    int_5 = {str_0: int_0, str_1: int_1, str_2: int_2, str_3: int_3, str_4: int_4}
    str_5 = 'f'
    str_6 = 'g'
    int_6 = 6
    int_7 = 7
    int_8 = 8
    int_9 = 9
    int_10 = {str_3: int_6, str_4: int_7, str_5: int_8, str_6: int_9}
    var_0 = module_0.dict_merge(int_5, int_10)
    str_7 = 'ea'
    str_8 = 'eb'
    int_11 = {str_7: int_0, str_8: int_1}
    int_12 = {str_0: int_11, str_1: int_1, str_2: int_2, str_3: int_3, str_4: int_4}
    int_13 = 10
    int_14 = 42
    int_15 = {str_7: int_13, str_8: int_14}
    int_16 = {str_0: int_15, str_3: int_6, str_4: int_7, str_5: int_8, str_6: int_9}
    var_1 = module_0.dict_merge(int_12, int_16)

def test_case_7():
    bytes_0 = b'\x9c\x8e\x1bLT\xa71\x14*b!\xd0\xbe\x17A\xa7~'
    tuple_0 = None
    str_0 = '^\x0bu\ta'
    var_0 = module_0.snake_dict_to_camel_dict(tuple_0)
    dict_0 = {str_0: str_0, str_0: str_0, str_0: bytes_0}
    var_1 = module_0.snake_dict_to_camel_dict(dict_0)

def test_case_8():
    str_0 = '2L\\NJ5\t:'
    str_1 = [str_0]
    str_2 = {str_0: str_1}
    var_0 = module_0.camel_dict_to_snake_dict(str_2)

def test_case_9():
    str_0 = '(J;t[NA'
    str_1 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    str_2 = {str_0: str_1}
    var_0 = module_0.camel_dict_to_snake_dict(str_2, str_0)
    var_1 = module_0.camel_dict_to_snake_dict(str_2)

def test_case_10():
    str_0 = 'a'
    str_1 = 'c'
    int_0 = 3
    str_2 = '2estI3'
    dict_0 = {str_1: str_2, str_0: int_0, str_0: str_0}
    var_0 = module_0.camel_dict_to_snake_dict(dict_0)
    str_3 = {str_0: str_2, str_0: str_2}
    var_1 = {str_2: int_0, str_1: int_0, str_2: str_3}
    var_2 = module_0.recursive_diff(var_1, var_1)

def test_case_11():
    dict_0 = {}
    var_0 = module_0.camel_dict_to_snake_dict(dict_0)

def test_case_12():
    str_0 = 'SSECustomerKeyMD5'
    str_1 = 'test'
    str_2 = {str_0: str_1, str_0: str_1}
    bool_0 = True
    var_0 = module_0.camel_dict_to_snake_dict(str_2, bool_0)
    var_1 = module_0.snake_dict_to_camel_dict(var_0)

def test_case_13():
    str_0 = 'a'
    str_1 = 'b'
    str_2 = 'c'
    str_3 = 'd'
    int_0 = 5
    str_4 = 'd2'
    str_5 = '0est'
    str_6 = {str_2: str_5, str_4: str_5}
    var_0 = {str_0: int_0, str_1: int_0, str_2: int_0, str_3: str_6}
    int_1 = 0
    str_7 = '2estI3'
    str_8 = {str_4: str_5, str_4: str_7}
    var_1 = {str_1: int_0, str_2: int_1, str_3: str_8}
    var_2 = module_0.recursive_diff(var_0, var_1)

def test_case_14():
    str_0 = 'a'
    str_1 = 'b'
    str_2 = 'c'
    str_3 = 'd'
    int_0 = 5
    str_4 = 'd2'
    str_5 = '0est'
    str_6 = 'test2'
    str_7 = {str_2: str_5, str_4: str_6}
    var_0 = {str_0: int_0, str_1: int_0, str_2: int_0, str_3: str_7}
    int_1 = 0
    str_8 = 's}u\ng\n6Qs`F^y[8'
    str_9 = {str_4: str_5, str_5: str_4, str_4: str_8}
    var_1 = {str_1: int_0, str_2: int_1, str_3: str_9}
    var_2 = module_0.recursive_diff(var_0, var_1)

def test_case_15():
    str_0 = 'a'
    str_1 = 'b'
    str_2 = 'c'
    str_3 = 'd'
    int_0 = 5
    int_1 = 3
    str_4 = 'd1'
    str_5 = 'd2'
    str_6 = 'test'
    str_7 = 'test2'
    str_8 = {str_4: str_6, str_5: str_7}
    var_0 = {str_0: int_1, str_1: int_0, str_2: int_1, str_3: str_8}
    int_2 = 0
    var_1 = {str_1: int_0, str_2: int_2, str_3: str_2}
    var_2 = module_0.recursive_diff(var_0, var_1)

def test_case_16():
    str_0 = 'Tags'
    str_1 = 'DesiredCapacity'
    str_2 = 'NewInstancesProtectedFromScaleIn'
    str_3 = 'Key'
    str_4 = 'Value'
    str_5 = 'string'
    str_6 = {str_3: str_5, str_4: str_5}
    str_7 = [str_6]
    int_0 = 123
    bool_0 = True
    var_0 = {str_0: str_7, str_1: int_0, str_2: bool_0}
    str_8 = [str_0]
    var_1 = module_0.camel_dict_to_snake_dict(var_0, bool_0, str_8)

def test_case_17():
    str_0 = 'Tags'
    str_1 = 'Q/\tr$sILet5\x0c@"#O9O('
    str_2 = 'NewInstancesProtectedFromScaleIn'
    str_3 = 'Key'
    str_4 = 'Value'
    str_5 = 'string'
    str_6 = {str_3: str_5, str_4: str_5}
    int_0 = 123
    bool_0 = True
    var_0 = {str_0: str_6, str_1: int_0, str_2: bool_0}
    str_7 = [str_0]
    var_1 = module_0.camel_dict_to_snake_dict(var_0, bool_0, str_7)