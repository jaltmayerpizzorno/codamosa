# Automatically generated by Pynguin.
import pathlib as module_0
import httpie.sessions as module_1
import httpie.cli.dicts as module_2

def test_case_0():
    pass

def test_case_1():
    path_0 = module_0.Path()
    session_0 = module_1.Session(path_0)
    var_0 = path_0.__enter__()
    str_0 = 'no'
    session_1 = module_1.get_httpie_session(path_0, str_0, str_0, str_0)
    str_1 = "0'^v\\p\nz&u\x0b~d|'0-"
    session_2 = module_1.get_httpie_session(path_0, str_0, str_0, str_1)

def test_case_2():
    request_headers_dict_0 = module_2.RequestHeadersDict()
    str_0 = "ts IUqP!['mN"
    list_0 = []
    path_0 = module_0.Path(*list_0)
    str_1 = 'qKz*A /_+teLN4qgF~\\c'
    str_2 = 'r'
    session_0 = module_1.get_httpie_session(path_0, str_1, str_0, str_2)
    session_1 = module_1.Session(str_0)
    str_3 = 'warning'
    session_2 = module_1.Session(str_3)
    var_0 = session_2.update_headers(request_headers_dict_0)
    path_1 = module_0.Path()
    str_4 = '--no-unsorted'
    session_3 = module_1.get_httpie_session(path_1, str_4, str_4, str_4)

def test_case_3():
    request_headers_dict_0 = module_2.RequestHeadersDict()
    str_0 = "ts IUqP!['mN"
    path_0 = module_0.Path()
    str_1 = None
    session_0 = module_1.get_httpie_session(path_0, str_0, str_1, str_0)
    session_1 = module_1.Session(str_0)
    str_2 = 'warning'
    session_2 = module_1.Session(str_2)
    var_0 = session_2.update_headers(request_headers_dict_0)
    path_1 = module_0.Path()
    str_3 = '--no-unsorted'
    session_3 = module_1.get_httpie_session(path_1, str_3, str_3, str_3)

def test_case_4():
    str_0 = '6\n3N'
    session_0 = module_1.Session(str_0)

def test_case_5():
    str_0 = '6\n3N'
    session_0 = module_1.Session(str_0)
    var_0 = session_0.remove_cookies(str_0)

def test_case_6():
    str_0 = '/tmp/test.json'
    session_0 = module_1.Session(str_0)
    str_1 = 'key1'
    str_2 = 'key2'
    str_3 = 'user-agent'
    str_4 = 'if-match'
    str_5 = 'te'
    str_6 = {str_1: str_0, str_2: str_2, str_3: str_1, str_4: str_5, str_2: str_2}
    var_0 = session_0.update_headers(str_6)

def test_case_7():
    str_0 = '/does/not/exist'
    session_0 = module_1.Session(str_0)
    str_1 = 'accept-encoding'
    str_2 = 'Accept'
    str_3 = 'User-Agent'
    str_4 = 'Content-Length'
    str_5 = 'gzip, deflate'
    str_6 = '*/*'
    str_7 = 'HTTPie/0.9.8'
    str_8 = '9'
    str_9 = {str_1: str_5, str_2: str_6, str_3: str_7, str_4: str_8}
    request_headers_dict_0 = module_2.RequestHeadersDict(str_9)
    var_0 = session_0.update_headers(request_headers_dict_0)