# Automatically generated by Pynguin.
import ansible.playbook.attribute as module_0

def test_case_0():
    try:
        str_0 = ')cE8dm-lHi27'
        bytes_0 = b"\\\x86{{?x\x7f\xe9\x0b(\xad'\xb8V4\xde"
        list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
        bool_0 = True
        int_0 = 534
        bytes_1 = b':\xfdO\xba\xbdM49\xd7\t\xf9\x1bEs7'
        attribute_0 = module_0.Attribute(bytes_0, list_0, bool_0, int_0, bytes_1)
        var_0 = attribute_0.__eq__(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        set_0 = set()
        list_0 = [set_0, set_0]
        tuple_0 = ()
        bool_0 = False
        float_0 = -940.54507
        str_0 = 'v8'
        int_0 = -1954
        field_attribute_0 = module_0.FieldAttribute(str_0, int_0, list_0, bool_0, int_0)
        attribute_0 = module_0.Attribute(bool_0, float_0, set_0, set_0, field_attribute_0)
        var_0 = attribute_0.__lt__(tuple_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'sE#*n^0X9MY80KvR`VYN'
        str_1 = "\n        Runs the task with the loop items specified and collates the result\n        into an array named 'results' which is inserted into the final result\n        along with the item for which the loop ran.\n        "
        bool_0 = False
        attribute_0 = module_0.Attribute(str_1, bool_0)
        var_0 = attribute_0.__le__(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'cookies'
        str_1 = 'wdf^\x0cN'
        str_2 = 'Sj,h2(W`Z*P\\D$'
        str_3 = 'sE#*n^0X9MY80KvR`VYN'
        bytes_0 = b'\x92\xbb\xb6@gX4\xbf\x99n\xf5\x1dQ\x82\xe97'
        str_4 = '1\\6iLrt;i{'
        bool_0 = True
        tuple_0 = (bytes_0, str_4, bool_0)
        attribute_0 = module_0.Attribute(str_1, str_2, str_3, tuple_0, str_2)
        var_0 = attribute_0.__ge__(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'list'
        bool_0 = False
        attribute_0 = module_0.Attribute(str_0, bool_0, bool_0, bool_0, str_0, bool_0, bool_0, bool_0, bool_0, str_0, bool_0, bool_0, bool_0)
    except BaseException:
        pass

def test_case_5():
    try:
        int_0 = -111
        str_0 = '1;32'
        str_1 = '|CSH\x0bvqL@'
        int_1 = -164
        tuple_0 = (int_0, int_1)
        complex_0 = None
        set_0 = {str_1, int_1, tuple_0, int_1}
        field_attribute_0 = module_0.FieldAttribute(complex_0, set_0, tuple_0)
        float_0 = -614.2517
        field_attribute_1 = module_0.FieldAttribute(str_1, field_attribute_0, float_0)
        list_0 = [field_attribute_1, field_attribute_1, complex_0]
        str_2 = 'h-}n^jR}'
        bytes_0 = b'\xa4\xea\xea\xb1\x1b\x0eB\x0cj\xe9#P'
        str_3 = 'xJ_Dx'
        tuple_1 = (bytes_0, str_3, field_attribute_0)
        field_attribute_2 = module_0.FieldAttribute(tuple_0, list_0, str_2, list_0, set_0, tuple_1)
        attribute_0 = module_0.Attribute(str_1, field_attribute_2, int_0, float_0, list_0)
        var_0 = attribute_0.__gt__(str_0)
    except BaseException:
        pass