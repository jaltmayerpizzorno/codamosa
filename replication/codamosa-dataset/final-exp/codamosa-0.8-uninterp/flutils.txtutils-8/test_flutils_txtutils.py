# Automatically generated by Pynguin.
import flutils.txtutils as module_0

def test_case_0():
    int_0 = 2760
    ansi_text_wrapper_0 = module_0.AnsiTextWrapper(int_0, int_0)

def test_case_1():
    list_0 = []
    int_0 = module_0.len_without_ansi(list_0)

def test_case_2():
    str_0 = 't\r/s41nGY2|%\\+EtC^@'
    ansi_text_wrapper_0 = module_0.AnsiTextWrapper(str_0)

def test_case_3():
    str_0 = 'Xw|CzJf JX5JB\\H^"'
    bool_0 = True
    ansi_text_wrapper_0 = module_0.AnsiTextWrapper(bool_0)
    str_1 = ansi_text_wrapper_0.fill(str_0)

def test_case_4():
    int_0 = 2356
    str_0 = '`O'
    ansi_text_wrapper_0 = module_0.AnsiTextWrapper(int_0, str_0)
    list_0 = ansi_text_wrapper_0.wrap(str_0)

def test_case_5():
    str_0 = ''
    bool_0 = True
    str_1 = '|g; i"'
    int_0 = 1317
    ansi_text_wrapper_0 = module_0.AnsiTextWrapper(int_0, max_lines=int_0)
    int_1 = -635
    ansi_text_wrapper_1 = module_0.AnsiTextWrapper(str_0, bool_0, max_lines=int_1)
    list_0 = ansi_text_wrapper_0.wrap(str_1)
    list_1 = ansi_text_wrapper_0.wrap(str_0)

def test_case_6():
    str_0 = '\x1b[38;5;209mfoobar\x1b[0m'
    int_0 = module_0.len_without_ansi(str_0)

def test_case_7():
    str_0 = '@a'
    bool_0 = True
    str_1 = '|g; i"'
    int_0 = 583
    ansi_text_wrapper_0 = module_0.AnsiTextWrapper(int_0, str_1, str_0, bool_0, bool_0, int_0, max_lines=int_0)
    str_2 = 'edVq-+5KQ"='
    str_3 = ansi_text_wrapper_0.fill(str_2)
    int_1 = 1520
    str_4 = 'O2A\x0c_`\t{m(E]8SG'
    ansi_text_wrapper_1 = module_0.AnsiTextWrapper(str_3, bool_0, int_1, placeholder=str_4)
    str_5 = ' Dw6HL4J{&* BWcPlZ5'
    list_0 = ansi_text_wrapper_0.wrap(str_5)
    bool_1 = True
    ansi_text_wrapper_2 = module_0.AnsiTextWrapper(bool_0, bool_1)
    str_6 = '\t8e*?ERjph0yZJ\tZ+S'
    str_7 = ansi_text_wrapper_0.fill(str_6)

def test_case_8():
    bool_0 = False
    int_0 = 18
    str_0 = 'Ls/s!Kjm_L{^J'
    int_1 = 188
    int_2 = -1237
    str_1 = 'A=Y#[xZ>&!\tck0'
    int_3 = -2485
    ansi_text_wrapper_0 = module_0.AnsiTextWrapper(int_1, str_0, bool_0, int_3, max_lines=int_0)
    ansi_text_wrapper_1 = module_0.AnsiTextWrapper(int_0, max_lines=int_2)
    str_2 = ansi_text_wrapper_1.fill(str_1)
    bool_1 = None
    str_3 = '_lUXYET\\MH,T:(!'
    int_4 = 227
    ansi_text_wrapper_2 = module_0.AnsiTextWrapper(str_3, bool_1, int_4)

def test_case_9():
    bool_0 = True
    str_0 = '|g; i"'
    int_0 = 568
    int_1 = 38
    int_2 = -2898
    ansi_text_wrapper_0 = module_0.AnsiTextWrapper(int_1, str_0, str_0, int_2)
    list_0 = ansi_text_wrapper_0.wrap(str_0)
    str_1 = '7T]KaR-)N\\BU'
    ansi_text_wrapper_1 = module_0.AnsiTextWrapper(int_0, str_0, str_1, bool_0, bool_0, int_0, max_lines=int_0)
    str_2 = 'edVq-+5KQ"='
    ansi_text_wrapper_2 = module_0.AnsiTextWrapper(placeholder=str_1)
    str_3 = ansi_text_wrapper_1.fill(str_2)
    int_3 = -1260
    bool_1 = False
    ansi_text_wrapper_3 = module_0.AnsiTextWrapper(int_1, str_0, bool_0, bool_1, int_0)
    int_4 = 587
    ansi_text_wrapper_4 = module_0.AnsiTextWrapper(int_4, max_lines=int_3)
    str_4 = ansi_text_wrapper_4.fill(str_3)
    str_5 = ansi_text_wrapper_2.fill(str_0)

def test_case_10():
    str_0 = '|g; i"'
    int_0 = 38
    str_1 = 'eCVq-+5:KQ"m'
    int_1 = -1237
    bool_0 = True
    int_2 = 3836
    ansi_text_wrapper_0 = module_0.AnsiTextWrapper(int_0, str_1, bool_0, bool_0, int_2)
    str_2 = '\nKG_%DO\n*S7'
    ansi_text_wrapper_1 = module_0.AnsiTextWrapper(int_0, max_lines=int_1)
    str_3 = ansi_text_wrapper_1.fill(str_2)
    ansi_text_wrapper_2 = module_0.AnsiTextWrapper(placeholder=str_3)
    bool_1 = False
    int_3 = 481
    ansi_text_wrapper_3 = module_0.AnsiTextWrapper(str_0, bool_1, bool_1, bool_0, max_lines=int_3)
    str_4 = '((?<=[a-z0-9])[A-Z]|(?!^)[A-Z](?=[a-z]))'
    list_0 = ansi_text_wrapper_1.wrap(str_4)

def test_case_11():
    int_0 = 18
    int_1 = -1237
    str_0 = 'SKG_%DO\n*S7'
    ansi_text_wrapper_0 = module_0.AnsiTextWrapper(int_0, max_lines=int_1)
    str_1 = ansi_text_wrapper_0.fill(str_0)
    bool_0 = None
    str_2 = '_tlUXYET\\MH+,T:(!'
    int_2 = 227
    ansi_text_wrapper_1 = module_0.AnsiTextWrapper(str_2, bool_0, int_2)
    str_3 = 'The name of the cherry-picked module.'
    list_0 = ansi_text_wrapper_0.wrap(str_3)

def test_case_12():
    bool_0 = True
    str_0 = '|g; i"'
    int_0 = 568
    str_1 = 'j@Y-ofWZAX~'
    int_1 = 6
    int_2 = 1953
    ansi_text_wrapper_0 = module_0.AnsiTextWrapper(int_1, str_0, str_0, int_2)
    list_0 = ansi_text_wrapper_0.wrap(str_1)
    ansi_text_wrapper_1 = module_0.AnsiTextWrapper(int_0, str_0, str_0, bool_0, bool_0, int_0, max_lines=int_0)
    str_2 = 'edVq-+5KQ"='
    bool_1 = False
    bool_2 = False
    str_3 = "@'l(p["
    ansi_text_wrapper_2 = module_0.AnsiTextWrapper(bool_1, bool_2, max_lines=int_1, placeholder=str_3)
    str_4 = ansi_text_wrapper_1.fill(str_2)
    str_5 = ansi_text_wrapper_1.fill(str_2)
    int_3 = -1237
    bool_3 = True
    int_4 = 3836
    ansi_text_wrapper_3 = module_0.AnsiTextWrapper(int_1, str_5, bool_0, bool_3, int_4)
    str_6 = '\nKG_%DO\n*S7'
    ansi_text_wrapper_4 = module_0.AnsiTextWrapper(int_1, max_lines=int_3)
    str_7 = ansi_text_wrapper_4.fill(str_6)
    ansi_text_wrapper_5 = module_0.AnsiTextWrapper(placeholder=str_7)
    bool_4 = False
    int_5 = 481
    ansi_text_wrapper_6 = module_0.AnsiTextWrapper(str_0, bool_4, bool_4, bool_0, max_lines=int_5)
    str_8 = '((?<=[a-z0-9])[A-Z]|(?!^)[A-Z](?=[a-z]))'
    list_1 = ansi_text_wrapper_4.wrap(str_8)

def test_case_13():
    int_0 = 332
    str_0 = '\x1b['
    int_1 = 502
    str_1 = "$Xa? 'Wy8d$"
    bool_0 = True
    bool_1 = True
    ansi_text_wrapper_0 = module_0.AnsiTextWrapper(int_1, str_1, bool_0, bool_1, bool_1, bool_0, int_0)
    list_0 = ansi_text_wrapper_0.wrap(str_0)
    str_2 = 'b=D7S\\){]#6NUeO ]hGB'
    bool_2 = False
    str_3 = 'UTtHgD!"M'
    bool_3 = False
    ansi_text_wrapper_1 = module_0.AnsiTextWrapper(int_0, str_2, bool_2, bool_3, bool_2)
    list_1 = ansi_text_wrapper_1.wrap(str_3)
    ansi_text_wrapper_2 = module_0.AnsiTextWrapper(int_0, str_2, bool_2)