# Automatically generated by Pynguin.
import tornado.httpclient as module_0
import tornado.httputil as module_1
import _io as module_2
import ssl as module_3

def test_case_0():
    try:
        str_0 = 'dV|TM\x0by-T+'
        complex_0 = None
        str_1 = 'L'
        dict_0 = {str_0: str_0, str_0: complex_0, str_1: complex_0}
        h_t_t_p_client_0 = module_0.HTTPClient(**dict_0)
    except BaseException:
        pass

def test_case_1():
    try:
        h_t_t_p_client_0 = module_0.HTTPClient()
        str_0 = 'http:O/www.google.com/'
        h_t_t_p_response_0 = h_t_t_p_client_0.fetch(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = ',m-1'
        bool_0 = True
        int_0 = 2040
        bytes_0 = b'\xf5\xf6\x9c'
        h_t_t_p_headers_0 = module_1.HTTPHeaders()
        dict_0 = {str_0: bool_0}
        h_t_t_p_request_0 = module_0.HTTPRequest(str_0, str_0, bool_0, str_0, int_0, bytes_0, bool_0, str_0, h_t_t_p_headers_0, dict_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'http://www.google.com/'
        dict_0 = {}
        h_t_t_p_client_0 = module_0.HTTPClient()
        h_t_t_p_response_0 = h_t_t_p_client_0.fetch(str_0, **dict_0)
    except BaseException:
        pass

def test_case_4():
    try:
        module_0.main()
    except BaseException:
        pass

def test_case_5():
    try:
        type_0 = None
        h_t_t_p_client_0 = module_0.HTTPClient(type_0)
        module_0.main()
    except BaseException:
        pass

def test_case_6():
    try:
        h_t_t_p_client_0 = module_0.HTTPClient()
        h_t_t_p_client_1 = module_0.HTTPClient(h_t_t_p_client_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'oQs+~;sHu'
        int_0 = -1241
        str_1 = '[\x0cums67WGv<Ca}%vr7\x0bp'
        optional_0 = None
        none_type_0 = None
        bytes_i_o_0 = module_2.BytesIO()
        bool_0 = False
        int_1 = 558
        set_0 = {int_1}
        str_2 = '+;c3cf}V@"J>\r@.CyFE'
        h_t_t_p_client_error_0 = module_0.HTTPClientError(int_1, str_2)
        str_3 = h_t_t_p_client_error_0.__str__()
        h_t_t_p_request_0 = module_0.HTTPRequest(str_1, str_1, str_0, optional_0, int_0, str_0, none_type_0, str_1, int_0, bool_0, str_0, bytes_i_o_0, bool_0, set_0)
        dict_0 = {}
        int_2 = -440
        h_t_t_p_response_0 = module_0.HTTPResponse(h_t_t_p_request_0, int_2, set_0)
        h_t_t_p_client_0 = module_0.HTTPClient(**dict_0)
        h_t_t_p_response_1 = h_t_t_p_client_0.fetch(str_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = 'oQs+~;Hu'
        h_t_t_p_client_0 = module_0.HTTPClient()
        h_t_t_p_client_0.__del__()
        str_1 = '[\x0cums67WGv<Ca}%vr7\x0bp'
        bytes_i_o_0 = module_2.BytesIO()
        int_0 = 558
        str_2 = '+;c3cf}V@"J>\r@.CyFE'
        h_t_t_p_client_error_0 = module_0.HTTPClientError(int_0, str_2)
        str_3 = h_t_t_p_client_error_0.__str__()
        h_t_t_p_client_1 = module_0.HTTPClient()
        int_1 = 4067
        float_0 = 60.0
        bool_0 = False
        h_t_t_p_request_0 = module_0.HTTPRequest(str_0, float_0, float_0, str_2, int_1, str_1, str_2, bool_0, str_2)
        int_2 = 301
        h_t_t_p_response_0 = module_0.HTTPResponse(h_t_t_p_request_0, int_2, bytes_i_o_0)
        h_t_t_p_response_1 = module_0.HTTPResponse(h_t_t_p_request_0, int_2, bytes_i_o_0, str_2, h_t_t_p_client_error_0, str_1)
        h_t_t_p_response_0.rethrow()
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'oQs+~;Hu'
        h_t_t_p_client_0 = module_0.HTTPClient()
        h_t_t_p_client_0.__del__()
        str_1 = '[\x0cums67WGv<Ca}%vr7\x0bp'
        optional_0 = None
        none_type_0 = None
        optional_1 = None
        bytes_i_o_0 = module_2.BytesIO()
        bool_0 = True
        int_0 = 558
        set_0 = {int_0}
        str_2 = '+;c3cf}V@"J>\r@.CyFE'
        h_t_t_p_client_error_0 = module_0.HTTPClientError(int_0, str_2)
        str_3 = h_t_t_p_client_error_0.__str__()
        h_t_t_p_request_0 = module_0.HTTPRequest(str_1, str_1, str_0, optional_0, int_0, str_0, none_type_0, str_1, int_0, optional_1, str_0, bytes_i_o_0, bool_0, set_0)
        dict_0 = {}
        h_t_t_p_client_1 = module_0.HTTPClient()
        int_1 = 4067
        float_0 = 60.0
        bool_1 = False
        h_t_t_p_request_1 = module_0.HTTPRequest(str_0, float_0, float_0, str_2, int_1, str_1, str_2, bool_1, str_2)
        dict_1 = {}
        h_t_t_p_headers_0 = module_1.HTTPHeaders(**dict_1)
        h_t_t_p_headers_1 = h_t_t_p_headers_0.copy()
        str_4 = 'vo>zr Te)f'
        h_t_t_p_response_0 = module_0.HTTPResponse(h_t_t_p_request_1, int_0, bytes_i_o_0, bytes_i_o_0, float_0, str_4, str_3, float_0)
        h_t_t_p_response_1 = h_t_t_p_client_0.fetch(str_0, **dict_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = 'oQs+~;Hu'
        h_t_t_p_client_0 = module_0.HTTPClient()
        h_t_t_p_client_0.__del__()
        str_1 = 'S,Ab%6\n&Y9FYDnWH%b)J'
        str_2 = '[\x0cums67WGv<Ca}%vr7\x0bp'
        bytes_i_o_0 = module_2.BytesIO()
        int_0 = 558
        str_3 = '+;c3cf}V@"J>\r@.CyFE'
        h_t_t_p_client_error_0 = module_0.HTTPClientError(int_0, str_3)
        str_4 = h_t_t_p_client_error_0.__str__()
        h_t_t_p_client_1 = module_0.HTTPClient()
        h_t_t_p_client_2 = module_0.HTTPClient()
        h_t_t_p_client_2.__del__()
        int_1 = 4067
        float_0 = 60.0
        bool_0 = False
        h_t_t_p_request_0 = module_0.HTTPRequest(str_0, float_0, float_0, str_3, int_1, str_2, str_3, bool_0, str_3)
        dict_0 = {str_1: str_1}
        h_t_t_p_response_0 = module_0.HTTPResponse(h_t_t_p_request_0, int_0, bytes_i_o_0, float_0)
        int_2 = 445
        s_s_l_context_0 = module_3.SSLContext()
        h_t_t_p_response_1 = module_0.HTTPResponse(h_t_t_p_request_0, int_2, dict_0, s_s_l_context_0, str_4)
        dict_1 = {str_0: str_2}
        h_t_t_p_response_2 = h_t_t_p_client_1.fetch(h_t_t_p_request_0, **dict_1)
    except BaseException:
        pass