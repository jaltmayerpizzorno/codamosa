# Automatically generated by Pynguin.
import ansible.cli.vault as module_0

def test_case_0():
    try:
        float_0 = -1280.0483
        vault_c_l_i_0 = module_0.VaultCLI(float_0)
        var_0 = vault_c_l_i_0.run()
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '%b;oM em.\\:'
        vault_c_l_i_0 = module_0.VaultCLI(str_0)
        var_0 = vault_c_l_i_0.init_parser()
        var_1 = vault_c_l_i_0.execute_edit()
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '%b;oM em.\\:'
        vault_c_l_i_0 = module_0.VaultCLI(str_0)
        var_0 = vault_c_l_i_0.init_parser()
        set_0 = {str_0}
        var_1 = vault_c_l_i_0.post_process_args(set_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'\xd0\xb8'
        set_0 = {bytes_0}
        vault_c_l_i_0 = module_0.VaultCLI(set_0)
        var_0 = vault_c_l_i_0.execute_encrypt()
    except BaseException:
        pass

def test_case_4():
    try:
        bool_0 = False
        str_0 = 'wo$5$0'
        dict_0 = {bool_0: str_0, str_0: str_0}
        dict_1 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, str_0: dict_0}
        str_1 = 'KRz5w>@e?\rZB5#'
        vault_c_l_i_0 = module_0.VaultCLI(str_1)
        var_0 = vault_c_l_i_0.format_ciphertext_yaml(bool_0, dict_1)
    except BaseException:
        pass

def test_case_5():
    try:
        list_0 = None
        set_0 = {list_0}
        bytes_0 = b'\xa0\x04\xbc\x19\xa1>\x94\xf3t'
        str_0 = 'xRVpySy\nl:Kq`X'
        set_1 = {str_0, bytes_0}
        dict_0 = {bytes_0: bytes_0, str_0: bytes_0, str_0: set_1}
        vault_c_l_i_0 = module_0.VaultCLI(dict_0)
        var_0 = vault_c_l_i_0.format_ciphertext_yaml(set_0)
        var_1 = vault_c_l_i_0.execute_edit()
    except BaseException:
        pass

def test_case_6():
    try:
        list_0 = None
        set_0 = {list_0}
        bytes_0 = b'\xa0\x04\xbc\x19\xa1>\x94\xf3t'
        str_0 = 'xRVpySy\nl:Kq`X'
        set_1 = {str_0, bytes_0}
        dict_0 = {bytes_0: bytes_0, str_0: bytes_0, str_0: set_1}
        vault_c_l_i_0 = module_0.VaultCLI(dict_0)
        var_0 = vault_c_l_i_0.format_ciphertext_yaml(set_0)
        str_1 = 'BW-3'
        tuple_0 = (str_1,)
        vault_c_l_i_1 = module_0.VaultCLI(tuple_0)
        var_1 = vault_c_l_i_1.execute_encrypt_string()
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = '5-YCAQghH=a(4Ex0\tJo@'
        list_0 = [str_0, str_0]
        vault_c_l_i_0 = module_0.VaultCLI(list_0)
        var_0 = vault_c_l_i_0.execute_decrypt()
    except BaseException:
        pass

def test_case_8():
    try:
        float_0 = 2242.8
        vault_c_l_i_0 = module_0.VaultCLI(float_0)
        var_0 = vault_c_l_i_0.execute_create()
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = ']$;\t|-V(iGVD8)=zF'
        vault_c_l_i_0 = module_0.VaultCLI(str_0)
        var_0 = vault_c_l_i_0.execute_view()
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = 'Z0'
        vault_c_l_i_0 = module_0.VaultCLI(str_0)
        var_0 = vault_c_l_i_0.execute_rekey()
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = 'execute_encrypt'
        bool_0 = False
        float_0 = -752.482145
        int_0 = 1761
        vault_c_l_i_0 = module_0.VaultCLI(int_0)
        var_0 = vault_c_l_i_0.format_ciphertext_yaml(bool_0, float_0, str_0)
    except BaseException:
        pass