# Automatically generated by Pynguin.
import pymonet.validation as module_0

def test_case_0():
    pass

def test_case_1():
    set_0 = set()
    bytes_0 = b'\x0e`?\xa04\x80\x17\xf3_\xdf'
    tuple_0 = (set_0,)
    bool_0 = False
    validation_0 = module_0.Validation(tuple_0, bool_0)
    var_0 = validation_0.__eq__(bytes_0)
    str_0 = '\n        Transform Box into not empty Maybe.\n\n        :returns: non empty Maybe monad with previous value\n        :rtype: Maybe[A]\n        '
    set_1 = set()
    validation_1 = module_0.Validation(str_0, set_1)
    var_1 = validation_1.to_box()

def test_case_2():
    int_0 = -4348
    dict_0 = {}
    validation_0 = module_0.Validation(int_0, dict_0)
    var_0 = validation_0.to_either()

def test_case_3():
    bool_0 = False
    str_0 = 'xx%g`Tw6'
    int_0 = -632
    dict_0 = {str_0: str_0, int_0: int_0}
    list_0 = [bool_0, str_0, str_0, dict_0]
    validation_0 = module_0.Validation(list_0, dict_0)
    var_0 = validation_0.to_maybe()

def test_case_4():
    dict_0 = {}
    list_0 = [dict_0, dict_0, dict_0]
    validation_0 = module_0.Validation(list_0, dict_0)
    var_0 = validation_0.to_maybe()

def test_case_5():
    int_0 = 1
    str_0 = 'error1'
    str_1 = 'error2'
    str_2 = [str_0, str_1]
    validation_0 = module_0.Validation(int_0, str_2)
    str_3 = [str_0, str_1]
    validation_1 = module_0.Validation(int_0, str_3)
    str_4 = [str_0, str_1]
    validation_2 = module_0.Validation(int_0, str_4)
    int_1 = 2
    str_5 = [str_0, str_1]
    validation_3 = module_0.Validation(int_1, str_5)
    var_0 = validation_2 == validation_3
    str_6 = [str_0]
    validation_4 = module_0.Validation(int_0, str_6)
    str_7 = [str_0, str_1]
    validation_5 = module_0.Validation(int_0, str_7)
    var_1 = validation_4 == validation_5
    str_8 = [str_0, str_1]
    validation_6 = module_0.Validation(int_0, str_8)
    str_9 = [str_0]
    validation_7 = module_0.Validation(int_0, str_9)
    var_2 = validation_6 == validation_7
    str_10 = [str_0]
    validation_8 = module_0.Validation(int_0, str_10)
    str_11 = [str_0]
    validation_9 = module_0.Validation(int_0, str_11)