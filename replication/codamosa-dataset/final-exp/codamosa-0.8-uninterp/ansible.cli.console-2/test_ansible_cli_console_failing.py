# Automatically generated by Pynguin.
import ansible.cli.console as module_0

def test_case_0():
    try:
        str_0 = '%NGG6>'
        console_c_l_i_0 = module_0.ConsoleCLI(str_0)
        console_c_l_i_1 = module_0.ConsoleCLI(console_c_l_i_0)
        console_c_l_i_2 = module_0.ConsoleCLI(console_c_l_i_1)
        var_0 = console_c_l_i_0.get_names()
        str_1 = 'groups'
        list_0 = [console_c_l_i_2, console_c_l_i_1, console_c_l_i_2]
        set_0 = {console_c_l_i_1}
        str_2 = 'E'
        var_1 = console_c_l_i_2.do_timeout(str_2)
        var_2 = console_c_l_i_0.completedefault(str_1, console_c_l_i_0, list_0, set_0)
    except BaseException:
        pass

def test_case_1():
    try:
        float_0 = 185.0
        int_0 = 73
        console_c_l_i_0 = module_0.ConsoleCLI(int_0)
        var_0 = console_c_l_i_0.do_forks(float_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = ")v9BU|';th}U\n\x0bFt!T"
        console_c_l_i_0 = module_0.ConsoleCLI(str_0)
        var_0 = console_c_l_i_0.list_modules()
    except BaseException:
        pass

def test_case_3():
    try:
        bool_0 = False
        float_0 = -128.0
        dict_0 = {float_0: float_0, float_0: float_0, float_0: float_0, float_0: float_0}
        console_c_l_i_0 = module_0.ConsoleCLI(dict_0)
        var_0 = console_c_l_i_0.default(bool_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = "+Y|'!%y\rCZ9e<\\~]|)"
        int_0 = -514
        console_c_l_i_0 = module_0.ConsoleCLI(int_0)
        var_0 = console_c_l_i_0.do_shell(str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        bytes_0 = b'o~\xee\xcf\x0c^\x8b\x8c;\nYl\xb7_\x81+)\x1d'
        int_0 = -1402
        console_c_l_i_0 = module_0.ConsoleCLI(int_0)
        var_0 = console_c_l_i_0.do_forks(bytes_0)
    except BaseException:
        pass

def test_case_6():
    try:
        float_0 = -2431.254
        float_1 = -2572.698568
        console_c_l_i_0 = module_0.ConsoleCLI(float_1)
        var_0 = console_c_l_i_0.do_forks(float_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'UlZKH|\x0c6B4Vlr\nN\x0c\rpB'
        str_1 = 'mmos545i{A6DBp'
        console_c_l_i_0 = module_0.ConsoleCLI(str_1)
        var_0 = console_c_l_i_0.do_cd(str_0)
    except BaseException:
        pass

def test_case_8():
    try:
        float_0 = 2799.21186
        str_0 = '3lm2XJVXwWzR'
        console_c_l_i_0 = module_0.ConsoleCLI(str_0)
        var_0 = console_c_l_i_0.do_list(float_0)
    except BaseException:
        pass

def test_case_9():
    try:
        bytes_0 = b'J\xed'
        list_0 = [bytes_0]
        float_0 = -2709.94
        console_c_l_i_0 = module_0.ConsoleCLI(float_0)
        var_0 = console_c_l_i_0.do_timeout(list_0)
        list_1 = [bytes_0]
        var_1 = console_c_l_i_0.do_become(list_1)
    except BaseException:
        pass

def test_case_10():
    try:
        tuple_0 = ()
        str_0 = '5N15"['
        console_c_l_i_0 = module_0.ConsoleCLI(str_0)
        var_0 = console_c_l_i_0.do_exit(tuple_0)
        bool_0 = True
        console_c_l_i_1 = module_0.ConsoleCLI(bool_0)
        var_1 = console_c_l_i_0.init_parser()
        float_0 = -1789.7861
        var_2 = console_c_l_i_1.do_become(float_0)
    except BaseException:
        pass

def test_case_11():
    try:
        bytes_0 = b'\xd7\x86K\x15\x1c\x10\xb3L\xb2\x0f\xb0\x96\xdbD\x10\x12\xc55'
        bool_0 = True
        console_c_l_i_0 = module_0.ConsoleCLI(bool_0)
        var_0 = console_c_l_i_0.do_remote_user(bytes_0)
    except BaseException:
        pass

def test_case_12():
    try:
        float_0 = 287.63
        str_0 = 'EpuT3\x0ch'
        console_c_l_i_0 = module_0.ConsoleCLI(str_0)
        tuple_0 = None
        dict_0 = {float_0: console_c_l_i_0, tuple_0: float_0}
        var_0 = console_c_l_i_0.do_exit(dict_0)
        var_1 = console_c_l_i_0.do_become_user(float_0)
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = '}$G^M+%y.}uC\\F8XM^V'
        console_c_l_i_0 = module_0.ConsoleCLI(str_0)
        bool_0 = False
        var_0 = console_c_l_i_0.do_become_method(bool_0)
        tuple_0 = ()
        var_1 = console_c_l_i_0.do_verbosity(tuple_0)
        var_2 = console_c_l_i_0.list_modules()
    except BaseException:
        pass

def test_case_14():
    try:
        str_0 = '2;|3JZ~C+aC@6|cE2{b='
        bytes_0 = b'J\xed'
        float_0 = 387.0
        dict_0 = {str_0: float_0, bytes_0: str_0, float_0: bytes_0, bytes_0: float_0}
        tuple_0 = (dict_0,)
        int_0 = -4922
        console_c_l_i_0 = module_0.ConsoleCLI(int_0)
        var_0 = console_c_l_i_0.do_check(tuple_0)
    except BaseException:
        pass

def test_case_15():
    try:
        str_0 = ':Oro`E'
        console_c_l_i_0 = module_0.ConsoleCLI(str_0)
        str_1 = 'groups'
        var_0 = console_c_l_i_0.do_check(str_1)
        var_1 = console_c_l_i_0.emptyline()
        bytes_0 = b'\xd5\\"\x95s\x83\xb4\x9e'
        var_2 = console_c_l_i_0.do_verbosity(bytes_0)
        var_3 = console_c_l_i_0.do_cd(console_c_l_i_0)
    except BaseException:
        pass

def test_case_16():
    try:
        str_0 = '%NGG6>'
        console_c_l_i_0 = module_0.ConsoleCLI(str_0)
        dict_0 = {}
        var_0 = console_c_l_i_0.post_process_args(dict_0)
    except BaseException:
        pass

def test_case_17():
    try:
        str_0 = 'AnsibleJ2Template'
        dict_0 = {str_0: str_0}
        float_0 = 1.0
        list_0 = [float_0]
        console_c_l_i_0 = module_0.ConsoleCLI(list_0)
        var_0 = console_c_l_i_0.module_args(dict_0)
    except BaseException:
        pass

def test_case_18():
    try:
        list_0 = []
        int_0 = -510
        console_c_l_i_0 = module_0.ConsoleCLI(int_0)
        bool_0 = False
        var_0 = console_c_l_i_0.do_forks(bool_0)
        float_0 = -2709.94
        console_c_l_i_1 = module_0.ConsoleCLI(float_0)
        var_1 = console_c_l_i_1.do_timeout(list_0)
        float_1 = -1392.469944
        set_0 = {console_c_l_i_1, float_1}
        int_1 = 417
        tuple_0 = (int_1,)
        console_c_l_i_2 = module_0.ConsoleCLI(tuple_0)
        var_2 = console_c_l_i_2.do_list(set_0)
    except BaseException:
        pass

def test_case_19():
    try:
        list_0 = []
        float_0 = -2709.94
        console_c_l_i_0 = module_0.ConsoleCLI(float_0)
        var_0 = console_c_l_i_0.do_timeout(list_0)
        var_1 = console_c_l_i_0.do_become_user(list_0)
    except BaseException:
        pass

def test_case_20():
    try:
        dict_0 = {}
        int_0 = 3866
        float_0 = -937.0
        console_c_l_i_0 = module_0.ConsoleCLI(float_0)
        var_0 = console_c_l_i_0.do_exit(int_0)
        var_1 = console_c_l_i_0.do_cd(dict_0)
    except BaseException:
        pass

def test_case_21():
    try:
        str_0 = 'mmos545i{A6DBp'
        list_0 = [str_0, str_0, str_0, str_0]
        bytes_0 = b'\x8cV\xc0&\xa4\x05\xed\x95\xfb\xedb'
        tuple_0 = (bytes_0, list_0)
        console_c_l_i_0 = module_0.ConsoleCLI(tuple_0)
        var_0 = console_c_l_i_0.run()
        var_1 = console_c_l_i_0.do_exit(str_0)
        str_1 = 'y%[sk"V^gDK'
        var_2 = console_c_l_i_0.do_list(bytes_0)
        var_3 = console_c_l_i_0.helpdefault(str_1)
        var_4 = console_c_l_i_0.do_verbosity(tuple_0)
        var_5 = console_c_l_i_0.default(str_1)
        bool_0 = True
        var_6 = console_c_l_i_0.do_check(bool_0)
        str_2 = 'Wb4@.|ASI\\eCPv;4'
        str_3 = 'mm6f;Lsd 3+;d2'
        var_7 = console_c_l_i_0.complete_cd(bytes_0, str_2, str_3, str_0)
        var_8 = console_c_l_i_0.do_shell(str_1)
        dict_0 = {var_4: bool_0, var_5: console_c_l_i_0}
        var_9 = console_c_l_i_0.do_cd(dict_0)
    except BaseException:
        pass

def test_case_22():
    try:
        str_0 = 'mmos545i{A6DBp'
        list_0 = [str_0, str_0, str_0, str_0]
        bytes_0 = b'\x8cV\xc0&\xa4\x05\xed\x95\xfb\xedb'
        tuple_0 = (bytes_0, list_0)
        console_c_l_i_0 = module_0.ConsoleCLI(tuple_0)
        var_0 = console_c_l_i_0.run()
        int_0 = -1715
        console_c_l_i_1 = module_0.ConsoleCLI(int_0)
        var_1 = console_c_l_i_1.emptyline()
        str_1 = ' Perform the actual selection until some monitored file objects\n        are ready or the timeout expires. '
        var_2 = console_c_l_i_0.helpdefault(str_1)
        bool_0 = True
        var_3 = console_c_l_i_0.do_become(bool_0)
        var_4 = console_c_l_i_0.do_check(list_0)
    except BaseException:
        pass

def test_case_23():
    try:
        str_0 = 'mmos545i{A6DBp'
        list_0 = [str_0, str_0, str_0, str_0]
        bytes_0 = b'\x8cV\xc0&\xa4\x05\xed\x95\xfb\xedb'
        tuple_0 = (bytes_0, list_0)
        console_c_l_i_0 = module_0.ConsoleCLI(tuple_0)
        var_0 = console_c_l_i_0.run()
        int_0 = -1715
        set_0 = {int_0, int_0}
        var_1 = console_c_l_i_0.do_exit(str_0)
        var_2 = console_c_l_i_0.emptyline()
        str_1 = '2;|3JZ~C+aC@6|cE2{b='
        set_1 = set()
        str_2 = ' Perform the actual selection until some monitored file objects\n        are ready or the timeout expires. '
        var_3 = console_c_l_i_0.do_list(bytes_0)
        var_4 = console_c_l_i_0.helpdefault(str_2)
        var_5 = console_c_l_i_0.do_become(set_1)
        var_6 = console_c_l_i_0.do_verbosity(tuple_0)
        str_3 = 'CqkCQ'
        var_7 = console_c_l_i_0.default(str_3)
        bytes_1 = b'\x11\x1d\x02\x00\xfcn\x03\xe7'
        bool_0 = False
        var_8 = console_c_l_i_0.do_check(bool_0)
        str_4 = 'Wb4@.|ASI\\eCPv;4'
        str_5 = 'mm6f;Lsd 3+;d2'
        var_9 = console_c_l_i_0.do_verbosity(set_1)
        var_10 = console_c_l_i_0.do_remote_user(set_0)
        var_11 = console_c_l_i_0.do_cd(set_1)
        var_12 = console_c_l_i_0.complete_cd(bytes_1, str_4, str_5, str_0)
        var_13 = console_c_l_i_0.do_shell(str_1)
        dict_0 = {var_6: bool_0, var_7: console_c_l_i_0}
        var_14 = console_c_l_i_0.do_cd(dict_0)
    except BaseException:
        pass

def test_case_24():
    try:
        str_0 = 'mmos545i{A6DBp'
        list_0 = [str_0, str_0, str_0, str_0]
        bytes_0 = b'\x8cV\xc0&\xa4\x05\xed\x95\xfb\xedb'
        tuple_0 = (bytes_0, list_0)
        console_c_l_i_0 = module_0.ConsoleCLI(tuple_0)
        var_0 = console_c_l_i_0.run()
        int_0 = -1715
        set_0 = {int_0, int_0}
        var_1 = console_c_l_i_0.do_exit(str_0)
        var_2 = console_c_l_i_0.emptyline()
        str_1 = '2;|3JZ~C+aC@6|cE2{b='
        set_1 = set()
        str_2 = ' Perform the actual selection until some monitored file objects\n        are ready or the timeout expires. '
        var_3 = console_c_l_i_0.do_list(bytes_0)
        var_4 = console_c_l_i_0.helpdefault(str_2)
        var_5 = console_c_l_i_0.do_become(set_1)
        var_6 = console_c_l_i_0.do_verbosity(tuple_0)
        str_3 = 'CqkCQ'
        var_7 = console_c_l_i_0.default(str_3)
        bytes_1 = b'\x11\x1d\x02\x00\xfcn\x03\xe7'
        bool_0 = False
        var_8 = console_c_l_i_0.do_check(bool_0)
        str_4 = 'X(w/\n\x0c=\x0c;\x0c JC\r'
        str_5 = 'mm6f;Lsd 3+;d2'
        var_9 = console_c_l_i_0.do_verbosity(set_1)
        var_10 = console_c_l_i_0.do_remote_user(set_0)
        var_11 = console_c_l_i_0.do_cd(set_1)
        var_12 = console_c_l_i_0.complete_cd(bytes_1, str_4, str_5, str_0)
        var_13 = console_c_l_i_0.do_shell(str_1)
        dict_0 = {var_6: bool_0, var_7: console_c_l_i_0}
        var_14 = console_c_l_i_0.do_cd(dict_0)
    except BaseException:
        pass

def test_case_25():
    try:
        str_0 = 'svcadm'
        list_0 = [str_0, str_0, str_0, str_0, str_0, str_0, str_0, str_0]
        bytes_0 = b'\x8cV\xc0&\xa4\x05\xed\x95\xfb\xedb'
        tuple_0 = (bytes_0, list_0)
        console_c_l_i_0 = module_0.ConsoleCLI(tuple_0)
        var_0 = console_c_l_i_0.run()
        set_0 = set()
        var_1 = console_c_l_i_0.completedefault(tuple_0, str_0, tuple_0, set_0)
        var_2 = console_c_l_i_0.run()
        var_3 = console_c_l_i_0.do_exit(str_0)
        var_4 = console_c_l_i_0.emptyline()
        str_1 = '2;|3JZ~C+aC@6|cE2{b='
        set_1 = set()
        var_5 = console_c_l_i_0.do_list(bytes_0)
        var_6 = console_c_l_i_0.do_become(set_1)
        var_7 = console_c_l_i_0.do_verbosity(tuple_0)
        var_8 = console_c_l_i_0.default(str_0)
        var_9 = console_c_l_i_0.do_verbosity(set_1)
        var_10 = console_c_l_i_0.do_timeout(console_c_l_i_0)
        var_11 = console_c_l_i_0.do_shell(str_1)
        var_12 = console_c_l_i_0.do_cd(console_c_l_i_0)
    except BaseException:
        pass

def test_case_26():
    try:
        int_0 = -817
        console_c_l_i_0 = module_0.ConsoleCLI(int_0)
        var_0 = console_c_l_i_0.get_names()
        str_0 = '#92^C!maEeOU<0aFI\\1'
        str_1 = 'Yn_9GroMH<k`T'
        var_1 = console_c_l_i_0.do_verbosity(str_1)
        var_2 = console_c_l_i_0.do_shell(str_0)
        set_0 = set()
        console_c_l_i_1 = module_0.ConsoleCLI(set_0)
    except BaseException:
        pass