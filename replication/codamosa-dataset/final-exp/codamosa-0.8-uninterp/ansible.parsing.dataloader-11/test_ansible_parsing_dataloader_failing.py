# Automatically generated by Pynguin.
import ansible.parsing.dataloader as module_0

def test_case_0():
    try:
        data_loader_0 = module_0.DataLoader()
        str_0 = 'managed'
        data_loader_1 = module_0.DataLoader()
        var_0 = data_loader_1.set_basedir(str_0)
        var_1 = data_loader_1.cleanup_tmp_file(data_loader_1)
        bytes_0 = b'7a'
        data_loader_2 = module_0.DataLoader()
        var_2 = data_loader_2.is_file(bytes_0)
        data_loader_3 = module_0.DataLoader()
        var_3 = data_loader_3.cleanup_all_tmp_files()
        int_0 = 1800
        var_4 = data_loader_3.load(int_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'Testing DataLoader.load_from_file()'
        data_loader_0 = module_0.DataLoader()
        var_0 = data_loader_0.load_from_file(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        data_loader_0 = module_0.DataLoader()
        str_0 = 'H'
        var_0 = data_loader_0.get_real_file(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'x7RZqIAYl'
        data_loader_0 = module_0.DataLoader()
        var_0 = data_loader_0.list_directory(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'Reading plaintext input from stdin'
        data_loader_0 = module_0.DataLoader()
        var_0 = data_loader_0.is_executable(str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        data_loader_0 = module_0.DataLoader()
        set_0 = set()
        dict_0 = None
        str_0 = '|"mT@;m:m92W'
        var_0 = data_loader_0.path_dwim_relative_stack(set_0, dict_0, str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        data_loader_0 = module_0.DataLoader()
        str_0 = '~/.ansible.log'
        var_0 = data_loader_0.get_real_file(str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        data_loader_0 = module_0.DataLoader()
        set_0 = {data_loader_0}
        dict_0 = None
        str_0 = '39yCcpS4D}8gZC2Cp'
        var_0 = data_loader_0.path_dwim_relative_stack(set_0, dict_0, str_0)
    except BaseException:
        pass

def test_case_8():
    try:
        data_loader_0 = module_0.DataLoader()
        float_0 = None
        var_0 = data_loader_0.get_real_file(data_loader_0, float_0)
    except BaseException:
        pass

def test_case_9():
    try:
        tuple_0 = ()
        data_loader_0 = module_0.DataLoader()
        var_0 = data_loader_0.cleanup_tmp_file(tuple_0)
        data_loader_1 = module_0.DataLoader()
        var_1 = data_loader_1.cleanup_all_tmp_files()
        data_loader_2 = module_0.DataLoader()
        bytes_0 = b''
        var_2 = data_loader_1.get_real_file(bytes_0)
    except BaseException:
        pass

def test_case_10():
    try:
        data_loader_0 = module_0.DataLoader()
        data_loader_1 = module_0.DataLoader()
        str_0 = '9'
        var_0 = data_loader_0.cleanup_all_tmp_files()
        tuple_0 = ()
        var_1 = data_loader_1.cleanup_tmp_file(tuple_0)
        data_loader_2 = module_0.DataLoader()
        float_0 = 303.0
        var_2 = data_loader_1.cleanup_tmp_file(float_0)
        str_1 = 'ul\x0bQ63\\[83\r#dR'
        bool_0 = True
        var_3 = data_loader_2.find_vars_files(str_1, str_0, bool_0)
    except BaseException:
        pass

def test_case_11():
    try:
        bytes_0 = b')\xb0n\xea'
        data_loader_0 = module_0.DataLoader()
        var_0 = data_loader_0.path_dwim(bytes_0)
        str_0 = '7]w:cutG@J8\\)tv{'
        list_0 = []
        set_0 = None
        var_1 = data_loader_0.path_dwim_relative_stack(list_0, str_0, set_0)
    except BaseException:
        pass

def test_case_12():
    try:
        int_0 = 228
        data_loader_0 = module_0.DataLoader()
        str_0 = '*4Tu:@z`'
        dict_0 = {}
        complex_0 = None
        var_0 = data_loader_0.path_dwim_relative_stack(str_0, int_0, dict_0, complex_0)
    except BaseException:
        pass

def test_case_13():
    try:
        data_loader_0 = module_0.DataLoader()
        str_0 = ']6<6c5#U'
        set_0 = {str_0, str_0, str_0, str_0}
        bool_0 = False
        data_loader_1 = module_0.DataLoader()
        list_0 = [data_loader_1, bool_0]
        var_0 = data_loader_1.path_dwim_relative_stack(set_0, list_0, str_0, data_loader_0)
    except BaseException:
        pass

def test_case_14():
    try:
        bytes_0 = b''
        data_loader_0 = module_0.DataLoader()
        var_0 = data_loader_0.load_from_file(bytes_0, bytes_0)
    except BaseException:
        pass

def test_case_15():
    try:
        str_0 = ']6<6c5#U'
        data_loader_0 = module_0.DataLoader()
        data_loader_1 = module_0.DataLoader()
        set_0 = {str_0, data_loader_0, data_loader_0, str_0, str_0, str_0, str_0}
        bytes_0 = b'cHu\xa9\xaak\x11_\xe8\xf2b\xf0v'
        data_loader_2 = module_0.DataLoader()
        var_0 = data_loader_2.cleanup_all_tmp_files()
        var_1 = data_loader_0.path_dwim(bytes_0)
        str_1 = '}*=dJF|Y/2n.'
        str_2 = '/var/lib/dbus/machine-id'
        var_2 = data_loader_0.find_vars_files(str_1, str_2)
        tuple_0 = ()
        tuple_1 = (tuple_0, bytes_0)
        str_3 = '2pf=qO'
        var_3 = data_loader_2.set_vault_secrets(str_3)
        float_0 = -2132.41199
        var_4 = data_loader_2.set_basedir(float_0)
        dict_0 = {str_2: var_3, str_2: set_0, str_2: tuple_0, tuple_1: str_3}
        var_5 = data_loader_2.path_dwim_relative_stack(str_3, dict_0, str_2)
    except BaseException:
        pass

def test_case_16():
    try:
        list_0 = None
        data_loader_0 = module_0.DataLoader()
        var_0 = data_loader_0.set_basedir(list_0)
        data_loader_1 = module_0.DataLoader()
        data_loader_2 = module_0.DataLoader()
        str_0 = ')p'
        var_1 = data_loader_2.cleanup_all_tmp_files()
        var_2 = data_loader_2.path_dwim_relative(str_0, str_0, str_0)
        var_3 = data_loader_2.path_dwim_relative(str_0, str_0, str_0, str_0)
        float_0 = 1410.186265
        var_4 = data_loader_1.set_basedir(float_0)
        bytes_0 = b'\xca\xee\x96\x0fw:A-'
        set_0 = {str_0, bytes_0, data_loader_2}
        var_5 = data_loader_1.cleanup_tmp_file(bytes_0)
        var_6 = data_loader_2.load_from_file(bytes_0, set_0)
    except BaseException:
        pass

def test_case_17():
    try:
        data_loader_0 = module_0.DataLoader()
        str_0 = '.'
        str_1 = 'tPlates'
        str_2 = '/tmp/foo.tt'
        var_0 = data_loader_0.path_dwim_relative(str_0, str_1, str_2)
        var_1 = data_loader_0.path_dwim_relative(str_0, str_1, str_0, str_1)
        bytes_0 = b'\x1c0\xf0\x9d\xf4@\xc2'
        set_0 = {str_0, bytes_0, data_loader_0}
        var_2 = data_loader_0.load_from_file(bytes_0, set_0)
    except BaseException:
        pass

def test_case_18():
    try:
        data_loader_0 = module_0.DataLoader()
        set_0 = {data_loader_0, data_loader_0}
        var_0 = data_loader_0.cleanup_tmp_file(set_0)
        data_loader_1 = module_0.DataLoader()
        str_0 = '~pmn'
        var_1 = data_loader_1.cleanup_all_tmp_files()
        var_2 = data_loader_1.path_dwim_relative(str_0, str_0, str_0)
        var_3 = data_loader_1.get_basedir()
        list_0 = [set_0, var_3, var_3, data_loader_0]
        var_4 = data_loader_0.is_directory(list_0)
        var_5 = data_loader_1.path_dwim_relative(str_0, str_0, str_0, str_0)
        float_0 = 1410.186265
        var_6 = data_loader_0.set_basedir(float_0)
        bytes_0 = b''
        var_7 = data_loader_1.get_real_file(bytes_0, data_loader_1)
    except BaseException:
        pass

def test_case_19():
    try:
        data_loader_0 = module_0.DataLoader()
        data_loader_1 = module_0.DataLoader()
        data_loader_2 = module_0.DataLoader()
        str_0 = ')p'
        var_0 = data_loader_2.path_dwim_relative(str_0, str_0, str_0)
        bytes_0 = b''
        bytes_1 = b'\xc1\x12\xf2Q\r\xb8\xba\xed\n\x84\x96K\xe2\xde\xf4\xa9\x04!\xad\xbe'
        var_1 = data_loader_1.cleanup_tmp_file(bytes_1)
        str_1 = 'output_encoding'
        tuple_0 = (str_1,)
        var_2 = data_loader_2.path_dwim_relative_stack(tuple_0, data_loader_2, bytes_0)
        var_3 = data_loader_0.find_vars_files(str_1, str_1, var_0)
        var_4 = data_loader_1.is_file(bytes_1)
        data_loader_3 = module_0.DataLoader()
        var_5 = data_loader_2.cleanup_all_tmp_files()
        str_2 = 'cYt@]p9[\tPU<\r'
        var_6 = data_loader_0.get_real_file(str_2, data_loader_3)
    except BaseException:
        pass

def test_case_20():
    try:
        data_loader_0 = module_0.DataLoader()
        data_loader_1 = module_0.DataLoader()
        str_0 = ')p'
        var_0 = data_loader_1.cleanup_all_tmp_files()
        var_1 = data_loader_1.path_dwim_relative(str_0, str_0, str_0)
        bytes_0 = b''
        var_2 = data_loader_1.cleanup_tmp_file(bytes_0)
        str_1 = '0z}JoK "NOH8hsX\nD0h'
        str_2 = '?._g<le'
        tuple_0 = (str_2,)
        var_3 = data_loader_1.path_dwim_relative_stack(tuple_0, data_loader_1, bytes_0)
        str_3 = "Bxe;DQ?5l.'FtDZ'Z"
        var_4 = data_loader_0.find_vars_files(str_1, str_3, var_1)
        bool_0 = False
        str_4 = '~^N)Hw;/JDc#!v${'
        var_5 = data_loader_1.path_dwim_relative_stack(data_loader_0, bool_0, str_4)
    except BaseException:
        pass