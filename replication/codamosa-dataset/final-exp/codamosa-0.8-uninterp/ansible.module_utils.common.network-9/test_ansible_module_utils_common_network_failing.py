# Automatically generated by Pynguin.
import ansible.module_utils.common.network as module_0

def test_case_0():
    try:
        int_0 = None
        var_0 = module_0.to_bits(int_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '7[&.1X.1.1'
        var_0 = module_0.to_subnet(str_0, str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b'\xcc\x05\xa1w2V\x80\x14\x88_\x9a\xabM\xb5\xbd\x8aa\x00\xceQ'
        var_0 = module_0.to_netmask(bytes_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '255.0.0.0'
        var_0 = module_0.to_subnet(str_0, str_0)
        set_0 = {str_0}
        var_1 = module_0.to_masklen(set_0)
    except BaseException:
        pass

def test_case_4():
    try:
        int_0 = None
        var_0 = module_0.to_ipv6_subnet(int_0)
    except BaseException:
        pass

def test_case_5():
    try:
        int_0 = 956
        var_0 = module_0.is_mac(int_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = '\n        Publish a collection into Ansible Galaxy. Requires the path to the collection tarball to publish.\n        '
        set_0 = {str_0}
        var_0 = module_0.to_netmask(set_0)
    except BaseException:
        pass

def test_case_7():
    try:
        int_0 = -1247
        var_0 = module_0.is_masklen(int_0)
        str_0 = '172.16.1.1'
        var_1 = module_0.to_subnet(str_0, str_0)
    except BaseException:
        pass

def test_case_8():
    try:
        float_0 = -1615.82
        bytes_0 = b'\x95\xc9\t\xd04\x8b\x0cj\xd7\x11\x99(g\x83\xe3H=\xc5'
        set_0 = {float_0, float_0}
        str_0 = 'OOQo:$=gx0Fd8'
        var_0 = module_0.to_subnet(bytes_0, set_0, str_0)
    except BaseException:
        pass