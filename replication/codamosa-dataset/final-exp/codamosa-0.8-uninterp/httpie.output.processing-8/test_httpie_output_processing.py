# Automatically generated by Pynguin.
import httpie.output.processing as module_0

def test_case_0():
    pass

def test_case_1():
    str_0 = 'JD$cHo/{PWd%Pr3`'
    conversion_0 = module_0.Conversion()
    optional_0 = conversion_0.get_converter(str_0)

def test_case_2():
    str_0 = []
    formatting_0 = module_0.Formatting(str_0)
    str_1 = formatting_0.format_headers(str_0)

def test_case_3():
    list_0 = []
    formatting_0 = module_0.Formatting(list_0)
    str_0 = '2fDTw)$b"*/_u1'
    str_1 = formatting_0.format_body(str_0, str_0)

def test_case_4():
    str_0 = ';.[\x0c+&amA+FY9\x0c'
    bytes_0 = None
    var_0 = module_0.is_valid_mime(bytes_0)
    list_0 = []
    formatting_0 = module_0.Formatting(list_0)
    formatting_1 = module_0.Formatting(list_0, formatting_0)
    str_1 = formatting_1.format_body(str_0, str_0)
    list_1 = []
    float_0 = 0.1
    dict_0 = {str_0: float_0, str_0: list_1, str_0: list_1}
    formatting_2 = module_0.Formatting(list_1, float_0, **dict_0)
    str_2 = formatting_2.format_headers(str_0)
    formatting_3 = module_0.Formatting(list_1)

def test_case_5():
    str_0 = ';.[\x0c+&amA+FY9\x0c'
    list_0 = []
    formatting_0 = module_0.Formatting(list_0)
    str_1 = '2fDTw)$b"*/_u1'
    str_2 = formatting_0.format_body(str_0, str_1)
    str_3 = formatting_0.format_body(str_0, str_0)