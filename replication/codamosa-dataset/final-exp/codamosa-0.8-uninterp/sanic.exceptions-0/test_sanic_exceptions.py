# Automatically generated by Pynguin.
import sanic.exceptions as module_0

def test_case_0():
    pass

def test_case_1():
    list_0 = None
    int_0 = -1228
    unauthorized_0 = module_0.Unauthorized(int_0)
    invalid_signal_0 = module_0.InvalidSignal(unauthorized_0)
    forbidden_0 = module_0.Forbidden(list_0, invalid_signal_0)

def test_case_2():
    str_0 = '0diK:,/WUM'
    bool_0 = True
    py_file_error_0 = module_0.PyFileError(bool_0)
    bytes_0 = b'\xbe*b\xc3\xc2!\xc4\xcd\x02I\xba'
    sanic_exception_0 = module_0.SanicException(bytes_0)
    payload_too_large_0 = module_0.PayloadTooLarge(py_file_error_0, sanic_exception_0)
    load_file_exception_0 = module_0.LoadFileException(str_0, payload_too_large_0)

def test_case_3():
    int_0 = -672
    payload_too_large_0 = module_0.PayloadTooLarge(int_0)
    py_file_error_0 = module_0.PyFileError(payload_too_large_0)
    tuple_0 = ()
    service_unavailable_0 = module_0.ServiceUnavailable(py_file_error_0)
    invalid_signal_0 = module_0.InvalidSignal(tuple_0, service_unavailable_0)
    bytes_0 = b'\x19N\xdc\xe1\x08\xea\xf9\xb2'
    dict_0 = {}
    unauthorized_0 = module_0.Unauthorized(py_file_error_0, invalid_signal_0, bytes_0, **dict_0)
    bool_0 = True
    u_r_l_build_error_0 = module_0.URLBuildError(bool_0)
    str_0 = 'q'
    load_file_exception_0 = module_0.LoadFileException(str_0)
    py_file_error_1 = module_0.PyFileError(payload_too_large_0)
    sanic_exception_0 = module_0.SanicException(py_file_error_1)
    str_1 = 'dn,Oaq|WKI+AM\\ 2cBWR'
    dict_1 = {}
    unauthorized_1 = module_0.Unauthorized(sanic_exception_0, str_1, **dict_1)
    set_0 = None
    service_unavailable_1 = module_0.ServiceUnavailable(unauthorized_1, dict_1, set_0)

def test_case_4():
    str_0 = '%@8i0_@]6<[enQ=zO'
    invalid_usage_0 = module_0.InvalidUsage(str_0)
    forbidden_0 = module_0.Forbidden(str_0)
    set_0 = set()
    not_found_0 = module_0.NotFound(forbidden_0, set_0)
    list_0 = [not_found_0, set_0, invalid_usage_0]
    service_unavailable_0 = module_0.ServiceUnavailable(not_found_0, invalid_usage_0, list_0)
    server_error_0 = module_0.ServerError(service_unavailable_0, set_0)
    header_expectation_failed_0 = module_0.HeaderExpectationFailed(invalid_usage_0)