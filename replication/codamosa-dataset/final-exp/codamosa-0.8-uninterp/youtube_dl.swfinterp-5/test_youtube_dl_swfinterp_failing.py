# Automatically generated by Pynguin.
import youtube_dl.swfinterp as module_0

def test_case_0():
    try:
        bytes_0 = b'\xb7|_\x8f\xac`\xc7\xfe\xca\xde|x\xdeSj|<'
        s_w_f_interpreter_0 = module_0.SWFInterpreter(bytes_0)
    except BaseException:
        pass

def test_case_1():
    try:
        undefined_0 = module_0._Undefined()
        float_0 = -1511.0
        s_w_f_interpreter_0 = module_0.SWFInterpreter(float_0)
    except BaseException:
        pass

def test_case_2():
    try:
        tuple_0 = ()
        a_v_m_class__object_0 = module_0._AVMClass_Object(tuple_0)
        scope_dict_0 = module_0._ScopeDict(a_v_m_class__object_0)
        a_v_m_class__object_1 = module_0._AVMClass_Object(scope_dict_0)
        var_0 = a_v_m_class__object_1.__repr__()
    except BaseException:
        pass

def test_case_3():
    try:
        bool_0 = False
        scope_dict_0 = module_0._ScopeDict(bool_0)
        var_0 = scope_dict_0.__repr__()
    except BaseException:
        pass

def test_case_4():
    try:
        dict_0 = {}
        a_v_m_class__object_0 = module_0._AVMClass_Object(dict_0)
        scope_dict_0 = module_0._ScopeDict(a_v_m_class__object_0)
        a_v_m_class_0 = module_0._AVMClass(a_v_m_class__object_0, scope_dict_0)
        var_0 = a_v_m_class_0.__repr__()
    except BaseException:
        pass

def test_case_5():
    try:
        bytes_0 = b'in\xfev\xbf\x9c\xbbQ\xa4\x18\xcb8\xc6\xc5o'
        multiname_0 = module_0._Multiname(bytes_0)
        var_0 = multiname_0.__repr__()
    except BaseException:
        pass

def test_case_6():
    try:
        undefined_0 = module_0._Undefined()
        var_0 = undefined_0.__bool__()
        dict_0 = {}
        undefined_1 = module_0._Undefined(**dict_0)
        var_1 = undefined_1.__hash__()
        bytes_0 = b'CWS\x12\x07\x00\x00\x00'
        s_w_f_interpreter_0 = module_0.SWFInterpreter(bytes_0)
    except BaseException:
        pass

def test_case_7():
    try:
        dict_0 = {}
        undefined_0 = module_0._Undefined(**dict_0)
        var_0 = undefined_0.__hash__()
        bytes_0 = b'CWS\x12\x07\x00\x00\x00'
        s_w_f_interpreter_0 = module_0.SWFInterpreter(bytes_0)
    except BaseException:
        pass

def test_case_8():
    try:
        dict_0 = {}
        undefined_0 = module_0._Undefined(**dict_0)
        var_0 = undefined_0.__hash__()
        bytes_0 = b'CWS\x12\x07\x00\x00\x00'
        var_1 = undefined_0.__str__()
        s_w_f_interpreter_0 = module_0.SWFInterpreter(bytes_0)
    except BaseException:
        pass

def test_case_9():
    try:
        list_0 = []
        tuple_0 = ()
        bytes_0 = b'Q\xf3Q\t\xc7}b\xa36=\xcc\xa6]/\xec'
        undefined_0 = module_0._Undefined()
        complex_0 = None
        set_0 = {undefined_0, complex_0, tuple_0}
        dict_0 = {}
        a_v_m_class_0 = module_0._AVMClass(list_0, set_0, dict_0)
        var_0 = a_v_m_class_0.register_methods(bytes_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = None
        int_0 = 1425385521
        list_0 = [str_0, str_0, str_0, int_0]
        tuple_0 = ()
        list_1 = [list_0, tuple_0]
        a_v_m_class_0 = module_0._AVMClass(list_0, list_1)
        scope_dict_0 = module_0._ScopeDict(a_v_m_class_0)
        var_0 = scope_dict_0.__repr__()
        float_0 = -595.2
        list_2 = []
        dict_0 = {}
        undefined_0 = module_0._Undefined(*list_2, **dict_0)
        var_1 = undefined_0.__str__()
        scope_dict_1 = module_0._ScopeDict(float_0)
        a_v_m_class__object_0 = module_0._AVMClass_Object(undefined_0)
        var_2 = scope_dict_1.__repr__()
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = '\x0bKhO'
        undefined_0 = module_0._Undefined()
        var_0 = undefined_0.__str__()
        var_1 = undefined_0.__bool__()
        a_v_m_class__object_0 = module_0._AVMClass_Object(str_0)
        int_0 = 1264608000
        int_1 = 1370
        dict_0 = {var_1: int_1, str_0: str_0}
        list_0 = [undefined_0, var_1]
        scope_dict_0 = module_0._ScopeDict(list_0)
        multiname_0 = module_0._Multiname(scope_dict_0)
        list_1 = [list_0, var_1, multiname_0]
        int_2 = -360
        a_v_m_class_0 = module_0._AVMClass(list_1, int_2)
        a_v_m_class_1 = module_0._AVMClass(multiname_0, a_v_m_class_0)
        var_2 = a_v_m_class_1.register_methods(dict_0)
        a_v_m_class__object_1 = module_0._AVMClass_Object(int_0)
        str_1 = ')~JA\x0cV<&<cGvXe'
        bytes_0 = b'\xb0\xe0\xfd\x16:!\xe1\x88\x19\xfa_6\xfe\x02\xc0\xdc\x95\xdc\xef\xdf'
        bytes_1 = b'\x05d\xb1'
        tuple_0 = (undefined_0, bytes_0, bytes_1)
        str_2 = 'yui,'
        str_3 = 'Z+'
        bool_0 = True
        dict_1 = {str_1: tuple_0, str_2: str_2, str_3: bool_0}
        s_w_f_interpreter_0 = module_0.SWFInterpreter(dict_1)
    except BaseException:
        pass

def test_case_12():
    try:
        bytes_0 = b'CWS\x12\x07\x00\x00\x00'
        s_w_f_interpreter_0 = module_0.SWFInterpreter(bytes_0)
    except BaseException:
        pass