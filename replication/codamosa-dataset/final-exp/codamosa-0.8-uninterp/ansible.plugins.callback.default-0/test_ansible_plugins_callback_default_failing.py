# Automatically generated by Pynguin.
import ansible.plugins.callback.default as module_0
import ansible.playbook.task_include as module_1

def test_case_0():
    try:
        float_0 = -2191.0
        float_1 = 0.1
        dict_0 = {float_0: float_0, float_1: float_1}
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.set_options(float_0, dict_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'nameserver'
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_on_failed(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        callback_module_0 = module_0.CallbackModule()
        bytes_0 = b'F\xf6\xc6EZ\x9a\xa0\xa2\xd6\x16[\xbb\xf9~'
        var_0 = callback_module_0.v2_runner_on_skipped(bytes_0)
    except BaseException:
        pass

def test_case_3():
    try:
        callback_module_0 = module_0.CallbackModule()
        callback_module_1 = module_0.CallbackModule()
        var_0 = callback_module_1.v2_runner_on_unreachable(callback_module_0)
    except BaseException:
        pass

def test_case_4():
    try:
        callback_module_0 = module_0.CallbackModule()
        set_0 = {callback_module_0, callback_module_0, callback_module_0}
        var_0 = callback_module_0.v2_playbook_on_no_hosts_remaining()
        str_0 = '&AZJ^Aj=kh))J'
        var_1 = callback_module_0.v2_playbook_on_notify(set_0, str_0)
        list_0 = [str_0, set_0, callback_module_0]
        var_2 = callback_module_0.v2_runner_item_on_ok(list_0)
    except BaseException:
        pass

def test_case_5():
    try:
        bool_0 = False
        float_0 = -291.007516
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_task_start(bool_0, float_0)
    except BaseException:
        pass

def test_case_6():
    try:
        callback_module_0 = module_0.CallbackModule()
        set_0 = {callback_module_0, callback_module_0, callback_module_0}
        var_0 = callback_module_0.v2_playbook_on_cleanup_task_start(set_0)
    except BaseException:
        pass

def test_case_7():
    try:
        tuple_0 = None
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_handler_task_start(tuple_0)
    except BaseException:
        pass

def test_case_8():
    try:
        int_0 = 1953
        bytes_0 = b'-\xb8\xc7\x98\xf2yi\x19\x8d\xc0\x87\xc1so\xee\xac'
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_on_start(int_0, bytes_0)
    except BaseException:
        pass

def test_case_9():
    try:
        bytes_0 = b'\x7f9\x15\xf2\xa6]WS\xacO\xfb\x9a\xb28)\xc5'
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_on_file_diff(bytes_0)
    except BaseException:
        pass

def test_case_10():
    try:
        callback_module_0 = module_0.CallbackModule()
        str_0 = 'Vnz^IeL2sAP*^^aw'
        var_0 = callback_module_0.v2_runner_item_on_ok(str_0)
    except BaseException:
        pass

def test_case_11():
    try:
        int_0 = -301
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_item_on_failed(int_0)
    except BaseException:
        pass

def test_case_12():
    try:
        callback_module_0 = module_0.CallbackModule()
        set_0 = {callback_module_0, callback_module_0, callback_module_0}
        str_0 = '&AZJ^Aj=kh))J'
        var_0 = callback_module_0.v2_playbook_on_notify(set_0, str_0)
        var_1 = callback_module_0.v2_runner_item_on_skipped(set_0)
    except BaseException:
        pass

def test_case_13():
    try:
        float_0 = 2847.435
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_include(float_0)
    except BaseException:
        pass

def test_case_14():
    try:
        bytes_0 = None
        callback_module_0 = module_0.CallbackModule()
        set_0 = {callback_module_0, bytes_0, callback_module_0}
        str_0 = ')'
        tuple_0 = (set_0, str_0)
        var_0 = callback_module_0.v2_playbook_on_stats(tuple_0)
    except BaseException:
        pass

def test_case_15():
    try:
        float_0 = -156.76081
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_retry(float_0)
    except BaseException:
        pass

def test_case_16():
    try:
        bool_0 = False
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_on_async_poll(bool_0)
    except BaseException:
        pass

def test_case_17():
    try:
        callback_module_0 = module_0.CallbackModule()
        set_0 = {callback_module_0, callback_module_0, callback_module_0}
        str_0 = '&AZJ^Aj=kh))J'
        var_0 = callback_module_0.v2_playbook_on_notify(set_0, str_0)
        str_1 = ''
        var_1 = callback_module_0.v2_runner_on_async_ok(str_1)
    except BaseException:
        pass

def test_case_18():
    try:
        set_0 = None
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_on_async_failed(set_0)
    except BaseException:
        pass

def test_case_19():
    try:
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_start(callback_module_0)
    except BaseException:
        pass

def test_case_20():
    try:
        callback_module_0 = module_0.CallbackModule()
        set_0 = {callback_module_0, callback_module_0, callback_module_0}
        str_0 = '&AZJ^Aj=kh))J'
        var_0 = callback_module_0.v2_playbook_on_notify(set_0, str_0)
        callback_module_1 = module_0.CallbackModule()
        float_0 = -2871.7
        var_1 = callback_module_1.v2_runner_on_ok(float_0)
    except BaseException:
        pass

def test_case_21():
    try:
        callback_module_0 = module_0.CallbackModule()
        set_0 = {callback_module_0, callback_module_0, callback_module_0}
        str_0 = '+a#p0rF-a0K=O'
        var_0 = callback_module_0.v2_playbook_on_notify(str_0, str_0)
        dict_0 = {callback_module_0: set_0, callback_module_0: var_0, callback_module_0: callback_module_0, var_0: var_0}
        task_include_0 = module_1.TaskInclude(dict_0)
        var_1 = callback_module_0.v2_playbook_on_handler_task_start(task_include_0)
    except BaseException:
        pass