# Automatically generated by Pynguin.
import ansible.plugins.action.wait_for_connection as module_0

def test_case_0():
    try:
        timed_out_exception_0 = module_0.TimedOutException()
        bytes_0 = b"\x16=U&\xb8\xbe\xdd\x1f3\xd0\xcft\xe4\x84'"
        set_0 = None
        int_0 = 3600
        str_0 = None
        str_1 = '^Ri,Y'
        str_2 = '/sys/devices/virtual/dmi/id/board_asset_tag'
        dict_0 = {str_0: int_0, str_1: bytes_0, str_2: set_0}
        str_3 = 'gE?DB\x0b!M%\nKQo~'
        tuple_0 = ()
        bool_0 = False
        bytes_1 = b'\x80a\x08b\xd2,\xedc\xdd\xcd;\x0f\xd0 ;\xaa\xad\x93\xd0'
        set_1 = {bool_0, bytes_1}
        str_4 = 'F/ebg'
        int_1 = -386
        timed_out_exception_1 = module_0.TimedOutException()
        dict_1 = {str_4: set_1, str_4: bool_0, str_4: bool_0, str_4: dict_0}
        action_module_0 = module_0.ActionModule(bool_0, bytes_1, set_1, tuple_0, int_1, dict_1)
        var_0 = action_module_0.do_until_success_or_timeout(action_module_0, int_0, dict_0, str_3, tuple_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = b'\x00\r\xc05\x8a\xedgj\x8a\xca\x1b\xbf\xee'
        timed_out_exception_0 = None
        str_0 = ']'
        bytes_1 = b'\xb9k\xa7\xdd\xd6\xa9\xbeY\x95\xa9\xe2'
        set_0 = {str_0, bytes_0, str_0, bytes_1}
        bytes_2 = b'\x80\xe3\xfb\x08WB'
        timed_out_exception_1 = module_0.TimedOutException()
        bool_0 = False
        list_0 = [bool_0, bool_0]
        dict_0 = {}
        float_0 = -972.07
        action_module_0 = module_0.ActionModule(bytes_2, timed_out_exception_1, bool_0, list_0, dict_0, float_0)
        var_0 = action_module_0.do_until_success_or_timeout(bytes_0, timed_out_exception_0, str_0, set_0)
    except BaseException:
        pass

def test_case_2():
    try:
        dict_0 = {}
        timed_out_exception_0 = module_0.TimedOutException()
        list_0 = [timed_out_exception_0]
        set_0 = set()
        list_1 = []
        bool_0 = True
        action_module_0 = module_0.ActionModule(timed_out_exception_0, list_0, timed_out_exception_0, set_0, list_1, bool_0)
        var_0 = action_module_0.run(dict_0)
    except BaseException:
        pass

def test_case_3():
    try:
        timed_out_exception_0 = module_0.TimedOutException()
        int_0 = 1142
        bytes_0 = b"\x16=U&\xb8\xbe\xdd\x1f3\xd0\xcft\xe4\x84'"
        set_0 = None
        action_module_0 = module_0.ActionModule(timed_out_exception_0, int_0, timed_out_exception_0, bytes_0, set_0, set_0)
        int_1 = 3600
        str_0 = None
        str_1 = '^Ri,Y'
        str_2 = '/sys/devices/virtual/dmi/id/board_asset_tag'
        dict_0 = {str_0: int_1, str_1: bytes_0, str_2: set_0}
        bool_0 = False
        bytes_1 = b'\x80a\x08b\xd2,\xedc\xdd\xcd;\x0f\xd0 ;\xaa\xad\x93\xd0'
        set_1 = {bool_0, bytes_1}
        list_0 = [bool_0, set_1, set_1, set_1]
        list_1 = [bool_0, list_0, set_1, bool_0]
        timed_out_exception_1 = module_0.TimedOutException(*list_1)
        str_3 = '_debug'
        tuple_0 = (timed_out_exception_1, set_1, str_3)
        int_2 = -3392
        str_4 = '!Wubmy'
        str_5 = ''
        dict_1 = {str_4: timed_out_exception_1, str_3: bool_0, str_5: str_3}
        dict_2 = {str_3: set_1, str_3: bool_0, str_3: bool_0, str_3: dict_1}
        action_module_1 = module_0.ActionModule(bool_0, bytes_1, set_1, tuple_0, int_2, dict_2)
        var_0 = action_module_1.do_until_success_or_timeout(action_module_0, int_1, dict_0, str_0, tuple_0)
    except BaseException:
        pass

def test_case_4():
    try:
        timed_out_exception_0 = module_0.TimedOutException()
        int_0 = 1142
        bytes_0 = b"\x16=U&\xb8\xbe\xdd\x1f3\xd0\xcft\xe4\x84'"
        set_0 = None
        action_module_0 = module_0.ActionModule(timed_out_exception_0, int_0, timed_out_exception_0, bytes_0, set_0, set_0)
        int_1 = 3600
        bool_0 = False
        bytes_1 = b'\x80a\x08b\xd2,\xedc\xdd\xcd;\x0f\xd0 ;\xaa\xad\x93\xd0'
        set_1 = {bool_0, bytes_1}
        list_0 = [bool_0, set_1, set_1, set_1]
        list_1 = [bool_0, list_0, set_1, bool_0]
        timed_out_exception_1 = module_0.TimedOutException(*list_1)
        str_0 = '_debug'
        tuple_0 = (timed_out_exception_1, set_1, str_0)
        int_2 = -3392
        str_1 = ''
        dict_0 = {str_0: timed_out_exception_1, str_0: bool_0, str_1: str_0}
        dict_1 = {str_0: set_1, str_0: bool_0, str_0: bool_0, str_0: dict_0}
        action_module_1 = module_0.ActionModule(bool_0, bytes_1, set_1, tuple_0, int_2, dict_1)
        bool_1 = False
        str_2 = 'A6dB'
        float_0 = 415.4826
        action_module_2 = module_0.ActionModule(float_0, timed_out_exception_1, int_1, bool_0, set_1, bytes_1)
        var_0 = action_module_2.do_until_success_or_timeout(dict_0, bool_1, set_1, str_2, int_2)
    except BaseException:
        pass

def test_case_5():
    try:
        timed_out_exception_0 = module_0.TimedOutException()
        int_0 = 1142
        bytes_0 = b"\x16=U&\xb8\xbe\xdd\x1f3\xd0\xcft\xe4\x84'"
        set_0 = None
        action_module_0 = module_0.ActionModule(timed_out_exception_0, int_0, timed_out_exception_0, bytes_0, set_0, set_0)
        int_1 = 3600
        list_0 = []
        float_0 = -904.55
        str_0 = 'm9pZ_J]=e6E|'
        list_1 = None
        str_1 = 'suW'
        dict_0 = {str_0: set_0, str_0: bytes_0, str_0: list_1, str_1: int_1}
        action_module_1 = None
        tuple_0 = (dict_0, action_module_1, set_0)
        bool_0 = None
        action_module_2 = module_0.ActionModule(list_0, set_0, float_0, str_0, tuple_0, bool_0)
        str_2 = None
        str_3 = '^Ri,Y'
        str_4 = ''
        dict_1 = {str_2: int_1, str_3: bytes_0, str_4: set_0}
        tuple_1 = ()
        bool_1 = False
        str_5 = 'nocache:used'
        list_2 = [int_0, bytes_0, tuple_1, str_5]
        int_2 = -242
        tuple_2 = (dict_1, list_2, bool_1, int_2)
        var_0 = action_module_0.run(tuple_1, tuple_2)
    except BaseException:
        pass