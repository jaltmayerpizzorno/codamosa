# Automatically generated by Pynguin.
import ansible.utils.jsonrpc as module_0
import json as module_1

def test_case_0():
    try:
        set_0 = set()
        json_rpc_server_0 = module_0.JsonRpcServer()
        var_0 = json_rpc_server_0.handle_request(set_0)
    except BaseException:
        pass

def test_case_1():
    try:
        json_rpc_server_0 = module_0.JsonRpcServer()
        var_0 = json_rpc_server_0.invalid_request()
    except BaseException:
        pass

def test_case_2():
    try:
        json_rpc_server_0 = module_0.JsonRpcServer()
        var_0 = json_rpc_server_0.parse_error()
    except BaseException:
        pass

def test_case_3():
    try:
        json_rpc_server_0 = module_0.JsonRpcServer()
        var_0 = json_rpc_server_0.invalid_params()
    except BaseException:
        pass

def test_case_4():
    try:
        json_rpc_server_0 = module_0.JsonRpcServer()
        str_0 = '{"jsonrpc": "2.0", "method": "ping", "id": 1}'
        var_0 = json_rpc_server_0.handle_request(str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        json_rpc_server_0 = module_0.JsonRpcServer()
        str_0 = 'method'
        str_1 = 'id'
        str_2 = 'add'
        int_0 = 2
        int_1 = 3
        int_2 = [int_0, int_1]
        int_3 = 0
        var_0 = {str_0: str_2, str_0: int_2, str_1: int_3}
        var_1 = module_1.dumps(var_0)
        str_3 = 'rpc.test'
        int_4 = [int_0, int_1]
        var_2 = {str_0: str_3, str_2: int_4, str_1: int_3}
        var_3 = module_1.dumps(var_2)
        var_4 = json_rpc_server_0.handle_request(var_3)
    except BaseException:
        pass