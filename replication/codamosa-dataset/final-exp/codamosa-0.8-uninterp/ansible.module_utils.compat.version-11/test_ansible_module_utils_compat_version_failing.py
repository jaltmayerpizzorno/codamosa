# Automatically generated by Pynguin.
import ansible.module_utils.compat.version as module_0

def test_case_0():
    try:
        version_0 = module_0.Version()
        version_1 = module_0.Version()
        var_0 = version_1.__repr__()
    except BaseException:
        pass

def test_case_1():
    try:
        version_0 = module_0.Version()
        bool_0 = True
        var_0 = version_0.__lt__(bool_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '1.0'
        strict_version_0 = module_0.StrictVersion(str_0)
        strict_version_1 = module_0.StrictVersion(str_0)
        var_0 = strict_version_0.__le__(strict_version_0)
        var_1 = strict_version_0.__le__(strict_version_0)
        str_1 = 'AttributeError not raised for self-comparison'
        strict_version_2 = module_0.StrictVersion(str_1)
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'X\xf3\x12\xf7\xcc\x9d\xc6\xdfo\xa2\x95\x19\xb1\x8b'
        version_0 = module_0.Version()
        var_0 = version_0.__gt__(bytes_0)
    except BaseException:
        pass

def test_case_4():
    try:
        bytes_0 = b'\xf3\x94\x9f\x95[\xfd\xe4'
        set_0 = {bytes_0, bytes_0}
        version_0 = module_0.Version()
        var_0 = version_0.__ge__(set_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'QS[c=\\8d'
        strict_version_0 = module_0.StrictVersion()
        var_0 = strict_version_0.parse(str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        loose_version_0 = module_0.LooseVersion()
        var_0 = loose_version_0.__repr__()
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = '1.0'
        strict_version_0 = module_0.StrictVersion(str_0)
        var_0 = type(str_0)
        var_1 = strict_version_0 > var_0
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = '0.4.1'
        strict_version_0 = module_0.StrictVersion(str_0)
        var_0 = strict_version_0 == str_0
        str_1 = '0.5b3'
        strict_version_1 = module_0.StrictVersion(str_1)
        var_1 = strict_version_1 == str_0
        str_2 = 'g'
        loose_version_0 = module_0.LooseVersion(str_2)
        loose_version_1 = module_0.LooseVersion()
        loose_version_2 = module_0.LooseVersion()
        var_2 = loose_version_2.__repr__()
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = '0.4.0'
        strict_version_0 = module_0.StrictVersion(str_0)
        var_0 = str_0 == str_0
        var_1 = strict_version_0.__str__()
        var_2 = str_0 == var_1
        var_3 = strict_version_0.__str__()
        strict_version_1 = module_0.StrictVersion(str_0)
        strict_version_2 = module_0.StrictVersion(str_0)
        var_4 = strict_version_0.__str__()
        loose_version_0 = module_0.LooseVersion(str_0)
        var_5 = strict_version_2.__str__()
        var_6 = strict_version_0 == loose_version_0
        var_7 = loose_version_0.__str__()
        strict_version_3 = module_0.StrictVersion(str_0)
        strict_version_4 = module_0.StrictVersion(str_0)
        var_8 = strict_version_3 == strict_version_3
        str_1 = '1.0'
        var_9 = str_1 == loose_version_0
        int_0 = -313
        var_10 = loose_version_0.parse(int_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = '1.0'
        strict_version_0 = module_0.StrictVersion(str_0)
        var_0 = strict_version_0 > str_0
        var_1 = type(var_0)
        var_2 = strict_version_0 > str_0
        var_3 = type(var_2)
        str_1 = '0.9'
        var_4 = strict_version_0 > str_1
        strict_version_1 = module_0.StrictVersion(str_0)
        var_5 = var_1 > strict_version_1
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = '0.4.1'
        strict_version_0 = module_0.StrictVersion(str_0)
        var_0 = strict_version_0 == str_0
        str_1 = '0.5b3'
        strict_version_1 = module_0.StrictVersion(str_1)
        var_1 = strict_version_1 == str_1
        str_2 = '0.5'
        var_2 = strict_version_1.__le__(str_2)
        str_3 = 'g'
        loose_version_0 = module_0.LooseVersion(str_3)
        var_3 = loose_version_0.__repr__()
        tuple_0 = None
        loose_version_1 = module_0.LooseVersion(tuple_0)
        float_0 = 1.5
        loose_version_2 = module_0.LooseVersion(float_0)
    except BaseException:
        pass