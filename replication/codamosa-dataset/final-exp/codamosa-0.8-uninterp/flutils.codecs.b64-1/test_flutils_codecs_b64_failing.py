# Automatically generated by Pynguin.
import flutils.codecs.b64 as module_0
import collections as module_1
import codecs as module_2

def test_case_0():
    try:
        str_0 = 'a`R0>qm82liReKj'
        tuple_0 = module_0.encode(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        float_0 = 1242.195865
        tuple_0 = module_0.decode(float_0)
    except BaseException:
        pass

def test_case_2():
    try:
        float_0 = -2259.4
        str_0 = "The given value for 'position', %r, must be an 'int' between (%r) and (%r)."
        tuple_0 = module_0.encode(str_0)
        tuple_1 = module_0.encode(str_0)
        user_string_0 = module_1.UserString(float_0)
        bytes_0 = b'\x96\xbb'
        tuple_2 = module_0.decode(bytes_0)
        tuple_3 = module_0.decode(user_string_0)
    except BaseException:
        pass

def test_case_3():
    try:
        int_0 = 2251
        str_0 = None
        str_1 = 'X\rH\rzTpZ.'
        module_0.register()
        complex_0 = None
        tuple_0 = (int_0, str_0, str_1, complex_0)
        user_string_0 = module_1.UserString(tuple_0)
        tuple_1 = module_0.encode(user_string_0)
        tuple_2 = module_0.encode(str_1, str_1)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'test_register'
        var_0 = module_2.getdecoder(str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        module_0.register()
        str_0 = 'Q|9'
        int_0 = 2295
        tuple_0 = (str_0, int_0)
        tuple_1 = module_0.decode(tuple_0, str_0)
    except BaseException:
        pass