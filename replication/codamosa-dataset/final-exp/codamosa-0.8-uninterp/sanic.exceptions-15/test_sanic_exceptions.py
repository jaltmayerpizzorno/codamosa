# Automatically generated by Pynguin.
import sanic.exceptions as module_0

def test_case_0():
    pass

def test_case_1():
    u_r_l_build_error_0 = None
    header_not_found_0 = module_0.HeaderNotFound(u_r_l_build_error_0)
    not_found_0 = module_0.NotFound(header_not_found_0)

def test_case_2():
    str_0 = 'Invalid username or assword'
    int_0 = 401
    unauthorized_0 = module_0.Unauthorized(str_0, int_0, str_0)

def test_case_3():
    int_0 = 741
    list_0 = [int_0, int_0]
    str_0 = '{#n{_A&/H'
    request_timeout_0 = module_0.RequestTimeout(list_0, str_0)
    int_1 = 1495
    bytes_0 = b'\xc7t-\xdb\xa7\xd2Gc\xaf'
    sanic_exception_0 = module_0.SanicException(int_1, bytes_0)
    str_1 = "'"
    file_not_found_0 = module_0.FileNotFound(sanic_exception_0, str_1, request_timeout_0)
    invalid_signal_0 = module_0.InvalidSignal(file_not_found_0)
    header_not_found_0 = module_0.HeaderNotFound(int_0, request_timeout_0, invalid_signal_0)
    int_2 = 417
    invalid_signal_1 = module_0.InvalidSignal(header_not_found_0, int_2)
    u_r_l_build_error_0 = module_0.URLBuildError(invalid_signal_1)

def test_case_4():
    str_0 = 'Basc'
    list_0 = [str_0]
    not_found_0 = module_0.NotFound(list_0)
    py_file_error_0 = module_0.PyFileError(not_found_0)
    dict_0 = {str_0: py_file_error_0, str_0: str_0}
    unauthorized_0 = module_0.Unauthorized(list_0, py_file_error_0, list_0, **dict_0)