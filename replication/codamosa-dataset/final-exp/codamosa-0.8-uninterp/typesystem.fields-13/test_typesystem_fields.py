# Automatically generated by Pynguin.
import typesystem.fields as module_0

def test_case_0():
    pass

def test_case_1():
    text_0 = module_0.Text()

def test_case_2():
    date_time_0 = module_0.DateTime()
    boolean_0 = module_0.Boolean(default=date_time_0)

def test_case_3():
    field_0 = module_0.Field()
    any_0 = field_0.serialize(field_0)
    any_1 = field_0.get_default_value()

def test_case_4():
    bool_0 = True
    string_0 = module_0.String(allow_blank=bool_0, trim_whitespace=bool_0)

def test_case_5():
    field_0 = module_0.Field()
    union_0 = field_0.__or__(field_0)

def test_case_6():
    str_0 = 'f*o13V'
    string_0 = module_0.String(pattern=str_0)
    any_0 = string_0.validate(str_0)

def test_case_7():
    str_0 = ''
    int_0 = None
    string_0 = module_0.String(max_length=int_0, format=str_0)
    object_0 = module_0.Object()
    any_0 = string_0.serialize(int_0)

def test_case_8():
    number_0 = module_0.Number()

def test_case_9():
    float_0 = -3270.13555
    decimal_0 = module_0.Decimal(maximum=float_0, exclusive_minimum=float_0)

def test_case_10():
    int_0 = -2478
    integer_0 = module_0.Integer(minimum=int_0, maximum=int_0, exclusive_minimum=int_0, multiple_of=int_0)

def test_case_11():
    str_0 = ''
    str_1 = '%BXA(4$6\x0c0U5\r4ktMSs'
    int_0 = None
    bool_0 = True
    string_0 = module_0.String(max_length=int_0, format=str_0)
    decimal_0 = module_0.Decimal(exclusive_maximum=int_0, multiple_of=int_0)
    any_0 = decimal_0.serialize(bool_0)
    any_1 = string_0.validate(str_1)
    number_0 = module_0.Number(exclusive_maximum=int_0)

def test_case_12():
    choice_0 = module_0.Choice()

def test_case_13():
    bytes_0 = b'u\xf9\x0b\xf2J\xa2p\xd2'
    choice_0 = module_0.Choice(choices=bytes_0)

def test_case_14():
    object_0 = module_0.Object()

def test_case_15():
    array_0 = module_0.Array()

def test_case_16():
    field_0 = module_0.Field()
    bool_0 = True
    array_0 = module_0.Array(field_0, bool_0)

def test_case_17():
    date_0 = module_0.Date()

def test_case_18():
    time_0 = module_0.Time()

def test_case_19():
    date_time_0 = module_0.DateTime()

def test_case_20():
    float_0 = -3270.13555
    decimal_0 = module_0.Decimal(maximum=float_0, exclusive_minimum=float_0)
    str_0 = 'SHal_"J@\x0ckluMx:}i3v'
    any_0 = module_0.Any(title=str_0, description=str_0, default=str_0)
    any_1 = any_0.validate(decimal_0)

def test_case_21():
    dict_0 = {}
    const_0 = module_0.Const(dict_0)
    object_0 = module_0.Object()
    any_0 = object_0.validate(dict_0)

def test_case_22():
    str_0 = 'f*o13V'
    bool_0 = True
    int_0 = -74
    string_0 = module_0.String(allow_blank=bool_0, trim_whitespace=bool_0, max_length=int_0, format=str_0)
    string_1 = module_0.String(pattern=str_0)

def test_case_23():
    string_0 = module_0.String()

def test_case_24():
    field_0 = module_0.Field()
    any_0 = field_0.get_default_value()

def test_case_25():
    str_0 = 'toto'
    str_1 = [str_0]
    choice_0 = module_0.Choice(choices=str_1)
    any_0 = choice_0.validate(str_0)

def test_case_26():
    str_0 = 'f*o-3V'
    string_0 = module_0.String(pattern=str_0)

def test_case_27():
    dict_0 = {}
    bool_0 = False
    object_0 = module_0.Object(pattern_properties=dict_0, additional_properties=bool_0)
    any_0 = object_0.validate(dict_0, strict=bool_0)

def test_case_28():
    array_0 = module_0.Array()
    any_0 = array_0.serialize(array_0)

def test_case_29():
    int_0 = 985
    number_0 = module_0.Number(maximum=int_0)
    any_0 = number_0.validate(int_0)

def test_case_30():
    int_0 = 986
    dict_0 = {}
    number_0 = module_0.Number(minimum=int_0, multiple_of=int_0, **dict_0)
    any_0 = number_0.validate(int_0)

def test_case_31():
    str_0 = 'L'
    int_0 = None
    string_0 = module_0.String(max_length=int_0, format=str_0)
    any_0 = string_0.validate(str_0)

def test_case_32():
    int_0 = 4
    number_0 = module_0.Number(minimum=int_0, maximum=int_0)
    any_0 = number_0.validate(int_0)

def test_case_33():
    int_0 = None
    float_0 = -94.9066
    number_0 = module_0.Number(minimum=int_0, exclusive_minimum=float_0)
    float_1 = -46.1436
    bool_0 = True
    any_0 = number_0.validate(float_1, strict=bool_0)

def test_case_34():
    field_0 = module_0.Field()
    object_0 = module_0.Object(additional_properties=field_0)

def test_case_35():
    optional_0 = None
    bool_0 = False
    bool_1 = True
    string_0 = module_0.String(allow_blank=bool_1)
    any_0 = string_0.validate(optional_0, strict=bool_0)

def test_case_36():
    float_0 = 2949.0
    number_0 = module_0.Number(exclusive_maximum=float_0)
    float_1 = -46.1436
    any_0 = number_0.validate(float_1)

def test_case_37():
    int_0 = 9
    field_0 = module_0.Field()
    bool_0 = None
    array_0 = module_0.Array(field_0, field_0, int_0, bool_0)

def test_case_38():
    dict_0 = {}
    object_0 = module_0.Object()
    any_0 = object_0.validate(dict_0)

def test_case_39():
    str_0 = '({W\x0c*rB,\r\x0cjg)5'
    field_0 = module_0.Field()
    dict_0 = {str_0: field_0, str_0: field_0, str_0: field_0, str_0: field_0, str_0: field_0, str_0: field_0, str_0: field_0, str_0: field_0, str_0: field_0, str_0: field_0, str_0: field_0}
    object_0 = module_0.Object(additional_properties=field_0)
    object_1 = module_0.Object(pattern_properties=dict_0)
    any_0 = object_1.validate(dict_0)

def test_case_40():
    int_0 = 776
    str_0 = '}:RYsE&(zV^R'
    field_0 = module_0.Field(title=str_0)
    array_0 = module_0.Array(field_0, field_0, int_0, int_0, int_0)

def test_case_41():
    bool_0 = True
    field_0 = module_0.Field()
    field_1 = [field_0, field_0]
    array_0 = module_0.Array(field_1)

def test_case_42():
    float_0 = -1334.4
    number_0 = module_0.Number(multiple_of=float_0)
    decimal_0 = module_0.Decimal(maximum=float_0)
    any_0 = number_0.validate(float_0)

def test_case_43():
    dict_0 = {}
    int_0 = 776
    object_0 = module_0.Object(pattern_properties=dict_0, max_properties=int_0)
    any_0 = object_0.validate(dict_0)

def test_case_44():
    dict_0 = {}
    optional_0 = None
    bool_0 = True
    boolean_0 = module_0.Boolean(allow_null=bool_0)
    any_0 = boolean_0.validate(optional_0)
    object_0 = module_0.Object()
    any_1 = object_0.validate(dict_0)

def test_case_45():
    dict_0 = {}
    str_0 = "1\x0bZQ ?/J*Io'u"
    str_1 = ':-6b6z=TJ!\\&q+'
    field_0 = module_0.Field(title=str_0, description=str_1)
    object_0 = module_0.Object(additional_properties=field_0)
    any_0 = object_0.validate(dict_0)

def test_case_46():
    str_0 = ''
    dict_0 = {}
    number_0 = module_0.Number(precision=str_0)
    field_0 = module_0.Field(title=str_0)
    dict_1 = {str_0: field_0}
    object_0 = module_0.Object(properties=dict_1, additional_properties=field_0)
    bool_0 = True
    any_0 = object_0.validate(dict_0, strict=bool_0)

def test_case_47():
    dict_0 = {}
    bool_0 = True
    str_0 = '/37<X0jJtmJF16'
    field_0 = module_0.Field(title=str_0, description=str_0, allow_null=bool_0)
    dict_1 = {str_0: field_0, str_0: field_0, str_0: field_0}
    object_0 = module_0.Object(properties=dict_1, property_names=field_0)
    any_0 = object_0.validate(dict_0)

def test_case_48():
    dict_0 = {}
    object_0 = module_0.Object()
    none_type_0 = None
    object_1 = module_0.Object(properties=dict_0, additional_properties=none_type_0)
    any_0 = object_1.validate(dict_0)

def test_case_49():
    string_0 = module_0.String()
    string_1 = [string_0]
    union_0 = module_0.Union(string_1)
    str_0 = 'test_string'
    any_0 = union_0.validate(str_0)
    boolean_0 = module_0.Boolean()

def test_case_50():
    bool_0 = True
    field_0 = module_0.Field()
    field_1 = [field_0]
    array_0 = module_0.Array()
    any_0 = array_0.validate(field_1)

def test_case_51():
    bool_0 = True
    field_0 = []
    array_0 = module_0.Array(field_0)
    any_0 = array_0.validate(field_0, strict=bool_0)

def test_case_52():
    field_0 = module_0.Field()
    field_1 = module_0.Field()
    var_0 = field_0 | field_1
    var_1 = var_0 | var_0

def test_case_53():
    list_0 = None
    choice_0 = module_0.Choice()
    field_0 = module_0.Field()
    bool_0 = True
    field_1 = module_0.Field(allow_null=bool_0)
    union_0 = field_1.__or__(field_0)
    any_0 = union_0.validate(list_0)