# Automatically generated by Pynguin.
import typesystem.fields as module_0
import decimal as module_1

def test_case_0():
    try:
        decimal_0 = module_0.Decimal()
        bool_0 = True
        field_0 = module_0.Field(allow_null=bool_0)
        array_0 = module_0.Array(field_0)
        any_0 = array_0.validate(decimal_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'Pss\r2*'
        field_0 = module_0.Field()
        dict_0 = {str_0: field_0, str_0: field_0, str_0: field_0}
        object_0 = module_0.Object(additional_properties=field_0)
        any_0 = object_0.validate(dict_0)
    except BaseException:
        pass

def test_case_2():
    try:
        array_0 = module_0.Array()
        any_0 = array_0.validate(array_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'j*"w1'
        string_0 = module_0.String(pattern=str_0)
        any_0 = string_0.validate(string_0)
    except BaseException:
        pass

def test_case_4():
    try:
        float_0 = 1461.952
        number_0 = module_0.Number(exclusive_maximum=float_0)
        any_0 = number_0.validate(float_0)
    except BaseException:
        pass

def test_case_5():
    try:
        number_0 = module_0.Number()
        any_0 = number_0.validate(number_0)
    except BaseException:
        pass

def test_case_6():
    try:
        boolean_0 = module_0.Boolean()
        bool_0 = False
        any_0 = boolean_0.validate(boolean_0, strict=bool_0)
    except BaseException:
        pass

def test_case_7():
    try:
        bool_0 = False
        str_0 = 's-7nL\rO!b":<vKB'
        object_0 = module_0.Object(additional_properties=bool_0, required=str_0)
        str_1 = '^l|gGT29{To'
        boolean_0 = module_0.Boolean(title=str_1)
        any_0 = boolean_0.validate(str_0)
    except BaseException:
        pass

def test_case_8():
    try:
        boolean_0 = None
        choice_0 = module_0.Choice()
        any_0 = choice_0.validate(boolean_0)
    except BaseException:
        pass

def test_case_9():
    try:
        choice_0 = module_0.Choice()
        any_0 = choice_0.validate(choice_0)
    except BaseException:
        pass

def test_case_10():
    try:
        bool_0 = False
        object_0 = module_0.Object(additional_properties=bool_0)
        any_0 = object_0.validate(object_0)
    except BaseException:
        pass

def test_case_11():
    try:
        optional_0 = None
        object_0 = module_0.Object()
        any_0 = object_0.validate(optional_0)
    except BaseException:
        pass

def test_case_12():
    try:
        int_0 = 986
        bool_0 = False
        array_0 = module_0.Array(int_0, bool_0)
    except BaseException:
        pass

def test_case_13():
    try:
        bool_0 = True
        array_0 = module_0.Array()
        field_0 = module_0.Field(allow_null=bool_0)
        list_0 = [field_0, field_0, field_0, field_0]
        union_0 = module_0.Union(list_0)
        any_0 = union_0.validate(array_0)
    except BaseException:
        pass

def test_case_14():
    try:
        any_0 = None
        const_0 = module_0.Const(any_0)
        any_1 = const_0.validate(const_0)
    except BaseException:
        pass

def test_case_15():
    try:
        time_0 = module_0.Time()
        dict_0 = {}
        bool_0 = False
        const_0 = module_0.Const(time_0, **dict_0)
        any_0 = const_0.validate(dict_0, bool_0)
    except BaseException:
        pass

def test_case_16():
    try:
        bool_0 = True
        string_0 = module_0.String()
        array_0 = module_0.Array(string_0, bool_0)
        int_0 = 25
        str_0 = '\x0c>.Z6PddQo\t:,`_o,'
        var_0 = [bool_0, array_0, str_0, str_0, int_0]
        const_0 = module_0.Const(array_0)
        any_0 = const_0.validate(array_0)
        any_1 = array_0.validate(var_0)
    except BaseException:
        pass

def test_case_17():
    try:
        time_0 = module_0.Time()
        bool_0 = False
        str_0 = "$%;; :42?j'Iy\x0bH."
        bool_1 = True
        boolean_0 = module_0.Boolean(description=str_0, default=str_0, allow_null=bool_1)
        any_0 = boolean_0.validate(time_0, strict=bool_0)
    except BaseException:
        pass

def test_case_18():
    try:
        optional_0 = None
        choice_0 = module_0.Choice(choices=optional_0)
        list_0 = [optional_0]
        const_0 = module_0.Const(list_0)
        str_0 = 'choice'
        bool_0 = True
        any_0 = module_0.Any(title=str_0, allow_null=bool_0)
        any_1 = any_0.validate(const_0)
        int_0 = None
        integer_0 = module_0.Integer(exclusive_maximum=int_0, multiple_of=int_0)
        number_0 = module_0.Number(maximum=integer_0, exclusive_maximum=int_0)
    except BaseException:
        pass

def test_case_19():
    try:
        str_0 = 'A:&4`W,XT1|kWJ?m3ST'
        bool_0 = True
        field_0 = module_0.Field(allow_null=bool_0)
        field_1 = module_0.Field(default=str_0)
        union_0 = field_1.__or__(field_0)
        any_0 = module_0.Any(title=str_0, default=str_0)
        int_0 = 564
        dict_0 = {}
        number_0 = module_0.Number(minimum=any_0, multiple_of=int_0, **dict_0)
    except BaseException:
        pass

def test_case_20():
    try:
        str_0 = 'Must be a multiple of {multiple_of}.'
        bool_0 = None
        field_0 = module_0.Field(title=str_0, allow_null=bool_0)
        str_1 = '.mop%UM4+I\n'
        field_1 = module_0.Field(description=str_1, default=bool_0)
        field_2 = module_0.Field()
        union_0 = field_2.__or__(field_0)
        float_0 = module_0.Float(exclusive_minimum=union_0, precision=str_1)
    except BaseException:
        pass

def test_case_21():
    try:
        int_0 = 985
        number_0 = module_0.Number(maximum=int_0)
        boolean_0 = module_0.Boolean()
        object_0 = module_0.Object(properties=number_0, max_properties=int_0, required=boolean_0)
    except BaseException:
        pass

def test_case_22():
    try:
        decimal_0 = module_1.Decimal()
        str_0 = ":~gu'-y\x0b8k"
        field_0 = module_0.Field(title=str_0, default=str_0)
        array_0 = module_0.Array(field_0, field_0)
        any_0 = array_0.validate(decimal_0)
    except BaseException:
        pass

def test_case_23():
    try:
        int_0 = 957
        number_0 = module_0.Number(maximum=int_0)
        bool_0 = False
        field_0 = module_0.Field(allow_null=bool_0)
        bool_1 = True
        array_0 = module_0.Array(field_0, int_0, int_0, int_0, bool_1)
    except BaseException:
        pass

def test_case_24():
    try:
        number_0 = module_0.Number()
        bool_0 = True
        any_0 = number_0.validate(number_0, strict=bool_0)
    except BaseException:
        pass

def test_case_25():
    try:
        decimal_0 = module_0.Decimal()
        bool_0 = True
        list_0 = []
        union_0 = module_0.Union(list_0)
        any_0 = union_0.validate(bool_0)
    except BaseException:
        pass

def test_case_26():
    try:
        string_0 = module_0.String()
        string_1 = [string_0]
        union_0 = module_0.Union(string_1)
        integer_0 = module_0.Integer()
        any_0 = union_0.validate(integer_0)
    except BaseException:
        pass

def test_case_27():
    try:
        str_0 = 'Must be an integer.'
        str_1 = '_'
        list_0 = []
        field_0 = module_0.Field(description=str_1)
        field_1 = module_0.Field()
        union_0 = field_1.__or__(field_0)
        decimal_0 = module_1.Decimal(*list_0)
        integer_0 = module_0.Integer(minimum=decimal_0, maximum=decimal_0, exclusive_maximum=decimal_0)
        text_0 = module_0.Text()
        string_0 = module_0.String(max_length=text_0, pattern=str_1, format=str_0)
    except BaseException:
        pass

def test_case_28():
    try:
        date_0 = module_0.Date()
        bool_0 = True
        int_0 = 1704
        string_0 = module_0.String(allow_blank=bool_0, trim_whitespace=bool_0, min_length=int_0)
        any_0 = string_0.validate(date_0)
    except BaseException:
        pass

def test_case_29():
    try:
        int_0 = 2
        field_0 = module_0.Field()
        str_0 = ';k9L[pxvu|'
        dict_0 = {str_0: field_0, str_0: field_0, str_0: field_0, str_0: field_0}
        object_0 = module_0.Object(pattern_properties=dict_0, min_properties=int_0, max_properties=int_0)
        any_0 = object_0.validate(dict_0)
    except BaseException:
        pass

def test_case_30():
    try:
        number_0 = module_0.Number()
        field_0 = module_0.Field()
        str_0 = "u/gFB6'\nAo0'_z"
        field_1 = module_0.Field(title=str_0)
        union_0 = field_1.__or__(field_0)
        bool_0 = True
        any_0 = module_0.Any(title=str_0, allow_null=bool_0)
        bool_1 = True
        array_0 = module_0.Array(union_0, any_0, bool_1)
        dict_0 = {}
        object_0 = module_0.Object(min_properties=array_0, max_properties=dict_0, **dict_0)
    except BaseException:
        pass

def test_case_31():
    try:
        str_0 = None
        any_0 = module_0.Any(title=str_0)
    except BaseException:
        pass

def test_case_32():
    try:
        object_0 = None
        int_0 = 986
        dict_0 = {}
        array_0 = module_0.Array(**dict_0)
        any_0 = module_0.Any()
        any_1 = any_0.validate(int_0)
        decimal_0 = module_0.Decimal()
        any_2 = decimal_0.serialize(object_0)
        any_3 = array_0.serialize(object_0)
        bool_0 = True
        field_0 = module_0.Field()
        any_4 = module_0.Any()
        string_0 = module_0.String(trim_whitespace=bool_0, max_length=int_0, pattern=any_4)
    except BaseException:
        pass

def test_case_33():
    try:
        decimal_0 = module_1.Decimal()
        optional_0 = None
        number_0 = module_0.Number(multiple_of=decimal_0)
        any_0 = number_0.validate(optional_0)
    except BaseException:
        pass

def test_case_34():
    try:
        field_0 = module_0.Field()
        bool_0 = False
        array_0 = module_0.Array(field_0, bool_0)
        any_0 = array_0.serialize(bool_0)
    except BaseException:
        pass

def test_case_35():
    try:
        str_0 = 'Pss\r2*'
        field_0 = module_0.Field()
        dict_0 = {str_0: field_0, str_0: field_0, str_0: field_0, str_0: field_0, str_0: field_0}
        int_0 = 2550
        bool_0 = True
        array_0 = module_0.Array(field_0, field_0, int_0, bool_0)
        any_0 = array_0.serialize(str_0)
        object_0 = module_0.Object(additional_properties=field_0)
        any_1 = object_0.validate(dict_0)
    except BaseException:
        pass

def test_case_36():
    try:
        str_0 = 'AmhG`W,XT1|?WJ?J3S5'
        number_0 = module_0.Number(precision=str_0)
        any_0 = number_0.validate(str_0)
    except BaseException:
        pass

def test_case_37():
    try:
        time_0 = module_0.Time()
        string_0 = module_0.String(format=time_0)
    except BaseException:
        pass

def test_case_38():
    try:
        str_0 = '{Oy\\f~[]ot'
        bool_0 = False
        list_0 = [bool_0, str_0]
        object_0 = module_0.Object(required=list_0)
    except BaseException:
        pass

def test_case_39():
    try:
        int_0 = None
        bool_0 = False
        number_0 = module_0.Number(multiple_of=int_0)
        bool_1 = True
        any_0 = number_0.validate(bool_0, strict=bool_1)
    except BaseException:
        pass

def test_case_40():
    try:
        bool_0 = False
        boolean_0 = module_0.Boolean()
        any_0 = boolean_0.validate(bool_0, strict=bool_0)
        field_0 = module_0.Field()
        field_1 = [field_0]
        array_0 = module_0.Array(field_1)
        choice_0 = module_0.Choice(choices=bool_0)
        any_1 = array_0.validate(field_1, strict=bool_0)
    except BaseException:
        pass

def test_case_41():
    try:
        str_0 = 'AmhG`W,XT1|?WJ?J3S5'
        decimal_0 = module_1.Decimal()
        number_0 = module_0.Number(minimum=decimal_0, maximum=decimal_0, precision=str_0, multiple_of=decimal_0)
        any_0 = number_0.validate(decimal_0)
    except BaseException:
        pass

def test_case_42():
    try:
        str_0 = '1:34:56+'
        int_0 = 2
        string_0 = module_0.String(max_length=int_0, min_length=int_0, pattern=str_0)
        object_0 = module_0.Object(max_properties=int_0)
        str_1 = '1'
        any_0 = string_0.validate(str_1)
    except BaseException:
        pass

def test_case_43():
    try:
        decimal_0 = module_1.Decimal()
        number_0 = module_0.Number(multiple_of=decimal_0)
        any_0 = number_0.validate(decimal_0)
    except BaseException:
        pass

def test_case_44():
    try:
        str_0 = 'atetimfe'
        string_0 = module_0.String(format=str_0)
        any_0 = string_0.validate(str_0)
        int_0 = 2
        string_1 = module_0.String(max_length=int_0, min_length=int_0, pattern=str_0)
        object_0 = module_0.Object(max_properties=int_0)
        any_1 = string_1.validate(str_0)
    except BaseException:
        pass

def test_case_45():
    try:
        str_0 = "eu7G#}51}'4=d$:t&"
        str_1 = 'Qu;zcPu`'
        field_0 = module_0.Field(description=str_1)
        dict_0 = {str_0: field_0}
        list_0 = [str_0, str_1, field_0]
        object_0 = module_0.Object(properties=dict_0, additional_properties=field_0, property_names=field_0, max_properties=list_0)
    except BaseException:
        pass

def test_case_46():
    try:
        dict_0 = {}
        bool_0 = True
        optional_0 = None
        bytes_0 = b'\x000\xf7\xdf\xf6\xdd\xb3'
        string_0 = module_0.String(trim_whitespace=bool_0, max_length=optional_0, min_length=bytes_0, **dict_0)
    except BaseException:
        pass

def test_case_47():
    try:
        optional_0 = None
        bool_0 = True
        string_0 = module_0.String(allow_blank=bool_0)
        any_0 = string_0.validate(optional_0, strict=bool_0)
    except BaseException:
        pass

def test_case_48():
    try:
        optional_0 = None
        bool_0 = False
        string_0 = module_0.String(allow_blank=bool_0)
        any_0 = string_0.validate(optional_0, strict=bool_0)
    except BaseException:
        pass

def test_case_49():
    try:
        float_0 = -803.9154867156382
        decimal_0 = module_1.Decimal()
        number_0 = module_0.Number(maximum=float_0, exclusive_minimum=float_0, precision=decimal_0)
        any_0 = number_0.validate(float_0)
    except BaseException:
        pass

def test_case_50():
    try:
        field_0 = module_0.Field()
        int_0 = None
        integer_0 = module_0.Integer(maximum=int_0)
        bool_0 = None
        string_0 = module_0.String(allow_blank=bool_0, trim_whitespace=bool_0, min_length=int_0)
        str_0 = '$UelMjBb2:&+4'
        str_1 = None
        field_1 = module_0.Field(title=str_0, description=str_1)
    except BaseException:
        pass

def test_case_51():
    try:
        list_0 = None
        array_0 = module_0.Array()
        any_0 = array_0.validate(list_0)
    except BaseException:
        pass

def test_case_52():
    try:
        str_0 = ''
        int_0 = None
        string_0 = module_0.String(max_length=int_0, format=str_0)
        any_0 = string_0.validate(str_0)
    except BaseException:
        pass

def test_case_53():
    try:
        integer_0 = module_0.Integer()
        str_0 = None
        str_1 = '%BXA($6\x0c0U5\r4ktMSs'
        field_0 = module_0.Field(description=str_1)
        dict_0 = {str_0: field_0}
        object_0 = module_0.Object(properties=dict_0)
    except BaseException:
        pass

def test_case_54():
    try:
        field_0 = module_0.Field()
        str_0 = '%BXA(4$6\x0c0U5\r4ktMSs'
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: field_0, str_0: str_0, str_0: str_0}
        bool_0 = False
        optional_0 = None
        int_0 = 1901
        object_0 = module_0.Object(properties=dict_0, pattern_properties=optional_0, additional_properties=bool_0, property_names=field_0, min_properties=int_0, max_properties=int_0)
    except BaseException:
        pass

def test_case_55():
    try:
        str_0 = ''
        number_0 = module_0.Number(precision=str_0)
        any_0 = number_0.validate(str_0)
    except BaseException:
        pass

def test_case_56():
    try:
        float_0 = -1731.0
        int_0 = 10
        number_0 = module_0.Number(multiple_of=int_0)
        any_0 = number_0.validate(float_0)
    except BaseException:
        pass

def test_case_57():
    try:
        float_0 = -54.4
        bool_0 = True
        bool_1 = False
        string_0 = module_0.String(allow_blank=bool_0, trim_whitespace=bool_1)
        optional_0 = None
        number_0 = module_0.Number(maximum=float_0, exclusive_maximum=float_0, precision=optional_0)
        str_0 = 'OO!R3\x0bYg,yqU'
        field_0 = None
        dict_0 = {str_0: field_0}
        list_0 = [field_0, bool_0]
        object_0 = module_0.Object(pattern_properties=dict_0, property_names=field_0, required=list_0)
    except BaseException:
        pass

def test_case_58():
    try:
        str_0 = 'AmhG`W,XT1|?WJ?J3S5'
        bool_0 = False
        field_0 = module_0.Field(title=str_0, default=str_0)
        dict_0 = {str_0: field_0}
        none_type_0 = None
        optional_0 = None
        object_0 = module_0.Object(pattern_properties=dict_0, property_names=field_0, max_properties=none_type_0, required=optional_0)
        any_0 = object_0.validate(dict_0, strict=bool_0)
    except BaseException:
        pass

def test_case_59():
    try:
        str_0 = ''
        int_0 = None
        bool_0 = True
        string_0 = module_0.String(allow_blank=bool_0, min_length=int_0)
        any_0 = string_0.validate(str_0)
        number_0 = module_0.Number()
        any_1 = number_0.validate(any_0, strict=bool_0)
    except BaseException:
        pass

def test_case_60():
    try:
        var_0 = []
        bool_0 = False
        union_0 = module_0.Union(var_0)
        var_1 = None
        any_0 = union_0.validate(var_1, bool_0)
    except BaseException:
        pass

def test_case_61():
    try:
        bool_0 = False
        str_0 = 'Psse2*'
        string_0 = module_0.String(trim_whitespace=bool_0, pattern=str_0)
        field_0 = module_0.Field()
        field_1 = module_0.Field(title=str_0, description=str_0, allow_null=bool_0)
        any_0 = string_0.validate(str_0)
        str_1 = "Sl4dY`6qe{\rq-K|e'"
        dict_0 = {str_0: field_0, str_0: field_1, str_1: field_0}
        object_0 = module_0.Object(properties=dict_0, property_names=field_0)
        any_1 = object_0.validate(str_0, strict=bool_0)
    except BaseException:
        pass

def test_case_62():
    try:
        decimal_0 = module_1.Decimal()
        str_0 = "\n        Either instantiated with a single message, like so:\n\n        text - The error message. 'May not have more than 100 characters'\n        code - An optional error code, eg. 'max_length'\n        key - An optional key of the message within a single parent. eg. 'username'\n\n        Or instantiated with a list of error messages:\n\n        messages - A list of all the messages in the error.\n        "
        field_0 = module_0.Field(default=decimal_0)
        str_1 = None
        dict_0 = {str_0: field_0, str_1: field_0}
        object_0 = module_0.Object(pattern_properties=dict_0)
    except BaseException:
        pass

def test_case_63():
    try:
        str_0 = '\\;GDr$i^a^mY-5O_/uD{'
        dict_0 = {}
        string_0 = module_0.String(pattern=str_0, format=str_0, **dict_0)
        any_0 = string_0.validate(str_0)
    except BaseException:
        pass

def test_case_64():
    try:
        decimal_0 = module_1.Decimal()
        optional_0 = None
        bool_0 = True
        boolean_0 = module_0.Boolean()
        any_0 = boolean_0.validate(optional_0, strict=bool_0)
    except BaseException:
        pass

def test_case_65():
    try:
        str_0 = '_{O\x0c*rB,\r\x0cjg)5'
        field_0 = module_0.Field()
        dict_0 = {str_0: field_0, str_0: field_0, str_0: field_0, str_0: field_0, str_0: field_0, str_0: field_0, str_0: field_0, str_0: field_0, str_0: field_0, str_0: field_0, str_0: field_0}
        object_0 = module_0.Object(additional_properties=field_0)
        object_1 = module_0.Object(pattern_properties=dict_0)
        any_0 = object_1.validate(dict_0)
    except BaseException:
        pass

def test_case_66():
    try:
        string_0 = module_0.String()
        const_0 = module_0.Const(string_0)
        integer_0 = module_0.Integer(exclusive_maximum=const_0)
    except BaseException:
        pass

def test_case_67():
    try:
        object_0 = None
        int_0 = 986
        dict_0 = {}
        array_0 = module_0.Array(**dict_0)
        any_0 = array_0.serialize(object_0)
        number_0 = module_0.Number(multiple_of=int_0)
        any_1 = number_0.validate(object_0)
    except BaseException:
        pass

def test_case_68():
    try:
        bool_0 = True
        field_0 = module_0.Field()
        field_1 = [bool_0]
        int_0 = 1727
        str_0 = 'L9B nefqUaGyt)W'
        string_0 = module_0.String(allow_blank=bool_0, max_length=int_0, format=str_0)
        any_0 = string_0.serialize(field_1)
        choice_0 = module_0.Choice()
        dict_0 = {}
        array_0 = module_0.Array(field_1, bool_0, bool_0, **dict_0)
    except BaseException:
        pass

def test_case_69():
    try:
        dict_0 = {}
        bool_0 = False
        str_0 = 's-7nL\rO!b":<vKB'
        object_0 = module_0.Object(additional_properties=bool_0, required=str_0)
        any_0 = object_0.validate(dict_0, strict=bool_0)
    except BaseException:
        pass

def test_case_70():
    try:
        object_0 = None
        int_0 = 986
        dict_0 = {}
        array_0 = module_0.Array(**dict_0)
        any_0 = array_0.serialize(object_0)
        bool_0 = True
        field_0 = module_0.Field()
        any_1 = module_0.Any()
        string_0 = module_0.String(trim_whitespace=bool_0, max_length=int_0, pattern=any_1)
    except BaseException:
        pass

def test_case_71():
    try:
        str_0 = 'AmhG`W,XT1|?WJ?J3S5'
        field_0 = module_0.Field(title=str_0, default=str_0)
        float_0 = -1334.4
        float_1 = 4067.82402
        number_0 = module_0.Number(minimum=float_1)
        any_0 = number_0.validate(float_0)
    except BaseException:
        pass

def test_case_72():
    try:
        dict_0 = {}
        bool_0 = False
        str_0 = '/37<X0jJtmJF16'
        field_0 = module_0.Field(title=str_0, description=str_0, allow_null=bool_0)
        dict_1 = {str_0: field_0, str_0: field_0, str_0: field_0}
        object_0 = module_0.Object(pattern_properties=dict_1, additional_properties=bool_0, **dict_0)
        any_0 = object_0.validate(dict_1)
    except BaseException:
        pass

def test_case_73():
    try:
        int_0 = -14
        field_0 = module_0.Field()
        str_0 = '9sFwAv'
        dict_0 = {str_0: field_0, str_0: field_0, str_0: field_0, str_0: field_0}
        object_0 = module_0.Object(pattern_properties=dict_0, min_properties=int_0, max_properties=int_0)
        any_0 = object_0.validate(dict_0)
    except BaseException:
        pass

def test_case_74():
    try:
        bool_0 = False
        str_0 = '/37<%hjetmJF16'
        field_0 = module_0.Field(title=str_0, description=str_0, allow_null=bool_0)
        dict_0 = {str_0: field_0, str_0: field_0, str_0: field_0}
        object_0 = module_0.Object(properties=dict_0)
        any_0 = object_0.validate(dict_0)
    except BaseException:
        pass

def test_case_75():
    try:
        int_0 = 995
        str_0 = ']Zpy'
        object_0 = module_0.Object(additional_properties=str_0, min_properties=int_0)
    except BaseException:
        pass

def test_case_76():
    try:
        str_0 = '5Sg>x?-lzbmS\rtsFW(h+'
        bool_0 = True
        field_0 = module_0.Field(title=str_0, allow_null=bool_0)
        list_0 = [field_0, field_0, field_0, field_0]
        union_0 = module_0.Union(list_0)
        list_1 = []
        bool_1 = True
        str_1 = '%BXA(4$6\x0c0U5\r4kMSs'
        bool_2 = False
        boolean_0 = module_0.Boolean(title=str_1, default=str_1, allow_null=bool_2)
        any_0 = boolean_0.validate(list_1, strict=bool_1)
    except BaseException:
        pass

def test_case_77():
    try:
        int_0 = 4
        float_0 = -803.0
        float_1 = -1334.4
        number_0 = module_0.Number(maximum=float_0, exclusive_maximum=float_1)
        any_0 = number_0.validate(int_0)
    except BaseException:
        pass

def test_case_78():
    try:
        field_0 = module_0.Field()
        choice_0 = module_0.Choice()
        text_0 = module_0.Text()
        array_0 = module_0.Array(field_0, choice_0, text_0)
    except BaseException:
        pass

def test_case_79():
    try:
        decimal_0 = module_1.Decimal()
        dict_0 = {decimal_0: decimal_0, decimal_0: decimal_0}
        number_0 = module_0.Number(multiple_of=dict_0)
    except BaseException:
        pass

def test_case_80():
    try:
        optional_0 = None
        object_0 = module_0.Object()
        none_type_0 = None
        bool_0 = True
        float_0 = -113.5402
        array_0 = module_0.Array(none_type_0, bool_0, optional_0, float_0)
    except BaseException:
        pass

def test_case_81():
    try:
        str_0 = ''
        str_1 = 'eMDQ\tGc7'
        bool_0 = True
        boolean_0 = module_0.Boolean(title=str_1, allow_null=bool_0)
        any_0 = boolean_0.validate(str_0)
        choice_0 = module_0.Choice()
        choice_1 = module_0.Choice(choices=choice_0)
    except BaseException:
        pass

def test_case_82():
    try:
        float_0 = 1461.952
        number_0 = module_0.Number(multiple_of=float_0)
        int_0 = -3973
        str_0 = 'C'
        any_0 = module_0.Any(title=str_0)
        decimal_0 = module_0.Decimal(exclusive_minimum=int_0, precision=any_0)
        int_1 = -1743
        any_1 = number_0.validate(int_1)
    except BaseException:
        pass

def test_case_83():
    try:
        str_0 = 'datetime'
        string_0 = module_0.String(format=str_0)
        any_0 = string_0.validate(str_0)
    except BaseException:
        pass

def test_case_84():
    try:
        bool_0 = False
        string_0 = module_0.String()
        array_0 = module_0.Array(string_0, bool_0)
        int_0 = 2
        str_0 = '2'
        var_0 = [bool_0, array_0, str_0, str_0, int_0]
        any_0 = array_0.validate(var_0)
    except BaseException:
        pass

def test_case_85():
    try:
        bool_0 = True
        field_0 = module_0.Field()
        field_1 = [field_0, field_0]
        array_0 = module_0.Array(field_1)
        any_0 = array_0.validate(field_1)
    except BaseException:
        pass

def test_case_86():
    try:
        string_0 = module_0.String()
        number_0 = module_0.Number()
        var_0 = [string_0, number_0]
        number_1 = module_0.Number()
        int_0 = 0
        int_1 = 10
        bool_0 = True
        array_0 = module_0.Array(var_0, number_1, int_0, int_1, bool_0)
        var_1 = []
        any_0 = array_0.validate(var_1)
    except BaseException:
        pass

def test_case_87():
    try:
        int_0 = 1
        str_0 = '[0-9]'
        string_0 = module_0.String(max_length=int_0, min_length=int_0, pattern=str_0)
        str_1 = '1'
        any_0 = string_0.validate(str_1)
        str_2 = 'date'
        string_1 = module_0.String(format=str_2)
        str_3 = '2000-01-01'
        any_1 = string_1.validate(str_3)
        str_4 = '12:34:56'
        any_2 = string_1.validate(str_4)
    except BaseException:
        pass

def test_case_88():
    try:
        bool_0 = False
        field_0 = module_0.Field()
        field_1 = [field_0]
        array_0 = module_0.Array(field_1)
        list_0 = [field_1, field_0, bool_0, bool_0]
        choice_0 = module_0.Choice(choices=list_0)
    except BaseException:
        pass

def test_case_89():
    try:
        string_0 = module_0.String()
        number_0 = module_0.Number()
        var_0 = [string_0, number_0]
        number_1 = module_0.Number()
        int_0 = 10
        bool_0 = True
        array_0 = module_0.Array(var_0, number_1, int_0, int_0, bool_0)
        var_1 = [bool_0]
        any_0 = array_0.validate(var_1)
    except BaseException:
        pass

def test_case_90():
    try:
        bool_0 = False
        field_0 = module_0.Field()
        field_1 = [field_0, field_0]
        array_0 = module_0.Array(field_1)
        any_0 = array_0.serialize(array_0)
    except BaseException:
        pass

def test_case_91():
    try:
        bool_0 = False
        field_0 = module_0.Field()
        field_1 = [field_0, field_0]
        array_0 = module_0.Array(field_1)
        any_0 = array_0.serialize(field_1)
        any_1 = array_0.validate(any_0)
    except BaseException:
        pass

def test_case_92():
    try:
        string_0 = module_0.String()
        integer_0 = module_0.Integer()
        var_0 = [string_0, integer_0, integer_0]
        union_0 = module_0.Union(var_0)
        any_0 = union_0.validate(union_0)
    except BaseException:
        pass

def test_case_93():
    try:
        str_0 = 'datetime'
        string_0 = module_0.String(format=str_0)
        any_0 = string_0.serialize(string_0)
    except BaseException:
        pass

def test_case_94():
    try:
        object_0 = module_0.Object()
        list_0 = []
        field_0 = module_0.Field()
        array_0 = module_0.Array(list_0, field_0)
        any_0 = array_0.validate(object_0)
    except BaseException:
        pass

def test_case_95():
    try:
        str_0 = 'hi'
        field_0 = module_0.Field(default=str_0)
        any_0 = field_0.get_default_value()
        var_0 = None
        field_1 = module_0.Field(default=var_0)
        any_1 = field_1.get_default_value()
        var_1 = lambda : str_0
        field_2 = module_0.Field(default=var_1)
        any_2 = field_2.get_default_value()
    except BaseException:
        pass

def test_case_96():
    try:
        dict_0 = {}
        bool_0 = False
        str_0 = 'K,K2ui\x0c.\tn$<74rx'
        field_0 = module_0.Field(title=str_0, description=str_0, allow_null=bool_0)
        dict_1 = {str_0: field_0, str_0: field_0, str_0: field_0, str_0: field_0, str_0: field_0, str_0: field_0}
        object_0 = module_0.Object(pattern_properties=dict_1, additional_properties=bool_0, **dict_0)
        any_0 = object_0.validate(dict_1, strict=bool_0)
    except BaseException:
        pass

def test_case_97():
    try:
        bool_0 = False
        field_0 = module_0.Field()
        field_1 = []
        array_0 = module_0.Array(field_1)
        boolean_0 = module_0.Boolean()
        array_1 = module_0.Array(field_0, array_0, bool_0)
        any_0 = array_1.validate(field_1)
        any_1 = array_1.validate(field_0)
    except BaseException:
        pass

def test_case_98():
    try:
        string_0 = module_0.String()
        string_1 = [string_0, string_0, string_0, string_0]
        union_0 = module_0.Union(string_1)
        integer_0 = module_0.Integer()
        var_0 = [union_0]
        union_1 = module_0.Union(var_0)
        text_0 = module_0.Text()
        str_0 = 'Md\'^!x7"m!'
        field_0 = module_0.Field(description=str_0, default=string_0)
        array_0 = module_0.Array(text_0, field_0)
        bool_0 = False
        any_0 = union_1.validate(string_1, bool_0)
    except BaseException:
        pass

def test_case_99():
    try:
        str_0 = None
        dict_0 = {str_0: str_0}
        object_0 = module_0.Object()
        any_0 = object_0.validate(dict_0)
    except BaseException:
        pass

def test_case_100():
    try:
        str_0 = 'key1'
        str_1 = 'key2'
        str_2 = 'value1'
        str_3 = 'value2'
        str_4 = {str_0: str_2, str_1: str_3}
        string_0 = module_0.String()
        string_1 = module_0.String()
        string_2 = {str_0: string_0, str_1: string_1}
        object_0 = module_0.Object(properties=string_2)
        any_0 = object_0.validate(str_4)
        string_3 = module_0.String()
        string_4 = module_0.String()
        string_5 = {str_0: string_3, str_1: string_4}
        bool_0 = True
        object_1 = module_0.Object(properties=string_5)
        var_0 = None
        any_1 = object_1.validate(var_0)
    except BaseException:
        pass