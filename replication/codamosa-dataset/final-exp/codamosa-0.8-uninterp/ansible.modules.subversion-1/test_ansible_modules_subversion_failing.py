# Automatically generated by Pynguin.
import ansible.modules.subversion as module_0

def test_case_0():
    try:
        var_0 = None
        subversion_0 = module_0.Subversion(var_0, var_0, var_0, var_0, var_0, var_0, var_0, var_0)
        var_1 = subversion_0.is_svn_repo()
    except BaseException:
        pass

def test_case_1():
    try:
        tuple_0 = ()
        set_0 = {tuple_0, tuple_0, tuple_0, tuple_0}
        str_0 = 'T'
        float_0 = 60.0
        subversion_0 = module_0.Subversion(tuple_0, tuple_0, set_0, str_0, str_0, str_0, set_0, float_0)
        var_0 = subversion_0.is_svn_repo()
    except BaseException:
        pass

def test_case_2():
    try:
        var_0 = None
        subversion_0 = module_0.Subversion(var_0, var_0, var_0, var_0, var_0, var_0, var_0, var_0)
        var_1 = subversion_0.checkout()
    except BaseException:
        pass

def test_case_3():
    try:
        var_0 = None
        subversion_0 = module_0.Subversion(var_0, var_0, var_0, var_0, var_0, var_0, var_0, var_0)
        var_1 = subversion_0.export()
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = ';%(omt@WwShD'
        list_0 = [str_0, str_0, str_0, str_0]
        bool_0 = False
        bool_1 = False
        set_0 = {bool_0}
        float_0 = None
        bool_2 = True
        subversion_0 = module_0.Subversion(bool_0, str_0, bool_1, set_0, float_0, bool_2, str_0, bool_0)
        tuple_0 = (list_0, subversion_0, list_0)
        tuple_1 = (str_0,)
        bytes_0 = b'S\xc0\xf9\xb5\x83\xe2\xb2\xb6\xb1\xb6\x00\xb2}\t\x1ec\xf61'
        subversion_1 = module_0.Subversion(str_0, tuple_0, tuple_1, subversion_0, float_0, float_0, float_0, bytes_0)
        int_0 = -1482
        dict_0 = {}
        int_1 = -476
        subversion_2 = module_0.Subversion(subversion_1, subversion_0, subversion_0, int_0, dict_0, int_0, int_1, bytes_0)
        str_1 = '=R@|*^a;>mOP'
        int_2 = 443
        set_1 = set()
        bool_3 = False
        str_2 = 'Description:'
        list_1 = [str_2]
        str_3 = 'f(S>!b?~2>%\\bfEq'
        subversion_3 = module_0.Subversion(str_1, int_2, set_1, bool_3, list_1, list_1, bool_3, str_3)
        var_0 = subversion_3.export(subversion_2)
    except BaseException:
        pass

def test_case_5():
    try:
        var_0 = None
        subversion_0 = module_0.Subversion(var_0, var_0, var_0, var_0, var_0, var_0, var_0, var_0)
        var_1 = subversion_0.switch()
    except BaseException:
        pass

def test_case_6():
    try:
        var_0 = None
        subversion_0 = module_0.Subversion(var_0, var_0, var_0, var_0, var_0, var_0, var_0, var_0)
        var_1 = subversion_0.update()
    except BaseException:
        pass

def test_case_7():
    try:
        tuple_0 = ()
        bool_0 = False
        dict_0 = {tuple_0: bool_0}
        int_0 = 4705
        bytes_0 = b'L\xb23\x1a{d\xaf\xd6\xb7'
        list_0 = [dict_0, int_0, bytes_0, tuple_0]
        bool_1 = False
        float_0 = None
        subversion_0 = module_0.Subversion(bytes_0, int_0, tuple_0, bool_0, dict_0, list_0, bool_1, float_0)
        dict_1 = {bool_0: bool_1}
        subversion_1 = module_0.Subversion(dict_0, int_0, tuple_0, bool_0, subversion_0, bool_0, dict_1, bool_1)
        dict_2 = {tuple_0: tuple_0, tuple_0: subversion_1}
        str_0 = ''
        set_0 = {str_0, subversion_0}
        subversion_2 = module_0.Subversion(dict_2, str_0, dict_0, set_0, dict_2, int_0, tuple_0, subversion_0)
        var_0 = subversion_2.revert()
    except BaseException:
        pass

def test_case_8():
    try:
        var_0 = None
        subversion_0 = module_0.Subversion(var_0, var_0, var_0, var_0, var_0, var_0, var_0, var_0)
        var_1 = subversion_0.needs_update()
    except BaseException:
        pass

def test_case_9():
    try:
        var_0 = None
        subversion_0 = module_0.Subversion(var_0, var_0, var_0, var_0, var_0, var_0, var_0, var_0)
        var_1 = subversion_0.get_remote_revision()
    except BaseException:
        pass

def test_case_10():
    try:
        dict_0 = {}
        float_0 = -1030.0
        str_0 = '=B3;iTPc\x0cs8j.QwkR1l'
        tuple_0 = (str_0,)
        bytes_0 = b''
        bytes_1 = b'\xb1'
        list_0 = [bytes_1]
        int_0 = 3088
        str_1 = '_(2].x'
        str_2 = 'ansible.modules.subversion'
        str_3 = '|JlQ?~j_!1eGI0\\[]FS;'
        bytes_2 = b'\xfd\xee:f\x96@ \xb1\xc1c'
        subversion_0 = module_0.Subversion(list_0, int_0, str_1, str_2, str_3, int_0, int_0, bytes_2)
        int_1 = 2471
        subversion_1 = module_0.Subversion(float_0, tuple_0, bytes_0, float_0, bytes_1, dict_0, subversion_0, int_1)
        var_0 = subversion_1.has_local_mods()
    except BaseException:
        pass

def test_case_11():
    try:
        var_0 = None
        subversion_0 = module_0.Subversion(var_0, var_0, var_0, var_0, var_0, var_0, var_0, var_0)
        var_1 = subversion_0.checkout(subversion_0)
    except BaseException:
        pass