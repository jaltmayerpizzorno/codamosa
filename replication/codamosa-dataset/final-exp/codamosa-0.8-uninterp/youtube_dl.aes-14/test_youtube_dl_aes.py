# Automatically generated by Pynguin.
import youtube_dl.aes as module_0
import youtube_dl.utils as module_1

def test_case_0():
    pass

def test_case_1():
    str_0 = 'Vn9XbptCpVZ1DOtFf5g5+nKqJ85YnhcS5PiqVF9Kk+4='
    int_0 = 16
    var_0 = module_0.aes_decrypt_text(str_0, str_0, int_0)

def test_case_2():
    bytes_0 = b'*\xa7\x10}\xfat.LL\x0e'
    var_0 = module_0.aes_encrypt(bytes_0, bytes_0)

def test_case_3():
    list_0 = []
    bool_0 = False
    tuple_0 = (bool_0,)
    set_0 = None
    tuple_1 = (tuple_0, bool_0, set_0, tuple_0)
    var_0 = module_0.rijndael_mul(tuple_1, bool_0)
    var_1 = module_0.sub_bytes_inv(list_0)

def test_case_4():
    bytes_0 = b'test'
    var_0 = module_1.bytes_to_intlist(bytes_0)
    int_0 = 0
    var_1 = len(var_0)
    int_1 = [int_0, int_0, int_0, int_0, int_0, int_0, int_0, int_0, int_0, int_0, int_0, int_0, int_0, int_0, int_0, int_0]
    int_2 = [int_0, int_0, int_0, int_0, int_0, int_0, int_0, int_0, int_0, int_0, int_0, int_0, int_0, int_0, int_0, int_0]
    var_2 = module_0.aes_cbc_decrypt(var_0, int_1, int_2)
    var_3 = print(var_2)

def test_case_5():
    tuple_0 = ()
    var_0 = module_0.inc(tuple_0)

def test_case_6():
    int_0 = 1
    int_1 = 2
    int_2 = 3
    int_3 = 4
    int_4 = 5
    int_5 = [int_0, int_1, int_2, int_3, int_4]
    var_0 = module_0.inc(int_5)
    int_6 = 255
    int_7 = [int_0, int_1, int_2, int_3, int_6]
    var_1 = module_0.inc(int_7)
    int_8 = 0
    int_9 = [int_0, int_1, int_2, int_3, int_8]
    var_2 = module_0.inc(int_9)

def test_case_7():
    bytes_0 = b'AuthHeader'
    int_0 = 16
    var_0 = range(int_0)
    var_1 = [i for i in bytes_0]
    var_2 = [i for i in var_0]
    var_3 = module_0.aes_cbc_encrypt(var_1, var_1, var_2)
    var_4 = module_1.intlist_to_bytes(var_3)