# Automatically generated by Pynguin.
import ansible.modules.subversion as module_0

def test_case_0():
    try:
        var_0 = None
        subversion_0 = module_0.Subversion(var_0, var_0, var_0, var_0, var_0, var_0, var_0, var_0)
        var_1 = subversion_0.get_remote_revision()
    except BaseException:
        pass

def test_case_1():
    try:
        bool_0 = False
        int_0 = 802
        bytes_0 = b's\xe7A\xa0\xb3\xc6'
        dict_0 = {bool_0: bool_0, bytes_0: bytes_0, bool_0: int_0}
        str_0 = 'k86\nUY-0A'
        subversion_0 = module_0.Subversion(bool_0, int_0, bytes_0, dict_0, bool_0, str_0, int_0, dict_0)
        var_0 = subversion_0.export()
    except BaseException:
        pass

def test_case_2():
    try:
        bool_0 = True
        int_0 = 802
        bytes_0 = b's\xe7A\xa0\xb3\xc6'
        dict_0 = {bool_0: bool_0, bytes_0: bytes_0, bool_0: int_0}
        str_0 = 'k86\nUY-0A'
        subversion_0 = module_0.Subversion(bool_0, int_0, bytes_0, dict_0, bool_0, str_0, int_0, dict_0)
        var_0 = subversion_0.export()
    except BaseException:
        pass

def test_case_3():
    try:
        var_0 = None
        subversion_0 = module_0.Subversion(var_0, var_0, var_0, var_0, var_0, var_0, var_0, var_0)
        var_1 = subversion_0.is_svn_repo()
    except BaseException:
        pass

def test_case_4():
    try:
        var_0 = None
        subversion_0 = module_0.Subversion(var_0, var_0, var_0, var_0, var_0, var_0, var_0, var_0)
        var_1 = subversion_0.checkout()
    except BaseException:
        pass

def test_case_5():
    try:
        var_0 = None
        subversion_0 = module_0.Subversion(var_0, var_0, var_0, var_0, var_0, var_0, var_0, var_0)
        var_1 = subversion_0.export()
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = "EnqS4=iZH(\x0b\r\\%9j'h]"
        tuple_0 = None
        dict_0 = {str_0: str_0, str_0: str_0, tuple_0: str_0}
        bool_0 = None
        float_0 = 2735.89
        int_0 = 425
        list_0 = [str_0, int_0]
        subversion_0 = module_0.Subversion(bool_0, float_0, int_0, dict_0, dict_0, float_0, list_0, dict_0)
        int_1 = -5227
        str_1 = None
        str_2 = None
        subversion_1 = module_0.Subversion(subversion_0, list_0, int_1, subversion_0, dict_0, str_1, str_2, subversion_0)
        list_1 = [tuple_0, str_0, dict_0, subversion_1]
        bytes_0 = b'\x14\xceI\x81\xad'
        bool_1 = False
        subversion_2 = module_0.Subversion(dict_0, list_1, bytes_0, str_2, str_0, float_0, str_0, bool_1)
        var_0 = subversion_2.switch()
    except BaseException:
        pass

def test_case_7():
    try:
        bool_0 = False
        int_0 = 802
        bytes_0 = b's\xe7A\xa0\xb3\xc6'
        dict_0 = {bool_0: bool_0, bytes_0: bytes_0, bool_0: int_0}
        bool_1 = True
        str_0 = 'k86\nUY-0A'
        subversion_0 = module_0.Subversion(bool_0, int_0, bytes_0, dict_0, bool_1, str_0, int_0, dict_0)
        bool_2 = False
        set_0 = {bool_2}
        bytes_1 = b'\xf9\x08p\x1a\xd8\x08`\xdd'
        subversion_1 = module_0.Subversion(bool_2, dict_0, subversion_0, str_0, bytes_0, set_0, bytes_1, dict_0)
        var_0 = subversion_1.update()
    except BaseException:
        pass

def test_case_8():
    try:
        dict_0 = {}
        bytes_0 = b'\xd4\xd8\x7f\xd7e\x1e\x00_$'
        set_0 = {bytes_0, bytes_0, bytes_0}
        int_0 = -1184
        str_0 = 'xgWeqX)k(`)~acVe10'
        bytes_1 = b'B\xa9\x06M0)\xb0/\xc1\xb3\x90uo\xf7W0'
        list_0 = [bytes_0, bytes_1, int_0, dict_0]
        bool_0 = True
        subversion_0 = module_0.Subversion(dict_0, bytes_0, set_0, bytes_0, int_0, str_0, list_0, bool_0)
        var_0 = subversion_0.revert()
    except BaseException:
        pass

def test_case_9():
    try:
        bool_0 = True
        int_0 = 802
        bytes_0 = b's\xe7A\xa0\xb3\xc6'
        dict_0 = {bool_0: bool_0, bytes_0: bytes_0, bool_0: int_0}
        bool_1 = True
        str_0 = 'k86\nUY-0A'
        subversion_0 = module_0.Subversion(bool_0, int_0, bytes_0, dict_0, bool_1, str_0, int_0, dict_0)
        var_0 = subversion_0.needs_update()
    except BaseException:
        pass

def test_case_10():
    try:
        bytes_0 = b"\xdf\xae'\xf4UH\xac\xaeg\xc3\x9c\xd7\xba\xf1\r\xe2"
        float_0 = -267.523521
        str_0 = 'Ss*Kk-Z\njczllIk+_+\\a'
        int_0 = 2
        dict_0 = {str_0: int_0, float_0: float_0, str_0: str_0}
        float_1 = -3559.4404
        bytes_1 = b'\x8e\xa9\n\x8aI\xcd\xa2_x6e\xe0\xf3\xa1\x02'
        subversion_0 = module_0.Subversion(bytes_0, bytes_0, float_0, str_0, dict_0, int_0, float_1, bytes_1)
        var_0 = subversion_0.has_local_mods()
    except BaseException:
        pass

def test_case_11():
    try:
        bool_0 = True
        int_0 = 802
        dict_0 = {bool_0: int_0}
        str_0 = 'k9UY-0A'
        subversion_0 = module_0.Subversion(bool_0, int_0, dict_0, bool_0, bool_0, str_0, int_0, dict_0)
        var_0 = subversion_0.export(int_0)
    except BaseException:
        pass

def test_case_12():
    try:
        var_0 = None
        subversion_0 = module_0.Subversion(var_0, var_0, var_0, var_0, var_0, var_0, var_0, var_0)
        var_1 = subversion_0.checkout(subversion_0)
    except BaseException:
        pass