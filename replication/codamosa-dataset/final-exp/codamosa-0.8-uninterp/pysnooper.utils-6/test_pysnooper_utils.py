# Automatically generated by Pynguin.
import pysnooper.utils as module_0

def test_case_0():
    pass

def test_case_1():
    str_0 = 'y@gu{QzH.Z`c\\mn\n\r4`'
    var_0 = module_0.shitcode(str_0)

def test_case_2():
    list_0 = []
    var_0 = module_0.get_shortish_repr(list_0)

def test_case_3():
    str_0 = '9%!\tn7XY||4I \\\n/S1'
    var_0 = module_0.normalize_repr(str_0)

def test_case_4():
    tuple_0 = None
    var_0 = module_0.truncate(tuple_0, tuple_0)

def test_case_5():
    str_0 = "Z1a8Lbn<\x0c`A'\r\t4-u(ti"
    var_0 = module_0.shitcode(str_0)
    str_1 = "4]'{"
    dict_0 = {str_1: str_1, str_1: str_1, str_1: str_1, str_1: str_1}
    var_1 = module_0.get_shortish_repr(dict_0)
    list_0 = [str_1]
    var_2 = module_0.ensure_tuple(list_0)

def test_case_6():
    str_0 = "Z1a8Lbn<\x0c`A'\r\t4-u(ti"
    var_0 = module_0.shitcode(str_0)
    str_1 = "4]'{"
    list_0 = None
    set_0 = {str_1}
    list_1 = [set_0, list_0]
    var_1 = module_0.ensure_tuple(list_1)
    tuple_0 = ()
    var_2 = module_0.shitcode(tuple_0)
    var_3 = module_0.get_shortish_repr(tuple_0)
    str_2 = ')~gr'
    var_4 = module_0.shitcode(str_2)
    complex_0 = None
    var_5 = module_0.ensure_tuple(complex_0)
    str_3 = 'W<'
    var_6 = module_0.normalize_repr(str_3)
    list_2 = [str_1]
    var_7 = module_0.ensure_tuple(list_2)
    str_4 = '`overwrite=True` can only be used when writing content to file.'
    float_0 = None
    str_5 = ']FRQ`ZS/M7O.'
    var_8 = module_0.get_shortish_repr(str_4, tuple_0, float_0, str_5)

def test_case_7():
    str_0 = '\x01\x02\x03'
    var_0 = module_0.shitcode(str_0)
    str_1 = '\x01\x02ÿ'
    var_1 = module_0.shitcode(str_1)
    str_2 = '\x01\x02ÿff'
    var_2 = module_0.shitcode(str_2)
    str_3 = '\x01\x02\u0fff'
    var_3 = module_0.shitcode(str_3)
    str_4 = 'abc\\!'
    var_4 = module_0.shitcode(str_4)
    str_5 = 'ë'
    var_5 = module_0.shitcode(str_5)
    str_6 = 'ë\x01\n'
    var_6 = module_0.shitcode(str_6)
    str_7 = 'ë\x01\nÚ'
    var_7 = module_0.shitcode(str_7)