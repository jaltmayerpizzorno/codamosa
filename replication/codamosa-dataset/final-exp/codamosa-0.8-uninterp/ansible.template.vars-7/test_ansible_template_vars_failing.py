# Automatically generated by Pynguin.
import ansible.template.vars as module_0

def test_case_0():
    try:
        int_0 = 1476
        str_0 = '\x0b(n'
        dict_0 = {str_0: str_0, int_0: int_0}
        ansible_j2_vars_0 = module_0.AnsibleJ2Vars(int_0, str_0, dict_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'Bx@p?.?]VU]r$1 '
        ansible_j2_vars_0 = module_0.AnsibleJ2Vars(str_0, str_0)
        var_0 = ansible_j2_vars_0.__contains__(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = "9Z'iBj7`MQ[fvZaHal)"
        dict_0 = {str_0: str_0}
        str_1 = 'deprecations'
        ansible_j2_vars_0 = module_0.AnsibleJ2Vars(dict_0, str_1)
        var_0 = ansible_j2_vars_0.__iter__()
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'\xcb\x01\xd7\xd7\xf8.\xa9\xcf\xe2\x06y\xbb\x82\x0c\xfek\x82'
        bool_0 = False
        str_0 = 'release'
        dict_0 = {str_0: str_0}
        ansible_j2_vars_0 = module_0.AnsibleJ2Vars(bytes_0, bool_0, dict_0)
        var_0 = ansible_j2_vars_0.__len__()
    except BaseException:
        pass

def test_case_4():
    try:
        bool_0 = True
        int_0 = 404
        set_0 = {bool_0, bool_0, int_0}
        ansible_j2_vars_0 = module_0.AnsibleJ2Vars(bool_0, set_0)
        var_0 = ansible_j2_vars_0.__getitem__(bool_0)
    except BaseException:
        pass

def test_case_5():
    try:
        float_0 = 57.3951
        str_0 = 'Ij9i)VID'
        str_1 = '8!wp'
        dict_0 = {str_1: str_1, str_0: str_0}
        ansible_j2_vars_0 = module_0.AnsibleJ2Vars(float_0, str_0, dict_0)
        var_0 = ansible_j2_vars_0.__getitem__(str_0)
        var_1 = ansible_j2_vars_0.__contains__(str_1)
        bool_0 = None
        var_2 = ansible_j2_vars_0.add_locals(bool_0)
        bool_1 = True
        bytes_0 = None
        tuple_0 = (bytes_0, dict_0)
        int_0 = None
        ansible_j2_vars_1 = module_0.AnsibleJ2Vars(tuple_0, int_0)
        var_3 = ansible_j2_vars_1.__contains__(bool_1)
    except BaseException:
        pass

def test_case_6():
    try:
        float_0 = 57.3951
        str_0 = '}\t>btoo\t\r1;X`M'
        dict_0 = {str_0: float_0, str_0: str_0, str_0: str_0}
        ansible_j2_vars_0 = module_0.AnsibleJ2Vars(float_0, str_0, dict_0)
        bytes_0 = b''
        var_0 = ansible_j2_vars_0.__contains__(str_0)
        var_1 = ansible_j2_vars_0.__contains__(bytes_0)
    except BaseException:
        pass