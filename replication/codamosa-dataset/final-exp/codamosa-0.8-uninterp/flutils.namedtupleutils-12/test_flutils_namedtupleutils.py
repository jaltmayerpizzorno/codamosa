# Automatically generated by Pynguin.
import types as module_0
import flutils.namedtupleutils as module_1
import collections as module_2

def test_case_0():
    simple_namespace_0 = module_0.SimpleNamespace()
    var_0 = module_1.to_namedtuple(simple_namespace_0)

def test_case_1():
    bool_0 = False
    int_0 = None
    str_0 = ',9uCW?91)\n<Y\x0c\\9@'
    tuple_0 = (bool_0, int_0, str_0)
    var_0 = module_1.to_namedtuple(tuple_0)

def test_case_2():
    str_0 = 'jW:3D'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    simple_namespace_0 = module_0.SimpleNamespace(**dict_0)
    var_0 = module_1.to_namedtuple(simple_namespace_0)

def test_case_3():
    str_0 = 'a'
    int_0 = 1
    int_1 = {str_0: int_0}
    var_0 = module_1.to_namedtuple(int_1)
    var_1 = hasattr(var_0, str_0)

def test_case_4():
    str_0 = 'h'
    int_0 = 1
    int_1 = {str_0: int_0}
    var_0 = module_1.to_namedtuple(int_1)
    list_0 = [var_0, int_0]
    var_1 = module_1.to_namedtuple(list_0)

def test_case_5():
    str_0 = 'underscore_to_cmel'
    int_0 = 33
    dict_0 = {int_0: int_0, str_0: str_0, str_0: int_0}
    tuple_0 = ()
    var_0 = module_1.to_namedtuple(tuple_0)
    float_0 = None
    tuple_1 = (str_0, int_0, dict_0, float_0)
    var_1 = module_1.to_namedtuple(tuple_1)
    var_2 = module_1.to_namedtuple(tuple_1)

def test_case_6():
    str_0 = 'YNA]Mt=T\t>h;mI%'
    int_0 = 20
    dict_0 = {int_0: int_0, str_0: str_0, str_0: str_0, str_0: int_0}
    float_0 = None
    tuple_0 = (str_0, int_0, dict_0, float_0)
    var_0 = module_1.to_namedtuple(tuple_0)
    var_1 = module_1.to_namedtuple(tuple_0)
    var_2 = module_1.to_namedtuple(tuple_0)
    var_3 = module_1.to_namedtuple(tuple_0)
    list_0 = [int_0, var_3, float_0]
    var_4 = module_1.to_namedtuple(list_0)

def test_case_7():
    str_0 = 'NamedTuple'
    str_1 = 'a b'
    var_0 = module_2.namedtuple(str_0, str_1)
    int_0 = 1
    int_1 = 2
    float_0 = -151.823631
    ordered_dict_0 = module_2.OrderedDict()
    str_2 = 'E)#wMT*Mwb('
    tuple_0 = (float_0, float_0, ordered_dict_0, str_2)
    var_1 = module_1.to_namedtuple(tuple_0)
    int_2 = (int_0, int_1)
    var_2 = module_1.to_namedtuple(int_2)
    int_3 = 3
    int_4 = [int_0, int_1, int_3]
    var_3 = module_1.to_namedtuple(int_4)
    int_5 = [int_0, int_1, int_3]
    var_4 = module_1.to_namedtuple(int_5)

def test_case_8():
    str_0 = '\x0bnderscore_to_camel'
    str_1 = 'W[|\rN8l,\x0c^Fq`'
    dict_0 = {str_0: str_0, str_1: str_0}
    var_0 = module_1.to_namedtuple(dict_0)
    int_0 = 20
    dict_1 = {int_0: int_0, str_0: int_0}
    float_0 = None
    tuple_0 = (str_0, int_0, dict_1, float_0)
    var_1 = module_1.to_namedtuple(tuple_0)
    var_2 = module_1.to_namedtuple(tuple_0)
    var_3 = module_1.to_namedtuple(tuple_0)
    var_4 = module_1.to_namedtuple(tuple_0)
    var_5 = module_1.to_namedtuple(tuple_0)
    var_6 = module_1.to_namedtuple(tuple_0)
    var_7 = module_1.to_namedtuple(tuple_0)
    list_0 = [int_0, var_6, float_0]
    var_8 = module_1.to_namedtuple(list_0)
    simple_namespace_0 = module_0.SimpleNamespace(**dict_0)
    var_9 = module_1.to_namedtuple(tuple_0)