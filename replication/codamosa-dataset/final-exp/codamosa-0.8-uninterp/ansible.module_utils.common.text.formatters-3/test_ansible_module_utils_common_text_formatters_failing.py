# Automatically generated by Pynguin.
import ansible.module_utils.common.text.formatters as module_0

def test_case_0():
    try:
        list_0 = None
        var_0 = module_0.lenient_lowercase(list_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'r^F\\0zs$i d\x0b\tNR&K='
        var_0 = module_0.human_to_bytes(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        int_0 = 1928
        str_0 = '\x0cl2'
        dict_0 = {str_0: str_0, str_0: str_0}
        var_0 = module_0.human_to_bytes(int_0, str_0, dict_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'\xd1\x7f\xb0\xa5`\xa6\xddl\xeb\x87\xd1\xd3\xbc\x81\x13\xfa0\xaf9]'
        var_0 = module_0.bytes_to_human(bytes_0)
    except BaseException:
        pass

def test_case_4():
    try:
        dict_0 = None
        dict_1 = {dict_0: dict_0, dict_0: dict_0, dict_0: dict_0}
        tuple_0 = (dict_0, dict_1)
        float_0 = 3747.31
        var_0 = module_0.bytes_to_human(tuple_0, float_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'next'
        tuple_0 = (str_0,)
        str_1 = '_nvpQ8b 5}Gb2'
        float_0 = 3090.569914
        var_0 = module_0.bytes_to_human(tuple_0, str_1, float_0)
    except BaseException:
        pass

def test_case_6():
    try:
        bytes_0 = b'\xc3\xf1k[\x1du\xa3L(\xd4\x0e\xf9Hr\x0f'
        var_0 = module_0.lenient_lowercase(bytes_0)
        str_0 = 'hvod'
        int_0 = 2137
        var_1 = module_0.bytes_to_human(str_0, int_0, bytes_0)
    except BaseException:
        pass

def test_case_7():
    try:
        bool_0 = True
        int_0 = 1582
        bytes_0 = None
        var_0 = module_0.bytes_to_human(bool_0, bytes_0)
        var_1 = module_0.human_to_bytes(var_0, int_0)
        list_0 = [int_0, bool_0]
        var_2 = module_0.human_to_bytes(list_0)
    except BaseException:
        pass

def test_case_8():
    try:
        bool_0 = True
        int_0 = 1582
        var_0 = module_0.bytes_to_human(int_0)
        bytes_0 = None
        var_1 = module_0.bytes_to_human(bool_0, bytes_0)
        var_2 = module_0.human_to_bytes(var_1, int_0)
        var_3 = module_0.human_to_bytes(var_1, bytes_0, var_2)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = '2'
        var_0 = module_0.human_to_bytes(str_0)
        str_1 = '2.15'
        var_1 = module_0.human_to_bytes(str_1)
        str_2 = '2M'
        var_2 = module_0.human_to_bytes(str_2)
        str_3 = '2Mb'
        var_3 = module_0.human_to_bytes(str_3)
    except BaseException:
        pass