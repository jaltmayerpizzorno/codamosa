# Automatically generated by Pynguin.
import ansible.parsing.utils.addresses as module_0

def test_case_0():
    try:
        set_0 = set()
        var_0 = module_0.parse_address(set_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '<S'
        var_0 = module_0.parse_address(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'x'
        var_0 = module_0.parse_address(str_0)
        int_0 = -414
        float_0 = -1974.297922
        str_1 = None
        list_0 = None
        tuple_0 = (float_0, str_1, list_0)
        dict_0 = {int_0: str_0, int_0: var_0, int_0: var_0, int_0: tuple_0}
        tuple_1 = (dict_0, list_0)
        var_1 = module_0.parse_address(str_0, tuple_1)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '[::1]:22'
        var_0 = module_0.parse_address(str_0)
        str_1 = '[::1]'
        var_1 = module_0.parse_address(str_1)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = '[::1]:22'
        var_0 = module_0.parse_address(str_0)
        str_1 = '[9:1]'
        var_1 = module_0.parse_address(str_0)
        var_2 = module_0.parse_address(str_1)
    except BaseException:
        pass