# Automatically generated by Pynguin.
import ansible.module_utils.common.text.converters as module_0

def test_case_0():
    try:
        set_0 = set()
        bool_0 = True
        var_0 = module_0.to_bytes(set_0, bool_0)
    except BaseException:
        pass

def test_case_1():
    try:
        float_0 = 1.0
        list_0 = [float_0, float_0]
        var_0 = module_0.jsonify(list_0)
        str_0 = 'uG&&\\_|#7}t9<2'
        var_1 = module_0.container_to_bytes(str_0, str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        float_0 = 1000.0
        bool_0 = True
        tuple_0 = None
        bool_1 = False
        str_0 = 'M(ml0bd'
        tuple_1 = (tuple_0, bool_1, str_0)
        dict_0 = {}
        str_1 = '-vYehIQ'
        int_0 = 1142
        str_2 = 'r3z"^RJ*%j\\r?LA(G'
        dict_1 = {str_1: tuple_0, str_1: int_0, str_2: str_0}
        list_0 = [float_0, str_0, dict_0, dict_1]
        var_0 = module_0.to_text(float_0, bool_0, tuple_1, list_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'tb?zFBquw)M$`9#'
        bool_0 = False
        var_0 = module_0.to_text(bool_0)
        var_1 = module_0.to_text(str_0)
        str_1 = '0Jh9W!B*xFD&j6k+\r'
        float_0 = 0.5
        list_0 = [bool_0]
        var_2 = module_0.container_to_bytes(list_0)
        int_0 = -403
        list_1 = [int_0]
        var_3 = module_0.container_to_text(int_0, list_1)
        var_4 = module_0.to_bytes(str_1, float_0)
    except BaseException:
        pass

def test_case_4():
    try:
        int_0 = 8
        var_0 = module_0.container_to_text(int_0)
        str_0 = 'M(ml0bd'
        var_1 = module_0.to_bytes(int_0, str_0, str_0, str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        dict_0 = {}
        var_0 = module_0.jsonify(dict_0)
        bytes_0 = b'\xb0\xbd\x0b\x06A\x9c\xc7\x07Qo\x0f\xc9\x7f\x1a\xba\x82'
        int_0 = -3366
        var_1 = module_0.to_text(int_0)
        str_0 = 'GcQK]V+wLo4o~f|L}{C8'
        bool_0 = False
        list_0 = []
        set_0 = set()
        var_2 = module_0.container_to_bytes(list_0, list_0, set_0)
        var_3 = module_0.to_bytes(bytes_0, str_0, bool_0)
        float_0 = None
        var_4 = module_0.container_to_text(dict_0)
        set_1 = {float_0, float_0, str_0, var_3}
        bytes_1 = b' \xeco\x0f\x0f\x1b,\xb7\xe98\x86\xb2\x16'
        list_1 = [set_1, bytes_1, var_3]
        dict_1 = None
        var_5 = module_0.container_to_bytes(dict_1)
        var_6 = module_0.container_to_bytes(dict_0)
        var_7 = module_0.jsonify(list_1)
    except BaseException:
        pass

def test_case_6():
    try:
        float_0 = 1000.0
        bool_0 = True
        tuple_0 = None
        str_0 = 'M(ml0bd'
        dict_0 = {}
        str_1 = '-vYehIQ'
        int_0 = 1142
        str_2 = 'r3z"^RJ*%j\\r?LA(G'
        dict_1 = {str_1: tuple_0, str_1: int_0, str_2: str_0}
        list_0 = [float_0, str_0, dict_0, dict_1]
        var_0 = module_0.to_text(float_0, bool_0, tuple_0, list_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'abc'
        var_0 = module_0.to_bytes(str_0)
        var_1 = module_0.to_bytes(str_0)
        var_2 = object()
        var_3 = module_0.to_bytes(var_2)
        var_4 = repr(var_2)
        str_1 = 'Â£'
        str_2 = 'ascii'
        str_3 = 'strict'
        var_5 = module_0.to_bytes(str_1, str_2, str_3, str_3)
    except BaseException:
        pass