# Automatically generated by Pynguin.
import ansible.plugins.action.assert as module_0

def test_case_0():
    try:
        str_0 = ' C(bEt_s}VB`>%={i'
        float_0 = -1205.91
        set_0 = {float_0, str_0, float_0, str_0}
        str_1 = '-'
        int_0 = 615
        tuple_0 = (str_0, set_0, str_1, int_0)
        bytes_0 = b'\xeb\x88)\xe7\xa4\xf1'
        str_2 = '5lyd'
        int_1 = 1116
        action_module_0 = module_0.ActionModule(tuple_0, bytes_0, str_2, int_0, str_1, int_1)
        str_3 = ''
        action_module_1 = module_0.ActionModule(str_0, float_0, action_module_0, set_0, str_3, float_0)
        var_0 = action_module_1.run()
    except BaseException:
        pass

def test_case_1():
    try:
        dict_0 = {}
        set_0 = set()
        int_0 = None
        list_0 = [set_0]
        str_0 = 'owTk\r>'
        dict_1 = None
        float_0 = 100.0
        str_1 = 'refs/tags/'
        bool_0 = True
        str_2 = '3J/H+9"](J^S|aebq"}'
        action_module_0 = module_0.ActionModule(dict_0, dict_1, float_0, str_1, bool_0, str_2)
        str_3 = 'WOcPOxi\x0cC\n]#\r1-o_vO&'
        str_4 = '- extracting %s to %s'
        tuple_0 = (str_4,)
        str_5 = '<'
        action_module_1 = module_0.ActionModule(str_3, tuple_0, list_0, int_0, str_5, set_0)
        action_module_2 = module_0.ActionModule(dict_0, int_0, str_0, action_module_1, action_module_1, int_0)
        var_0 = action_module_2.run(dict_0, action_module_0)
    except BaseException:
        pass