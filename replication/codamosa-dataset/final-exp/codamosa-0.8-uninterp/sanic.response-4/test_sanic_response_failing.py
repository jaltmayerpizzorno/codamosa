# Automatically generated by Pynguin.
import sanic.response as module_0
import pathlib as module_1
import sanic.models.protocol_types as module_2

def test_case_0():
    try:
        str_0 = '~LdRI{+xx='
        float_0 = 1.0
        h_t_t_p_response_0 = module_0.json(str_0, str_0, float_0)
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = 449
        str_0 = None
        dict_0 = {str_0: str_0, str_0: str_0}
        h_t_t_p_response_0 = module_0.html(str_0, int_0, dict_0)
    except BaseException:
        pass

def test_case_2():
    try:
        pure_path_0 = module_1.PurePath()
        int_0 = 3809
        h_t_t_p_response_0 = module_0.json(pure_path_0, int_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '>]p8aWTqS|e\ndZA['
        h_t_t_p_response_0 = module_0.text(str_0)
        h_t_t_p_response_1 = module_0.text(str_0)
        str_1 = 'deprecated'
        dict_0 = {str_0: str_0, str_1: str_0}
        h_t_t_p_response_2 = module_0.json(h_t_t_p_response_0, **dict_0)
    except BaseException:
        pass

def test_case_4():
    try:
        dict_0 = {}
        base_h_t_t_p_response_0 = None
        str_0 = '3'
        h_t_t_p_response_0 = module_0.file(str_0)
        str_1 = '"t$m'
        h_t_t_p_response_1 = module_0.raw(base_h_t_t_p_response_0, str_1)
        h_t_m_l_protocol_0 = module_2.HTMLProtocol(**dict_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = '.*?>)'
        h_t_t_p_response_0 = module_0.redirect(str_0)
        list_0 = [h_t_t_p_response_0]
        range_0 = module_2.Range(*list_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = "QdX{]*'"
        int_0 = 449
        str_1 = '\n        Create a new Blueprint Group\n\n        :param url_prefix: URL: to be prefixed before all the Blueprint Prefix\n        :param version: API Version for the blueprint group. This will be\n            inherited by each of the Blueprint\n        :param strict_slashes: URL Strict slash behavior indicator\n        '
        str_2 = None
        dict_0 = {str_0: str_1, str_2: str_0}
        h_t_t_p_response_0 = module_0.html(str_0, int_0, dict_0)
    except BaseException:
        pass

def test_case_7():
    try:
        pure_path_0 = module_1.PurePath()
        int_0 = 4096
        str_0 = None
        streaming_h_t_t_p_response_0 = module_0.file_stream(pure_path_0, int_0, int_0, str_0)
        str_1 = 'message'
        str_2 = 'u%t|$Vt+X>\tKaudnJ'
        h_t_t_p_response_0 = module_0.json(str_1, str_2)
        int_1 = 996
        dict_0 = {}
        str_3 = 'deprecated'
        h_t_t_p_response_1 = module_0.text(str_2, int_1, dict_0, str_3)
        bytes_0 = b'#\x18\xd4@8\xe5\xd7\xeb\x1e\x0c\xda\xe2.\x07{6d\x8d\xf6'
        str_4 = 'WebSocketProtocol'
        streaming_h_t_t_p_response_1 = module_0.file_stream(str_1, str_2, str_1, str_4)
        h_t_t_p_response_2 = module_0.redirect(str_1, bytes_0, str_1)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = None
        int_0 = 2862
        h_t_t_p_response_0 = module_0.text(str_0, int_0)
    except BaseException:
        pass