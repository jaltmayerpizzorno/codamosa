# Automatically generated by Pynguin.
import ansible.executor.task_result as module_0
import ansible.parsing.dataloader as module_1

def test_case_0():
    try:
        str_0 = '^YS=|EXxBCcK[!nJn^Q'
        set_0 = {str_0, str_0, str_0}
        task_result_0 = module_0.TaskResult(str_0, set_0, str_0)
        var_0 = task_result_0.clean_copy()
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'F.6'
        bytes_0 = b'\xf8F8\xa4hS\x01\x86\xdeII\x98q\x99\xda\xa4\xdd\xec'
        str_1 = 'Collection tar file member {member!s} does not contain a valid json string.'
        task_result_0 = module_0.TaskResult(str_0, bytes_0, str_1)
        var_0 = task_result_0.is_failed()
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'result'
        dict_0 = {str_0: str_0}
        task_result_0 = module_0.TaskResult(dict_0, dict_0, dict_0)
        var_0 = task_result_0.is_changed()
        str_1 = 'nam<e'
        var_1 = task_result_0.needs_debugger()
        str_2 = None
        task_result_1 = module_0.TaskResult(task_result_0, str_2, dict_0, str_1)
        var_2 = task_result_1.clean_copy()
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'on_failed'
        bool_0 = False
        var_0 = dict(debugger=str_0, ignore_errors=bool_0)
        var_1 = dict(failed=var_0)
        str_1 = 'host'
        task_result_0 = module_0.TaskResult(str_1, str_1, var_1, var_0)
        var_2 = task_result_0.needs_debugger(bool_0)
        data_loader_0 = module_1.DataLoader()
        var_3 = task_result_0.clean_copy()
    except BaseException:
        pass