# Automatically generated by Pynguin.
import httpie.output.streams as module_0
import httpie.output.processing as module_1

def test_case_0():
    try:
        bool_0 = True
        base_stream_0 = module_0.BaseStream(bool_0, bool_0, bool_0, bool_0)
        var_0 = list(base_stream_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bool_0 = True
        bool_1 = None
        base_stream_0 = module_0.BaseStream(bool_0, bool_1, bool_0, bool_0)
        var_0 = list(base_stream_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'u0@p`To\t\nujDW*\n|QO7'
        dict_0 = {str_0: str_0}
        raw_stream_0 = module_0.RawStream(**dict_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bool_0 = True
        encoded_stream_0 = module_0.EncodedStream(bool_0)
    except BaseException:
        pass

def test_case_4():
    try:
        conversion_0 = module_1.Conversion()
        list_0 = []
        str_0 = 'w.r4Vw8yF=# ;Bs1-\riX'
        str_1 = 'L=3"J_G'
        str_2 = ' ?o7?{#'
        dict_0 = {str_1: str_0, str_1: conversion_0, str_0: list_0, str_2: str_2}
        formatting_0 = module_1.Formatting(list_0, **dict_0)
        pretty_stream_0 = module_0.PrettyStream(conversion_0, formatting_0)
    except BaseException:
        pass

def test_case_5():
    try:
        var_0 = None
        bool_0 = False
        base_stream_0 = module_0.BaseStream(var_0, bool_0, bool_0, var_0)
    except BaseException:
        pass