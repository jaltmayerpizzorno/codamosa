# Automatically generated by Pynguin.
import pymonet.either as module_0
import builtins as module_1

def test_case_0():
    pass

def test_case_1():
    str_0 = 'We can fly'
    right_0 = module_0.Right(str_0)

def test_case_2():
    object_0 = module_1.object()
    str_0 = '=?V'
    either_0 = module_0.Either(str_0)
    bool_0 = either_0.__eq__(object_0)
    var_0 = None
    either_1 = module_0.Either(var_0)

def test_case_3():
    bytes_0 = b'\x12~\x82^\x97b\xabI]r\xd0#\xce'
    set_0 = {bytes_0, bytes_0}
    var_0 = None
    right_0 = module_0.Right(var_0)
    right_1 = module_0.Right(right_0)
    either_0 = module_0.Either(var_0)
    var_1 = either_0.to_lazy()
    tuple_0 = (right_1,)
    right_2 = module_0.Right(tuple_0)
    left_0 = module_0.Left(var_0)
    var_2 = left_0.to_maybe()
    either_1 = module_0.Either(set_0)
    var_3 = either_1.to_lazy()
    left_1 = module_0.Left(bytes_0)
    var_4 = either_1.to_lazy()
    bool_0 = left_1.is_left()
    right_3 = module_0.Right(left_1)
    right_4 = module_0.Right(right_3)
    var_5 = left_1.bind(bool_0)
    var_6 = left_1.to_validation()
    var_7 = right_0.to_maybe()
    var_8 = right_4.to_validation()
    var_9 = either_1.to_try()

def test_case_4():
    object_0 = module_1.object()
    left_0 = module_0.Left(object_0)
    var_0 = left_0.to_maybe()
    callable_0 = None
    bytes_0 = b'km\xcaK\xc2\xed\xf9]\xb0\xa1ju[\x8d\x1c)i\xfb'
    left_1 = module_0.Left(bytes_0)
    var_1 = left_1.map(callable_0)

def test_case_5():
    str_0 = 'mcxM[\rR40bPPsF$O'
    list_0 = [str_0, str_0, str_0]
    int_0 = -40
    left_0 = module_0.Left(int_0)
    var_0 = left_0.ap(list_0)
    float_0 = 1772.746984
    bool_0 = False
    either_0 = module_0.Either(bool_0)
    var_1 = either_0.to_box()
    bool_1 = left_0.is_left()
    list_1 = []
    left_1 = module_0.Left(list_1)
    set_0 = set()
    right_0 = module_0.Right(set_0)
    bool_2 = right_0.is_left()
    var_2 = left_1.map(float_0)

def test_case_6():
    object_0 = module_1.object()
    tuple_0 = ()
    dict_0 = {tuple_0: object_0, tuple_0: object_0}
    right_0 = module_0.Right(dict_0)
    var_0 = right_0.to_maybe()
    dict_1 = {object_0: object_0, object_0: object_0, object_0: object_0}
    left_0 = module_0.Left(dict_1)
    bool_0 = left_0.is_left()

def test_case_7():
    bytes_0 = b'ek\xdb\xdf-\x17-\x84`XD\x95'
    right_0 = module_0.Right(bytes_0)
    var_0 = right_0.to_maybe()

def test_case_8():
    bool_0 = False
    float_0 = -3119.163
    left_0 = module_0.Left(float_0)
    var_0 = left_0.map(bool_0)
    int_0 = 2150
    right_0 = module_0.Right(int_0)
    var_1 = right_0.to_validation()

def test_case_9():
    int_0 = 1
    either_0 = module_0.Either(int_0)
    either_1 = module_0.Either(int_0)
    either_2 = module_0.Either(int_0)
    bool_0 = either_1.__eq__(either_2)
    either_3 = module_0.Either(int_0)
    int_1 = 2
    either_4 = module_0.Either(int_1)
    bool_1 = either_3.__eq__(either_4)
    either_5 = module_0.Either(int_0)
    var_0 = None
    bool_2 = either_5.__eq__(var_0)
    either_6 = module_0.Either(int_1)
    right_0 = module_0.Right(int_1)
    bool_3 = either_6.__eq__(right_0)
    either_7 = module_0.Either(int_1)
    left_0 = module_0.Left(int_1)
    bool_4 = either_7.__eq__(left_0)
    either_8 = module_0.Either(int_1)
    int_2 = 3
    right_1 = module_0.Right(int_2)
    bool_5 = either_8.__eq__(right_1)
    either_9 = module_0.Either(int_1)
    bool_6 = either_9.__eq__(left_0)