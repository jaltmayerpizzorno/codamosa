# Automatically generated by Pynguin.
import docstring_parser.rest as module_0

def test_case_0():
    try:
        str_0 = 'Short description.\n\n    Extended description.\n\n    :param str arg_name: Extended description of arg_name\n    :param str? arg_name_with_optional_type: Extended description of arg_name\n    :param arg_name_without_type: Extended description of arg_name\n    :param arg_name_without_type_or_description:\n    :param arg_name_with_default: Extended description of arg_name. Defaults to 0.\n    :raises ValueError: Extended description of error\n    :raises: Extended description of error\n    :returns: Extended escription of return\n    :returns str: Extended description of return\n    :returns str?: Extended description of return\n    :yields Extended description of return\n    :yields str: Extended description of return\n    '
        docstring_0 = module_0.parse(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = ':'
        docstring_0 = module_0.parse(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = None
        docstring_0 = module_0.parse(str_0)
        str_1 = 'Notes'
        docstring_1 = module_0.parse(str_1)
        docstring_2 = module_0.parse(str_1)
        docstring_3 = module_0.parse(str_0)
        str_2 = ''
        docstring_4 = module_0.parse(str_2)
        docstring_5 = module_0.parse(str_0)
        str_3 = "Initialize self.\n\n        :param args: list of arguments. The exact content of this variable is\n                     dependent on the kind of docstring; it's used to distinguish between\n                     custom docstring meta information items.\n        :param description: associated docstring description.\n        "
        docstring_6 = module_0.parse(str_3)
        str_4 = ''
        docstring_7 = module_0.parse(str_4)
        str_5 = 'Build docstring element.\n\n        :param text: docstring element text\n        :param title: title of section containing element\n        :return:\n        '
        docstring_8 = module_0.parse(str_1)
        docstring_9 = module_0.parse(str_5)
        docstring_10 = module_0.parse(str_1)
        str_6 = ')\x0b5fw$7M*.+aGc&Q<uO)'
        docstring_11 = module_0.parse(str_6)
        docstring_12 = module_0.parse(str_0)
        str_7 = '(?=\\S)'
        docstring_13 = module_0.parse(str_7)
        str_8 = None
        docstring_14 = module_0.parse(str_3)
        docstring_15 = module_0.parse(str_8)
        str_9 = '3\t QS\\ZKi8Ac'
        docstring_16 = module_0.parse(str_9)
        docstring_17 = module_0.parse(str_8)
        str_10 = 'nF<u<P\n:9 (\x0c'
        docstring_18 = module_0.parse(str_10)
    except BaseException:
        pass