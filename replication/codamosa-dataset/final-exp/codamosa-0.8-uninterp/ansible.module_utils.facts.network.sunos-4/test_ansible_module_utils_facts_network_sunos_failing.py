# Automatically generated by Pynguin.
import ansible.module_utils.facts.network.sunos as module_0

def test_case_0():
    try:
        bytes_0 = b'A\xfd\xa6\xe1\x11E\xc8\x0e\xa2j`\x9cO'
        bool_0 = True
        bool_1 = False
        int_0 = 6
        tuple_0 = (bool_0, bool_1, int_0, bool_0)
        sun_o_s_network_0 = module_0.SunOSNetwork(tuple_0)
        var_0 = sun_o_s_network_0.get_interfaces_info(bytes_0)
    except BaseException:
        pass

def test_case_1():
    try:
        float_0 = 1097.0
        tuple_0 = ()
        sun_o_s_network_0 = module_0.SunOSNetwork(tuple_0)
        str_0 = 'p-d6$qvf31]/^dt0~@'
        int_0 = -1479
        tuple_1 = (sun_o_s_network_0, str_0, int_0)
        str_1 = '"SXw=;b{J*neJ%;'
        sun_o_s_network_1 = module_0.SunOSNetwork(str_1)
        var_0 = sun_o_s_network_1.parse_ether_line(float_0, tuple_0, tuple_1)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'c[\\B`N"'
        set_0 = {str_0}
        bytes_0 = b'\x05H\t\xb6p\x88S;'
        sun_o_s_network_collector_0 = module_0.SunOSNetworkCollector(bytes_0)
        list_0 = None
        tuple_0 = None
        bool_0 = True
        sun_o_s_network_0 = module_0.SunOSNetwork(list_0, bool_0)
        var_0 = sun_o_s_network_0.parse_interface_line(str_0, tuple_0, set_0)
        str_1 = 'openSUSE'
        sun_o_s_network_1 = module_0.SunOSNetwork(str_1, set_0)
        sun_o_s_network_2 = module_0.SunOSNetwork(str_0)
        sun_o_s_network_3 = module_0.SunOSNetwork(bytes_0, set_0)
        sun_o_s_network_4 = module_0.SunOSNetwork(bool_0)
        var_1 = sun_o_s_network_2.parse_ether_line(str_1, str_0, set_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = "'W~"
        sun_o_s_network_collector_0 = module_0.SunOSNetworkCollector(str_0)
        sun_o_s_network_collector_1 = module_0.SunOSNetworkCollector()
        int_0 = -150
        str_1 = 'B'
        sun_o_s_network_0 = module_0.SunOSNetwork(str_1)
        sun_o_s_network_1 = module_0.SunOSNetwork(int_0)
        str_2 = '+/{Y++t\x0c{:Y=W$Z'
        str_3 = '{O*<~\n\tK;TP)^2vSv\\'
        var_0 = sun_o_s_network_1.parse_interface_line(str_2, sun_o_s_network_collector_1, str_3)
    except BaseException:
        pass