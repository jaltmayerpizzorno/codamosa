# Automatically generated by Pynguin.
import ansible.module_utils.common.json as module_0

def test_case_0():
    try:
        complex_0 = None
        list_0 = [complex_0, complex_0, complex_0, complex_0]
        str_0 = 'os_version'
        str_1 = 'GS|?ruNuj[ZS^'
        dict_0 = {str_0: str_0, str_1: list_0}
        bytes_0 = b'\x160\xd0\xe0\xee\xc4t\xca!\x9f\xf2%Z'
        ansible_j_s_o_n_encoder_0 = module_0.AnsibleJSONEncoder(bytes_0)
        var_0 = ansible_j_s_o_n_encoder_0.iterencode(list_0, **dict_0)
    except BaseException:
        pass

def test_case_1():
    try:
        ansible_j_s_o_n_encoder_0 = module_0.AnsibleJSONEncoder()
        float_0 = 100.0
        ansible_j_s_o_n_encoder_1 = module_0.AnsibleJSONEncoder(float_0)
        bytes_0 = b'C1'
        dict_0 = {bytes_0: bytes_0, ansible_j_s_o_n_encoder_1: ansible_j_s_o_n_encoder_1, bytes_0: float_0, ansible_j_s_o_n_encoder_1: bytes_0}
        str_0 = "'>$c9_47\r6\\~fQ'Vh\nq"
        dict_1 = {str_0: float_0}
        var_0 = ansible_j_s_o_n_encoder_1.iterencode(dict_0, **dict_1)
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = None
        str_0 = ''
        dict_0 = {str_0: str_0}
        dict_1 = {bytes_0: bytes_0, str_0: dict_0}
        ansible_j_s_o_n_encoder_0 = module_0.AnsibleJSONEncoder()
        var_0 = ansible_j_s_o_n_encoder_0.default(dict_1)
        ansible_j_s_o_n_encoder_1 = module_0.AnsibleJSONEncoder(str_0)
        var_1 = ansible_j_s_o_n_encoder_1.default(bytes_0)
    except BaseException:
        pass

def test_case_3():
    try:
        ansible_j_s_o_n_encoder_0 = module_0.AnsibleJSONEncoder()
        var_0 = ansible_j_s_o_n_encoder_0.default(ansible_j_s_o_n_encoder_0)
    except BaseException:
        pass

def test_case_4():
    try:
        ansible_j_s_o_n_encoder_0 = module_0.AnsibleJSONEncoder()
        list_0 = [ansible_j_s_o_n_encoder_0, ansible_j_s_o_n_encoder_0, ansible_j_s_o_n_encoder_0]
        var_0 = ansible_j_s_o_n_encoder_0.encode(list_0)
    except BaseException:
        pass