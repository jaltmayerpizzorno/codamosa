# Automatically generated by Pynguin.
import sanic.blueprint_group as module_0
import sanic.blueprints as module_1

def test_case_0():
    try:
        float_0 = -2440.0
        list_0 = [float_0]
        blueprint_group_0 = module_0.BlueprintGroup()
        str_0 = 'GJ'
        blueprint_0 = module_1.Blueprint(str_0)
        blueprint_group_0.append(blueprint_0)
        str_1 = 'F\t\\TGA@{kW4HV'
        list_1 = [list_0]
        dict_0 = {str_1: blueprint_group_0, str_1: list_1, str_1: blueprint_group_0, str_1: str_1}
        blueprint_group_0.__delitem__(dict_0)
    except BaseException:
        pass

def test_case_1():
    try:
        list_0 = []
        list_1 = [list_0, list_0]
        dict_0 = None
        blueprint_group_0 = module_0.BlueprintGroup()
        str_0 = '\n        Handle response when exception encountered\n        '
        str_1 = 'sl\x0b`n~]`z87l-\x0b~>)0'
        int_0 = -3137
        blueprint_0 = module_1.Blueprint(str_0, str_0, str_1, int_0)
        blueprint_group_0.append(blueprint_0)
        var_0 = blueprint_group_0.middleware(*list_1, **dict_0)
    except BaseException:
        pass

def test_case_2():
    try:
        dict_0 = {}
        blueprint_group_0 = module_0.BlueprintGroup()
        var_0 = blueprint_group_0.middleware(**dict_0)
        str_0 = '%f]F LWUBu;k\nGo^/]U8'
        blueprint_group_1 = module_0.BlueprintGroup()
        int_0 = blueprint_group_1.__len__()
        int_1 = blueprint_group_1.__len__()
        var_1 = blueprint_group_1.__getitem__(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        float_0 = -934.41
        blueprint_group_0 = module_0.BlueprintGroup(float_0)
        var_0 = blueprint_group_0.__iter__()
        str_0 = '9>n"c/.xpUnC^<UK*OjT'
        list_0 = [str_0]
        str_1 = 'b;Z+SBV|=:0l%",'
        blueprint_group_1 = module_0.BlueprintGroup()
        blueprint_group_1.__setitem__(list_0, str_1)
    except BaseException:
        pass

def test_case_4():
    try:
        blueprint_group_0 = module_0.BlueprintGroup()
        int_0 = None
        str_0 = '^QMdsZW'
        blueprint_0 = module_1.Blueprint(str_0, int_0)
        blueprint_group_0.__delitem__(blueprint_0)
    except BaseException:
        pass

def test_case_5():
    try:
        bytes_0 = b'j\x06\xd73\x01&E\n\xc9\x82'
        blueprint_group_0 = module_0.BlueprintGroup(bytes_0)
        int_0 = 426
        list_0 = []
        list_1 = [list_0, list_0, list_0]
        str_0 = ''
        dict_0 = {str_0: list_0, str_0: bytes_0, str_0: list_1}
        var_0 = blueprint_group_0.middleware(**dict_0)
        blueprint_0 = module_1.Blueprint(str_0, str_0, int_0)
        blueprint_group_0.insert(int_0, blueprint_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'bp1'
        str_1 = '/bp1'
        str_2 = 'v1'
        blueprint_0 = module_1.Blueprint(str_0, str_1, str_2)
        str_3 = 'bp2'
        str_4 = '/bp2'
        str_5 = 'v2'
        blueprint_1 = module_1.Blueprint(str_3, str_4, str_5)
        str_6 = 'bp3'
        str_7 = '/bp3'
        str_8 = 'v3'
        blueprint_2 = module_1.Blueprint(str_6, str_7, str_8)
        str_9 = 'bp4'
        str_10 = '/bp4'
        blueprint_3 = module_1.Blueprint(str_9, str_10, str_9)
        str_11 = '/api/v1'
        blueprint_group_0 = module_0.BlueprintGroup(str_11, str_5)
        blueprint_group_0.append(blueprint_group_0)
    except BaseException:
        pass

def test_case_7():
    try:
        int_0 = 167
        str_0 = 'H+55=^HR7a(IWs\x0c&#B'
        blueprint_0 = module_1.Blueprint(str_0)
        str_1 = '. A '
        blueprint_group_0 = module_0.BlueprintGroup(str_1)
        blueprint_group_0.insert(int_0, blueprint_0)
        str_2 = 'requirements'
        blueprint_group_0.__setitem__(str_2, blueprint_group_0)
    except BaseException:
        pass

def test_case_8():
    try:
        bool_0 = True
        bool_1 = None
        blueprint_group_0 = module_0.BlueprintGroup(bool_1)
        int_0 = blueprint_group_0.__len__()
        str_0 = '\n        Handle response wven exception encountered\n        '
        list_0 = [bool_1]
        str_1 = '_ip'
        blueprint_0 = module_1.Blueprint(str_1, str_0, int_0, bool_0)
        blueprint_group_0.insert(int_0, blueprint_0)
        var_0 = blueprint_group_0.middleware(*list_0)
        blueprint_group_1 = module_0.BlueprintGroup()
        blueprint_group_2 = module_0.BlueprintGroup()
        list_1 = [var_0, bool_0, list_0, list_0]
        var_1 = blueprint_group_0.middleware(*list_1)
    except BaseException:
        pass