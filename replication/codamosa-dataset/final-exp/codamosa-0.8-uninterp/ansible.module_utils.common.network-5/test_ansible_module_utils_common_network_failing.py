# Automatically generated by Pynguin.
import ansible.module_utils.common.network as module_0

def test_case_0():
    try:
        int_0 = 1445
        bool_0 = True
        var_0 = module_0.to_subnet(int_0, bool_0)
    except BaseException:
        pass

def test_case_1():
    try:
        float_0 = 2288.78
        str_0 = '-|L+UUr\t)u:'
        var_0 = module_0.to_ipv6_subnet(str_0)
        var_1 = module_0.to_subnet(float_0, str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bool_0 = True
        var_0 = module_0.is_masklen(bool_0)
        int_0 = -185
        var_1 = module_0.to_netmask(int_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'mK\n)M}'
        var_0 = module_0.to_masklen(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        dict_0 = {}
        int_0 = -1518
        var_0 = module_0.to_subnet(dict_0, int_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = "\r%8'\to"
        var_0 = module_0.to_ipv6_network(str_0)
        bool_0 = None
        var_1 = module_0.to_ipv6_subnet(bool_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = '3OoQ\n4%7uHYD/\tgJ;F\x0b'
        var_0 = module_0.to_bits(str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        float_0 = None
        bool_0 = False
        dict_0 = {float_0: float_0, float_0: float_0, bool_0: bool_0}
        var_0 = module_0.to_subnet(float_0, dict_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = '^T[!Jaxrz^p5\t@'
        bool_0 = False
        var_0 = module_0.is_masklen(bool_0)
        var_1 = module_0.to_ipv6_subnet(str_0)
        str_1 = 'vh<\x0c-S'
        var_2 = module_0.to_subnet(str_1, bool_0, bool_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = '0.0.0.0'
        var_0 = module_0.to_bits(str_0)
        float_0 = 39.4412
        var_1 = module_0.to_ipv6_network(float_0)
    except BaseException:
        pass