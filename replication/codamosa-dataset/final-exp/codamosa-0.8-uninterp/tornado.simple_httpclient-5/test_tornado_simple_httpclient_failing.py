# Automatically generated by Pynguin.
import tornado.simple_httpclient as module_0
import tornado.httpclient as module_1
import tornado.httputil as module_2
import tornado.tcpclient as module_3

def test_case_0():
    try:
        str_0 = 'p~UN'
        h_t_t_p_timeout_error_0 = module_0.HTTPTimeoutError(str_0)
        str_1 = h_t_t_p_timeout_error_0.__str__()
        str_2 = h_t_t_p_timeout_error_0.__str__()
        str_3 = 'k4O!pZJRM7u\x0bgs'
        h_t_t_p_stream_closed_error_0 = module_0.HTTPStreamClosedError(str_1)
        h_t_t_p_stream_closed_error_1 = module_0.HTTPStreamClosedError(str_1)
        str_4 = h_t_t_p_stream_closed_error_0.__str__()
        bool_0 = False
        str_5 = 'tornado.simple_httpclient'
        h_t_t_p_timeout_error_1 = module_0.HTTPTimeoutError(str_5)
        bool_1 = True
        h_t_t_p_request_0 = module_1.HTTPRequest(str_4, str_0, str_3, str_2, h_t_t_p_timeout_error_1, bool_0, str_5, bool_1)
        h_t_t_p_headers_0 = module_2.HTTPHeaders()
        iterable_0 = h_t_t_p_headers_0.get_all()
        int_0 = 2048
        t_c_p_client_0 = module_3.TCPClient()
        int_1 = 65535
        h_t_t_p_connection_0 = module_0._HTTPConnection(bool_0, h_t_t_p_request_0, h_t_t_p_stream_closed_error_0, iterable_0, int_0, t_c_p_client_0, int_1, int_0)
    except BaseException:
        pass