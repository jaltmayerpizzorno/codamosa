# Automatically generated by Pynguin.
import ansible.module_utils.facts.network.sunos as module_0

def test_case_0():
    try:
        bytes_0 = None
        bytes_1 = b'\xd4\x87\x8d\x87\x8c'
        sun_o_s_network_0 = module_0.SunOSNetwork(bytes_1)
        var_0 = sun_o_s_network_0.get_interfaces_info(bytes_0)
    except BaseException:
        pass

def test_case_1():
    try:
        sun_o_s_network_collector_0 = module_0.SunOSNetworkCollector()
        bytes_0 = b'\xedjN\xd08\xc9\x18\xde\xfbK"!'
        bytes_1 = b'\xfa\x063\x8c\xac7'
        str_0 = ''
        sun_o_s_network_0 = module_0.SunOSNetwork(str_0)
        var_0 = sun_o_s_network_0.parse_ether_line(sun_o_s_network_collector_0, bytes_0, bytes_1)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'Yg~.pq /}w?P'
        int_0 = 60
        int_1 = None
        bool_0 = False
        sun_o_s_network_0 = module_0.SunOSNetwork(bool_0)
        var_0 = sun_o_s_network_0.parse_ether_line(str_0, int_0, int_1)
    except BaseException:
        pass

def test_case_3():
    try:
        tuple_0 = ()
        tuple_1 = ()
        bool_0 = False
        set_0 = {tuple_1}
        bool_1 = False
        list_0 = [tuple_0, bool_0]
        sun_o_s_network_0 = module_0.SunOSNetwork(bool_1, list_0)
        sun_o_s_network_1 = module_0.SunOSNetwork(tuple_1, set_0)
        sun_o_s_network_2 = module_0.SunOSNetwork(sun_o_s_network_1)
        float_0 = 830.03
        sun_o_s_network_collector_0 = module_0.SunOSNetworkCollector(float_0)
        str_0 = '\x0bjz<vvj9dNT)3'
        bytes_0 = b'\xfa'
        str_1 = 'removed_in_version'
        var_0 = sun_o_s_network_2.parse_interface_line(str_0, bytes_0, str_1)
    except BaseException:
        pass