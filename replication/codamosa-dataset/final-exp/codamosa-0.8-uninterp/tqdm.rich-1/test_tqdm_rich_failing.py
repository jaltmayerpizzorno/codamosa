# Automatically generated by Pynguin.
import tqdm.rich as module_0
import tqdm.std as module_1
import rich.progress as module_2
import rich.style as module_3

def test_case_0():
    try:
        tqdm_rich_0 = module_0.tqdm_rich()
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = 515
        fraction_column_0 = module_0.FractionColumn()
        var_0 = fraction_column_0.render(int_0)
    except BaseException:
        pass

def test_case_2():
    try:
        float_0 = 382.7
        list_0 = [float_0, float_0, float_0]
        tqdm_rich_0 = module_0.tqdm_rich(*list_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'\xb1eU\xbe\x0cg\xd4\x19\xfe?\xc0F?\t'
        fraction_column_0 = module_0.FractionColumn()
        rate_column_0 = module_0.RateColumn(fraction_column_0)
        var_0 = rate_column_0.render(bytes_0)
    except BaseException:
        pass

def test_case_4():
    try:
        tqdm_rich_0 = module_0.tqdm_rich()
    except BaseException:
        pass

def test_case_5():
    try:
        var_0 = module_0.trrange()
    except BaseException:
        pass

def test_case_6():
    try:
        tqdm_rich_0 = module_0.tqdm_rich()
    except BaseException:
        pass

def test_case_7():
    try:
        tqdm_rich_0 = module_0.tqdm_rich()
    except BaseException:
        pass

def test_case_8():
    try:
        float_0 = 382.4200899364278
        list_0 = [float_0, float_0, float_0]
        tqdm_rich_0 = module_0.tqdm_rich(*list_0)
    except BaseException:
        pass

def test_case_9():
    try:
        int_0 = 1
        int_1 = 2
        int_2 = 3
        int_3 = [int_0, int_1, int_2]
        tqdm_0 = module_1.tqdm(int_3)
        str_0 = 'foo'
        var_0 = tqdm_0.set_description(str_0)
        var_1 = tqdm_0.display()
        var_2 = tqdm_0.close()
        bool_0 = True
        int_4 = 80
        tqdm_1 = module_1.tqdm(int_4, bool_0)
        var_3 = tqdm_1.display()
        var_4 = tqdm_1.close()
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = 'l74IF/'
        list_0 = []
        bool_0 = False
        progress_0 = module_2.Progress(*list_0, auto_refresh=bool_0)
        str_1 = None
        var_0 = progress_0.add_task(str_1)
        str_2 = None
        set_0 = {str_0}
        progress_0.__exit__(progress_0, set_0, str_2)
        float_0 = 99.95
        style_0 = module_3.Style(dim=bool_0)
        style_1 = style_0.update_link()
        var_1 = None
        task_0 = module_2.Task(var_0, str_2, float_0, float_0, style_1, float_0, var_1)
        fraction_column_0 = module_0.FractionColumn(str_0, str_0)
        var_2 = fraction_column_0.render(task_0)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = 'l784IF/'
        list_0 = []
        bool_0 = False
        int_0 = 1427
        bool_1 = True
        progress_0 = module_2.Progress(*list_0, transient=bool_0, redirect_stderr=bool_1, disable=bool_0)
        var_0 = progress_0.add_task(str_0, int_0)
        float_0 = 600000.0
        path_like_0 = None
        task_0 = module_2.Task(var_0, str_0, float_0, float_0, path_like_0)
        float_1 = 100000.0
        fraction_column_0 = module_0.FractionColumn(float_1)
        var_1 = fraction_column_0.render(task_0)
        progress_1 = module_2.Progress(*list_0, auto_refresh=bool_0)
        var_2 = progress_1.add_task(str_0)
        style_0 = module_3.Style(dim=bool_0)
        list_1 = []
        tqdm_rich_0 = module_0.tqdm_rich(*list_1)
    except BaseException:
        pass