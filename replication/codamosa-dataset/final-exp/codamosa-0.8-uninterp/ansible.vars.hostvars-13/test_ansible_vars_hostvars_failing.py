# Automatically generated by Pynguin.
import ansible.vars.hostvars as module_0

def test_case_0():
    try:
        float_0 = 1888.249046
        str_0 = 'strict'
        str_1 = 'bsdinit'
        host_vars_0 = module_0.HostVars(float_0, str_0, str_1)
    except BaseException:
        pass

def test_case_1():
    try:
        set_0 = set()
        str_0 = 'MvL"*D5y RJhJ|n\r'
        dict_0 = {}
        host_vars_vars_0 = module_0.HostVarsVars(dict_0, set_0)
        host_vars_0 = module_0.HostVars(str_0, host_vars_vars_0, host_vars_vars_0)
        var_0 = host_vars_0.__setstate__(dict_0)
        var_1 = host_vars_vars_0.__contains__(host_vars_vars_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = None
        float_0 = 500.3
        tuple_0 = None
        host_vars_vars_0 = module_0.HostVarsVars(float_0, tuple_0)
        var_0 = host_vars_vars_0.__repr__()
        float_1 = 519.30586
        host_vars_0 = module_0.HostVars(host_vars_vars_0, bytes_0, float_1)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'k'
        str_1 = '84(q0($v\'Tb3~@f"G<'
        host_vars_vars_0 = module_0.HostVarsVars(str_0, str_1)
        var_0 = host_vars_vars_0.__len__()
    except BaseException:
        pass

def test_case_4():
    try:
        bool_0 = False
        int_0 = 858
        list_0 = []
        tuple_0 = (int_0, list_0)
        host_vars_vars_0 = module_0.HostVarsVars(bool_0, tuple_0)
        list_1 = [tuple_0]
        str_0 = 'Vj{o9X?}1w^CT9O'
        host_vars_0 = module_0.HostVars(list_1, host_vars_vars_0, str_0)
        int_1 = -738
        str_1 = '*R+6`"@=vD\nRr_'
        var_0 = host_vars_0.set_host_facts(int_1, str_1)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'k'
        str_1 = '84(q0($v\'Tb3~@f"G<'
        host_vars_vars_0 = module_0.HostVarsVars(str_0, str_1)
        var_0 = host_vars_vars_0.__getitem__(host_vars_vars_0)
    except BaseException:
        pass

def test_case_6():
    try:
        bool_0 = False
        int_0 = 858
        list_0 = []
        tuple_0 = (int_0, list_0)
        host_vars_vars_0 = module_0.HostVarsVars(bool_0, tuple_0)
        list_1 = [tuple_0]
        str_0 = 'Vj{o9X?}1w^CT9O'
        host_vars_0 = module_0.HostVars(list_1, host_vars_vars_0, str_0)
        bytes_0 = b'\xcc\xc8\xb5\xa5z*'
        dict_0 = {}
        host_vars_1 = module_0.HostVars(bytes_0, host_vars_0, dict_0)
        int_1 = 3223
        var_0 = host_vars_0.set_inventory(int_1)
        host_vars_vars_1 = module_0.HostVarsVars(host_vars_1, bytes_0)
        var_1 = host_vars_0.__setstate__(int_1)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = "M\x0c :\x0c'E[4F"
        list_0 = [str_0, str_0]
        host_vars_vars_0 = module_0.HostVarsVars(list_0, list_0)
        dict_0 = {str_0: list_0}
        host_vars_0 = module_0.HostVars(str_0, host_vars_vars_0, dict_0)
        var_0 = host_vars_0.__repr__()
    except BaseException:
        pass

def test_case_8():
    try:
        set_0 = set()
        str_0 = 'MvL"*D5y RJhJ|n\r'
        dict_0 = {}
        host_vars_vars_0 = module_0.HostVarsVars(dict_0, set_0)
        host_vars_0 = module_0.HostVars(str_0, host_vars_vars_0, host_vars_vars_0)
        var_0 = host_vars_0.__setstate__(dict_0)
        var_1 = host_vars_0.__deepcopy__(str_0)
        var_2 = host_vars_0.__contains__(str_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = "M\x0c :\x0c'E[4F"
        list_0 = [str_0, str_0]
        host_vars_vars_0 = module_0.HostVarsVars(list_0, list_0)
        dict_0 = {str_0: list_0}
        host_vars_0 = module_0.HostVars(str_0, host_vars_vars_0, dict_0)
        var_0 = host_vars_0.__getitem__(str_0)
    except BaseException:
        pass

def test_case_10():
    try:
        bool_0 = False
        int_0 = 858
        list_0 = []
        tuple_0 = (int_0, list_0)
        host_vars_vars_0 = module_0.HostVarsVars(bool_0, tuple_0)
        list_1 = [host_vars_vars_0]
        str_0 = 'Vj{o9X?}1w^CT9O'
        host_vars_0 = module_0.HostVars(list_1, host_vars_vars_0, str_0)
        str_1 = 'Data could not be sent because of ControlPersist broken pipe: %s'
        bool_1 = True
        str_2 = '^\n            \\[(.+)\\]                    # [host identifier]\n            :([0-9]+)                   # :port number\n            $\n        '
        tuple_1 = (bool_1, tuple_0, str_2, str_1)
        var_0 = host_vars_0.set_host_variable(list_1, str_1, tuple_1)
    except BaseException:
        pass

def test_case_11():
    try:
        complex_0 = None
        float_0 = 500.26
        tuple_0 = None
        host_vars_vars_0 = module_0.HostVarsVars(float_0, tuple_0)
        var_0 = host_vars_vars_0.__getitem__(complex_0)
    except BaseException:
        pass

def test_case_12():
    try:
        bool_0 = False
        int_0 = 858
        list_0 = []
        tuple_0 = (int_0, list_0)
        host_vars_vars_0 = module_0.HostVarsVars(bool_0, tuple_0)
        list_1 = [tuple_0]
        str_0 = 'Vj{o9X?}1w^CT9O'
        host_vars_0 = module_0.HostVars(list_1, host_vars_vars_0, str_0)
        var_0 = host_vars_0.__len__()
    except BaseException:
        pass

def test_case_13():
    try:
        set_0 = set()
        str_0 = 'MvL"*D5y RJhJ|n\r'
        dict_0 = {}
        int_0 = None
        host_vars_vars_0 = module_0.HostVarsVars(dict_0, set_0)
        host_vars_0 = module_0.HostVars(str_0, host_vars_vars_0, host_vars_vars_0)
        var_0 = host_vars_0.__setstate__(dict_0)
        var_1 = host_vars_0.set_nonpersistent_facts(dict_0, int_0)
    except BaseException:
        pass

def test_case_14():
    try:
        str_0 = "M\x0c :\x0c'E[4F"
        list_0 = [str_0, str_0]
        host_vars_vars_0 = module_0.HostVarsVars(list_0, list_0)
        dict_0 = {str_0: list_0}
        host_vars_0 = module_0.HostVars(str_0, host_vars_vars_0, dict_0)
        str_1 = '"\x0c_xN+\r>uc7>?I'
        var_0 = host_vars_0.set_variable_manager(str_1)
    except BaseException:
        pass

def test_case_15():
    try:
        set_0 = set()
        str_0 = '\x0c'
        dict_0 = {}
        host_vars_vars_0 = module_0.HostVarsVars(dict_0, set_0)
        host_vars_0 = module_0.HostVars(str_0, host_vars_vars_0, host_vars_vars_0)
        var_0 = host_vars_0.__setstate__(host_vars_vars_0)
        tuple_0 = ()
        float_0 = -1352.1689
        host_vars_1 = module_0.HostVars(tuple_0, float_0, host_vars_0)
    except BaseException:
        pass

def test_case_16():
    try:
        float_0 = 2176.608751
        dict_0 = {}
        str_0 = 'GK\x0cqS"3^}'
        set_0 = None
        host_vars_vars_0 = module_0.HostVarsVars(float_0, set_0)
        host_vars_0 = module_0.HostVars(str_0, host_vars_vars_0, host_vars_vars_0)
        var_0 = host_vars_0.__setstate__(dict_0)
        tuple_0 = ()
        float_1 = -1352.1689
        host_vars_1 = module_0.HostVars(tuple_0, float_1, host_vars_0)
    except BaseException:
        pass

def test_case_17():
    try:
        set_0 = set()
        dict_0 = {}
        str_0 = 'GK\x0cqS"3^}'
        host_vars_vars_0 = module_0.HostVarsVars(dict_0, set_0)
        host_vars_0 = module_0.HostVars(str_0, host_vars_vars_0, host_vars_vars_0)
        var_0 = host_vars_0.__setstate__(dict_0)
        var_1 = host_vars_0.__setstate__(host_vars_0)
    except BaseException:
        pass

def test_case_18():
    try:
        set_0 = set()
        str_0 = 'MvL"*D5y RJhJ|n\r'
        float_0 = 2201.6209600681486
        dict_0 = {float_0: float_0}
        host_vars_vars_0 = module_0.HostVarsVars(dict_0, set_0)
        host_vars_0 = module_0.HostVars(str_0, host_vars_vars_0, host_vars_vars_0)
        var_0 = host_vars_0.__setstate__(dict_0)
        int_0 = 4242
        var_1 = host_vars_0.__setstate__(host_vars_vars_0)
        var_2 = host_vars_vars_0.__len__()
        var_3 = host_vars_0.set_nonpersistent_facts(dict_0, int_0)
    except BaseException:
        pass