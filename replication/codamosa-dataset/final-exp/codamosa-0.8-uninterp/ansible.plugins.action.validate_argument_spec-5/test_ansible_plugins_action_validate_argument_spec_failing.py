# Automatically generated by Pynguin.
import ansible.plugins.action.validate_argument_spec as module_0

def test_case_0():
    try:
        float_0 = 2040.19
        dict_0 = {float_0: float_0}
        int_0 = -3971
        list_0 = [int_0]
        tuple_0 = (list_0,)
        set_0 = {int_0, int_0}
        bool_0 = False
        action_module_0 = module_0.ActionModule(int_0, tuple_0, set_0, bool_0, set_0, tuple_0)
        var_0 = action_module_0.get_args_from_task_vars(float_0, dict_0)
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = None
        tuple_0 = ()
        bool_0 = False
        str_0 = "yw/.'AKBEGKWHrCHN"
        dict_0 = {str_0: tuple_0, bool_0: bool_0, tuple_0: str_0}
        bytes_0 = b'4\x005<\x1cgzy\\\x8b\x1e[\xb3;'
        action_module_0 = module_0.ActionModule(str_0, dict_0, bytes_0, str_0, bool_0, dict_0)
        action_module_1 = module_0.ActionModule(int_0, tuple_0, bool_0, str_0, dict_0, action_module_0)
        var_0 = action_module_0.get_args_from_task_vars(dict_0, tuple_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = None
        str_0 = ' 7FU5Z!jA'
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
        float_0 = 693.567
        bool_0 = True
        bytes_1 = b'n\x82|\xe25]\xe8\x99{\xc3'
        int_0 = -2592
        action_module_0 = module_0.ActionModule(dict_0, float_0, bool_0, bytes_1, int_0, float_0)
        list_0 = [dict_0, action_module_0]
        str_1 = 'AOE?Q,:'
        action_module_1 = module_0.ActionModule(str_0, action_module_0, list_0, int_0, str_1, int_0)
        var_0 = action_module_1.run(bytes_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'\r=X\t'
        str_0 = 'g>p]P^szL>I}0 '
        float_0 = 1597.1784
        list_0 = [str_0, float_0]
        float_1 = -616.178482
        str_1 = "Adding group '%s' as child to '%s' creates a recursive dependency loop."
        bool_0 = False
        set_0 = {bytes_0, bytes_0, float_0, bytes_0}
        action_module_0 = module_0.ActionModule(float_0, float_1, str_1, bool_0, set_0, set_0)
        bool_1 = False
        dict_0 = {action_module_0: action_module_0}
        float_2 = None
        action_module_1 = module_0.ActionModule(action_module_0, bool_0, bool_1, dict_0, float_2, bool_1)
        int_0 = -899
        float_3 = 1086.6
        bool_2 = True
        tuple_0 = (bool_2, list_0, list_0)
        action_module_2 = module_0.ActionModule(action_module_0, float_3, bytes_0, list_0, str_1, tuple_0)
        var_0 = action_module_1.run(int_0, list_0)
    except BaseException:
        pass

def test_case_4():
    try:
        tuple_0 = ()
        bool_0 = False
        str_0 = "yw/.'AKBEGKWHrCHN"
        dict_0 = {str_0: tuple_0, str_0: bool_0, bool_0: bool_0, tuple_0: str_0, str_0: tuple_0, tuple_0: tuple_0, bool_0: bool_0}
        bytes_0 = b'4\x005<\xed\x1cgzy\\\x8b\x1e[\xb3;'
        action_module_0 = module_0.ActionModule(str_0, dict_0, bytes_0, str_0, bool_0, dict_0)
        dict_1 = {bool_0: bool_0}
        var_0 = action_module_0.get_args_from_task_vars(dict_1, dict_1)
    except BaseException:
        pass