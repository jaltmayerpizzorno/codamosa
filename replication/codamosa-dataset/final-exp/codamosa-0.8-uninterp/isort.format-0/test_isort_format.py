# Automatically generated by Pynguin.
import isort.format as module_0
import pathlib as module_1

def test_case_0():
    pass

def test_case_1():
    str_0 = '# isort: tuple'
    str_1 = module_0.format_simplified(str_0)

def test_case_2():
    str_0 = 'K'
    str_1 = module_0.format_natural(str_0)

def test_case_3():
    str_0 = 'i'
    text_i_o_0 = None
    basic_printer_0 = module_0.BasicPrinter(text_i_o_0)
    basic_printer_1 = module_0.BasicPrinter()
    colorama_printer_0 = module_0.ColoramaPrinter()
    basic_printer_1.diff_line(str_0)
    optional_0 = None
    bool_0 = False
    var_0 = module_0.show_unified_diff(file_input=str_0, file_output=str_0, file_path=optional_0, color_output=bool_0)
    str_1 = 'utf-8'
    basic_printer_1.error(str_1)

def test_case_4():
    str_0 = 'i'
    text_i_o_0 = None
    basic_printer_0 = module_0.BasicPrinter(text_i_o_0)
    basic_printer_1 = module_0.BasicPrinter()
    colorama_printer_0 = module_0.ColoramaPrinter()
    basic_printer_1.diff_line(str_0)
    str_1 = 'tG~K\nJ;N};jng$| "=i'
    str_2 = '>u1ixD2K=E\x0b7dB'
    path_0 = module_1.Path()
    bool_0 = False
    var_0 = module_0.show_unified_diff(file_input=str_1, file_output=str_2, file_path=path_0, color_output=bool_0)
    basic_printer_1.error(str_0)

def test_case_5():
    str_0 = 'J'
    str_1 = module_0.remove_whitespace(str_0)
    str_2 = 'BvPthNY]B@:m'
    basic_printer_0 = module_0.BasicPrinter()
    colorama_printer_0 = module_0.ColoramaPrinter()
    colorama_printer_0.diff_line(str_2)
    colorama_printer_0.diff_line(str_1)

def test_case_6():
    colorama_printer_0 = module_0.ColoramaPrinter()

def test_case_7():
    str_0 = "nsQ3.be4dqr'hK^?"
    basic_printer_0 = module_0.BasicPrinter()
    str_1 = '^i0J:hJ$M\\$'
    basic_printer_0.success(str_1)
    str_2 = module_0.format_simplified(str_0)

def test_case_8():
    str_0 = 'x;B[C\\'
    basic_printer_0 = module_0.BasicPrinter()
    basic_printer_0.error(str_0)
    basic_printer_1 = module_0.BasicPrinter()
    basic_printer_1.error(str_0)

def test_case_9():
    colorama_printer_0 = module_0.ColoramaPrinter()
    str_0 = 'HMHJZ3*qT<xfz['
    basic_printer_0 = module_0.BasicPrinter()
    basic_printer_0.diff_line(str_0)

def test_case_10():
    bool_0 = True
    str_0 = '+pbH'
    colorama_printer_0 = module_0.ColoramaPrinter()
    colorama_printer_1 = module_0.ColoramaPrinter()
    str_1 = colorama_printer_1.style_text(str_0)
    var_0 = module_0.create_terminal_printer(bool_0)
    str_2 = colorama_printer_1.style_text(str_0)

def test_case_11():
    bool_0 = True
    var_0 = module_0.create_terminal_printer(bool_0)

def test_case_12():
    bool_0 = True
    int_0 = -176
    var_0 = module_0.create_terminal_printer(bool_0, int_0)

def test_case_13():
    bool_0 = False
    var_0 = module_0.create_terminal_printer(bool_0)
    basic_printer_0 = module_0.BasicPrinter()

def test_case_14():
    str_0 = 'import os, sys # comment\n'
    str_1 = module_0.format_simplified(str_0)
    str_2 = 'from __future__ import nested_scopes, generators, division, absolute_import, with_statement, print_function, unicode_literals\n'
    str_3 = module_0.format_simplified(str_2)
    str_4 = 'from third_party import (lib1, lib2)\n'
    str_5 = module_0.format_simplified(str_4)