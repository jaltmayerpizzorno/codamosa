# Automatically generated by Pynguin.
import isort.format as module_0
import typing as module_1
import pathlib as module_2

def test_case_0():
    try:
        colorama_printer_0 = module_0.ColoramaPrinter()
        bool_0 = True
        var_0 = module_0.create_terminal_printer(bool_0)
        str_0 = 'ZGCti<U7}4t5'
        text_i_o_0 = module_1.TextIO()
        str_1 = '1 '
        path_0 = module_2.Path()
        bool_1 = None
        var_1 = module_0.create_terminal_printer(bool_1)
        str_2 = ',@/en'
        str_3 = module_0.format_simplified(str_2)
        var_2 = module_0.show_unified_diff(file_input=str_0, file_output=str_1, file_path=path_0, color_output=bool_0)
        var_3 = path_0.is_fifo()
        colorama_printer_1 = module_0.ColoramaPrinter(text_i_o_0)
        str_4 = colorama_printer_1.style_text(str_0)
        str_5 = ':n.iea'
        str_6 = module_0.format_natural(str_5)
        str_7 = module_0.remove_whitespace(str_1, str_5)
        str_8 = 'M :\n6\n(4.I^'
        basic_printer_0 = module_0.BasicPrinter(text_i_o_0)
        basic_printer_0.error(str_8)
        bool_2 = module_0.ask_whether_to_apply_changes_to_file(str_2)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = None
        bool_0 = module_0.ask_whether_to_apply_changes_to_file(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bool_0 = True
        text_i_o_0 = module_1.TextIO()
        str_0 = '(Zp?k0#qT'
        str_1 = module_0.format_natural(str_0)
        str_2 = 'yA~i@UmF%`~$RAc%-['
        str_3 = '1 '
        path_0 = module_2.Path()
        var_0 = module_0.show_unified_diff(file_input=str_2, file_output=str_3, file_path=path_0, color_output=bool_0)
        bool_1 = False
        var_1 = module_0.create_terminal_printer(bool_1, text_i_o_0)
        str_4 = 's:4/h$\t;50U`'
        str_5 = module_0.format_simplified(str_4)
        str_6 = "_7wJ >&'2"
        bool_2 = module_0.ask_whether_to_apply_changes_to_file(str_6)
    except BaseException:
        pass

def test_case_3():
    try:
        colorama_printer_0 = module_0.ColoramaPrinter()
        str_0 = None
        colorama_printer_0.diff_line(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        colorama_printer_0 = module_0.ColoramaPrinter()
        bool_0 = True
        var_0 = module_0.create_terminal_printer(bool_0)
        str_0 = 'ZGCti<U7}4t5'
        str_1 = '1 '
        path_0 = module_2.Path()
        str_2 = ',@/en'
        str_3 = module_0.format_simplified(str_2)
        var_1 = module_0.show_unified_diff(file_input=str_0, file_output=str_1, file_path=path_0, color_output=bool_0)
        str_4 = 's:4/h$\t;50U`'
        var_2 = path_0.is_fifo()
        str_5 = ':n.iea'
        str_6 = module_0.format_natural(str_5)
        str_7 = module_0.format_natural(str_6)
        str_8 = module_0.remove_whitespace(str_4, str_0)
        bool_1 = True
        var_3 = module_0.create_terminal_printer(bool_1)
        colorama_printer_1 = module_0.ColoramaPrinter()
        colorama_printer_1.diff_line(str_1)
        bool_2 = module_0.ask_whether_to_apply_changes_to_file(str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        bool_0 = True
        str_0 = 'ZGCti<U7}4t5'
        text_i_o_0 = module_1.TextIO()
        str_1 = '(Zp?k0#qT'
        str_2 = module_0.format_natural(str_1)
        str_3 = '1 '
        path_0 = module_2.Path()
        var_0 = module_0.show_unified_diff(file_input=str_0, file_output=str_3, file_path=path_0, color_output=bool_0)
        bool_1 = False
        var_1 = module_0.create_terminal_printer(bool_1, text_i_o_0)
        str_4 = 's:4/h$\t;50U`'
        str_5 = module_0.format_simplified(str_4)
        colorama_printer_0 = module_0.ColoramaPrinter(text_i_o_0)
        str_6 = module_0.format_natural(str_2)
        str_7 = 'a\rbJ^!eHGO}&7Y\r\x0cu7['
        str_8 = module_0.remove_whitespace(str_7)
        basic_printer_0 = module_0.BasicPrinter(text_i_o_0)
        basic_printer_0.error(str_6)
        var_2 = module_0.create_terminal_printer(bool_1)
        str_9 = 'H),ja'
        basic_printer_0.diff_line(str_9)
        str_10 = "K6`>2t(W'4"
        bool_2 = module_0.ask_whether_to_apply_changes_to_file(str_10)
    except BaseException:
        pass