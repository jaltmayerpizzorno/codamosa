# Automatically generated by Pynguin.
import isort.format as module_0
import typing as module_1
import pathlib as module_2

def test_case_0():
    try:
        str_0 = None
        optional_0 = None
        var_0 = module_0.show_unified_diff(file_input=str_0, file_output=str_0, file_path=optional_0)
    except BaseException:
        pass

def test_case_1():
    try:
        path_0 = None
        basic_printer_0 = module_0.BasicPrinter()
        str_0 = 's$~iQkCsNXb)I>6D]r'
        str_1 = "Cw?RL_d'b:mD@Xp,"
        basic_printer_0.diff_line(str_1)
        basic_printer_0.success(str_0)
        str_2 = "'>&~"
        str_3 = "'##~LJ03*h{S\t/"
        var_0 = module_0.show_unified_diff(file_input=str_2, file_output=str_3, file_path=path_0)
        str_4 = '.__combined_as__'
        basic_printer_0.diff_line(str_4)
        basic_printer_1 = module_0.BasicPrinter()
        bool_0 = module_0.ask_whether_to_apply_changes_to_file(str_4)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = './bad_file'
        bool_0 = module_0.ask_whether_to_apply_changes_to_file(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = None
        str_1 = 'difflib'
        basic_printer_0 = module_0.BasicPrinter()
        basic_printer_0.success(str_1)
        str_2 = module_0.remove_whitespace(str_0, str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'QEO9%`qG|sMTop],6_q'
        basic_printer_0 = module_0.BasicPrinter()
        basic_printer_0.error(str_0)
        bool_0 = module_0.ask_whether_to_apply_changes_to_file(str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'Fixing '
        set_0 = None
        bytes_0 = b'\x88\xd7\x19K\xfb\xf9\xe2>Iz\x05G\xd1\xfb\xff\r]\xae\xb7\x16'
        bool_0 = True
        var_0 = module_0.show_unified_diff(file_input=str_0, file_output=str_0, file_path=set_0, output=bytes_0, color_output=bool_0)
        basic_printer_0 = module_0.BasicPrinter()
        str_1 = None
        text_i_o_0 = module_1.TextIO()
        colorama_printer_0 = module_0.ColoramaPrinter(text_i_o_0)
        colorama_printer_0.diff_line(str_1)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = '--remove-redundant-aliases'
        none_type_0 = None
        colorama_printer_0 = module_0.ColoramaPrinter(none_type_0)
        str_1 = 'RS"$\t\t\'R'
        colorama_printer_0.diff_line(str_1)
        str_2 = '--force-sort-within-sections'
        str_3 = module_0.format_natural(str_2)
        str_4 = 'a+v9(.e2)Du!M'
        basic_printer_0 = module_0.BasicPrinter()
        colorama_printer_1 = module_0.ColoramaPrinter()
        colorama_printer_1.diff_line(str_4)
        str_5 = colorama_printer_1.style_text(str_3)
        basic_printer_0.success(str_4)
        str_6 = module_0.format_natural(str_5)
        str_7 = module_0.format_natural(str_0)
        str_8 = module_0.format_natural(str_0)
        str_9 = '9cwf\x0b\n#S36yI8"]E'
        bool_0 = module_0.ask_whether_to_apply_changes_to_file(str_9)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = '!#['
        str_1 = module_0.format_simplified(str_0)
        list_0 = [str_0, str_0, str_1, str_1]
        path_0 = module_2.Path(*list_0)
        list_1 = [str_1, path_0, str_1, list_0]
        var_0 = module_0.show_unified_diff(file_input=str_0, file_output=str_0, file_path=path_0, output=list_1)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = ',g6aL6;S-v0;$`=\x0cP'
        bool_0 = False
        basic_printer_0 = module_0.BasicPrinter()
        float_0 = 698.0
        var_0 = module_0.create_terminal_printer(bool_0, float_0)
        bool_1 = module_0.ask_whether_to_apply_changes_to_file(str_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'import os'
        str_1 = module_0.format_simplified(str_0)
        str_2 = 'from os import path'
        str_3 = module_0.format_simplified(str_2)
        bool_0 = module_0.ask_whether_to_apply_changes_to_file(str_1)
    except BaseException:
        pass