# Automatically generated by Pynguin.
import typesystem.fields as module_0
import typesystem.schemas as module_1

def test_case_0():
    pass

def test_case_1():
    str_0 = 'Ep &-Lo$'
    field_0 = module_0.Field(description=str_0, default=str_0)
    schema_definitions_0 = module_1.SchemaDefinitions()
    module_1.set_definitions(field_0, schema_definitions_0)

def test_case_2():
    schema_definitions_0 = module_1.SchemaDefinitions()
    iterator_0 = schema_definitions_0.__iter__()
    schema_0 = module_1.Schema()
    bool_0 = schema_0.__eq__(schema_0)
    iterator_1 = schema_0.__iter__()

def test_case_3():
    schema_definitions_0 = module_1.SchemaDefinitions()
    str_0 = 'Person'
    schema_definitions_0.__setitem__(str_0, str_0)
    reference_0 = module_1.Reference(str_0)
    module_1.set_definitions(reference_0, schema_definitions_0)

def test_case_4():
    schema_0 = module_1.Schema()

def test_case_5():
    str_0 = 'John'
    list_0 = [str_0]
    schema_0 = module_1.Schema(*list_0)

def test_case_6():
    schema_0 = module_1.Schema()
    str_0 = schema_0.__repr__()

def test_case_7():
    schema_0 = module_1.Schema()
    int_0 = schema_0.__len__()

def test_case_8():
    str_0 = 'ESf-tFW=-xD]>?'
    reference_0 = module_1.Reference(str_0)

def test_case_9():
    list_0 = []
    schema_0 = module_1.Schema(*list_0)
    str_0 = schema_0.__repr__()
    reference_0 = module_1.Reference(str_0)
    any_0 = reference_0.serialize(schema_0)

def test_case_10():
    schema_0 = module_1.Schema()
    bool_0 = schema_0.__eq__(schema_0)

def test_case_11():
    schema_definitions_0 = module_1.SchemaDefinitions()
    str_0 = 'Person'
    reference_0 = module_1.Reference(str_0)
    module_1.set_definitions(reference_0, schema_definitions_0)

def test_case_12():
    schema_definitions_0 = module_1.SchemaDefinitions()
    str_0 = 'person'
    reference_0 = module_1.Reference(str_0)
    str_1 = 'people'
    str_2 = 'children'
    array_0 = module_0.Array(reference_0)
    str_3 = 'object'
    reference_1 = module_1.Reference(str_0)
    reference_2 = {str_0: reference_1}
    object_0 = module_0.Object(properties=reference_2)
    array_1 = module_0.Array(object_0)
    module_1.set_definitions(reference_0, schema_definitions_0)
    module_1.set_definitions(array_0, schema_definitions_0)
    module_1.set_definitions(array_1, schema_definitions_0)