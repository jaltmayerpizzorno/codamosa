# Automatically generated by Pynguin.
import ansible.plugins.action.validate_argument_spec as module_0

def test_case_0():
    try:
        dict_0 = {}
        list_0 = [dict_0]
        tuple_0 = ()
        dict_1 = {tuple_0: tuple_0, tuple_0: tuple_0}
        bool_0 = True
        float_0 = 0.5
        str_0 = 'Dec'
        int_0 = 32
        action_module_0 = module_0.ActionModule(tuple_0, dict_1, bool_0, float_0, str_0, int_0)
        var_0 = action_module_0.get_args_from_task_vars(dict_0, list_0)
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = 535000
        bool_0 = False
        set_0 = {bool_0, int_0, bool_0}
        float_0 = 0.2
        dict_0 = {}
        action_module_0 = module_0.ActionModule(int_0, bool_0, set_0, float_0, dict_0, dict_0)
        var_0 = action_module_0.run()
    except BaseException:
        pass

def test_case_2():
    try:
        tuple_0 = ()
        int_0 = 1611
        str_0 = '%>,h7sEg`1LHqQ'
        float_0 = -3174.0
        list_0 = [float_0, float_0]
        set_0 = {str_0}
        action_module_0 = module_0.ActionModule(int_0, list_0, set_0, float_0, tuple_0, tuple_0)
        bool_0 = False
        dict_0 = {action_module_0: bool_0, float_0: str_0}
        var_0 = action_module_0.run(bool_0, dict_0)
    except BaseException:
        pass

def test_case_3():
    try:
        int_0 = -592
        dict_0 = {int_0: int_0}
        str_0 = 'no redirect found for {0}'
        dict_1 = {}
        tuple_0 = ()
        str_1 = 'qrbq0DbH\n9PW<'
        set_0 = {tuple_0}
        str_2 = '.4B&4Jk%M&:{(#\r'
        str_3 = '6:E<aRrL2ErOyUj'
        list_0 = [tuple_0, tuple_0]
        bytes_0 = b'\xbb\x1c\xb4\xfa\xf7 \xac\xc8\xf2'
        action_module_0 = module_0.ActionModule(set_0, str_2, set_0, str_3, list_0, bytes_0)
        action_module_1 = module_0.ActionModule(dict_1, tuple_0, str_1, action_module_0, tuple_0, action_module_0)
        var_0 = action_module_1.get_args_from_task_vars(dict_0, str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        int_0 = -592
        dict_0 = {int_0: int_0}
        tuple_0 = ()
        str_0 = '8uKUr\t:IM"'
        str_1 = '.4B&4Jk%M&:{(#\r'
        bytes_0 = b'\xbb\x1c\xb4\xfa\xf7 \xac\xc8\xf2'
        complex_0 = None
        float_0 = None
        list_0 = [complex_0]
        set_0 = {str_1}
        bool_0 = False
        list_1 = [set_0, bytes_0, bool_0]
        str_2 = 'Xg{TO3{I,\\?fFqca'
        action_module_0 = module_0.ActionModule(list_0, complex_0, list_1, int_0, str_2, tuple_0)
        action_module_1 = module_0.ActionModule(float_0, action_module_0, str_0, float_0, bytes_0, list_0)
        int_1 = -227
        str_3 = 's;\tq7x#Ss'
        int_2 = 32700
        str_4 = 'q-RJFtnUu,% 8ke:n9d]'
        action_module_2 = module_0.ActionModule(int_1, str_3, dict_0, int_2, str_4, list_0)
        var_0 = action_module_1.get_args_from_task_vars(dict_0, set_0)
    except BaseException:
        pass

def test_case_5():
    try:
        float_0 = -1468.38
        str_0 = '=UmMgudO"Xtvl8P\'\ra;'
        set_0 = {str_0, float_0}
        dict_0 = None
        bool_0 = False
        int_0 = 333
        dict_1 = {}
        float_1 = 125.31719
        bytes_0 = b'\x88\xd3\xact`X\x10\xdc\xe0'
        action_module_0 = module_0.ActionModule(str_0, float_0, int_0, dict_1, float_1, bytes_0)
        action_module_1 = module_0.ActionModule(set_0, set_0, set_0, dict_0, bool_0, action_module_0)
        dict_2 = {str_0: str_0, float_0: action_module_1}
        int_1 = -5262
        dict_3 = {int_1: int_1}
        str_1 = '7R('
        int_2 = 8
        action_module_2 = module_0.ActionModule(int_1, dict_3, float_0, str_1, str_1, int_2)
        var_0 = action_module_2.get_args_from_task_vars(dict_2, set_0)
    except BaseException:
        pass