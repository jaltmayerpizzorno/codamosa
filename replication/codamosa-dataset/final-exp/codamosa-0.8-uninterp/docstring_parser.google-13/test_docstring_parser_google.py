# Automatically generated by Pynguin.
import docstring_parser.google as module_0

def test_case_0():
    pass

def test_case_1():
    google_parser_0 = module_0.GoogleParser()

def test_case_2():
    google_parser_0 = module_0.GoogleParser()
    list_0 = [google_parser_0, google_parser_0, google_parser_0]
    section_0 = module_0.Section(*list_0)
    var_0 = google_parser_0.add_section(section_0)
    str_0 = 'Description of the function.\n\n    Arguments:\n      arg1(int): description for arg1.\n      arg2(str): description for arg2.\n\n    Returns:\n      An integer.\n    '
    google_parser_1 = module_0.GoogleParser()
    docstring_0 = google_parser_1.parse(str_0)

def test_case_3():
    str_0 = 'D'
    docstring_0 = module_0.parse(str_0)

def test_case_4():
    str_0 = '\n    This is the short description\n    Long description.\n\n    This is a section ofthe log description.\n\n    Args:\n      arg_1: The first argument.\n      arg_2: The second argument.\n     iarg_: The third argument.\n\n    Returns:\n      Nothing.\n    '
    docstring_0 = module_0.parse(str_0)

def test_case_5():
    str_0 = 'Description of the function.\n\n    Arguments:\n      arg1(int): description for arg1.\n      arg2(str): description for arg2.\n\n    Returns:\n      An integer.\n    '
    docstring_0 = module_0.parse(str_0)
    str_1 = ''
    docstring_1 = module_0.parse(str_1)

def test_case_6():
    str_0 = 'Description of the function.\n\n    Arguments:\n      arg1(int): description for arg1.\n      arg2(str): description fr arg2.\n\n    Returns:\n      An integer.\n    '
    str_1 = ' '
    docstring_0 = module_0.parse(str_1)
    docstring_1 = module_0.parse(str_0)

def test_case_7():
    str_0 = 'Description of the function.\n\n    Arguments:\n      arg1(int): description for arg1.\n      arg2(str): description for arg2.\n\n    Returns:\n      An integer.\n    '
    docstring_0 = module_0.parse(str_0)

def test_case_8():
    str_0 = "Example.\n    Args:\n        arg (int): Description of arg.\n        *args: Description of *args.\n        arg_kw (str): Description of arg_kw.\n        **kwargs: Description of **kwargs.\n        arg_kw_def (int, optional): Arg kw def. Defaults to '0'.\n    "
    google_parser_0 = module_0.GoogleParser()
    docstring_0 = google_parser_0.parse(str_0)
    int_0 = 1
    var_0 = docstring_0.meta[int_0]

def test_case_9():
    google_parser_0 = module_0.GoogleParser()
    str_0 = 'l+7A1'
    docstring_0 = module_0.parse(str_0)
    docstring_1 = google_parser_0.parse(str_0)
    str_1 = 'vh:J\x0b>bP'
    docstring_2 = module_0.parse(str_1)
    str_2 = ':'
    none_type_0 = None
    bool_0 = False
    google_parser_1 = module_0.GoogleParser(none_type_0, bool_0)
    docstring_3 = google_parser_0.parse(str_2)

def test_case_10():
    google_parser_0 = module_0.GoogleParser()
    str_0 = '    Returns the item at a given position.\n\n    Raises:\n        IdexError: when position isout of range.\n\n    Returns:\n        int: the item.\n    '
    docstring_0 = google_parser_0.parse(str_0)

def test_case_11():
    str_0 = 'Description of the Zunction.\n\n    Arguments:\n      arg1(int):tdescrition or arg1.\n      arg2(str): descripXion for arg2.\n\n    Returns:\n      An integer.\n    '
    docstring_0 = module_0.parse(str_0)