# Automatically generated by Pynguin.
import string_utils.validation as module_0

def test_case_0():
    bool_0 = True
    bool_1 = module_0.is_json(bool_0)

def test_case_1():
    str_0 = 'v,9;'
    bool_0 = module_0.is_isbn(str_0)

def test_case_2():
    str_0 = '255.20.100.75'
    bool_0 = module_0.is_isbn(str_0)

def test_case_3():
    str_0 = 'is_string'
    int_0 = module_0.words_count(str_0)
    str_1 = 'strip_html'
    bool_0 = module_0.is_isbn(str_1)

def test_case_4():
    str_0 = 'oI/.n}YeYcad%h+'
    bool_0 = module_0.is_integer(str_0)

def test_case_5():
    str_0 = 'z*'
    bool_0 = module_0.is_decimal(str_0)

def test_case_6():
    str_0 = '!R{i6w^wYzc\nE\x0cK?u'
    str_1 = '('
    bool_0 = module_0.is_url(str_0, str_1)
    bool_1 = module_0.is_isbn_13(str_0)

def test_case_7():
    str_0 = '4111111111111111'
    bool_0 = module_0.is_credit_card(str_0)
    str_1 = '5105105105105100'
    bool_1 = module_0.is_credit_card(str_1)
    str_2 = ''
    str_3 = '{'
    str_4 = 'GA{V127Hg'
    list_0 = [str_2, str_3, str_4, str_1]
    bool_2 = module_0.is_url(bool_1, list_0)

def test_case_8():
    str_0 = 'a@gmail.com'
    bool_0 = module_0.is_email(str_0)

def test_case_9():
    str_0 = 'is_ip_v4'
    bool_0 = module_0.is_email(str_0)

def test_case_10():
    str_0 = '2001:db8:85a3:0000:0000:8a2e:370:7334'
    bool_0 = module_0.is_ip(str_0)
    bool_1 = module_0.is_email(bool_0)

def test_case_11():
    str_0 = '255.200.100.75'
    bool_0 = module_0.is_credit_card(str_0)

def test_case_12():
    str_0 = '255.200.100.75'
    str_1 = '"\\ has space"@the-provider.com\\ has space'
    bool_0 = module_0.is_email(str_1)
    bool_1 = module_0.is_isbn(str_0)
    bool_2 = module_0.is_email(str_1)
    bool_3 = module_0.is_credit_card(bool_0)

def test_case_13():
    tuple_0 = ()
    bool_0 = module_0.is_camel_case(tuple_0)

def test_case_14():
    bytes_0 = b'\xa5,\xc3\xb3\xd42\xbf\xd4\xbf8\xf4\xb5\x1c\xc4\xbf'
    str_0 = None
    bool_0 = module_0.is_snake_case(bytes_0, str_0)
    str_1 = ' FpQ'
    bool_1 = module_0.is_decimal(str_1)

def test_case_15():
    str_0 = '^3(?:0[0-5]|[68]\\d)\\d{11}$'
    bool_0 = module_0.contains_html(str_0)
    bool_1 = module_0.is_snake_case(str_0, str_0)
    str_1 = '-SdUNY Z,BY^_dERV\t'
    bool_2 = module_0.is_palindrome(str_1, bool_0)
    bool_3 = module_0.is_integer(str_1)

def test_case_16():
    dict_0 = None
    bool_0 = module_0.is_uuid(dict_0)

def test_case_17():
    int_0 = 248
    bool_0 = module_0.is_ip_v4(int_0)

def test_case_18():
    str_0 = '255.200.100.75'
    bool_0 = module_0.is_ip(str_0)

def test_case_19():
    str_0 = 'yOD\t'
    bool_0 = False
    bool_1 = module_0.is_palindrome(str_0, bool_0)
    bool_2 = module_0.contains_html(str_0)
    str_1 = 'v,9;'
    bool_3 = module_0.is_isbn(str_1)

def test_case_20():
    str_0 = '978-0-306-40615-4'
    i_s_b_n_checker_0 = module_0.__ISBNChecker(str_0)
    bool_0 = i_s_b_n_checker_0.is_isbn_13()
    bool_1 = module_0.is_email(str_0)
    bool_2 = module_0.is_email(i_s_b_n_checker_0)
    bool_3 = module_0.is_palindrome(bool_1, bool_0)
    bool_4 = module_0.is_email(str_0)

def test_case_21():
    str_0 = "Madam, I'm Adam."
    bool_0 = module_0.is_palindrome(str_0)
    bool_1 = True
    bool_2 = module_0.is_palindrome(str_0, bool_1)
    bool_3 = module_0.is_palindrome(str_0, bool_1)
    bool_4 = module_0.is_palindrome(str_0, bool_1, bool_1)
    str_1 = "Madam, I'm Adam."
    bool_5 = False
    bool_6 = module_0.is_palindrome(str_1, bool_5, bool_5)
    str_2 = 'Madamiamadam'
    bool_7 = module_0.is_palindrome(str_2)
    str_3 = 'Madamiamadam'
    bool_8 = module_0.is_palindrome(str_3, bool_1)
    var_0 = str_3

def test_case_22():
    str_0 = 'S\nXGQ7K'
    bool_0 = module_0.is_pangram(str_0)

def test_case_23():
    tuple_0 = None
    bool_0 = module_0.is_pangram(tuple_0)

def test_case_24():
    set_0 = set()
    bool_0 = module_0.is_ip(set_0)
    str_0 = 'q'
    set_1 = {str_0, str_0}
    bool_1 = module_0.is_isogram(set_1)

def test_case_25():
    str_0 = '255.200.100.75'
    bool_0 = module_0.is_slug(str_0)
    bool_1 = module_0.is_ip(str_0)
    bool_2 = module_0.is_camel_case(bool_1)

def test_case_26():
    int_0 = 571
    bool_0 = module_0.is_slug(int_0)

def test_case_27():
    str_0 = '2WHR'
    bool_0 = module_0.contains_html(str_0)

def test_case_28():
    str_0 = 'yOD\t'
    bool_0 = module_0.contains_html(str_0)
    str_1 = 'v,9;'
    bool_1 = module_0.is_isbn_10(str_1)
    bool_2 = module_0.is_isbn(str_1)

def test_case_29():
    str_0 = 'V(/'
    bool_0 = False
    i_s_b_n_checker_0 = module_0.__ISBNChecker(str_0, bool_0)
    dict_0 = {i_s_b_n_checker_0: str_0, bool_0: str_0, bool_0: str_0, bool_0: bool_0}
    bool_1 = module_0.is_string(dict_0)

def test_case_30():
    dict_0 = {}
    bool_0 = module_0.is_camel_case(dict_0)
    str_0 = '5h.Y0@Kr.\x0c@'
    i_s_b_n_checker_0 = module_0.__ISBNChecker(str_0)
    bool_1 = i_s_b_n_checker_0.is_isbn_13()
    int_0 = -2277
    bool_2 = module_0.is_ip(int_0)
    bool_3 = module_0.is_camel_case(str_0)
    bool_4 = module_0.is_email(str_0)
    str_1 = '^[^\\S\\r\\n]+'
    bool_5 = module_0.is_number(str_1)
    bool_6 = module_0.contains_html(str_0)
    bool_7 = module_0.is_number(str_0)
    bool_8 = i_s_b_n_checker_0.is_isbn_10()
    bool_9 = module_0.is_slug(int_0, str_0)
    i_s_b_n_checker_1 = module_0.__ISBNChecker(str_1)
    bool_10 = module_0.contains_html(str_0)
    int_1 = module_0.words_count(str_0)
    str_2 = '^AR:t{9eY]r+M]t.J'
    bool_11 = module_0.is_url(str_0, i_s_b_n_checker_0)
    bool_12 = module_0.is_number(str_1)
    bool_13 = module_0.is_ip_v4(str_2)
    bool_14 = module_0.is_credit_card(bool_1)

def test_case_31():
    str_0 = '255.200.100.75'
    bool_0 = module_0.is_uuid(str_0)
    bool_1 = module_0.is_ip(str_0)
    bool_2 = module_0.is_isbn(str_0)
    bool_3 = module_0.is_json(str_0)
    str_1 = 'nope'
    bool_4 = module_0.is_ip_v4(str_1)
    str_2 = '255.200.100.999'
    bool_5 = module_0.is_ip_v4(str_2)

def test_case_32():
    str_0 = '[1, 2, 3]'
    bool_0 = module_0.is_json(str_0)
    str_1 = '{nope}'
    bool_1 = module_0.is_json(str_1)

def test_case_33():
    str_0 = '62'
    bool_0 = module_0.is_ip(str_0)

def test_case_34():
    int_0 = 1184
    bool_0 = module_0.is_ip(int_0)

def test_case_35():
    str_0 = '_GdK:pC]@;LS4<\x0bJ\tN'
    bool_0 = True
    bool_1 = module_0.is_isbn(str_0, bool_0)
    bool_2 = module_0.is_string(str_0)
    bool_3 = module_0.is_isogram(str_0)
    int_0 = module_0.words_count(str_0)
    float_0 = 754.445476
    bool_4 = module_0.is_ip_v6(float_0)
    bool_5 = module_0.is_isbn(str_0)
    bool_6 = module_0.is_full_string(int_0)
    bytes_0 = b'\x97\xbc\x0c'
    bool_7 = module_0.is_snake_case(bytes_0, str_0)
    i_s_b_n_checker_0 = module_0.__ISBNChecker(str_0)

def test_case_36():
    str_0 = '255.2.100.75'
    bool_0 = module_0.is_ip_v4(str_0)
    bool_1 = module_0.is_full_string(str_0)
    str_1 = 'nope'
    str_2 = 'nope'
    bool_2 = module_0.is_ip_v4(bool_0)
    bool_3 = module_0.is_email(str_1)
    bool_4 = module_0.is_decimal(str_0)
    str_3 = '0'
    bool_5 = module_0.is_decimal(str_3)
    bool_6 = module_0.is_email(bool_1)
    i_s_b_n_checker_0 = module_0.__ISBNChecker(str_3)
    bool_7 = module_0.is_json(str_2)

def test_case_37():
    str_0 = 'gPh\x0c#`fa%<WoH('
    bool_0 = module_0.is_number(str_0)
    str_1 = 'n\\~)qlKlxY`'
    bool_1 = False
    bool_2 = module_0.is_snake_case(bool_1, str_1)
    bool_3 = module_0.contains_html(str_0)
    bool_4 = module_0.is_isbn_10(str_1, bool_1)
    str_2 = "\n    Checks if a string is formatted as camel case.\n\n    A string is considered camel case when:\n\n    - it's composed only by letters ([a-zA-Z]) and optionally numbers ([0-9])\n    - it contains both lowercase and uppercase letters\n    - it does not start with a number\n\n    *Examples:*\n\n    >>> is_camel_case('MyString') # returns true\n    >>> is_camel_case('mystring') # returns false\n\n    :param input_string: String to test.\n    :type input_string: str\n    :return: True for a camel case string, false otherwise.\n    "
    bool_5 = module_0.is_integer(str_2)
    str_3 = '\tg7Bq'
    str_4 = 'Y\x0b0Nc`&'
    bool_6 = module_0.is_decimal(str_4)
    bool_7 = module_0.is_number(str_2)
    bool_8 = module_0.is_isbn(str_0)
    str_5 = ')aOY+>'
    bool_9 = module_0.is_isbn(str_5)
    bool_10 = module_0.is_camel_case(bool_1)
    bool_11 = module_0.is_full_string(bool_5)
    str_6 = "\n    Check if a string is not empty (it must contains at least one non space character).\n\n    *Examples:*\n\n    >>> is_full_string(None) # returns false\n    >>> is_full_string('') # returns false\n    >>> is_full_string(' ') # returns false\n    >>> is_full_string('hello') # returns true\n\n    :param input_string: String to check.\n    :type input_string: str\n    :return: True if not empty, false otherwise.\n    "
    bool_12 = module_0.contains_html(str_6)
    bool_13 = False
    bool_14 = module_0.is_number(str_3)
    bool_15 = module_0.is_email(str_2)
    i_s_b_n_checker_0 = module_0.__ISBNChecker(str_3, bool_13)
    bool_16 = i_s_b_n_checker_0.is_isbn_10()
    bool_17 = i_s_b_n_checker_0.is_isbn_13()
    i_s_b_n_checker_1 = module_0.__ISBNChecker(str_0)
    bool_18 = module_0.is_uuid(i_s_b_n_checker_0)
    bool_19 = i_s_b_n_checker_0.is_isbn_10()
    bool_20 = i_s_b_n_checker_0.is_isbn_10()

def test_case_38():
    str_0 = '4111111111111111'
    bool_0 = module_0.is_credit_card(str_0)
    str_1 = '5105105105105100'
    bool_1 = module_0.is_credit_card(str_1)
    str_2 = '5105105105105106'
    bool_2 = module_0.is_credit_card(str_2)

def test_case_39():
    str_0 = '255.200.100.75'
    bool_0 = module_0.is_ip_v4(str_0)
    str_1 = 'nope'
    bool_1 = module_0.is_ip_v4(str_1)
    str_2 = '255.200.100.999'
    bool_2 = module_0.is_ip_v4(str_2)

def test_case_40():
    str_0 = 'my.email@the-provider.com'
    bool_0 = module_0.is_email(str_0)
    bool_1 = module_0.is_email(str_0)
    str_1 = 'my.email..something@the-provider.com'
    bool_2 = module_0.is_email(str_1)
    str_2 = 'my.email@the-provider.com\\ something'
    bool_3 = module_0.is_email(str_2)
    str_3 = '"\\ has space"@the-provider.com'
    bool_4 = module_0.is_email(str_3)
    str_4 = '"\\ has space"@the-provider.com\\ has space'
    bool_5 = module_0.is_email(str_4)

def test_case_41():
    str_0 = 'my.email@the-provider.com'
    bool_0 = module_0.is_email(str_0)
    str_1 = '.my.email@the-provider.com'
    bool_1 = module_0.is_email(str_1)
    str_2 = 'my.email.@the-provider.com'
    bool_2 = module_0.is_email(str_2)
    str_3 = 'my.email..something@the-provider.com'
    bool_3 = module_0.is_email(str_3)
    str_4 = 'my.email\\ something@the-provider.com'
    bool_4 = module_0.is_email(str_4)
    str_5 = 'my.email@the-provider.com\\ something'
    bool_5 = module_0.is_email(str_5)
    bool_6 = module_0.is_ip_v4(str_1)

def test_case_42():
    str_0 = 'MASTERCARD'
    bool_0 = module_0.is_credit_card(str_0, str_0)

def test_case_43():
    str_0 = 'https://www.google.com'
    bool_0 = module_0.is_url(str_0)
    str_1 = 'file:///etc/hosts'
    bool_1 = module_0.is_url(str_1)
    str_2 = 'ftp://ftp.redhat.com'
    bool_2 = module_0.is_url(str_2)
    str_3 = 'elo://elo.elo.elo'
    bool_3 = module_0.is_url(str_3)
    str_4 = 'www.google.com'
    str_5 = ''
    str_6 = [str_5]
    bool_4 = module_0.is_url(str_4, str_6)
    str_7 = 'http'
    str_8 = 'https'
    str_9 = [str_7, str_8]
    bool_5 = module_0.is_url(str_7, str_9)
    str_10 = [str_7, str_8]
    bool_6 = module_0.is_url(str_0, str_10)
    str_11 = [str_7, str_8]
    bool_7 = module_0.is_url(str_2, str_11)