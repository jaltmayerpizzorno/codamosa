# Automatically generated by Pynguin.
import typesystem.composites as module_0
import typesystem.fields as module_1

def test_case_0():
    pass

def test_case_1():
    never_match_0 = module_0.NeverMatch()

def test_case_2():
    str_0 = "iMoFF\x0c\nz8=x1C}'G"
    field_0 = module_1.Field(title=str_0)
    bytes_0 = b'n\xa7\xf2\xc6Nn\x02ga\xc5)EJ\xe0TC\x17'
    field_1 = module_1.Field(default=bytes_0)
    union_0 = field_1.__or__(field_0)
    list_0 = []
    all_of_0 = module_0.AllOf(list_0)
    any_0 = all_of_0.validate(union_0)

def test_case_3():
    str_0 = '#p\tces['
    field_0 = module_1.Field(description=str_0)
    not_0 = module_0.Not(field_0)

def test_case_4():
    field_0 = module_1.Field()
    if_then_else_0 = module_0.IfThenElse(field_0)

def test_case_5():
    any_0 = module_1.Any()
    if_then_else_0 = module_0.IfThenElse(any_0, any_0, any_0)
    any_1 = if_then_else_0.validate(any_0)

def test_case_6():
    any_0 = module_1.Any()
    any_1 = [any_0]
    one_of_0 = module_0.OneOf(any_1)
    int_0 = 1
    bool_0 = True
    any_2 = one_of_0.validate(int_0, bool_0)

def test_case_7():
    never_match_0 = module_0.NeverMatch()
    not_0 = module_0.Not(never_match_0)
    str_0 = 'test'
    any_0 = not_0.validate(str_0)