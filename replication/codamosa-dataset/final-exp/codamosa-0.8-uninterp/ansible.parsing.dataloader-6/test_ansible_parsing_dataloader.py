# Automatically generated by Pynguin.
import ansible.parsing.dataloader as module_0
import ansible.utils.display as module_1
import ansible.parsing.vault as module_2

def test_case_0():
    pass

def test_case_1():
    data_loader_0 = module_0.DataLoader()

def test_case_2():
    data_loader_0 = module_0.DataLoader()
    str_0 = '/etc/passwd'
    var_0 = data_loader_0.get_real_file(str_0)

def test_case_3():
    set_0 = set()
    data_loader_0 = module_0.DataLoader()
    var_0 = data_loader_0.is_directory(set_0)

def test_case_4():
    data_loader_0 = module_0.DataLoader()
    str_0 = ''
    var_0 = data_loader_0.find_vars_files(str_0, str_0)

def test_case_5():
    data_loader_0 = module_0.DataLoader()
    str_0 = '/etc/passwd'
    var_0 = data_loader_0.get_real_file(str_0)
    var_1 = data_loader_0.get_basedir()

def test_case_6():
    data_loader_0 = module_0.DataLoader()
    var_0 = data_loader_0.cleanup_all_tmp_files()
    float_0 = 1000.0
    str_0 = 'EY\'.NyLmsTl9"}E'
    bool_0 = False
    var_1 = data_loader_0.path_dwim_relative(str_0, str_0, bool_0, float_0)

def test_case_7():
    data_loader_0 = module_0.DataLoader()
    var_0 = data_loader_0.cleanup_tmp_file(data_loader_0)

def test_case_8():
    data_loader_0 = module_0.DataLoader()
    var_0 = data_loader_0.cleanup_all_tmp_files()

def test_case_9():
    data_loader_0 = module_0.DataLoader()
    str_0 = 'I.3/H}!T='
    str_1 = ''
    bool_0 = True
    var_0 = data_loader_0.path_dwim_relative_stack(str_0, str_1, str_1, bool_0)
    var_1 = data_loader_0.cleanup_all_tmp_files()

def test_case_10():
    set_0 = set()
    list_0 = [set_0]
    data_loader_0 = module_0.DataLoader()
    var_0 = data_loader_0.path_dwim(list_0)
    data_loader_1 = module_0.DataLoader()
    str_0 = '/etc/passwd'
    var_1 = data_loader_1.get_real_file(str_0)
    bool_0 = False
    var_2 = data_loader_0.path_dwim_relative_stack(bool_0, data_loader_0, str_0)
    float_0 = 2542.8
    var_3 = data_loader_0.cleanup_tmp_file(set_0)
    tuple_0 = ()
    complex_0 = None
    var_4 = data_loader_1.path_dwim_relative(complex_0, float_0, str_0, tuple_0)
    data_loader_2 = module_0.DataLoader()
    bool_1 = False
    var_5 = data_loader_2.set_basedir(bool_1)
    var_6 = data_loader_0.get_basedir()

def test_case_11():
    data_loader_0 = module_0.DataLoader()
    str_0 = '/dev/null'
    str_1 = ''
    var_0 = data_loader_0.load_from_file(str_0, str_1, str_1, str_1)

def test_case_12():
    bytes_0 = b'\x1e7a\x13\x97\xca\x9f'
    data_loader_0 = module_0.DataLoader()
    dict_0 = {}
    str_0 = "dTto>lds/R'"
    display_0 = module_1.Display()
    var_0 = data_loader_0.cleanup_tmp_file(display_0)
    data_loader_1 = None
    str_1 = '|S"i{H/l'
    dict_1 = {str_0: data_loader_0, str_0: data_loader_1, str_1: bytes_0, str_0: data_loader_1}
    str_2 = '~'
    var_1 = data_loader_0.path_dwim_relative_stack(dict_0, dict_1, str_2)
    str_3 = ''
    var_2 = display_0.vv(str_3)
    var_3 = data_loader_0.cleanup_tmp_file(bytes_0)
    var_4 = data_loader_0.get_basedir()

def test_case_13():
    data_loader_0 = module_0.DataLoader()
    str_0 = '/etc/passwd'
    var_0 = data_loader_0.get_real_file(str_0)
    bool_0 = False
    var_1 = data_loader_0.path_dwim_relative_stack(bool_0, data_loader_0, str_0)
    var_2 = data_loader_0.get_basedir()
    str_1 = 'z).]rzz[ ht'
    data_loader_1 = module_0.DataLoader()
    var_3 = data_loader_1.is_directory(str_1)
    var_4 = data_loader_1.cleanup_all_tmp_files()
    data_loader_2 = module_0.DataLoader()
    float_0 = 2159.5101037119316
    str_2 = None
    data_loader_3 = module_0.DataLoader()
    var_5 = data_loader_3.load_from_file(str_0, str_2, float_0)

def test_case_14():
    display_0 = module_1.Display()
    data_loader_0 = module_0.DataLoader()
    data_loader_1 = module_0.DataLoader()
    list_0 = [data_loader_1, data_loader_1, data_loader_1, display_0]
    var_0 = display_0.banner(list_0)
    vault_lib_0 = module_2.VaultLib()
    list_1 = [vault_lib_0, data_loader_1]
    var_1 = data_loader_1.is_directory(list_1)
    str_0 = '/dev/null'
    str_1 = ''
    var_2 = data_loader_1.load_from_file(str_0, str_1, str_1, str_1)
    float_0 = 884.8
    var_3 = vault_lib_0.is_encrypted(float_0)
    data_loader_2 = module_0.DataLoader()
    var_4 = data_loader_2.cleanup_all_tmp_files()
    var_5 = data_loader_1.load_from_file(str_0, display_0)