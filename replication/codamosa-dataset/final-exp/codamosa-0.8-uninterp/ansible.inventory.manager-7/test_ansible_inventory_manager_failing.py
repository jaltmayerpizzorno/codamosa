# Automatically generated by Pynguin.
import ansible.inventory.manager as module_0

def test_case_0():
    try:
        float_0 = 1000.0
        bool_0 = True
        tuple_0 = (bool_0,)
        list_0 = []
        inventory_manager_0 = module_0.InventoryManager(list_0)
        var_0 = inventory_manager_0.get_hosts(tuple_0)
        inventory_manager_1 = module_0.InventoryManager(float_0, float_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '},f'
        dict_0 = {str_0: str_0}
        list_0 = [dict_0, dict_0, str_0, dict_0]
        tuple_0 = ()
        inventory_manager_0 = module_0.InventoryManager(tuple_0, list_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bool_0 = True
        str_0 = 'G{\\LuE!g[tX(GKP#'
        list_0 = []
        inventory_manager_0 = module_0.InventoryManager(list_0)
        var_0 = inventory_manager_0.add_host(bool_0, str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'localhost,'
        str_1 = 'Sm_X,Q<1D!\n9'
        inventory_manager_0 = module_0.InventoryManager(str_0, str_1)
        var_0 = inventory_manager_0.list_hosts()
        var_1 = inventory_manager_0.add_group(str_0)
        str_2 = '~JXJR&(\r'
        str_3 = 'sd'
        var_2 = inventory_manager_0.list_hosts()
        var_3 = inventory_manager_0.get_hosts(str_2, str_3)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'localhost,'
        bool_0 = True
        dict_0 = {str_0: str_0}
        inventory_manager_0 = module_0.InventoryManager(dict_0, str_0)
        var_0 = inventory_manager_0.list_hosts(bool_0)
        var_1 = inventory_manager_0.restrict_to_hosts(bool_0)
    except BaseException:
        pass

def test_case_5():
    try:
        bool_0 = True
        inventory_manager_0 = module_0.InventoryManager(bool_0)
        float_0 = -1774.476
        complex_0 = None
        var_0 = inventory_manager_0.remove_restriction()
        var_1 = inventory_manager_0.remove_restriction()
        int_0 = None
        var_2 = inventory_manager_0.restrict_to_hosts(int_0)
        var_3 = inventory_manager_0.clear_caches()
        var_4 = inventory_manager_0.get_hosts(float_0, float_0, complex_0)
        var_5 = inventory_manager_0.refresh_inventory()
        var_6 = inventory_manager_0.list_groups()
        var_7 = inventory_manager_0.remove_restriction()
        var_8 = inventory_manager_0.restrict_to_hosts(inventory_manager_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = '},f'
        dict_0 = {str_0: str_0}
        tuple_0 = ()
        list_0 = [tuple_0, tuple_0, dict_0, dict_0]
        inventory_manager_0 = module_0.InventoryManager(tuple_0, list_0)
    except BaseException:
        pass

def test_case_7():
    try:
        int_0 = -422
        bytes_0 = None
        inventory_manager_0 = module_0.InventoryManager(bytes_0)
        list_0 = [int_0, int_0, int_0]
        var_0 = inventory_manager_0.restrict_to_hosts(list_0)
    except BaseException:
        pass

def test_case_8():
    try:
        bool_0 = None
        list_0 = [bool_0, bool_0, bool_0]
        bytes_0 = b'\\\x9d\x971\xd5\xb1\xc6\xde\x08\xf5\xef\x1a'
        set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
        inventory_manager_0 = module_0.InventoryManager(set_0)
        var_0 = inventory_manager_0.list_hosts(list_0)
        int_0 = 11
        list_1 = []
        inventory_manager_1 = module_0.InventoryManager(list_1)
        var_1 = inventory_manager_1.refresh_inventory()
        var_2 = inventory_manager_1.restrict_to_hosts(int_0)
    except BaseException:
        pass

def test_case_9():
    try:
        int_0 = -1229
        bool_0 = False
        int_1 = 3812
        set_0 = {int_0, int_1, bool_0, int_0}
        var_0 = module_0.order_patterns(set_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = 'localhost,'
        dict_0 = {str_0: str_0}
        str_1 = None
        inventory_manager_0 = module_0.InventoryManager(dict_0, str_0)
        var_0 = inventory_manager_0.get_hosts(inventory_manager_0, str_0)
        var_1 = inventory_manager_0.refresh_inventory()
        var_2 = inventory_manager_0.list_hosts(str_0)
        inventory_manager_1 = module_0.InventoryManager(str_1, str_0)
        var_3 = inventory_manager_0.clear_caches()
        float_0 = 512.0
        tuple_0 = (str_0, str_0, float_0, float_0)
        var_4 = inventory_manager_0.list_hosts()
        str_2 = 'dh2\r&p:@RUK4i@VGd.R@'
        var_5 = inventory_manager_1.get_hosts(str_2, inventory_manager_0, float_0)
        str_3 = 'sd'
        bytes_0 = b'\xc7,\x07h\x1b'
        var_6 = inventory_manager_1.get_hosts(float_0, tuple_0, bytes_0, str_3)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = 'localhost,'
        dict_0 = {str_0: str_0}
        str_1 = None
        inventory_manager_0 = module_0.InventoryManager(dict_0)
        var_0 = inventory_manager_0.reconcile_inventory()
        var_1 = inventory_manager_0.reconcile_inventory()
        inventory_manager_1 = module_0.InventoryManager(dict_0, str_0)
        str_2 = 'S\tR%5Bh<`'
        var_2 = inventory_manager_0.get_hosts(inventory_manager_0, str_2)
        var_3 = inventory_manager_0.get_groups_dict()
        var_4 = inventory_manager_1.remove_restriction()
        var_5 = inventory_manager_1.restrict_to_hosts(str_1)
        var_6 = inventory_manager_0.reconcile_inventory()
        str_3 = 'xvj[@N}^O29WC]KV?C/'
        var_7 = module_0.order_patterns(str_3)
        var_8 = inventory_manager_1.reconcile_inventory()
        var_9 = inventory_manager_1.parse_sources()
        var_10 = inventory_manager_1.subset(str_2)
        list_0 = [var_7, str_1, inventory_manager_1]
        var_11 = inventory_manager_0.subset(list_0)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = 'localhost,'
        int_0 = -202
        inventory_manager_0 = module_0.InventoryManager(int_0)
        var_0 = inventory_manager_0.refresh_inventory()
        var_1 = inventory_manager_0.clear_pattern_cache()
        dict_0 = {str_0: str_0}
        inventory_manager_1 = module_0.InventoryManager(dict_0, str_0)
        set_0 = None
        var_2 = inventory_manager_1.clear_caches()
        tuple_0 = ()
        list_0 = []
        var_3 = inventory_manager_1.get_hosts(list_0)
        var_4 = inventory_manager_1.subset(tuple_0)
        var_5 = inventory_manager_0.reconcile_inventory()
        bytes_0 = b'\x03\xcbe\x92E\xb7G0[\x8bF\xa7\xc3'
        var_6 = inventory_manager_1.subset(bytes_0)
        var_7 = inventory_manager_0.get_host(set_0)
        bool_0 = False
        var_8 = inventory_manager_1.remove_restriction()
        var_9 = inventory_manager_1.get_groups_dict()
        var_10 = inventory_manager_0.list_hosts()
        list_1 = [var_6, bool_0, var_1, str_0]
        var_11 = inventory_manager_1.subset(list_1)
        var_12 = inventory_manager_1.list_hosts()
        var_13 = inventory_manager_1.remove_restriction()
        str_1 = '~F+[\x0b"C(,$Z.%'
        var_14 = inventory_manager_1.get_hosts(str_1)
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = 'localhost,'
        dict_0 = {str_0: str_0}
        str_1 = None
        inventory_manager_0 = module_0.InventoryManager(str_0)
        var_0 = inventory_manager_0.get_hosts()
        var_1 = inventory_manager_0.parse_source(str_1)
        inventory_manager_1 = module_0.InventoryManager(dict_0, str_0)
        str_2 = '~]->Rm~pq8m3dV'
        var_2 = inventory_manager_0.get_hosts(inventory_manager_0, str_2)
        var_3 = inventory_manager_0.list_hosts()
        str_3 = 'Sm_X,Q<1D!\n9'
        inventory_manager_2 = module_0.InventoryManager(str_1, str_3)
        var_4 = inventory_manager_2.subset(str_2)
        var_5 = inventory_manager_0.subset(str_3)
        str_4 = '\rJmv~X{=6+)C\t[('
        var_6 = inventory_manager_0.get_host(str_4)
        var_7 = inventory_manager_2.list_hosts()
        var_8 = inventory_manager_1.get_hosts(str_0)
        var_9 = inventory_manager_2.add_group(str_0)
        var_10 = inventory_manager_1.refresh_inventory()
        str_5 = '~JXJR&(\r'
        var_11 = inventory_manager_0.list_hosts()
        var_12 = inventory_manager_0.get_hosts(str_5, str_3)
    except BaseException:
        pass

def test_case_14():
    try:
        str_0 = 'localhost,'
        int_0 = -202
        inventory_manager_0 = module_0.InventoryManager(int_0)
        var_0 = inventory_manager_0.clear_pattern_cache()
        bool_0 = False
        dict_0 = {str_0: str_0}
        inventory_manager_1 = module_0.InventoryManager(dict_0, str_0)
        set_0 = None
        var_1 = inventory_manager_1.clear_caches()
        var_2 = inventory_manager_0.reconcile_inventory()
        var_3 = inventory_manager_0.get_host(set_0)
        var_4 = inventory_manager_1.remove_restriction()
        var_5 = inventory_manager_1.get_groups_dict()
        var_6 = inventory_manager_0.list_hosts()
        list_0 = [str_0, bool_0, var_0, str_0]
        var_7 = inventory_manager_1.subset(list_0)
        var_8 = inventory_manager_1.list_hosts()
        float_0 = 1702.324604
        inventory_manager_2 = module_0.InventoryManager(set_0, float_0)
    except BaseException:
        pass