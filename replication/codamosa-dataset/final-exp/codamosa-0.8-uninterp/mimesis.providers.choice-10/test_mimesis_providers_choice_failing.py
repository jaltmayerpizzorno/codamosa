# Automatically generated by Pynguin.
import mimesis.providers.choice as module_0

def test_case_0():
    try:
        choice_0 = module_0.Choice()
        str_0 = 'a'
        str_1 = 'b'
        str_2 = 'c'
        str_3 = [str_0, str_1, str_2]
        var_0 = choice_0.__call__(str_3)
        choice_1 = module_0.Choice()
        choice_2 = module_0.Choice()
        str_4 = 'abc'
        int_0 = 2
        var_1 = choice_2.__call__(str_4, int_0)
        choice_3 = module_0.Choice()
        str_5 = (str_0, str_1, str_2)
        int_1 = 5
        var_2 = choice_3.__call__(str_5, int_1)
        choice_4 = module_0.Choice()
        str_6 = 'aabbbccccddddd'
        int_2 = 4
        bool_0 = True
        var_3 = choice_4.__call__(str_6, int_2, bool_0)
        choice_5 = module_0.Choice()
        int_3 = 1
        int_4 = 2
        int_5 = 3
        int_6 = [int_3, int_4, int_5]
        float_0 = 4.2
        var_4 = choice_5.__call__(int_6, float_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'LI'
        bool_0 = False
        choice_0 = module_0.Choice()
        var_0 = choice_0.__call__(str_0, bool_0)
        choice_1 = module_0.Choice()
        int_0 = 218
        choice_2 = module_0.Choice()
        var_1 = choice_0.__call__(int_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = ''
        dict_0 = {}
        dict_1 = {str_0: dict_0}
        choice_0 = module_0.Choice()
        var_0 = choice_0.__call__(dict_1)
    except BaseException:
        pass

def test_case_3():
    try:
        choice_0 = module_0.Choice()
        bytes_0 = b''
        var_0 = choice_0.__call__(bytes_0)
    except BaseException:
        pass

def test_case_4():
    try:
        dict_0 = {}
        list_0 = [dict_0, dict_0]
        int_0 = 763
        choice_0 = module_0.Choice()
        var_0 = choice_0.__call__(list_0, int_0)
        var_1 = choice_0.__call__(list_0)
        dict_1 = {}
        list_1 = [dict_1, dict_1, dict_1, dict_1]
        choice_1 = module_0.Choice(*list_1)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'Bugatti'
        bool_0 = True
        choice_0 = module_0.Choice()
        var_0 = choice_0.__call__(str_0, bool_0)
        str_1 = 'rebend'
        int_0 = -1299
        var_1 = choice_0.__call__(str_1, int_0, bool_0)
    except BaseException:
        pass

def test_case_6():
    try:
        bool_0 = True
        choice_0 = module_0.Choice()
        int_0 = 216
        str_0 = 'rebend'
        var_0 = choice_0.__call__(str_0, int_0, bool_0)
    except BaseException:
        pass