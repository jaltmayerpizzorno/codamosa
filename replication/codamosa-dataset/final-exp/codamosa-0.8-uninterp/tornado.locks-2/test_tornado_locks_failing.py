# Automatically generated by Pynguin.
import tornado.locks as module_0
import builtins as module_1

def test_case_0():
    try:
        int_0 = 539
        semaphore_0 = module_0.Semaphore()
        lock_0 = module_0.Lock()
        str_0 = lock_0.__repr__()
        semaphore_1 = module_0.Semaphore(int_0)
        condition_0 = module_0.Condition()
    except BaseException:
        pass

def test_case_1():
    try:
        event_0 = module_0.Event()
        event_0.set()
        awaitable_0 = event_0.wait()
    except BaseException:
        pass

def test_case_2():
    try:
        timeout_garbage_collector_0 = module_0._TimeoutGarbageCollector()
        base_exception_0 = module_1.BaseException()
        lock_0 = module_0.Lock()
        bounded_semaphore_0 = module_0.BoundedSemaphore()
        bytes_0 = b'\x7f\xfe6'
        releasing_context_manager_0 = module_0._ReleasingContextManager(bytes_0)
        releasing_context_manager_0.__enter__()
        bounded_semaphore_0.release()
    except BaseException:
        pass

def test_case_3():
    try:
        event_0 = module_0.Event()
        str_0 = event_0.__repr__()
        lock_0 = module_0.Lock()
        str_1 = event_0.__repr__()
        bounded_semaphore_0 = module_0.BoundedSemaphore()
        event_0.set()
        bool_0 = event_0.is_set()
        int_0 = -721
        semaphore_0 = module_0.Semaphore(int_0)
    except BaseException:
        pass

def test_case_4():
    try:
        int_0 = 583
        semaphore_0 = module_0.Semaphore(int_0)
        awaitable_0 = semaphore_0.acquire()
    except BaseException:
        pass

def test_case_5():
    try:
        semaphore_0 = module_0.Semaphore()
        semaphore_0.__enter__()
    except BaseException:
        pass

def test_case_6():
    try:
        lock_0 = module_0.Lock()
        lock_0.release()
    except BaseException:
        pass

def test_case_7():
    try:
        lock_0 = module_0.Lock()
        awaitable_0 = lock_0.acquire()
    except BaseException:
        pass

def test_case_8():
    try:
        event_0 = module_0.Event()
        str_0 = event_0.__repr__()
        bytes_0 = b'c\x08m\x06\x8d\xa9\xf1kDP\x18v\xac\x02\x06t\xf5\x07]\x8c'
        base_exception_0 = None
        optional_0 = None
        lock_0 = module_0.Lock()
        lock_0.__exit__(bytes_0, base_exception_0, optional_0)
    except BaseException:
        pass

def test_case_9():
    try:
        event_0 = module_0.Event()
        lock_0 = module_0.Lock()
        str_0 = lock_0.__repr__()
        semaphore_0 = module_0.Semaphore()
        semaphore_0.release()
        lock_1 = module_0.Lock()
        int_0 = 3530
        bounded_semaphore_0 = module_0.BoundedSemaphore(int_0)
        event_0.set()
        bool_0 = event_0.is_set()
        event_0.set()
        event_1 = module_0.Event()
        bool_1 = event_1.is_set()
        bounded_semaphore_0.release()
    except BaseException:
        pass

def test_case_10():
    try:
        event_0 = module_0.Event()
        semaphore_0 = module_0.Semaphore()
        semaphore_0.release()
        lock_0 = module_0.Lock()
        str_0 = '+?w*YosQ3F&l[hYalx'
        list_0 = [lock_0]
        int_0 = 1815
        releasing_context_manager_0 = module_0._ReleasingContextManager(event_0)
        releasing_context_manager_0.__exit__(str_0, list_0, int_0)
    except BaseException:
        pass

def test_case_11():
    try:
        event_0 = module_0.Event()
        semaphore_0 = module_0.Semaphore()
        semaphore_0.release()
        optional_0 = None
        list_0 = [optional_0, optional_0, optional_0]
        base_exception_0 = module_1.BaseException(*list_0)
        int_0 = -485
        semaphore_0.__exit__(optional_0, base_exception_0, int_0)
    except BaseException:
        pass