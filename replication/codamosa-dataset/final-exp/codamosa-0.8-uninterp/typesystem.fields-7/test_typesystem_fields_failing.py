# Automatically generated by Pynguin.
import typesystem.fields as module_0
import decimal as module_1

def test_case_0():
    try:
        time_0 = module_0.Time()
        field_0 = module_0.Field()
        bool_0 = False
        validation_result_0 = field_0.validate_or_error(field_0, strict=bool_0)
    except BaseException:
        pass

def test_case_1():
    try:
        text_0 = module_0.Text()
        var_0 = [text_0, text_0]
        union_0 = module_0.Union(var_0)
        any_0 = union_0.validate(union_0)
    except BaseException:
        pass

def test_case_2():
    try:
        array_0 = module_0.Array()
        any_0 = array_0.validate(array_0)
    except BaseException:
        pass

def test_case_3():
    try:
        float_0 = 2212.7431444870977
        number_0 = module_0.Number(minimum=float_0, exclusive_maximum=float_0, multiple_of=float_0)
        any_0 = number_0.validate(float_0)
    except BaseException:
        pass

def test_case_4():
    try:
        number_0 = module_0.Number()
        any_0 = number_0.validate(number_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = '!'
        bool_0 = True
        decimal_0 = module_0.Decimal()
        choice_0 = module_0.Choice(choices=str_0)
        any_0 = choice_0.validate(str_0)
        any_1 = decimal_0.serialize(decimal_0)
    except BaseException:
        pass

def test_case_6():
    try:
        boolean_0 = module_0.Boolean()
        bool_0 = False
        any_0 = boolean_0.validate(boolean_0, strict=bool_0)
    except BaseException:
        pass

def test_case_7():
    try:
        decimal_0 = None
        choice_0 = module_0.Choice()
        any_0 = choice_0.validate(decimal_0)
    except BaseException:
        pass

def test_case_8():
    try:
        choice_0 = module_0.Choice()
        any_0 = choice_0.validate(choice_0)
    except BaseException:
        pass

def test_case_9():
    try:
        bool_0 = True
        field_0 = module_0.Field(allow_null=bool_0)
        list_0 = [field_0, field_0]
        union_0 = module_0.Union(list_0)
        any_0 = union_0.validate(list_0, bool_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = ':)v,s6~"t5|'
        string_0 = module_0.String()
        any_0 = string_0.validate(str_0)
        any_1 = string_0.serialize(string_0)
        str_1 = None
        bool_0 = True
        any_2 = module_0.Any(title=str_0, description=str_1, allow_null=bool_0)
    except BaseException:
        pass

def test_case_11():
    try:
        decimal_0 = module_1.Decimal()
        field_0 = None
        bool_0 = False
        int_0 = -1926
        dict_0 = {}
        object_0 = module_0.Object(additional_properties=bool_0, property_names=field_0, min_properties=int_0, **dict_0)
        any_0 = object_0.validate(dict_0)
        str_0 = None
        any_1 = module_0.Any(title=str_0)
    except BaseException:
        pass

def test_case_12():
    try:
        list_0 = []
        decimal_0 = module_1.Decimal(*list_0)
        field_0 = module_0.Field(default=decimal_0)
        str_0 = 'invalid_key'
        field_1 = module_0.Field(description=str_0)
        union_0 = field_1.__or__(field_0)
        bool_0 = False
        field_2 = module_0.Field(default=bool_0, allow_null=bool_0)
        string_0 = module_0.String(allow_blank=bool_0, trim_whitespace=bool_0, pattern=field_2)
    except BaseException:
        pass

def test_case_13():
    try:
        bool_0 = True
        str_0 = '\r\nCIt'
        int_0 = -2530
        string_0 = module_0.String(allow_blank=bool_0, max_length=int_0, pattern=str_0)
        any_0 = string_0.validate(bool_0)
    except BaseException:
        pass

def test_case_14():
    try:
        str_0 = '2'
        int_0 = -770
        string_0 = module_0.String(min_length=int_0)
        string_1 = module_0.String(pattern=str_0)
        const_0 = module_0.Const(str_0)
        decimal_0 = module_0.Decimal(minimum=const_0, precision=str_0)
    except BaseException:
        pass

def test_case_15():
    try:
        float_0 = 2212.7431
        number_0 = module_0.Number(maximum=float_0, exclusive_maximum=float_0, multiple_of=float_0)
        any_0 = number_0.validate(number_0)
    except BaseException:
        pass

def test_case_16():
    try:
        var_0 = None
        bool_0 = True
        field_0 = module_0.Field(default=var_0, allow_null=bool_0)
        str_0 = 'Kl#'
        field_1 = module_0.Field(title=str_0)
        union_0 = field_1.__or__(field_0)
        str_1 = 'microsecond'
        str_2 = ''
        dict_0 = {str_1: str_1, str_2: str_1}
        float_0 = module_0.Float(exclusive_maximum=dict_0)
    except BaseException:
        pass

def test_case_17():
    try:
        float_0 = 2212.7431
        number_0 = module_0.Number(minimum=float_0, exclusive_minimum=float_0)
        any_0 = number_0.validate(float_0)
    except BaseException:
        pass

def test_case_18():
    try:
        str_0 = ''
        bool_0 = False
        string_0 = module_0.String(trim_whitespace=bool_0, pattern=str_0, format=str_0)
        int_0 = 79
        object_0 = module_0.Object(additional_properties=bool_0, max_properties=int_0)
        any_0 = object_0.validate(string_0)
    except BaseException:
        pass

def test_case_19():
    try:
        int_0 = 217
        bytes_0 = b'K\x1c\x9f\xb4\xf8V"d\xa2V\xdb\xf2wnG\x9e'
        object_0 = module_0.Object(min_properties=int_0, required=bytes_0)
    except BaseException:
        pass

def test_case_20():
    try:
        str_0 = ':)v,s6~"t5|'
        field_0 = module_0.Field()
        dict_0 = {str_0: field_0, str_0: field_0}
        object_0 = module_0.Object(properties=dict_0, pattern_properties=dict_0, additional_properties=field_0)
        any_0 = object_0.validate(dict_0)
    except BaseException:
        pass

def test_case_21():
    try:
        dict_0 = {}
        bool_0 = None
        str_0 = 'D%6fQPw5LT1kf[}0'
        object_0 = module_0.Object(additional_properties=bool_0, required=str_0)
        any_0 = object_0.validate(dict_0)
    except BaseException:
        pass

def test_case_22():
    try:
        date_0 = module_0.Date()
        array_0 = module_0.Array(date_0)
        decimal_0 = None
        string_0 = module_0.String(min_length=decimal_0)
        any_0 = string_0.validate(decimal_0)
    except BaseException:
        pass

def test_case_23():
    try:
        str_0 = '\rG|2G(Obk9"~*.]<Fv\x0b'
        field_0 = module_0.Field(description=str_0)
        str_1 = '[x1!aq)#'
        dict_0 = {str_0: field_0, str_1: field_0}
        array_0 = module_0.Array(field_0, field_0, dict_0)
    except BaseException:
        pass

def test_case_24():
    try:
        number_0 = module_0.Number()
        str_0 = 'z\\)N2GF(^~;yV44[_$?'
        bool_0 = False
        array_0 = module_0.Array(str_0, bool_0)
    except BaseException:
        pass

def test_case_25():
    try:
        str_0 = 'datetime'
        string_0 = module_0.String(format=str_0)
        any_0 = string_0.validate(str_0)
    except BaseException:
        pass

def test_case_26():
    try:
        str_0 = ''
        string_0 = module_0.String(pattern=str_0, format=str_0)
        any_0 = string_0.serialize(string_0)
        any_1 = string_0.validate(str_0)
    except BaseException:
        pass

def test_case_27():
    try:
        str_0 = 'datetime'
        string_0 = module_0.String(format=str_0)
        int_0 = 1991
        any_0 = string_0.serialize(int_0)
    except BaseException:
        pass

def test_case_28():
    try:
        str_0 = 'h.)i:-pM<\rM)&os@4d'
        number_0 = module_0.Number(precision=str_0)
        bool_0 = True
        any_0 = number_0.validate(str_0, strict=bool_0)
    except BaseException:
        pass

def test_case_29():
    try:
        str_0 = ''
        bool_0 = False
        optional_0 = None
        string_0 = module_0.String(trim_whitespace=bool_0, pattern=str_0, format=str_0)
        str_1 = 'f*9-lX\x0b"gA\':'
        field_0 = module_0.Field(title=str_1)
        str_2 = 'The field '
        bool_1 = False
        field_1 = module_0.Field(title=str_0, description=str_2, allow_null=bool_1)
        union_0 = field_1.__or__(field_0)
        any_0 = union_0.validate(optional_0)
    except BaseException:
        pass

def test_case_30():
    try:
        str_0 = '-eEg=\n\t}/('
        const_0 = module_0.Const(str_0)
        number_0 = module_0.Number()
        any_0 = number_0.validate(str_0)
    except BaseException:
        pass

def test_case_31():
    try:
        array_0 = module_0.Array()
        decimal_0 = None
        list_0 = [array_0, decimal_0, array_0, array_0, decimal_0]
        any_0 = array_0.validate(list_0)
        const_0 = module_0.Const(decimal_0)
        any_1 = const_0.validate(array_0)
    except BaseException:
        pass

def test_case_32():
    try:
        str_0 = 'datetime'
        string_0 = module_0.String(format=str_0)
        any_0 = string_0.validate(string_0)
    except BaseException:
        pass

def test_case_33():
    try:
        int_0 = None
        bool_0 = True
        string_0 = module_0.String(allow_blank=bool_0, max_length=int_0)
        object_0 = module_0.Object(min_properties=int_0)
        any_0 = object_0.validate(string_0)
    except BaseException:
        pass

def test_case_34():
    try:
        date_0 = module_0.Date()
        dict_0 = {}
        object_0 = module_0.Object()
        any_0 = object_0.validate(dict_0)
        bool_0 = True
        float_0 = 4584.0
        list_0 = [dict_0, bool_0, float_0, float_0]
        float_1 = -4787.709
        text_0 = module_0.Text()
        string_0 = module_0.String(trim_whitespace=bool_0, min_length=list_0, pattern=float_1, format=text_0)
    except BaseException:
        pass

def test_case_35():
    try:
        dict_0 = {}
        bool_0 = True
        boolean_0 = module_0.Boolean()
        any_0 = boolean_0.validate(dict_0, strict=bool_0)
    except BaseException:
        pass

def test_case_36():
    try:
        date_0 = module_0.Date()
        dict_0 = {}
        bool_0 = True
        field_0 = module_0.Field(default=dict_0, allow_null=bool_0)
        string_0 = module_0.String()
        str_0 = None
        str_1 = ''
        str_2 = ''
        dict_1 = {str_0: field_0, str_0: field_0, str_1: field_0, str_2: field_0}
        object_0 = module_0.Object(properties=dict_1, additional_properties=bool_0, property_names=field_0)
    except BaseException:
        pass

def test_case_37():
    try:
        decimal_0 = None
        string_0 = module_0.String(min_length=decimal_0)
        any_0 = string_0.validate(decimal_0)
    except BaseException:
        pass

def test_case_38():
    try:
        str_0 = ''
        number_0 = module_0.Number()
        any_0 = number_0.validate(str_0)
    except BaseException:
        pass

def test_case_39():
    try:
        time_0 = module_0.Time()
        list_0 = []
        union_0 = module_0.Union(list_0)
        integer_0 = module_0.Integer(multiple_of=union_0)
    except BaseException:
        pass

def test_case_40():
    try:
        date_0 = module_0.Date()
        float_0 = -3419.66
        dict_0 = {}
        date_time_0 = module_0.DateTime(**dict_0)
        object_0 = module_0.Object(additional_properties=float_0, required=date_time_0)
    except BaseException:
        pass

def test_case_41():
    try:
        str_0 = 'Q(Poe!7x_!M<\x0b'
        boolean_0 = module_0.Boolean()
        float_0 = -800.0
        integer_0 = module_0.Integer(minimum=float_0, exclusive_minimum=float_0, precision=str_0)
        choice_0 = module_0.Choice()
        list_0 = [float_0]
        dict_0 = {str_0: choice_0, float_0: float_0, integer_0: list_0}
        time_0 = module_0.Time()
        object_0 = module_0.Object(properties=boolean_0, property_names=integer_0, min_properties=dict_0, max_properties=time_0)
    except BaseException:
        pass

def test_case_42():
    try:
        str_0 = 'datetime'
        string_0 = module_0.String(format=str_0)
        boolean_0 = module_0.Boolean(title=str_0, default=string_0)
        none_type_0 = None
        bool_0 = False
        array_0 = module_0.Array(boolean_0, none_type_0, bool_0)
    except BaseException:
        pass

def test_case_43():
    try:
        dict_0 = {}
        float_0 = 4583.405876640034
        float_1 = -1484.2
        bool_0 = True
        int_0 = -304
        str_0 = 'CuxP2j/\tpHKioQ,$'
        number_0 = module_0.Number(minimum=int_0, exclusive_maximum=float_1, precision=str_0, **dict_0)
        number_1 = module_0.Number(minimum=float_0, multiple_of=float_1, **dict_0)
        any_0 = number_1.validate(bool_0, strict=bool_0)
    except BaseException:
        pass

def test_case_44():
    try:
        date_0 = module_0.Date()
        dict_0 = {}
        object_0 = module_0.Object()
        any_0 = object_0.validate(dict_0)
        set_0 = set()
        string_0 = module_0.String(format=set_0)
    except BaseException:
        pass

def test_case_45():
    try:
        date_0 = module_0.Date()
        dict_0 = {}
        object_0 = module_0.Object()
        any_0 = object_0.validate(dict_0)
        object_1 = None
        field_0 = module_0.Field()
        any_1 = module_0.Any(default=object_0)
        bool_0 = False
        array_0 = module_0.Array(field_0, any_1, bool_0, **dict_0)
        any_2 = array_0.serialize(object_1)
        str_0 = 'D:0n*H$f'
        float_0 = -781.1350708015884
        bool_1 = True
        boolean_0 = module_0.Boolean(title=str_0, description=str_0, allow_null=bool_1)
        number_0 = module_0.Number(exclusive_minimum=float_0, exclusive_maximum=float_0)
        any_3 = number_0.validate(float_0)
    except BaseException:
        pass

def test_case_46():
    try:
        float_0 = 2212.7431
        str_0 = 'Q(Poe!7x_!M<\x0b'
        number_0 = module_0.Number(exclusive_maximum=float_0, precision=str_0)
        any_0 = number_0.validate(float_0)
    except BaseException:
        pass

def test_case_47():
    try:
        bool_0 = None
        str_0 = 'LT`On\n;w>G\n_#~:'
        boolean_0 = module_0.Boolean(description=str_0)
        any_0 = boolean_0.validate(bool_0)
    except BaseException:
        pass

def test_case_48():
    try:
        date_0 = module_0.Date()
        dict_0 = {}
        object_0 = module_0.Object()
        any_0 = object_0.validate(dict_0)
        text_0 = module_0.Text(**dict_0)
        bool_0 = True
        str_0 = 'Y\nzz'
        field_0 = module_0.Field(allow_null=bool_0)
        string_0 = module_0.String(format=str_0)
        float_0 = 1185.68
        number_0 = module_0.Number(exclusive_minimum=string_0, exclusive_maximum=float_0)
    except BaseException:
        pass

def test_case_49():
    try:
        str_0 = '`l\x0cP(d$"z-'
        list_0 = []
        choice_0 = module_0.Choice()
        list_1 = [list_0, list_0, choice_0]
        const_0 = module_0.Const(list_1)
        any_0 = const_0.validate(str_0)
    except BaseException:
        pass

def test_case_50():
    try:
        text_0 = module_0.Text()
        bool_0 = True
        boolean_0 = module_0.Boolean(allow_null=bool_0)
        any_0 = boolean_0.validate(text_0)
    except BaseException:
        pass

def test_case_51():
    try:
        string_0 = module_0.String()
        optional_0 = None
        str_0 = 'hSo'
        const_0 = module_0.Const(str_0)
        dict_0 = {}
        object_0 = module_0.Object(min_properties=optional_0, max_properties=str_0, required=const_0, **dict_0)
    except BaseException:
        pass

def test_case_52():
    try:
        date_0 = module_0.Date()
        dict_0 = {}
        object_0 = module_0.Object()
        any_0 = object_0.validate(dict_0)
        float_0 = 4584.0
        float_1 = -4803.296163456057
        text_0 = module_0.Text(**dict_0)
        boolean_0 = module_0.Boolean()
        number_0 = module_0.Number(minimum=float_0, exclusive_maximum=float_1, **dict_0)
        any_1 = number_0.validate(float_1)
    except BaseException:
        pass

def test_case_53():
    try:
        str_0 = 'MOmf.ik~u\nuhm\t'
        field_0 = module_0.Field()
        dict_0 = {str_0: field_0}
        int_0 = 8
        object_0 = module_0.Object(properties=dict_0, min_properties=int_0)
        bool_0 = False
        any_0 = object_0.validate(dict_0, strict=bool_0)
    except BaseException:
        pass

def test_case_54():
    try:
        str_0 = '#pei e'
        decimal_0 = None
        const_0 = module_0.Const(decimal_0)
        string_0 = module_0.String(max_length=const_0, pattern=str_0)
    except BaseException:
        pass

def test_case_55():
    try:
        bool_0 = None
        number_0 = module_0.Number()
        any_0 = number_0.validate(bool_0)
    except BaseException:
        pass

def test_case_56():
    try:
        str_0 = "X\n=VWQ'6$JCEj+l)`"
        none_type_0 = None
        float_0 = module_0.Float(maximum=str_0, precision=none_type_0)
    except BaseException:
        pass

def test_case_57():
    try:
        date_0 = module_0.Date()
        dict_0 = {}
        object_0 = module_0.Object()
        any_0 = object_0.validate(dict_0)
        float_0 = 4584.0
        float_1 = -4803.296163456057
        boolean_0 = module_0.Boolean()
        number_0 = module_0.Number(maximum=float_1, **dict_0)
        any_1 = number_0.validate(float_1)
        bool_0 = None
        any_2 = number_0.validate(float_0, strict=bool_0)
    except BaseException:
        pass

def test_case_58():
    try:
        object_0 = module_0.Object()
        object_1 = None
        any_0 = object_0.validate(object_1)
    except BaseException:
        pass

def test_case_59():
    try:
        date_time_0 = module_0.DateTime()
        int_0 = -610
        float_0 = 1299.8438090692773
        number_0 = module_0.Number(minimum=int_0, multiple_of=int_0)
        any_0 = number_0.validate(float_0)
    except BaseException:
        pass

def test_case_60():
    try:
        str_0 = ''
        boolean_0 = module_0.Boolean()
        any_0 = boolean_0.validate(str_0)
        number_0 = module_0.Number(precision=str_0)
        any_1 = number_0.validate(str_0)
    except BaseException:
        pass

def test_case_61():
    try:
        date_0 = module_0.Date()
        dict_0 = {}
        object_0 = module_0.Object()
        any_0 = object_0.validate(dict_0)
        str_0 = ';ljs0.\n2J>;AZ^tQ'
        bool_0 = True
        field_0 = module_0.Field(description=str_0, allow_null=bool_0)
        str_1 = ' us'
        field_1 = module_0.Field(title=str_1, description=str_1)
        dict_1 = None
        list_0 = [dict_1, object_0]
        object_1 = module_0.Object(properties=dict_1, pattern_properties=dict_1, property_names=field_1, required=list_0)
    except BaseException:
        pass

def test_case_62():
    try:
        date_0 = module_0.Date()
        object_0 = module_0.Object()
        float_0 = 4583.405876640034
        float_1 = -1484.15
        text_0 = module_0.Text()
        bool_0 = False
        int_0 = None
        boolean_0 = module_0.Boolean()
        field_0 = module_0.Field(allow_null=bool_0)
        any_0 = field_0.get_default_value()
        number_0 = module_0.Number(minimum=float_0, maximum=int_0, exclusive_minimum=int_0, multiple_of=float_1)
        any_1 = number_0.validate(float_0)
    except BaseException:
        pass

def test_case_63():
    try:
        object_0 = module_0.Object()
        int_0 = 1
        str_0 = 'D:0n*H$f'
        bool_0 = True
        string_0 = module_0.String(trim_whitespace=bool_0, max_length=int_0, pattern=str_0)
        any_0 = string_0.validate(str_0)
    except BaseException:
        pass

def test_case_64():
    try:
        str_0 = 'MO08mf.ik~4\n:uhm\t'
        field_0 = module_0.Field()
        dict_0 = {str_0: field_0}
        int_0 = -347
        dict_1 = None
        bool_0 = True
        dict_2 = {}
        object_0 = module_0.Object(properties=dict_1, pattern_properties=dict_2, additional_properties=bool_0, max_properties=int_0)
        any_0 = object_0.validate(dict_0)
    except BaseException:
        pass

def test_case_65():
    try:
        decimal_0 = module_1.Decimal()
        any_0 = module_0.Any()
        str_0 = 'h[/@m3k\t7uonIDBhc\t'
        field_0 = module_0.Field()
        str_1 = '\x0c'
        dict_0 = {str_0: field_0, str_1: field_0}
        int_0 = -107
        optional_0 = None
        object_0 = module_0.Object(properties=any_0, pattern_properties=dict_0, property_names=field_0, max_properties=int_0, required=optional_0)
        any_1 = object_0.validate(dict_0)
    except BaseException:
        pass

def test_case_66():
    try:
        dict_0 = {}
        array_0 = module_0.Array()
        decimal_0 = module_1.Decimal()
        validation_error_0 = None
        number_0 = module_0.Number(minimum=decimal_0, **dict_0)
        decimal_1 = module_0.Decimal(multiple_of=decimal_0)
        any_0 = decimal_1.serialize(validation_error_0)
        any_1 = number_0.validate(decimal_0)
    except BaseException:
        pass

def test_case_67():
    try:
        str_0 = 'nI|azho,kU0CuC"F4'
        field_0 = module_0.Field()
        dict_0 = {str_0: field_0}
        int_0 = -3378
        bool_0 = False
        dict_1 = {str_0: field_0}
        object_0 = module_0.Object(properties=dict_0, additional_properties=field_0, min_properties=int_0, required=dict_1)
        any_0 = object_0.validate(dict_0, strict=bool_0)
    except BaseException:
        pass

def test_case_68():
    try:
        str_0 = 'els'
        bool_0 = True
        boolean_0 = module_0.Boolean(allow_null=bool_0)
        any_0 = boolean_0.validate(str_0)
    except BaseException:
        pass

def test_case_69():
    try:
        str_0 = '\\atetime'
        bool_0 = None
        string_0 = module_0.String(trim_whitespace=bool_0, pattern=str_0)
        str_1 = '8cv0k4Q\x0c&<B1\nU'
        bool_1 = True
        any_0 = string_0.validate(str_1, strict=bool_1)
    except BaseException:
        pass

def test_case_70():
    try:
        str_0 = ','
        bool_0 = None
        int_0 = 2012
        string_0 = module_0.String(trim_whitespace=bool_0, max_length=int_0, min_length=int_0, format=str_0)
        any_0 = string_0.validate(str_0)
    except BaseException:
        pass

def test_case_71():
    try:
        object_0 = module_0.Object()
        str_0 = ' us'
        int_0 = 1
        bool_0 = True
        str_1 = '\n$ xL-xV>a^8o--S25`c'
        string_0 = module_0.String(trim_whitespace=bool_0, min_length=int_0, pattern=str_1)
        bool_1 = True
        number_0 = module_0.Number(precision=str_0)
        any_0 = string_0.validate(str_0, strict=bool_1)
    except BaseException:
        pass

def test_case_72():
    try:
        str_0 = ''
        bool_0 = False
        string_0 = module_0.String(trim_whitespace=bool_0, pattern=str_0, format=str_0)
        any_0 = string_0.validate(str_0)
    except BaseException:
        pass

def test_case_73():
    try:
        object_0 = module_0.Object()
        str_0 = 'E=unZ&\t~`_$SGl[d}%N'
        field_0 = None
        str_1 = 'a'
        str_2 = 'Ani9\x0bprWO3'
        dict_0 = {str_0: field_0, str_1: field_0, str_0: field_0, str_2: field_0}
        object_1 = module_0.Object(properties=dict_0, additional_properties=field_0)
    except BaseException:
        pass

def test_case_74():
    try:
        date_0 = module_0.Date()
        float_0 = 4590.787884986361
        list_0 = []
        str_0 = ':~M";>K'
        list_1 = [list_0, float_0, str_0, float_0]
        boolean_0 = module_0.Boolean()
        bool_0 = True
        array_0 = module_0.Array(list_1, boolean_0, bool_0)
    except BaseException:
        pass

def test_case_75():
    try:
        field_0 = module_0.Field()
        str_0 = 'z'
        field_1 = module_0.Field(title=str_0)
        union_0 = field_1.__or__(field_0)
        str_1 = None
        dict_0 = {str_1: field_1, str_0: field_0}
        date_time_0 = module_0.DateTime()
        object_0 = module_0.Object(properties=union_0, pattern_properties=dict_0, min_properties=date_time_0, max_properties=field_0)
    except BaseException:
        pass

def test_case_76():
    try:
        object_0 = module_0.Object()
        field_0 = module_0.Field()
        str_0 = 'b'
        bool_0 = False
        int_0 = 1
        str_1 = 'D:0n*H$f'
        boolean_0 = module_0.Boolean()
        bool_1 = True
        string_0 = module_0.String(allow_blank=bool_1, max_length=int_0, min_length=int_0)
        any_0 = string_0.validate(str_0)
        any_1 = object_0.validate(str_1, strict=bool_0)
    except BaseException:
        pass

def test_case_77():
    try:
        str_0 = 'D:0n*H$f'
        field_0 = None
        str_1 = 'Bx)9KG;\tD w{"b*'
        dict_0 = {str_0: field_0, str_0: field_0, str_1: field_0}
        object_0 = module_0.Object(pattern_properties=dict_0, property_names=field_0)
    except BaseException:
        pass

def test_case_78():
    try:
        array_0 = module_0.Array()
        decimal_0 = None
        any_0 = array_0.validate(decimal_0)
    except BaseException:
        pass

def test_case_79():
    try:
        str_0 = '.41[??M_xeat@;6M1:\tq'
        field_0 = module_0.Field(title=str_0)
        dict_0 = {str_0: field_0, str_0: field_0, str_0: field_0, str_0: field_0}
        object_0 = module_0.Object(pattern_properties=dict_0, additional_properties=field_0)
        any_0 = object_0.validate(dict_0)
    except BaseException:
        pass

def test_case_80():
    try:
        str_0 = '.41W??M_xeat@;6M1:\tq'
        field_0 = module_0.Field(title=str_0)
        dict_0 = {str_0: field_0, str_0: field_0, str_0: field_0, str_0: field_0}
        object_0 = module_0.Object(pattern_properties=dict_0, additional_properties=field_0)
        any_0 = object_0.validate(dict_0)
    except BaseException:
        pass

def test_case_81():
    try:
        dict_0 = {}
        float_0 = 3120.941
        list_0 = [dict_0, dict_0, float_0]
        number_0 = module_0.Number(maximum=float_0, exclusive_maximum=float_0, precision=list_0, **dict_0)
        bool_0 = True
        int_0 = -4138
        object_0 = module_0.Object(min_properties=bool_0, max_properties=int_0, **dict_0)
        bool_1 = True
        any_0 = object_0.validate(dict_0, strict=bool_1)
    except BaseException:
        pass

def test_case_82():
    try:
        array_0 = module_0.Array()
        bool_0 = False
        object_0 = module_0.Object(additional_properties=bool_0)
        int_0 = None
        integer_0 = module_0.Integer(minimum=int_0)
        dict_0 = {bool_0: array_0, bool_0: array_0, integer_0: int_0, int_0: bool_0}
        any_0 = object_0.validate(dict_0, strict=bool_0)
    except BaseException:
        pass

def test_case_83():
    try:
        float_0 = -1947.0
        float_1 = -1915.3461738513815
        float_2 = None
        number_0 = module_0.Number(minimum=float_0, exclusive_maximum=float_1, multiple_of=float_2)
        any_0 = number_0.validate(float_0)
        str_0 = '"a.2#1}\\(63+T'
        string_0 = module_0.String(max_length=str_0, format=str_0)
    except BaseException:
        pass

def test_case_84():
    try:
        str_0 = 'L'
        bool_0 = True
        choice_0 = module_0.Choice(choices=str_0)
        any_0 = choice_0.validate(str_0)
        dict_0 = {}
        bool_1 = False
        object_0 = module_0.Object(properties=dict_0, pattern_properties=dict_0, max_properties=bool_1)
        field_0 = module_0.Field(default=str_0)
        int_0 = -575
        array_0 = module_0.Array(field_0, bool_0, int_0, int_0, bool_0)
        any_1 = object_0.validate(choice_0, strict=bool_0)
    except BaseException:
        pass

def test_case_85():
    try:
        str_0 = ';4'
        field_0 = module_0.Field(title=str_0)
        dict_0 = {str_0: field_0, str_0: field_0, str_0: field_0, str_0: field_0, str_0: field_0}
        object_0 = module_0.Object(pattern_properties=dict_0, additional_properties=field_0)
        any_0 = object_0.validate(dict_0)
    except BaseException:
        pass

def test_case_86():
    try:
        var_0 = None
        field_0 = module_0.Field(default=var_0)
        any_0 = field_0.get_default_value()
        int_0 = 1
        field_1 = module_0.Field(default=int_0)
        any_1 = field_1.get_default_value()
        field_2 = module_0.Field(default=int_0)
        any_2 = field_2.get_default_value()
        any_3 = field_2.get_default_value()
        field_3 = module_0.Field(default=any_3)
        any_4 = field_3.get_default_value()
        var_1 = lambda : int_0
        field_4 = module_0.Field(default=var_1)
        any_5 = field_4.get_default_value()
    except BaseException:
        pass

def test_case_87():
    try:
        str_0 = 'id'
        str_1 = 'name'
        integer_0 = module_0.Integer()
        int_0 = 0
        int_1 = 255
        string_0 = module_0.String(max_length=int_1, min_length=int_0)
        var_0 = {str_0: integer_0, str_1: string_0}
        bool_0 = False
        str_2 = [str_0]
        bool_1 = True
        object_0 = module_0.Object(properties=var_0, additional_properties=bool_0, required=str_2)
        str_3 = 'abc'
        var_1 = {str_0: bool_0, str_1: str_3}
        any_0 = object_0.validate(var_1)
    except BaseException:
        pass

def test_case_88():
    try:
        str_0 = 'id'
        none_type_0 = None
        int_0 = -2777
        float_0 = module_0.Float(minimum=none_type_0, multiple_of=int_0)
        integer_0 = module_0.Integer()
        int_1 = 0
        int_2 = 255
        string_0 = module_0.String(max_length=int_2, min_length=int_1)
        var_0 = {str_0: integer_0, str_0: string_0}
        bool_0 = False
        str_1 = [str_0]
        bool_1 = True
        object_0 = module_0.Object(properties=var_0, additional_properties=bool_0, required=str_1)
        str_2 = 'abc'
        var_1 = {str_0: bool_0, str_2: str_2}
        any_0 = object_0.validate(var_1)
    except BaseException:
        pass

def test_case_89():
    try:
        str_0 = 'datetime'
        string_0 = module_0.String(format=str_0)
        bool_0 = True
        optional_0 = None
        int_0 = 5
        string_1 = module_0.String(allow_blank=bool_0, max_length=optional_0, min_length=int_0, format=str_0)
        bool_1 = True
        any_0 = string_1.validate(optional_0, strict=bool_1)
    except BaseException:
        pass

def test_case_90():
    try:
        str_0 = ''
        string_0 = module_0.String(pattern=str_0, format=str_0)
        any_0 = string_0.validate(str_0)
    except BaseException:
        pass

def test_case_91():
    try:
        text_0 = module_0.Text()
        var_0 = [text_0, text_0, text_0, text_0, text_0]
        bool_0 = False
        field_0 = module_0.Field(allow_null=bool_0)
        array_0 = module_0.Array(field_0, field_0, bool_0)
        any_0 = array_0.validate(var_0)
    except BaseException:
        pass

def test_case_92():
    try:
        str_0 = "wR\nuc5oj'nd"
        field_0 = module_0.Field(title=str_0, description=str_0)
        list_0 = [field_0]
        text_0 = module_0.Text()
        bool_0 = False
        array_0 = module_0.Array(text_0, bool_0)
        any_0 = array_0.validate(list_0, strict=bool_0)
    except BaseException:
        pass

def test_case_93():
    try:
        any_0 = module_0.Any()
        str_0 = 'Must have no more than {max_properties} properties.'
        boolean_0 = module_0.Boolean(description=str_0, default=any_0)
        bool_0 = True
        tuple_0 = ()
        dict_0 = {}
        array_0 = module_0.Array(tuple_0, bool_0, **dict_0)
        any_1 = array_0.validate(boolean_0, strict=bool_0)
    except BaseException:
        pass

def test_case_94():
    try:
        str_0 = "wR\nucoj'n/"
        field_0 = module_0.Field(title=str_0, description=str_0)
        list_0 = [field_0, str_0]
        text_0 = module_0.Text()
        bool_0 = False
        array_0 = module_0.Array(text_0, bool_0)
        any_0 = array_0.validate(list_0, strict=bool_0)
    except BaseException:
        pass