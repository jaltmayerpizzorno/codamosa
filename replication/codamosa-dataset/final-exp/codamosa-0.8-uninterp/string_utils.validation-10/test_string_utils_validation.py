# Automatically generated by Pynguin.
import string_utils.validation as module_0

def test_case_0():
    str_0 = '}It=AWldV"'
    bool_0 = module_0.contains_html(str_0)

def test_case_1():
    str_0 = 'I'
    i_s_b_n_checker_0 = module_0.__ISBNChecker(str_0)
    bool_0 = i_s_b_n_checker_0.is_isbn_13()

def test_case_2():
    str_0 = '^q}\x0c/F}nXO}3S'
    i_s_b_n_checker_0 = module_0.__ISBNChecker(str_0)
    bool_0 = i_s_b_n_checker_0.is_isbn_13()

def test_case_3():
    str_0 = '=v8"h\r{&I\\'
    i_s_b_n_checker_0 = module_0.__ISBNChecker(str_0)
    bool_0 = i_s_b_n_checker_0.is_isbn_10()

def test_case_4():
    str_0 = 'my.email@the-provider.com'
    bool_0 = module_0.is_email(str_0)

def test_case_5():
    str_0 = 'im|i\n--'
    bool_0 = module_0.is_json(str_0)
    bool_1 = module_0.is_isbn_10(str_0)
    bool_2 = module_0.is_uuid(bool_0)
    bool_3 = module_0.is_number(str_0)
    bool_4 = module_0.is_json(bool_2)

def test_case_6():
    tuple_0 = None
    str_0 = 'Q6Ut-MfHJX*jDG*'
    i_s_b_n_checker_0 = module_0.__ISBNChecker(str_0)
    bool_0 = module_0.is_snake_case(str_0, str_0)
    bool_1 = module_0.is_integer(str_0)
    bool_2 = module_0.is_ip_v6(bool_1)
    bool_3 = i_s_b_n_checker_0.is_isbn_10()
    bool_4 = module_0.is_isogram(tuple_0)
    bool_5 = module_0.is_string(str_0)
    bool_6 = module_0.is_uuid(bool_4, bool_4)

def test_case_7():
    str_0 = '^[a-z]{2}_[A-Z]{2}$'
    i_s_b_n_checker_0 = module_0.__ISBNChecker(str_0)
    bool_0 = module_0.is_slug(i_s_b_n_checker_0, str_0)
    bool_1 = False
    bool_2 = module_0.is_json(bool_1)
    str_1 = '&5F?4\tC+8%'
    bool_3 = module_0.is_decimal(str_1)

def test_case_8():
    str_0 = 'bw mgWKG$+9D%d\\e+w"'
    str_1 = '-g;j+pw5uiGP>\\'
    bool_0 = module_0.is_url(str_0, str_1)

def test_case_9():
    str_0 = 'http://www.mysite.com'
    bool_0 = module_0.is_url(str_0)
    str_1 = 'https://mysite.com'
    bool_1 = module_0.is_url(str_1)
    str_2 = 'ftp://mysite.com'
    bool_2 = module_0.is_url(str_2)
    str_3 = 'file://mysite.com'
    bool_3 = module_0.is_url(str_3)
    str_4 = 'mysite.com'
    bool_4 = module_0.is_url(str_4)
    str_5 = '.mysite.com'
    bool_5 = module_0.is_url(str_5)
    str_6 = 'www.mysite.com'
    bool_6 = module_0.is_url(str_6)
    str_7 = 'http://mysite.com'
    bool_7 = module_0.is_url(str_7)
    str_8 = 'http'
    str_9 = 'ftp'
    str_10 = [str_8, str_9]
    bool_8 = module_0.is_url(str_7, str_10)
    str_11 = [str_8, str_9]
    bool_9 = module_0.is_url(str_1, str_11)

def test_case_10():
    str_0 = '5555555555554444'
    bool_0 = module_0.is_credit_card(str_0)
    bool_1 = module_0.is_url(bool_0)
    bool_2 = module_0.is_url(bool_1)

def test_case_11():
    str_0 = '0.0.0.0'
    bool_0 = module_0.is_email(str_0)

def test_case_12():
    str_0 = '127.0.0.1'
    bool_0 = module_0.is_ip_v4(str_0)
    str_1 = 'C&fV\nSb51l6um7ypa'
    bool_1 = module_0.is_decimal(str_1)
    bool_2 = module_0.is_email(bool_1)
    bool_3 = module_0.is_json(str_0)
    bool_4 = module_0.is_email(bool_2)

def test_case_13():
    str_0 = 'q1H\r6j(?g"|v'
    bool_0 = module_0.is_credit_card(str_0)

def test_case_14():
    dict_0 = None
    str_0 = 'YoRDc\rO_v7Z'
    bool_0 = module_0.is_credit_card(dict_0, str_0)
    bool_1 = False
    str_1 = 'D`An8PmTOb'
    bool_2 = module_0.is_email(str_1)
    i_s_b_n_checker_0 = module_0.__ISBNChecker(str_0, bool_1)
    bool_3 = i_s_b_n_checker_0.is_isbn_10()
    int_0 = 3
    bool_4 = module_0.is_json(int_0)

def test_case_15():
    int_0 = -2159
    bool_0 = module_0.is_camel_case(int_0)
    str_0 = 'my.email@the-provider.com'
    bool_1 = module_0.is_email(str_0)
    bool_2 = module_0.is_json(str_0)

def test_case_16():
    bytes_0 = b'\x99\xe8\x93P\xa5D2t\xc8\xc5\xa1\x8f\x8a'
    set_0 = {bytes_0}
    str_0 = '(<([a-z]+:)?[a-z]+[^>]*/?>|</([a-z]+:)?[a-z]+>|<!--.*-->|<!doctype.*>)'
    bool_0 = module_0.is_snake_case(set_0, str_0)
    bool_1 = True
    tuple_0 = (bytes_0, set_0, bool_1)
    bool_2 = module_0.is_ip(tuple_0)

def test_case_17():
    str_0 = '127.0.0.1'
    bool_0 = module_0.is_snake_case(str_0)
    bool_1 = module_0.is_ip_v4(str_0)
    str_1 = 'my.email@the-provider.com'
    bool_2 = module_0.is_credit_card(str_1)

def test_case_18():
    str_0 = 'my.email@the-provider.com'
    bool_0 = module_0.is_email(str_0)
    bool_1 = module_0.is_json(str_0)

def test_case_19():
    str_0 = '127.0.0.1'
    bool_0 = module_0.is_url(str_0)
    bool_1 = module_0.is_ip_v4(str_0)
    str_1 = '128.0.0.1'
    bool_2 = module_0.is_ip_v4(str_1)
    str_2 = 'TO(w>&=V"1jb\nP'
    bool_3 = module_0.is_isbn_13(str_0)
    str_3 = ''
    bool_4 = module_0.is_ip(bool_2)
    str_4 = 'w${K"U5-I&\tW1jNGKdA'
    list_0 = []
    bool_5 = module_0.is_url(str_2, list_0)
    bytes_0 = b'\xe7\x12\r\xd3\x81\xd1\xb1\x1b\xe1T{\xffp\xd6'
    bool_6 = module_0.is_ip(list_0)
    bool_7 = module_0.is_credit_card(bool_3, str_4)
    bool_8 = module_0.is_uuid(bool_1, bool_2)
    bool_9 = module_0.is_camel_case(str_3)
    str_5 = 'j@ZTf+W5aa-5#J'
    str_6 = 'b\n%\t]kP\x0cLT'
    bool_10 = module_0.is_email(bytes_0)
    bool_11 = module_0.is_uuid(str_4)
    bool_12 = module_0.is_camel_case(str_6)
    str_7 = '3?x!l\x0b`Roy$|vM#ZUYb'
    bool_13 = module_0.is_isbn(str_7)
    bool_14 = module_0.is_email(str_5)

def test_case_20():
    float_0 = 1368.05
    bool_0 = module_0.is_ip(float_0)

def test_case_21():
    float_0 = -340.9
    bool_0 = False
    bool_1 = None
    bool_2 = module_0.is_palindrome(float_0, bool_0, bool_1)
    bool_3 = module_0.is_uuid(bool_0)
    bool_4 = module_0.is_palindrome(float_0)
    set_0 = {float_0, float_0}
    bool_5 = module_0.is_ip(set_0)
    dict_0 = {}
    bool_6 = module_0.is_url(dict_0)
    str_0 = '"A?*A]<k2UE9PRU;e8'
    bool_7 = module_0.is_number(str_0)
    str_1 = ''
    bool_8 = module_0.is_snake_case(dict_0, str_1)

def test_case_22():
    str_0 = 'g'
    bool_0 = module_0.is_ip(str_0)
    bool_1 = module_0.is_pangram(str_0)
    bool_2 = module_0.is_url(bool_0)
    bool_3 = module_0.is_number(str_0)
    bool_4 = module_0.is_camel_case(bool_0)
    str_1 = 'JimVZVy@~vS;\x0b'
    bool_5 = module_0.is_pangram(str_1)
    bool_6 = module_0.is_isbn(str_1)
    bool_7 = module_0.contains_html(str_1)

def test_case_23():
    str_0 = '\n7PpY*R\x0c|otSP^3x{3'
    bool_0 = module_0.is_uuid(str_0)
    bool_1 = module_0.is_ip(bool_0)
    bool_2 = module_0.is_ip_v4(str_0)
    bool_3 = module_0.is_camel_case(str_0)
    bool_4 = module_0.is_isbn_10(str_0)
    i_s_b_n_checker_0 = module_0.__ISBNChecker(str_0)
    bool_5 = module_0.is_email(bool_4)
    dict_0 = {str_0: i_s_b_n_checker_0, bool_0: bool_0}
    bool_6 = module_0.is_palindrome(bool_1)
    bool_7 = False
    bool_8 = module_0.is_uuid(dict_0, bool_7)
    str_1 = "\n    Force string content to be ascii-only by translating all non-ascii chars into the closest possible representation\n    (eg: ó -> o, Ë -> E, ç -> c...).\n\n    **Bear in mind**: Some chars may be lost if impossible to translate.\n\n    *Example:*\n\n    >>> asciify('èéùúòóäåëýñÅÀÁÇÌÍÑÓË') # returns 'eeuuooaaeynAAACIINOE'\n\n    :param input_string: String to convert\n    :return: Ascii utf-8 string\n    "
    tuple_0 = (dict_0,)
    list_0 = [tuple_0, bool_8, bool_6]
    bool_9 = module_0.is_pangram(list_0)
    bool_10 = module_0.is_isbn_10(str_1)

def test_case_24():
    int_0 = 3
    bool_0 = module_0.is_isogram(int_0)
    bool_1 = module_0.is_json(bool_0)
    bool_2 = module_0.is_full_string(int_0)

def test_case_25():
    str_0 = 'lrF99e5fEL'
    bool_0 = module_0.is_slug(str_0, str_0)
    bool_1 = module_0.is_credit_card(str_0)
    bool_2 = module_0.is_ip_v4(bool_0)
    bool_3 = module_0.is_ip_v4(bool_2)
    bool_4 = module_0.is_ip_v4(bool_3)
    str_1 = '&'
    bool_5 = module_0.is_ip_v4(str_1)

def test_case_26():
    str_0 = 'roman_range'
    int_0 = module_0.words_count(str_0)

def test_case_27():
    list_0 = []
    bool_0 = module_0.is_full_string(list_0)
    bool_1 = module_0.is_ip(bool_0)
    str_0 = '\nm:|E&1P6s&zZyb'
    bool_2 = module_0.is_isbn_13(str_0)
    bool_3 = module_0.is_ip_v4(list_0)

def test_case_28():
    str_0 = 'K/\nrZY'
    bool_0 = module_0.is_full_string(str_0)
    bool_1 = False
    bool_2 = module_0.is_isbn(str_0, bool_1)

def test_case_29():
    str_0 = '127.0.0.1'
    bool_0 = module_0.is_ip_v4(str_0)
    bool_1 = module_0.is_json(str_0)
    bool_2 = module_0.is_camel_case(str_0)
    bool_3 = module_0.is_email(str_0)

def test_case_30():
    str_0 = 'x_2umKVW=+p{h-'
    bool_0 = module_0.is_ip_v4(str_0)
    str_1 = 'roman_range'
    int_0 = module_0.words_count(str_1)

def test_case_31():
    str_0 = '255.200.100.75'
    bool_0 = module_0.is_ip(str_0)
    str_1 = '2001:db8:85a3:0000:0000:8a2e:370:7334'
    bool_1 = module_0.is_ip(str_1)
    bool_2 = module_0.is_ip(bool_1)

def test_case_32():
    str_0 = 'lrF99e5fEL'
    bool_0 = module_0.is_slug(str_0, str_0)
    bool_1 = module_0.is_credit_card(str_0)
    str_1 = '\x0c0R*'
    int_0 = module_0.words_count(str_1)
    bool_2 = module_0.is_ip(bool_1)
    str_2 = '6 47:d*\nWZz5%_a+VP'
    i_s_b_n_checker_0 = module_0.__ISBNChecker(str_2, bool_0)
    str_3 = '8j>p_9]K<\x0cfK'
    bool_3 = module_0.is_isbn(str_3)
    str_4 = 'o(Q){(-qb$f\x0cr.]-YDsF'
    i_s_b_n_checker_1 = module_0.__ISBNChecker(str_4)
    bool_4 = i_s_b_n_checker_0.is_isbn_13()
    bool_5 = module_0.is_palindrome(str_1, bool_4)
    bool_6 = module_0.is_snake_case(str_2)
    bool_7 = module_0.is_uuid(i_s_b_n_checker_0)
    str_5 = '\x0b3`h )&K0zTu*Nim'
    bool_8 = module_0.is_integer(str_5)

def test_case_33():
    str_0 = 'q1H\r6j(?g"|v'
    str_1 = '*X,$%j,^}uDofA'
    int_0 = module_0.words_count(str_1)
    bool_0 = module_0.is_credit_card(str_0)
    bool_1 = module_0.is_isogram(str_0)

def test_case_34():
    str_0 = 'lrF99e5fEL'
    bool_0 = module_0.is_slug(str_0, str_0)
    bool_1 = module_0.is_credit_card(str_0)
    bool_2 = module_0.is_isbn_13(str_0)
    bool_3 = module_0.is_credit_card(str_0)
    bool_4 = module_0.is_isbn_10(str_0, bool_0)
    bool_5 = module_0.is_ip(str_0)
    bool_6 = module_0.is_email(bool_3)
    bytes_0 = None
    bool_7 = module_0.is_email(bytes_0)
    bool_8 = module_0.is_isbn(str_0, bool_0)
    str_1 = '"very.(),:;<>[]".VERY."very@\\ "very".unusual"@strange.example.com'
    bool_9 = module_0.is_email(str_1)
    bool_10 = module_0.is_email(bytes_0)
    bool_11 = module_0.is_email(bytes_0)
    str_2 = '"very.(),:;<>[]\\"very@very.unusual"@strange.example.com'
    bool_12 = True
    bool_13 = True
    bool_14 = module_0.is_palindrome(str_2, bool_12, bool_13)
    bool_15 = None
    i_s_b_n_checker_0 = module_0.__ISBNChecker(str_0, bool_15)
    bool_16 = i_s_b_n_checker_0.is_isbn_13()
    bool_17 = module_0.is_isogram(str_0)

def test_case_35():
    str_0 = '127.0.0.1'
    bool_0 = module_0.is_ip_v4(str_0)
    str_1 = '128.0.0.1'
    bool_1 = module_0.is_ip_v4(str_1)
    str_2 = '0.0.0.0'
    bool_2 = module_0.is_ip_v4(str_2)
    str_3 = '255.255.255.255.255'
    bool_3 = module_0.is_ip_v4(str_3)
    str_4 = 'o'
    bool_4 = module_0.is_url(str_0)
    bool_5 = module_0.is_ip(str_4)
    bool_6 = None
    bool_7 = module_0.is_uuid(str_4, bool_6)
    bool_8 = module_0.is_camel_case(str_4)
    bool_9 = True
    str_5 = '1=5\t>S`oZgXb'
    bool_10 = module_0.is_isbn(str_5)
    bool_11 = module_0.is_palindrome(str_4, bool_9)
    bool_12 = module_0.is_slug(str_2)
    i_s_b_n_checker_0 = module_0.__ISBNChecker(str_4)
    bool_13 = i_s_b_n_checker_0.is_isbn_10()

def test_case_36():
    str_0 = '1506715214'
    bool_0 = module_0.is_isbn(str_0)
    str_1 = '9780312498580'
    bool_1 = module_0.is_isbn(str_1)
    str_2 = '978-0312498580'
    bool_2 = False
    bool_3 = module_0.is_isbn(str_2, bool_2)

def test_case_37():
    str_0 = '77'
    bool_0 = False
    i_s_b_n_checker_0 = module_0.__ISBNChecker(str_0, bool_0)
    bool_1 = i_s_b_n_checker_0.is_isbn_10()
    bool_2 = module_0.is_json(str_0)
    float_0 = 1679.74
    bool_3 = module_0.is_uuid(str_0)
    str_1 = 'D=f-v5T;tLkoUx6(t|,'
    bool_4 = module_0.is_slug(bool_2, str_1)
    bool_5 = module_0.is_string(float_0)
    bool_6 = i_s_b_n_checker_0.is_isbn_10()
    str_2 = 'UPPERCASE_AFTER_SIGN'
    int_0 = module_0.words_count(str_0)
    bool_7 = module_0.is_isbn_13(str_0)
    bool_8 = module_0.contains_html(str_2)
    bool_9 = module_0.is_decimal(str_0)
    bool_10 = module_0.is_isogram(str_0)
    bool_11 = module_0.is_integer(str_0)
    bool_12 = module_0.is_number(str_0)
    bool_13 = i_s_b_n_checker_0.is_isbn_13()
    str_3 = 'P'
    bool_14 = module_0.is_decimal(str_0)
    i_s_b_n_checker_1 = module_0.__ISBNChecker(str_0)
    bool_15 = i_s_b_n_checker_1.is_isbn_10()
    bool_16 = module_0.is_ip(str_0)
    bool_17 = module_0.is_integer(str_3)
    str_4 = '6'
    bool_18 = i_s_b_n_checker_0.is_isbn_13()
    bool_19 = module_0.is_integer(str_4)
    bool_20 = i_s_b_n_checker_1.is_isbn_10()
    bool_21 = module_0.is_isbn(str_3)
    bool_22 = i_s_b_n_checker_1.is_isbn_10()

def test_case_38():
    str_0 = '@pm.il.,om'
    bool_0 = module_0.is_email(str_0)
    str_1 = '@'
    str_2 = '"very.(),:;<>[]".VERY."very@\\ "very".unusual"@strange.example.com'
    bool_1 = module_0.is_email(str_2)
    bool_2 = module_0.is_email(str_1)

def test_case_39():
    str_0 = 'username@gmail.com'
    bool_0 = module_0.is_email(str_0)
    str_1 = 'username.@gmail.com'
    bool_1 = module_0.is_email(str_1)
    str_2 = 'username.gmail.com'
    bool_2 = module_0.is_email(str_2)
    str_3 = 'jojo@jojo..jojo'
    bool_3 = module_0.is_email(str_3)
    str_4 = 'jojo@jojo.jojo..'
    bool_4 = module_0.is_email(str_4)
    str_5 = 'jojo..jojo@joj.com'
    bool_5 = module_0.is_email(str_5)
    str_6 = 'jojo@jojo.jojo.'
    bool_6 = module_0.is_email(str_6)
    str_7 = 'jojo@.jojo.jojo'
    bool_7 = module_0.is_email(str_7)
    str_8 = 'jojo@jojo.jojo'
    bool_8 = module_0.is_email(str_8)

def test_case_40():
    str_0 = '{ "test_name": { "test_val": "Peter" }'
    bool_0 = module_0.is_json(str_0)

def test_case_41():
    str_0 = '127.0.0.1'
    bool_0 = module_0.is_ip_v4(str_0)
    bool_1 = module_0.is_json(str_0)
    str_1 = 'my.email@the-provider.com'
    bool_2 = module_0.is_email(str_1)

def test_case_42():
    str_0 = '127.0.0.1'
    bool_0 = module_0.is_ip_v4(str_0)
    str_1 = '128.0.0.1'
    bool_1 = module_0.is_ip_v4(str_1)
    bool_2 = module_0.is_ip_v4(str_1)
    str_2 = '255.255.255.255.255'
    bool_3 = module_0.is_ip_v4(str_2)
    str_3 = '255.255.256.255'
    bool_4 = module_0.is_ip_v4(str_3)
    bool_5 = module_0.is_ip_v4(str_2)
    str_4 = '127.0.0.255'
    bool_6 = module_0.is_ip_v4(str_4)

def test_case_43():
    str_0 = '\rSK?L8L4#,N@l0.}m'
    var_0 = print(str_0)
    str_1 = 'my.email@the-provider.com'
    bool_0 = module_0.is_email(str_1)
    str_2 = '"very.(),:;<>[]"very@\\"very.unusual"very.example.com'
    bool_1 = module_0.is_email(str_2)

def test_case_44():
    str_0 = '\n    Checks if a string is formatted as "snake case".\n\n    A string is considered snake case when:\n\n    - it\'s composed only by lowercase/uppercase letters and digits\n    - it contains at least one underscore (or provided separator)\n    - it does not start with a number\n\n    *Examples:*\n\n    >>> is_snake_case(\'foo_bar_baz\') # returns true\n    >>> is_snake_case(\'foo\') # returns false\n\n    :param input_string: String to test.\n    :type input_string: str\n    :param separator: String to use as separator.\n    :type separator: str\n    :return: True for a snake case string, false otherwise.\n    '
    str_1 = '0.0.0.0'
    str_2 = 'username.@gmail.com'
    bool_0 = module_0.is_json(str_0)
    bool_1 = module_0.is_email(str_1)
    bool_2 = module_0.is_email(bool_0)
    str_3 = 'TO(w>&=V"1jb\nP'
    bool_3 = module_0.is_isbn_13(str_3)
    str_4 = ''
    bool_4 = module_0.is_ip(str_4)
    str_5 = '8 \\\x0b\nSm){Y'
    str_6 = 'w${K"U5-I&\tW1jNGKdA'
    int_0 = module_0.words_count(str_6)
    bool_5 = module_0.is_email(str_4)
    bool_6 = module_0.is_email(bool_0)
    bool_7 = module_0.is_email(str_5)
    str_7 = '"very.(),:;<>[]"very@\\"very.unusual"very.example.com'
    bool_8 = module_0.is_email(str_7)
    bool_9 = module_0.is_uuid(int_0)
    bool_10 = module_0.is_camel_case(str_2)
    str_8 = 'i<@IoM-5{J'
    bool_11 = module_0.is_isbn(str_8)
    bool_12 = module_0.is_email(str_0)

def test_case_45():
    str_0 = '127.0.0.1'
    bool_0 = module_0.is_uuid(str_0)
    bool_1 = module_0.is_ip_v4(str_0)
    str_1 = '0.0.0.0'
    bool_2 = module_0.is_ip_v6(str_1)
    bool_3 = module_0.is_isbn_13(str_0)
    tuple_0 = ()
    bool_4 = module_0.is_ip(tuple_0)
    str_2 = '8 \\\x0b\nSm){Y'
    str_3 = '.kj\x0b#RA\rQ,,1D'
    int_0 = module_0.words_count(str_3)
    bool_5 = module_0.is_slug(str_2, str_3)
    bool_6 = module_0.is_email(str_2)
    float_0 = -3547.2728
    bool_7 = module_0.is_email(float_0)
    bool_8 = module_0.is_email(bool_5)
    bool_9 = module_0.is_email(str_3)
    bool_10 = module_0.is_slug(float_0)
    str_4 = '"very.(),:;<>[]\\"very@very.unusual"@strange.example.com'
    bool_11 = module_0.is_slug(bool_7)
    str_5 = 'xm^2/iyIYH: '
    bool_12 = module_0.is_email(str_5)
    str_6 = '"very.(),:;<[]\\"very@very.unusual@strange.example.com'
    bool_13 = module_0.is_url(str_6)
    bool_14 = module_0.is_ip(str_6)
    bool_15 = module_0.is_credit_card(int_0, str_4)

def test_case_46():
    str_0 = '4111111111111111'
    bool_0 = module_0.is_credit_card(str_0)
    bool_1 = module_0.is_email(str_0)