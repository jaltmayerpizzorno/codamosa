# Automatically generated by Pynguin.
import mimesis.random as module_0

def test_case_0():
    try:
        random_0 = module_0.Random()
        int_0 = 0
        int_1 = 416
        list_0 = random_0.randints(int_0, int_1)
    except BaseException:
        pass

def test_case_1():
    try:
        random_0 = module_0.Random()
        bytes_0 = random_0.urandom()
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'image/vnd.mix'
        int_0 = None
        random_0 = module_0.Random()
        str_1 = random_0.generate_string(str_0, int_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = ')3nYn!^:-:~xK^ i}P='
        random_0 = module_0.Random()
        str_1 = random_0.custom_code(str_0, str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        random_0 = module_0.Random()
        any_0 = module_0.get_random_item(random_0, random_0)
    except BaseException:
        pass

def test_case_5():
    try:
        tuple_0 = ()
        list_0 = [tuple_0, tuple_0]
        random_0 = module_0.Random()
        any_0 = module_0.get_random_item(list_0, random_0)
        any_1 = module_0.get_random_item(any_0)
    except BaseException:
        pass

def test_case_6():
    try:
        random_0 = module_0.Random()
        str_0 = None
        int_0 = 1910
        random_1 = module_0.Random()
        str_1 = random_1.generate_string(str_0, int_0)
    except BaseException:
        pass

def test_case_7():
    try:
        random_0 = module_0.Random()
        str_0 = random_0.custom_code()
        random_1 = module_0.Random()
        str_1 = 'A@@@'
        str_2 = random_1.custom_code(str_1)
        random_2 = module_0.Random()
        str_3 = '@@@-@@@'
        str_4 = random_2.custom_code(str_3)
        random_3 = module_0.Random()
        str_5 = '123456789'
        str_6 = random_3.custom_code(str_5)
        random_4 = module_0.Random()
        str_7 = '@###'
        str_8 = '@'
        str_9 = random_4.custom_code(str_7, str_8, str_8)
    except BaseException:
        pass