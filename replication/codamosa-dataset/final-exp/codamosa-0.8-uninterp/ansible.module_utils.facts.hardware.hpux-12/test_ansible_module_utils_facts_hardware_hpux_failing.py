# Automatically generated by Pynguin.
import ansible.module_utils.facts.hardware.hpux as module_0

def test_case_0():
    try:
        h_p_u_x_hardware_collector_0 = module_0.HPUXHardwareCollector()
        var_0 = h_p_u_x_hardware_collector_0.collect(h_p_u_x_hardware_collector_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bool_0 = False
        dict_0 = {bool_0: bool_0}
        bool_1 = False
        h_p_u_x_hardware_0 = module_0.HPUXHardware(dict_0, bool_1)
        str_0 = '\x0cogbB4\nQg\x0bSyL%CyBw'
        h_p_u_x_hardware_1 = module_0.HPUXHardware(str_0)
        h_p_u_x_hardware_2 = module_0.HPUXHardware(h_p_u_x_hardware_1)
        h_p_u_x_hardware_3 = module_0.HPUXHardware(h_p_u_x_hardware_2)
        var_0 = h_p_u_x_hardware_2.get_hw_facts()
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = ' create an options parser for bin/ansible '
        str_1 = 'LT.zU{?]O>B\x0b'
        list_0 = []
        h_p_u_x_hardware_0 = module_0.HPUXHardware(str_1, list_0)
        var_0 = h_p_u_x_hardware_0.get_cpu_facts(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        h_p_u_x_hardware_collector_0 = module_0.HPUXHardwareCollector()
        float_0 = 397.13
        h_p_u_x_hardware_collector_1 = module_0.HPUXHardwareCollector()
        str_0 = '"PV-YX,K#Wc'
        h_p_u_x_hardware_0 = module_0.HPUXHardware(h_p_u_x_hardware_collector_1, str_0)
        var_0 = h_p_u_x_hardware_0.get_memory_facts(float_0)
    except BaseException:
        pass

def test_case_4():
    try:
        float_0 = -549.9009
        h_p_u_x_hardware_0 = module_0.HPUXHardware(float_0)
        str_0 = "dq g5g'TM\x0cA!\\Jf%rX"
        h_p_u_x_hardware_1 = module_0.HPUXHardware(str_0)
        var_0 = h_p_u_x_hardware_1.get_hw_facts(h_p_u_x_hardware_0)
    except BaseException:
        pass