# Automatically generated by Pynguin.
import tornado.netutil as module_0

def test_case_0():
    pass

def test_case_1():
    int_0 = 46
    list_0 = module_0.bind_sockets(int_0)

def test_case_2():
    str_0 = 'Use `pytest --runxfail` to run the failed tests'
    int_0 = -657
    socket_0 = module_0.bind_unix_socket(str_0, int_0)
    dict_0 = {}
    s_s_l_socket_0 = module_0.ssl_wrap_socket(socket_0, dict_0)

def test_case_3():
    str_0 = "TXx-kfh'ZKw"
    bool_0 = module_0.is_valid_ip(str_0)

def test_case_4():
    resolver_0 = module_0.Resolver()
    dict_0 = {}
    s_s_l_context_0 = module_0.ssl_options_to_context(dict_0)
    resolver_0.close()

def test_case_5():
    str_0 = "TXx-kfh'ZKw"
    bool_0 = module_0.is_valid_ip(str_0)
    str_1 = 'Invalid cookie %r: %r'
    list_0 = [bool_0, bool_0]
    override_resolver_0 = module_0.OverrideResolver(*list_0)
    bool_1 = module_0.is_valid_ip(str_1)

def test_case_6():
    dict_0 = {}
    s_s_l_context_0 = module_0.ssl_options_to_context(dict_0)

def test_case_7():
    resolver_0 = module_0.Resolver()
    dict_0 = {}
    s_s_l_context_0 = module_0.ssl_options_to_context(dict_0)
    str_0 = "t\x0c!\\*'-Z[\\j89*{\x0bZ9j\x0c"
    bool_0 = module_0.is_valid_ip(str_0)
    str_1 = 'I'
    socket_0 = module_0.bind_unix_socket(str_1)
    resolver_0.close()
    default_executor_resolver_0 = module_0.DefaultExecutorResolver()
    str_2 = ''
    int_0 = 399
    list_0 = default_executor_resolver_0.resolve(str_2, int_0)
    int_1 = 945
    list_1 = module_0.bind_sockets(int_1, str_2)