# Automatically generated by Pynguin.
import mimesis.providers.choice as module_0

def test_case_0():
    try:
        int_0 = 18
        bool_0 = True
        dict_0 = {}
        choice_0 = module_0.Choice(**dict_0)
        choice_1 = module_0.Choice()
        choice_2 = module_0.Choice(**dict_0)
        str_0 = 'thurnia'
        str_1 = '1q69kD7gtYD@/R7F6*'
        var_0 = choice_2.__call__(str_1, bool_0)
        list_0 = [int_0, str_0, var_0, str_0, str_1, str_0]
        var_1 = choice_2.__call__(str_1)
        tuple_0 = (list_0, dict_0)
        bool_1 = True
        var_2 = choice_2.__call__(tuple_0, bool_1)
        choice_3 = module_0.Choice(**dict_0)
        var_3 = choice_2.__call__(list_0, int_0, bool_1)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'Samsung Galaxy Trend 2 Lite'
        int_0 = -1883
        choice_0 = module_0.Choice()
        var_0 = choice_0.__call__(str_0, int_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'd'
        dict_0 = None
        tuple_0 = (str_0, dict_0, dict_0)
        int_0 = None
        bool_0 = True
        choice_0 = module_0.Choice()
        var_0 = choice_0.__call__(tuple_0, int_0, bool_0)
    except BaseException:
        pass

def test_case_3():
    try:
        choice_0 = module_0.Choice()
        sequence_0 = None
        int_0 = -1826
        bool_0 = False
        var_0 = choice_0.__call__(sequence_0, int_0, bool_0)
    except BaseException:
        pass

def test_case_4():
    try:
        choice_0 = module_0.Choice()
        choice_1 = module_0.Choice()
        bytes_0 = b''
        var_0 = choice_1.__call__(bytes_0)
    except BaseException:
        pass

def test_case_5():
    try:
        int_0 = 34
        bool_0 = True
        dict_0 = {}
        choice_0 = module_0.Choice()
        choice_1 = module_0.Choice(**dict_0)
        str_0 = 'thurnia'
        str_1 = '1q69kD7gtYD@/R7F6*'
        var_0 = choice_1.__call__(str_1, bool_0)
        list_0 = [str_0, str_0, int_0, str_0, str_1]
        var_1 = choice_1.__call__(str_1)
        bool_1 = True
        choice_2 = module_0.Choice(**dict_0)
        var_2 = choice_1.__call__(list_0, int_0, bool_1)
    except BaseException:
        pass