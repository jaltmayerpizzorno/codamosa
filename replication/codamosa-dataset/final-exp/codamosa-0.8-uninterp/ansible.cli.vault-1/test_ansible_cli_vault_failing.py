# Automatically generated by Pynguin.
import ansible.cli.vault as module_0

def test_case_0():
    try:
        bool_0 = True
        vault_c_l_i_0 = module_0.VaultCLI(bool_0)
        var_0 = vault_c_l_i_0.init_parser()
    except BaseException:
        pass

def test_case_1():
    try:
        float_0 = 1910.0
        str_0 = '4*71}k\\D'
        vault_c_l_i_0 = module_0.VaultCLI(str_0)
        var_0 = vault_c_l_i_0.post_process_args(float_0)
    except BaseException:
        pass

def test_case_2():
    try:
        int_0 = 1610
        vault_c_l_i_0 = module_0.VaultCLI(int_0)
        str_0 = 'b_=2N#I7Ybj, '
        vault_c_l_i_1 = module_0.VaultCLI(str_0)
        var_0 = vault_c_l_i_1.execute_encrypt()
    except BaseException:
        pass

def test_case_3():
    try:
        bool_0 = True
        vault_c_l_i_0 = module_0.VaultCLI(bool_0)
        var_0 = vault_c_l_i_0.execute_encrypt_string()
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'L4'
        vault_c_l_i_0 = module_0.VaultCLI(str_0)
        var_0 = vault_c_l_i_0.execute_decrypt()
    except BaseException:
        pass

def test_case_5():
    try:
        bool_0 = False
        complex_0 = None
        tuple_0 = (complex_0,)
        vault_c_l_i_0 = module_0.VaultCLI(tuple_0)
        int_0 = -577
        tuple_1 = (bool_0, vault_c_l_i_0, int_0)
        vault_c_l_i_1 = module_0.VaultCLI(tuple_1)
        var_0 = vault_c_l_i_1.execute_create()
    except BaseException:
        pass

def test_case_6():
    try:
        float_0 = 192.165392
        vault_c_l_i_0 = module_0.VaultCLI(float_0)
        var_0 = vault_c_l_i_0.execute_edit()
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = '`-SrZ:[%]~zxzk'
        bytes_0 = b'\xe8a\xcbx\x85}G\x15\xd3\xfblt\x13\xabW\x9c\x9c'
        set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
        vault_c_l_i_0 = module_0.VaultCLI(set_0)
        var_0 = vault_c_l_i_0.format_ciphertext_yaml(str_0)
        var_1 = vault_c_l_i_0.execute_view()
    except BaseException:
        pass

def test_case_8():
    try:
        bool_0 = True
        vault_c_l_i_0 = module_0.VaultCLI(bool_0)
        var_0 = vault_c_l_i_0.execute_rekey()
    except BaseException:
        pass

def test_case_9():
    try:
        bytes_0 = b'\x7f\x9a\xf9\xcbS\x1a'
        int_0 = 1829
        str_0 = 'l;R9n8=4[G'
        vault_c_l_i_0 = module_0.VaultCLI(str_0)
        tuple_0 = (int_0, int_0, vault_c_l_i_0)
        bool_0 = False
        float_0 = 2.0
        set_0 = {float_0}
        vault_c_l_i_1 = module_0.VaultCLI(set_0)
        var_0 = vault_c_l_i_1.format_ciphertext_yaml(bytes_0, tuple_0, bool_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = '`-SrZ:[%]~zxzk'
        list_0 = None
        str_1 = 'L'
        list_1 = [str_1]
        vault_c_l_i_0 = module_0.VaultCLI(list_1)
        var_0 = vault_c_l_i_0.format_ciphertext_yaml(str_0, list_0)
        bool_0 = True
        bool_1 = True
        bytes_0 = b'\xdf\x83q'
        var_1 = vault_c_l_i_0.format_ciphertext_yaml(bool_0, bool_1, bytes_0)
        bool_2 = True
        vault_c_l_i_1 = module_0.VaultCLI(bool_2)
        var_2 = vault_c_l_i_1.execute_view()
    except BaseException:
        pass