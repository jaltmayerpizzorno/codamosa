# Automatically generated by Pynguin.
import docstring_parser.common as module_0

def test_case_0():
    pass

def test_case_1():
    str_0 = '}\\lf^:v5+DH.w%'
    list_0 = [str_0]
    docstring_deprecated_0 = module_0.DocstringDeprecated(list_0, str_0, str_0)

def test_case_2():
    str_0 = 'w#\x0bDJQ|XN`%Y8\nekI'
    list_0 = [str_0]
    bool_0 = True
    docstring_returns_0 = module_0.DocstringReturns(list_0, str_0, str_0, bool_0)
    str_1 = ' Z"@ L'
    list_1 = [str_1]
    bool_1 = False
    docstring_param_0 = module_0.DocstringParam(list_1, str_1, str_1, str_1, bool_1, str_1)

def test_case_3():
    list_0 = []
    dict_0 = None
    optional_0 = None
    docstring_raises_0 = module_0.DocstringRaises(list_0, dict_0, optional_0)
    str_0 = 'lu#\x0czHx?'
    bool_0 = True
    docstring_returns_0 = module_0.DocstringReturns(list_0, docstring_raises_0, str_0, bool_0)

def test_case_4():
    str_0 = '3d8gR\\UH\x0b+z'
    list_0 = [str_0, str_0]
    docstring_raises_0 = module_0.DocstringRaises(list_0, str_0, str_0)

def test_case_5():
    docstring_0 = module_0.Docstring()

def test_case_6():
    docstring_0 = module_0.Docstring()
    var_0 = docstring_0.params

def test_case_7():
    docstring_0 = module_0.Docstring()
    var_0 = docstring_0.raises

def test_case_8():
    docstring_0 = module_0.Docstring()
    var_0 = docstring_0.short_description
    var_1 = None
    var_2 = type(var_1)
    var_3 = isinstance(var_0, var_2)
    var_4 = docstring_0.long_description
    var_5 = type(var_1)
    var_6 = isinstance(var_4, var_5)
    var_7 = docstring_0.meta
    var_8 = docstring_0.params
    var_9 = docstring_0.raises
    var_10 = docstring_0.returns
    var_11 = type(var_1)
    var_12 = isinstance(var_10, var_11)
    var_13 = docstring_0.deprecation
    var_14 = type(var_1)
    var_15 = isinstance(var_13, var_14)