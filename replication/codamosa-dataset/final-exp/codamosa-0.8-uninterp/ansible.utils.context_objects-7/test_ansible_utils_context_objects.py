# Automatically generated by Pynguin.
import ansible.utils.context_objects as module_0

def test_case_0():
    pass

def test_case_1():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    dict_0 = {bool_0: list_0, bool_0: list_0, bool_0: list_0}
    c_l_i_args_0 = module_0.CLIArgs(dict_0)

def test_case_2():
    str_0 = 'regexp is required with backrefs=true'
    global_c_l_i_args_0 = module_0.GlobalCLIArgs(str_0)
    c_l_i_args_0 = module_0.CLIArgs(global_c_l_i_args_0)

def test_case_3():
    str_0 = 'connection'
    str_1 = 'new'
    str_2 = 'bar'
    str_3 = 'qux'
    str_4 = 'baz'
    int_0 = 5
    var_0 = {str_2: str_4, str_3: int_0}
    str_5 = 'local'
    str_6 = 'old'
    var_1 = {str_4: var_0, str_0: str_5, str_1: str_6}
    c_l_i_args_0 = module_0.CLIArgs(var_1)

def test_case_4():
    str_0 = 'one'
    str_1 = 'two'
    str_2 = 'three'
    int_0 = 1
    str_3 = 'deux'
    str_4 = 'trois'
    str_5 = 'tres'
    str_6 = [str_4, str_5, str_5]
    var_0 = {str_0: int_0, str_1: str_3, str_2: str_6}
    c_l_i_args_0 = module_0.CLIArgs(var_0)
    var_1 = c_l_i_args_0.keys()
    var_2 = set(var_1)
    var_3 = c_l_i_args_0.items()
    var_4 = set(var_3)
    var_5 = c_l_i_args_0.values()
    var_6 = set(var_5)
    var_7 = c_l_i_args_0.get(str_0)
    var_8 = c_l_i_args_0.get(str_1)