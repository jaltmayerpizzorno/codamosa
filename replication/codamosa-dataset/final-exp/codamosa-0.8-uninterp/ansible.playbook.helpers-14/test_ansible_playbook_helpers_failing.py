# Automatically generated by Pynguin.
import ansible.playbook.helpers as module_0

def test_case_0():
    try:
        bool_0 = True
        list_0 = [bool_0]
        var_0 = module_0.load_list_of_blocks(list_0, bool_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bool_0 = True
        float_0 = 1471.07
        var_0 = module_0.load_list_of_blocks(float_0, bool_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bool_0 = False
        tuple_0 = (bool_0,)
        str_0 = '(^vP/-5p@erGs\x0c]'
        list_0 = [tuple_0, str_0]
        set_0 = None
        bytes_0 = b'3\x93\x9e'
        var_0 = module_0.load_list_of_tasks(tuple_0, str_0, list_0, set_0, bytes_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'role'
        str_1 = 'base'
        str_2 = {str_0: str_1}
        str_3 = [str_2]
        var_0 = module_0.load_list_of_roles(str_3, str_3, str_3, str_3, str_3, str_3)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'I7L=4bd'
        int_0 = 102
        var_0 = module_0.load_list_of_roles(str_0, int_0, int_0)
    except BaseException:
        pass

def test_case_5():
    try:
        bool_0 = True
        list_0 = [bool_0, bool_0]
        var_0 = module_0.load_list_of_blocks(list_0, bool_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = ';jbPuoA+~:\n\tsR-\x0cX'
        var_0 = dict(action=str_0)
        var_1 = [var_0]
        var_2 = dict(action=str_0)
        bool_0 = False
        var_3 = module_0.load_list_of_tasks(var_1, bool_0, bool_0, bool_0, bool_0, bool_0, bool_0, bool_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = '[:jH{\\d4pso;%\r1'
        bool_0 = False
        float_0 = None
        dict_0 = {bool_0: bool_0, float_0: str_0, bool_0: str_0}
        list_0 = [dict_0, bool_0, dict_0]
        tuple_0 = (dict_0, dict_0, list_0)
        complex_0 = None
        var_0 = module_0.load_list_of_blocks(float_0, tuple_0, tuple_0, complex_0)
        bytes_0 = b'\x8e'
        var_1 = module_0.load_list_of_blocks(list_0, dict_0, bytes_0, dict_0, float_0, dict_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = 'c)dh{$\\ne'
        bool_0 = None
        var_0 = dict(action=str_0)
        var_1 = [var_0]
        var_2 = dict(action=str_0)
        str_1 = 'include'
        var_3 = dict(action=str_1)
        var_4 = module_0.load_list_of_tasks(var_1, bool_0, bool_0, bool_0, bool_0, bool_0, bool_0, bool_0)
        int_0 = None
        list_0 = [int_0, var_3]
        var_5 = module_0.load_list_of_blocks(list_0, list_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'block'
        var_0 = dict(action=str_0)
        str_1 = 'include'
        var_1 = dict(action=str_1)
        var_2 = [var_1]
        str_2 = 'include_role'
        var_3 = dict(action=str_2)
        bool_0 = True
        var_4 = module_0.load_list_of_tasks(var_2, bool_0, bool_0, bool_0, bool_0, bool_0, bool_0, bool_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = 'ehb?F"7 S1wW-HOR'
        var_0 = dict(action=str_0)
        str_1 = 'include_role'
        var_1 = dict(action=str_1)
        var_2 = [var_1]
        bool_0 = False
        var_3 = module_0.load_list_of_tasks(var_2, bool_0, bool_0, bool_0, bool_0, bool_0, bool_0, bool_0)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = 'block'
        bool_0 = None
        list_0 = []
        dict_0 = {bool_0: bool_0, str_0: list_0}
        bool_1 = False
        tuple_0 = (bool_1,)
        var_0 = module_0.load_list_of_blocks(bool_0, dict_0, tuple_0)
        var_1 = [dict_0]
        var_2 = dict(action=bool_0)
        str_1 = 'include'
        var_3 = dict(action=str_1)
        var_4 = dict(action=list_0)
        var_5 = module_0.load_list_of_tasks(var_1, bool_1, bool_1, bool_1, bool_1, bool_1, bool_1, bool_1)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = 'block'
        bool_0 = None
        list_0 = []
        dict_0 = {bool_0: bool_0, str_0: list_0}
        bool_1 = True
        tuple_0 = (bool_1,)
        var_0 = module_0.load_list_of_blocks(bool_0, dict_0, tuple_0)
        var_1 = dict(action=str_0)
        var_2 = [var_1]
        str_1 = 'task'
        var_3 = dict(action=str_1)
        var_4 = [bool_1]
        str_2 = 'include_role'
        bool_2 = True
        var_5 = module_0.load_list_of_tasks(var_2, bool_2, bool_2, bool_2, bool_2, bool_2, bool_2, bool_2)
        float_0 = -776.7395
        list_1 = [float_0, dict_0, var_3, float_0, bool_2, tuple_0]
        dict_1 = {str_2: var_4}
        var_6 = module_0.load_list_of_blocks(list_1, str_2, str_1, dict_1)
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = 'sYeVa}bu]NY_9ynI@l"'
        var_0 = dict(action=str_0)
        var_1 = [var_0]
        var_2 = dict(action=var_1)
        bool_0 = False
        var_3 = module_0.load_list_of_tasks(var_1, bool_0, bool_0, bool_0, bool_0, bool_0, bool_0, bool_0)
    except BaseException:
        pass

def test_case_14():
    try:
        str_0 = 'block'
        bool_0 = None
        list_0 = []
        dict_0 = {bool_0: bool_0, str_0: list_0}
        bool_1 = True
        tuple_0 = (bool_1,)
        var_0 = module_0.load_list_of_blocks(bool_0, dict_0, tuple_0)
        var_1 = dict(action=str_0)
        var_2 = [var_1]
        str_1 = 'Mask'
        var_3 = dict(action=str_1)
        str_2 = 'include'
        var_4 = dict(action=str_2)
        var_5 = dict(action=list_0)
        bool_2 = False
        var_6 = module_0.load_list_of_tasks(var_2, bool_2, bool_2, bool_2, bool_2, bool_2, bool_2, bool_2)
        str_3 = ''
        list_1 = [str_3, var_3, bool_2, list_0]
        str_4 = 'kvm'
        bool_3 = None
        var_7 = module_0.load_list_of_roles(list_1, str_4, bool_3)
    except BaseException:
        pass