# Automatically generated by Pynguin.
import ansible.playbook.role.include as module_0
import ansible.parsing.yaml.objects as module_1
import ansible.playbook.role.requirement as module_2

def test_case_0():
    try:
        set_0 = set()
        str_0 = 'K"uH'
        role_include_0 = module_0.RoleInclude(str_0)
        var_0 = role_include_0.load(set_0, str_0, set_0, str_0, set_0)
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = 2211
        str_0 = '?IzN%=Jf|RS7'
        role_include_0 = module_0.RoleInclude(str_0)
        str_1 = '`Qb'
        tuple_0 = ()
        set_0 = {str_0}
        var_0 = role_include_0.load(str_1, int_0, tuple_0, set_0)
    except BaseException:
        pass

def test_case_2():
    try:
        float_0 = 0.001
        role_include_0 = module_0.RoleInclude(float_0)
        str_0 = 'G\t9j~u/||=X5/n*,'
        float_1 = None
        var_0 = role_include_0.load(str_0, role_include_0, float_1)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'geerlingguy.java'
        var_0 = None
        ansible_base_y_a_m_l_object_0 = module_1.AnsibleBaseYAMLObject()
        role_requirement_0 = module_2.RoleRequirement()
        int_0 = 5985
        str_1 = 'g`'
        dict_0 = {str_1: var_0, str_0: str_0, str_1: str_0}
        role_include_0 = module_0.RoleInclude(int_0, dict_0)
        var_1 = role_include_0.load(ansible_base_y_a_m_l_object_0, role_requirement_0)
    except BaseException:
        pass

def test_case_4():
    try:
        role_include_0 = module_0.RoleInclude()
        str_0 = 'with_together requires at least one element in each list'
        int_0 = None
        dict_0 = {str_0: int_0, role_include_0: int_0, str_0: str_0}
        bool_0 = True
        int_1 = -1468
        tuple_0 = (str_0, bool_0, int_1, dict_0)
        tuple_1 = (tuple_0,)
        var_0 = role_include_0.load(dict_0, tuple_1)
    except BaseException:
        pass