# Automatically generated by Pynguin.
import ansible.parsing.yaml.dumper as module_0
import ansible.parsing.yaml.objects as module_1
import ansible.template as module_2
import ansible.utils.unsafe_proxy as module_3
import ansible.vars.hostvars as module_4

def test_case_0():
    try:
        bytes_0 = b'\x95L'
        str_0 = 'p:J-:2DsJqzY\rN>'
        list_0 = [bytes_0]
        ansible_dumper_0 = module_0.AnsibleDumper(str_0, list_0)
        ansible_unicode_0 = module_1.AnsibleUnicode()
        var_0 = ansible_dumper_0.represent_data(ansible_unicode_0)
        var_1 = module_0.represent_vault_encrypted_unicode(ansible_dumper_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bool_0 = True
        ansible_dumper_0 = module_0.AnsibleDumper(bool_0)
        str_0 = 'key'
        ansible_undefined_0 = module_2.AnsibleUndefined()
        ansible_undefined_1 = {str_0: ansible_undefined_0}
        var_0 = ansible_dumper_0.represent_data(ansible_undefined_1)
    except BaseException:
        pass

def test_case_2():
    try:
        bool_0 = True
        ansible_dumper_0 = module_0.AnsibleDumper(bool_0)
        ansible_undefined_0 = module_2.AnsibleUndefined()
        list_0 = [bool_0]
        ansible_unsafe_bytes_0 = module_3.AnsibleUnsafeBytes()
        async_iterator_0 = ansible_undefined_0.__aiter__()
        host_vars_0 = module_4.HostVars(list_0, ansible_unsafe_bytes_0, async_iterator_0)
        var_0 = ansible_dumper_0.represent_data(host_vars_0)
    except BaseException:
        pass