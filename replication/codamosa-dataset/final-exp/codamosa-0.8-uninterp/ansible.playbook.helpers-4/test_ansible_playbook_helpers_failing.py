# Automatically generated by Pynguin.
import ansible.playbook.helpers as module_0

def test_case_0():
    try:
        str_0 = 'e.oy\ra;+::DTF)OE.JT'
        int_0 = 65001
        var_0 = module_0.load_list_of_blocks(str_0, int_0, int_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '\roCp*Tge<v'
        float_0 = 0.0
        list_0 = [str_0, float_0, float_0, str_0, str_0, str_0]
        var_0 = module_0.load_list_of_blocks(list_0, str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'inclue'
        str_1 = {str_0: str_0, str_0: str_0}
        str_2 = [str_1, str_1, str_1]
        display_0 = None
        str_3 = ''
        set_0 = None
        var_0 = module_0.load_list_of_blocks(display_0, str_3, set_0)
        bool_0 = False
        var_1 = module_0.load_list_of_blocks(str_2, str_2, str_2, str_2, str_1, bool_0, str_2, str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bool_0 = False
        bytes_0 = b'el\x98Z\xb0\xe7\xb5\xb9\x90\xa5\xc7'
        int_0 = None
        str_0 = "7d4nW>vMnF\t'H7*5:eZd"
        var_0 = module_0.load_list_of_tasks(bool_0, bytes_0, int_0, str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        bool_0 = False
        str_0 = ')^"}W;KC=(J2l%'
        list_0 = [bool_0, bool_0, str_0]
        str_1 = '\r~'
        int_0 = 10240
        bool_1 = True
        var_0 = module_0.load_list_of_roles(list_0, str_1, int_0, bool_1)
    except BaseException:
        pass

def test_case_5():
    try:
        int_0 = 1187
        str_0 = '$ZH\\1<'
        var_0 = module_0.load_list_of_roles(int_0, str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'include'
        str_1 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
        str_2 = [str_1, str_1, str_1]
        bool_0 = True
        var_0 = module_0.load_list_of_blocks(str_2, str_2, str_2, str_2, str_1, bool_0, str_2, str_1)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = '9AO V\t+jMD\n'
        str_1 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
        str_2 = [str_1, str_0, str_1, str_1, str_0, str_0]
        bool_0 = True
        var_0 = module_0.load_list_of_blocks(str_2, str_2, str_2, str_2, str_1, bool_0, str_2, str_1)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = '\n        Handle from ansible.module_utils.MODLIB import [.MODLIBn] [as asname]\n\n        Also has to handle relative imports\n\n        We save these as interesting submodules when the imported library is in ansible.module_utils\n        or ansible.collections\n        '
        str_1 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
        str_2 = [str_1, str_1, str_1]
        bool_0 = False
        var_0 = module_0.load_list_of_blocks(str_2, str_2, str_2, str_2, str_1, bool_0, str_2, str_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'll9b/`7lA,57q'
        bytes_0 = b'\xa2c\x97\xe5=\xddQ\xa2\x84\x9c\xecP\x9c'
        dict_0 = {str_0: str_0, str_0: str_0, bytes_0: bytes_0, bytes_0: bytes_0}
        str_1 = '+`reZ*iNq'
        list_0 = []
        bool_0 = False
        tuple_0 = ()
        var_0 = module_0.load_list_of_roles(list_0, bool_0, tuple_0, bool_0)
        var_1 = module_0.load_list_of_roles(str_0, bytes_0, dict_0, str_1)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = 'include'
        str_1 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
        str_2 = [str_1, str_1, str_1]
        bool_0 = False
        var_0 = module_0.load_list_of_blocks(str_2, str_2, str_2, str_2, str_1, bool_0, str_2, str_1)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = ''
        str_1 = "g^'/uB&3F&Vy!W%\nS"
        list_0 = [str_0, str_0, str_1]
        var_0 = module_0.load_list_of_roles(list_0, list_0)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = 'inclu=e'
        str_1 = {str_0: str_0, str_0: str_0}
        str_2 = [str_1, str_1, str_1]
        bool_0 = False
        var_0 = module_0.load_list_of_blocks(str_2, str_2, str_2, str_2, str_1, bool_0, str_2, str_0)
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = 'include_role'
        str_1 = 'name'
        str_2 = 'static'
        str_3 = 'tasks_from'
        str_4 = 'some_role'
        bool_0 = False
        str_5 = 'main'
        var_0 = {str_1: str_4, str_2: bool_0, str_3: str_5}
        var_1 = {str_0: var_0}
        str_6 = 'include_tasks'
        str_7 = 'super_playbook.yml'
        str_8 = {str_6: str_7}
        var_2 = [var_1, str_8]
        var_3 = None
        var_4 = module_0.load_list_of_tasks(var_2, var_3, var_3, var_3, bool_0, var_3, var_3)
    except BaseException:
        pass

def test_case_14():
    try:
        str_0 = 'inclu=e'
        str_1 = {str_0: str_0, str_0: str_0}
        str_2 = [str_1, str_1, str_1]
        bool_0 = True
        var_0 = module_0.load_list_of_blocks(str_2, str_2, str_2, str_2, str_1, bool_0, str_2, str_0)
    except BaseException:
        pass