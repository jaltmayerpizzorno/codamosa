# Automatically generated by Pynguin.
import ansible.utils.unsafe_proxy as module_0

def test_case_0():
    try:
        var_0 = module_0.to_unsafe_text()
    except BaseException:
        pass

def test_case_1():
    try:
        ansible_unsafe_bytes_0 = module_0.AnsibleUnsafeBytes()
        var_0 = ansible_unsafe_bytes_0.decode()
        int_0 = -1433
        var_1 = module_0.wrap_var(int_0)
        list_0 = None
        unsafe_proxy_0 = module_0.UnsafeProxy(*list_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'rb'
        str_1 = 'lfs'
        dict_0 = {str_0: str_0, str_1: str_1}
        ansible_unsafe_text_0 = module_0.AnsibleUnsafeText()
        var_0 = ansible_unsafe_text_0.encode(**dict_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '& %s; exit $LASTEXITCODE'
        int_0 = 975
        list_0 = [str_0, int_0, str_0]
        dict_0 = {}
        unsafe_proxy_0 = module_0.UnsafeProxy(*list_0, **dict_0)
        native_jinja_unsafe_text_0 = module_0.NativeJinjaUnsafeText(*list_0)
    except BaseException:
        pass

def test_case_4():
    try:
        ansible_unsafe_bytes_0 = module_0.AnsibleUnsafeBytes()
        var_0 = ansible_unsafe_bytes_0.decode()
        var_1 = ansible_unsafe_bytes_0.decode()
        var_2 = ansible_unsafe_bytes_0.decode()
        str_0 = 'Lv8Z'
        var_3 = module_0.wrap_var(str_0)
        dict_0 = None
        unsafe_proxy_0 = module_0.UnsafeProxy(**dict_0)
    except BaseException:
        pass

def test_case_5():
    try:
        var_0 = module_0.to_unsafe_bytes()
    except BaseException:
        pass

def test_case_6():
    try:
        dict_0 = None
        list_0 = [dict_0, dict_0, dict_0, dict_0]
        unsafe_proxy_0 = module_0.UnsafeProxy(*list_0)
        ansible_unsafe_bytes_0 = module_0.AnsibleUnsafeBytes(*list_0)
    except BaseException:
        pass

def test_case_7():
    try:
        ansible_unsafe_bytes_0 = module_0.AnsibleUnsafeBytes()
        var_0 = ansible_unsafe_bytes_0.decode()
        var_1 = ansible_unsafe_bytes_0.decode()
        var_2 = ansible_unsafe_bytes_0.decode()
        var_3 = ansible_unsafe_bytes_0.decode()
        int_0 = -1427
        var_4 = module_0.wrap_var(int_0)
        ansible_unsafe_0 = module_0.AnsibleUnsafe()
        str_0 = '\\}iR5vEps4#qa'
        list_0 = [ansible_unsafe_0, var_4, str_0, ansible_unsafe_bytes_0]
        unsafe_proxy_0 = module_0.UnsafeProxy(*list_0)
        list_1 = None
        unsafe_proxy_1 = module_0.UnsafeProxy(*list_1)
    except BaseException:
        pass

def test_case_8():
    try:
        ansible_unsafe_bytes_0 = module_0.AnsibleUnsafeBytes()
        var_0 = ansible_unsafe_bytes_0.decode()
        var_1 = ansible_unsafe_bytes_0.decode()
        var_2 = ansible_unsafe_bytes_0.decode()
        int_0 = -1427
        var_3 = module_0.wrap_var(int_0)
        int_1 = -1427
        int_2 = -4
        list_0 = [var_1, int_2]
        dict_0 = {int_1: var_2, int_2: list_0, ansible_unsafe_bytes_0: var_0, int_1: var_3}
        var_4 = module_0.wrap_var(dict_0)
        ansible_unsafe_0 = module_0.AnsibleUnsafe()
        list_1 = None
        unsafe_proxy_0 = module_0.UnsafeProxy(*list_1)
    except BaseException:
        pass

def test_case_9():
    try:
        ansible_unsafe_bytes_0 = module_0.AnsibleUnsafeBytes()
        var_0 = ansible_unsafe_bytes_0.decode()
        var_1 = ansible_unsafe_bytes_0.decode()
        var_2 = ansible_unsafe_bytes_0.decode()
        var_3 = ansible_unsafe_bytes_0.decode()
        int_0 = -1427
        var_4 = module_0.wrap_var(int_0)
        ansible_unsafe_0 = module_0.AnsibleUnsafe()
        str_0 = '\nexception type: %s'
        var_5 = module_0.wrap_var(str_0)
        str_1 = '\\}iR5vEps4#qa'
        str_2 = None
        var_6 = module_0.wrap_var(str_2)
        list_0 = [ansible_unsafe_0, var_4, str_1, ansible_unsafe_bytes_0]
        unsafe_proxy_0 = module_0.UnsafeProxy(*list_0)
        unsafe_proxy_1 = module_0.UnsafeProxy()
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = 'bO>Fp'
        int_0 = 1542
        var_0 = module_0.wrap_var(int_0)
        set_0 = {str_0, var_0}
        var_1 = module_0.wrap_var(set_0)
        dict_0 = {}
        native_jinja_unsafe_text_0 = module_0.NativeJinjaUnsafeText(**dict_0)
        ansible_unsafe_text_0 = module_0.AnsibleUnsafeText()
    except BaseException:
        pass