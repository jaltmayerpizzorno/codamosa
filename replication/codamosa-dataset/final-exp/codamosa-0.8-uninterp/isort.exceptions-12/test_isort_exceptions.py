# Automatically generated by Pynguin.
import isort.exceptions as module_0
import builtins as module_1

def test_case_0():
    i_sort_error_0 = module_0.ISortError()

def test_case_1():
    str_0 = '1[ff'
    str_1 = '.!kvDs3"L!R[E'
    invalid_settings_path_0 = module_0.InvalidSettingsPath(str_1)
    str_2 = None
    file_skip_comment_0 = module_0.FileSkipComment(str_2)
    profile_does_not_exist_0 = module_0.ProfileDoesNotExist(str_0)

def test_case_2():
    str_0 = '+H4s('
    unsupported_encoding_0 = module_0.UnsupportedEncoding(str_0)
    str_1 = 'k7D]^&<ks@Q"Ie'
    file_skipped_0 = module_0.FileSkipped(str_1, str_1)
    assignments_format_mismatch_0 = module_0.AssignmentsFormatMismatch(str_0)
    introduced_syntax_errors_0 = module_0.IntroducedSyntaxErrors(str_0)

def test_case_3():
    str_0 = 'sHw`%:'
    formatting_plugin_does_not_exist_0 = module_0.FormattingPluginDoesNotExist(str_0)

def test_case_4():
    str_0 = '~ptpKZB8@i-{}n4'
    str_1 = "0I^ieP7g7i8g~?I\x0cjW')"
    existing_syntax_errors_0 = module_0.ExistingSyntaxErrors(str_1)
    exception_0 = module_1.Exception()
    literal_parsing_failure_0 = module_0.LiteralParsingFailure(str_1, exception_0)
    existing_syntax_errors_1 = module_0.ExistingSyntaxErrors(str_0)
    str_2 = 'K(:S8}'
    invalid_settings_path_0 = module_0.InvalidSettingsPath(str_2)
    list_0 = [existing_syntax_errors_1, invalid_settings_path_0]
    introduced_syntax_errors_0 = module_0.IntroducedSyntaxErrors(str_1)
    assignments_format_mismatch_0 = module_0.AssignmentsFormatMismatch(str_1)
    i_sort_error_0 = module_0.ISortError(*list_0)

def test_case_5():
    bytes_0 = b'\xa7\xabY\xa5\x1e\xe4'
    list_0 = [bytes_0]
    str_0 = 'Reverses the ordering of imports.'
    file_skipped_0 = module_0.FileSkipped(str_0, str_0)
    type_0 = module_1.type(*list_0)
    literal_sort_type_mismatch_0 = module_0.LiteralSortTypeMismatch(type_0, type_0)
    i_sort_error_0 = module_0.ISortError()
    str_1 = '@\x0boU#k'
    formatting_plugin_does_not_exist_0 = module_0.FormattingPluginDoesNotExist(str_1)
    str_2 = ',n'
    i_sort_error_1 = module_0.ISortError(*list_0)
    invalid_settings_path_0 = module_0.InvalidSettingsPath(str_2)
    i_sort_error_2 = module_0.ISortError(*list_0)
    unsupported_encoding_0 = module_0.UnsupportedEncoding(str_2)
    literal_sort_type_mismatch_1 = module_0.LiteralSortTypeMismatch(type_0, type_0)

def test_case_6():
    str_0 = ''
    formatting_plugin_does_not_exist_0 = module_0.FormattingPluginDoesNotExist(str_0)
    dict_0 = {}
    unsupported_settings_0 = module_0.UnsupportedSettings(dict_0)
    str_1 = '__main__'
    file_skipped_0 = module_0.FileSkipped(str_1, str_1)

def test_case_7():
    str_0 = 'test source'
    str_1 = 'test option'
    str_2 = 'test value'
    str_3 = 'source'
    str_4 = 'value'
    str_5 = {str_3: str_0, str_4: str_2}
    str_6 = {str_1: str_5}
    unsupported_settings_0 = module_0.UnsupportedSettings(str_6)