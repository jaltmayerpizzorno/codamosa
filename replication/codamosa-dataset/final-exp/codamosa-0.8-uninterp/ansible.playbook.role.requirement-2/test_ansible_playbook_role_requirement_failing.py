# Automatically generated by Pynguin.
import ansible.playbook.role.requirement as module_0

def test_case_0():
    try:
        str_0 = None
        role_requirement_0 = module_0.RoleRequirement()
        var_0 = role_requirement_0.repo_url_to_role_name(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        float_0 = 687.0907
        role_requirement_0 = module_0.RoleRequirement()
        var_0 = role_requirement_0.role_yaml_parse(float_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '\\*UZ?\x0b'
        tuple_0 = (str_0,)
        role_requirement_0 = module_0.RoleRequirement()
        var_0 = role_requirement_0.role_yaml_parse(tuple_0)
    except BaseException:
        pass

def test_case_3():
    try:
        float_0 = -374.04
        list_0 = [float_0, float_0]
        role_requirement_0 = module_0.RoleRequirement()
        var_0 = role_requirement_0.role_yaml_parse(list_0)
    except BaseException:
        pass

def test_case_4():
    try:
        float_0 = None
        role_requirement_0 = module_0.RoleRequirement()
        var_0 = role_requirement_0.scm_archive_role(float_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'geerlingguy.java,1.8'
        str_1 = 'role'
        set_0 = {str_0, str_1, str_0, str_1}
        role_requirement_0 = module_0.RoleRequirement()
        var_0 = role_requirement_0.role_yaml_parse(set_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'O21h1o(dGy\x0cHs'
        bool_0 = True
        list_0 = None
        str_1 = 'rcctl'
        str_2 = '\n---\nmodule: known_hosts\nshort_description: Add or remove a host from the C(known_hosts) file\ndescription:\n   - The C(known_hosts) module lets you add or remove a host keys from the C(known_hosts) file.\n   - Starting at Ansible 2.2, multiple entries per host are allowed, but only one for each key type supported by ssh.\n     This is useful if you\'re going to want to use the M(ansible.builtin.git) module over ssh, for example.\n   - If you have a very large number of host keys to manage, you will find the M(ansible.builtin.template) module more useful.\nversion_added: "1.9"\noptions:\n  name:\n    aliases: [ \'host\' ]\n    description:\n      - The host to add or remove (must match a host specified in key). It will be converted to lowercase so that ssh-keygen can find it.\n      - Must match with <hostname> or <ip> present in key attribute.\n      - For custom SSH port, C(name) needs to specify port as well. See example section.\n    type: str\n    required: true\n  key:\n    description:\n      - The SSH public host key, as a string.\n      - Required if C(state=present), optional when C(state=absent), in which case all keys for the host are removed.\n      - The key must be in the right format for SSH (see sshd(8), section "SSH_KNOWN_HOSTS FILE FORMAT").\n      - Specifically, the key should not match the format that is found in an SSH pubkey file, but should rather have the hostname prepended to a\n        line that includes the pubkey, the same way that it would appear in the known_hosts file. The value prepended to the line must also match\n        the value of the name parameter.\n      - Should be of format `<hostname[,IP]> ssh-rsa <pubkey>`.\n      - For custom SSH port, C(key) needs to specify port as well. See example section.\n    type: str\n  path:\n    description:\n      - The known_hosts file to edit.\n      - The known_hosts file will be created if needed. The rest of the path must exist prior to running the module.\n    default: "~/.ssh/known_hosts"\n    type: path\n  hash_host:\n    description:\n      - Hash the hostname in the known_hosts file.\n    type: bool\n    default: "no"\n    version_added: "2.3"\n  state:\n    description:\n      - I(present) to add the host key.\n      - I(absent) to remove it.\n    choices: [ "absent", "present" ]\n    default: "present"\n    type: str\nauthor:\n- Matthew Vernon (@mcv21)\n'
        role_requirement_0 = module_0.RoleRequirement()
        var_0 = role_requirement_0.repo_url_to_role_name(str_2)
        float_0 = 1580.3
        dict_0 = {str_0: list_0, str_1: float_0, list_0: bool_0, str_0: float_0, float_0: str_0, bool_0: str_1, str_1: str_0}
        role_requirement_1 = module_0.RoleRequirement()
        role_requirement_2 = module_0.RoleRequirement()
        var_1 = role_requirement_1.role_yaml_parse(dict_0)
        role_requirement_3 = module_0.RoleRequirement()
        var_2 = role_requirement_3.role_yaml_parse(str_2)
    except BaseException:
        pass