# Automatically generated by Pynguin.
import pymonet.maybe as module_0
import builtins as module_1

def test_case_0():
    pass

def test_case_1():
    str_0 = '=\nP'
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_lazy()

def test_case_2():
    object_0 = module_1.object()
    bool_0 = False
    maybe_0 = module_0.Maybe(bool_0, bool_0)
    bool_1 = maybe_0.__eq__(object_0)

def test_case_3():
    callable_0 = None
    str_0 = '80H8`/'
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.filter(callable_0)

def test_case_4():
    str_0 = '|)v'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    dict_1 = {str_0: dict_0, str_0: dict_0}
    var_0 = None
    bool_0 = True
    bool_1 = True
    maybe_0 = module_0.Maybe(var_0, bool_1)
    var_1 = maybe_0.to_try()
    maybe_1 = module_0.Maybe(var_0, bool_0)
    tuple_0 = (str_0, dict_0, dict_1, maybe_1)
    bool_2 = False
    maybe_2 = module_0.Maybe(tuple_0, bool_2)
    var_2 = maybe_2.to_validation()
    bytes_0 = b'\xb7'
    bool_3 = True
    maybe_3 = module_0.Maybe(bytes_0, bool_3)
    var_3 = maybe_3.to_validation()
    dict_2 = None
    var_4 = maybe_3.map(dict_2)

def test_case_5():
    str_0 = "VHns{',aF\\Nb(MQ[dp"
    object_0 = module_1.object()
    bool_0 = False
    bool_1 = False
    maybe_0 = module_0.Maybe(bool_0, bool_1)
    bool_2 = True
    maybe_1 = module_0.Maybe(maybe_0, bool_2)
    var_0 = maybe_1.to_either()
    bool_3 = True
    maybe_2 = module_0.Maybe(object_0, bool_3)
    var_1 = maybe_2.to_validation()
    var_2 = maybe_2.ap(str_0)
    var_3 = maybe_2.to_try()

def test_case_6():
    dict_0 = None
    str_0 = '\'~46$\n"Y]Xc%|:eQb'
    dict_1 = {str_0: str_0}
    bool_0 = True
    maybe_0 = module_0.Maybe(dict_1, bool_0)
    bool_1 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_1)
    var_0 = maybe_1.get_or_else(dict_0)

def test_case_7():
    var_0 = None
    list_0 = []
    bool_0 = False
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_1 = maybe_0.to_validation()
    str_0 = 'F2~;3>!OO@A/\tqZ3LU+X'
    bool_1 = True
    maybe_1 = module_0.Maybe(str_0, bool_1)
    var_2 = maybe_1.get_or_else(var_0)

def test_case_8():
    str_0 = 'zj<^/'
    bool_0 = True
    object_0 = module_1.object()
    bool_1 = False
    maybe_0 = module_0.Maybe(object_0, bool_1)
    var_0 = maybe_0.to_either()
    maybe_1 = module_0.Maybe(str_0, bool_0)
    var_1 = maybe_1.to_validation()
    set_0 = {str_0, bool_0, bool_0}
    var_2 = maybe_1.get_or_else(set_0)

def test_case_9():
    str_0 = '}'
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_either()

def test_case_10():
    bytes_0 = b'F\xe8\xa6B\x93\x1er\xf6|{E\x12\xa7e'
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_box()

def test_case_11():
    bytes_0 = b'F\xe8\xa6B\x93\x1er\xf6|{E\x12\xa7e'
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_box()

def test_case_12():
    maybe_0 = None
    set_0 = None
    tuple_0 = (maybe_0, set_0, maybe_0)
    bool_0 = False
    maybe_1 = module_0.Maybe(tuple_0, bool_0)
    bool_1 = True
    maybe_2 = module_0.Maybe(maybe_1, bool_1)
    var_0 = maybe_2.to_lazy()

def test_case_13():
    bytes_0 = b"\x8a|\x1c~\x1a\xf5\xf7\xb7'GV\xbd\x03$\x00\xa2\x83"
    bool_0 = False
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_try()

def test_case_14():
    str_0 = "\n    Immutable list is data structure that doesn't allow to mutate instances\n    "
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.to_try()
    str_1 = 'l'
    bool_1 = False
    maybe_1 = module_0.Maybe(str_1, bool_1)