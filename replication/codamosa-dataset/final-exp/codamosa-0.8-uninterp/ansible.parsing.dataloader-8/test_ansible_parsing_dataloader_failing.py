# Automatically generated by Pynguin.
import ansible.parsing.dataloader as module_0

def test_case_0():
    try:
        data_loader_0 = module_0.DataLoader()
        dict_0 = {data_loader_0: data_loader_0, data_loader_0: data_loader_0, data_loader_0: data_loader_0}
        var_0 = data_loader_0.load_from_file(dict_0, dict_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bool_0 = True
        data_loader_0 = module_0.DataLoader()
        var_0 = data_loader_0.is_directory(bool_0)
    except BaseException:
        pass

def test_case_2():
    try:
        float_0 = 1954.3
        data_loader_0 = module_0.DataLoader()
        var_0 = data_loader_0.set_basedir(float_0)
        set_0 = {float_0, float_0, float_0, var_0}
        var_1 = data_loader_0.set_vault_secrets(set_0)
        bytes_0 = b')A8\xc1\x01\x98\x0f'
        var_2 = data_loader_0.list_directory(bytes_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bool_0 = False
        data_loader_0 = module_0.DataLoader()
        var_0 = data_loader_0.is_executable(bool_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'PollSelector'
        list_0 = [str_0]
        data_loader_0 = module_0.DataLoader()
        var_0 = data_loader_0.is_executable(list_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = ''
        data_loader_0 = module_0.DataLoader()
        var_0 = data_loader_0.load_from_file(str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = '/Je;beo"wD71'
        str_1 = 'K\\Qw'
        data_loader_0 = module_0.DataLoader()
        var_0 = data_loader_0.path_dwim_relative_stack(str_0, str_1, str_1)
    except BaseException:
        pass

def test_case_7():
    try:
        data_loader_0 = module_0.DataLoader()
        bytes_0 = b'\xb4N`0\xf4\xda28\xf8'
        var_0 = data_loader_0.get_real_file(bytes_0)
    except BaseException:
        pass

def test_case_8():
    try:
        float_0 = -2183.59
        bool_0 = None
        data_loader_0 = module_0.DataLoader()
        var_0 = data_loader_0.get_real_file(float_0, bool_0)
    except BaseException:
        pass

def test_case_9():
    try:
        data_loader_0 = module_0.DataLoader()
        str_0 = '/etc/passwd'
        var_0 = data_loader_0.get_real_file(str_0)
        str_1 = '~]DH\r~YIu!;.gb\n[W`m|'
        str_2 = 'uo~#fL\x0c'
        float_0 = -101.43
        var_1 = data_loader_0.path_dwim_relative(str_2, var_0, float_0, str_1)
        var_2 = data_loader_0.find_vars_files(str_0, str_0)
        data_loader_1 = module_0.DataLoader()
        bytes_0 = None
        var_3 = data_loader_0.set_basedir(bytes_0)
        var_4 = data_loader_0.cleanup_all_tmp_files()
        var_5 = data_loader_1.cleanup_tmp_file(float_0)
        var_6 = data_loader_1.cleanup_all_tmp_files()
        set_0 = {var_0}
        var_7 = data_loader_0.load_from_file(set_0, data_loader_1)
    except BaseException:
        pass

def test_case_10():
    try:
        list_0 = []
        str_0 = 'lspci'
        data_loader_0 = module_0.DataLoader()
        var_0 = data_loader_0.path_dwim_relative_stack(list_0, str_0, list_0, list_0)
    except BaseException:
        pass

def test_case_11():
    try:
        list_0 = []
        data_loader_0 = module_0.DataLoader()
        data_loader_1 = module_0.DataLoader()
        var_0 = data_loader_1.get_real_file(list_0)
    except BaseException:
        pass

def test_case_12():
    try:
        bytes_0 = b'\xf3=\t\x115\x14\xddb\xec+\xfc\xbc\x99;\xcc'
        bytes_1 = b'\x03\xc8\xdc\x15\xe2\xcdwH\x01\xfa\xfe\xe9>aV\x87/\xc8J\xbe'
        data_loader_0 = module_0.DataLoader()
        var_0 = data_loader_0.find_vars_files(bytes_0, bytes_1, bytes_0)
    except BaseException:
        pass

def test_case_13():
    try:
        data_loader_0 = module_0.DataLoader()
        str_0 = 'KgQw'
        int_0 = -2589
        var_0 = data_loader_0.path_dwim_relative_stack(str_0, str_0, str_0, int_0)
    except BaseException:
        pass

def test_case_14():
    try:
        list_0 = []
        str_0 = 'sderr'
        data_loader_0 = module_0.DataLoader()
        var_0 = data_loader_0.is_file(list_0)
        var_1 = data_loader_0.load(str_0, str_0)
        data_loader_1 = module_0.DataLoader()
        int_0 = None
        set_0 = None
        var_2 = data_loader_1.path_dwim_relative_stack(int_0, list_0, set_0)
    except BaseException:
        pass

def test_case_15():
    try:
        bytes_0 = b'\xf3\xb3\xb2\x86{we\xbf'
        set_0 = set()
        data_loader_0 = module_0.DataLoader()
        var_0 = data_loader_0.load_from_file(bytes_0, set_0)
    except BaseException:
        pass

def test_case_16():
    try:
        data_loader_0 = module_0.DataLoader()
        str_0 = '/etc/passwd'
        var_0 = data_loader_0.get_real_file(str_0)
        str_1 = '~]DH\r~YIu!;.gb\n[W`m|'
        var_1 = data_loader_0.path_exists(str_1)
        bool_0 = False
        var_2 = data_loader_0.get_real_file(str_0, bool_0)
        int_0 = -3320
        dict_0 = {str_1: var_1, var_2: var_1}
        var_3 = data_loader_0.path_dwim_relative(int_0, data_loader_0, dict_0)
    except BaseException:
        pass

def test_case_17():
    try:
        data_loader_0 = module_0.DataLoader()
        str_0 = 'KK2E2Cq7kzw='
        str_1 = "'"
        var_0 = data_loader_0.path_dwim_relative(str_0, str_1, str_1)
        dict_0 = {str_0: str_1}
        bool_0 = False
        var_1 = data_loader_0.path_dwim_relative_stack(str_0, dict_0, bool_0, str_1)
    except BaseException:
        pass

def test_case_18():
    try:
        data_loader_0 = module_0.DataLoader()
        var_0 = data_loader_0.cleanup_all_tmp_files()
        data_loader_1 = module_0.DataLoader()
        str_0 = '~/eAU-c}S'
        var_1 = data_loader_1.path_dwim_relative(str_0, str_0, str_0)
        dict_0 = {str_0: str_0}
        bool_0 = False
        var_2 = data_loader_1.path_dwim_relative_stack(str_0, dict_0, bool_0, str_0)
    except BaseException:
        pass

def test_case_19():
    try:
        data_loader_0 = module_0.DataLoader()
        bytes_0 = b'\xf7\x0e\xde\xfe\xb6\xec\x979\x8dDZ*\xbc\xa9s2\x9er'
        var_0 = data_loader_0.is_directory(bytes_0)
        bool_0 = False
        list_0 = []
        var_1 = data_loader_0.set_basedir(list_0)
        var_2 = data_loader_0.cleanup_tmp_file(bool_0)
        str_0 = '~.'
        var_3 = data_loader_0.is_file(str_0)
        float_0 = -963.14
        set_0 = {var_2, var_1}
        data_loader_1 = module_0.DataLoader()
        var_4 = data_loader_1.path_dwim_relative_stack(float_0, set_0, str_0)
    except BaseException:
        pass