# Automatically generated by Pynguin.
import typesystem.formats as module_0

def test_case_0():
    try:
        str_0 = '!ixz&Bx'
        date_format_0 = module_0.DateFormat()
        date_0 = date_format_0.validate(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        float_0 = None
        base_format_0 = module_0.BaseFormat()
        bool_0 = base_format_0.is_native_type(float_0)
    except BaseException:
        pass

def test_case_2():
    try:
        time_format_0 = module_0.TimeFormat()
        str_0 = '01:02:03'
        time_0 = time_format_0.validate(str_0)
        str_1 = '01:02'
        time_1 = time_format_0.validate(str_1)
        str_2 = '01:02:03.456'
        time_2 = time_format_0.validate(str_2)
        base_format_0 = module_0.BaseFormat()
        var_0 = base_format_0.validate(str_2)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'DwD+~F{NsBQXhR|h'
        base_format_0 = module_0.BaseFormat()
        optional_0 = base_format_0.serialize(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        date_time_format_0 = module_0.DateTimeFormat()
        date_format_0 = module_0.DateFormat()
        optional_0 = date_format_0.serialize(date_time_format_0)
    except BaseException:
        pass

def test_case_5():
    try:
        time_format_0 = module_0.TimeFormat()
        str_0 = '02:75'
        time_0 = time_format_0.validate(str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        date_time_format_0 = module_0.DateTimeFormat()
        str_0 = 'e59Jv^fWkhU1M'
        datetime_0 = date_time_format_0.validate(str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        date_time_format_0 = module_0.DateTimeFormat()
        optional_0 = date_time_format_0.serialize(date_time_format_0)
    except BaseException:
        pass

def test_case_8():
    try:
        date_time_format_0 = module_0.DateTimeFormat()
        str_0 = '7lA@T.@ h'
        u_u_i_d_format_0 = module_0.UUIDFormat()
        bool_0 = u_u_i_d_format_0.is_native_type(date_time_format_0)
        optional_0 = date_time_format_0.serialize(str_0)
    except BaseException:
        pass

def test_case_9():
    try:
        date_time_format_0 = module_0.DateTimeFormat()
        str_0 = "'f\t"
        date_format_0 = module_0.DateFormat()
        bool_0 = date_format_0.is_native_type(date_time_format_0)
        datetime_0 = date_time_format_0.validate(str_0)
    except BaseException:
        pass

def test_case_10():
    try:
        time_format_0 = module_0.TimeFormat()
        str_0 = '02:75'
        bool_0 = time_format_0.is_native_type(time_format_0)
        time_0 = time_format_0.validate(str_0)
    except BaseException:
        pass

def test_case_11():
    try:
        date_time_format_0 = module_0.DateTimeFormat()
        bytes_0 = None
        optional_0 = date_time_format_0.serialize(bytes_0)
        dict_0 = {}
        date_format_0 = module_0.DateFormat(**dict_0)
        list_0 = []
        dict_1 = {}
        date_format_1 = module_0.DateFormat(*list_0, **dict_1)
        optional_1 = date_format_1.serialize(list_0)
    except BaseException:
        pass

def test_case_12():
    try:
        time_format_0 = module_0.TimeFormat()
        time_format_1 = module_0.TimeFormat()
        optional_0 = time_format_1.serialize(time_format_0)
    except BaseException:
        pass

def test_case_13():
    try:
        date_time_format_0 = module_0.DateTimeFormat()
        u_u_i_d_format_0 = module_0.UUIDFormat()
        str_0 = u_u_i_d_format_0.serialize(u_u_i_d_format_0)
        u_u_i_d_0 = u_u_i_d_format_0.validate(str_0)
    except BaseException:
        pass

def test_case_14():
    try:
        time_format_0 = module_0.TimeFormat()
        str_0 = '00:30:15'
        time_0 = time_format_0.validate(str_0)
        complex_0 = None
        optional_0 = time_format_0.serialize(complex_0)
        date_time_format_0 = module_0.DateTimeFormat()
        optional_1 = date_time_format_0.serialize(date_time_format_0)
    except BaseException:
        pass

def test_case_15():
    try:
        str_0 = '85p\\RtGn"Oeh*[Z:fv)\t'
        time_format_0 = module_0.TimeFormat()
        time_0 = time_format_0.validate(str_0)
    except BaseException:
        pass

def test_case_16():
    try:
        date_format_0 = module_0.DateFormat()
        str_0 = '2020-1-0'
        date_0 = date_format_0.validate(str_0)
    except BaseException:
        pass

def test_case_17():
    try:
        date_time_format_0 = module_0.DateTimeFormat()
        str_0 = '2018-07-14T55:23:01+08:00'
        datetime_0 = date_time_format_0.validate(str_0)
    except BaseException:
        pass

def test_case_18():
    try:
        date_time_format_0 = module_0.DateTimeFormat()
        str_0 = '2020-05-17T11:25:36.2Z'
        datetime_0 = date_time_format_0.validate(str_0)
        int_0 = 2020
        int_1 = 5
        int_2 = 36
        list_0 = [int_2, int_0, datetime_0, int_2]
        str_1 = 'A_Zz}c<'
        dict_0 = {str_1: int_1}
        date_time_format_1 = module_0.DateTimeFormat(*list_0, **dict_0)
    except BaseException:
        pass

def test_case_19():
    try:
        time_format_0 = module_0.TimeFormat()
        str_0 = '00:30:15'
        time_0 = time_format_0.validate(str_0)
        str_1 = '2018-07-4T55:2:01+80'
        date_time_format_0 = module_0.DateTimeFormat()
        datetime_0 = date_time_format_0.validate(str_1)
    except BaseException:
        pass