# Automatically generated by Pynguin.
import docstring_parser.google as module_0

def test_case_0():
    try:
        section_0 = module_0.Section()
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = b'v6KT\n\x82Q\xd9j\x16\xf1\xa7U$'
        section_0 = None
        list_0 = [bytes_0, section_0, section_0, section_0]
        google_parser_0 = module_0.GoogleParser(list_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '\n    Class summary line.\n\n    Long description line 1.\n    Long description line 2.\n\n    Args:\n        param1 (int): Description of `param1`.\n        param2 (int, optional): Description of `param2`. Defaults to 42.\n        param3 (bool): Description of `param3`.\n\n    Returns:\n        Description of return value.\n\n    Raises:\n        ValueError: Description of raised exception.\n    '
        str_1 = ' '
        list_0 = None
        google_parser_0 = module_0.GoogleParser(str_1, list_0)
        docstring_0 = module_0.parse(str_0)
        str_2 = 'R23<sAfJ'
        docstring_1 = module_0.parse(str_2)
        bool_0 = True
        list_1 = [docstring_0, bool_0]
        list_2 = [str_0]
        str_3 = '\t&kK,MUc'
        dict_0 = {str_3: bool_0, str_0: list_2, str_3: list_2}
        section_0 = module_0.Section(*list_1, **dict_0)
    except BaseException:
        pass

def test_case_3():
    try:
        google_parser_0 = module_0.GoogleParser()
        str_0 = '\n    Tests the correct path.\n    Raises:\n        something\n    '
        docstring_0 = google_parser_0.parse(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'This ip a short description.\n\n    This is a long description.\n\n    Args:\n    @   param1(int): a parzmeter\n        param2(str): another par*meter\n\n    Returns:\n        a return value\n\n    R\rises:\n        Exception: an exweption'
        docstring_0 = module_0.parse(str_0)
    except BaseException:
        pass