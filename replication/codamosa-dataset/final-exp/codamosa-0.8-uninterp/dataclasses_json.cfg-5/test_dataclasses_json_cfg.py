# Automatically generated by Pynguin.
import dataclasses_json.cfg as module_0
import marshmallow.fields as module_1
import dataclasses_json.undefined as module_2

def test_case_0():
    pass

def test_case_1():
    dict_0 = module_0.config()
    str_0 = '\n        Return the parameters that will be written to the output dict\n        '
    bool_0 = False
    dict_1 = module_0.config(field_name=str_0, exclude=bool_0)

def test_case_2():
    global_config_0 = module_0._GlobalConfig()
    exclude_0 = module_0.Exclude()
    dict_0 = {exclude_0: global_config_0}
    str_0 = 'exclude'
    dict_1 = module_0.config(letter_case=dict_0, field_name=str_0)
    dict_2 = {}
    dict_3 = module_0.config(dict_0, encoder=dict_0, undefined=str_0, exclude=dict_2)

def test_case_3():
    str_0 = '5U)(]_fI-'
    dict_0 = module_0.config()
    str_1 = '#<M/Ero$\x0c-Z/E.\r0'
    int_0 = -1372
    dict_1 = {str_1: str_0}
    tuple_0 = (dict_1, dict_0)
    bool_0 = False
    field_0 = module_1.Field(load_default=int_0, data_key=str_0, validate=tuple_0, required=bool_0)
    undefined_0 = module_2.Undefined.RAISE
    global_config_0 = None
    dict_2 = module_0.config(mm_field=field_0, undefined=undefined_0, field_name=str_0, exclude=global_config_0)
    dict_3 = module_0.config(decoder=bool_0)