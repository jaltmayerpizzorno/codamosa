# Automatically generated by Pynguin.
import ansible.plugins.loader as module_0
import ansible.utils.display as module_1

def test_case_0():
    try:
        var_0 = module_0.get_all_plugin_loaders()
        plugin_load_context_0 = module_0.PluginLoadContext()
        dict_0 = {}
        bool_0 = False
        float_0 = 1542.69862
        var_1 = plugin_load_context_0.record_deprecation(dict_0, bool_0, float_0)
        int_0 = 3582
        var_2 = module_0.get_shell_plugin(int_0)
    except BaseException:
        pass

def test_case_1():
    try:
        var_0 = module_0.get_shell_plugin()
    except BaseException:
        pass

def test_case_2():
    try:
        bool_0 = False
        bytes_0 = b'\xee\xb9L\xb8"Q\x95#\xa7\xc2\x9d\x9b\x17'
        str_0 = 'Z"0X*w'
        dict_0 = {str_0: bytes_0}
        bool_1 = False
        dict_1 = {bytes_0: bytes_0, bytes_0: bool_0, bool_1: bytes_0}
        plugin_loader_0 = module_0.PluginLoader(bool_0, bytes_0, bytes_0, dict_0, dict_1)
        var_0 = plugin_loader_0.print_paths()
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'Fc0%z`a'
        var_0 = module_0.get_shell_plugin(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        get_with_context_result_0 = None
        str_0 = 'h'
        bytes_0 = b'X'
        bool_0 = False
        var_0 = module_0.add_all_plugin_dirs(bool_0)
        plugin_path_context_0 = None
        plugin_load_context_0 = module_0.PluginLoadContext()
        float_0 = None
        set_0 = {plugin_path_context_0, float_0, float_0}
        bool_1 = False
        plugin_loader_0 = module_0.PluginLoader(str_0, bool_1, bytes_0, plugin_load_context_0)
        str_1 = 'N<%0<.'
        var_1 = plugin_loader_0.has_plugin(str_1)
        plugin_loader_1 = module_0.PluginLoader(bool_0, plugin_load_context_0, set_0, get_with_context_result_0)
        var_2 = module_0.get_shell_plugin(plugin_loader_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'lMBlY\nQFUT8mIm%QCe+'
        bytes_0 = b'\xc0\x7f\x0c\xc7\xf9)U}I?'
        int_0 = -3558
        plugin_loader_0 = module_0.PluginLoader(str_0, bytes_0, int_0, str_0)
        var_0 = plugin_loader_0.__getstate__()
        var_1 = plugin_loader_0.all()
        var_2 = plugin_loader_0.print_paths()
    except BaseException:
        pass

def test_case_6():
    try:
        get_with_context_result_0 = None
        list_0 = [get_with_context_result_0]
        str_0 = 'sectorsize'
        dict_0 = {str_0: get_with_context_result_0, get_with_context_result_0: str_0}
        str_1 = 'ca\nTG'
        set_0 = {get_with_context_result_0}
        jinja2_loader_0 = module_0.Jinja2Loader(str_0, dict_0, str_1, set_0)
        var_0 = jinja2_loader_0.get(list_0)
    except BaseException:
        pass

def test_case_7():
    try:
        plugin_load_context_0 = module_0.PluginLoadContext()
        bool_0 = False
        float_0 = 572.191208
        set_0 = {plugin_load_context_0, plugin_load_context_0, float_0}
        str_0 = ''
        list_0 = [set_0, bool_0, float_0, float_0]
        bytes_0 = b'\x8b\x157\x1a\x90.\xb4\n\xafEn\xd8'
        jinja2_loader_0 = module_0.Jinja2Loader(plugin_load_context_0, bool_0, set_0, str_0, list_0, bytes_0)
        var_0 = jinja2_loader_0.all()
    except BaseException:
        pass

def test_case_8():
    try:
        bool_0 = False
        float_0 = 962.6601
        int_0 = None
        jinja2_loader_0 = module_0.Jinja2Loader(int_0, float_0, bool_0, int_0)
        str_0 = '0M&D$'
        var_0 = jinja2_loader_0.find_plugin(str_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = '\x0c!N"#h.c}\nz)W'
        plugin_load_context_0 = module_0.PluginLoadContext()
        str_1 = 'k#d8hL'
        list_0 = [plugin_load_context_0, str_1, str_1]
        get_with_context_result_0 = None
        dict_0 = {str_1: list_0}
        tuple_0 = (get_with_context_result_0, dict_0)
        plugin_loader_0 = None
        str_2 = '4fX\x0cIS0$V8%#!'
        tuple_1 = (tuple_0, plugin_loader_0, str_2, list_0)
        set_0 = {get_with_context_result_0}
        jinja2_loader_0 = module_0.Jinja2Loader(plugin_load_context_0, str_1, list_0, tuple_1, set_0)
        var_0 = jinja2_loader_0.find_plugin(str_0)
    except BaseException:
        pass

def test_case_10():
    try:
        plugin_load_context_0 = module_0.PluginLoadContext()
        float_0 = 572.191208
        str_0 = 'nevra'
        get_with_context_result_0 = None
        list_0 = [float_0, get_with_context_result_0, get_with_context_result_0]
        int_0 = -2012
        dict_0 = {get_with_context_result_0: list_0, float_0: int_0, plugin_load_context_0: int_0, int_0: int_0}
        int_1 = -2394
        plugin_loader_0 = module_0.PluginLoader(str_0, int_0, dict_0, int_1, int_0)
        var_0 = plugin_loader_0.__setstate__(plugin_load_context_0)
    except BaseException:
        pass

def test_case_11():
    try:
        bool_0 = True
        bool_1 = False
        float_0 = 1695.5012501497413
        plugin_load_context_0 = module_0.PluginLoadContext()
        tuple_0 = (plugin_load_context_0,)
        plugin_loader_0 = module_0.PluginLoader(bool_1, float_0, tuple_0, float_0)
        var_0 = plugin_loader_0.get_with_context(bool_0)
    except BaseException:
        pass

def test_case_12():
    try:
        plugin_load_context_0 = module_0.PluginLoadContext()
        get_with_context_result_0 = None
        plugin_load_context_1 = module_0.PluginLoadContext()
        str_0 = '\x0cd7'
        var_0 = module_0.get_shell_plugin(get_with_context_result_0, str_0)
        dict_0 = {plugin_load_context_0: plugin_load_context_0, plugin_load_context_0: plugin_load_context_0}
        var_1 = plugin_load_context_0.redirect(dict_0)
        str_1 = '1W0A1Lvy&FlW]t'
        complex_0 = None
        var_2 = plugin_load_context_0.redirect(complex_0)
        tuple_0 = ()
        int_0 = 3600
        float_0 = 2607.29
        dict_1 = {}
        jinja2_loader_0 = module_0.Jinja2Loader(tuple_0, plugin_load_context_0, int_0, float_0, int_0, dict_1)
        plugin_load_context_2 = module_0.PluginLoadContext()
        list_0 = [float_0, dict_0]
        str_2 = '{?8[L8L\nnI_\r\rY'
        plugin_loader_0 = module_0.PluginLoader(list_0, str_1, tuple_0, str_2)
    except BaseException:
        pass

def test_case_13():
    try:
        get_with_context_result_0 = None
        str_0 = 'h'
        bytes_0 = b'\xa5\x8f\x85\x85$x\xf9\xf6\x1b\xbb=\x9c'
        list_0 = []
        bool_0 = False
        float_0 = 0.1
        display_0 = module_1.Display()
        set_0 = {display_0, display_0, bytes_0, get_with_context_result_0, get_with_context_result_0}
        plugin_loader_0 = module_0.PluginLoader(float_0, display_0, str_0, set_0)
        var_0 = plugin_loader_0.find_plugin(bytes_0, list_0, bool_0)
    except BaseException:
        pass

def test_case_14():
    try:
        plugin_load_context_0 = module_0.PluginLoadContext()
        dict_0 = {}
        bool_0 = False
        float_0 = 1542.69862
        var_0 = plugin_load_context_0.record_deprecation(dict_0, bool_0, float_0)
        int_0 = 3582
        var_1 = module_0.get_shell_plugin(int_0)
    except BaseException:
        pass

def test_case_15():
    try:
        str_0 = 'S'
        float_0 = 3677.4944983219184
        plugin_load_context_0 = None
        tuple_0 = (float_0, plugin_load_context_0)
        bytes_0 = b'\xbc\x0eNl\xf2\xb1'
        list_0 = []
        display_0 = module_1.Display()
        plugin_loader_0 = module_0.PluginLoader(str_0, plugin_load_context_0, bytes_0, list_0, display_0)
        var_0 = module_0.add_all_plugin_dirs(float_0)
        var_1 = plugin_loader_0.find_plugin(tuple_0, tuple_0)
    except BaseException:
        pass

def test_case_16():
    try:
        str_0 = 'eX7U'
        var_0 = module_0.get_shell_plugin(str_0)
    except BaseException:
        pass

def test_case_17():
    try:
        get_with_context_result_0 = None
        plugin_load_context_0 = module_0.PluginLoadContext()
        str_0 = 's_ib_'
        str_1 = 'Q/_,]".'
        set_0 = set()
        plugin_path_context_0 = None
        bytes_0 = b'\x7fw\x9d\xb7<\n\xe1'
        tuple_0 = (bytes_0, plugin_load_context_0)
        float_0 = 60.0
        jinja2_loader_0 = module_0.Jinja2Loader(plugin_path_context_0, str_0, get_with_context_result_0, tuple_0, float_0)
        tuple_1 = (set_0, jinja2_loader_0, jinja2_loader_0)
        list_0 = [str_1, str_1, str_1, tuple_1]
        str_2 = 'S'
        dict_0 = {str_0: get_with_context_result_0, str_1: list_0, str_2: str_0, str_2: float_0}
        str_3 = "n]k'og,"
        dict_1 = {}
        list_1 = [str_0, get_with_context_result_0, str_3]
        bytes_1 = b'\x966\xf3\xa6\x1b\xc6[r\xcf\xa8\x9c\x08\xf9~\x86\xac\xd4\xa1'
        plugin_loader_0 = module_0.PluginLoader(str_3, plugin_load_context_0, dict_1, list_1, bytes_1)
        var_0 = plugin_loader_0.format_paths(dict_0)
        var_1 = module_0.get_shell_plugin(get_with_context_result_0, str_0)
        var_2 = module_0.get_all_plugin_loaders()
        dict_2 = {plugin_load_context_0: plugin_load_context_0, plugin_load_context_0: plugin_load_context_0}
        int_0 = 369
        bytes_2 = b'\xf9\x05'
        float_1 = -657.9
        var_3 = plugin_load_context_0.resolve(dict_0, int_0, bytes_2, float_1)
        int_1 = 211
        int_2 = -2658
        plugin_path_context_1 = module_0.PluginPathContext(dict_2, int_2)
        var_4 = plugin_loader_0.find_plugin_with_context(set_0, int_1)
    except BaseException:
        pass

def test_case_18():
    try:
        get_with_context_result_0 = None
        plugin_load_context_0 = module_0.PluginLoadContext()
        str_0 = 's_ib_'
        str_1 = 'Q/_,]".'
        set_0 = set()
        plugin_path_context_0 = None
        bytes_0 = b'\x7fw\x9d\xb7<\n\xe1'
        tuple_0 = (bytes_0, plugin_load_context_0)
        float_0 = 60.0
        jinja2_loader_0 = module_0.Jinja2Loader(plugin_path_context_0, str_0, get_with_context_result_0, tuple_0, float_0)
        tuple_1 = (set_0, jinja2_loader_0, jinja2_loader_0)
        list_0 = [str_1, str_1, str_1, tuple_1]
        str_2 = 'S'
        dict_0 = {str_0: get_with_context_result_0, str_1: list_0, str_2: str_0, str_2: float_0}
        str_3 = "n]k'og,"
        dict_1 = {}
        list_1 = [str_0, get_with_context_result_0, str_3]
        bytes_1 = b'\x966\xf3\xa6\x1b\xc6[r\xcf\xa8\x9c\x08\xf9~\x86\xac\xd4\xa1'
        plugin_loader_0 = module_0.PluginLoader(str_3, plugin_load_context_0, dict_1, list_1, bytes_1)
        var_0 = plugin_loader_0.format_paths(dict_0)
        var_1 = module_0.get_shell_plugin(get_with_context_result_0, str_0)
        var_2 = module_0.get_all_plugin_loaders()
        bytes_2 = b'\x14\xd7\xf8\xc4\x03'
        plugin_path_context_1 = module_0.PluginPathContext(bytes_2, list_1)
        bytes_3 = b'\x9cX\x9b\xa0\x8e'
        var_3 = plugin_loader_0.find_plugin(bytes_3, plugin_path_context_1, plugin_load_context_0, tuple_0)
    except BaseException:
        pass

def test_case_19():
    try:
        get_with_context_result_0 = None
        plugin_load_context_0 = module_0.PluginLoadContext()
        list_0 = [plugin_load_context_0, plugin_load_context_0]
        display_0 = module_1.Display(list_0)
        var_0 = plugin_load_context_0.redirect(display_0)
        str_0 = 'wjEZ1Z'
        var_1 = module_0.get_shell_plugin(get_with_context_result_0, str_0)
        list_1 = [plugin_load_context_0, plugin_load_context_0]
        int_0 = 25
        tuple_0 = ()
        plugin_loader_0 = module_0.PluginLoader(str_0, list_1, str_0, int_0, tuple_0)
        var_2 = plugin_loader_0.format_paths(str_0)
        dict_0 = {plugin_load_context_0: plugin_load_context_0, plugin_load_context_0: plugin_load_context_0}
        var_3 = plugin_load_context_0.redirect(dict_0)
        float_0 = 2607.29
        dict_1 = {str_0: var_0, str_0: plugin_loader_0}
        jinja2_loader_0 = module_0.Jinja2Loader(tuple_0, plugin_load_context_0, int_0, float_0, int_0, dict_1)
        plugin_load_context_1 = module_0.PluginLoadContext()
        var_4 = plugin_loader_0.print_paths()
    except BaseException:
        pass

def test_case_20():
    try:
        str_0 = 'h'
        bytes_0 = b'X'
        bool_0 = False
        var_0 = module_0.add_all_plugin_dirs(bool_0)
        plugin_load_context_0 = module_0.PluginLoadContext()
        float_0 = None
        set_0 = {float_0}
        bool_1 = False
        plugin_loader_0 = module_0.PluginLoader(str_0, bool_1, bytes_0, plugin_load_context_0)
        var_1 = plugin_loader_0.print_paths()
        str_1 = 'N<%0<.'
        str_2 = '.U><D-uJ52'
        int_0 = -89
        var_2 = plugin_loader_0.has_plugin(str_2, int_0)
        str_3 = 'armv5tel'
        str_4 = 'pnqBYN^0VdWel'
        dict_0 = {str_3: var_1, str_1: str_1, str_4: bool_0, str_1: str_0}
        dict_1 = {bool_1: dict_0, bool_0: plugin_load_context_0, float_0: set_0, plugin_load_context_0: str_1}
        display_0 = module_1.Display(dict_1)
        plugin_loader_1 = module_0.PluginLoader(set_0, int_0, display_0, str_4)
    except BaseException:
        pass

def test_case_21():
    try:
        get_with_context_result_0 = None
        str_0 = 'h'
        var_0 = module_0.get_shell_plugin(get_with_context_result_0, str_0)
        plugin_load_context_0 = module_0.PluginLoadContext()
        list_0 = []
        float_0 = 0.8342886072358134
        plugin_load_context_1 = module_0.PluginLoadContext()
        var_1 = plugin_load_context_0.nope(plugin_load_context_1)
        str_1 = '/pynguin/\udcbc\x0eNl\udcf2\udcb1/windows'
        dict_0 = {}
        bytes_0 = b'\xc5\xe2n`A\xd4\x1c\\\xdd\x92\xf4\x12\xa5j\xbd\xc5\\'
        set_0 = {var_0, get_with_context_result_0, float_0}
        int_0 = 3870
        display_0 = module_1.Display(int_0)
        plugin_loader_0 = module_0.PluginLoader(bytes_0, set_0, display_0, list_0)
        var_2 = plugin_loader_0.add_directory(str_1, dict_0)
        var_3 = plugin_loader_0.print_paths()
    except BaseException:
        pass