# Automatically generated by Pynguin.
import ansible.plugins.loader as module_0
import ansible.utils.display as module_1

def test_case_0():
    pass

def test_case_1():
    str_0 = ''
    var_0 = module_0.add_all_plugin_dirs(str_0)

def test_case_2():
    get_with_context_result_0 = None
    plugin_path_context_0 = None
    str_0 = 'S'
    str_1 = "n]k'og,"
    list_0 = [str_0, get_with_context_result_0, str_1]
    var_0 = module_0.get_shell_plugin(get_with_context_result_0, str_0)
    dict_0 = {}
    plugin_load_context_0 = module_0.PluginLoadContext()
    var_1 = plugin_load_context_0.resolve(dict_0, str_1, plugin_path_context_0, list_0)

def test_case_3():
    get_with_context_result_0 = None
    bool_0 = True
    float_0 = -1445.5
    list_0 = [float_0, float_0]
    plugin_loader_0 = module_0.PluginLoader(float_0, get_with_context_result_0, get_with_context_result_0, list_0)
    var_0 = plugin_loader_0.has_plugin(bool_0)

def test_case_4():
    get_with_context_result_0 = None
    str_0 = 'K\\Cv'
    var_0 = module_0.get_shell_plugin(get_with_context_result_0, str_0)

def test_case_5():
    var_0 = globals()
    str_0 = 'callback'
    var_1 = module_0.add_dirs_to_loader(str_0, str_0)
    var_2 = sorted(str_0)

def test_case_6():
    plugin_load_context_0 = module_0.PluginLoadContext()
    get_with_context_result_0 = None
    plugin_load_context_1 = module_0.PluginLoadContext()
    str_0 = '\x0cd7'
    var_0 = module_0.get_shell_plugin(get_with_context_result_0, str_0)
    dict_0 = {plugin_load_context_0: plugin_load_context_0, plugin_load_context_0: plugin_load_context_0}
    var_1 = plugin_load_context_0.redirect(dict_0)
    plugin_load_context_2 = module_0.PluginLoadContext()

def test_case_7():
    bytes_0 = b'X'
    plugin_load_context_0 = module_0.PluginLoadContext()
    str_0 = '{+::6\\>!~m9D+l=5mT'
    bool_0 = False
    plugin_loader_0 = module_0.PluginLoader(str_0, bool_0, bytes_0, plugin_load_context_0)
    var_0 = plugin_loader_0.print_paths()
    str_1 = 'N<%0<.'
    var_1 = plugin_loader_0.has_plugin(str_1)

def test_case_8():
    plugin_load_context_0 = module_0.PluginLoadContext()
    dict_0 = {}
    bool_0 = False
    float_0 = 1542.69862
    var_0 = plugin_load_context_0.record_deprecation(dict_0, bool_0, float_0)

def test_case_9():
    bool_0 = False
    display_0 = module_1.Display()
    dict_0 = {bool_0: bool_0, bool_0: display_0, display_0: bool_0}
    tuple_0 = (dict_0,)
    plugin_load_context_0 = module_0.PluginLoadContext()
    var_0 = plugin_load_context_0.record_deprecation(bool_0, dict_0, tuple_0)

def test_case_10():
    str_0 = 'h'
    bytes_0 = b'X'
    plugin_load_context_0 = module_0.PluginLoadContext()
    bool_0 = False
    plugin_loader_0 = module_0.PluginLoader(str_0, bool_0, bytes_0, plugin_load_context_0)
    var_0 = plugin_loader_0.has_plugin(str_0)

def test_case_11():
    plugin_load_context_0 = module_0.PluginLoadContext()
    bool_0 = False
    float_0 = 572.191
    set_0 = {plugin_load_context_0, plugin_load_context_0, float_0}
    var_0 = plugin_load_context_0.nope(bool_0)
    list_0 = [plugin_load_context_0, float_0, float_0, float_0]
    plugin_path_context_0 = module_0.PluginPathContext(list_0, list_0)
    str_0 = '=8)6L[;e.S6\r~g-Js'
    str_1 = 'Zb}-[_:[<:>:Q6H$\nZA'
    tuple_0 = ()
    jinja2_loader_0 = module_0.Jinja2Loader(str_1, tuple_0, str_1, set_0)
    var_1 = jinja2_loader_0.get(str_0)

def test_case_12():
    str_0 = 'h'
    bytes_0 = b'X'
    plugin_load_context_0 = module_0.PluginLoadContext()
    bool_0 = False
    plugin_loader_0 = module_0.PluginLoader(str_0, bool_0, bytes_0, plugin_load_context_0)
    str_1 = 'N<%0<.'
    var_0 = plugin_loader_0.has_plugin(str_1)

def test_case_13():
    plugin_load_context_0 = module_0.PluginLoadContext()
    dict_0 = {}
    bool_0 = False
    float_0 = 1542.69862
    var_0 = plugin_load_context_0.record_deprecation(dict_0, bool_0, float_0)
    float_1 = 572.191
    set_0 = {plugin_load_context_0, plugin_load_context_0, float_1}
    str_0 = None
    var_1 = plugin_load_context_0.nope(str_0)
    str_1 = '=8)6L[;e.S6\r~g-Js'
    str_2 = 'Zb}-[_:[<:>:Q6H$\nZA'
    tuple_0 = ()
    jinja2_loader_0 = module_0.Jinja2Loader(str_2, tuple_0, str_2, set_0)
    var_2 = jinja2_loader_0.get(str_1)
    dict_1 = {}
    var_3 = jinja2_loader_0.all(**dict_1)

def test_case_14():
    get_with_context_result_0 = None
    plugin_load_context_0 = module_0.PluginLoadContext()
    dict_0 = {plugin_load_context_0: plugin_load_context_0, plugin_load_context_0: plugin_load_context_0}
    str_0 = "&]D~%moSQhEy$'"
    bytes_0 = b'\x14\xd7\xf8\xc4\x03'
    list_0 = [str_0, str_0, str_0]
    plugin_path_context_0 = module_0.PluginPathContext(bytes_0, list_0)
    plugin_loader_0 = module_0.PluginLoader(get_with_context_result_0, get_with_context_result_0, bytes_0, plugin_path_context_0)
    var_0 = plugin_loader_0.find_plugin(str_0)
    float_0 = -179.0
    var_1 = plugin_loader_0.has_plugin(plugin_path_context_0, dict_0)
    bool_0 = False
    var_2 = module_0.get_shell_plugin(bool_0, float_0)

def test_case_15():
    var_0 = globals()
    str_0 = 'callback'
    str_1 = '../test/units/plugins/callback/'
    var_1 = module_0.add_dirs_to_loader(str_0, str_1)
    var_2 = globals()
    str_2 = 'minimal'
    str_3 = 'test_callback'
    str_4 = [str_2, str_3]
    var_3 = sorted(str_4)

def test_case_16():
    get_with_context_result_0 = None
    str_0 = 'h'
    var_0 = module_0.get_shell_plugin(get_with_context_result_0, str_0)
    list_0 = []
    float_0 = 0.8342886072358134
    dict_0 = {}
    bytes_0 = b'\xc5\xe2n`A\xd4\x1c\\\xdd\x92\xf4\x12\xa5j\xbd\xc5\\'
    set_0 = {var_0, get_with_context_result_0, float_0}
    int_0 = 3870
    display_0 = module_1.Display(int_0)
    plugin_loader_0 = module_0.PluginLoader(bytes_0, set_0, display_0, list_0)
    var_1 = plugin_loader_0.add_directory(str_0, dict_0)
    plugin_loader_1 = module_0.PluginLoader(float_0, display_0, str_0, set_0)
    var_2 = plugin_loader_1.has_plugin(int_0)
    var_3 = module_0.add_all_plugin_dirs(display_0)

def test_case_17():
    get_with_context_result_0 = None
    str_0 = 'C'
    var_0 = module_0.get_shell_plugin(get_with_context_result_0, str_0)
    list_0 = []
    display_0 = module_1.Display()
    set_0 = {display_0, display_0, var_0, var_0}
    var_1 = module_0.get_shell_plugin(list_0, set_0)

def test_case_18():
    get_with_context_result_0 = None
    str_0 = 'h'
    bytes_0 = b'X'
    bool_0 = False
    var_0 = module_0.add_all_plugin_dirs(bool_0)
    plugin_path_context_0 = None
    dict_0 = {str_0: plugin_path_context_0}
    plugin_load_context_0 = module_0.PluginLoadContext()
    bool_1 = False
    plugin_loader_0 = module_0.PluginLoader(str_0, bool_1, bytes_0, plugin_load_context_0)
    var_1 = plugin_loader_0.print_paths()
    str_1 = '*}^V-Rt]Ts!f*vdVyy'
    str_2 = '/pynguin/\udcb4\udcb6\udcf8\udcc4/windows'
    list_0 = [bool_1, bytes_0, str_1, str_2]
    tuple_0 = (dict_0, list_0)
    var_2 = plugin_loader_0.has_plugin(str_1, tuple_0)
    float_0 = None
    plugin_loader_1 = module_0.PluginLoader(bytes_0, float_0, get_with_context_result_0, list_0)
    int_0 = -3643
    var_3 = plugin_loader_0.has_plugin(int_0)

def test_case_19():
    get_with_context_result_0 = None
    dict_0 = {}
    plugin_load_context_0 = module_0.PluginLoadContext()
    bool_0 = False
    display_0 = module_1.Display()
    tuple_0 = (bool_0, display_0)
    str_0 = ']"$8\x0cGA'
    int_0 = 2844
    str_1 = 'base'
    dict_1 = {str_0: str_1}
    plugin_loader_0 = module_0.PluginLoader(plugin_load_context_0, tuple_0, dict_0, int_0, dict_1)
    var_0 = plugin_loader_0.all(**dict_0)
    var_1 = module_0.get_shell_plugin(get_with_context_result_0, str_0)
    display_1 = module_1.Display()
    var_2 = plugin_loader_0.has_plugin(str_1, display_1)
    var_3 = module_0.add_all_plugin_dirs(plugin_load_context_0)

def test_case_20():
    get_with_context_result_0 = None
    str_0 = 'h'
    bytes_0 = b'X'
    str_1 = None
    list_0 = [str_0, get_with_context_result_0, str_1, str_0]
    dict_0 = {str_1: list_0}
    bytes_1 = b'\xc3r'
    plugin_load_context_0 = module_0.PluginLoadContext()
    bool_0 = False
    str_2 = 'HfkbZ~M!r\ty.I'
    list_1 = [bool_0]
    str_3 = '/pynguin/=8)6L[;e.S6\r~g-Js/windows'
    bytes_2 = b'\xc2C\xfeq\x1b\xef'
    int_0 = 1076
    plugin_loader_0 = module_0.PluginLoader(get_with_context_result_0, list_1, str_3, bytes_2, int_0)
    jinja2_loader_0 = module_0.Jinja2Loader(bytes_1, plugin_load_context_0, get_with_context_result_0, bool_0, str_2, plugin_loader_0)
    complex_0 = None
    tuple_0 = (jinja2_loader_0, str_3, complex_0)
    bool_1 = True
    plugin_path_context_0 = module_0.PluginPathContext(bool_1, list_1)
    plugin_load_context_1 = module_0.PluginLoadContext()
    plugin_loader_1 = module_0.PluginLoader(tuple_0, plugin_path_context_0, plugin_load_context_1, bool_1, plugin_load_context_1)
    var_0 = plugin_loader_1.__setstate__(dict_0)
    bool_2 = False
    var_1 = module_0.add_all_plugin_dirs(bool_2)
    plugin_load_context_2 = module_0.PluginLoadContext()
    bool_3 = False
    plugin_loader_2 = module_0.PluginLoader(str_0, bool_3, bytes_0, plugin_load_context_2)
    str_4 = 'N<%0<.'
    var_2 = plugin_loader_2.has_plugin(str_4)
    var_3 = module_0.get_shell_plugin(get_with_context_result_0, str_0)