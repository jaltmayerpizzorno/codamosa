# Automatically generated by Pynguin.
import ansible.executor.task_result as module_0

def test_case_0():
    try:
        bytes_0 = b'\x14\xe3'
        str_0 = 'machine_id'
        task_result_0 = module_0.TaskResult(bytes_0, bytes_0, str_0)
        var_0 = task_result_0.clean_copy()
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'allowempty'
        bool_0 = False
        task_result_0 = module_0.TaskResult(str_0, bool_0, str_0)
        var_0 = task_result_0.is_changed()
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b'\xbd\xca\xe3'
        str_0 = 'machine_id'
        task_result_0 = module_0.TaskResult(bytes_0, bytes_0, str_0)
        var_0 = task_result_0.is_skipped()
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'\xbd\xca\x14\xe3'
        str_0 = 'machine_id'
        task_result_0 = module_0.TaskResult(bytes_0, bytes_0, str_0)
        var_0 = task_result_0.is_failed()
    except BaseException:
        pass

def test_case_4():
    try:
        bytes_0 = b'\xbd\xca\x14\xe3'
        str_0 = 'machine_id'
        task_result_0 = module_0.TaskResult(bytes_0, bytes_0, str_0)
        var_0 = task_result_0.is_unreachable()
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'allowempty'
        bool_0 = False
        task_result_0 = module_0.TaskResult(str_0, bool_0, str_0)
        var_0 = task_result_0.needs_debugger(str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = "vjl'N-!6v#X8=G$"
        list_0 = []
        task_result_0 = module_0.TaskResult(list_0, list_0, str_0)
        var_0 = task_result_0.clean_copy()
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'results'
        bool_0 = True
        bool_1 = [bool_0]
        bool_2 = {str_0: bool_1}
        task_result_0 = module_0.TaskResult(str_0, str_0, bool_2)
        var_0 = task_result_0.is_skipped()
        list_0 = [task_result_0]
        var_1 = task_result_0.needs_debugger(list_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = ''
        var_0 = {str_0: str_0}
        task_result_0 = module_0.TaskResult(str_0, str_0, var_0)
        var_1 = task_result_0.is_skipped()
        var_2 = task_result_0.is_failed()
        str_1 = 'failed'
        bool_0 = False
        bool_1 = {str_1: bool_0}
        task_result_1 = module_0.TaskResult(str_0, str_0, bool_1)
        var_3 = task_result_1.is_failed()
        str_2 = 'results'
        var_4 = task_result_0.is_skipped()
        var_5 = task_result_1.is_unreachable()
        bool_2 = []
        bool_3 = {str_2: bool_2}
        task_result_2 = module_0.TaskResult(str_0, str_0, bool_3)
        var_6 = task_result_1.is_skipped()
        var_7 = task_result_2.is_failed()
        var_8 = task_result_2.is_skipped()
        var_9 = task_result_1.is_unreachable()
        var_10 = task_result_0.needs_debugger()
        var_11 = task_result_2.needs_debugger(str_2)
        var_12 = task_result_1.clean_copy()
    except BaseException:
        pass