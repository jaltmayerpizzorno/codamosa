# Automatically generated by Pynguin.
import semantic_release.hvcs as module_0

def test_case_0():
    try:
        base_0 = module_0.get_hvcs()
        str_0 = ''
        token_auth_0 = module_0.TokenAuth(str_0)
        var_0 = token_auth_0.__eq__(base_0)
        base_1 = module_0.Base()
        str_1 = base_1.domain()
    except BaseException:
        pass

def test_case_1():
    try:
        optional_0 = module_0.get_token()
        base_0 = module_0.Base()
        list_0 = []
        github_0 = module_0.Github(*list_0)
        str_0 = github_0.domain()
        str_1 = github_0.api_url()
        str_2 = base_0.api_url()
    except BaseException:
        pass

def test_case_2():
    try:
        bool_0 = False
        bool_1 = False
        token_auth_0 = module_0.TokenAuth(bool_1)
        var_0 = token_auth_0.__eq__(bool_0)
        github_0 = module_0.Github()
        optional_0 = github_0.auth()
        str_0 = ']VO\\\\#{(RM}DjeP:-Z5'
        list_0 = []
        str_1 = ')(?:\\((?P<scope>[^\\n]+)\\))?(?P<break>!)?: (?P<subject>[^\\n]+)(:?\\n\\n(?P<text>.+))?'
        optional_1 = module_0.get_token()
        str_2 = 'Mo$}7xtawb!\\p,tN`5LP'
        gitlab_0 = module_0.Gitlab(*list_0)
        str_3 = gitlab_0.domain()
        bool_2 = module_0.upload_to_release(str_0, str_1, str_2, str_0)
        str_4 = 'CJ(;'
        str_5 = 'HOME'
        base_0 = module_0.Base()
        bool_3 = base_0.check_build_status(str_4, str_0, str_5)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'p'
        str_1 = '-E)0\rd.Y'
        str_2 = "Ev>.$Asp\t'YIZo>=o::"
        str_3 = '**'
        bool_0 = module_0.upload_to_release(str_0, str_1, str_2, str_3)
        str_4 = ' {"`r0`D+Cj_mq\tTRb'
        str_5 = 's(7q`F>'
        bool_1 = module_0.post_changelog(str_4, str_5, str_2, str_2)
        str_6 = 'ghBij6X:Y(B'
        dict_0 = {}
        token_auth_0 = module_0.TokenAuth(dict_0)
        var_0 = token_auth_0.__call__(str_6)
    except BaseException:
        pass

def test_case_4():
    try:
        list_0 = []
        gitlab_0 = module_0.Gitlab(*list_0)
        optional_0 = module_0.get_domain()
        str_0 = gitlab_0.api_url()
        bool_0 = gitlab_0.check_build_status(str_0, str_0, str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        base_0 = module_0.get_hvcs()
        str_0 = '5vW@\rY}LnKM1TJZ!'
        str_1 = ''
        str_2 = base_0.domain()
        str_3 = base_0.domain()
        base_1 = module_0.get_hvcs()
        optional_0 = base_0.token()
        str_4 = base_1.domain()
        str_5 = 'fl2ma`a/|B\r%<K^'
        str_6 = 'Retry is on'
        bool_0 = module_0.post_changelog(str_5, str_6, str_1, str_1)
        bool_1 = base_0.check_build_status(str_0, str_1, str_1)
        str_7 = base_0.domain()
        base_2 = module_0.Base()
        optional_1 = base_0.token()
        gitlab_0 = module_0.Gitlab()
        bool_2 = module_0.check_token()
        optional_2 = gitlab_0.token()
        github_0 = module_0.Github()
        optional_3 = gitlab_0.token()
        bool_3 = module_0.check_token()
        optional_4 = github_0.auth()
        session_0 = github_0.session()
        github_1 = module_0.Github()
        optional_5 = github_1.auth()
        optional_6 = base_2.token()
    except BaseException:
        pass