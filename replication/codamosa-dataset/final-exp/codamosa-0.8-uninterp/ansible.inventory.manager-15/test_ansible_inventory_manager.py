# Automatically generated by Pynguin.
import ansible.inventory.manager as module_0

def test_case_0():
    pass

def test_case_1():
    str_0 = 'xh'
    var_0 = module_0.order_patterns(str_0)

def test_case_2():
    set_0 = set()
    var_0 = module_0.split_host_pattern(set_0)

def test_case_3():
    bool_0 = True
    inventory_manager_0 = module_0.InventoryManager(bool_0)
    var_0 = inventory_manager_0.subset(bool_0)

def test_case_4():
    str_0 = ''
    inventory_manager_0 = module_0.InventoryManager(str_0, str_0)
    var_0 = inventory_manager_0.get_hosts(str_0)

def test_case_5():
    str_0 = '?rf'
    inventory_manager_0 = module_0.InventoryManager(str_0)

def test_case_6():
    bytes_0 = b'`\x87A'
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    tuple_0 = None
    inventory_manager_0 = module_0.InventoryManager(dict_0, tuple_0)
    int_0 = 268
    list_0 = []
    inventory_manager_1 = module_0.InventoryManager(int_0, list_0)
    var_0 = inventory_manager_1.reconcile_inventory()

def test_case_7():
    str_0 = '$l}yiMn%{wE-c,)X&'
    dict_0 = {str_0: str_0}
    list_0 = [str_0, str_0, str_0, dict_0]
    inventory_manager_0 = module_0.InventoryManager(str_0, dict_0)
    var_0 = inventory_manager_0.get_host(inventory_manager_0)
    var_1 = inventory_manager_0.subset(list_0)
    var_2 = inventory_manager_0.list_hosts()
    inventory_manager_1 = module_0.InventoryManager(str_0)
    var_3 = inventory_manager_1.list_groups()
    str_1 = '!9Tq"|^{EYPd_'
    var_4 = inventory_manager_1.list_hosts(str_1)

def test_case_8():
    set_0 = set()
    str_0 = '?NqG%[%&vd\x0cM0yF$v'
    inventory_manager_0 = module_0.InventoryManager(set_0, str_0)
    var_0 = inventory_manager_0.parse_sources()

def test_case_9():
    str_0 = 'al}yiMjn%-{w\\c,j)XL&'
    set_0 = {str_0}
    bytes_0 = b'\xab}\x15\x8d\x97'
    inventory_manager_0 = module_0.InventoryManager(bytes_0, set_0, set_0)

def test_case_10():
    int_0 = -2329
    float_0 = -848.039
    inventory_manager_0 = module_0.InventoryManager(float_0)
    var_0 = inventory_manager_0.parse_source(int_0)

def test_case_11():
    str_0 = '/pynguin/*&aR+(uxJ'
    float_0 = None
    int_0 = -1024
    dict_0 = {str_0: str_0, str_0: str_0, str_0: float_0, str_0: int_0}
    inventory_manager_0 = module_0.InventoryManager(str_0, dict_0)
    var_0 = inventory_manager_0.clear_caches()

def test_case_12():
    bool_0 = False
    bool_1 = False
    inventory_manager_0 = module_0.InventoryManager(bool_1)
    var_0 = inventory_manager_0.refresh_inventory()
    inventory_manager_1 = module_0.InventoryManager(inventory_manager_0)
    var_1 = inventory_manager_1.subset(bool_0)
    var_2 = inventory_manager_1.list_hosts()

def test_case_13():
    bool_0 = True
    inventory_manager_0 = module_0.InventoryManager(bool_0)
    var_0 = inventory_manager_0.subset(bool_0)
    var_1 = inventory_manager_0.list_hosts()

def test_case_14():
    str_0 = 'PRLhA[i08Dp_FM]|'
    list_0 = [str_0, str_0, str_0, str_0]
    inventory_manager_0 = module_0.InventoryManager(str_0, list_0)
    var_0 = inventory_manager_0.list_hosts()

def test_case_15():
    str_0 = 'prefixes'
    set_0 = {str_0, str_0, str_0, str_0}
    inventory_manager_0 = module_0.InventoryManager(set_0)
    var_0 = inventory_manager_0.list_groups()
    var_1 = module_0.order_patterns(str_0)

def test_case_16():
    bool_0 = False
    bool_1 = True
    inventory_manager_0 = module_0.InventoryManager(bool_1)
    var_0 = inventory_manager_0.remove_restriction()
    var_1 = inventory_manager_0.subset(bool_0)

def test_case_17():
    float_0 = -3168.4
    inventory_manager_0 = module_0.InventoryManager(float_0)
    var_0 = inventory_manager_0.clear_pattern_cache()

def test_case_18():
    str_0 = 'a,b[1], c[2:3] , d'
    var_0 = module_0.split_host_pattern(str_0)

def test_case_19():
    float_0 = -121.1
    inventory_manager_0 = module_0.InventoryManager(float_0)
    var_0 = inventory_manager_0.clear_caches()
    var_1 = inventory_manager_0.get_groups_dict()
    tuple_0 = None
    bytes_0 = b'\xba\xeet\x06\x81\xe3?\x8d\x1af\xd9\xce\x060'
    set_0 = set()
    inventory_manager_1 = module_0.InventoryManager(set_0)
    var_2 = inventory_manager_1.parse_source(tuple_0, bytes_0)

def test_case_20():
    set_0 = set()
    str_0 = '?NqG%[%&vd\x0cM0yF$v'
    list_0 = [set_0, str_0, str_0, str_0]
    list_1 = [str_0, set_0, str_0]
    inventory_manager_0 = module_0.InventoryManager(list_1)
    var_0 = inventory_manager_0.subset(list_0)
    inventory_manager_1 = module_0.InventoryManager(set_0, str_0)
    var_1 = inventory_manager_1.parse_sources()

def test_case_21():
    str_0 = '$l}yiMn%{wE-c,)X&'
    dict_0 = {str_0: str_0}
    list_0 = [str_0, str_0, str_0, dict_0]
    inventory_manager_0 = module_0.InventoryManager(str_0, dict_0)
    var_0 = inventory_manager_0.subset(list_0)
    var_1 = inventory_manager_0.list_hosts()
    var_2 = inventory_manager_0.list_hosts()

def test_case_22():
    bool_0 = False
    tuple_0 = (bool_0,)
    bytes_0 = b'y\xf9\x06\x89\xc0\x04\xe5y\xc2HO\xb4'
    list_0 = []
    str_0 = '+QmTMv,%;]Md\x0b'
    inventory_manager_0 = module_0.InventoryManager(list_0, str_0)
    var_0 = inventory_manager_0.parse_source(tuple_0, bytes_0)

def test_case_23():
    str_0 = 'al}yiMjn%-{w\\c,j)XL&'
    dict_0 = {str_0: str_0}
    list_0 = [str_0, str_0, dict_0]
    int_0 = 1199
    str_1 = 'M'
    inventory_manager_0 = module_0.InventoryManager(int_0, str_1)
    var_0 = inventory_manager_0.remove_restriction()
    tuple_0 = (list_0,)
    inventory_manager_1 = module_0.InventoryManager(str_0, dict_0, tuple_0)
    str_2 = 'P2Dg3]Anq'
    var_1 = inventory_manager_1.parse_source(str_2)
    var_2 = inventory_manager_1.list_groups()
    float_0 = -85.711
    set_0 = {str_0}
    var_3 = inventory_manager_0.clear_pattern_cache()
    var_4 = inventory_manager_1.parse_source(float_0, set_0)
    str_3 = '&Gsed2\n/n'
    var_5 = inventory_manager_0.get_hosts(float_0, str_3, tuple_0)
    var_6 = inventory_manager_0.reconcile_inventory()
    bool_0 = False
    var_7 = inventory_manager_0.list_hosts(bool_0)

def test_case_24():
    bool_0 = False
    bool_1 = False
    inventory_manager_0 = module_0.InventoryManager(bool_1)
    inventory_manager_1 = module_0.InventoryManager(inventory_manager_0)
    var_0 = inventory_manager_1.subset(bool_0)
    int_0 = None
    var_1 = inventory_manager_1.get_host(int_0)
    bytes_0 = b'6]\x8e\xf2\xad\xfa:X\x99_\xd2'
    int_1 = 28
    var_2 = inventory_manager_0.get_hosts(int_1, inventory_manager_0)
    var_3 = inventory_manager_0.subset(bytes_0)
    var_4 = inventory_manager_0.list_hosts()
    var_5 = inventory_manager_1.list_hosts()

def test_case_25():
    str_0 = '/etc/ansible/hosts'
    dict_0 = {str_0: str_0}
    list_0 = [str_0, str_0, dict_0]
    var_0 = module_0.split_host_pattern(dict_0)
    tuple_0 = (list_0,)
    inventory_manager_0 = module_0.InventoryManager(str_0, dict_0, tuple_0)
    float_0 = -85.711
    var_1 = inventory_manager_0.clear_pattern_cache()
    inventory_manager_1 = module_0.InventoryManager(float_0)

def test_case_26():
    str_0 = "1E(q7h/<<t\x0b0d:'@m5"
    inventory_manager_0 = module_0.InventoryManager(str_0)
    var_0 = inventory_manager_0.list_groups()
    str_1 = '!9Tq"|^{EYPd_'
    var_1 = inventory_manager_0.list_hosts(str_1)

def test_case_27():
    str_0 = '$l}yiMjn%{w-c,j)Xh&'
    dict_0 = {str_0: str_0}
    bytes_0 = b''
    str_1 = '%x(xjV{&^kW!{>"*@e\x0bj'
    inventory_manager_0 = module_0.InventoryManager(str_1, dict_0)
    inventory_manager_1 = module_0.InventoryManager(bytes_0, dict_0)
    var_0 = inventory_manager_1.list_hosts()
    var_1 = inventory_manager_0.list_hosts()

def test_case_28():
    str_0 = '$l}yiMjn%aw-c,j)Xh&'
    dict_0 = {str_0: str_0}
    list_0 = [str_0, str_0, str_0, dict_0]
    bool_0 = False
    inventory_manager_0 = module_0.InventoryManager(bool_0)
    var_0 = inventory_manager_0.refresh_inventory()
    var_1 = inventory_manager_0.subset(bool_0)
    tuple_0 = (list_0,)
    inventory_manager_1 = module_0.InventoryManager(str_0, dict_0, tuple_0)
    float_0 = -85.7
    set_0 = {str_0}
    var_2 = inventory_manager_1.parse_source(float_0, set_0)
    var_3 = inventory_manager_1.reconcile_inventory()
    bool_1 = False
    var_4 = inventory_manager_0.parse_source(str_0)
    var_5 = inventory_manager_0.reconcile_inventory()
    var_6 = inventory_manager_0.subset(list_0)
    var_7 = inventory_manager_0.clear_pattern_cache()
    complex_0 = None
    inventory_manager_2 = module_0.InventoryManager(complex_0)
    var_8 = inventory_manager_0.list_hosts()
    inventory_manager_3 = module_0.InventoryManager(bool_1)
    var_9 = inventory_manager_3.list_hosts()
    var_10 = inventory_manager_0.list_hosts()
    var_11 = inventory_manager_0.list_hosts()

def test_case_29():
    str_0 = '$l}yiMjn%{w-c,j)Xh&'
    bool_0 = False
    inventory_manager_0 = module_0.InventoryManager(bool_0)
    inventory_manager_1 = module_0.InventoryManager(bool_0)
    var_0 = inventory_manager_1.refresh_inventory()
    var_1 = inventory_manager_1.subset(bool_0)
    float_0 = -85.7
    var_2 = inventory_manager_0.reconcile_inventory()
    var_3 = inventory_manager_1.parse_source(str_0)
    var_4 = inventory_manager_1.reconcile_inventory()
    var_5 = inventory_manager_1.parse_source(float_0)
    var_6 = inventory_manager_0.reconcile_inventory()
    var_7 = inventory_manager_0.clear_pattern_cache()
    dict_0 = None
    inventory_manager_2 = module_0.InventoryManager(dict_0)
    var_8 = inventory_manager_1.list_hosts()
    var_9 = inventory_manager_2.list_hosts()

def test_case_30():
    str_0 = '.'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    list_0 = [str_0, str_0]
    inventory_manager_0 = module_0.InventoryManager(str_0, dict_0, list_0)
    var_0 = inventory_manager_0.remove_restriction()

def test_case_31():
    str_0 = '[7kDS~'
    set_0 = {str_0, str_0, str_0, str_0}
    inventory_manager_0 = module_0.InventoryManager(str_0, set_0)
    var_0 = inventory_manager_0.get_groups_dict()
    str_1 = '$l}yiMjn%{w-c,j)Xh&'
    dict_0 = {str_1: str_1}
    list_0 = [str_1, str_1, str_1, dict_0]
    bool_0 = False
    bool_1 = False
    inventory_manager_1 = module_0.InventoryManager(bool_1)
    var_1 = inventory_manager_1.list_hosts()
    inventory_manager_2 = module_0.InventoryManager(bool_0)
    var_2 = inventory_manager_2.refresh_inventory()
    var_3 = inventory_manager_2.subset(bool_0)
    var_4 = inventory_manager_1.clear_caches()
    tuple_0 = (list_0,)
    inventory_manager_3 = module_0.InventoryManager(str_1, dict_0, tuple_0)
    var_5 = inventory_manager_2.reconcile_inventory()
    list_1 = []
    inventory_manager_4 = module_0.InventoryManager(str_0, dict_0)
    var_6 = inventory_manager_4.get_hosts(list_1, list_0)
    var_7 = inventory_manager_3.reconcile_inventory()
    bool_2 = False
    var_8 = inventory_manager_2.parse_source(bool_2)
    var_9 = inventory_manager_2.reconcile_inventory()
    var_10 = inventory_manager_2.subset(inventory_manager_2)
    inventory_manager_5 = module_0.InventoryManager(list_0)
    var_11 = inventory_manager_1.clear_pattern_cache()
    var_12 = inventory_manager_1.list_hosts()
    inventory_manager_6 = module_0.InventoryManager(bool_0)
    var_13 = inventory_manager_2.list_hosts()
    var_14 = inventory_manager_0.get_hosts()
    var_15 = inventory_manager_0.list_hosts()
    var_16 = inventory_manager_1.list_hosts()

def test_case_32():
    str_0 = '..'
    dict_0 = {str_0: str_0}
    bool_0 = False
    tuple_0 = (bool_0,)
    list_0 = [tuple_0]
    bool_1 = None
    dict_1 = {bool_1: tuple_0, str_0: tuple_0}
    inventory_manager_0 = module_0.InventoryManager(list_0, dict_1)
    inventory_manager_1 = module_0.InventoryManager(tuple_0, inventory_manager_0)
    var_0 = inventory_manager_1.list_hosts(dict_0)

def test_case_33():
    str_0 = '[7kDS~'
    set_0 = {str_0, str_0, str_0, str_0}
    inventory_manager_0 = module_0.InventoryManager(str_0, set_0)
    var_0 = inventory_manager_0.get_groups_dict()
    str_1 = '$l}yiMjn%{w-c,j)Xh&'
    dict_0 = {str_1: str_1}
    bool_0 = False
    inventory_manager_1 = module_0.InventoryManager(bool_0)
    var_1 = inventory_manager_1.list_hosts()
    var_2 = inventory_manager_1.subset(bool_0)
    var_3 = inventory_manager_1.clear_caches()
    float_0 = -85.7
    set_1 = {str_1}
    var_4 = inventory_manager_1.parse_source(float_0, set_1)
    var_5 = inventory_manager_1.reconcile_inventory()
    var_6 = inventory_manager_0.reconcile_inventory()
    str_2 = '5\x0b^D3'
    var_7 = inventory_manager_1.subset(inventory_manager_1)
    inventory_manager_2 = module_0.InventoryManager(str_2, dict_0)
    str_3 = 'Xor[-p~a'
    inventory_manager_3 = module_0.InventoryManager(str_3)
    var_8 = inventory_manager_3.list_hosts()
    inventory_manager_4 = module_0.InventoryManager(str_1)
    str_4 = '&GR:BU;=f7;20'
    var_9 = inventory_manager_1.list_hosts(str_4)
    str_5 = ',@r'
    var_10 = inventory_manager_1.get_hosts(str_5)