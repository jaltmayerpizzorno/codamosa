# Automatically generated by Pynguin.
import ansible.playbook.taggable as module_0

def test_case_0():
    try:
        str_0 = 'lq^JhLqr'
        dict_0 = {str_0: str_0}
        taggable_0 = module_0.Taggable()
        dict_1 = {}
        taggable_1 = module_0.Taggable()
        var_0 = taggable_1.evaluate_tags(dict_0, taggable_0, dict_1)
    except BaseException:
        pass

def test_case_1():
    try:
        taggable_0 = module_0.Taggable()
        str_0 = 'tags'
        str_1 = [str_0]
        var_0 = setattr(taggable_0, str_0, str_1)
        taggable_1 = module_0.Taggable()
        str_2 = 'skip'
        var_1 = setattr(taggable_1, str_0, str_1)
        var_2 = {}
        var_3 = taggable_1.evaluate_tags(str_0, str_2, var_2)
    except BaseException:
        pass

def test_case_2():
    try:
        taggable_0 = module_0.Taggable()
        str_0 = 'tags'
        str_1 = []
        var_0 = setattr(taggable_0, str_0, str_1)
        float_0 = None
        dict_0 = {str_0: str_0}
        var_1 = taggable_0.evaluate_tags(float_0, dict_0, str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        taggable_0 = module_0.Taggable()
        str_0 = 'tags'
        str_1 = []
        var_0 = setattr(taggable_0, str_0, str_1)
        var_1 = {}
        var_2 = taggable_0.evaluate_tags(str_1, str_1, var_1)
        taggable_1 = module_0.Taggable()
        str_2 = '_]Y/X?ixh ?EbT'
        var_3 = setattr(taggable_1, str_0, str_0)
        var_4 = taggable_1.evaluate_tags(str_0, str_2, str_2)
    except BaseException:
        pass