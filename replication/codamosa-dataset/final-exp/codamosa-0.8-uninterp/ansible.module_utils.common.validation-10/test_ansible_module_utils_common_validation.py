# Automatically generated by Pynguin.
import ansible.module_utils.common.validation as module_0

def test_case_0():
    pass

def test_case_1():
    str_0 = '%s directory does not exist.'
    var_0 = module_0.check_required_one_of(str_0, str_0)

def test_case_2():
    int_0 = 2688
    var_0 = module_0.safe_eval(int_0)

def test_case_3():
    str_0 = '\r)eY ^/sVLxu'
    var_0 = module_0.check_mutually_exclusive(str_0, str_0)

def test_case_4():
    str_0 = 'G1h#'
    tuple_0 = ()
    var_0 = module_0.check_required_together(str_0, tuple_0)

def test_case_5():
    str_0 = ' TD$'
    str_1 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.check_required_by(str_1, str_1)

def test_case_6():
    set_0 = None
    str_0 = 'KVsW-GXO3{Md0'
    var_0 = module_0.check_required_by(set_0, str_0)
    str_1 = 'F$5OK@='
    var_1 = module_0.check_type_dict(str_1)

def test_case_7():
    tuple_0 = None
    str_0 = "Remove-Item '%s' -Force;"
    dict_0 = {str_0: str_0}
    list_0 = [dict_0]
    var_0 = module_0.check_required_arguments(tuple_0, dict_0, list_0)

def test_case_8():
    dict_0 = {}
    bool_0 = None
    var_0 = module_0.check_required_if(dict_0, bool_0)

def test_case_9():
    bytes_0 = b'\xfd\x7f\x01)\x07\x9b9Vv'
    var_0 = module_0.check_missing_parameters(bytes_0)

def test_case_10():
    int_0 = -915
    dict_0 = {int_0: int_0}
    str_0 = '.fu+7,$:[{BCu(@P2mN'
    var_0 = module_0.check_type_path(str_0)
    tuple_0 = ()
    var_1 = module_0.check_required_by(dict_0, tuple_0)

def test_case_11():
    str_0 = 'F$5OKw@='
    var_0 = module_0.check_type_dict(str_0)

def test_case_12():
    int_0 = 117
    var_0 = module_0.check_type_int(int_0)

def test_case_13():
    bool_0 = True
    var_0 = module_0.check_type_raw(bool_0)

def test_case_14():
    dict_0 = {}
    var_0 = module_0.check_type_jsonarg(dict_0)
    float_0 = -1170.7532
    list_0 = [float_0]
    var_1 = module_0.safe_eval(list_0)

def test_case_15():
    tuple_0 = ()
    bool_0 = True
    var_0 = module_0.check_required_if(tuple_0, bool_0)
    dict_0 = None
    float_0 = 1.0
    var_1 = module_0.check_required_one_of(dict_0, float_0)

def test_case_16():
    bytes_0 = b'g$\x16u@\xbf5\x94\xf7'
    var_0 = module_0.check_type_jsonarg(bytes_0)

def test_case_17():
    int_0 = -915
    dict_0 = {int_0: int_0}
    tuple_0 = ()
    var_0 = module_0.check_required_by(dict_0, tuple_0)

def test_case_18():
    int_0 = -913
    dict_0 = {int_0: int_0, int_0: int_0}
    tuple_0 = None
    var_0 = module_0.check_required_if(tuple_0, tuple_0)
    var_1 = module_0.check_missing_parameters(dict_0, dict_0)
    var_2 = module_0.check_type_dict(dict_0)

def test_case_19():
    float_0 = -1609.0
    var_0 = module_0.check_type_float(float_0)
    str_0 = "%eZ=CXbyDOKI'zU{\rviw"
    var_1 = module_0.check_type_dict(str_0)

def test_case_20():
    str_0 = '"$UOKw@="'
    var_0 = module_0.check_type_dict(str_0)

def test_case_21():
    str_0 = 'a=b, c=d'
    var_0 = module_0.check_type_dict(str_0)
    str_1 = '{"a":"b", "c":"d"}'
    var_1 = module_0.check_type_dict(str_1)

def test_case_22():
    str_0 = 'F$@OKw@="'
    var_0 = module_0.check_type_dict(str_0)

def test_case_23():
    str_0 = '{{ bad_template_expresgion }}'
    var_0 = module_0.safe_eval(str_0)
    str_1 = '{{ bad_template_expression.bad_method() }}'
    var_1 = module_0.safe_eval(str_1)

def test_case_24():
    var_0 = None
    var_1 = module_0.check_required_if(var_0, var_0)
    str_0 = 'state'
    str_1 = 'present'
    str_2 = 'path'
    str_3 = (str_2,)
    bool_0 = True
    var_2 = [str_0, str_1, str_3, bool_0]
    var_3 = [var_2]
    str_4 = 'absent'
    str_5 = {str_0: str_4}
    var_4 = module_0.check_required_if(var_3, str_5)

def test_case_25():
    str_0 = '{{ bad_template_expression }}'
    var_0 = module_0.safe_eval(str_0)
    str_1 = '{{ bad_template_expression.bad_attribute }}'
    var_1 = module_0.safe_eval(str_1)
    str_2 = '{{ bad_template_expression.bad_method() }}'
    var_2 = module_0.safe_eval(str_2)
    str_3 = '5'
    var_3 = module_0.safe_eval(str_3)

def test_case_26():
    str_0 = '{{ bad_template_expression }}'
    var_0 = module_0.safe_eval(str_0)
    str_1 = 'import test'
    var_1 = module_0.safe_eval(str_1)