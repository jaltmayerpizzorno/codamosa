# Automatically generated by Pynguin.
import ansible.utils.collection_loader._collection_finder as module_0

def test_case_0():
    try:
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
        str_0 = '<ansible.utils.collection_loader._collection_finder._AnsibleCollectionFinder object at 0x7f78b06e6bc0>'
        ansible_collection_finder_1 = module_0._AnsibleCollectionFinder(str_0)
        var_0 = ansible_collection_finder_0.find_module(str_0)
        ansible_collection_finder_2 = module_0._AnsibleCollectionFinder()
        bool_0 = None
        ansible_collection_pkg_loader_0 = module_0._AnsibleCollectionPkgLoader(bool_0)
    except BaseException:
        pass

def test_case_1():
    try:
        list_0 = []
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder(list_0)
        ansible_collection_finder_1 = module_0._AnsibleCollectionFinder()
        var_0 = ansible_collection_finder_1.find_module(ansible_collection_finder_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'Unexpected gpg output'
        ansible_collection_root_pkg_loader_0 = module_0._AnsibleCollectionRootPkgLoader(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = ''
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
        var_0 = ansible_collection_finder_0.find_module(str_0)
        ansible_collection_n_s_pkg_loader_0 = module_0._AnsibleCollectionNSPkgLoader(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
        str_0 = '}-'
        ansible_collection_loader_0 = module_0._AnsibleCollectionLoader(str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'Ftx!P[RC@){Qf?x'
        bool_0 = False
        ansible_internal_redirect_loader_0 = module_0._AnsibleInternalRedirectLoader(str_0, bool_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'namespace.collectionname'
        ansible_collection_ref_0 = module_0.AnsibleCollectionRef(str_0, str_0, str_0, str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'namespa<e.collectionn6me'
        ansible_collection_ref_0 = module_0.AnsibleCollectionRef(str_0, str_0, str_0, str_0)
    except BaseException:
        pass

def test_case_8():
    try:
        ansible_collection_pkg_loader_0 = None
        tuple_0 = (ansible_collection_pkg_loader_0,)
        int_0 = 1
        ansible_path_hook_finder_0 = module_0._AnsiblePathHookFinder(tuple_0, int_0)
        dict_0 = {tuple_0: tuple_0, int_0: int_0, ansible_path_hook_finder_0: int_0}
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
        ansible_collection_ref_0 = module_0.AnsibleCollectionRef(ansible_path_hook_finder_0, dict_0, int_0, ansible_collection_finder_0)
    except BaseException:
        pass

def test_case_9():
    try:
        ansible_collection_pkg_loader_0 = None
        tuple_0 = (ansible_collection_pkg_loader_0,)
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder(tuple_0)
        int_0 = 1
        ansible_path_hook_finder_0 = module_0._AnsiblePathHookFinder(tuple_0, int_0)
        dict_0 = {tuple_0: tuple_0, int_0: int_0, ansible_path_hook_finder_0: int_0}
        ansible_collection_finder_1 = module_0._AnsibleCollectionFinder()
        ansible_collection_ref_0 = module_0.AnsibleCollectionRef(ansible_path_hook_finder_0, dict_0, int_0, ansible_collection_finder_1)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = '#-\t^Y)vpb?'
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
        var_0 = ansible_collection_finder_0.set_playbook_paths(str_0)
        str_1 = ''
        ansible_collection_root_pkg_loader_0 = module_0._AnsibleCollectionRootPkgLoader(str_1)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = '68-mF4`s mx$'
        ansible_collection_pkg_loader_0 = module_0._AnsibleCollectionPkgLoader(str_0)
    except BaseException:
        pass

def test_case_12():
    try:
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
        str_0 = '<ansible.utils.collection_loader._collection_finder._AnsibleCollectionFinder object at 0x7f78b06e6bc0>'
        var_0 = ansible_collection_finder_0.find_module(str_0)
        str_1 = 'nmspace.kollectionname'
        str_2 = '/o-'
        ansible_collection_ref_0 = module_0.AnsibleCollectionRef(str_1, str_1, str_1, str_2)
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = 'namespace.collectionname'
        var_0 = None
        str_1 = 'ref_type'
        ansible_collection_ref_0 = module_0.AnsibleCollectionRef(str_0, var_0, str_0, str_1)
    except BaseException:
        pass

def test_case_14():
    try:
        str_0 = '8sd~{n]3o'
        set_0 = {str_0, str_0}
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
        var_0 = ansible_collection_finder_0.find_module(str_0, set_0)
        str_1 = 'P`7#8RHdyk)o,!V'
        var_1 = ansible_collection_finder_0.find_module(str_1)
        bool_0 = True
        list_0 = []
        int_0 = -1995
        bytes_0 = b'[\xa2\x03['
        var_2 = ansible_collection_finder_0.set_playbook_paths(bytes_0)
        ansible_path_hook_finder_0 = module_0._AnsiblePathHookFinder(list_0, int_0)
        float_0 = 0.5
        var_3 = ansible_path_hook_finder_0.find_module(str_0)
        ansible_collection_ref_0 = module_0.AnsibleCollectionRef(str_1, bool_0, float_0, set_0)
    except BaseException:
        pass

def test_case_15():
    try:
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
        bytes_0 = b'\xa1\xce\xe0J\x04\x1dYC\xde\xc9\xbf\xa3\x8f'
        var_0 = ansible_collection_finder_0.set_playbook_paths(bytes_0)
        tuple_0 = ()
        ansible_collection_pkg_loader_0 = None
        ansible_collection_finder_1 = module_0._AnsibleCollectionFinder(tuple_0, ansible_collection_pkg_loader_0)
        str_0 = '-vCdJ`ax"6\t'
        var_1 = ansible_collection_finder_0.find_module(str_0)
        str_1 = ''
        ansible_collection_root_pkg_loader_0 = module_0._AnsibleCollectionRootPkgLoader(str_1)
    except BaseException:
        pass

def test_case_16():
    try:
        str_0 = '/root/ansible'
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
        str_1 = 'ansible.ansible'
        var_0 = ansible_collection_finder_0.find_module(str_1, str_0)
    except BaseException:
        pass

def test_case_17():
    try:
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
        str_0 = 'Inventory'
        str_1 = '/root/ansible'
        var_0 = ansible_collection_finder_0.find_module(str_0, str_1)
        ansible_collection_finder_1 = module_0._AnsibleCollectionFinder()
        str_2 = 'ansible'
        var_1 = ansible_collection_finder_1.find_module(str_2, str_1)
    except BaseException:
        pass

def test_case_18():
    try:
        str_0 = 'ansible'
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
        var_0 = None
        var_1 = ansible_collection_finder_0.find_module(str_0, var_0)
    except BaseException:
        pass