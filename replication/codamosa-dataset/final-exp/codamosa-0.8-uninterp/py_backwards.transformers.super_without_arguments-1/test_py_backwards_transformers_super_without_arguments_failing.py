# Automatically generated by Pynguin.
import typed_ast._ast3 as module_0
import py_backwards.transformers.super_without_arguments as module_1
import typed_ast.ast3 as module_2

def test_case_0():
    try:
        call_0 = None
        a_s_t_0 = module_0.AST()
        super_without_arguments_transformer_0 = module_1.SuperWithoutArgumentsTransformer(a_s_t_0)
        call_1 = super_without_arguments_transformer_0.visit_Call(call_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'super()'
        var_0 = module_2.parse(str_0)
        super_without_arguments_transformer_0 = module_1.SuperWithoutArgumentsTransformer(var_0)
        var_1 = super_without_arguments_transformer_0.visit(var_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'super(Cls, self)'
        var_0 = module_2.parse(str_0)
        super_without_arguments_transformer_0 = module_1.SuperWithoutArgumentsTransformer(var_0)
        int_0 = 0
        var_1 = var_0.body[int_0]
        var_2 = var_1.value
        call_0 = super_without_arguments_transformer_0.visit_Call(var_2)
        list_0 = [var_0, super_without_arguments_transformer_0, str_0, var_1]
        list_1 = [super_without_arguments_transformer_0, super_without_arguments_transformer_0, list_0]
        a_s_t_0 = module_0.AST(*list_1)
    except BaseException:
        pass