# Automatically generated by Pynguin.
import typesystem.tokenize.tokens as module_0

def test_case_0():
    pass

def test_case_1():
    dict_0 = {}
    int_0 = -2357
    scalar_token_0 = module_0.ScalarToken(dict_0, int_0, int_0)

def test_case_2():
    dict_0 = {}
    list_0 = [dict_0, dict_0, dict_0]
    list_1 = [dict_0, list_0, list_0]
    dict_token_0 = module_0.DictToken(*list_1, **dict_0)
    list_2 = []
    token_0 = dict_token_0.lookup(list_2)
    bool_0 = dict_token_0.__eq__(dict_token_0)

def test_case_3():
    dict_0 = {}
    list_0 = [dict_0, dict_0, dict_0]
    dict_token_0 = module_0.DictToken(*list_0, **dict_0)
    bool_0 = dict_token_0.__eq__(dict_token_0)

def test_case_4():
    bytes_0 = b'\x1a\xa3'
    int_0 = -2813
    int_1 = -810
    scalar_token_0 = module_0.ScalarToken(bytes_0, int_1, int_0)
    any_0 = scalar_token_0.__hash__()
    token_0 = module_0.Token(bytes_0, int_0, int_0)

def test_case_5():
    dict_0 = {}
    list_0 = []
    list_1 = [dict_0, list_0, list_0]
    dict_token_0 = module_0.DictToken(*list_1, **dict_0)

def test_case_6():
    str_0 = 'B!'
    set_0 = {str_0, str_0}
    str_1 = ''
    int_0 = 4
    token_0 = module_0.Token(str_1, int_0, int_0)
    bool_0 = token_0.__eq__(set_0)

def test_case_7():
    int_0 = 1
    int_1 = 2
    scalar_token_0 = module_0.ScalarToken(int_0, int_1, int_1)
    var_0 = scalar_token_0 == scalar_token_0
    scalar_token_1 = module_0.ScalarToken(int_0, int_1, int_0)
    scalar_token_2 = module_0.ScalarToken(int_1, int_1, int_1)

def test_case_8():
    int_0 = 1
    int_1 = 3
    scalar_token_0 = module_0.ScalarToken(int_0, int_1, int_1)
    scalar_token_1 = module_0.ScalarToken(int_0, int_0, int_1)
    var_0 = scalar_token_0 == scalar_token_1
    scalar_token_2 = module_0.ScalarToken(int_0, int_0, int_1)
    var_1 = scalar_token_2 == scalar_token_0

def test_case_9():
    int_0 = 1
    int_1 = 2
    int_2 = 3
    scalar_token_0 = module_0.ScalarToken(int_0, int_1, int_2)
    scalar_token_1 = module_0.ScalarToken(int_0, int_1, int_2)
    var_0 = scalar_token_0 == scalar_token_1
    scalar_token_2 = module_0.ScalarToken(int_0, int_1, int_2)
    int_3 = 4
    scalar_token_3 = module_0.ScalarToken(int_1, int_2, int_3)
    var_1 = scalar_token_2 == scalar_token_3

def test_case_10():
    dict_0 = {}
    int_0 = None
    token_0 = module_0.Token(dict_0, int_0, int_0)
    list_0 = []
    list_1 = [dict_0, list_0, list_0]
    dict_token_0 = module_0.DictToken(*list_1, **dict_0)
    int_1 = 3
    list_token_0 = module_0.ListToken(list_1, int_1, int_1)
    list_2 = []
    token_1 = dict_token_0.lookup(list_2)
    list_token_1 = module_0.ListToken(dict_0, int_1, int_1)
    bool_0 = token_1.__eq__(list_token_1)
    bool_1 = dict_token_0.__eq__(int_1)
    bool_2 = dict_token_0.__eq__(token_1)