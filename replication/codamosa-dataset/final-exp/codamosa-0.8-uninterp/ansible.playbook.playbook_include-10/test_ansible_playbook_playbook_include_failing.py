# Automatically generated by Pynguin.
import ansible.playbook.playbook_include as module_0
import ansible.parsing.yaml.objects as module_1

def test_case_0():
    try:
        dict_0 = {}
        int_0 = -371
        playbook_include_0 = module_0.PlaybookInclude()
        var_0 = playbook_include_0.load(dict_0, int_0)
    except BaseException:
        pass

def test_case_1():
    try:
        playbook_include_0 = module_0.PlaybookInclude()
        ansible_mapping_0 = module_1.AnsibleMapping()
        set_0 = None
        var_0 = playbook_include_0.load_data(ansible_mapping_0, set_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = "pCl\n\\9P#-Pa'Xn"
        dict_0 = {str_0: str_0}
        ansible_mapping_0 = module_1.AnsibleMapping(**dict_0)
        playbook_include_0 = module_0.PlaybookInclude()
        var_0 = playbook_include_0.load(ansible_mapping_0, ansible_mapping_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'\xfd\xec\x88\xff\xbbR\xd1c\x9aw\x0e8\xc4\xc8D\xa2\xfb\x87'
        playbook_include_0 = module_0.PlaybookInclude()
        var_0 = playbook_include_0.preprocess_data(bytes_0)
    except BaseException:
        pass

def test_case_4():
    try:
        playbook_include_0 = module_0.PlaybookInclude()
        playbook_include_1 = module_0.PlaybookInclude()
        str_0 = 'abc.yml'
        int_0 = 1
        var_0 = dict(a=int_0, b=int_0)
        var_1 = dict(import_playbook=str_0, vars=var_0, tags=str_0)
        var_2 = playbook_include_1.load_data(var_1, str_0, var_1, var_1)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'import_playbook'
        str_1 = 'my-playbook.yml'
        str_2 = {str_0: str_1}
        str_3 = {str_0: str_2}
        playbook_include_0 = module_0.PlaybookInclude()
        var_0 = playbook_include_0.preprocess_data(str_3)
    except BaseException:
        pass

def test_case_6():
    try:
        playbook_include_0 = module_0.PlaybookInclude()
        str_0 = 'bb}yms'
        int_0 = -16
        var_0 = dict(a=int_0, b=int_0)
        var_1 = dict(import_playbook=str_0, vars=str_0, tags=str_0)
        var_2 = None
        var_3 = playbook_include_0.load_data(var_1, str_0, var_2, var_2)
    except BaseException:
        pass

def test_case_7():
    try:
        playbook_include_0 = module_0.PlaybookInclude()
        str_0 = 'import_playbook'
        str_1 = "3onseder using 'become', 'Pecome_method', and 'becoBe_user' ralher than running %s"
        str_2 = {str_0: str_1}
        var_0 = playbook_include_0.load(str_2, str_1)
    except BaseException:
        pass

def test_case_8():
    try:
        playbook_include_0 = module_0.PlaybookInclude()
        str_0 = 'import_playbook'
        str_1 = "3onseder using 'become', 'Pecome_method', and 'becoBe_user' ralher than running %s"
        str_2 = {str_0: str_1}
        var_0 = playbook_include_0.load(str_2, str_2)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'import_playbook'
        str_1 = ''
        str_2 = {str_0: str_1}
        playbook_include_0 = module_0.PlaybookInclude()
        playbook_include_1 = module_0.PlaybookInclude()
        var_0 = playbook_include_1.preprocess_data(str_2)
    except BaseException:
        pass