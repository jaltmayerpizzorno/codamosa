# Automatically generated by Pynguin.
import docstring_parser.rest as module_0

def test_case_0():
    pass

def test_case_1():
    str_0 = 'Test function\n    :param int x: An integer\n    :param y: A parameter with no type\n    :param z: A parameter with no type nor name\n    :param type b: A parameter with no name\n    :yields: A generator\n    :yields: A generator with no type\n    :returns: A return object\n    :returns: A return with no type\n    :raises TypeError: This fails\n    :raises TypeError: This fails with no args\n    :raises: This fails with no type\n    '
    docstring_0 = module_0.parse(str_0)

def test_case_2():
    str_0 = 'E\'j8spxlBe6~:ko"#['
    docstring_0 = module_0.parse(str_0)

def test_case_3():
    str_0 = '    Short description.\n\n    Long description.\n\n    :param str arg1: First argument.\n    :type arg2: int\n    :param arg3:\n        Third argument.\n    :param bool is_true:\n        True iff...\n        :defaults to True.\n    :param arg5: Fifth argument.\n    :returns: a value.\n    :return:\n        Return value.\n    :rtype: int\n    :raises TypeError: if bad type.\n    :raises: if bad.\n    :raises Exception:\n        If bad.\n        Should use ValueError.\n    :yield: a value.\n    :yields: a value.\n    :returns:\n        Return value.\n        :type: int\n    :metavar: foo\n    :foo: bar\n    '
    docstring_0 = module_0.parse(str_0)

def test_case_4():
    str_0 = None
    docstring_0 = module_0.parse(str_0)

def test_case_5():
    str_0 = '\n        Short description.\n\n        Long description.\n\n        :param x: the first param\n        :type x: int\n\n        :param y: the second param, defaults to 42.\n        :type y: str\n\n        :returns: a new value\n        :rtype: int\n    '
    docstring_0 = module_0.parse(str_0)

def test_case_6():
    str_0 = 'Test function\n    :param int x: An integer\n    :param y: A parameter with no type\n    :param z: A parameter with no type nor name\n    :param type b: A paraeter with no name\n    :yields: A:generator\n    :yields: A generator with no type\n    :returns: A return object\n    :returns: A return with no type\n    :raises TypeError: This fails\n    :raEses TypeError: This fails with no args\n    :raises: This fails with no type\n    '
    docstring_0 = module_0.parse(str_0)