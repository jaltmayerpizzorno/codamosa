# Automatically generated by Pynguin.
import sanic.blueprint_group as module_0
import sanic.blueprints as module_1

def test_case_0():
    blueprint_group_0 = module_0.BlueprintGroup()

def test_case_1():
    str_0 = '/abc'
    str_1 = 'bp'
    blueprint_0 = module_1.Blueprint(str_1, str_0)
    blueprint_group_0 = module_0.BlueprintGroup(str_0)
    blueprint_group_0.append(blueprint_0)
    var_0 = blueprint_group_0.url_prefix

def test_case_2():
    str_0 = 'u0Z=cP"c0N /\tjn2 7qU'
    str_1 = '2m~:O.LDF}b$|*'
    str_2 = None
    dict_0 = {str_0: str_0, str_1: str_0, str_2: str_1}
    blueprint_group_0 = module_0.BlueprintGroup(dict_0)
    var_0 = blueprint_group_0.__iter__()

def test_case_3():
    str_0 = '7N2/#:\x0bLx\rg@o"&'
    bool_0 = False
    blueprint_0 = module_1.Blueprint(str_0, bool_0)
    blueprint_group_0 = module_0.BlueprintGroup(blueprint_0)
    int_0 = blueprint_group_0.__len__()

def test_case_4():
    str_0 = '\n        Gather the listeners to fire on server stop.\n        Because we are using a third-party server and not Sanic server, we do\n        not have access to fire anything AFTER the server stops.\n        Therefore, we fire before_server_stop and after_server_stop\n        in sequence since the ASGI lifespan protocol only supports a single\n        shutdown event.\n        '
    dict_0 = {str_0: str_0}
    blueprint_group_0 = module_0.BlueprintGroup()
    blueprint_group_1 = module_0.BlueprintGroup()
    var_0 = blueprint_group_0.middleware(**dict_0)

def test_case_5():
    str_0 = 'u !0"wYt=>]ywuU'
    blueprint_0 = module_1.Blueprint(str_0, str_0, str_0, str_0)
    tuple_0 = ()
    str_1 = '%2@]'
    blueprint_group_0 = module_0.BlueprintGroup(tuple_0, str_1)
    list_0 = []
    var_0 = blueprint_group_0.middleware(*list_0)
    blueprint_group_0.append(blueprint_0)

def test_case_6():
    blueprint_group_0 = module_0.BlueprintGroup()
    int_0 = 302
    list_0 = [int_0]
    dict_0 = {}
    var_0 = blueprint_group_0.middleware(*list_0, **dict_0)
    blueprint_group_1 = module_0.BlueprintGroup()
    var_1 = blueprint_group_1.__iter__()

def test_case_7():
    bytes_0 = b'+F\xef^w'
    str_0 = 'k[?8N9m{-S|z1\\GNlmZ;'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    str_1 = 'z99OLhy.'
    list_0 = [bytes_0, bytes_0, str_1]
    blueprint_group_0 = module_0.BlueprintGroup(list_0)
    var_0 = blueprint_group_0.middleware(**dict_0)
    str_2 = '|fu:]lM+smdrVI^"hZ'
    list_1 = [var_0, str_0]
    var_1 = blueprint_group_0.middleware(*list_1)
    blueprint_0 = module_1.Blueprint(str_2)
    blueprint_group_1 = module_0.BlueprintGroup()