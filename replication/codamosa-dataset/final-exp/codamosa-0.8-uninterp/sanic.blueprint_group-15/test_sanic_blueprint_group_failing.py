# Automatically generated by Pynguin.
import sanic.blueprint_group as module_0
import sanic.blueprints as module_1

def test_case_0():
    try:
        bytes_0 = b'c\xd1\x1d\xff\xcek\xef\x1b}\xdf\x02\xcf?4\x9d\x99'
        bytes_1 = b'B\xaf\x859\xb9_'
        blueprint_group_0 = module_0.BlueprintGroup(bytes_0, bytes_1)
        blueprint_group_1 = module_0.BlueprintGroup(blueprint_group_0)
        set_0 = set()
        var_0 = blueprint_group_1.__getitem__(set_0)
    except BaseException:
        pass

def test_case_1():
    try:
        list_0 = None
        int_0 = -1290
        bytes_0 = b'\xf4"\xb0\x97m2\x0f@}\x08'
        blueprint_group_0 = module_0.BlueprintGroup(bytes_0)
        str_0 = 'A^,E'
        blueprint_group_1 = module_0.BlueprintGroup(blueprint_group_0, str_0)
        blueprint_group_1.__setitem__(list_0, int_0)
    except BaseException:
        pass

def test_case_2():
    try:
        int_0 = None
        str_0 = 'A blueprint with the name "%s" is already registered.  Blueprint names must be unique.'
        blueprint_group_0 = module_0.BlueprintGroup(str_0)
        blueprint_group_0.__delitem__(int_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'z0}o\x0b3=W8\\'
        blueprint_0 = module_1.Blueprint(str_0)
        int_0 = -2431
        blueprint_group_0 = module_0.BlueprintGroup(int_0)
        blueprint_group_0.append(blueprint_0)
    except BaseException:
        pass

def test_case_4():
    try:
        blueprint_group_0 = module_0.BlueprintGroup()
        int_0 = 302
        list_0 = [int_0]
        dict_0 = {}
        var_0 = blueprint_group_0.middleware(*list_0, **dict_0)
        blueprint_0 = None
        blueprint_group_0.insert(int_0, blueprint_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'bp1'
        str_1 = '/bp1'
        blueprint_0 = module_1.Blueprint(str_0, str_1)
        str_2 = 'bp2'
        str_3 = '/bp2'
        blueprint_1 = module_1.Blueprint(str_2, str_3)
        blueprint_group_0 = module_0.BlueprintGroup(blueprint_0, blueprint_1)
        int_0 = 0
        var_0 = blueprint_group_0.blueprints[int_0]
    except BaseException:
        pass

def test_case_6():
    try:
        int_0 = 2741
        str_0 = 'dI0\\02VNWkFDydSU.Ig1'
        blueprint_0 = module_1.Blueprint(str_0, str_0)
        str_1 = 'module'
        blueprint_group_0 = module_0.BlueprintGroup(str_1)
        var_0 = blueprint_group_0.__iter__()
        blueprint_group_0.insert(int_0, blueprint_0)
        int_1 = -835
        list_0 = [str_1, int_1, str_0, blueprint_group_0]
        var_1 = blueprint_group_0.middleware(*list_0)
        blueprint_group_1 = module_0.BlueprintGroup()
        int_2 = blueprint_group_1.__len__()
        blueprint_group_1.append(blueprint_0)
        list_1 = [var_1, var_0]
        var_2 = blueprint_group_0.middleware(*list_1)
        int_3 = blueprint_group_1.__len__()
    except BaseException:
        pass