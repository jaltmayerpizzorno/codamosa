# Automatically generated by Pynguin.
import ansible.module_utils.common.json as module_0

def test_case_0():
    try:
        float_0 = -2207.8989
        int_0 = -2180
        set_0 = {int_0, int_0, int_0}
        ansible_j_s_o_n_encoder_0 = module_0.AnsibleJSONEncoder(set_0)
        tuple_0 = (set_0,)
        str_0 = 'Ax'
        str_1 = '~$'
        dict_0 = {str_0: str_0, str_1: float_0}
        var_0 = ansible_j_s_o_n_encoder_0.iterencode(tuple_0, **dict_0)
    except BaseException:
        pass

def test_case_1():
    try:
        ansible_j_s_o_n_encoder_0 = module_0.AnsibleJSONEncoder()
        var_0 = ansible_j_s_o_n_encoder_0.default(ansible_j_s_o_n_encoder_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b'\xeb\x939\xd4\xaen\x106\x99\xcc\x02\xf5\xc3\xf2\x82\xab[>!#'
        list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
        str_0 = "creating host via 'add_host': hostname=%s"
        ansible_j_s_o_n_encoder_0 = module_0.AnsibleJSONEncoder(str_0)
        str_1 = 'wm=='
        str_2 = 'Qmx2'
        bytes_1 = b'\\\x1d\xa4,UWk\x1d'
        str_3 = 'e{Y2i\\p*3[9)C'
        dict_0 = {str_1: str_0, str_2: bytes_1, str_1: list_0, str_3: ansible_j_s_o_n_encoder_0}
        ansible_j_s_o_n_encoder_1 = module_0.AnsibleJSONEncoder()
        str_4 = ''
        dict_1 = {str_4: bytes_0, str_0: str_1, str_2: str_4}
        var_0 = ansible_j_s_o_n_encoder_0.iterencode(dict_1)
        ansible_j_s_o_n_encoder_2 = module_0.AnsibleJSONEncoder()
        var_1 = ansible_j_s_o_n_encoder_1.iterencode(dict_0, **dict_1)
    except BaseException:
        pass