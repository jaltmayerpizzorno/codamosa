# Automatically generated by Pynguin.
import ansible.plugins.action.wait_for_connection as module_0

def test_case_0():
    try:
        set_0 = None
        list_0 = [set_0]
        bool_0 = False
        str_0 = 'x9X;kL@X@%{c'
        float_0 = -1298.6233
        list_1 = None
        dict_0 = {set_0: bool_0, set_0: set_0, set_0: list_0, set_0: list_1}
        timed_out_exception_0 = module_0.TimedOutException()
        float_1 = -704.817
        list_2 = [timed_out_exception_0, float_1, float_1, list_1]
        str_1 = '%Y-%m-%d'
        str_2 = '_3ZKo=D)%\x0b'
        dict_1 = {str_1: list_0, str_2: dict_0}
        str_3 = 'dy'
        action_module_0 = module_0.ActionModule(timed_out_exception_0, dict_0, dict_0, list_2, dict_1, str_3)
        bool_1 = True
        action_module_1 = module_0.ActionModule(dict_0, action_module_0, bool_1, float_1, dict_0, str_3)
        str_4 = 'A'
        str_5 = 'D4 '
        float_2 = 720.56
        str_6 = '}~\\\x0c$jeg kQ:PP!'
        action_module_2 = module_0.ActionModule(action_module_1, str_4, str_5, action_module_1, float_2, str_6)
        var_0 = action_module_2.do_until_success_or_timeout(str_0, bool_0, list_2, list_2, float_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bool_0 = False
        list_0 = [bool_0, bool_0, bool_0, bool_0]
        timed_out_exception_0 = module_0.TimedOutException()
        bool_1 = False
        str_0 = '\\k\\A%'
        bytes_0 = b'\x9b\x16\x18\x89!]o\x9c,a]\xa4\xb5'
        dict_0 = {str_0: list_0, bool_1: bool_0, timed_out_exception_0: bool_1}
        action_module_0 = module_0.ActionModule(list_0, bool_0, bool_1, str_0, bytes_0, dict_0)
        var_0 = action_module_0.run()
    except BaseException:
        pass

def test_case_2():
    try:
        int_0 = 9
        timed_out_exception_0 = module_0.TimedOutException()
        str_0 = 'lr'
        bytes_0 = b'\xf7\\\xfc\x9f\x1d\x9eS~'
        dict_0 = {str_0: str_0, str_0: bytes_0, str_0: int_0}
        str_1 = "%s; %s %s (echo '0  '%s)"
        dict_1 = {str_1: str_1, str_1: str_1}
        int_1 = -193
        bool_0 = True
        action_module_0 = module_0.ActionModule(str_0, dict_1, str_0, int_1, int_1, bool_0)
        str_2 = 'YrYQ9z\nsuOBD[x'
        str_3 = '*g^Fs,$'
        dict_2 = {str_2: action_module_0, str_3: int_1}
        float_0 = -1472.7322414346504
        bool_1 = False
        bool_2 = False
        dict_3 = {action_module_0: int_1, int_1: dict_2}
        list_0 = [int_1, dict_2, dict_3]
        timed_out_exception_1 = module_0.TimedOutException(*list_0)
        list_1 = []
        action_module_1 = module_0.ActionModule(action_module_0, float_0, bool_1, bool_2, timed_out_exception_1, list_1)
        var_0 = action_module_0.do_until_success_or_timeout(int_0, int_0, timed_out_exception_0, dict_0)
    except BaseException:
        pass

def test_case_3():
    try:
        int_0 = 9
        timed_out_exception_0 = module_0.TimedOutException()
        str_0 = 'lr'
        bytes_0 = b'\xf7\\\xfc\x9f\x1d\x9eS~'
        dict_0 = {str_0: str_0, str_0: bytes_0, str_0: int_0}
        str_1 = "%s; %s %s (echo '0  '%s)"
        str_2 = ' */'
        dict_1 = {str_2: str_1, str_2: str_1}
        list_0 = [bytes_0, str_0, str_2, str_0]
        bytes_1 = b'u\x9fN\x85\xe0\xb5\xfd\x81'
        str_3 = "lL'.(HN\\Y"
        float_0 = 522.28
        list_1 = []
        action_module_0 = module_0.ActionModule(str_3, float_0, list_1, dict_0, list_0, int_0)
        bool_0 = None
        int_1 = 13
        action_module_1 = module_0.ActionModule(list_0, bytes_1, action_module_0, bool_0, int_1, dict_1)
        str_4 = 'gnu'
        str_5 = "^K0 v\x0c4/pfT&a8]}'j\t:"
        str_6 = 'gxZA1B'
        action_module_2 = module_0.ActionModule(action_module_1, dict_0, str_4, str_5, list_1, str_6)
        list_2 = [str_2]
        str_7 = '(,Jn(?T'
        bool_1 = True
        list_3 = [str_7]
        action_module_3 = module_0.ActionModule(list_2, list_2, dict_1, str_7, bool_1, list_3)
        var_0 = action_module_3.run(action_module_2, int_1)
    except BaseException:
        pass