# Automatically generated by Pynguin.
import ansible.utils.unsafe_proxy as module_0
import ansible.utils.native_jinja as module_1

def test_case_0():
    ansible_unsafe_text_0 = module_0.AnsibleUnsafeText()

def test_case_1():
    str_0 = '/proc/cpuinfo'
    dict_0 = {str_0: str_0}
    var_0 = module_0.wrap_var(dict_0)

def test_case_2():
    ansible_unsafe_bytes_0 = module_0.AnsibleUnsafeBytes()
    ansible_unsafe_0 = module_0.AnsibleUnsafe()
    list_0 = None
    var_0 = module_0.wrap_var(list_0)

def test_case_3():
    set_0 = set()
    var_0 = module_0.wrap_var(set_0)

def test_case_4():
    native_jinja_unsafe_text_0 = module_0.NativeJinjaUnsafeText()
    str_0 = 'virtualenv_python'
    var_0 = module_0.wrap_var(str_0)

def test_case_5():
    str_0 = '9zO`V<'
    dict_0 = {str_0: str_0}
    var_0 = module_0.wrap_var(dict_0)
    ansible_unsafe_0 = module_0.AnsibleUnsafe()
    var_1 = module_0.wrap_var(ansible_unsafe_0)

def test_case_6():
    str_0 = 'SC5]K{kLP'
    dict_0 = {str_0: str_0, str_0: str_0}
    list_0 = [str_0, str_0, str_0]
    var_0 = module_0.to_unsafe_text(*list_0)
    list_1 = [dict_0]
    var_1 = module_0.to_unsafe_text(*list_1)
    var_2 = module_0.wrap_var(list_1)

def test_case_7():
    str_0 = 'safe'
    var_0 = module_0.wrap_var(str_0)
    str_1 = '__UNSAFE__'
    bool_0 = False
    var_1 = getattr(var_0, str_1, var_0)
    var_2 = None
    var_3 = module_0.wrap_var(var_2)
    var_4 = getattr(var_3, str_1, bool_0)
    var_5 = module_0.wrap_var(var_2)
    var_6 = type(var_5)
    var_7 = type(var_2)
    bytes_0 = b'unsafe'
    var_8 = module_0.wrap_var(bytes_0)
    var_9 = getattr(var_8, str_1, bool_0)
    var_10 = module_0.wrap_var(bytes_0)
    var_11 = type(var_10)
    str_2 = 'unsafe'
    var_12 = module_0.wrap_var(str_2)
    var_13 = getattr(var_12, str_1, bool_0)
    var_14 = module_0.wrap_var(str_2)
    var_15 = type(bytes_0)
    native_jinja_text_0 = module_1.NativeJinjaText()
    var_16 = module_0.wrap_var(native_jinja_text_0)
    var_17 = getattr(var_16, str_1, bool_0)
    native_jinja_text_1 = module_1.NativeJinjaText()
    var_18 = module_0.wrap_var(native_jinja_text_1)
    var_19 = type(var_18)

def test_case_8():
    str_0 = '{"foo": "bar"}'
    var_0 = module_0.wrap_var(str_0)
    var_1 = dict(a=str_0)
    var_2 = module_0.wrap_var(var_1)
    str_1 = [str_0]
    var_3 = module_0.wrap_var(str_1)
    str_2 = (str_0,)
    var_4 = module_0.wrap_var(str_2)
    str_3 = {str_0}
    var_5 = module_0.wrap_var(str_3)
    int_0 = 1
    var_6 = dict(bar=int_0)
    var_7 = dict(foo=var_6)