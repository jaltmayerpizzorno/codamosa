# Automatically generated by Pynguin.
import ssl as module_0
import tornado.tcpclient as module_1
import tornado.simple_httpclient as module_2
import tornado.netutil as module_3
import tornado.httpclient as module_4
import tornado.ioloop as module_5

def test_case_0():
    try:
        simple_async_h_t_t_p_client_0 = None
        h_t_t_p_request_0 = None
        s_s_l_context_0 = module_0.SSLContext()
        callable_0 = None
        int_0 = 2528
        t_c_p_client_0 = module_1.TCPClient()
        int_1 = -949
        h_t_t_p_connection_0 = module_2._HTTPConnection(simple_async_h_t_t_p_client_0, h_t_t_p_request_0, s_s_l_context_0, callable_0, int_0, t_c_p_client_0, int_1, int_0)
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = -116
        str_0 = 'yesterday at %(time)s'
        resolver_0 = module_3.Resolver()
        awaitable_0 = resolver_0.resolve(str_0, int_0)
        str_1 = 'j,_@uhcmG'
        datetime_0 = None
        bool_0 = False
        h_t_t_p_request_0 = module_4.HTTPRequest(str_1, str_1, awaitable_0, str_1, str_1, int_0, datetime_0, bool_0, bool_0, bool_0)
        callable_0 = None
        dict_0 = {}
        i_o_loop_0 = module_5.IOLoop(**dict_0)
        t_c_p_client_0 = None
        simple_async_h_t_t_p_client_0 = module_2.SimpleAsyncHTTPClient()
        list_0 = [bool_0, bool_0]
        int_1 = -3744
        h_t_t_p_connection_0 = module_2._HTTPConnection(simple_async_h_t_t_p_client_0, h_t_t_p_request_0, callable_0, list_0, int_0, t_c_p_client_0, int_1, int_1)
        h_t_t_p_connection_0.finish()
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '}+'
        h_t_t_p_stream_closed_error_0 = module_2.HTTPStreamClosedError(str_0)
        str_1 = h_t_t_p_stream_closed_error_0.__str__()
        str_2 = '66tC\\F`?&K/6g%\x0bs'
        int_0 = -95
        str_3 = 'yesterday at %(time)s'
        h_t_t_p_timeout_error_0 = module_2.HTTPTimeoutError(str_3)
        str_4 = h_t_t_p_timeout_error_0.__str__()
        resolver_0 = module_3.Resolver()
        awaitable_0 = resolver_0.resolve(str_2, int_0)
        str_5 = 'j,_@uhcmG'
        datetime_0 = None
        bool_0 = False
        h_t_t_p_request_0 = module_4.HTTPRequest(str_2, str_2, awaitable_0, str_5, str_5, int_0, datetime_0, bool_0, bool_0, bool_0)
        callable_0 = None
        dict_0 = {}
        i_o_loop_0 = module_5.IOLoop(**dict_0)
        t_c_p_client_0 = None
        h_t_t_p_connection_0 = module_2._HTTPConnection(h_t_t_p_stream_closed_error_0, h_t_t_p_request_0, callable_0, i_o_loop_0, int_0, t_c_p_client_0, int_0, int_0)
        str_6 = h_t_t_p_stream_closed_error_0.__str__()
        str_7 = h_t_t_p_stream_closed_error_0.__str__()
        str_8 = h_t_t_p_stream_closed_error_0.__str__()
        str_9 = h_t_t_p_stream_closed_error_0.__str__()
        str_10 = h_t_t_p_stream_closed_error_0.__str__()
        h_t_t_p_connection_0.on_connection_close()
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '}+'
        h_t_t_p_stream_closed_error_0 = module_2.HTTPStreamClosedError(str_0)
        str_1 = h_t_t_p_stream_closed_error_0.__str__()
        str_2 = '66tC\\F`?&K/6g%\x0bs'
        int_0 = -95
        str_3 = 'yesterday at %(time)s'
        h_t_t_p_timeout_error_0 = module_2.HTTPTimeoutError(str_3)
        str_4 = h_t_t_p_timeout_error_0.__str__()
        resolver_0 = module_3.Resolver()
        awaitable_0 = resolver_0.resolve(str_2, int_0)
        str_5 = 'j,_@uhcmG'
        datetime_0 = None
        bool_0 = True
        bool_1 = False
        h_t_t_p_request_0 = module_4.HTTPRequest(str_2, str_2, awaitable_0, str_5, str_5, int_0, datetime_0, bool_0, bool_0, bool_1)
        callable_0 = None
        dict_0 = {}
        i_o_loop_0 = module_5.IOLoop(**dict_0)
        t_c_p_client_0 = None
        str_6 = h_t_t_p_stream_closed_error_0.__str__()
        simple_async_h_t_t_p_client_0 = module_2.SimpleAsyncHTTPClient()
        simple_async_h_t_t_p_client_0.close()
        str_7 = h_t_t_p_stream_closed_error_0.__str__()
        tuple_0 = (int_0, int_0)
        callable_1 = None
        int_1 = 1138
        h_t_t_p_connection_0 = module_2._HTTPConnection(tuple_0, h_t_t_p_request_0, callable_0, callable_1, int_1, t_c_p_client_0, int_0, int_1)
        simple_async_h_t_t_p_client_1 = module_2.SimpleAsyncHTTPClient(**dict_0)
        h_t_t_p_connection_0.on_connection_close()
        int_2 = -2289
        h_t_t_p_connection_1 = module_2._HTTPConnection(simple_async_h_t_t_p_client_0, h_t_t_p_request_0, callable_0, callable_1, int_2, t_c_p_client_0, int_2, int_2)
        h_t_t_p_connection_1.finish()
    except BaseException:
        pass