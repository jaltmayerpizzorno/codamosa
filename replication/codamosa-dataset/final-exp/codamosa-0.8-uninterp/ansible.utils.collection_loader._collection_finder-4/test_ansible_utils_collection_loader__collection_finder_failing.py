# Automatically generated by Pynguin.
import ansible.utils.collection_loader._collection_finder as module_0
import ansible.utils.collection_loader._collection_config as module_1

def test_case_0():
    try:
        str_0 = '29'
        ansible_collection_loader_0 = module_0._AnsibleCollectionLoader(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
        str_0 = 'Y;IXQ>R7\nP'
        ansible_collection_n_s_pkg_loader_0 = module_0._AnsibleCollectionNSPkgLoader(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '/etc/ssl/certs'
        ansible_collection_pkg_loader_0 = module_0._AnsibleCollectionPkgLoader(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'ansib#le.utils.color'
        ansible_internal_redirect_loader_0 = module_0._AnsibleInternalRedirectLoader(str_0, str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'ansible.utils.color'
        ansible_internal_redirect_loader_0 = module_0._AnsibleInternalRedirectLoader(str_0, str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'namespace.collectionname'
        ansible_collection_ref_0 = module_0.AnsibleCollectionRef(str_0, str_0, str_0, str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        bytes_0 = b"+\xe9\x80\x10'\xdfo\xa9Vft"
        set_0 = {bytes_0, bytes_0}
        complex_0 = None
        list_0 = [bytes_0, set_0]
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder(list_0, set_0)
        var_0 = ansible_collection_finder_0.set_playbook_paths(complex_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'namespace.collection'
        var_0 = None
        str_1 = 'resource'
        str_2 = 'module'
        ansible_collection_ref_0 = module_0.AnsibleCollectionRef(str_0, var_0, str_1, str_2)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = 'namesp=ace.colection'
        ansible_collection_ref_0 = module_0.AnsibleCollectionRef(str_0, str_0, str_0, str_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'ansible_collections.testns.testcoll'
        str_1 = '/tmp'
        str_2 = [str_1]
        ansible_collection_pkg_loader_base_0 = module_0._AnsibleCollectionPkgLoaderBase(str_0, str_2)
        var_0 = ansible_collection_pkg_loader_base_0.__repr__()
        ansible_collection_config_0 = module_1.AnsibleCollectionConfig()
        bool_0 = True
        str_3 = 'Fvf\nCvH-;=\x0c:'
        float_0 = -47.33402
        ansible_collection_ref_0 = module_0.AnsibleCollectionRef(ansible_collection_config_0, bool_0, str_3, float_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = 'ansible_collections'
        ansible_collection_root_pkg_loader_0 = module_0._AnsibleCollectionRootPkgLoader(str_0, str_0)
        str_1 = [str_0]
        ansible_collection_root_pkg_loader_1 = module_0._AnsibleCollectionRootPkgLoader(str_1, str_1)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = '|?jrn6X@/'
        dict_0 = {}
        bool_0 = False
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder(str_0, bool_0)
        var_0 = ansible_collection_finder_0.find_module(str_0, dict_0)
        ansible_collection_pkg_loader_base_0 = module_0._AnsibleCollectionPkgLoaderBase(str_0)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = 'namespace.collection'
        ansible_collection_config_0 = module_1.AnsibleCollectionConfig()
        int_0 = -353
        ansible_path_hook_finder_0 = module_0._AnsiblePathHookFinder(ansible_collection_config_0, int_0)
        var_0 = ansible_path_hook_finder_0.__repr__()
        str_1 = 'resource'
        ansible_collection_ref_0 = module_0.AnsibleCollectionRef(str_0, str_0, str_1, str_1)
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = '|?jrn6X/'
        dict_0 = {}
        str_1 = "Don't wait for import results."
        bool_0 = True
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder(str_1, bool_0)
        list_0 = [str_1, str_1]
        var_0 = ansible_collection_finder_0.set_playbook_paths(list_0)
        var_1 = ansible_collection_finder_0.set_playbook_paths(str_1)
        var_2 = ansible_collection_finder_0.find_module(str_0, dict_0)
        ansible_collection_pkg_loader_0 = module_0._AnsibleCollectionPkgLoader(str_0)
    except BaseException:
        pass

def test_case_14():
    try:
        str_0 = 'ansible_collections.namespace.collection.name'
        ansible_collection_pkg_loader_0 = module_0._AnsibleCollectionPkgLoader(str_0)
    except BaseException:
        pass

def test_case_15():
    try:
        dict_0 = {}
        str_0 = 'ansible.'
        bool_0 = True
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder(str_0, bool_0)
        var_0 = ansible_collection_finder_0.find_module(str_0, dict_0)
    except BaseException:
        pass

def test_case_16():
    try:
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
        str_0 = 'ansible.builtin'
        var_0 = ansible_collection_finder_0.find_module(str_0)
    except BaseException:
        pass

def test_case_17():
    try:
        str_0 = 'ansible_collections'
        ansible_collection_root_pkg_loader_0 = module_0._AnsibleCollectionRootPkgLoader(str_0, str_0)
        str_1 = 'ansible_collections.mycollection'
        str_2 = '/usr/lib/python3.7/site-packages'
        str_3 = [str_2]
        ansible_collection_root_pkg_loader_1 = module_0._AnsibleCollectionRootPkgLoader(str_1, str_3)
    except BaseException:
        pass

def test_case_18():
    try:
        str_0 = 'ansible_collections.testns.testcoll'
        ansible_collection_pkg_loader_base_0 = module_0._AnsibleCollectionPkgLoaderBase(str_0, str_0)
        var_0 = ansible_collection_pkg_loader_base_0.load_module(str_0)
        list_0 = [str_0]
        var_1 = ansible_collection_pkg_loader_base_0.get_data(list_0)
    except BaseException:
        pass

def test_case_19():
    try:
        str_0 = 'ansible_collections.testns.testcoll'
        str_1 = '/tmp'
        ansible_collection_pkg_loader_base_0 = module_0._AnsibleCollectionPkgLoaderBase(str_0, str_1)
        bytes_0 = None
        var_0 = ansible_collection_pkg_loader_base_0.load_module(bytes_0)
    except BaseException:
        pass

def test_case_20():
    try:
        str_0 = 'ansible_collections.testns.testcoll'
        ansible_collection_pkg_loader_base_0 = module_0._AnsibleCollectionPkgLoaderBase(str_0, str_0)
        int_0 = -2102
        dict_0 = None
        ansible_path_hook_finder_0 = module_0._AnsiblePathHookFinder(int_0, dict_0)
        var_0 = ansible_collection_pkg_loader_base_0.iter_modules(ansible_path_hook_finder_0)
        var_1 = ansible_collection_pkg_loader_base_0.get_data(str_0)
    except BaseException:
        pass

def test_case_21():
    try:
        str_0 = 'ansible_collections.testns.testcoll'
        ansible_collection_pkg_loader_base_0 = module_0._AnsibleCollectionPkgLoaderBase(str_0, str_0)
        dict_0 = {}
        var_0 = ansible_collection_pkg_loader_base_0.get_data(dict_0)
    except BaseException:
        pass

def test_case_22():
    try:
        str_0 = 'ansible_collections.testns.testcoll'
        str_1 = '/tmp'
        ansible_collection_pkg_loader_base_0 = module_0._AnsibleCollectionPkgLoaderBase(str_0, str_1)
        var_0 = ansible_collection_pkg_loader_base_0.load_module(str_0)
        bytes_0 = None
        var_1 = ansible_collection_pkg_loader_base_0.load_module(bytes_0)
    except BaseException:
        pass

def test_case_23():
    try:
        str_0 = 'ansible_collections.testns.testcoll'
        ansible_collection_pkg_loader_base_0 = module_0._AnsibleCollectionPkgLoaderBase(str_0, str_0)
        var_0 = ansible_collection_pkg_loader_base_0.load_module(str_0)
        var_1 = ansible_collection_pkg_loader_base_0.__repr__()
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
        set_0 = {ansible_collection_finder_0, str_0, var_0}
        var_2 = ansible_collection_pkg_loader_base_0.is_package(set_0)
    except BaseException:
        pass

def test_case_24():
    try:
        str_0 = 'ansible_collections.testns.testcoll'
        ansible_collection_pkg_loader_base_0 = module_0._AnsibleCollectionPkgLoaderBase(str_0, str_0)
        ansible_collection_root_pkg_loader_0 = None
        var_0 = ansible_collection_pkg_loader_base_0.get_source(ansible_collection_root_pkg_loader_0)
    except BaseException:
        pass

def test_case_25():
    try:
        str_0 = 'ansible_collections.testns.testcoll'
        ansible_collection_pkg_loader_base_0 = module_0._AnsibleCollectionPkgLoaderBase(str_0, str_0)
        var_0 = ansible_collection_pkg_loader_base_0.load_module(str_0)
        var_1 = ansible_collection_pkg_loader_base_0.__repr__()
        str_1 = [str_0]
        ansible_collection_pkg_loader_base_1 = module_0._AnsibleCollectionPkgLoaderBase(str_0, str_1)
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
        ansible_collection_pkg_loader_0 = module_0._AnsibleCollectionPkgLoader(str_0)
    except BaseException:
        pass

def test_case_26():
    try:
        str_0 = 'ansible_collections.testns.testcoll'
        str_1 = '/tmp'
        ansible_collection_pkg_loader_base_0 = module_0._AnsibleCollectionPkgLoaderBase(str_0, str_1)
        var_0 = ansible_collection_pkg_loader_base_0.get_data(str_1)
        ansible_collection_config_0 = module_1.AnsibleCollectionConfig()
        ansible_collection_root_pkg_loader_0 = module_0._AnsibleCollectionRootPkgLoader(ansible_collection_config_0, ansible_collection_pkg_loader_base_0)
    except BaseException:
        pass

def test_case_27():
    try:
        str_0 = ''
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder(str_0)
        ansible_path_hook_finder_0 = module_0._AnsiblePathHookFinder(ansible_collection_finder_0, str_0)
        var_0 = ansible_path_hook_finder_0.find_module(str_0, str_0)
        var_1 = ansible_path_hook_finder_0.iter_modules(str_0)
        ansible_collection_loader_0 = module_0._AnsibleCollectionLoader(ansible_collection_finder_0)
    except BaseException:
        pass