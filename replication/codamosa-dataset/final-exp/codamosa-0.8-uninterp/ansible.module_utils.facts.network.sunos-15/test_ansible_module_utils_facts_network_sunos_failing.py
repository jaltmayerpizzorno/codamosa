# Automatically generated by Pynguin.
import ansible.module_utils.facts.network.sunos as module_0

def test_case_0():
    try:
        dict_0 = {}
        str_0 = 'r;VOrS\n2)\\Q\\%&'
        sun_o_s_network_collector_0 = module_0.SunOSNetworkCollector()
        bool_0 = False
        tuple_0 = (sun_o_s_network_collector_0, bool_0)
        sun_o_s_network_0 = module_0.SunOSNetwork(bool_0)
        var_0 = sun_o_s_network_0.parse_interface_line(str_0, tuple_0, dict_0)
        var_1 = sun_o_s_network_0.get_interfaces_info(sun_o_s_network_collector_0)
    except BaseException:
        pass

def test_case_1():
    try:
        dict_0 = {}
        str_0 = 'r;VOrS\n2o)\\Q\\%&'
        sun_o_s_network_collector_0 = module_0.SunOSNetworkCollector()
        bool_0 = False
        tuple_0 = (sun_o_s_network_collector_0, bool_0)
        sun_o_s_network_0 = module_0.SunOSNetwork(bool_0)
        var_0 = sun_o_s_network_0.parse_interface_line(str_0, tuple_0, dict_0)
        bool_1 = True
        var_1 = sun_o_s_network_0.parse_ether_line(bool_1, sun_o_s_network_0, sun_o_s_network_collector_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'l4X$5RdB:J9(0G9'
        sun_o_s_network_0 = module_0.SunOSNetwork(str_0)
        str_1 = '<IEBt>+i?s'
        list_0 = [str_1, str_1, str_1, str_1, str_1, sun_o_s_network_0, str_1]
        set_0 = set()
        var_0 = sun_o_s_network_0.parse_interface_line(list_0, set_0, str_0)
        sun_o_s_network_collector_0 = module_0.SunOSNetworkCollector()
        sun_o_s_network_collector_1 = module_0.SunOSNetworkCollector(sun_o_s_network_collector_0)
        str_2 = ']<\\g"QBtSE'
        int_0 = 1258
        int_1 = 243
        var_1 = sun_o_s_network_0.parse_ether_line(str_2, int_0, int_1)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'l4X$5RdB:J9(0G9'
        sun_o_s_network_0 = module_0.SunOSNetwork(str_0)
        str_1 = '<IEBt>+i?s'
        list_0 = [str_1, str_1, str_1, str_1]
        set_0 = set()
        var_0 = sun_o_s_network_0.parse_interface_line(list_0, set_0, str_0)
        int_0 = 3804
        complex_0 = None
        sun_o_s_network_1 = module_0.SunOSNetwork(int_0, complex_0)
        str_2 = 'U'
        str_3 = 'yTgwQN|'
        var_1 = sun_o_s_network_1.parse_interface_line(str_2, list_0, str_3)
    except BaseException:
        pass