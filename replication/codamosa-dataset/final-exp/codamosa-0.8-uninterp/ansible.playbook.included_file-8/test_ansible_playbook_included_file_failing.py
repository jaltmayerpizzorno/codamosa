# Automatically generated by Pynguin.
import ansible.playbook.included_file as module_0
import ansible.playbook.task_include as module_1

def test_case_0():
    try:
        float_0 = 1.0
        str_0 = 'Failed to parse shadow file %s'
        list_0 = [str_0]
        float_1 = -199.44
        tuple_0 = ()
        included_file_0 = module_0.IncludedFile(str_0, list_0, float_1, tuple_0)
        dict_0 = {}
        var_0 = included_file_0.add_host(dict_0)
        var_1 = included_file_0.__eq__(float_0)
    except BaseException:
        pass

def test_case_1():
    try:
        float_0 = 1.0
        str_0 = 'Failed to parse shadow file %s'
        list_0 = [str_0]
        float_1 = -199.44
        tuple_0 = ()
        included_file_0 = module_0.IncludedFile(str_0, list_0, float_1, tuple_0)
        var_0 = included_file_0.__eq__(float_0)
    except BaseException:
        pass

def test_case_2():
    try:
        float_0 = None
        tuple_0 = (float_0,)
        tuple_1 = ()
        bool_0 = False
        str_0 = ''
        int_0 = None
        included_file_0 = module_0.IncludedFile(tuple_1, bool_0, str_0, int_0)
        str_1 = '-g9/?!\\Alc{/1*Yu#$u%'
        set_0 = {float_0, str_0}
        str_2 = '[(t=3v41hf8rtH*3+'
        str_3 = ':-r4P!'
        bool_1 = False
        int_1 = 40
        dict_0 = {}
        included_file_1 = module_0.IncludedFile(str_2, str_3, bool_1, int_1, dict_0)
        var_0 = included_file_1.process_include_results(tuple_0, included_file_0, str_1, set_0)
    except BaseException:
        pass

def test_case_3():
    try:
        float_0 = -767.902255
        str_0 = '#Q=g'
        bool_0 = True
        set_0 = set()
        list_0 = [set_0, str_0, float_0]
        str_1 = 'J'
        int_0 = 778
        bytes_0 = b'\x07\x86!'
        int_1 = 90
        str_2 = 'U[f~\x0bT '
        included_file_0 = module_0.IncludedFile(int_1, str_2, bool_0, float_0)
        included_file_1 = module_0.IncludedFile(float_0, bytes_0, float_0, included_file_0)
        var_0 = included_file_1.process_include_results(set_0, list_0, str_1, int_0)
        included_file_2 = module_0.IncludedFile(bytes_0, str_0, str_0, bool_0)
        var_1 = included_file_2.add_host(float_0)
        var_2 = included_file_2.__eq__(bool_0)
    except BaseException:
        pass

def test_case_4():
    try:
        list_0 = None
        str_0 = '\x0cE90'
        int_0 = -219
        bool_0 = True
        str_1 = 'I'
        bytes_0 = b',t'
        tuple_0 = (bool_0, str_1, bytes_0, list_0)
        included_file_0 = module_0.IncludedFile(list_0, str_0, int_0, tuple_0)
        bool_1 = True
        list_1 = []
        str_2 = "W>~g='6"
        str_3 = 'h(\x0b#*S+a~}nO)oC'
        var_0 = included_file_0.add_host(included_file_0)
        dict_0 = {bool_1: str_3}
        included_file_1 = module_0.IncludedFile(list_1, dict_0, dict_0, dict_0)
        included_file_2 = module_0.IncludedFile(bool_1, list_1, str_2, str_3, included_file_1)
        var_1 = included_file_2.__eq__(included_file_0)
        var_2 = included_file_1.add_host(int_0)
        str_4 = 'q-pOWb'
        str_5 = 'U>.'
        var_3 = included_file_1.process_include_results(str_4, bytes_0, str_5, int_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'Failed to parse shadow file %s'
        list_0 = [str_0]
        float_0 = -199.44
        tuple_0 = ()
        included_file_0 = module_0.IncludedFile(str_0, list_0, float_0, tuple_0)
        var_0 = included_file_0.__eq__(included_file_0)
    except BaseException:
        pass

def test_case_6():
    try:
        float_0 = -767.902255
        bytes_0 = b'\x13\x8f\xe8\x00\t@\xc4p'
        str_0 = '\\knr(/t~/Wii'
        bool_0 = False
        set_0 = set()
        list_0 = [set_0, str_0, float_0]
        str_1 = 'J'
        int_0 = 778
        bytes_1 = b'\xf1\x86!'
        int_1 = 90
        str_2 = 'oU"f~\x0bT '
        bool_1 = False
        str_3 = 'IF>c]D$u,p5R.B1kV5o'
        float_1 = None
        tuple_0 = (float_1, float_1)
        tuple_1 = (bytes_0, str_3, tuple_0, bytes_0)
        bool_2 = True
        str_4 = '2b'
        bool_3 = False
        int_2 = 1134
        included_file_0 = module_0.IncludedFile(float_0, bool_3, int_2, set_0)
        str_5 = 'en_US.utf8'
        included_file_1 = module_0.IncludedFile(float_0, str_5, tuple_1, tuple_1)
        var_0 = included_file_1.__eq__(included_file_0)
        tuple_2 = (tuple_1, bool_2, str_4)
        var_1 = included_file_1.add_host(bool_1)
        included_file_2 = module_0.IncludedFile(int_1, str_2, bool_0, float_0)
        var_2 = included_file_2.__repr__()
        included_file_3 = module_0.IncludedFile(float_0, bytes_1, float_0, included_file_2)
        var_3 = included_file_3.process_include_results(set_0, list_0, str_1, int_0)
        str_6 = 'gU}GV8\n"ZucTQ$'
        int_3 = -984
        str_7 = ' jiMd$'
        included_file_4 = module_0.IncludedFile(str_7, float_1, int_0, str_2)
        included_file_5 = module_0.IncludedFile(int_3, tuple_2, included_file_4, included_file_4, tuple_2)
        included_file_6 = module_0.IncludedFile(included_file_2, str_6, str_2, included_file_5, set_0)
        var_4 = included_file_6.__repr__()
        included_file_7 = module_0.IncludedFile(bytes_0, str_4, str_0, bool_0)
        var_5 = included_file_7.add_host(float_0)
        var_6 = included_file_7.add_host(float_0)
    except BaseException:
        pass

def test_case_7():
    try:
        task_include_0 = module_1.TaskInclude()
        task_include_1 = module_1.TaskInclude()
        str_0 = 'my_file'
        str_1 = 'a'
        str_2 = {str_1: str_1}
        str_3 = 'b'
        str_4 = {str_3: str_3}
        included_file_0 = module_0.IncludedFile(str_0, str_2, str_4, task_include_0)
        var_0 = included_file_0.__eq__(included_file_0)
    except BaseException:
        pass