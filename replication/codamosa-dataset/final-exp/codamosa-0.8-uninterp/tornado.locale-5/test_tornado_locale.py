# Automatically generated by Pynguin.
import tornado.locale as module_0
import gettext as module_1

def test_case_0():
    pass

def test_case_1():
    str_0 = 'Unsupported auth_mode %s'
    locale_0 = module_0.get()
    str_1 = locale_0.list(str_0)

def test_case_2():
    str_0 = '{YC\n\\Qb9\n\x0c/19Q'
    module_0.set_default_locale(str_0)

def test_case_3():
    int_0 = 3285
    locale_0 = module_0.get()
    str_0 = locale_0.friendly_number(int_0)
    iterable_0 = module_0.get_supported_locales()

def test_case_4():
    int_0 = 3
    locale_0 = module_0.get()
    str_0 = locale_0.format_date(int_0)

def test_case_5():
    str_0 = '/y=G<.c#hbDG7'
    null_translations_0 = module_1.NullTranslations(str_0)
    gettext_locale_0 = module_0.GettextLocale(str_0, null_translations_0)

def test_case_6():
    int_0 = 3
    locale_0 = module_0.get()
    str_0 = locale_0.format_date(int_0)

def test_case_7():
    str_0 = '<1X)Jp'
    int_0 = 405
    null_translations_0 = module_1.NullTranslations()
    gettext_locale_0 = module_0.GettextLocale(str_0, null_translations_0)
    str_1 = gettext_locale_0.pgettext(str_0, str_0, str_0, int_0)
    list_0 = [str_0]
    locale_0 = module_0.get()
    locale_1 = module_0.get()
    str_2 = locale_1.list(list_0)

def test_case_8():
    str_0 = '\n:N\t'
    module_0.set_default_locale(str_0)
    str_1 = '1{!vT\\9/7<'
    str_2 = 'f<"#\nh'
    str_3 = '%s %s (%s)'
    str_4 = "P'w<ux6W|V"
    str_5 = '\rrDfw}|,|-'
    str_6 = '! yf'
    dict_0 = {str_4: str_0, str_0: str_3, str_3: str_5, str_3: str_6}
    dict_1 = {str_4: dict_0, str_5: dict_0}
    c_s_v_locale_0 = module_0.CSVLocale(str_3, dict_1)
    str_7 = c_s_v_locale_0.pgettext(str_1, str_2)

def test_case_9():
    str_0 = '<1X)Jp'
    int_0 = 405
    null_translations_0 = module_1.NullTranslations()
    gettext_locale_0 = module_0.GettextLocale(str_0, null_translations_0)
    str_1 = gettext_locale_0.pgettext(str_0, str_0, str_0, int_0)
    locale_0 = module_0.get()
    locale_1 = module_0.get()

def test_case_10():
    str_0 = '1,?Q8ZVe}u'
    null_translations_0 = module_1.NullTranslations()
    gettext_locale_0 = module_0.GettextLocale(str_0, null_translations_0)
    str_1 = gettext_locale_0.pgettext(str_0, str_0)

def test_case_11():
    int_0 = 2094
    bool_0 = False
    list_0 = []
    locale_0 = module_0.get(*list_0)
    str_0 = locale_0.format_date(int_0, int_0, bool_0)

def test_case_12():
    str_0 = '<1X)Jp'
    null_translations_0 = module_1.NullTranslations()
    gettext_locale_0 = module_0.GettextLocale(str_0, null_translations_0)
    list_0 = []
    locale_0 = module_0.get()
    str_1 = locale_0.list(list_0)

def test_case_13():
    int_0 = 3285
    locale_0 = module_0.get()
    str_0 = locale_0.friendly_number(int_0)

def test_case_14():
    str_0 = '|qAt7 #^}SNfaN'
    str_1 = 'Calls the given callback on the next I/O loop iteration.\n\n        Safe for use from a Python signal handler; should not be used\n        otherwise.\n        '
    str_2 = '3'
    locale_0 = module_0.get()
    str_3 = locale_0.pgettext(str_1, str_0)
    module_0.set_default_locale(str_0)
    str_4 = '\x0bCip:YK@Og>vX'
    float_0 = 3573.890564
    bool_0 = False
    str_5 = locale_0.format_date(float_0, bool_0, bool_0)
    str_6 = 'Cannot render() after finish()'
    list_0 = [str_2, str_6, str_0, str_4]
    locale_1 = module_0.get(*list_0)
    int_0 = 493
    str_7 = locale_1.friendly_number(int_0)

def test_case_15():
    int_0 = 845
    bool_0 = True
    locale_0 = module_0.get()
    str_0 = locale_0.format_date(int_0, int_0, bool_0)
    null_translations_0 = module_1.NullTranslations()
    var_0 = null_translations_0.charset()
    var_1 = null_translations_0.info()
    var_2 = null_translations_0.output_charset()
    str_1 = locale_0.translate(str_0, str_0, int_0)

def test_case_16():
    str_0 = ",\n V5'`@zW%[_"
    int_0 = 0
    dict_0 = {}
    dict_1 = None
    dict_2 = {str_0: dict_0, str_0: dict_1}
    c_s_v_locale_0 = module_0.CSVLocale(str_0, dict_2)
    bool_0 = False
    locale_0 = module_0.get()
    str_1 = locale_0.format_date(int_0, bool_0)
    null_translations_0 = module_1.NullTranslations()
    str_2 = locale_0.friendly_number(int_0)
    str_3 = '_no_context_takeover'
    null_translations_1 = module_1.NullTranslations()
    gettext_locale_0 = module_0.GettextLocale(str_3, null_translations_1)
    float_0 = None
    var_0 = null_translations_0.add_fallback(float_0)
    str_4 = gettext_locale_0.translate(str_0)
    bytes_0 = b"G\xe9i\x04\xf8\x040'\x85=\xfaC\x86_Xe\xa6"
    null_translations_2 = module_1.NullTranslations(bytes_0)
    null_translations_3 = module_1.NullTranslations()
    null_translations_4 = module_1.NullTranslations()
    var_1 = null_translations_0.info()
    list_0 = [str_3, str_4, str_1]
    locale_1 = module_0.get(*list_0)
    str_5 = locale_1.list(list_0)

def test_case_17():
    str_0 = ",\n V5'`@zW%[_"
    int_0 = 795
    int_1 = 1
    dict_0 = {}
    dict_1 = None
    dict_2 = {str_0: dict_0, str_0: dict_1}
    c_s_v_locale_0 = module_0.CSVLocale(str_0, dict_2)
    bool_0 = False
    locale_0 = module_0.get()
    str_1 = locale_0.format_date(int_0, bool_0)
    null_translations_0 = module_1.NullTranslations()
    str_2 = '_no_context_takeover'
    null_translations_1 = module_1.NullTranslations()
    gettext_locale_0 = module_0.GettextLocale(str_2, null_translations_1)
    str_3 = gettext_locale_0.pgettext(str_2, str_2)
    float_0 = None
    var_0 = null_translations_0.add_fallback(float_0)
    str_4 = gettext_locale_0.translate(str_0)
    bytes_0 = b"G\xe9i\x04\xf8\x040'\x85=\xfaC\x86_Xe\xa6"
    str_5 = c_s_v_locale_0.translate(str_4, str_0, int_1)
    null_translations_2 = module_1.NullTranslations(bytes_0)
    null_translations_3 = module_1.NullTranslations()
    null_translations_4 = module_1.NullTranslations()
    var_1 = null_translations_0.info()
    iterable_0 = module_0.get_supported_locales()
    str_6 = locale_0.list(str_3)
    str_7 = locale_0.friendly_number(int_1)