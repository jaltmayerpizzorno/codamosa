# Automatically generated by Pynguin.
import ansible.cli.doc as module_0
import ansible.utils.display as module_1

def test_case_0():
    try:
        list_0 = []
        role_mixin_0 = module_0.RoleMixin(*list_0)
        var_0 = module_0.jdump(role_mixin_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'Rq57\rmR\ttD'
        doc_c_l_i_0 = module_0.DocCLI(str_0)
        role_mixin_0 = module_0.RoleMixin()
        var_0 = doc_c_l_i_0.display_plugin_list(role_mixin_0)
    except BaseException:
        pass

def test_case_2():
    try:
        dict_0 = {}
        bytes_0 = b'u\xc3\x87\x97eC@\xc0\xbdW(\xdc\xe3+\xce'
        doc_c_l_i_0 = module_0.DocCLI(bytes_0)
        var_0 = doc_c_l_i_0.add_fields(bytes_0, dict_0, dict_0, dict_0)
        bytes_1 = b' '
        doc_c_l_i_1 = module_0.DocCLI(bytes_1)
        role_mixin_0 = module_0.RoleMixin()
        list_0 = None
        var_1 = doc_c_l_i_0.get_all_plugins_of_type(list_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '_7y\rl4Rey+>H'
        set_0 = {str_0, str_0}
        bool_0 = True
        doc_c_l_i_0 = module_0.DocCLI(bool_0)
        var_0 = doc_c_l_i_0.get_plugin_metadata(str_0, set_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'Rq5`7\rmR\tt1'
        doc_c_l_i_0 = module_0.DocCLI(str_0)
        bytes_0 = b':\x0fj\xeap\xbb\x8b\xdcA'
        display_0 = module_1.Display()
        var_0 = doc_c_l_i_0.namespace_from_plugin_filepath(bytes_0, display_0, str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        plugin_not_found_0 = module_0.PluginNotFound()
        list_0 = []
        role_mixin_0 = module_0.RoleMixin(*list_0)
        str_0 = 'Ut4j1r'
        doc_c_l_i_0 = module_0.DocCLI(str_0)
        var_0 = doc_c_l_i_0.format_snippet(plugin_not_found_0, plugin_not_found_0, role_mixin_0)
    except BaseException:
        pass

def test_case_6():
    try:
        role_mixin_0 = module_0.RoleMixin()
        str_0 = '^ansible_%s_'
        doc_c_l_i_0 = module_0.DocCLI(str_0)
        doc_c_l_i_1 = module_0.DocCLI(doc_c_l_i_0)
        str_1 = '2~RlA|o['
        list_0 = [str_1, str_0]
        bool_0 = True
        int_0 = 27
        doc_c_l_i_2 = module_0.DocCLI(int_0)
        var_0 = doc_c_l_i_2.format_plugin_doc(role_mixin_0, doc_c_l_i_1, str_1, list_0, bool_0, list_0)
    except BaseException:
        pass

def test_case_7():
    try:
        bytes_0 = b'\xd2p\x00\xe6\xaa\xed`'
        doc_c_l_i_0 = module_0.DocCLI(bytes_0)
        str_0 = '37$\x0c6'
        dict_0 = {doc_c_l_i_0: str_0, doc_c_l_i_0: bytes_0, str_0: str_0}
        var_0 = doc_c_l_i_0.get_role_man_text(str_0, dict_0)
    except BaseException:
        pass

def test_case_8():
    try:
        role_mixin_0 = module_0.RoleMixin()
        str_0 = 'd'
        set_0 = {role_mixin_0}
        bytes_0 = b'\x8d\xcf\x9b\xeb\xd5\xe8+\xe5~\x8dGq\x8dS\x07\xf7\xdb;'
        int_0 = -2630
        str_1 = '$ihG4h)r|w0'
        doc_c_l_i_0 = module_0.DocCLI(str_1)
        doc_c_l_i_1 = module_0.DocCLI(doc_c_l_i_0)
        var_0 = doc_c_l_i_1.format_snippet(bytes_0, int_0, set_0)
        doc_c_l_i_2 = module_0.DocCLI(set_0)
        var_1 = doc_c_l_i_2.get_man_text(str_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = ''
        int_0 = 138
        list_0 = [int_0]
        doc_c_l_i_0 = module_0.DocCLI(list_0)
        var_0 = doc_c_l_i_0.get_man_text(str_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = ''
        dict_0 = {str_0: str_0}
        bytes_0 = b'u\xc3\x87\x97e\xfcC@\xc0\xbdW(\xdc\xe3+\xce'
        doc_c_l_i_0 = module_0.DocCLI(bytes_0)
        var_0 = doc_c_l_i_0.add_fields(bytes_0, dict_0, dict_0, dict_0)
    except BaseException:
        pass

def test_case_11():
    try:
        float_0 = -741.0
        doc_c_l_i_0 = module_0.DocCLI(float_0)
        dict_0 = {float_0: doc_c_l_i_0, doc_c_l_i_0: doc_c_l_i_0}
        plugin_not_found_0 = module_0.PluginNotFound()
        role_mixin_0 = module_0.RoleMixin()
        str_0 = '\ru#'
        dict_1 = {str_0: str_0, str_0: dict_0, str_0: str_0, str_0: plugin_not_found_0}
        bool_0 = True
        var_0 = doc_c_l_i_0.get_man_text(dict_1, bool_0)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = 'module'
        str_1 = None
        dict_0 = {str_0: str_0, str_0: str_0, str_1: str_1, str_0: str_0}
        bytes_0 = b'\xd2(\x9e\xe7\xf0x\x1c\x80\xe08\x07\xde\x00\x8dV\x10'
        doc_c_l_i_0 = module_0.DocCLI(bytes_0)
        var_0 = doc_c_l_i_0.get_man_text(dict_0)
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = 'inventory'
        role_mixin_0 = None
        str_1 = 'inventory'
        list_0 = [str_0, role_mixin_0, str_1]
        str_2 = '.za#'
        doc_c_l_i_0 = module_0.DocCLI(str_2)
        var_0 = doc_c_l_i_0.get_plugin_metadata(str_1, list_0)
    except BaseException:
        pass

def test_case_14():
    try:
        str_0 = 'pI\nyqkP*qpr['
        display_0 = module_1.Display()
        role_mixin_0 = module_0.RoleMixin()
        bool_0 = False
        str_1 = 'z\n=KJhp@vGTs'
        tuple_0 = (role_mixin_0, bool_0, str_1)
        doc_c_l_i_0 = module_0.DocCLI(tuple_0)
        display_1 = module_1.Display()
        tuple_1 = (doc_c_l_i_0, display_1)
        doc_c_l_i_1 = module_0.DocCLI(tuple_1)
        var_0 = doc_c_l_i_1.namespace_from_plugin_filepath(str_0, display_0, str_0)
    except BaseException:
        pass

def test_case_15():
    try:
        str_0 = ''
        str_1 = 'd?W<VQtCh`%}[fG.6'
        bool_0 = True
        list_0 = []
        bool_1 = True
        dict_0 = {bool_1: bool_1, bool_1: bool_1, bool_1: bool_1, bool_1: bool_1}
        doc_c_l_i_0 = module_0.DocCLI(dict_0)
        var_0 = doc_c_l_i_0.find_plugins(str_0, str_1, bool_0, list_0)
        str_2 = ''
        display_0 = module_1.Display()
        list_1 = [str_2, str_2, display_0]
        plugin_not_found_0 = module_0.PluginNotFound(*list_1)
        display_1 = module_1.Display()
        doc_c_l_i_1 = module_0.DocCLI(display_1)
        var_1 = doc_c_l_i_0.format_snippet(display_0, plugin_not_found_0, list_1)
        dict_1 = {str_0: doc_c_l_i_0, str_0: bool_1, str_2: str_2}
        list_2 = [dict_1, str_2]
        var_2 = module_0.add_collection_plugins(list_2, dict_1)
        role_mixin_0 = module_0.RoleMixin()
        var_3 = doc_c_l_i_0.add_fields(list_1, dict_1, list_1, role_mixin_0, plugin_not_found_0)
    except BaseException:
        pass