# Automatically generated by Pynguin.
import ansible.plugins.lookup.first_found as module_0

def test_case_0():
    try:
        list_0 = []
        list_1 = [list_0, list_0, list_0, list_0]
        float_0 = 0.1
        dict_0 = {}
        lookup_module_0 = module_0.LookupModule(list_0)
        var_0 = lookup_module_0.run(list_1, float_0, **dict_0)
    except BaseException:
        pass

def test_case_1():
    try:
        dict_0 = {}
        str_0 = 'Yp<!?*cvaE'
        lookup_module_0 = module_0.LookupModule(str_0)
        var_0 = lookup_module_0.run(dict_0, str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bool_0 = True
        bytes_0 = b''
        list_0 = [bool_0, bool_0, bytes_0]
        str_0 = '<}?d,(]\r4[<r2pJ}%'
        str_1 = "N53gQfOe'tOuFW9\x0bGZ"
        dict_0 = {str_1: bytes_0, str_1: str_0}
        lookup_module_0 = module_0.LookupModule()
        var_0 = lookup_module_0.run(list_0, str_0, **dict_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = ':!1[a5w_'
        bool_0 = False
        dict_0 = {str_0: bool_0, str_0: str_0, str_0: bool_0, str_0: str_0}
        list_0 = [dict_0, dict_0, str_0, bool_0]
        tuple_0 = (list_0,)
        lookup_module_0 = module_0.LookupModule(str_0)
        lookup_module_1 = module_0.LookupModule(tuple_0, lookup_module_0, **dict_0)
        var_0 = lookup_module_0.run(tuple_0, tuple_0, **dict_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = '    tasks:\n'
        float_0 = 82.62
        lookup_module_0 = module_0.LookupModule(str_0, float_0)
        str_1 = '['
        str_2 = 'A mixin containing all methods relevant to role argument specification functionality.\n\n    Note: The methods for actual display of role data are not present here.\n    '
        dict_0 = {str_1: lookup_module_0, str_1: str_0, str_0: float_0, str_2: str_2}
        bytes_0 = b'wH\x9f\x98o\xc9\xda\xb5^XS\xa9\xc0\x81\x92\x0e\xb2'
        var_0 = lookup_module_0.run(dict_0, bytes_0)
    except BaseException:
        pass