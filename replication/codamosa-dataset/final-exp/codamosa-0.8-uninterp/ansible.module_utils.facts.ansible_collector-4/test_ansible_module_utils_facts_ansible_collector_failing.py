# Automatically generated by Pynguin.
import ansible.module_utils.facts.ansible_collector as module_0
import ansible.module_utils.facts.collector as module_1

def test_case_0():
    try:
        dict_0 = None
        var_0 = module_0.get_ansible_collector(dict_0)
        bytes_0 = b'\xb2\xb4\x92\xc3Z\x1a'
        str_0 = 'L,O11Q9&\x0cs'
        tuple_0 = None
        set_0 = {var_0, dict_0, str_0}
        list_0 = [bytes_0, var_0, tuple_0, str_0]
        ansible_fact_collector_0 = module_0.AnsibleFactCollector(list_0, str_0, set_0)
        var_1 = ansible_fact_collector_0.collect(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '\x0cu[nV$\x0b'
        var_0 = module_0.get_ansible_collector(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        dict_0 = None
        var_0 = module_0.get_ansible_collector(dict_0)
        bytes_0 = b'\xb2\xb4\x92\xc3Z\x1a'
        str_0 = 'L,O11Q9&\x0cs'
        tuple_0 = None
        set_0 = {var_0, dict_0, str_0}
        list_0 = [bytes_0, var_0, tuple_0, str_0]
        ansible_fact_collector_0 = module_0.AnsibleFactCollector(list_0, str_0, set_0)
        var_1 = ansible_fact_collector_0.collect(dict_0, set_0)
    except BaseException:
        pass

def test_case_3():
    try:
        int_0 = 64
        tuple_0 = (int_0,)
        float_0 = 3436.092
        ansible_fact_collector_0 = module_0.AnsibleFactCollector(tuple_0, int_0, float_0)
        ansible_fact_collector_1 = module_0.AnsibleFactCollector(tuple_0)
        str_0 = "CuPG\nR6zU\\'"
        ansible_fact_collector_2 = module_0.AnsibleFactCollector(str_0)
        ansible_fact_collector_3 = module_0.AnsibleFactCollector()
        set_0 = {int_0, int_0, ansible_fact_collector_0}
        str_1 = '-U"vH6ZqYJ=_'
        collector_meta_data_collector_0 = module_0.CollectorMetaDataCollector(str_1)
        str_2 = 'suk*@!R?~X'
        list_0 = [set_0, str_0, str_2]
        var_0 = collector_meta_data_collector_0.collect(list_0, tuple_0)
        str_3 = '=MxPug'
        tuple_1 = ()
        float_1 = 0.0
        dict_0 = {ansible_fact_collector_3: tuple_1, ansible_fact_collector_0: ansible_fact_collector_3, float_1: collector_meta_data_collector_0, str_1: int_0}
        tuple_2 = (dict_0,)
        var_1 = ansible_fact_collector_1.collect()
        var_2 = module_0.get_ansible_collector(set_0, set_0, collector_meta_data_collector_0, str_3, tuple_2)
    except BaseException:
        pass

def test_case_4():
    try:
        dict_0 = None
        var_0 = module_0.get_ansible_collector(dict_0)
        bytes_0 = b'\xb2\xb4\x92\xc3Z\x1a'
        int_0 = None
        str_0 = 'L,O11Q9&\x0cs'
        tuple_0 = None
        tuple_1 = (int_0, str_0, tuple_0)
        ansible_fact_collector_0 = module_0.AnsibleFactCollector(bytes_0, tuple_1)
        var_1 = ansible_fact_collector_0.collect()
        set_0 = {var_0, dict_0}
        collector_meta_data_collector_0 = module_0.CollectorMetaDataCollector(set_0)
        ansible_fact_collector_1 = module_0.AnsibleFactCollector(set_0)
        var_2 = collector_meta_data_collector_0.collect()
        var_3 = collector_meta_data_collector_0.collect(ansible_fact_collector_1)
        bool_0 = False
        collector_meta_data_collector_1 = module_0.CollectorMetaDataCollector(bool_0)
        var_4 = collector_meta_data_collector_1.collect(collector_meta_data_collector_0)
        list_0 = [collector_meta_data_collector_1, ansible_fact_collector_1]
        collector_meta_data_collector_2 = module_0.CollectorMetaDataCollector(set_0, list_0)
        str_1 = '&Z] E7$/ht\tz0uYRfz\n'
        var_5 = module_0.get_ansible_collector(list_0, str_1, collector_meta_data_collector_0, tuple_0)
    except BaseException:
        pass

def test_case_5():
    try:
        dict_0 = {}
        ansible_fact_collector_0 = module_0.AnsibleFactCollector()
        var_0 = ansible_fact_collector_0.collect()
        str_0 = None
        var_1 = ansible_fact_collector_0.collect(str_0)
        ansible_fact_collector_1 = None
        ansible_fact_collector_2 = module_0.AnsibleFactCollector(ansible_fact_collector_1)
        set_0 = {ansible_fact_collector_1}
        collector_meta_data_collector_0 = module_0.CollectorMetaDataCollector(dict_0, ansible_fact_collector_2, set_0)
        float_0 = 3436.092
        str_1 = 'processor_count'
        str_2 = 'lZ_'
        str_3 = '*'
        ansible_fact_collector_3 = module_0.AnsibleFactCollector(str_1, str_2, str_3)
        collector_meta_data_collector_1 = module_0.CollectorMetaDataCollector(float_0, str_1)
        list_0 = []
        var_2 = ansible_fact_collector_3.collect()
        ansible_fact_collector_4 = module_0.AnsibleFactCollector()
        complex_0 = None
        tuple_0 = (set_0, complex_0)
        var_3 = ansible_fact_collector_4.collect()
        var_4 = ansible_fact_collector_0.collect(tuple_0)
        ansible_fact_collector_5 = module_0.AnsibleFactCollector(list_0)
        ansible_fact_collector_6 = module_0.AnsibleFactCollector(list_0)
        int_0 = 10240
        tuple_1 = ()
        bool_0 = True
        var_5 = collector_meta_data_collector_1.collect(tuple_1, bool_0)
        var_6 = ansible_fact_collector_1.collect(int_0)
    except BaseException:
        pass

def test_case_6():
    try:
        float_0 = 3284.76586
        tuple_0 = ()
        bool_0 = True
        collector_meta_data_collector_0 = module_0.CollectorMetaDataCollector(bool_0)
        str_0 = '8A$deo\\pX-\nZ0p;B'
        float_1 = 753.643025
        base_fact_collector_0 = module_1.BaseFactCollector()
        var_0 = module_0.get_ansible_collector(float_0, tuple_0, collector_meta_data_collector_0, str_0, float_1, base_fact_collector_0)
    except BaseException:
        pass