# Automatically generated by Pynguin.
import ansible.plugins.inventory.generator as module_0

def test_case_0():
    try:
        inventory_module_0 = module_0.InventoryModule()
        float_0 = None
        bytes_0 = b'\x1e8\x06_'
        var_0 = inventory_module_0.template(float_0, bytes_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bool_0 = None
        bytes_0 = b'\x82\x10\xb6\x0c\xab\xb6'
        list_0 = [bytes_0, bool_0, bool_0, bytes_0]
        inventory_module_0 = module_0.InventoryModule()
        var_0 = inventory_module_0.add_parents(bool_0, bytes_0, list_0, bool_0)
    except BaseException:
        pass

def test_case_2():
    try:
        tuple_0 = ()
        list_0 = [tuple_0, tuple_0, tuple_0, tuple_0]
        float_0 = None
        inventory_module_0 = module_0.InventoryModule()
        var_0 = inventory_module_0.verify_file(float_0)
        bool_0 = True
        inventory_module_1 = module_0.InventoryModule()
        set_0 = None
        inventory_module_2 = module_0.InventoryModule()
        inventory_module_3 = module_0.InventoryModule()
        var_1 = inventory_module_2.parse(list_0, bool_0, set_0, bool_0)
    except BaseException:
        pass

def test_case_3():
    try:
        dict_0 = None
        bool_0 = False
        set_0 = {dict_0, dict_0, dict_0, dict_0}
        str_0 = "Zo/iY\tZ?$'?R3^}F|2H!"
        int_0 = -1939
        tuple_0 = (str_0, int_0)
        inventory_module_0 = module_0.InventoryModule()
        var_0 = inventory_module_0.verify_file(tuple_0)
        inventory_module_1 = module_0.InventoryModule()
        var_1 = inventory_module_1.parse(dict_0, bool_0, set_0)
    except BaseException:
        pass

def test_case_4():
    try:
        inventory_module_0 = module_0.InventoryModule()
        var_0 = {}
        var_1 = {}
        str_0 = 'name'
        str_1 = 'parents'
        str_2 = 'vars'
        str_3 = 'c_1_2'
        str_4 = 'c_1'
        str_5 = {str_0: str_4}
        str_6 = 'c_2'
        str_7 = {str_0: str_6}
        str_8 = [str_5, str_7]
        str_9 = "'z"
        str_10 = '0'
        str_11 = {str_9: str_10}
        str_12 = {str_0: str_3, str_1: str_8, str_2: str_11}
        str_13 = [str_12]
        var_2 = inventory_module_0.add_parents(var_0, var_1, str_13, var_0)
    except BaseException:
        pass