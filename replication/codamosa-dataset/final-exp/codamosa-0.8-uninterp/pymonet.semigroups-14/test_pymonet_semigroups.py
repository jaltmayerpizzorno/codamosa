# Automatically generated by Pynguin.
import pymonet.semigroups as module_0

def test_case_0():
    pass

def test_case_1():
    str_0 = ' Sg:.;j\nVM1$eysl+~&x'
    one_0 = module_0.One(str_0)

def test_case_2():
    float_0 = 10.0
    min_0 = module_0.Min(float_0)
    float_1 = 20.0
    min_1 = module_0.Min(float_1)
    var_0 = min_0.concat(min_1)
    min_2 = module_0.Min(float_0)
    var_1 = var_0 == min_2

def test_case_3():
    str_0 = 'foo'
    int_0 = 1
    sum_0 = module_0.Sum(int_0)
    sum_1 = {str_0: sum_0}
    map_0 = module_0.Map(sum_1)
    sum_2 = module_0.Sum(int_0)
    sum_3 = {str_0: sum_2}
    map_1 = module_0.Map(sum_3)
    int_1 = 3
    sum_4 = module_0.Sum(int_1)
    sum_5 = {str_0: sum_4}
    map_2 = module_0.Map(sum_5)
    var_0 = map_0.concat(map_1)
    int_2 = 6
    sum_6 = module_0.Sum(int_2)

def test_case_4():
    bool_0 = False
    map_0 = module_0.Map(bool_0)
    bool_1 = True
    all_0 = module_0.All(bool_1)
    bytes_0 = b'r\x9e\xc8\x92\xaaF\xf8<\xb2uk8\xb9Z\xab\xaap'
    all_1 = module_0.All(bytes_0)
    all_2 = all_1.concat(all_0)
    int_0 = -454
    all_3 = module_0.All(int_0)
    all_4 = all_3.concat(all_2)

def test_case_5():
    semigroup_0 = None
    list_0 = [semigroup_0, semigroup_0, semigroup_0]
    one_0 = module_0.One(list_0)
    one_1 = module_0.One(one_0)
    str_0 = one_1.__str__()
    last_0 = module_0.Last(semigroup_0)
    first_0 = module_0.First(last_0)
    int_0 = 2530
    var_0 = first_0.concat(int_0)
    sum_0 = module_0.Sum(first_0)
    str_1 = first_0.__str__()
    str_2 = first_0.__str__()

def test_case_6():
    bytes_0 = b'!\n\x85\x14\xac\xd1\xa8O\xb3\xa8\x8a\xc5Z\x89}k0;b'
    str_0 = "5\x0chj@*J'K`"
    one_0 = module_0.One(str_0)
    semigroup_0 = module_0.Semigroup(one_0)
    semigroup_1 = module_0.Semigroup(semigroup_0)
    first_0 = module_0.First(semigroup_1)
    str_1 = first_0.__str__()
    sum_0 = module_0.Sum(bytes_0)
    min_0 = module_0.Min(sum_0)
    one_1 = module_0.One(sum_0)
    max_0 = module_0.Max(one_1)
    all_0 = module_0.All(bytes_0)

def test_case_7():
    list_0 = []
    last_0 = module_0.Last(list_0)
    map_0 = module_0.Map(last_0)
    str_0 = map_0.__str__()

def test_case_8():
    first_0 = None
    first_1 = module_0.First(first_0)
    str_0 = 'T6V<!'
    map_0 = module_0.Map(str_0)
    str_1 = map_0.__str__()
    min_0 = module_0.Min(first_1)
    sum_0 = module_0.Sum(min_0)
    tuple_0 = ()
    max_0 = module_0.Max(tuple_0)
    last_0 = module_0.Last(first_1)
    all_0 = module_0.All(last_0)
    str_2 = max_0.__str__()

def test_case_9():
    int_0 = 2
    min_0 = module_0.Min(int_0)
    int_1 = 1
    min_1 = module_0.Min(int_1)
    var_0 = min_0.concat(min_1)
    min_2 = module_0.Min(int_1)

def test_case_10():
    int_0 = 732
    last_0 = module_0.Last(int_0)
    semigroup_0 = module_0.Semigroup(last_0)
    max_0 = module_0.Max(int_0)
    all_0 = module_0.All(int_0)
    float_0 = -2998.17
    all_1 = module_0.All(float_0)
    all_2 = all_1.concat(all_0)
    var_0 = max_0.concat(all_2)
    str_0 = max_0.__str__()
    max_1 = module_0.Max(last_0)

def test_case_11():
    int_0 = 732
    bytes_0 = b'l\xea\x01'
    one_0 = module_0.One(bytes_0)
    map_0 = module_0.Map(one_0)
    str_0 = 'a'
    var_0 = one_0.concat(str_0)
    sum_0 = module_0.Sum(map_0)
    str_1 = one_0.__str__()
    max_0 = module_0.Max(int_0)
    str_2 = sum_0.__str__()
    float_0 = -2998.17
    all_0 = module_0.All(float_0)
    all_1 = all_0.concat(all_0)
    var_1 = max_0.concat(all_1)
    str_3 = max_0.__str__()
    list_0 = [max_0, sum_0]
    first_0 = module_0.First(list_0)
    all_2 = module_0.All(all_0)
    all_3 = module_0.All(first_0)
    all_4 = all_3.concat(all_1)