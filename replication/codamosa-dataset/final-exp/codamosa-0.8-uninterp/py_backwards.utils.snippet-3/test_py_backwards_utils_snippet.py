# Automatically generated by Pynguin.
import typed_ast._ast3 as module_0
import py_backwards.utils.snippet as module_1
import typed_ast.ast3 as module_2

def test_case_0():
    pass

def test_case_1():
    a_s_t_0 = module_0.AST()
    iterable_0 = module_1.find_variables(a_s_t_0)

def test_case_2():
    class_def_0 = module_0.ClassDef()
    dict_0 = {}
    variables_replacer_0 = module_1.VariablesReplacer(dict_0)
    class_def_1 = variables_replacer_0.visit_ClassDef(class_def_0)

def test_case_3():
    class_def_0 = module_0.ClassDef()
    function_def_0 = module_0.FunctionDef()
    str_0 = 'NxvG2W<x}'
    dict_0 = {str_0: str_0, str_0: str_0}
    variables_replacer_0 = module_1.VariablesReplacer(dict_0)
    function_def_1 = variables_replacer_0.visit_FunctionDef(function_def_0)
    dict_1 = {}
    variables_replacer_1 = module_1.VariablesReplacer(dict_1)
    class_def_1 = variables_replacer_1.visit_ClassDef(class_def_0)
    snippet_0 = module_1.snippet(variables_replacer_1)

def test_case_4():
    attribute_0 = module_0.Attribute()
    str_0 = 'pDOxi`!7OAsdDl'
    dict_0 = {str_0: str_0, str_0: str_0}
    variables_replacer_0 = module_1.VariablesReplacer(dict_0)
    attribute_1 = variables_replacer_0.visit_Attribute(attribute_0)

def test_case_5():
    keyword_0 = module_0.keyword()
    dict_0 = {}
    variables_replacer_0 = module_1.VariablesReplacer(dict_0)
    keyword_1 = variables_replacer_0.visit_keyword(keyword_0)
    dict_1 = {}
    variables_replacer_1 = module_1.VariablesReplacer(dict_1)
    keyword_2 = variables_replacer_1.visit_keyword(keyword_1)
    str_0 = "^$HWre('j%@GEHH"
    str_1 = '$~c\rN\rR@p="_\rtI\r1o\t'
    dict_2 = {str_0: str_0, str_0: str_0, str_1: str_0, str_0: str_1}
    variables_replacer_2 = module_1.VariablesReplacer(dict_2)
    keyword_3 = variables_replacer_2.visit_keyword(keyword_2)

def test_case_6():
    int_0 = 7
    list_0 = [int_0, int_0]
    except_handler_0 = module_0.ExceptHandler(*list_0)
    arg_0 = module_0.arg()
    str_0 = 'U'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    variables_replacer_0 = module_1.VariablesReplacer(dict_0)
    arg_1 = variables_replacer_0.visit_arg(arg_0)
    str_1 = 'JICpZMbOB25My'
    dict_1 = {str_1: str_1}
    variables_replacer_1 = module_1.VariablesReplacer(dict_1)
    arg_2 = variables_replacer_1.visit_arg(arg_1)
    dict_2 = {}
    variables_replacer_2 = module_1.VariablesReplacer(dict_2)
    except_handler_1 = variables_replacer_2.visit_ExceptHandler(except_handler_0)

def test_case_7():
    a_s_t_0 = module_0.AST()
    dict_0 = {}
    module_1.extend_tree(a_s_t_0, dict_0)

def test_case_8():
    callable_0 = None
    snippet_0 = module_1.snippet(callable_0)
    snippet_1 = module_1.snippet(snippet_0)

def test_case_9():
    bool_0 = True
    module_1.extend(bool_0)

def test_case_10():
    str_0 = 'let(x)\nx = 1\nlet(y)\ny = 2\nlet(z)\nz = 3\nz += 1\nlet(a)'
    var_0 = module_2.parse(str_0)
    iterable_0 = module_1.find_variables(var_0)

def test_case_11():
    str_0 = 'lWt(x)\nx = 1\nlet(y)\ny = 2\nlet(z)\nz = 3\nz += 1\nlet(a)'
    var_0 = module_2.parse(str_0)
    iterable_0 = module_1.find_variables(var_0)