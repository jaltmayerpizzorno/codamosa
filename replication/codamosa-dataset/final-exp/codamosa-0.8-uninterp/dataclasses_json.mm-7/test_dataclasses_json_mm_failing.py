# Automatically generated by Pynguin.
import dataclasses_json.mm as module_0

def test_case_0():
    try:
        str_0 = 'm'
        list_0 = []
        list_1 = [list_0]
        str_1 = '+m+|J\t]vO_y9w4hmO'
        bool_0 = True
        list_2 = []
        str_2 = '). Value cannot be deserialized properly.'
        dict_0 = {str_2: list_0, str_0: list_0}
        union_field_0 = module_0._UnionField(bool_0, list_2, list_1, **dict_0)
        dict_1 = {str_1: str_0, str_1: union_field_0, str_2: str_0, str_0: list_0}
        bytes_0 = b'\x92k\xa1\xd7Bk\xa9'
        dict_2 = None
        var_0 = module_0.build_type(list_1, dict_1, bytes_0, dict_2, list_1)
    except BaseException:
        pass

def test_case_1():
    try:
        schema_f_0 = module_0.SchemaF()
    except BaseException:
        pass

def test_case_2():
    try:
        dict_0 = None
        dict_1 = {}
        str_0 = '\x0bn'
        var_0 = module_0.build_type(dict_0, dict_1, str_0, str_0, dict_0)
    except BaseException:
        pass

def test_case_3():
    try:
        var_0 = None
        list_0 = [var_0]
        str_0 = '<c`P0F=sH3v'
        dict_0 = {}
        bool_0 = False
        timestamp_field_0 = module_0._TimestampField(missing=var_0, dump_default=list_0, attribute=str_0, required=bool_0, allow_none=bool_0, metadata=dict_0)
        tuple_0 = ()
        bool_1 = True
        iso_field_0 = module_0._IsoField(default=list_0, data_key=str_0, validate=tuple_0, required=bool_0, load_only=bool_1)
        str_1 = 'hbAZ"o>1P3?Ey":hwT'
        str_2 = 'pK\x0bVy4aIcn1SaE c;L'
        dict_1 = {str_0: iso_field_0, str_1: timestamp_field_0, str_2: tuple_0}
        var_1 = module_0.schema(timestamp_field_0, iso_field_0, dict_1)
    except BaseException:
        pass

def test_case_4():
    try:
        bytes_0 = b'v\xf6\x0eF\x02#\xfa\xb1\x9d\xa9\x88B.\xd0\x13\xe2\xc2\x1a'
        float_0 = -842.8
        int_0 = -1
        dict_0 = None
        type_0 = module_0.build_schema(bytes_0, float_0, int_0, dict_0)
    except BaseException:
        pass