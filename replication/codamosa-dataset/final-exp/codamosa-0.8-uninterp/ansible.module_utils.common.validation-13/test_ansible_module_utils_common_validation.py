# Automatically generated by Pynguin.
import ansible.module_utils.common.validation as module_0

def test_case_0():
    str_0 = '{b_'
    var_0 = module_0.check_mutually_exclusive(str_0, str_0)

def test_case_1():
    str_0 = 'ixjow9'
    var_0 = module_0.check_required_together(str_0, str_0)

def test_case_2():
    list_0 = []
    var_0 = module_0.check_required_if(list_0, list_0)

def test_case_3():
    set_0 = None
    var_0 = module_0.check_missing_parameters(set_0)

def test_case_4():
    tuple_0 = ()
    var_0 = module_0.check_type_path(tuple_0)

def test_case_5():
    float_0 = -1306.0
    var_0 = module_0.check_type_list(float_0)

def test_case_6():
    list_0 = []
    var_0 = module_0.check_type_list(list_0)

def test_case_7():
    bool_0 = True
    var_0 = module_0.check_type_bool(bool_0)

def test_case_8():
    bool_0 = False
    var_0 = module_0.check_type_int(bool_0)

def test_case_9():
    bool_0 = True
    var_0 = module_0.check_type_float(bool_0)

def test_case_10():
    int_0 = -616
    var_0 = module_0.check_type_raw(int_0)

def test_case_11():
    str_0 = '1Mb'
    var_0 = module_0.check_type_bits(str_0)

def test_case_12():
    bool_0 = False
    var_0 = module_0.check_type_list(bool_0)

def test_case_13():
    int_0 = -461
    var_0 = module_0.check_type_float(int_0)
    bool_0 = None
    str_0 = '7c]~umXOe=SeX'
    var_1 = module_0.check_required_if(bool_0, str_0)

def test_case_14():
    bool_0 = True
    var_0 = module_0.safe_eval(bool_0)

def test_case_15():
    dict_0 = {}
    var_0 = module_0.check_type_dict(dict_0)

def test_case_16():
    str_0 = 'foobar()'
    var_0 = module_0.safe_eval(str_0)

def test_case_17():
    bytes_0 = b''
    list_0 = []
    set_0 = None
    var_0 = module_0.check_missing_parameters(bytes_0, list_0)
    var_1 = module_0.check_required_if(list_0, set_0)

def test_case_18():
    str_0 = 'gW+g=Ut=}Heu'
    var_0 = module_0.check_type_dict(str_0)

def test_case_19():
    str_0 = '\tWtwRw!h)K\rOX%f2L'
    str_1 = 'ixBjowC9'
    var_0 = module_0.check_required_together(str_0, str_1)

def test_case_20():
    str_0 = 'gW+g=Ut=}3bGHeu'
    dict_0 = {str_0: str_0}
    str_1 = 'y<ltwtZgf'
    str_2 = '\n    Helper class for Galaxy, which is used to parse both dependencies\n    specified in meta/main.yml and requirements.yml files.\n    '
    var_0 = module_0.check_required_by(dict_0, str_1, str_2)

def test_case_21():
    str_0 = '~4"[,!G=.{Tz45,iP]'
    var_0 = module_0.check_type_dict(str_0)

def test_case_22():
    str_0 = '1'
    var_0 = module_0.safe_eval(str_0)

def test_case_23():
    str_0 = 'foo.bar()'
    var_0 = module_0.safe_eval(str_0)

def test_case_24():
    str_0 = 'import foo'
    var_0 = module_0.safe_eval(str_0)

def test_case_25():
    bool_0 = True
    var_0 = dict(required=bool_0)
    bool_1 = False
    var_1 = dict(required=bool_1)
    var_2 = dict(a=var_0, b=var_1)
    int_0 = 2
    var_3 = dict(a=bool_0, b=int_0)
    var_4 = module_0.check_required_arguments(var_2, var_3)

def test_case_26():
    str_0 = 'a=1, b=2, c=3'
    var_0 = module_0.check_type_dict(str_0)