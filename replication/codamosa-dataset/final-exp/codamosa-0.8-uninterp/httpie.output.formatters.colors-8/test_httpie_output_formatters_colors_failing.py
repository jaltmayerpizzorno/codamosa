# Automatically generated by Pynguin.
import httpie.context as module_0
import httpie.output.formatters.colors as module_1

def test_case_0():
    try:
        dict_0 = {}
        environment_0 = module_0.Environment(**dict_0)
        color_formatter_0 = module_1.ColorFormatter(environment_0, **dict_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'image/jpg'
        optional_0 = module_1.get_lexer(str_0)
        optional_1 = module_1.get_lexer(str_0)
        str_1 = 'text/html'
        optional_2 = module_1.get_lexer(str_1)
        str_2 = 'text/x-python'
        optional_3 = module_1.get_lexer(str_2)
        bool_0 = True
        optional_4 = module_1.get_lexer(str_1, bool_0)
        str_3 = '<html></html>'
        str_4 = '{}'
        optional_5 = module_1.get_lexer(str_3, bool_0, str_4)
        str_5 = '{'
        environment_0 = module_0.Environment()
        optional_6 = module_1.get_lexer(str_4, bool_0, str_5)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'image/jpg'
        optional_0 = module_1.get_lexer(str_0)
        str_1 = 'image/svg+xml'
        optional_1 = module_1.get_lexer(str_1)
        str_2 = 'text/html'
        optional_2 = module_1.get_lexer(str_2)
        optional_3 = module_1.get_lexer(str_1)
        bool_0 = True
        optional_4 = module_1.get_lexer(str_0, bool_0)
        str_3 = '<html></html>'
        optional_5 = module_1.get_lexer(str_0, bool_0, str_3)
        str_4 = '{}'
        optional_6 = module_1.get_lexer(str_0, bool_0, str_4)
        environment_0 = module_0.Environment()
        dict_0 = {}
        color_formatter_0 = module_1.ColorFormatter(environment_0, **dict_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '/(\\J|>\x0b}*'
        str_1 = 'QN?xu)03\x0c'
        str_2 = 'rU]FH4H/(g-\nr)'
        dict_0 = {str_0: str_0, str_1: str_0, str_1: str_1, str_2: str_2}
        simplified_h_t_t_p_lexer_0 = module_1.SimplifiedHTTPLexer(**dict_0)
        int_0 = 306
        optional_0 = module_1.get_lexer(str_0, simplified_h_t_t_p_lexer_0, int_0)
    except BaseException:
        pass