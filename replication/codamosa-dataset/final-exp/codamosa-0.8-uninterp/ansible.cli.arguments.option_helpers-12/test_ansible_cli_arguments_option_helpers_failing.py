# Automatically generated by Pynguin.
import ansible.cli.arguments.option_helpers as module_0
import argparse as module_1

def test_case_0():
    try:
        bool_0 = True
        str_0 = ''
        var_0 = module_0.create_base_parser(bool_0)
        int_0 = 10240
        sorting_help_formatter_0 = module_0.SortingHelpFormatter(int_0, int_0)
        var_1 = sorting_help_formatter_0.add_arguments(str_0)
        set_0 = {bool_0, bool_0, bool_0}
        var_2 = module_0.version(set_0)
        bool_1 = None
        var_3 = module_0.ensure_value(str_0, bool_0, bool_1)
    except BaseException:
        pass

def test_case_1():
    try:
        bool_0 = False
        set_0 = {bool_0, bool_0}
        dict_0 = {bool_0: bool_0}
        ansible_version_0 = module_0.AnsibleVersion(dict_0, dict_0)
        ansible_version_1 = module_0.AnsibleVersion(set_0, ansible_version_0)
        int_0 = None
        int_1 = 429
        unrecognized_argument_0 = module_0.UnrecognizedArgument(int_1, set_0, set_0, dict_0, dict_0)
        complex_0 = None
        bool_1 = False
        sorting_help_formatter_0 = module_0.SortingHelpFormatter(bool_1)
        var_0 = ansible_version_0.__call__(int_0, unrecognized_argument_0, complex_0, sorting_help_formatter_0)
    except BaseException:
        pass

def test_case_2():
    try:
        int_0 = None
        prepend_list_action_0 = None
        bool_0 = True
        str_0 = 'aVZJFc)[VjDc\r%1IAza'
        tuple_0 = (int_0, prepend_list_action_0, bool_0, str_0)
        str_1 = 'O.T/pkQXKa!`&<('
        complex_0 = None
        unrecognized_argument_0 = module_0.UnrecognizedArgument(int_0, tuple_0, str_1, complex_0)
        var_0 = module_0.add_runtask_options(unrecognized_argument_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bool_0 = True
        set_0 = {bool_0, bool_0, bool_0}
        str_0 = 'yQ|MO'
        prepend_list_action_0 = module_0.PrependListAction(bool_0, set_0, bool_0, str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = ''
        var_0 = dict(DEFAULT_MODULE_PATH=str_0)
        argument_parser_0 = module_1.ArgumentParser()
        var_1 = module_0.add_module_options(argument_parser_0)
        str_1 = '-M'
        str_2 = '/test/foo:/test/bar'
        str_3 = [str_1, str_2]
        var_2 = argument_parser_0.parse_args(str_3)
        var_3 = argument_parser_0.parse_args(argument_parser_0)
    except BaseException:
        pass

def test_case_5():
    try:
        float_0 = 952.35978
        str_0 = 'u$}Xq/f$B`m.'
        list_0 = None
        var_0 = module_0.ensure_value(float_0, str_0, list_0)
    except BaseException:
        pass

def test_case_6():
    try:
        bool_0 = True
        var_0 = module_0.create_base_parser(bool_0)
        set_0 = {bool_0, bool_0, bool_0}
        var_1 = module_0.version(set_0)
        bool_1 = False
        var_2 = module_0.add_runas_options(bool_1)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'Could not find a module for %s.'
        list_0 = [str_0, str_0, str_0, str_0]
        var_0 = module_0.add_async_options(list_0)
    except BaseException:
        pass

def test_case_8():
    try:
        bytes_0 = b'\x1e\x88\xccy\x1a\xfd'
        var_0 = module_0.add_basedir_options(bytes_0)
    except BaseException:
        pass

def test_case_9():
    try:
        bool_0 = True
        var_0 = module_0.add_check_options(bool_0)
    except BaseException:
        pass

def test_case_10():
    try:
        var_0 = module_0.unfrack_path()
        sorting_help_formatter_0 = None
        var_1 = module_0.add_connect_options(sorting_help_formatter_0)
    except BaseException:
        pass

def test_case_11():
    try:
        bytes_0 = b'\x02'
        var_0 = module_0.add_meta_options(bytes_0)
    except BaseException:
        pass

def test_case_12():
    try:
        int_0 = -3485
        var_0 = module_0.add_module_options(int_0)
    except BaseException:
        pass

def test_case_13():
    try:
        bytes_0 = b'0.\xaaz\x84\xb5\xd5\tM\xb0~t\x1ag\x13'
        var_0 = module_0.add_output_options(bytes_0)
    except BaseException:
        pass

def test_case_14():
    try:
        float_0 = -2368.4484
        var_0 = module_0.add_runas_options(float_0)
    except BaseException:
        pass

def test_case_15():
    try:
        str_0 = 'LuP`\x0br/d*4M'
        var_0 = module_0.add_runas_prompt_options(str_0)
    except BaseException:
        pass

def test_case_16():
    try:
        set_0 = set()
        var_0 = module_0.add_subset_options(set_0)
    except BaseException:
        pass

def test_case_17():
    try:
        float_0 = 1.0
        var_0 = module_0.add_vault_options(float_0)
    except BaseException:
        pass

def test_case_18():
    try:
        bool_0 = True
        str_0 = ''
        var_0 = module_0.create_base_parser(bool_0)
        int_0 = 10240
        sorting_help_formatter_0 = module_0.SortingHelpFormatter(int_0, int_0)
        var_1 = sorting_help_formatter_0.add_arguments(str_0)
        set_0 = {bool_0, bool_0, bool_0}
        var_2 = module_0.version(set_0)
        bool_1 = False
        bool_2 = False
        str_1 = ')571`o&Xm\x0c4Tdx{6/z\x0c`'
        list_0 = [var_2, str_1, set_0]
        str_2 = 'k\r5 '
        tuple_0 = (bool_2, list_0, sorting_help_formatter_0, str_2)
        ansible_version_0 = None
        tuple_1 = (tuple_0, ansible_version_0)
        prepend_list_action_0 = module_0.PrependListAction(set_0, str_0, bool_1, tuple_1, list_0, tuple_0)
    except BaseException:
        pass

def test_case_19():
    try:
        bool_0 = True
        str_0 = ''
        var_0 = module_0.create_base_parser(bool_0)
        int_0 = 10240
        sorting_help_formatter_0 = module_0.SortingHelpFormatter(int_0, int_0)
        var_1 = sorting_help_formatter_0.add_arguments(str_0)
        set_0 = {int_0, bool_0, bool_0, var_0, var_0, bool_0}
        var_2 = module_0.version(set_0)
        bool_1 = False
        var_3 = module_0.maybe_unfrack_path(bool_1)
        var_4 = module_0.add_fork_options(sorting_help_formatter_0)
    except BaseException:
        pass

def test_case_20():
    try:
        str_0 = '_$'
        var_0 = module_0.maybe_unfrack_path(str_0)
        int_0 = -359
        list_0 = [int_0, int_0]
        bool_0 = True
        unrecognized_argument_0 = module_0.UnrecognizedArgument(int_0, int_0, list_0, bool_0, bool_0, list_0)
        bool_1 = True
        var_1 = module_0.create_base_parser(bool_1)
        bytes_0 = b'\x9c'
        str_1 = '%q1$f,uE_]l'
        str_2 = '#".zv92j,)UB>{JD0?9'
        var_2 = unrecognized_argument_0.__call__(bytes_0, str_1, str_2)
    except BaseException:
        pass

def test_case_21():
    try:
        str_0 = '_$'
        var_0 = module_0.maybe_unfrack_path(str_0)
        bool_0 = True
        var_1 = module_0.create_base_parser(bool_0)
        sorting_help_formatter_0 = module_0.SortingHelpFormatter(bool_0)
        var_2 = module_0.add_basedir_options(sorting_help_formatter_0)
    except BaseException:
        pass

def test_case_22():
    try:
        str_0 = '_$'
        var_0 = module_0.maybe_unfrack_path(str_0)
        bool_0 = True
        str_1 = ''
        var_1 = module_0.create_base_parser(bool_0)
        int_0 = 10240
        sorting_help_formatter_0 = module_0.SortingHelpFormatter(int_0, int_0)
        var_2 = sorting_help_formatter_0.add_arguments(str_1)
        set_0 = {bool_0, bool_0, bool_0}
        float_0 = -646.052
        sorting_help_formatter_1 = module_0.SortingHelpFormatter(float_0)
        var_3 = module_0.version(set_0)
        sorting_help_formatter_2 = module_0.SortingHelpFormatter(bool_0)
        unrecognized_argument_0 = None
        str_2 = ''
        var_4 = module_0.add_runas_prompt_options(unrecognized_argument_0, str_2)
    except BaseException:
        pass

def test_case_23():
    try:
        bool_0 = True
        str_0 = ''
        var_0 = module_0.create_base_parser(bool_0)
        int_0 = 10240
        sorting_help_formatter_0 = module_0.SortingHelpFormatter(int_0, int_0)
        var_1 = sorting_help_formatter_0.add_arguments(str_0)
        set_0 = {int_0, bool_0, bool_0, var_0, var_0, bool_0}
        var_2 = module_0.version(set_0)
        sorting_help_formatter_1 = module_0.SortingHelpFormatter(bool_0)
        int_1 = 256
        ansible_version_0 = None
        bytes_0 = b'\n\xce\xc7\x05<\x15\xb8\x15\xd3'
        bool_1 = False
        unrecognized_argument_0 = module_0.UnrecognizedArgument(int_1, bytes_0, bool_1, sorting_help_formatter_1)
        float_0 = -930.447122
        ansible_version_1 = module_0.AnsibleVersion(float_0, ansible_version_0, unrecognized_argument_0)
        var_3 = module_0.add_runtask_options(sorting_help_formatter_1)
    except BaseException:
        pass

def test_case_24():
    try:
        argument_parser_0 = module_1.ArgumentParser()
        var_0 = module_0.add_subset_options(argument_parser_0)
        bool_0 = True
        str_0 = ''
        list_0 = [str_0, str_0]
        var_1 = argument_parser_0.add_argument_group(*list_0)
        var_2 = module_0.create_base_parser(bool_0)
        int_0 = 10185
        sorting_help_formatter_0 = module_0.SortingHelpFormatter(int_0, int_0)
        var_3 = sorting_help_formatter_0.add_arguments(str_0)
        set_0 = {int_0, bool_0, bool_0, var_2, var_2, bool_0}
        var_4 = module_0.version(set_0)
        bytes_0 = b'\n\x05<\x15\xb8\x15\xd3'
        bool_1 = False
        unrecognized_argument_0 = module_0.UnrecognizedArgument(int_0, bytes_0, bool_1, sorting_help_formatter_0)
    except BaseException:
        pass