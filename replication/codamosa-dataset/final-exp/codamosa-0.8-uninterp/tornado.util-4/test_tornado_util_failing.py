# Automatically generated by Pynguin.
import tornado.util as module_0
import builtins as module_1

def test_case_0():
    try:
        str_0 = '1'
        object_dict_0 = module_0.ObjectDict()
        arg_replacer_0 = module_0.ArgReplacer(object_dict_0, str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'tornado.escape'
        any_0 = module_0.import_object(str_0)
        bytes_0 = b's'
        gzip_decompressor_0 = module_0.GzipDecompressor()
        bytes_1 = gzip_decompressor_0.decompress(bytes_0)
        str_1 = 'tornado.missing_mdule'
        any_1 = module_0.import_object(str_1)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '0'
        str_1 = module_0.re_unescape(str_0)
        gzip_decompressor_0 = module_0.GzipDecompressor()
        bytes_0 = gzip_decompressor_0.flush()
        str_2 = '%L{-<%J9eJIL%a\x0cb(h\r"'
        var_0 = module_0.doctests()
        object_dict_0 = module_0.ObjectDict()
        dict_0 = {str_2: bytes_0}
        module_0.exec_in(gzip_decompressor_0, dict_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'M,d'
        base_exception_0 = module_1.BaseException()
        base_exception_1 = module_1.BaseException()
        any_0 = module_0.import_object(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = '0'
        str_1 = None
        dict_0 = {str_0: str_0, str_1: str_1}
        module_0.exec_in(str_0, dict_0)
        any_0 = module_0.import_object(str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'zN/ v?7dr_FsaUP)qY\x0bE'
        var_0 = module_0.raise_exc_info(str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = '>!9wwF\\S1HZ*%-WfyG'
        str_1 = module_0.re_unescape(str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        configurable_0 = module_0.Configurable()
    except BaseException:
        pass

def test_case_8():
    try:
        object_dict_0 = module_0.ObjectDict()
        var_0 = module_0.timedelta_to_seconds(object_dict_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'tornado.escape.utf8'
        gzip_decompressor_0 = module_0.GzipDecompressor()
        list_0 = [gzip_decompressor_0, str_0, gzip_decompressor_0]
        base_exception_0 = module_1.BaseException(*list_0)
        optional_0 = module_0.errno_from_exception(base_exception_0)
        str_1 = 'tornado.missing_mdule'
        any_0 = module_0.import_object(str_1)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = 'tornado.testing.gentst'
        any_0 = module_0.import_object(str_0)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = 'tornado.escape.utf8'
        any_0 = module_0.import_object(str_0)
        arg_replacer_0 = module_0.ArgReplacer(any_0, str_0)
        sequence_0 = None
        dict_0 = {}
        callable_0 = None
        gzip_decompressor_0 = module_0.GzipDecompressor()
        tuple_0 = arg_replacer_0.replace(gzip_decompressor_0, sequence_0, dict_0)
        arg_replacer_1 = module_0.ArgReplacer(callable_0, str_0)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = 'tornado.escape.utf8'
        any_0 = module_0.import_object(str_0)
        str_1 = '}aoJuJ/<E='
        arg_replacer_0 = module_0.ArgReplacer(any_0, str_1)
        base_exception_0 = module_1.BaseException()
        optional_0 = module_0.errno_from_exception(base_exception_0)
        sequence_0 = None
        dict_0 = {str_1: base_exception_0}
        dict_1 = {}
        any_1 = arg_replacer_0.get_old_value(sequence_0, dict_1)
        any_2 = arg_replacer_0.get_old_value(sequence_0, dict_0, any_0)
        str_2 = 'J"D\\@Bwj}vqchqT\t|eYa'
        str_3 = module_0.re_unescape(str_2)
        str_4 = module_0.re_unescape(str_3)
        base_exception_1 = module_1.BaseException()
        list_0 = [any_2, optional_0]
        var_0 = module_0.raise_exc_info(list_0)
    except BaseException:
        pass