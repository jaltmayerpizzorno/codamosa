# Automatically generated by Pynguin.
import ansible.playbook.base as module_0
import ansible.playbook.attribute as module_1

def test_case_0():
    try:
        field_attribute_base_0 = module_0.FieldAttributeBase()
        var_0 = field_attribute_base_0.serialize()
        list_0 = None
        base_0 = module_0.Base()
        var_1 = base_0.get_search_path()
        field_attribute_base_1 = module_0.FieldAttributeBase()
        var_2 = field_attribute_base_1.get_loader()
        var_3 = field_attribute_base_1.deserialize(list_0)
    except BaseException:
        pass

def test_case_1():
    try:
        field_attribute_base_0 = module_0.FieldAttributeBase()
        bytes_0 = b'\xfe}\x9d6Qd'
        var_0 = field_attribute_base_0.load_data(bytes_0)
    except BaseException:
        pass

def test_case_2():
    try:
        field_attribute_base_0 = module_0.FieldAttributeBase()
        var_0 = field_attribute_base_0.copy()
        field_attribute_base_1 = module_0.FieldAttributeBase()
        list_0 = None
        bytes_0 = b'\xc6\xea\x98\x8e\x95\x80\x01$(F&\xdd\r'
        int_0 = -1649
        base_0 = module_0.Base()
        var_1 = field_attribute_base_0.get_validated_value(list_0, bytes_0, int_0, base_0)
    except BaseException:
        pass

def test_case_3():
    try:
        field_attribute_base_0 = module_0.FieldAttributeBase()
        var_0 = field_attribute_base_0.get_variable_manager()
        var_1 = field_attribute_base_0.squash()
        set_0 = None
        field_attribute_base_1 = module_0.FieldAttributeBase()
        var_2 = field_attribute_base_1.post_validate(set_0)
    except BaseException:
        pass

def test_case_4():
    try:
        field_attribute_base_0 = module_0.FieldAttributeBase()
        var_0 = field_attribute_base_0.copy()
        var_1 = field_attribute_base_0.get_variable_manager()
        base_0 = module_0.Base()
        var_2 = base_0.get_dep_chain()
        list_0 = [var_0, field_attribute_base_0, base_0]
        bytes_0 = b'\x1e\xccW\xbd\x05c'
        var_3 = base_0.get_path()
        var_4 = field_attribute_base_0.get_variable_manager()
        var_5 = field_attribute_base_0.get_ds()
        set_0 = set()
        bool_0 = True
        tuple_0 = (bytes_0, bytes_0, set_0, bool_0)
        var_6 = field_attribute_base_0.validate(tuple_0)
        var_7 = field_attribute_base_0.squash()
        var_8 = field_attribute_base_0.serialize()
        field_attribute_base_1 = module_0.FieldAttributeBase()
        var_9 = field_attribute_base_0.squash()
        str_0 = 'HzlNpM\x0b\x0bm0Z_[16'
        var_10 = field_attribute_base_0.load_data(list_0, str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = '8=/>>4n[>gJ1_k=#'
        str_1 = None
        dict_0 = {str_0: str_0, str_1: str_1, str_1: str_0}
        field_attribute_base_0 = module_0.FieldAttributeBase()
        var_0 = field_attribute_base_0.from_attrs(dict_0)
        base_0 = module_0.Base()
        field_attribute_base_1 = module_0.FieldAttributeBase()
        set_0 = {str_1}
        var_1 = field_attribute_base_1.dump_me(set_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'foo'
        field_attribute_base_0 = module_0.FieldAttributeBase()
        tuple_0 = (field_attribute_base_0,)
        list_0 = [tuple_0, field_attribute_base_0, str_0, str_0]
        float_0 = 2742.423107
        field_attribute_base_1 = module_0.FieldAttributeBase()
        var_0 = field_attribute_base_1.load_data(tuple_0, list_0, float_0)
    except BaseException:
        pass

def test_case_7():
    try:
        field_attribute_base_0 = module_0.FieldAttributeBase()
        var_0 = field_attribute_base_0.copy()
        field_attribute_base_1 = module_0.FieldAttributeBase()
        var_1 = field_attribute_base_1.copy()
        var_2 = field_attribute_base_1.get_variable_manager()
        base_0 = module_0.Base()
        var_3 = base_0.get_dep_chain()
        var_4 = base_0.get_path()
        field_attribute_base_2 = module_0.FieldAttributeBase()
        var_5 = field_attribute_base_2.get_variable_manager()
        set_0 = set()
        var_6 = field_attribute_base_2.get_variable_manager()
        var_7 = field_attribute_base_2.load_data(set_0)
        var_8 = field_attribute_base_2.get_variable_manager()
        field_attribute_base_3 = module_0.FieldAttributeBase()
        field_attribute_base_4 = module_0.FieldAttributeBase()
        dict_0 = None
        field_attribute_base_5 = module_0.FieldAttributeBase()
        var_9 = field_attribute_base_5.load_data(dict_0, base_0)
    except BaseException:
        pass

def test_case_8():
    try:
        field_attribute_base_0 = module_0.FieldAttributeBase()
        var_0 = field_attribute_base_0.copy()
        var_1 = field_attribute_base_0.get_variable_manager()
        field_attribute_base_1 = module_0.FieldAttributeBase()
        var_2 = field_attribute_base_1.squash()
        var_3 = field_attribute_base_0.get_variable_manager()
        list_0 = []
        base_0 = module_0.Base()
        list_1 = [var_0, field_attribute_base_1, base_0]
        var_4 = base_0.get_path()
        var_5 = field_attribute_base_1.get_ds()
        var_6 = base_0.get_search_path()
        var_7 = field_attribute_base_0.get_loader()
        var_8 = field_attribute_base_0.serialize()
        var_9 = field_attribute_base_1.dump_me()
        str_0 = '/N.x\rU6mH2wOas4'
        var_10 = field_attribute_base_1.validate(str_0)
        field_attribute_base_2 = module_0.FieldAttributeBase()
        var_11 = base_0.get_search_path()
        str_1 = ''
        str_2 = 'dumping result to json'
        str_3 = '0'
        dict_0 = {str_1: str_2, str_3: var_7}
        var_12 = field_attribute_base_0.deserialize(dict_0)
        bytes_0 = b'\x03v\xe4\xe2\x9cgd'
        var_13 = field_attribute_base_0.load_data(list_0, bytes_0)
        var_14 = base_0.get_search_path()
        var_15 = field_attribute_base_1.squash()
        var_16 = field_attribute_base_0.from_attrs(dict_0)
        var_17 = field_attribute_base_0.copy()
        base_1 = module_0.Base()
        float_0 = -1818.463183
        var_18 = field_attribute_base_1.load_data(list_1, float_0)
    except BaseException:
        pass

def test_case_9():
    try:
        base_0 = module_0.Base()
        list_0 = [base_0]
        bool_0 = None
        bytes_0 = b'\xe9\x1b\xeb\xab\x02\xbd\x97\xa1]\x06\xa2\xcf\x12|\xdcu'
        field_attribute_0 = module_1.FieldAttribute(bool_0, bytes_0, base_0)
        float_0 = 2.0
        bool_1 = False
        field_attribute_base_0 = module_0.FieldAttributeBase()
        var_0 = field_attribute_base_0.get_validated_value(field_attribute_0, field_attribute_0, float_0, bool_1)
        str_0 = '`\x0cdpM1#tz%b.'
        dict_0 = {str_0: base_0, str_0: list_0, str_0: list_0}
        field_attribute_base_1 = module_0.FieldAttributeBase()
        var_1 = field_attribute_base_1.squash()
        bool_2 = True
        var_2 = base_0.get_validated_value(list_0, dict_0, field_attribute_base_1, bool_2)
    except BaseException:
        pass