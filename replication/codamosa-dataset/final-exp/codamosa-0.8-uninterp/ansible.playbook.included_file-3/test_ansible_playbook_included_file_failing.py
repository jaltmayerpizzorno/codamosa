# Automatically generated by Pynguin.
import ansible.playbook.included_file as module_0

def test_case_0():
    try:
        str_0 = 'test1'
        str_1 = 'args1'
        str_2 = 'task1'
        included_file_0 = module_0.IncludedFile(str_0, str_1, str_1, str_2)
        var_0 = included_file_0.__eq__(included_file_0)
    except BaseException:
        pass

def test_case_1():
    try:
        dict_0 = {}
        float_0 = 0.0
        set_0 = {float_0, float_0, float_0, float_0}
        list_0 = [dict_0, set_0, float_0, dict_0]
        included_file_0 = module_0.IncludedFile(set_0, list_0, set_0, float_0)
        var_0 = included_file_0.__repr__()
        int_0 = -4438
        var_1 = included_file_0.__eq__(int_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'Failure using method (%s) in callback plugin (%s): %s'
        bytes_0 = b'0\xeb\xc7\x10'
        list_0 = []
        int_0 = 1604
        included_file_0 = module_0.IncludedFile(str_0, int_0, str_0, str_0)
        var_0 = included_file_0.process_include_results(list_0, included_file_0, int_0, included_file_0)
        var_1 = included_file_0.process_include_results(str_0, str_0, bytes_0, str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        set_0 = None
        bytes_0 = b'\xfe:o\x99\x86\xce\x90\xac,\xd1\x0f\x11D\x8d\xb2\xe2{'
        str_0 = '9/@lD'
        str_1 = 'G!Kszs"h{<<'
        bytes_1 = b'\x88\xab\n\x9a\x85\x19J\xfc5'
        list_0 = [str_1, str_1, str_0]
        int_0 = -489
        int_1 = -3705
        included_file_0 = module_0.IncludedFile(list_0, int_0, int_0, int_1)
        str_2 = '$0fcbjgF&byE@v_h'
        bool_0 = True
        bool_1 = True
        float_0 = -1890.0
        included_file_1 = module_0.IncludedFile(bool_0, bool_1, bool_0, float_0)
        int_2 = -1365
        bool_2 = True
        dict_0 = {bool_1: set_0, int_2: bool_2, bool_2: bytes_1}
        str_3 = 'Initial connection to galaxy_server: %s'
        included_file_2 = module_0.IncludedFile(str_2, included_file_1, bool_0, dict_0, str_3)
        var_0 = included_file_2.__eq__(included_file_0)
        bool_3 = True
        set_1 = set()
        included_file_3 = module_0.IncludedFile(str_1, bytes_1, bool_3, set_1)
        var_1 = included_file_3.process_include_results(set_0, bytes_0, str_0, bytes_0)
    except BaseException:
        pass

def test_case_4():
    try:
        tuple_0 = ()
        set_0 = set()
        bytes_0 = None
        str_0 = None
        bytes_1 = b'\rU\xda\xc1\xcel\x98o\xf3'
        float_0 = -1830.0
        included_file_0 = module_0.IncludedFile(bytes_0, set_0, float_0, tuple_0)
        var_0 = included_file_0.add_host(bytes_1)
        complex_0 = None
        included_file_1 = module_0.IncludedFile(str_0, bytes_0, str_0, complex_0)
        included_file_2 = module_0.IncludedFile(bytes_0, bytes_0, set_0, included_file_1, included_file_1)
        var_1 = included_file_1.__eq__(included_file_2)
        str_1 = '{0} is not eligible for last-chance resolution'
        str_2 = 'CRK9\tF^7u\toP4XSSPc'
        int_0 = 65
        bool_0 = None
        int_1 = -102
        tuple_1 = (set_0, bool_0, str_1, int_1)
        float_1 = 851.25844
        var_2 = included_file_1.process_include_results(str_2, int_0, tuple_1, float_1)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'x'
        str_1 = 'y'
        str_2 = 'z'
        str_3 = 'a'
        included_file_0 = module_0.IncludedFile(str_0, str_1, str_2, str_3)
        included_file_1 = module_0.IncludedFile(str_0, str_1, str_2, str_3)
        included_file_2 = module_0.IncludedFile(str_1, str_1, str_2, str_3)
        str_4 = 'not a'
        included_file_3 = module_0.IncludedFile(str_0, str_1, str_2, str_4)
        str_5 = 'a'
        var_0 = included_file_0.add_host(str_5)
        var_1 = included_file_0.add_host(str_5)
    except BaseException:
        pass

def test_case_6():
    try:
        tuple_0 = ()
        set_0 = set()
        bytes_0 = None
        str_0 = None
        bytes_1 = b'\rU\xda\xc1\xcel\x98o\xf3'
        float_0 = -1830.0
        included_file_0 = module_0.IncludedFile(bytes_0, set_0, float_0, tuple_0)
        var_0 = included_file_0.add_host(str_0)
        complex_0 = None
        included_file_1 = module_0.IncludedFile(str_0, bytes_0, str_0, complex_0)
        included_file_2 = module_0.IncludedFile(bytes_0, float_0, set_0, included_file_1, bytes_1)
        var_1 = included_file_1.__eq__(included_file_2)
        str_1 = '{0} is not eligible for last-chance resolution'
        str_2 = 'CRK9\tF^7u\toP4XSSPc'
        int_0 = 952
        bool_0 = None
        int_1 = -102
        tuple_1 = (set_0, bool_0, str_1, int_1)
        float_1 = -156.4911
        var_2 = included_file_1.process_include_results(str_2, int_0, tuple_1, float_1)
    except BaseException:
        pass