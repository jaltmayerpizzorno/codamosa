# Automatically generated by Pynguin.
import flutils.namedtupleutils as module_0
import collections.abc as module_1
import collections as module_2

def test_case_0():
    try:
        var_0 = None
        var_1 = module_0.to_namedtuple(var_0)
    except BaseException:
        pass

def test_case_1():
    try:
        tuple_0 = ()
        var_0 = module_0.to_namedtuple(tuple_0)
        list_0 = [tuple_0, tuple_0, tuple_0]
        str_0 = ''
        str_1 = 'rn=kef@vm7'
        float_0 = -1923.49897
        str_2 = "v'[3^N+#<LiMO0@"
        tuple_1 = (str_2,)
        tuple_2 = (str_0, str_1, float_0, tuple_1)
        var_1 = module_0.to_namedtuple(tuple_2)
        var_2 = module_0.to_namedtuple(list_0)
        bytes_0 = b'\xddn\x80\xc8\xac\xe2\x9a'
        var_3 = module_0.to_namedtuple(bytes_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '#KiY,Rai`0^ #|tZY-6J'
        int_0 = 1130
        dict_0 = {str_0: str_0, str_0: int_0, int_0: int_0, str_0: str_0}
        float_0 = 558.43
        str_1 = 'KvW3>j'
        tuple_0 = (str_0, dict_0, float_0, str_1)
        var_0 = module_0.to_namedtuple(tuple_0)
        dict_1 = {}
        mapping_0 = module_1.Mapping(**dict_1)
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'O\xe6ZI\xd5J:\x97w'
        dict_0 = {bytes_0: bytes_0}
        tuple_0 = ()
        ordered_dict_0 = module_2.OrderedDict()
        tuple_1 = (bytes_0, dict_0, tuple_0, ordered_dict_0)
        var_0 = module_0.to_namedtuple(tuple_1)
    except BaseException:
        pass