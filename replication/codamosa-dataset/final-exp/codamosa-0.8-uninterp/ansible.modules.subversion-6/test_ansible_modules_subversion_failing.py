# Automatically generated by Pynguin.
import ansible.modules.subversion as module_0

def test_case_0():
    try:
        var_0 = None
        subversion_0 = module_0.Subversion(var_0, var_0, var_0, var_0, var_0, var_0, var_0, var_0)
        var_1 = subversion_0.switch()
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = b'\xdd\xfa\x84\xd6'
        list_0 = [bytes_0]
        dict_0 = {}
        str_0 = ' R("S!2'
        subversion_0 = module_0.Subversion(bytes_0, list_0, dict_0, dict_0, list_0, list_0, str_0, bytes_0)
        var_0 = subversion_0.update()
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '"+`cX\x0b}4'
        list_0 = [str_0, str_0, str_0, str_0]
        set_0 = set()
        tuple_0 = (set_0,)
        str_1 = '_pUxzuPb$V&.I?"<a'
        subversion_0 = module_0.Subversion(str_0, str_0, list_0, list_0, str_0, tuple_0, str_0, str_1)
        var_0 = subversion_0.is_svn_repo()
    except BaseException:
        pass

def test_case_3():
    try:
        int_0 = -3450
        list_0 = None
        float_0 = 1077.46053
        bytes_0 = b'\xcb\xf0u[\xea\xe3\x0b\x99Sv4,\x98\xc7A\xe3;\xbb\x15'
        str_0 = "=&'%N*wzVh(|hsqZ"
        float_1 = -2429.123955
        subversion_0 = None
        str_1 = '%Y&O\x0cw?n-H3$Rud@J$O:'
        bool_0 = True
        subversion_1 = module_0.Subversion(bytes_0, str_0, list_0, float_1, subversion_0, str_1, str_1, bool_0)
        dict_0 = {}
        tuple_0 = (subversion_1, str_0, dict_0)
        str_2 = 'ansible.modules.subversion'
        bytes_1 = b'nc[&\xf4Nm\xc4C\x82BLY\xb2c'
        subversion_2 = module_0.Subversion(list_0, float_0, tuple_0, str_2, str_0, bytes_1, bool_0, int_0)
        bytes_2 = b'\xb7\x06\xb8\x8as\xf4'
        subversion_3 = module_0.Subversion(subversion_2, dict_0, bytes_2, tuple_0, list_0, subversion_2, tuple_0, float_0)
        str_3 = 'A '
        dict_1 = {int_0: int_0, int_0: subversion_3, str_3: str_2, bool_0: float_0}
        set_0 = {float_1, bytes_2, str_3, int_0}
        bool_1 = False
        int_1 = -53
        str_4 = '%}`QcsU:s3P$m\t'
        float_2 = -4449.751
        subversion_4 = module_0.Subversion(int_0, dict_1, set_0, bool_1, int_1, str_4, set_0, float_2)
        var_0 = subversion_4.checkout()
    except BaseException:
        pass

def test_case_4():
    try:
        var_0 = None
        subversion_0 = module_0.Subversion(var_0, var_0, var_0, var_0, var_0, var_0, var_0, var_0)
        var_1 = subversion_0.export()
    except BaseException:
        pass

def test_case_5():
    try:
        var_0 = None
        subversion_0 = module_0.Subversion(var_0, var_0, var_0, var_0, var_0, var_0, var_0, var_0)
        var_1 = subversion_0.update()
    except BaseException:
        pass

def test_case_6():
    try:
        list_0 = []
        bytes_0 = b'\xbd'
        int_0 = 168
        bool_0 = True
        str_0 = '\\m}~2ff#q;%'
        int_1 = 42
        str_1 = 'ansible.modules.subversion'
        bool_1 = False
        bytes_1 = b'\x9a'
        bytes_2 = b'[H\xe4\xa6'
        int_2 = 218
        set_0 = {int_1, str_0, str_0}
        float_0 = -285.526855
        subversion_0 = module_0.Subversion(bytes_1, bytes_2, str_1, int_2, list_0, set_0, float_0, set_0)
        subversion_1 = module_0.Subversion(int_0, bool_0, str_0, int_1, str_1, bool_1, subversion_0, bytes_0)
        var_0 = subversion_1.revert()
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = '\\c:+zFG$VkNR.hc\x0cOn'
        str_1 = 'X'
        str_2 = 'HPW$['
        list_0 = [str_1, str_2]
        str_3 = '*f61"L%?lvx'
        bytes_0 = b'\xd5\x97\xf2\x97\xb3\xe3\xc5[\xbf\x84\x96\xf2\x9f\x18|\xeb\x0e\x9d'
        set_0 = set()
        subversion_0 = module_0.Subversion(str_3, list_0, bytes_0, bytes_0, bytes_0, set_0, set_0, list_0)
        int_0 = 12
        str_4 = '|Y9j&'
        float_0 = 0.5
        subversion_1 = module_0.Subversion(str_0, str_1, list_0, subversion_0, int_0, bytes_0, str_4, float_0)
        var_0 = subversion_1.needs_update()
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = 'yo4evx]>)Sib'
        dict_0 = {}
        bool_0 = False
        int_0 = 1080
        bool_1 = False
        tuple_0 = (bool_1,)
        float_0 = 2103.4573
        int_1 = 20
        float_1 = -5040.3
        bytes_0 = b'\xc5\xf1\xe3\x18\x93(jR,\x8d84\xd8\x17@'
        set_0 = set()
        subversion_0 = module_0.Subversion(tuple_0, int_0, int_1, dict_0, float_1, bytes_0, dict_0, set_0)
        subversion_1 = module_0.Subversion(str_0, dict_0, bool_0, int_0, tuple_0, tuple_0, float_0, subversion_0)
        var_0 = subversion_1.get_remote_revision()
    except BaseException:
        pass

def test_case_9():
    try:
        dict_0 = None
        dict_1 = {dict_0: dict_0, dict_0: dict_0}
        str_0 = 'sCy^N\x0c'
        bytes_0 = b'\xe4\x1bayZU\n\xc4y\xfd\xa1\xed\xcf\xe5'
        int_0 = -2864
        set_0 = None
        str_1 = "|GeP:z39Z%>'"
        bool_0 = False
        list_0 = []
        bytes_1 = b'\x04\xd3\xe9\x85\xd2'
        bytes_2 = b'\xd2\xdd\x8a\x9c;<\xdai\xc5\x8c\x85\x9c'
        tuple_0 = (dict_1, bytes_2, int_0, dict_1)
        str_2 = 'C |i~Ok'
        int_1 = 160
        int_2 = -2535
        subversion_0 = module_0.Subversion(str_2, tuple_0, set_0, list_0, dict_0, int_1, int_2, int_2)
        float_0 = -574.2473
        float_1 = 512.0
        subversion_1 = module_0.Subversion(bytes_0, subversion_0, list_0, str_1, bool_0, float_0, dict_0, float_1)
        bytes_3 = b'{\x89g\xd3'
        subversion_2 = module_0.Subversion(int_0, set_0, set_0, tuple_0, subversion_1, list_0, float_1, bytes_3)
        bytes_4 = b'\xb7=Dm\xe6v\x85\x02\xb0\xd2\x8a\xfd\x0e\x9d\xdb\x81\x88'
        str_3 = '__main__'
        bool_1 = True
        subversion_3 = module_0.Subversion(bytes_1, subversion_2, bytes_4, dict_1, str_3, dict_1, dict_0, bool_1)
        float_2 = None
        str_4 = 'ansible.modules.subversion'
        bytes_5 = b'\xb6'
        bytes_6 = b'\xb96@J\xffCV\xa6\x8bf\xd8\x11l \x04\xb0|'
        bytes_7 = b'Y\xc6Ox\xde\x88l\x14\xa3S)\xa9\xce'
        str_5 = '__main__'
        tuple_1 = (list_0, bytes_6, bytes_7, str_5)
        subversion_4 = module_0.Subversion(set_0, float_2, str_4, list_0, list_0, bytes_5, float_0, tuple_1)
        var_0 = subversion_2.checkout(str_0)
    except BaseException:
        pass

def test_case_10():
    try:
        int_0 = 656000
        tuple_0 = ()
        bytes_0 = b'\xeb\xdc\xfc\xe9\xf5\xb2\x14\xaf\xa0\xfa\xdc\xa8\x1e\x96\xed\x85L\xd8'
        bool_0 = True
        float_0 = 0.0
        set_0 = {tuple_0}
        str_0 = '>wb|i<'
        set_1 = set()
        subversion_0 = module_0.Subversion(int_0, tuple_0, bytes_0, bool_0, float_0, set_0, str_0, set_1)
        var_0 = subversion_0.has_local_mods()
    except BaseException:
        pass

def test_case_11():
    try:
        dict_0 = None
        dict_1 = {dict_0: dict_0, dict_0: dict_0}
        str_0 = 'sCy^N\x0c'
        bytes_0 = b'\xe4\x1bayZU\n\xc4y\xfd\xa1\xed\xcf\xe5'
        int_0 = -2864
        set_0 = None
        str_1 = "|GeP:z39Z%>'"
        bool_0 = False
        list_0 = []
        bytes_1 = b'\x04\xd3\xe9\x85\xd2'
        bytes_2 = b'\xd2\xdd\x8a\x9c;<\xdai\xc5\x8c\x85\x9c'
        tuple_0 = (dict_1, bytes_2, int_0, dict_1)
        str_2 = 'C |i~Ok'
        int_1 = 160
        int_2 = -2535
        subversion_0 = module_0.Subversion(str_2, tuple_0, set_0, list_0, dict_0, int_1, int_2, int_2)
        float_0 = -574.2473
        float_1 = 512.0
        subversion_1 = module_0.Subversion(bytes_0, subversion_0, list_0, str_1, bool_0, float_0, dict_0, float_1)
        bytes_3 = b'{\x89g\xd3'
        subversion_2 = module_0.Subversion(int_0, set_0, set_0, tuple_0, subversion_1, list_0, float_1, bytes_3)
        bytes_4 = b'\xb7=Dm\xe6v\x85\x02\xb0\xd2\x8a\xfd\x0e\x9d\xdb\x81\x88'
        str_3 = '__main__'
        bool_1 = True
        subversion_3 = module_0.Subversion(bytes_1, subversion_2, bytes_4, dict_1, str_3, dict_1, dict_0, bool_1)
        str_4 = '$I)]C5+Qw'
        subversion_4 = module_0.Subversion(bool_1, list_0, subversion_2, dict_0, subversion_3, str_4, subversion_0, set_0)
        bool_2 = True
        str_5 = 's?\x0c#Yth3%tedR<:g^^m'
        int_3 = 511
        subversion_5 = module_0.Subversion(bool_2, str_5, int_2, int_3, bytes_4, dict_0, dict_0, dict_0)
        var_0 = subversion_0.export(str_0)
    except BaseException:
        pass