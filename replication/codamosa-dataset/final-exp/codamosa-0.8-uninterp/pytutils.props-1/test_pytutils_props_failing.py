# Automatically generated by Pynguin.
import pytutils.props as module_0

def test_case_0():
    try:
        bool_0 = True
        str_0 = 'C>@7chq`'
        int_0 = -255
        roclassproperty_0 = module_0.roclassproperty(int_0)
        var_0 = roclassproperty_0.__get__(bool_0, str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        list_0 = None
        bool_0 = None
        bytes_0 = b'\xd8\x15\xe1\xf8Gt\t\x7f\x0co\xf3\xa7sq\xc0Q'
        setterproperty_0 = module_0.setterproperty(bytes_0)
        var_0 = setterproperty_0.__set__(list_0, bool_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = "\n    A marker to indicate a LazyModule type.\n    Allows us to check module's with `isinstance(mod, _LazyModuleMarker)`\n    to know if the module is lazy.\n    "
        var_0 = module_0.lazyclassproperty(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'YT:*DT"<A\\{8g'
        roclassproperty_0 = module_0.roclassproperty(str_0)
        list_0 = [roclassproperty_0, roclassproperty_0, roclassproperty_0]
        bool_0 = False
        dict_0 = None
        setterproperty_0 = module_0.setterproperty(dict_0, bool_0)
        tuple_0 = (bool_0, dict_0, setterproperty_0, dict_0)
        setterproperty_1 = module_0.setterproperty(tuple_0)
        var_0 = setterproperty_1.__set__(roclassproperty_0, list_0)
    except BaseException:
        pass