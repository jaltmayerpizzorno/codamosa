# Automatically generated by Pynguin.
import sanic.mixins.routes as module_0

def test_case_0():
    try:
        str_0 = '\n    In *Sanic* terminology, a **Blueprint** is a logical collection of\n    URLs that perform a specific set of tasks which can be identified by\n    a unique name.\n\n    It is the main tool for grouping functionality and similar endpoints.\n\n    `See user guide re: blueprints\n    <https://sanicframework.org/guide/best-practices/blueprints.html>`__\n\n    :param name: unique name of the blueprint\n    :param url_prefix: URL to be prefixed before all route URLs\n    :param host: IP Address of FQDN for the sanic server to use.\n    :param version: Blueprint Version\n    :param strict_slashes: Enforce the API urls are requested with a\n        training */*\n    '
        bytes_0 = b''
        list_0 = []
        route_mixin_0 = module_0.RouteMixin(*list_0)
        var_0 = route_mixin_0.static(str_0, str_0, bytes_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '#\n%CPW\tFo=n'
        route_mixin_0 = module_0.RouteMixin()
        var_0 = route_mixin_0.add_route(str_0, str_0, str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        route_mixin_0 = module_0.RouteMixin()
        str_0 = ''
        var_0 = route_mixin_0.add_route(str_0, str_0, str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'z\n%C\x0bW\tFo=n'
        route_mixin_0 = module_0.RouteMixin()
        int_0 = 273
        list_0 = [str_0, str_0, int_0]
        route_mixin_1 = module_0.RouteMixin(*list_0)
        str_1 = '\\${(.+?)}'
        str_2 = '>XjB@n[Eb'
        dict_0 = {str_0: int_0, str_1: route_mixin_0, str_1: route_mixin_0, str_2: route_mixin_0}
        str_3 = '2kd z;O'
        tuple_0 = (dict_0, str_3)
        str_4 = ':;wT/tE>ee^`Q,(nX'
        var_0 = route_mixin_1.add_route(tuple_0, str_4, str_2)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'f6wUQ(&f34GK'
        route_mixin_0 = module_0.RouteMixin()
        int_0 = 300
        list_0 = [str_0, str_0, int_0]
        bool_0 = False
        var_0 = route_mixin_0.post(str_0, str_0)
        list_1 = [var_0, str_0, route_mixin_0, list_0]
        iterable_0 = None
        var_1 = route_mixin_0.add_route(list_1, str_0, iterable_0, bool_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'S>$sk'
        int_0 = 227
        route_mixin_0 = module_0.RouteMixin()
        var_0 = route_mixin_0.options(str_0, int_0)
        str_1 = ']2H'
        var_1 = route_mixin_0.add_route(str_1, str_1)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'xF%oOy{&6\\\nVAAk'
        int_0 = 227
        route_mixin_0 = module_0.RouteMixin()
        var_0 = route_mixin_0.options(str_0, int_0)
        str_1 = 'recv_buffer'
        int_1 = 300
        var_1 = route_mixin_0.delete(str_1, str_0, int_1)
        str_2 = ']2)'
        str_3 = 'error_console'
        int_2 = -1189
        var_2 = route_mixin_0.add_route(str_2, str_3, int_0, int_2)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = '#\n%CPW\tFo=n'
        route_mixin_0 = module_0.RouteMixin()
        str_1 = ''
        str_2 = '@=e\tf$aqkOc@Ej'
        var_0 = route_mixin_0.websocket(str_2, str_1)
        var_1 = route_mixin_0.add_route(str_0, str_1, str_1)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = '*H)+r\nX|'
        int_0 = -1141
        dict_0 = {}
        route_mixin_0 = module_0.RouteMixin(**dict_0)
        var_0 = route_mixin_0.head(str_0, str_0)
        route_mixin_1 = module_0.RouteMixin()
        var_1 = route_mixin_1.options(str_0, int_0)
        str_1 = ' body not consumed.'
        var_2 = route_mixin_1.post(str_1)
        bool_0 = False
        none_type_0 = None
        var_3 = route_mixin_1.add_websocket_route(bool_0, str_1, none_type_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = " xX0o'N~De"
        route_mixin_0 = module_0.RouteMixin()
        var_0 = route_mixin_0.add_route(route_mixin_0, str_0)
    except BaseException:
        pass

def test_case_10():
    try:
        route_mixin_0 = module_0.RouteMixin()
        str_0 = ''
        bool_0 = True
        var_0 = route_mixin_0.add_route(bool_0, str_0, str_0, str_0)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = "4tS6v'HAdy<!M|1?]zSb"
        str_1 = 'EZs'
        dict_0 = {str_0: str_0}
        route_mixin_0 = module_0.RouteMixin(**dict_0)
        var_0 = route_mixin_0.add_websocket_route(str_1, str_0)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = '#\n%CPW\tFo=n'
        route_mixin_0 = module_0.RouteMixin()
        int_0 = 300
        list_0 = [str_0, str_0, int_0]
        route_mixin_1 = module_0.RouteMixin(*list_0)
        iterable_0 = None
        var_0 = route_mixin_1.add_route(list_0, str_0, iterable_0, str_0, int_0)
    except BaseException:
        pass

def test_case_13():
    try:
        route_mixin_0 = module_0.RouteMixin()
        var_0 = None
        var_1 = lambda : var_0
        str_0 = '/'
        str_1 = 'GET'
        str_2 = [str_1]
        str_3 = '0.0.0.0'
        bool_0 = True
        var_2 = route_mixin_0.add_route(var_1, str_0, str_2, str_3, var_0, var_0, var_0)
    except BaseException:
        pass

def test_case_14():
    try:
        tuple_0 = ()
        bytes_0 = None
        float_0 = 1633.83
        route_mixin_0 = module_0.RouteMixin()
        var_0 = route_mixin_0.static(tuple_0, bytes_0, float_0)
    except BaseException:
        pass

def test_case_15():
    try:
        route_mixin_0 = module_0.RouteMixin()
        int_0 = 296
        route_mixin_1 = module_0.RouteMixin()
        str_0 = 'qNS26Fba&91\\b{ R|#y'
        var_0 = route_mixin_1.add_route(str_0, str_0, str_0, int_0)
    except BaseException:
        pass

def test_case_16():
    try:
        str_0 = '4oF18l\x0b'
        route_mixin_0 = module_0.RouteMixin()
        var_0 = route_mixin_0.post(str_0)
        var_1 = route_mixin_0.put(str_0)
        str_1 = 'xF%oOy{&6\\\nVAAk'
        str_2 = 'S>$sk'
        int_0 = 236
        var_2 = route_mixin_0.post(str_1, str_0)
        route_mixin_1 = module_0.RouteMixin()
        var_3 = route_mixin_1.options(str_2, int_0)
        route_mixin_2 = module_0.RouteMixin()
        str_3 = 'Svr##zt'
        var_4 = route_mixin_1.patch(str_3, int_0)
        str_4 = 'AZemCL1<LLh6)elIRtI'
        route_mixin_3 = module_0.RouteMixin()
        var_5 = route_mixin_1.route(str_4, route_mixin_3, str_3, int_0)
        optional_0 = None
        var_6 = route_mixin_1.websocket(str_1, optional_0, str_1)
        str_5 = '.2)'
        int_1 = -2085
        var_7 = route_mixin_1.add_route(str_5, str_1, int_0, int_1)
    except BaseException:
        pass