# Automatically generated by Pynguin.
import ansible.module_utils.facts.collector as module_0

def test_case_0():
    pass

def test_case_1():
    int_0 = 1196
    base_fact_collector_0 = module_0.BaseFactCollector(int_0)
    var_0 = base_fact_collector_0.collect_with_namespace()

def test_case_2():
    dict_0 = None
    var_0 = module_0.collector_classes_from_gather_subset(dict_0)

def test_case_3():
    dict_0 = None
    str_0 = '5>F,'
    list_0 = [dict_0]
    var_0 = module_0.collector_classes_from_gather_subset(dict_0, list_0, str_0)

def test_case_4():
    base_fact_collector_0 = module_0.BaseFactCollector()
    var_0 = base_fact_collector_0.collect_with_namespace()
    list_0 = [base_fact_collector_0]
    cycle_found_in_fact_deps_0 = module_0.CycleFoundInFactDeps()
    var_1 = module_0.collector_classes_from_gather_subset(list_0, cycle_found_in_fact_deps_0)
    collector_not_found_error_0 = module_0.CollectorNotFoundError(*list_0)
    base_fact_collector_1 = module_0.BaseFactCollector(cycle_found_in_fact_deps_0)

def test_case_5():
    dict_0 = None
    var_0 = module_0.collector_classes_from_gather_subset(dict_0)
    unresolved_fact_dep_0 = None
    base_fact_collector_0 = module_0.BaseFactCollector(unresolved_fact_dep_0)

def test_case_6():
    dict_0 = None
    bytes_0 = b'\t\xb4!\xe8u\xd6\xa8\xe8\xf8KX\xa7\x85M\xd2'
    var_0 = module_0.collector_classes_from_gather_subset(dict_0, bytes_0)

def test_case_7():
    str_0 = ''
    bytes_0 = b''
    list_0 = [bytes_0, str_0, bytes_0]
    base_fact_collector_0 = module_0.BaseFactCollector(bytes_0, list_0)
    var_0 = base_fact_collector_0.collect_with_namespace()

def test_case_8():
    bool_0 = False
    var_0 = module_0.collector_classes_from_gather_subset(bool_0)
    int_0 = None
    str_0 = 'dulMu*U~QG)(X2'
    int_1 = 4
    bytes_0 = b'\xf9p\xcf\xd1v\x03&\x0b'
    cycle_found_in_fact_deps_0 = module_0.CycleFoundInFactDeps()
    base_fact_collector_0 = module_0.BaseFactCollector()
    var_1 = base_fact_collector_0.collect(cycle_found_in_fact_deps_0)
    str_1 = '@Y\\K@S}IPRFn|1u'
    var_2 = base_fact_collector_0.collect_with_namespace(str_1, cycle_found_in_fact_deps_0)
    base_fact_collector_1 = module_0.BaseFactCollector()
    tuple_0 = (int_1, base_fact_collector_1, bytes_0)
    var_3 = module_0.resolve_requires(str_0, str_0)
    str_2 = 'fIq8p02r>b!TF<K~+]r'
    var_4 = base_fact_collector_1.collect_with_namespace(str_2)
    var_5 = module_0.collector_classes_from_gather_subset(int_0, str_0, tuple_0)

def test_case_9():
    base_fact_collector_0 = module_0.BaseFactCollector()
    float_0 = 2966.348047
    base_fact_collector_1 = module_0.BaseFactCollector(float_0)
    var_0 = base_fact_collector_0.collect()
    cycle_found_in_fact_deps_0 = module_0.CycleFoundInFactDeps()
    collector_not_found_error_0 = module_0.CollectorNotFoundError()
    int_0 = 400
    var_1 = base_fact_collector_1.collect(int_0)
    str_0 = 'l74~=!\\'
    dict_0 = None
    var_2 = module_0.get_collector_names(str_0, dict_0, str_0)

def test_case_10():
    str_0 = 'a'
    str_1 = '2'
    str_2 = 'b'
    str_3 = '2'
    str_4 = '3'
    str_5 = 'c'
    str_6 = '3'
    str_7 = 'HostName: not set'
    dict_0 = {str_1: str_3, str_6: str_4, str_5: str_0, str_2: str_7}
    var_0 = module_0.select_collector_classes(dict_0, dict_0)