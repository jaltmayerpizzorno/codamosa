# Automatically generated by Pynguin.
import flutes.iterator as module_0

def test_case_0():
    try:
        range_0 = module_0.Range()
    except BaseException:
        pass

def test_case_1():
    try:
        tuple_0 = ()
        int_0 = -2029
        map_list_0 = module_0.MapList(tuple_0, int_0)
        bytes_0 = b'\x06%BR'
        str_0 = '+}"l609LL7c1M'
        dict_0 = {str_0: tuple_0, str_0: map_list_0, str_0: str_0}
        var_0 = module_0.scanr(bytes_0, dict_0)
        var_1 = map_list_0.__getitem__(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        set_0 = set()
        str_0 = '9%TlIfaAv[\r*uDwM&'
        str_1 = None
        dict_0 = {str_0: str_0, str_0: set_0, str_0: set_0, str_1: str_0}
        tuple_0 = ()
        list_0 = [set_0, dict_0, tuple_0]
        var_0 = module_0.scanr(set_0, dict_0, *list_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = ',^ WbMR['
        lazy_list_0 = module_0.LazyList(str_0)
        map_list_0 = module_0.MapList(str_0, lazy_list_0)
        int_0 = map_list_0.__len__()
    except BaseException:
        pass

def test_case_4():
    try:
        float_0 = 1349.0
        list_0 = [float_0, float_0]
        range_0 = module_0.Range(*list_0)
        int_0 = range_0.__next__()
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'C;|ug=wlS6>L\x0bDDH\\'
        bool_0 = True
        list_0 = [bool_0, bool_0, bool_0]
        range_0 = module_0.Range(*list_0)
        var_0 = range_0.__getitem__(str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        bool_0 = False
        int_0 = -2802
        iterator_0 = module_0.chunk(int_0, bool_0)
        iterator_1 = module_0.chunk(int_0, iterator_0)
        lazy_list_0 = module_0.LazyList(iterator_1)
        var_0 = lazy_list_0.__getitem__(bool_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'm8R%9vQ'
        tuple_0 = ()
        int_0 = -2029
        map_list_0 = module_0.MapList(tuple_0, int_0)
        bytes_0 = b'\x06%BR'
        str_1 = '+}"l609LL7c1M'
        dict_0 = {str_0: tuple_0, str_1: map_list_0, str_1: str_1}
        var_0 = module_0.scanr(bytes_0, dict_0)
    except BaseException:
        pass

def test_case_8():
    try:
        int_0 = -1954
        list_0 = [int_0, int_0, int_0]
        range_0 = module_0.Range(*list_0)
        iterator_0 = range_0.__iter__()
        lazy_list_0 = module_0.LazyList(iterator_0)
        bytes_0 = None
        var_0 = lazy_list_0.__getitem__(bytes_0)
    except BaseException:
        pass

def test_case_9():
    try:
        bool_0 = False
        int_0 = -1954
        list_0 = [int_0, int_0, bool_0, int_0, int_0, bool_0, bool_0]
        range_0 = module_0.Range(*list_0)
    except BaseException:
        pass

def test_case_10():
    try:
        iterator_0 = None
        int_0 = 999
        list_0 = [int_0]
        lazy_list_0 = module_0.LazyList(list_0)
        var_0 = lazy_list_0.__getitem__(iterator_0)
    except BaseException:
        pass

def test_case_11():
    try:
        int_0 = -1007
        list_0 = [int_0]
        range_0 = module_0.Range(*list_0)
        iterator_0 = module_0.drop_until(int_0, range_0)
        var_0 = list(iterator_0)
        str_0 = 'a'
        var_1 = list(iterator_0)
        var_2 = lambda x: x == str_0
        iterator_1 = module_0.drop_until(var_2, str_0)
        var_3 = list(iterator_1)
    except BaseException:
        pass

def test_case_12():
    try:
        bytes_0 = b'\x98\t\xb7N\xa4\x88\xa4g:'
        lazy_list_0 = module_0.LazyList(bytes_0)
        int_0 = -1852
        var_0 = lazy_list_0.__getitem__(int_0)
    except BaseException:
        pass

def test_case_13():
    try:
        bool_0 = False
        int_0 = -2802
        int_1 = 6
        iterator_0 = module_0.chunk(int_0, bool_0)
        iterator_1 = module_0.chunk(int_1, iterator_0)
        lazy_list_0 = module_0.LazyList(iterator_1)
        var_0 = lazy_list_0.__getitem__(bool_0)
    except BaseException:
        pass

def test_case_14():
    try:
        bool_0 = True
        int_0 = -1947
        list_0 = [int_0, int_0, int_0]
        range_0 = module_0.Range(*list_0)
        list_1 = [bool_0, list_0, range_0]
        float_0 = -959.196145
        iterator_0 = module_0.split_by(list_1, criterion=float_0)
        str_0 = 'BLOCKSIZE'
        int_1 = range_0.__len__()
        iterator_1 = module_0.chunk(int_1, str_0)
        lazy_list_0 = module_0.LazyList(iterator_0)
        var_0 = lazy_list_0.__getitem__(int_1)
    except BaseException:
        pass

def test_case_15():
    try:
        int_0 = 2
        iterator_0 = module_0.drop(int_0, int_0)
        var_0 = list(iterator_0)
    except BaseException:
        pass

def test_case_16():
    try:
        bool_0 = False
        int_0 = -1954
        list_0 = [int_0, int_0, int_0]
        range_0 = module_0.Range(*list_0)
        var_0 = range_0.__getitem__(int_0)
        int_1 = -2802
        iterator_0 = None
        iterator_1 = module_0.chunk(int_1, bool_0)
        iterator_2 = module_0.chunk(int_1, iterator_0)
        iterator_3 = None
        lazy_list_0 = module_0.LazyList(iterator_3)
    except BaseException:
        pass

def test_case_17():
    try:
        int_0 = -1028
        var_0 = range(int_0)
        iterator_0 = module_0.drop_until(var_0, var_0)
        bytes_0 = b'\x7fE\xbb\xa4\x1fy\xf1\xae'
        var_1 = list(iterator_0)
        int_1 = -1557
        iterable_0 = None
        iterator_1 = module_0.chunk(int_1, iterable_0)
        var_2 = lambda x: x > int_0
        var_3 = list(iterator_0)
        var_4 = lambda x: x == bytes_0
        iterator_2 = module_0.drop(int_1, iterable_0)
        var_5 = list(iterator_2)
    except BaseException:
        pass

def test_case_18():
    try:
        int_0 = 735
        iterator_0 = module_0.chunk(int_0, int_0)
        iterable_0 = None
        iterator_1 = module_0.split_by(iterable_0)
        lazy_list_0 = module_0.LazyList(iterator_1)
        float_0 = 1930.403
        var_0 = lazy_list_0.__getitem__(float_0)
    except BaseException:
        pass

def test_case_19():
    try:
        int_0 = 0
        str_0 = ' Split by: '
        bool_0 = True
        iterator_0 = module_0.split_by(str_0, bool_0, criterion=int_0)
        var_0 = list(iterator_0)
    except BaseException:
        pass

def test_case_20():
    try:
        int_0 = -1996
        list_0 = [int_0, int_0, int_0]
        range_0 = module_0.Range(*list_0)
        iterator_0 = range_0.__iter__()
        float_0 = -959.196145
        int_1 = 171
        iterator_1 = module_0.chunk(int_1, range_0)
        lazy_list_0 = module_0.LazyList(iterator_1)
        var_0 = lazy_list_0.__getitem__(float_0)
    except BaseException:
        pass

def test_case_21():
    try:
        bool_0 = True
        int_0 = -2805
        iterator_0 = None
        str_0 = "=Bf-'PJMR,)Z\n{{4"
        int_1 = 1
        iterator_1 = module_0.chunk(int_1, int_0)
        iterable_0 = None
        map_list_0 = module_0.MapList(str_0, iterator_0)
        iterator_2 = module_0.split_by(iterable_0, bool_0, separator=bool_0)
        lazy_list_0 = module_0.LazyList(iterator_2)
        dict_0 = None
        var_0 = lazy_list_0.__getitem__(dict_0)
    except BaseException:
        pass

def test_case_22():
    try:
        range_0 = None
        list_0 = [range_0]
        str_0 = 'Y%qCB"^STB:'
        str_1 = ''
        dict_0 = {str_1: str_1}
        var_0 = module_0.scanr(str_0, dict_0, *list_0)
    except BaseException:
        pass

def test_case_23():
    try:
        int_0 = 3
        int_1 = 10
        var_0 = range(int_1)
        iterator_0 = module_0.chunk(int_0, var_0)
        var_1 = list(iterator_0)
        iterator_1 = module_0.chunk(int_1, var_0)
        var_2 = list(iterator_1)
        int_2 = 11
        var_3 = range(int_1)
        iterator_2 = module_0.chunk(int_2, var_3)
        var_4 = list(iterator_2)
        int_3 = 1
        var_5 = range(int_1)
        iterator_3 = module_0.chunk(int_3, var_5)
        var_6 = list(iterator_3)
        int_4 = 0
        var_7 = range(int_1)
        iterator_4 = module_0.chunk(int_4, var_7)
        var_8 = list(iterator_4)
    except BaseException:
        pass

def test_case_24():
    try:
        int_0 = 5
        int_1 = 10
        var_0 = range(int_1)
        iterator_0 = module_0.take(int_0, var_0)
        var_1 = list(iterator_0)
        int_2 = 15
        iterator_1 = module_0.take(int_2, int_2)
        var_2 = list(iterator_1)
    except BaseException:
        pass

def test_case_25():
    try:
        int_0 = 5
        int_1 = 10
        var_0 = range(int_1)
        iterator_0 = module_0.take(int_0, var_0)
        var_1 = list(iterator_0)
        int_2 = 15
        var_2 = range(int_1)
        iterator_1 = module_0.take(int_2, var_2)
        var_3 = list(iterator_1)
        var_4 = range(int_0)
        iterator_2 = module_0.take(int_0, var_4)
        var_5 = list(iterator_2)
        int_3 = 0
        var_6 = range(int_1)
        iterator_3 = module_0.take(int_3, var_6)
        var_7 = list(iterator_3)
        int_4 = -1
        var_8 = range(int_1)
        iterator_4 = module_0.take(int_4, var_8)
        var_9 = list(iterator_4)
    except BaseException:
        pass

def test_case_26():
    try:
        int_0 = -1011
        var_0 = range(int_0)
        iterator_0 = module_0.drop_until(int_0, var_0)
        var_1 = list(iterator_0)
        str_0 = 'bc'
        iterator_1 = module_0.drop_until(iterator_0, str_0)
        var_2 = list(iterator_1)
    except BaseException:
        pass

def test_case_27():
    try:
        bytes_0 = b'\x7f"\xa4y\xae'
        lazy_list_0 = module_0.LazyList(bytes_0)
        var_0 = lazy_list_0.__iter__()
        var_1 = list(var_0)
        str_0 = 'a'
        var_2 = lambda x: x == str_0
        var_3 = lazy_list_0.__len__()
        iterator_0 = module_0.drop_until(var_2, str_0)
        var_4 = list(iterator_0)
    except BaseException:
        pass

def test_case_28():
    try:
        int_0 = -1011
        var_0 = lambda x: x > int_0
        iterator_0 = module_0.drop_until(var_0, var_0)
        bytes_0 = b'\x7f"\xbb\xa4\xb4y\xf1\xae'
        lazy_list_0 = module_0.LazyList(bytes_0)
        var_1 = lazy_list_0.__iter__()
        var_2 = list(var_1)
        var_3 = list(lazy_list_0)
        str_0 = 'abc'
        var_4 = lambda x: x == str_0
        str_1 = 'bc'
        var_5 = lazy_list_0.__len__()
        iterator_1 = module_0.drop_until(var_4, str_1)
        var_6 = list(iterator_1)
    except BaseException:
        pass

def test_case_29():
    try:
        int_0 = 5
        var_0 = lambda x: x > int_0
        int_1 = -1011
        var_1 = range(int_1)
        var_2 = range(int_1)
        iterator_0 = module_0.drop_until(var_1, var_2)
        bytes_0 = b'\x7fE\xbb\xa4\x1fy\xf1\xae'
        lazy_list_0 = module_0.LazyList(bytes_0)
        var_3 = lazy_list_0.__iter__()
        var_4 = list(iterator_0)
        int_2 = -1557
        iterable_0 = None
        bool_0 = False
        var_5 = lazy_list_0.__getitem__(bool_0)
        iterator_1 = module_0.chunk(int_2, iterable_0)
        var_6 = lambda x: x > int_0
        var_7 = list(iterator_0)
        var_8 = list(var_3)
        var_9 = lambda x: x == bytes_0
        iterator_2 = module_0.drop(int_0, iterable_0)
        var_10 = list(iterator_2)
    except BaseException:
        pass

def test_case_30():
    try:
        int_0 = 2816
        list_0 = [int_0]
        range_0 = module_0.Range(*list_0)
        iterator_0 = range_0.__iter__()
        iterator_1 = module_0.drop_until(int_0, range_0)
        bytes_0 = b"\xd3\xd8'\x81@\x11HE"
        lazy_list_0 = module_0.LazyList(bytes_0)
        var_0 = lazy_list_0.__iter__()
        var_1 = list(var_0)
        int_1 = -4881
        iterable_0 = None
        iterator_2 = module_0.drop(int_1, iterable_0)
        int_2 = 969
        iterator_3 = module_0.take(int_2, iterable_0)
        var_2 = list(iterator_1)
    except BaseException:
        pass