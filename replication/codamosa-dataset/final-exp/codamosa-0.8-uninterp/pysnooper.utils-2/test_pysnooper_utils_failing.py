# Automatically generated by Pynguin.
import pysnooper.utils as module_0

def test_case_0():
    try:
        str_0 = 'rb'
        list_0 = [str_0]
        list_1 = [list_0, str_0, list_0]
        var_0 = module_0.get_repr_function(list_1, list_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = b'\x89\xa1j\x87c\x02\xeb\xe5\xd1\xa3\xabF=\xa4\xe0'
        var_0 = module_0.normalize_repr(bytes_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b''
        list_0 = [bytes_0, bytes_0, bytes_0]
        var_0 = module_0.truncate(list_0, list_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '<+'
        dict_0 = {str_0: str_0}
        list_0 = [dict_0, dict_0, str_0]
        var_0 = module_0.get_repr_function(dict_0, list_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = '[=48b'
        int_0 = -1449
        dict_0 = {str_0: str_0, str_0: str_0, int_0: int_0}
        var_0 = module_0.ensure_tuple(str_0)
        str_1 = 'hZh\x0b%YlE7)g\nvY'
        float_0 = 2174.491
        var_1 = module_0.ensure_tuple(float_0)
        list_0 = [dict_0, str_1, dict_0, int_0]
        list_1 = []
        var_2 = module_0.get_shortish_repr(dict_0, list_0, list_1)
    except BaseException:
        pass

def test_case_5():
    try:
        int_0 = None
        var_0 = module_0.get_shortish_repr(int_0)
        str_0 = 'EX\t\x0c'
        float_0 = -1227.0
        var_1 = module_0.truncate(str_0, float_0)
    except BaseException:
        pass

def test_case_6():
    try:
        int_0 = 144
        var_0 = module_0.ensure_tuple(int_0)
        float_0 = -2668.28
        list_0 = []
        dict_0 = {}
        var_1 = module_0.get_shortish_repr(list_0, dict_0, float_0)
    except BaseException:
        pass