# Automatically generated by Pynguin.
import pysnooper.utils as module_0

def test_case_0():
    pass

def test_case_1():
    int_0 = None
    var_0 = module_0.get_shortish_repr(int_0)
    str_0 = '762B1H'
    var_1 = module_0.shitcode(str_0)

def test_case_2():
    int_0 = None
    var_0 = module_0.get_shortish_repr(int_0)

def test_case_3():
    int_0 = None
    var_0 = module_0.get_shortish_repr(int_0)
    str_0 = '\x0ce'
    var_1 = module_0.shitcode(str_0)
    str_1 = 'O62?1H'
    var_2 = module_0.shitcode(str_1)
    set_0 = {str_0, var_1, int_0}
    var_3 = module_0.ensure_tuple(set_0)

def test_case_4():
    bool_0 = False
    var_0 = module_0.ensure_tuple(bool_0)

def test_case_5():
    int_0 = None
    var_0 = module_0.get_shortish_repr(int_0)
    str_0 = '\x0ce'
    var_1 = module_0.shitcode(str_0)
    str_1 = 'RqH*(K8,tJEvxA]o?'
    var_2 = module_0.normalize_repr(str_1)
    dict_0 = {str_0: str_0, str_0: var_0}
    bool_0 = True
    var_3 = module_0.truncate(dict_0, bool_0)

def test_case_6():
    int_0 = None
    var_0 = module_0.get_shortish_repr(int_0)
    str_0 = 'V\t7<'
    var_1 = module_0.shitcode(str_0)
    str_1 = 'RqH*(K8StJEvxA]o?'
    var_2 = module_0.normalize_repr(str_1)
    var_3 = module_0.shitcode(str_0)
    bytes_0 = b'd\xfc\xac\x94\x17\x00\n\x80Y\x99\xc9K\xe6tw|9'
    var_4 = module_0.truncate(bytes_0, int_0)

def test_case_7():
    str_0 = 'a\x00bÕÃ\xad'
    var_0 = module_0.shitcode(str_0)

def test_case_8():
    str_0 = 'a'
    var_0 = module_0.shitcode(str_0)
    str_1 = 'ሴ'
    var_1 = module_0.shitcode(str_1)
    str_2 = 'þ'
    var_2 = module_0.shitcode(str_2)
    str_3 = '𒍅'
    var_3 = module_0.shitcode(str_3)