# Automatically generated by Pynguin.
import builtins as module_0
import pymonet.either as module_1

def test_case_0():
    pass

def test_case_1():
    object_0 = module_0.object()
    right_0 = module_1.Right(object_0)

def test_case_2():
    str_0 = '\n        Transform Lazy into Box with constructor_fn result.\n\n        :returns: Box monad with constructor_fn result\n        :rtype: Box[A]\n        '
    set_0 = {str_0, str_0}
    dict_0 = {}
    object_0 = module_0.object(**dict_0)
    bytes_0 = b'gz\xc0j\xfd\xcf\xaf\xcf\xee1\xd6aDl5\xdbb'
    left_0 = module_1.Left(bytes_0)
    var_0 = left_0.ap(object_0)
    right_0 = module_1.Right(set_0)
    bool_0 = right_0.is_right()

def test_case_3():
    str_0 = '{B"Bla'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    float_0 = -3318.8303
    left_0 = module_1.Left(float_0)
    bool_0 = left_0.is_left()
    left_1 = module_1.Left(dict_0)
    dict_1 = {}
    var_0 = left_0.to_validation()
    either_0 = module_1.Either(dict_1)
    var_1 = either_0.to_lazy()
    var_2 = left_1.to_maybe()
    bool_1 = left_1.is_right()
    var_3 = either_0.is_right()

def test_case_4():
    dict_0 = {}
    object_0 = module_0.object(**dict_0)
    int_0 = -1115
    either_0 = module_1.Either(int_0)
    bool_0 = either_0.__eq__(object_0)
    var_0 = None
    left_0 = module_1.Left(var_0)
    bool_1 = left_0.is_left()
    right_0 = module_1.Right(var_0)
    bool_2 = right_0.is_left()

def test_case_5():
    object_0 = module_0.object()
    right_0 = module_1.Right(object_0)
    var_0 = right_0.to_validation()

def test_case_6():
    int_0 = 0
    left_0 = module_1.Left(int_0)
    left_1 = module_1.Left(int_0)
    var_0 = left_0 == left_1
    left_2 = module_1.Left(int_0)
    int_1 = 1
    left_3 = module_1.Left(int_1)
    var_1 = left_2 == left_3
    left_4 = module_1.Left(int_0)
    right_0 = module_1.Right(int_0)
    var_2 = left_4 == right_0
    right_1 = module_1.Right(int_0)
    right_2 = module_1.Right(int_0)
    var_3 = right_1 == right_2
    right_3 = module_1.Right(int_0)
    right_4 = module_1.Right(int_1)
    var_4 = right_3 == right_4
    right_5 = module_1.Right(int_0)
    left_5 = module_1.Left(int_0)
    var_5 = right_5 == left_5