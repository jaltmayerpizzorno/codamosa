# Automatically generated by Pynguin.
import mimesis.providers.choice as module_0

def test_case_0():
    try:
        str_0 = '.healthcare'
        list_0 = []
        choice_0 = module_0.Choice(*list_0)
        var_0 = choice_0.__call__(str_0)
        sequence_0 = None
        bool_0 = None
        var_1 = choice_0.__call__(sequence_0, bool_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '.healthcare'
        list_0 = []
        choice_0 = module_0.Choice(*list_0)
        var_0 = choice_0.__call__(str_0)
        sequence_0 = None
        int_0 = 9999
        var_1 = choice_0.__call__(sequence_0, int_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bool_0 = True
        list_0 = []
        dict_0 = {}
        choice_0 = module_0.Choice(*list_0, **dict_0)
        bytes_0 = b'*\x136\x97\x13q}'
        choice_1 = module_0.Choice()
        var_0 = choice_1.__call__(bytes_0)
        list_1 = [bool_0, bool_0]
        int_0 = 1008
        choice_2 = module_0.Choice()
        str_0 = '.php'
        var_1 = choice_2.__call__(str_0, bool_0)
        var_2 = choice_2.__call__(list_1, int_0, bool_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b''
        choice_0 = module_0.Choice()
        var_0 = choice_0.__call__(bytes_0)
    except BaseException:
        pass

def test_case_4():
    try:
        bool_0 = True
        bytes_0 = b'H\x91-\xb9\xaa\xdb\xe9M\xfd\xcb\x1c\x87\xc3\x9c|\xbe'
        choice_0 = module_0.Choice()
        int_0 = 583
        bool_1 = None
        str_0 = 'ts'
        str_1 = '-(;|mR5F\x0cMEce__"j'
        float_0 = 158.925499
        dict_0 = {bytes_0: choice_0, float_0: str_1}
        tuple_0 = (str_0, str_1, dict_0)
        int_1 = 2904
        var_0 = choice_0.__call__(tuple_0, int_1)
        var_1 = choice_0.__call__(str_0, int_0, bool_1)
        int_2 = 236
        str_2 = '3%\r*`%<#uW'
        int_3 = 3606
        bool_2 = False
        var_2 = choice_0.__call__(str_2, int_3, bool_2)
        var_3 = choice_0.__call__(bytes_0)
        list_0 = [str_0, bytes_0, bool_2, float_0, int_2, choice_0, bool_1]
        var_4 = choice_0.__call__(str_0, bool_0)
        var_5 = choice_0.__call__(list_0, int_2, bool_0)
    except BaseException:
        pass

def test_case_5():
    try:
        choice_0 = module_0.Choice()
        str_0 = '3%\r*`%<#uW'
        int_0 = -960
        bool_0 = False
        var_0 = choice_0.__call__(str_0, int_0, bool_0)
    except BaseException:
        pass