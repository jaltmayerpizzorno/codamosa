# Automatically generated by Pynguin.
import pymonet.utils as module_0

def test_case_0():
    var_0 = None
    var_1 = module_0.identity(var_0)
    var_2 = module_0.identity(var_1)
    var_3 = module_0.identity(var_2)
    var_4 = module_0.identity(var_3)
    var_5 = module_0.identity(var_4)
    var_6 = None
    var_7 = module_0.identity(var_6)
    var_8 = module_0.identity(var_7)
    var_9 = module_0.identity(var_8)
    var_10 = module_0.identity(var_9)

def test_case_1():
    bytes_0 = None
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    str_0 = 'Lazy[T, W]'
    str_1 = '\n        Returns first element of ImmutableList that passed\n        info argument returns True\n\n        :param fn: function to call with ImmutableList value\n        :type fn: Function(A) -> bool\n        :returns: A\n        '
    dict_1 = {str_0: dict_0, str_0: bytes_0, str_1: dict_0}
    tuple_0 = (bytes_0, dict_0, dict_1, str_1)
    var_0 = module_0.pipe(tuple_0)
    int_0 = 625
    int_1 = module_0.increase(int_0)

def test_case_2():
    list_0 = []
    var_0 = module_0.cond(list_0)
    list_1 = []
    list_2 = [var_0, var_0]
    var_1 = module_0.compose(list_1, *list_2)

def test_case_3():
    callable_0 = None
    tuple_0 = ()
    callable_1 = module_0.memoize(callable_0, tuple_0)