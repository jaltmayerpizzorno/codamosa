# Automatically generated by Pynguin.
import docstring_parser.rest as module_0

def test_case_0():
    try:
        str_0 = ':T+R*U/I$?*uoRSI(f.='
        docstring_0 = module_0.parse(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '\n    Hello this is a docstring\n    with multiple lines.\n\n    :param foo: This is foo.\n    :param bar: This is bar.\n    :returns: This is returns\n    :raises Exception: This is raises\n    :yields: This is yields\n    :returns int: This is returns with type\n    :raises Exception int: This is raises with type\n    :yields str: This is yields with type\n    :returns int: This is returns with type\n\n    '
        docstring_0 = module_0.parse(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = "        Short description.\n\n        Long description.\n\n        :param 'ype_name arg_name: parameter description.\n       :param str arg_name\x0b parameter description.\n        :param type_name arg_name: parameter description.\n        :param type_name arg_name: parameter description.\n\n        :return: return value description.\n        :rtype: str\n        :yields type_name: yields description.\n        :yields: yields description.\n        :raises ValueError: if something bad happens.\n        :raises: if something bad happens.\n        "
        docstring_0 = module_0.parse(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '        Short description.\n\n        Long description.\n\n        :param type_name arg_name: parameter description.\n        :param str arg_name: parameter description.\n        :param type_name arg_name: parameter description.\n        :param type_name arg_name: parameter description.\n\n        :return: return value description.\n        :rtype: str\n        :yields type_n\x0bme: yields description.\n        :yields: yields description.\n        :raises ValueError: if something bad happens.\n        :raises: if something bad happens.\n        '
        docstring_0 = module_0.parse(str_0)
    except BaseException:
        pass