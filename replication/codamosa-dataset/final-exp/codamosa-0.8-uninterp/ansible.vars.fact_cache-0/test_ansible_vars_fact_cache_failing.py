# Automatically generated by Pynguin.
import ansible.vars.fact_cache as module_0

def test_case_0():
    try:
        bytes_0 = b''
        dict_0 = {}
        fact_cache_0 = module_0.FactCache(**dict_0)
        var_0 = fact_cache_0.__getitem__(bytes_0)
    except BaseException:
        pass

def test_case_1():
    try:
        fact_cache_0 = module_0.FactCache()
        var_0 = fact_cache_0.flush()
        dict_0 = None
        var_1 = fact_cache_0.__delitem__(dict_0)
    except BaseException:
        pass

def test_case_2():
    try:
        list_0 = []
        fact_cache_0 = module_0.FactCache(*list_0)
        fact_cache_1 = module_0.FactCache(*list_0)
        list_1 = [fact_cache_1, fact_cache_1]
        var_0 = fact_cache_1.__contains__(list_1)
    except BaseException:
        pass

def test_case_3():
    try:
        fact_cache_0 = module_0.FactCache()
        var_0 = fact_cache_0.__iter__()
        bytes_0 = b'\xa7\x04i+\xf3f\xd6\xc0\xef\xe2\x88]\x95\xe2"'
        var_1 = fact_cache_0.__getitem__(bytes_0)
    except BaseException:
        pass

def test_case_4():
    try:
        fact_cache_0 = module_0.FactCache()
        str_0 = 'm'
        var_0 = fact_cache_0.first_order_merge(str_0, fact_cache_0)
        var_1 = fact_cache_0.first_order_merge(str_0, str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        fact_cache_0 = module_0.FactCache()
        str_0 = 'tes'
        var_0 = fact_cache_0.first_order_merge(str_0, str_0)
        var_1 = fact_cache_0.first_order_merge(str_0, str_0)
    except BaseException:
        pass