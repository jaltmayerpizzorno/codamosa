# Automatically generated by Pynguin.
import ansible.module_utils.connection as module_0

def test_case_0():
    try:
        int_0 = -2929
        list_0 = []
        var_0 = module_0.write_to_file_descriptor(int_0, list_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bool_0 = False
        list_0 = [bool_0]
        var_0 = module_0.write_to_file_descriptor(bool_0, list_0)
        connection_error_0 = module_0.ConnectionError(list_0)
        var_1 = module_0.write_to_file_descriptor(connection_error_0, bool_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b'\xcfO9\xb8\xe1\r'
        connection_error_0 = module_0.ConnectionError(bytes_0)
        var_0 = module_0.request_builder(connection_error_0)
        list_0 = None
        str_0 = "=3D~~:=O'l"
        list_1 = []
        connection_error_1 = module_0.ConnectionError(str_0, *list_1)
        list_2 = []
        var_1 = module_0.send_data(list_0, list_2)
    except BaseException:
        pass

def test_case_3():
    try:
        set_0 = None
        var_0 = module_0.recv_data(set_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'IL\r?%;\n$['
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
        bool_0 = None
        bytes_0 = b'\xff\x93*m\xfc'
        list_0 = [str_0, bool_0, bytes_0, dict_0]
        dict_1 = {str_0: list_0}
        var_0 = module_0.request_builder(bytes_0, *list_0, **dict_1)
        list_1 = [dict_0]
        var_1 = module_0.request_builder(bool_0, *list_1)
        var_2 = module_0.exec_command(str_0, dict_0)
    except BaseException:
        pass

def test_case_5():
    try:
        bool_0 = False
        connection_0 = module_0.Connection(bool_0)
        str_0 = 'u3>DOdC(@%)yNt`K'
        list_0 = []
        dict_0 = {str_0: str_0, str_0: bool_0}
        connection_error_0 = module_0.ConnectionError(bool_0, *list_0, **dict_0)
        var_0 = connection_0.__rpc__(connection_error_0)
    except BaseException:
        pass

def test_case_6():
    try:
        bytes_0 = None
        connection_0 = module_0.Connection(bytes_0)
    except BaseException:
        pass

def test_case_7():
    try:
        bool_0 = False
        connection_0 = module_0.Connection(bool_0)
        var_0 = connection_0.__rpc__(connection_0)
    except BaseException:
        pass

def test_case_8():
    try:
        float_0 = 0.0001
        bytes_0 = b'\xd7\xe5'
        connection_0 = module_0.Connection(bytes_0)
        var_0 = connection_0.__rpc__(float_0)
    except BaseException:
        pass

def test_case_9():
    try:
        bool_0 = False
        connection_0 = module_0.Connection(bool_0)
        var_0 = connection_0.__rpc__(bool_0)
    except BaseException:
        pass

def test_case_10():
    try:
        int_0 = None
        str_0 = 'N`V/c>W)0m\nExA4q#'
        list_0 = [int_0, str_0, str_0]
        bytes_0 = b'\xde;\xd2'
        connection_0 = module_0.Connection(bytes_0)
        var_0 = connection_0.send(list_0)
    except BaseException:
        pass

def test_case_11():
    try:
        bool_0 = False
        connection_0 = module_0.Connection(bool_0)
        var_0 = module_0.recv_data(connection_0)
    except BaseException:
        pass

def test_case_12():
    try:
        dict_0 = {}
        connection_0 = module_0.Connection(dict_0)
        list_0 = None
        float_0 = -1864.2002187557287
        connection_error_0 = module_0.ConnectionError(float_0)
        str_0 = 'invalid json-rpc id received'
        dict_1 = {str_0: list_0, str_0: float_0, str_0: float_0}
        var_0 = connection_0.__getattr__(dict_1)
    except BaseException:
        pass