# Automatically generated by Pynguin.
import tornado.escape as module_0

def test_case_0():
    try:
        bytes_0 = b'\xf5\xb0\x11\x87\xb9\x98\x83e\xcaD\xa1M\xa1\x81\x94\xff('
        str_0 = module_0.xhtml_escape(bytes_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'http://www.facebook.com/profile?=dickbutt'
        str_1 = module_0.linkify(str_0)
        str_2 = module_0.linkify(str_0, str_0)
        str_3 = 'Email me at me@example.com or at you@example.com'
        any_0 = module_0.json_decode(str_3)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'MePA\t<'
        str_1 = module_0.linkify(str_0, str_0)
        bytes_0 = b'\xe31\x98\x99\xca\xa5\xea\x80^\xfc\xd4=\x10\x8bZ'
        dict_0 = module_0.parse_qs_bytes(bytes_0)
        list_0 = []
        str_2 = module_0.linkify(bytes_0, list_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bool_0 = True
        optional_0 = module_0.to_unicode(bool_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = '"H|WoBp*~Bx'
        any_0 = module_0.recursive_unicode(str_0)
        bytes_0 = b'\xb5\xc3\xdd{8lXyMQ\xeb\xac\x85$\x98'
        str_1 = module_0.xhtml_unescape(bytes_0)
    except BaseException:
        pass

def test_case_5():
    try:
        tuple_0 = ()
        bytes_0 = b"'0"
        str_0 = 'Closes the file underlying this stream.\n\n        ``close_fd`` is called by `BaseIOStream` and should not be called\n        elsewhere; other users should call `close` instead.\n        '
        optional_0 = module_0.to_unicode(str_0)
        optional_1 = module_0.to_unicode(bytes_0)
        bytes_1 = b'5\x8a.\xd1'
        tuple_1 = (tuple_0, bytes_1)
        set_0 = {tuple_1}
        tuple_2 = (tuple_1, set_0)
        any_0 = module_0.recursive_unicode(tuple_2)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = "Bk {C%'25<j&r'-88."
        bool_0 = True
        str_1 = module_0.linkify(str_0, str_0, bool_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'D'
        bytes_0 = b'!\xc7\x04[\xa3\x80\xdc\x17\x8b\x02\xa0AnX\x9d\x1a\xc2\xc7'
        list_0 = [str_0, str_0, bytes_0]
        optional_0 = module_0.utf8(list_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = '$ttp://www.facebook.com/profile?=dickbutt'
        str_1 = module_0.linkify(str_0)
        str_2 = 'www.facebook.com/profile?=dickbutt'
        str_3 = module_0.linkify(str_2)
        str_4 = '3'
        str_5 = 'Fd'
        list_0 = [str_4, str_5]
        str_6 = module_0.linkify(str_2, str_1, list_0)
    except BaseException:
        pass