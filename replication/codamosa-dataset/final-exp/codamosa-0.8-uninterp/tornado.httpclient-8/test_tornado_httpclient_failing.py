# Automatically generated by Pynguin.
import tornado.httpclient as module_0
import tornado.httputil as module_1
import builtins as module_2

def test_case_0():
    try:
        str_0 = '46L<'
        h_t_t_p_client_0 = module_0.HTTPClient()
        h_t_t_p_response_0 = h_t_t_p_client_0.fetch(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'Q'
        optional_0 = None
        list_0 = []
        none_type_0 = None
        h_t_t_p_request_0 = module_0.HTTPRequest(str_0, str_0, str_0, optional_0, str_0, str_0, list_0, str_0, none_type_0, str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        h_t_t_p_client_0 = module_0.HTTPClient()
        str_0 = 'http://www.google.com/'
        h_t_t_p_response_0 = h_t_t_p_client_0.fetch(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        h_t_t_p_request_0 = None
        int_0 = -1150
        h_t_t_p_headers_0 = module_1.HTTPHeaders()
        h_t_t_p_headers_1 = h_t_t_p_headers_0.copy()
        h_t_t_p_headers_2 = h_t_t_p_headers_1.copy()
        h_t_t_p_headers_3 = h_t_t_p_headers_2.copy()
        h_t_t_p_headers_4 = h_t_t_p_headers_3.copy()
        float_0 = 301.78
        h_t_t_p_response_0 = module_0.HTTPResponse(h_t_t_p_request_0, int_0, h_t_t_p_headers_4, float_0)
    except BaseException:
        pass

def test_case_4():
    try:
        int_0 = 2048
        str_0 = '/DD_'
        str_1 = None
        list_0 = [str_1]
        float_0 = -969.2
        float_1 = 1104.565
        h_t_t_p_request_0 = module_0.HTTPRequest(str_0, str_0, list_0, str_1, float_0, float_1, float_0, int_0, str_0, str_1, str_0, float_1, str_1, float_0)
        bool_0 = False
        h_t_t_p_response_0 = module_0.HTTPResponse(h_t_t_p_request_0, int_0, bool_0, float_1, str_0, float_1)
        h_t_t_p_client_error_0 = module_0.HTTPClientError(int_0)
        str_2 = h_t_t_p_client_error_0.__str__()
        module_0.main()
    except BaseException:
        pass

def test_case_5():
    try:
        h_t_t_p_client_0 = module_0.HTTPClient()
        module_0.main()
    except BaseException:
        pass

def test_case_6():
    try:
        h_t_t_p_client_0 = module_0.HTTPClient()
        module_0.main()
    except BaseException:
        pass

def test_case_7():
    try:
        float_0 = -3757.9899
        h_t_t_p_client_0 = module_0.HTTPClient(float_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = 'PG!q0:e"'
        bool_0 = False
        int_0 = -1728
        h_t_t_p_request_0 = None
        int_1 = -1203
        base_exception_0 = module_2.BaseException()
        list_0 = [base_exception_0, int_0]
        none_type_0 = None
        h_t_t_p_response_0 = module_0.HTTPResponse(h_t_t_p_request_0, int_1, base_exception_0, list_0, str_0, none_type_0)
        h_t_t_p_request_1 = module_0.HTTPRequest(str_0, str_0, str_0, bool_0, str_0, str_0, int_0, str_0, bool_0, bool_0)
    except BaseException:
        pass

def test_case_9():
    try:
        h_t_t_p_client_0 = module_0.HTTPClient()
        h_t_t_p_client_0.close()
        h_t_t_p_client_0.__del__()
        h_t_t_p_client_1 = module_0.HTTPClient()
        str_0 = 'd{ut\n'
        none_type_0 = None
        optional_0 = None
        bool_0 = True
        bytes_0 = b'\xff\xd7\xdc\xe7\xaeL\xce\xd3\xe0l\xa8\xd3x\xca\xde'
        h_t_t_p_request_0 = module_0.HTTPRequest(str_0, str_0, none_type_0, optional_0, str_0, bool_0, str_0, bytes_0)
        dict_0 = {}
        h_t_t_p_client_2 = module_0.HTTPClient(**dict_0)
        int_0 = 102
        h_t_t_p_response_0 = module_0.HTTPResponse(h_t_t_p_request_0, int_0, str_0)
        h_t_t_p_response_0.rethrow()
    except BaseException:
        pass

def test_case_10():
    try:
        h_t_t_p_client_0 = module_0.HTTPClient()
        h_t_t_p_client_0.close()
        h_t_t_p_client_0.__del__()
        h_t_t_p_client_1 = module_0.HTTPClient()
        str_0 = 'd{ut\n'
        bool_0 = False
        optional_0 = None
        h_t_t_p_request_0 = module_0.HTTPRequest(str_0, str_0, str_0, str_0, optional_0, str_0, str_0, str_0, str_0)
        str_1 = '__main__'
        str_2 = '3K_mI+d]hvjOT'
        dict_0 = {str_0: bool_0, str_1: h_t_t_p_client_1, str_2: str_1}
        h_t_t_p_response_0 = h_t_t_p_client_1.fetch(h_t_t_p_request_0, **dict_0)
    except BaseException:
        pass