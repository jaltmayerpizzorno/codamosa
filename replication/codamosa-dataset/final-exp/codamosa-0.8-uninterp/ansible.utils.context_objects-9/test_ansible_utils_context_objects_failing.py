# Automatically generated by Pynguin.
import ansible.utils.context_objects as module_0

def test_case_0():
    try:
        bool_0 = False
        c_l_i_args_0 = module_0.CLIArgs(bool_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'gGY5>t[BFy]vnv,>['
        bool_0 = False
        tuple_0 = (str_0, str_0, bool_0)
        dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0, tuple_0: str_0, tuple_0: tuple_0}
        c_l_i_args_0 = module_0.CLIArgs(dict_0)
        bytes_0 = b'_\x0e\xb0\xc4t\x15\xa1\xc3&\xf9%\xb0\x8b\xcb\xaa1'
        global_c_l_i_args_0 = module_0.GlobalCLIArgs(bytes_0)
        int_0 = 892
        global_c_l_i_args_1 = module_0.GlobalCLIArgs(int_0)
        c_l_i_args_1 = module_0.CLIArgs(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        float_0 = -1320.2
        global_c_l_i_args_0 = module_0.GlobalCLIArgs(float_0)
        str_0 = None
        global_c_l_i_args_1 = module_0.GlobalCLIArgs(str_0)
        complex_0 = None
        list_0 = []
        str_1 = ',\x0cyjwW\rBmW'
        str_2 = '2)}tA2cSSCeN!6Gskz'
        set_0 = {str_2, complex_0, str_1}
        tuple_0 = (set_0,)
        str_3 = 'javascript'
        dict_0 = {str_1: list_0, str_2: tuple_0, str_3: str_0}
        c_l_i_args_0 = module_0.CLIArgs(dict_0)
        a_b_c_singleton_0 = module_0._ABCSingleton(complex_0, list_0, list_0, c_l_i_args_0)
    except BaseException:
        pass