# Automatically generated by Pynguin.
import sanic.exceptions as module_0

def test_case_0():
    try:
        int_0 = 406
        var_0 = module_0.abort(int_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = ''
        tuple_0 = ()
        py_file_error_0 = module_0.PyFileError(tuple_0)
        list_0 = [str_0, py_file_error_0, py_file_error_0]
        tuple_1 = (py_file_error_0, list_0)
        sanic_exception_0 = None
        int_0 = 452
        method_not_supported_0 = module_0.MethodNotSupported(tuple_1, sanic_exception_0, int_0)
    except BaseException:
        pass

def test_case_2():
    try:
        content_range_error_0 = None
        set_0 = {content_range_error_0, content_range_error_0, content_range_error_0, content_range_error_0}
        not_found_0 = module_0.NotFound(set_0)
        content_range_error_1 = module_0.ContentRangeError(content_range_error_0, not_found_0)
    except BaseException:
        pass

def test_case_3():
    try:
        int_0 = 724
        py_file_error_0 = module_0.PyFileError(int_0)
        tuple_0 = None
        unauthorized_0 = module_0.Unauthorized(tuple_0)
    except BaseException:
        pass

def test_case_4():
    try:
        int_0 = -1269
        var_0 = module_0.abort(int_0)
    except BaseException:
        pass

def test_case_5():
    try:
        int_0 = None
        bytes_0 = b'\xb0\xfa@\xb8\xb9\xca)\x97~t\x03'
        var_0 = module_0.abort(int_0, bytes_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'Bad chunked encoding'
        list_0 = []
        payload_too_large_0 = module_0.PayloadTooLarge(list_0)
        set_0 = set()
        int_0 = -705
        not_found_0 = module_0.NotFound(int_0)
        int_1 = 1737
        unauthorized_0 = module_0.Unauthorized(set_0, int_1, list_0)
        sanic_exception_0 = module_0.SanicException(list_0)
        dict_0 = {str_0: list_0}
        tuple_0 = ()
        list_1 = [dict_0, dict_0, int_0]
        invalid_signal_0 = None
        invalid_usage_0 = module_0.InvalidUsage(list_1, invalid_signal_0)
        server_error_0 = module_0.ServerError(sanic_exception_0, invalid_usage_0, set_0)
        py_file_error_0 = module_0.PyFileError(server_error_0)
        invalid_usage_1 = None
        not_found_1 = module_0.NotFound(invalid_usage_1, dict_0)
        load_file_exception_0 = module_0.LoadFileException(py_file_error_0, invalid_usage_1)
        content_range_error_0 = module_0.ContentRangeError(tuple_0, unauthorized_0)
    except BaseException:
        pass

def test_case_7():
    try:
        float_0 = 5004.650408
        str_0 = 'Badchnked encoding'
        list_0 = []
        payload_too_large_0 = module_0.PayloadTooLarge(list_0)
        payload_too_large_1 = module_0.PayloadTooLarge(float_0)
        set_0 = {str_0}
        dict_0 = {str_0: payload_too_large_0}
        unauthorized_0 = module_0.Unauthorized(payload_too_large_1, payload_too_large_1, set_0, **dict_0)
        set_1 = set()
        int_0 = -705
        not_found_0 = module_0.NotFound(int_0)
        int_1 = 1737
        unauthorized_1 = module_0.Unauthorized(set_1, int_1, list_0)
        sanic_exception_0 = module_0.SanicException(list_0)
        tuple_0 = (str_0, payload_too_large_0, unauthorized_1, sanic_exception_0)
        payload_too_large_2 = module_0.PayloadTooLarge(tuple_0)
        dict_1 = {str_0: list_0}
        tuple_1 = ()
        u_r_l_build_error_0 = module_0.URLBuildError(dict_1, tuple_1)
        py_file_error_0 = module_0.PyFileError(sanic_exception_0)
        invalid_signal_0 = module_0.InvalidSignal(py_file_error_0)
        method_not_supported_0 = module_0.MethodNotSupported(u_r_l_build_error_0, dict_1, invalid_signal_0)
    except BaseException:
        pass