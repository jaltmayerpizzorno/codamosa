# Automatically generated by Pynguin.
import sanic.blueprint_group as module_0
import sanic.blueprints as module_1

def test_case_0():
    try:
        str_0 = '0{P\t'
        int_0 = 256
        str_1 = 'E&EQ[X'
        set_0 = {int_0, int_0, int_0}
        dict_0 = {str_0: int_0, str_1: set_0}
        bool_0 = False
        blueprint_group_0 = module_0.BlueprintGroup(bool_0)
        var_0 = blueprint_group_0.__getitem__(dict_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = b''
        int_0 = 1668
        blueprint_group_0 = module_0.BlueprintGroup()
        blueprint_group_0.__setitem__(bytes_0, int_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b'_\x00\xd9j\xd3\xa3\x90\x17\x05Z\xf2\x8dK<M]N\xb2^'
        blueprint_group_0 = module_0.BlueprintGroup()
        var_0 = blueprint_group_0.__iter__()
        blueprint_group_1 = module_0.BlueprintGroup(bytes_0)
        list_0 = [var_0]
        blueprint_group_0.__delitem__(list_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '5)"I3`b`rL3HD35 +$b^'
        blueprint_0 = module_1.Blueprint(str_0)
        int_0 = 10
        blueprint_group_0 = module_0.BlueprintGroup(int_0)
        blueprint_group_0.append(blueprint_0)
    except BaseException:
        pass

def test_case_4():
    try:
        float_0 = 1748.0392966135048
        blueprint_group_0 = module_0.BlueprintGroup(float_0)
        var_0 = blueprint_group_0.middleware()
        list_0 = [var_0, float_0, float_0, var_0, blueprint_group_0, float_0]
        var_1 = blueprint_group_0.middleware(*list_0)
        blueprint_group_1 = module_0.BlueprintGroup(list_0)
        str_0 = '"<(k>#"`>'
        blueprint_0 = module_1.Blueprint(str_0, str_0)
        blueprint_group_0.append(blueprint_0)
    except BaseException:
        pass

def test_case_5():
    try:
        blueprint_group_0 = module_0.BlueprintGroup()
        bool_0 = False
        blueprint_group_1 = module_0.BlueprintGroup(blueprint_group_0, bool_0)
        var_0 = blueprint_group_1.__iter__()
        str_0 = '${pv\rt?:9)oC?.fi{|'
        blueprint_group_2 = module_0.BlueprintGroup(str_0)
        int_0 = 1336
        blueprint_group_3 = module_0.BlueprintGroup()
        blueprint_0 = module_1.Blueprint(str_0, str_0)
        int_1 = 514
        blueprint_group_0.insert(int_1, blueprint_0)
        blueprint_group_0.insert(int_0, blueprint_0)
        bool_1 = False
        list_0 = [var_0, bool_0, bool_1, bool_1]
        var_1 = blueprint_group_1.middleware(*list_0)
        list_1 = [blueprint_group_2, list_0, var_0, var_1]
        var_2 = blueprint_group_2.extend(list_1)
    except BaseException:
        pass