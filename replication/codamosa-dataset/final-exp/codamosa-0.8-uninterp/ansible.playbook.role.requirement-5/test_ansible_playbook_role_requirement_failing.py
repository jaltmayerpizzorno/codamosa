# Automatically generated by Pynguin.
import ansible.playbook.role.requirement as module_0
import ansible.utils.display as module_1

def test_case_0():
    try:
        bool_0 = None
        role_requirement_0 = module_0.RoleRequirement()
        var_0 = role_requirement_0.repo_url_to_role_name(bool_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bool_0 = False
        role_requirement_0 = module_0.RoleRequirement()
        var_0 = role_requirement_0.role_yaml_parse(bool_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bool_0 = True
        tuple_0 = (bool_0,)
        role_requirement_0 = module_0.RoleRequirement()
        var_0 = role_requirement_0.role_yaml_parse(tuple_0)
    except BaseException:
        pass

def test_case_3():
    try:
        float_0 = None
        list_0 = [float_0, float_0, float_0]
        role_requirement_0 = module_0.RoleRequirement()
        var_0 = role_requirement_0.role_yaml_parse(list_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'juB'
        role_requirement_0 = module_0.RoleRequirement()
        role_requirement_1 = module_0.RoleRequirement()
        var_0 = role_requirement_0.repo_url_to_role_name(str_0)
        list_0 = [str_0]
        var_1 = role_requirement_0.scm_archive_role(role_requirement_1, list_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'r2'
        str_1 = '`)\n@y\\Mfz,7K`=n'
        role_requirement_0 = module_0.RoleRequirement()
        var_0 = role_requirement_0.role_yaml_parse(str_1)
        list_0 = [str_1, str_0]
        var_1 = role_requirement_0.role_yaml_parse(list_0)
    except BaseException:
        pass

def test_case_6():
    try:
        dict_0 = {}
        role_requirement_0 = module_0.RoleRequirement()
        var_0 = role_requirement_0.role_yaml_parse(dict_0)
        str_0 = 'FNNp\nJq\nc+EBE&J1 '
        set_0 = {str_0, str_0}
        var_1 = role_requirement_0.repo_url_to_role_name(set_0)
        var_2 = role_requirement_0.role_yaml_parse(str_0)
        var_3 = role_requirement_0.role_yaml_parse(role_requirement_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = ''
        role_requirement_0 = module_0.RoleRequirement()
        var_0 = role_requirement_0.repo_url_to_role_name(str_0)
        dict_0 = {role_requirement_0: role_requirement_0, var_0: role_requirement_0}
        var_1 = role_requirement_0.role_yaml_parse(str_0)
        var_2 = role_requirement_0.role_yaml_parse(dict_0)
        str_1 = ',,T'
        role_requirement_1 = module_0.RoleRequirement()
        var_3 = role_requirement_0.role_yaml_parse(str_1)
        display_0 = module_1.Display()
        bool_0 = False
        role_requirement_2 = module_0.RoleRequirement()
        var_4 = role_requirement_2.scm_archive_role(display_0, bool_0)
    except BaseException:
        pass