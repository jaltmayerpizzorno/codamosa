# Automatically generated by Pynguin.
import ansible.playbook.playbook_include as module_0
import ansible.parsing.yaml.objects as module_1

def test_case_0():
    try:
        float_0 = 0.001
        bytes_0 = b'\x16\x88\xce\xcb\xf3\x94}lF\xb9'
        tuple_0 = None
        playbook_include_0 = module_0.PlaybookInclude()
        var_0 = playbook_include_0.load(float_0, bytes_0, tuple_0)
    except BaseException:
        pass

def test_case_1():
    try:
        playbook_include_0 = module_0.PlaybookInclude()
        bytes_0 = b'\x80z\xe8\xfaw\xc0y\xe9\xdc+\xb0'
        bool_0 = True
        var_0 = playbook_include_0.load_data(bytes_0, bool_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'ed&B/HT*!v e:.[| :5'
        var_0 = dict(import_playbook=str_0)
        playbook_include_0 = module_0.PlaybookInclude()
        var_1 = playbook_include_0.load_data(var_0, str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'RU'
        playbook_include_0 = module_0.PlaybookInclude()
        var_0 = playbook_include_0.preprocess_data(bytes_0)
    except BaseException:
        pass

def test_case_4():
    try:
        dict_0 = {}
        float_0 = 2839.47434
        list_0 = [float_0, float_0, float_0]
        list_1 = [float_0, dict_0, list_0, float_0]
        playbook_include_0 = module_0.PlaybookInclude()
        var_0 = playbook_include_0.load_data(dict_0, float_0, list_1)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = '&CH(x;>tW[z)f]7Q'
        var_0 = dict(import_playbook=str_0)
        playbook_include_0 = module_0.PlaybookInclude()
        var_1 = playbook_include_0.load_data(var_0, str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        playbook_include_0 = module_0.PlaybookInclude()
        str_0 = 'import_playbook'
        str_1 = 'vars'
        str_2 = 'a'
        int_0 = 1
        var_0 = {str_0: str_2, str_1: int_0, str_2: str_2}
        var_1 = playbook_include_0.preprocess_data(var_0)
    except BaseException:
        pass

def test_case_7():
    try:
        playbook_include_0 = module_0.PlaybookInclude()
        ansible_mapping_0 = module_1.AnsibleMapping()
        bytes_0 = b'\xdf\x19rN\x9d!s'
        var_0 = playbook_include_0.load(ansible_mapping_0, bytes_0)
    except BaseException:
        pass

def test_case_8():
    try:
        playbook_include_0 = module_0.PlaybookInclude()
        str_0 = 'import_playbook'
        str_1 = 'vars'
        str_2 = 'tags'
        int_0 = 1
        int_1 = {str_0: int_0}
        str_3 = 'b'
        str_4 = [str_3, str_3]
        var_0 = {str_0: str_2, str_1: int_1, str_2: str_4}
        var_1 = playbook_include_0.preprocess_data(var_0)
        int_2 = 2
        int_3 = {str_0: int_2}
        var_2 = {str_0: str_4, str_1: int_3, str_2: str_1}
        var_3 = playbook_include_0.preprocess_data(var_2)
    except BaseException:
        pass

def test_case_9():
    try:
        playbook_include_0 = module_0.PlaybookInclude()
        str_0 = 'import_playbook'
        str_1 = 'vars'
        str_2 = './t st_dir/test.yml'
        int_0 = 1
        int_1 = {str_0: int_0}
        var_0 = {str_0: str_2, str_1: int_1, str_2: str_2}
        var_1 = playbook_include_0.preprocess_data(var_0)
    except BaseException:
        pass

def test_case_10():
    try:
        playbook_include_0 = module_0.PlaybookInclude()
        str_0 = 'import_playbook'
        str_1 = 'o3ywB[cS+I"'
        str_2 = ''
        int_0 = 1
        var_0 = {str_0: str_2, str_1: int_0, str_2: str_2}
        var_1 = playbook_include_0.preprocess_data(var_0)
    except BaseException:
        pass

def test_case_11():
    try:
        var_0 = None
        str_0 = 'import_playbook'
        str_1 = 'id,m[g'
        dict_0 = {str_1: var_0, str_0: str_1, str_0: str_1, str_0: var_0}
        ansible_mapping_0 = module_1.AnsibleMapping(**dict_0)
        playbook_include_0 = module_0.PlaybookInclude()
        var_1 = playbook_include_0.preprocess_data(ansible_mapping_0)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = '/'
        var_0 = dict(import_playbook=str_0)
        playbook_include_0 = module_0.PlaybookInclude()
        str_1 = ','
        var_1 = playbook_include_0.load_data(var_0, str_1)
    except BaseException:
        pass