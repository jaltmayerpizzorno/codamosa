# Automatically generated by Pynguin.
import tornado.netutil as module_0

def test_case_0():
    pass

def test_case_1():
    str_0 = 't_sock.sock'
    socket_0 = module_0.bind_unix_socket(str_0)

def test_case_2():
    str_0 = 'd`!Lq$i{.Z*&[n9}S'
    int_0 = -1234
    socket_0 = module_0.bind_unix_socket(str_0, int_0)
    dict_0 = {}
    s_s_l_socket_0 = module_0.ssl_wrap_socket(socket_0, dict_0)
    resolver_0 = module_0.Resolver()

def test_case_3():
    str_0 = '1.2.3.4.5'
    bool_0 = module_0.is_valid_ip(str_0)
    str_1 = '1.2.3.4\x00'
    bool_1 = module_0.is_valid_ip(str_1)

def test_case_4():
    str_0 = 'kzDn)#4fhD3>NPd1'
    bool_0 = module_0.is_valid_ip(str_0)

def test_case_5():
    dict_0 = {}
    s_s_l_context_0 = module_0.ssl_options_to_context(dict_0)

def test_case_6():
    dict_0 = {}
    s_s_l_context_0 = module_0.ssl_options_to_context(dict_0)
    s_s_l_context_1 = module_0.ssl_options_to_context(s_s_l_context_0)

def test_case_7():
    int_0 = 1811
    list_0 = module_0.bind_sockets(int_0)

def test_case_8():
    str_0 = '1.2.3.4'
    bool_0 = module_0.is_valid_ip(str_0)
    str_1 = '1.2.3.4.5'
    bool_1 = module_0.is_valid_ip(str_1)
    str_2 = '1.2.3'
    bool_2 = module_0.is_valid_ip(str_2)
    str_3 = '1.2.3.4\x00'
    bool_3 = module_0.is_valid_ip(str_3)
    str_4 = ''
    bool_4 = module_0.is_valid_ip(str_4)
    str_5 = '2001:0db8:85a3:0000:0000:8a2e:0370:7334'
    bool_5 = module_0.is_valid_ip(str_5)
    str_6 = '2001:0db8:85a3:0000:0000:8a2e:0370:7334.com'
    bool_6 = module_0.is_valid_ip(str_6)
    str_7 = '192.168.1.1'
    bool_7 = module_0.is_valid_ip(str_7)

def test_case_9():
    int_0 = 0
    list_0 = module_0.bind_sockets(int_0)