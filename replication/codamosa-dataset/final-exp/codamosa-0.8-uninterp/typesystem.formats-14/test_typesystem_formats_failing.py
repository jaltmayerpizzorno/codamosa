# Automatically generated by Pynguin.
import typesystem.formats as module_0

def test_case_0():
    try:
        time_format_0 = module_0.TimeFormat()
        str_0 = '24:0x:00'
        time_0 = time_format_0.validate(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bool_0 = False
        base_format_0 = module_0.BaseFormat()
        bool_1 = base_format_0.is_native_type(bool_0)
    except BaseException:
        pass

def test_case_2():
    try:
        time_format_0 = module_0.TimeFormat()
        base_format_0 = module_0.BaseFormat()
        var_0 = base_format_0.validate(time_format_0)
    except BaseException:
        pass

def test_case_3():
    try:
        float_0 = 66.116508
        list_0 = []
        base_format_0 = module_0.BaseFormat(*list_0)
        optional_0 = base_format_0.serialize(float_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'none'
        date_time_format_0 = module_0.DateTimeFormat()
        date_format_0 = module_0.DateFormat()
        date_time_format_1 = module_0.DateTimeFormat()
        date_0 = date_format_0.validate(str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = '_Xq'
        date_format_0 = module_0.DateFormat()
        optional_0 = date_format_0.serialize(str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        u_u_i_d_format_0 = module_0.UUIDFormat()
        time_format_0 = module_0.TimeFormat()
        optional_0 = time_format_0.serialize(u_u_i_d_format_0)
    except BaseException:
        pass

def test_case_7():
    try:
        date_time_format_0 = module_0.DateTimeFormat()
        optional_0 = date_time_format_0.serialize(date_time_format_0)
    except BaseException:
        pass

def test_case_8():
    try:
        date_format_0 = module_0.DateFormat()
        u_u_i_d_format_0 = module_0.UUIDFormat()
        str_0 = u_u_i_d_format_0.serialize(date_format_0)
        date_time_format_0 = module_0.DateTimeFormat()
        str_1 = '2019-02-31T13:00:0'
        datetime_0 = date_time_format_0.validate(str_1)
    except BaseException:
        pass

def test_case_9():
    try:
        date_time_format_0 = module_0.DateTimeFormat()
        str_0 = '2019-01-01T00:00:00.000000Z'
        datetime_0 = date_time_format_0.validate(str_0)
        str_1 = '2019-01-0A'
        datetime_1 = date_time_format_0.validate(str_1)
    except BaseException:
        pass

def test_case_10():
    try:
        time_format_0 = module_0.TimeFormat()
        str_0 = '2019-02-3T13:0:00'
        time_0 = time_format_0.validate(str_0)
    except BaseException:
        pass

def test_case_11():
    try:
        time_format_0 = module_0.TimeFormat()
        u_u_i_d_format_0 = module_0.UUIDFormat()
        str_0 = '24:0x:00'
        bool_0 = u_u_i_d_format_0.is_native_type(u_u_i_d_format_0)
        time_0 = time_format_0.validate(str_0)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = '24:0x:0'
        time_format_0 = module_0.TimeFormat()
        bool_0 = time_format_0.is_native_type(str_0)
        time_0 = time_format_0.validate(str_0)
    except BaseException:
        pass

def test_case_13():
    try:
        u_u_i_d_format_0 = module_0.UUIDFormat()
        str_0 = 'd3e6b582-6e47-4c9e-870d-a0e4a06ef1c4'
        u_u_i_d_0 = u_u_i_d_format_0.validate(str_0)
        var_0 = print(u_u_i_d_0)
        u_u_i_d_format_1 = module_0.UUIDFormat()
        str_1 = 'd3e6b582-6e47-4c9e-870d-a0e4a06ef1'
        u_u_i_d_1 = u_u_i_d_format_1.validate(str_1)
    except BaseException:
        pass

def test_case_14():
    try:
        date_format_0 = module_0.DateFormat()
        str_0 = '2018-02-31'
        date_0 = date_format_0.validate(str_0)
    except BaseException:
        pass

def test_case_15():
    try:
        str_0 = '2019-02-31T13:00:0'
        date_time_format_0 = module_0.DateTimeFormat()
        datetime_0 = date_time_format_0.validate(str_0)
    except BaseException:
        pass

def test_case_16():
    try:
        var_0 = None
        date_time_format_0 = module_0.DateTimeFormat()
        optional_0 = date_time_format_0.serialize(var_0)
        str_0 = '2019-02-31T13:00:00'
        datetime_0 = date_time_format_0.validate(str_0)
    except BaseException:
        pass

def test_case_17():
    try:
        u_u_i_d_0 = None
        list_0 = [u_u_i_d_0, u_u_i_d_0]
        str_0 = '=w+WOk%,&Q/S}tI'
        str_1 = 'q\nPBUWiL?'
        date_format_0 = module_0.DateFormat()
        optional_0 = date_format_0.serialize(u_u_i_d_0)
        str_2 = 'hGl'
        dict_0 = {str_0: str_0, str_1: str_1, str_0: str_0, str_2: str_1}
        time_format_0 = module_0.TimeFormat(*list_0, **dict_0)
    except BaseException:
        pass

def test_case_18():
    try:
        time_format_0 = module_0.TimeFormat()
        str_0 = '12:34:23'
        list_0 = None
        optional_0 = time_format_0.serialize(list_0)
        var_0 = None
        dict_0 = {str_0: str_0, str_0: time_format_0, str_0: var_0}
        date_time_format_0 = module_0.DateTimeFormat(*list_0, **dict_0)
    except BaseException:
        pass

def test_case_19():
    try:
        date_time_format_0 = module_0.DateTimeFormat()
        time_format_0 = module_0.TimeFormat()
        str_0 = '2019-02-3T13:0:00'
        datetime_0 = date_time_format_0.validate(str_0)
        optional_0 = date_time_format_0.serialize(datetime_0)
        date_format_0 = module_0.DateFormat()
        optional_1 = date_format_0.serialize(datetime_0)
        time_0 = time_format_0.validate(str_0)
    except BaseException:
        pass

def test_case_20():
    try:
        time_format_0 = module_0.TimeFormat()
        str_0 = '01:02:03.004000'
        time_0 = time_format_0.validate(str_0)
        date_format_0 = module_0.DateFormat()
        date_0 = date_format_0.validate(time_0)
    except BaseException:
        pass