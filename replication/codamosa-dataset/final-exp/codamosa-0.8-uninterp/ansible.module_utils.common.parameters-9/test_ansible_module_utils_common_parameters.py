# Automatically generated by Pynguin.
import ansible.module_utils.common.parameters as module_0

def test_case_0():
    pass

def test_case_1():
    int_0 = -1637
    str_0 = "@lM/L'T2Y-j!#>^M"
    var_0 = module_0.remove_values(int_0, str_0)

def test_case_2():
    str_0 = ''
    list_0 = [str_0]
    list_1 = [list_0, str_0, list_0]
    var_0 = module_0.remove_values(list_1, list_0)

def test_case_3():
    bytes_0 = b'\xd0\xfa\x0f\xff'
    var_0 = module_0.remove_values(bytes_0, bytes_0)

def test_case_4():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    var_0 = module_0.remove_values(bool_0, list_0)

def test_case_5():
    str_0 = "@lM/L'TY-j!#^M"
    var_0 = module_0.remove_values(str_0, str_0)

def test_case_6():
    dict_0 = {}
    list_0 = [dict_0, dict_0, dict_0, dict_0]
    set_0 = set()
    list_1 = [dict_0, set_0, list_0]
    tuple_0 = (list_0, set_0, list_1)
    var_0 = module_0.sanitize_keys(tuple_0, tuple_0)

def test_case_7():
    dict_0 = {}
    str_0 = 'the key was not removed'
    var_0 = module_0.sanitize_keys(dict_0, str_0)

def test_case_8():
    int_0 = 3609
    str_0 = '-'
    var_0 = module_0.sanitize_keys(int_0, str_0)

def test_case_9():
    str_0 = '>Z.T'
    list_0 = [str_0, str_0]
    dict_0 = {str_0: list_0, str_0: str_0}
    list_1 = [str_0, dict_0]
    var_0 = module_0.sanitize_keys(dict_0, list_1)

def test_case_10():
    str_0 = 'a'
    str_1 = 'type'
    str_2 = 'alBlback'
    str_3 = 'str'
    str_4 = 'env'
    str_5 = 'A'
    str_6 = (str_4, str_5)
    str_7 = {str_1: str_3, str_2: str_6}
    str_8 = {str_0: str_7}
    var_0 = {}
    var_1 = module_0.set_fallbacks(str_8, var_0)

def test_case_11():
    bool_0 = False
    str_0 = 'Ok2X[\x0c'
    var_0 = module_0.remove_values(bool_0, str_0)

def test_case_12():
    str_0 = 'headers'
    list_0 = [str_0, str_0, str_0, str_0]
    dict_0 = {str_0: list_0, str_0: list_0}
    list_1 = [dict_0]
    var_0 = module_0.remove_values(dict_0, list_1)

def test_case_13():
    float_0 = -574.0
    float_1 = -948.0
    str_0 = ':_'
    set_0 = {float_0, str_0, str_0, str_0}
    list_0 = [float_1, set_0]
    var_0 = module_0.remove_values(list_0, set_0)

def test_case_14():
    int_0 = 1758
    set_0 = {int_0}
    str_0 = 'J'
    bool_0 = False
    tuple_0 = (str_0, bool_0)
    list_0 = [set_0, int_0, tuple_0]
    var_0 = module_0.sanitize_keys(list_0, tuple_0, tuple_0)

def test_case_15():
    int_0 = -3613
    int_1 = 2
    int_2 = 3
    var_0 = dict(a=int_0, b=int_1, _ansible_lo_sha256=int_0)
    str_0 = 'f'
    str_1 = 'qb'
    str_2 = [str_0, str_1]
    str_3 = '_ansible_lo_sha256'
    str_4 = [str_3]
    var_1 = module_0.sanitize_keys(var_0, str_2, str_4)
    var_2 = dict(a=int_0, b=int_1, _ansible_lo_sha256=int_2)
    str_5 = [str_0, str_1]
    var_3 = module_0.sanitize_keys(var_2, str_5)
    var_4 = dict(a=int_0, b=int_1, _ansible_lo_sha256=int_2)

def test_case_16():
    str_0 = 'a'
    str_1 = 'type'
    str_2 = 'options'
    str_3 = 'fallback'
    str_4 = 'dict'
    str_5 = 'int'
    str_6 = {str_1: str_5}
    str_7 = 'required'
    bool_0 = True
    var_0 = {str_1: str_5, str_7: bool_0}
    var_1 = dict(b=str_6, c=var_0)
    str_8 = 'env_fallback'
    str_9 = 'A_OPENSTACK'
    str_10 = 'A_STRATEGY'
    str_11 = (str_9, str_5, str_10)
    str_12 = (str_8, str_11)
    var_2 = {str_1: str_4, str_2: var_1, str_3: str_12}
    var_3 = {str_0: var_2}
    int_0 = 2
    int_1 = 3
    var_4 = dict(b=int_0, c=int_1)
    var_5 = dict(a=var_4)
    var_6 = module_0.set_fallbacks(var_3, var_5)
    var_7 = set()
    var_8 = var_6 == var_7