# Automatically generated by Pynguin.
import ansible.plugins.action.validate_argument_spec as module_0

def test_case_0():
    try:
        set_0 = set()
        int_0 = 386
        str_0 = '"zn'
        set_1 = None
        tuple_0 = (set_1,)
        float_0 = -477.61963
        dict_0 = {}
        action_module_0 = module_0.ActionModule(str_0, tuple_0, set_1, float_0, set_1, dict_0)
        var_0 = action_module_0.get_args_from_task_vars(set_0, int_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '^e'
        float_0 = 17.90475
        str_1 = '3~-mkI[F&D)'
        dict_0 = {float_0: float_0, str_0: float_0, str_1: str_1}
        int_0 = 2648
        list_0 = [float_0]
        bool_0 = True
        bytes_0 = b'{\xd3\xa0\xd9b\x94K\x10\x1a\xcf\xf6aZ.\xb5\xa7\xb4\x9ejb'
        tuple_0 = (bytes_0, str_1)
        action_module_0 = module_0.ActionModule(list_0, list_0, bool_0, list_0, tuple_0, bytes_0)
        var_0 = action_module_0.get_args_from_task_vars(dict_0, int_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '}Z$q#{tZ)|/3Iiq^h'
        dict_0 = {str_0: str_0, str_0: str_0}
        int_0 = -2310
        bool_0 = True
        list_0 = []
        float_0 = 3347.0
        action_module_0 = module_0.ActionModule(int_0, bool_0, list_0, float_0, float_0, float_0)
        var_0 = action_module_0.run(dict_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bool_0 = False
        bool_1 = False
        int_0 = -1432
        str_0 = 'bright green'
        dict_0 = {str_0: bool_0, str_0: bool_1, str_0: bool_0}
        float_0 = 2212.0
        list_0 = [bool_1, str_0, float_0, bool_0]
        tuple_0 = (dict_0, float_0, list_0)
        str_1 = 'Vxl\x0b%?Sl(%;'
        str_2 = 'pZ1~9;\x0cem%=fV\n1760'
        set_0 = {bool_1, str_2}
        int_1 = 2
        str_3 = 'a7h}'
        str_4 = 'VxQ#&-6V\x0b$F>GT&cjh'
        str_5 = 'TVS3'
        list_1 = []
        str_6 = '4;:9B'
        action_module_0 = module_0.ActionModule(str_5, list_1, tuple_0, tuple_0, str_6, bool_0)
        action_module_1 = module_0.ActionModule(set_0, int_1, list_0, str_3, str_4, action_module_0)
        str_7 = 'PLL1ZkJH3'
        action_module_2 = module_0.ActionModule(tuple_0, action_module_1, action_module_0, dict_0, list_1, str_7)
        action_module_3 = module_0.ActionModule(tuple_0, str_1, str_2, action_module_2, str_6, list_0)
        float_1 = -1695.797405
        float_2 = 0.0
        bytes_0 = b'\x1f\xc7\xb4xYy!$\x0cC\x82#\x00\xea\xba\xbb\xae\xfe'
        action_module_4 = module_0.ActionModule(str_0, str_0, action_module_3, float_1, float_2, bytes_0)
        var_0 = action_module_4.run(int_0, bool_1)
    except BaseException:
        pass

def test_case_4():
    try:
        bytes_0 = b'{\x1cA<\x00\x93\xbd\xbc>\xfc\x03:'
        int_0 = 1474
        dict_0 = {int_0: int_0, int_0: int_0}
        set_0 = {int_0}
        int_1 = None
        tuple_0 = (dict_0, set_0, int_0, int_1)
        str_0 = "#tqM{w3'0,KJ3Sb]0zB?"
        str_1 = 'u"\nHxqb\nL6GaM'
        bytes_1 = b'j\xb2\xfe'
        float_0 = -1325.99
        bytes_2 = b'\x1c-\x1a\xa5\xac]y\xd9\x06'
        action_module_0 = module_0.ActionModule(str_0, str_1, bytes_1, float_0, bytes_2, bytes_0)
        str_2 = '`u|%&5jG*'
        bytes_3 = b'\x17.'
        complex_0 = None
        action_module_1 = module_0.ActionModule(str_2, bytes_3, tuple_0, complex_0, dict_0, tuple_0)
        var_0 = action_module_0.get_args_from_task_vars(dict_0, dict_0)
    except BaseException:
        pass

def test_case_5():
    try:
        bytes_0 = b'{\x1cA<\x00\x93\xbd\xbc>\xfc\x03:'
        bool_0 = True
        tuple_0 = ()
        int_0 = 1474
        dict_0 = {int_0: int_0, int_0: int_0}
        str_0 = 'Timed out waiting for {desc} (timeout={timeout})'
        list_0 = [bytes_0]
        action_module_0 = module_0.ActionModule(bool_0, str_0, int_0, bytes_0, list_0, list_0)
        var_0 = action_module_0.get_args_from_task_vars(dict_0, tuple_0)
    except BaseException:
        pass