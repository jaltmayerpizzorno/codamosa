# Automatically generated by Pynguin.
import ansible.modules.subversion as module_0

def test_case_0():
    try:
        str_0 = '.'
        subversion_0 = module_0.Subversion(str_0, str_0, str_0, str_0, str_0, str_0, str_0, str_0)
        var_0 = subversion_0.get_revision()
    except BaseException:
        pass

def test_case_1():
    try:
        var_0 = None
        str_0 = '.'
        subversion_0 = module_0.Subversion(var_0, str_0, var_0, var_0, var_0, var_0, var_0, var_0)
        var_1 = subversion_0.get_revision()
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'svn'
        bool_0 = False
        subversion_0 = module_0.Subversion(str_0, str_0, str_0, str_0, str_0, str_0, str_0, bool_0)
        var_0 = subversion_0.get_remote_revision()
    except BaseException:
        pass

def test_case_3():
    try:
        float_0 = -722.23
        set_0 = {float_0, float_0, float_0}
        list_0 = [float_0]
        int_0 = -3347
        set_1 = {int_0}
        float_1 = 1078.78087
        str_0 = 'jb'
        tuple_0 = ()
        tuple_1 = (set_1,)
        str_1 = "7D('*Gw<t-9mxV?U"
        bool_0 = False
        str_2 = '"\ng{*F&uLL$L4e'
        str_3 = 'W`'
        bool_1 = False
        str_4 = '*'
        subversion_0 = module_0.Subversion(str_0, str_1, bool_0, str_2, str_3, tuple_0, bool_1, str_4)
        dict_0 = {bool_0: float_0, int_0: subversion_0, str_0: float_0}
        str_5 = '?H'
        subversion_1 = module_0.Subversion(tuple_0, tuple_1, subversion_0, subversion_0, dict_0, int_0, str_5, str_4)
        subversion_2 = module_0.Subversion(int_0, set_1, float_1, list_0, set_0, str_0, float_1, subversion_1)
        var_0 = subversion_2.is_svn_repo()
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = '.'
        subversion_0 = module_0.Subversion(str_0, str_0, str_0, str_0, str_0, str_0, str_0, str_0)
        var_0 = subversion_0.checkout()
    except BaseException:
        pass

def test_case_5():
    try:
        tuple_0 = ()
        bytes_0 = b'\xf2\x91\xbbw\x86\xaay>\xb2\x96o'
        str_0 = '<\r8:q#_o\r'
        float_0 = -1063.76
        bool_0 = False
        subversion_0 = module_0.Subversion(tuple_0, bytes_0, bytes_0, str_0, float_0, bool_0, tuple_0, bool_0)
        var_0 = subversion_0.checkout(subversion_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = '.'
        subversion_0 = module_0.Subversion(str_0, str_0, str_0, str_0, str_0, str_0, str_0, str_0)
        var_0 = subversion_0.export()
    except BaseException:
        pass

def test_case_7():
    try:
        float_0 = -1058.16983
        bool_0 = False
        str_0 = 'a\\QO3mev8'
        float_1 = -1102.83716
        set_0 = set()
        bool_1 = True
        str_1 = 'bdW=+7b(FEbmMtr}Vb,'
        int_0 = 500
        subversion_0 = module_0.Subversion(float_0, bool_0, str_0, float_1, set_0, bool_1, str_1, int_0)
        var_0 = subversion_0.switch()
    except BaseException:
        pass

def test_case_8():
    try:
        float_0 = -210.91737
        bytes_0 = b'\xb5\x90`O'
        bool_0 = True
        int_0 = -1308
        float_1 = 826.0
        float_2 = -1129.99559
        str_0 = '__main__'
        subversion_0 = module_0.Subversion(float_0, float_0, bytes_0, bool_0, int_0, float_1, float_2, str_0)
        var_0 = subversion_0.revert()
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = '.'
        subversion_0 = module_0.Subversion(str_0, str_0, str_0, str_0, str_0, str_0, str_0, str_0)
        var_0 = subversion_0.get_remote_revision()
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = 'ansible.modules.subversion'
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
        float_0 = 0.1
        list_0 = [str_0, dict_0]
        bool_0 = False
        tuple_0 = (dict_0,)
        str_1 = '+)*:`0cu=Jv|pR4'
        subversion_0 = module_0.Subversion(str_0, dict_0, str_1, float_0, list_0, bool_0, tuple_0, str_1)
        var_0 = subversion_0.has_local_mods()
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = '{[Ed2;'
        set_0 = None
        set_1 = {str_0, str_0, str_0, set_0}
        float_0 = -985.6196
        bool_0 = True
        str_1 = '__main__'
        int_0 = 108
        bool_1 = True
        list_0 = [str_0, str_1, bool_1, int_0]
        dict_0 = None
        int_1 = -1701
        str_2 = '6g>\t\rJ?>b['
        tuple_0 = (float_0, float_0)
        bytes_0 = None
        tuple_1 = (set_0, tuple_0, bytes_0)
        str_3 = '7Sp\n_UlF=q'
        subversion_0 = module_0.Subversion(str_2, list_0, tuple_1, bool_1, set_0, str_0, set_1, str_3)
        tuple_2 = (list_0, dict_0, int_1, subversion_0)
        float_1 = 655.7
        subversion_1 = module_0.Subversion(str_1, str_0, int_0, bool_0, bool_1, tuple_2, float_1, bool_1)
        var_0 = subversion_1.needs_update()
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = 'ty(?$*$lZoj'
        bool_0 = True
        subversion_0 = module_0.Subversion(str_0, str_0, str_0, str_0, str_0, str_0, str_0, bool_0)
        var_0 = subversion_0.export(subversion_0)
    except BaseException:
        pass

def test_case_13():
    try:
        tuple_0 = None
        float_0 = 3176.047
        tuple_1 = (tuple_0, tuple_0, tuple_0, float_0)
        bytes_0 = b'i\xd2\x95b\xba?VC\x96\xa1\x8bn\x06Y\xab\xf8\xe2'
        list_0 = [tuple_0, tuple_1, tuple_0]
        dict_0 = {}
        float_1 = 1407.54091
        str_0 = 'f9K5Q'
        tuple_2 = (dict_0, tuple_1, float_1, str_0)
        bool_0 = False
        bytes_1 = b'\xb2\x19\x93=\x9a\xc7C\xfe\x8a'
        float_2 = 2604.39
        set_0 = set()
        str_1 = '\\96h'
        str_2 = 'Z[JNhBZgXf1HYxqC\r)_('
        str_3 = '9bxQnl5ESf]L'
        str_4 = 'XP$8EiXagnW'
        bool_1 = True
        subversion_0 = module_0.Subversion(dict_0, str_4, list_0, bool_0, bool_1, list_0, dict_0, bytes_0)
        float_3 = 258.10333
        str_5 = '\nmjH]sYY5$Y\rfjT$!'
        subversion_1 = module_0.Subversion(subversion_0, tuple_2, bool_0, float_3, str_5, list_0, set_0, subversion_0)
        subversion_2 = module_0.Subversion(float_2, set_0, str_1, str_2, str_3, bool_0, set_0, subversion_1)
        str_6 = 'I3KLnHJ<8_aPVk_'
        subversion_3 = module_0.Subversion(bytes_1, subversion_2, dict_0, subversion_0, subversion_2, set_0, str_6, bool_1)
        var_0 = subversion_3.update()
    except BaseException:
        pass