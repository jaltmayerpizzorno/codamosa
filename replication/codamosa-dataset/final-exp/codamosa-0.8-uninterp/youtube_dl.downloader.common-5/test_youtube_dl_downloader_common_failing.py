# Automatically generated by Pynguin.
import youtube_dl.downloader.common as module_0

def test_case_0():
    try:
        str_0 = 'edL9dK%Am\\^7/cf.'
        set_0 = {str_0, str_0}
        list_0 = [set_0]
        list_1 = [set_0, str_0, list_0]
        bool_0 = False
        str_1 = '-'
        file_downloader_0 = module_0.FileDownloader(bool_0, str_1)
        var_0 = file_downloader_0.calc_percent(list_0, list_1)
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = b'\xfc#\x96\xee\xa9\t'
        int_0 = 506
        str_0 = 'f<gkEW_31LFTQ/p5-7'
        dict_0 = {str_0: str_0}
        file_downloader_0 = module_0.FileDownloader(dict_0, dict_0)
        var_0 = file_downloader_0.format_percent(int_0)
        float_0 = 0.0
        var_1 = file_downloader_0.download(bytes_0, float_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'F#ls\t\x0cLD:/\\+Dl'
        list_0 = []
        list_1 = [list_0]
        list_2 = None
        list_3 = [list_2, list_2]
        list_4 = [list_3, list_3, list_3]
        bytes_0 = b'\xb26\xd3#\x04\x10\xdf\x9c_0\xa4u\xa6\x8e\xbe\xee\xc7\x8e'
        file_downloader_0 = module_0.FileDownloader(list_4, bytes_0)
        set_0 = {file_downloader_0}
        int_0 = 757
        file_downloader_1 = module_0.FileDownloader(set_0, int_0)
        var_0 = file_downloader_1.calc_eta(str_0, list_0, list_1, list_1)
    except BaseException:
        pass

def test_case_3():
    try:
        float_0 = 907.56141
        str_0 = '@q+n]Y F7x'
        set_0 = None
        int_0 = -1138
        str_1 = 'FLE\x0bNy<pIlFuI'
        str_2 = '2\x0c`neu6\x0c1v>C)!ct9'
        dict_0 = {str_1: float_0, str_2: str_2}
        float_1 = None
        list_0 = [int_0]
        tuple_0 = (list_0,)
        file_downloader_0 = module_0.FileDownloader(tuple_0, int_0)
        str_3 = 'r'
        file_downloader_1 = module_0.FileDownloader(str_3, str_3)
        var_0 = file_downloader_1.calc_eta(int_0, dict_0, float_1, file_downloader_0)
        list_1 = [set_0]
        str_4 = 'd_[70Fdbca4'
        list_2 = [set_0, float_0, str_4, list_1]
        str_5 = '\\+lC@V-7#5o/Q`1?i$kX'
        int_1 = 44100
        file_downloader_2 = module_0.FileDownloader(str_0, int_1)
        var_1 = file_downloader_2.calc_speed(float_0, list_2, str_5)
    except BaseException:
        pass

def test_case_4():
    try:
        float_0 = 548.74
        tuple_0 = ()
        file_downloader_0 = module_0.FileDownloader(float_0, tuple_0)
        var_0 = file_downloader_0.format_seconds(float_0)
        int_0 = 2179
        var_1 = file_downloader_0.format_retries(int_0)
        str_0 = "W'7/jJ]j"
        float_1 = 488.06216
        file_downloader_1 = module_0.FileDownloader(str_0, float_1)
        var_2 = file_downloader_0.best_block_size(float_1, float_1)
        var_3 = file_downloader_1.undo_temp_name(str_0)
        list_0 = None
        var_4 = file_downloader_1.format_eta(list_0)
        var_5 = file_downloader_1.try_utime(int_0, int_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'ILOVEMAKONNEN'
        int_0 = 652
        str_1 = 'DGt$?{'
        file_downloader_0 = module_0.FileDownloader(int_0, str_1)
        var_0 = file_downloader_0.format_speed(str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        list_0 = []
        bytes_0 = b'\xe0J\xb2\x92o\xe9'
        list_1 = [bytes_0, bytes_0]
        file_downloader_0 = module_0.FileDownloader(bytes_0, list_1)
        var_0 = file_downloader_0.format_retries(list_0)
    except BaseException:
        pass

def test_case_7():
    try:
        dict_0 = {}
        list_0 = [dict_0]
        list_1 = [list_0, list_0, dict_0]
        float_0 = -941.01
        list_2 = [float_0, float_0, float_0]
        list_3 = [list_2, float_0]
        file_downloader_0 = module_0.FileDownloader(list_2, list_3)
        var_0 = file_downloader_0.best_block_size(list_1, dict_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = '\t\niLk9TD{Y,%BM(-M'
        bool_0 = False
        str_1 = 'kA^:W5);0stQp'
        file_downloader_0 = module_0.FileDownloader(bool_0, str_1)
        var_0 = file_downloader_0.parse_bytes(str_0)
    except BaseException:
        pass

def test_case_9():
    try:
        bytes_0 = b'Bz\xa5\xfd\xa2\x91'
        float_0 = 375.8
        file_downloader_0 = module_0.FileDownloader(bytes_0, float_0)
        var_0 = file_downloader_0.report_unable_to_resume()
    except BaseException:
        pass

def test_case_10():
    try:
        set_0 = None
        str_0 = 'Do not overwrite files'
        str_1 = '[iw'
        str_2 = 'R^^L"()Zg8kD'
        dict_0 = {str_1: str_1, str_2: str_2}
        str_3 = 'A'
        list_0 = []
        file_downloader_0 = module_0.FileDownloader(str_3, list_0)
        file_downloader_1 = module_0.FileDownloader(dict_0, file_downloader_0)
        file_downloader_2 = module_0.FileDownloader(str_0, file_downloader_1)
        var_0 = file_downloader_2.to_stderr(set_0)
    except BaseException:
        pass

def test_case_11():
    try:
        set_0 = None
        float_0 = 220.0
        set_1 = set()
        int_0 = 1314
        tuple_0 = (set_1, int_0)
        file_downloader_0 = module_0.FileDownloader(set_1, tuple_0)
        file_downloader_1 = module_0.FileDownloader(float_0, file_downloader_0)
        var_0 = file_downloader_1.ytdl_filename(set_0)
    except BaseException:
        pass

def test_case_12():
    try:
        float_0 = 2192.29955
        set_0 = set()
        dict_0 = {float_0: float_0, float_0: set_0}
        file_downloader_0 = module_0.FileDownloader(set_0, dict_0)
        str_0 = 'f'
        var_0 = file_downloader_0.temp_name(str_0)
        var_1 = file_downloader_0.report_destination(float_0)
    except BaseException:
        pass

def test_case_13():
    try:
        bool_0 = True
        list_0 = [bool_0, bool_0, bool_0, bool_0]
        str_0 = 'Ap#9}:t8;4B]/#nR]mEz'
        list_1 = [bool_0, list_0, str_0, bool_0]
        file_downloader_0 = module_0.FileDownloader(bool_0, bool_0)
        var_0 = file_downloader_0.report_progress(list_1)
    except BaseException:
        pass

def test_case_14():
    try:
        set_0 = set()
        float_0 = 1e309
        dict_0 = {float_0: float_0, float_0: float_0}
        tuple_0 = ()
        file_downloader_0 = module_0.FileDownloader(tuple_0, tuple_0)
        var_0 = file_downloader_0.report_retry(set_0, float_0, dict_0)
    except BaseException:
        pass

def test_case_15():
    try:
        bytes_0 = b'<\x1dg'
        str_0 = 'bg-<Ttcv~1F"vc'
        file_downloader_0 = module_0.FileDownloader(str_0, str_0)
        var_0 = file_downloader_0.report_file_already_downloaded(bytes_0)
    except BaseException:
        pass

def test_case_16():
    try:
        str_0 = '$[jO np4sQ!8c'
        dict_0 = {str_0: str_0}
        file_downloader_0 = module_0.FileDownloader(dict_0, dict_0)
        var_0 = file_downloader_0.download(str_0, file_downloader_0)
    except BaseException:
        pass

def test_case_17():
    try:
        dict_0 = {}
        file_downloader_0 = module_0.FileDownloader(dict_0, dict_0)
        dict_1 = None
        var_0 = file_downloader_0.temp_name(dict_1)
    except BaseException:
        pass

def test_case_18():
    try:
        int_0 = 1121
        list_0 = [int_0, int_0, int_0]
        list_1 = []
        str_0 = ''
        file_downloader_0 = module_0.FileDownloader(list_1, str_0)
        var_0 = file_downloader_0.try_rename(int_0, list_0)
    except BaseException:
        pass

def test_case_19():
    try:
        str_0 = "W'7/jJ]j"
        float_0 = 488.06216
        file_downloader_0 = module_0.FileDownloader(str_0, float_0)
        var_0 = file_downloader_0.undo_temp_name(str_0)
        str_1 = 'f<gkEWt31LFQQ/p5-7'
        dict_0 = {str_1: str_1}
        file_downloader_1 = module_0.FileDownloader(dict_0, dict_0)
        var_1 = file_downloader_1.report_error()
    except BaseException:
        pass

def test_case_20():
    try:
        bool_0 = False
        str_0 = './broadcastDate'
        list_0 = [str_0, bool_0]
        dict_0 = {}
        file_downloader_0 = module_0.FileDownloader(list_0, dict_0)
        var_0 = file_downloader_0.report_resuming_byte(bool_0)
    except BaseException:
        pass

def test_case_21():
    try:
        str_0 = ':UhLnW[?\x0cZ6h\tl\x0b'
        bool_0 = True
        list_0 = [bool_0, bool_0]
        file_downloader_0 = module_0.FileDownloader(bool_0, list_0)
        float_0 = -530.17
        float_1 = -1583.013
        str_1 = "V'g"
        file_downloader_1 = module_0.FileDownloader(float_1, str_1)
        var_0 = file_downloader_1.format_eta(float_0)
        var_1 = file_downloader_0.to_console_title(str_0)
    except BaseException:
        pass

def test_case_22():
    try:
        int_0 = 889
        str_0 = '*W'
        bytes_0 = b'\x80,\xfc\xae\xe1G\\`\x1c'
        str_1 = '4878838'
        str_2 = "RQRA[F{B'w*%"
        file_downloader_0 = module_0.FileDownloader(str_2, int_0)
        var_0 = file_downloader_0.parse_bytes(str_1)
        file_downloader_1 = module_0.FileDownloader(str_0, bytes_0)
        var_1 = file_downloader_1.parse_bytes(int_0)
    except BaseException:
        pass

def test_case_23():
    try:
        str_0 = '.v/broadcastDate'
        str_1 = '==[,'
        str_2 = "B'j]\x0b u@O+|.`_3e)"
        str_3 = 'Tc6'
        dict_0 = {str_2: str_0, str_3: str_2}
        file_downloader_0 = module_0.FileDownloader(str_1, dict_0)
        var_0 = file_downloader_0.report_warning()
    except BaseException:
        pass

def test_case_24():
    try:
        dict_0 = {}
        str_0 = 'D=\\$vnZz+&'
        int_0 = -1121
        file_downloader_0 = module_0.FileDownloader(str_0, int_0)
        var_0 = file_downloader_0.trouble(**dict_0)
    except BaseException:
        pass

def test_case_25():
    try:
        bytes_0 = b';\xba'
        float_0 = 2189.405034361562
        set_0 = {float_0}
        dict_0 = {float_0: float_0, float_0: set_0}
        bool_0 = True
        file_downloader_0 = module_0.FileDownloader(bytes_0, bool_0)
        var_0 = file_downloader_0.try_rename(dict_0, dict_0)
        file_downloader_1 = module_0.FileDownloader(set_0, dict_0)
        str_0 = '.'
        var_1 = file_downloader_1.temp_name(str_0)
        var_2 = file_downloader_1.report_file_already_downloaded(file_downloader_1)
    except BaseException:
        pass

def test_case_26():
    try:
        str_0 = 'f<gkEWt31LFQQ/p5-7'
        dict_0 = {str_0: str_0}
        file_downloader_0 = module_0.FileDownloader(dict_0, dict_0)
        float_0 = None
        str_1 = ''
        var_0 = file_downloader_0.format_percent(float_0)
        var_1 = file_downloader_0.download(str_1, file_downloader_0)
    except BaseException:
        pass

def test_case_27():
    try:
        int_0 = -680
        str_0 = 'R26Sts,A[,5u>^R'
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
        int_1 = -2497
        float_0 = -2882.641684
        file_downloader_0 = module_0.FileDownloader(int_1, float_0)
        file_downloader_1 = module_0.FileDownloader(dict_0, file_downloader_0)
        list_0 = [dict_0, str_0, dict_0, int_1]
        file_downloader_2 = module_0.FileDownloader(file_downloader_1, list_0)
        var_0 = file_downloader_2.format_retries(int_0)
        str_1 = 'uD}O|ozu.PlW)_;)#L~V'
        bool_0 = False
        bytes_0 = b'/J\xdcz\x9b\r0"\x1e\t\x19G[\x95\xafu'
        complex_0 = None
        var_1 = file_downloader_2.calc_percent(bytes_0, complex_0)
        bytes_1 = b'\xe4\xe9p\x05.9Kc5\x08\x0cJ\xc3\xeff\xfa'
        file_downloader_3 = module_0.FileDownloader(bytes_1, str_1)
        var_2 = file_downloader_3.try_utime(str_1, bool_0)
        float_1 = 3728.3
        set_0 = set()
        str_2 = 'https?://ec\\.europa\\.eu/avservices/(?:video/player|audio/audioDetails)\\.cfm\\?.*?\\bref=(?P<id>[A-Za-z0-9-]+)'
        list_1 = [list_0]
        tuple_0 = (str_2, float_1, bool_0, list_1)
        var_3 = file_downloader_3.calc_eta(float_1, set_0, tuple_0, tuple_0)
    except BaseException:
        pass

def test_case_28():
    try:
        dict_0 = None
        list_0 = [dict_0, dict_0]
        str_0 = '7A*c|+m@'
        dict_1 = {str_0: list_0, str_0: dict_0}
        str_1 = 'VH@_?/W?n=xwt7:<._'
        set_0 = None
        float_0 = 1509.37
        list_1 = [dict_1, str_0, float_0]
        file_downloader_0 = module_0.FileDownloader(float_0, list_1)
        var_0 = file_downloader_0.format_speed(set_0)
        bytes_0 = b'\xfc\xb4\xf5\x1dZH'
        bool_0 = False
        tuple_0 = (dict_1, float_0, bytes_0, bool_0)
        tuple_1 = (bytes_0, tuple_0, str_1, set_0)
        var_1 = file_downloader_0.to_console_title(tuple_1)
    except BaseException:
        pass

def test_case_29():
    try:
        bool_0 = True
        int_0 = 3118
        bytes_0 = b'\x1a\x94\x81Cn9u\xc7\r\x07\x94\xec\xda\xc0\x19#'
        float_0 = -308.0
        bool_1 = False
        file_downloader_0 = module_0.FileDownloader(bool_1, float_0)
        var_0 = file_downloader_0.calc_eta(bool_0, int_0, bytes_0, float_0)
    except BaseException:
        pass

def test_case_30():
    try:
        str_0 = '$[jO np4sQ!8c'
        int_0 = -1325
        dict_0 = {str_0: str_0}
        file_downloader_0 = module_0.FileDownloader(dict_0, dict_0)
        list_0 = [int_0, dict_0]
        bytes_0 = b'\xcdN0\x88N\xc1\xd5Lu\x10\xf6\x97'
        list_1 = [dict_0]
        float_0 = 698.51
        tuple_0 = (list_0, bytes_0, list_1, float_0)
        str_1 = 'f'
        complex_0 = None
        var_0 = file_downloader_0.slow_down(tuple_0, str_1, complex_0)
        set_0 = {float_0, complex_0}
        dict_1 = {}
        file_downloader_1 = module_0.FileDownloader(set_0, dict_1)
        str_2 = ';;AAnX'
        var_1 = file_downloader_1.try_utime(str_2, set_0)
        bool_0 = None
        bytes_1 = b'\xd4\x02\xc8\x81k)\xcek1\x16m'
        int_1 = 1602
        var_2 = file_downloader_0.calc_eta(file_downloader_1, bool_0, bytes_1, int_1)
    except BaseException:
        pass

def test_case_31():
    try:
        float_0 = 548.74
        tuple_0 = ()
        file_downloader_0 = module_0.FileDownloader(float_0, tuple_0)
        var_0 = file_downloader_0.format_seconds(float_0)
        int_0 = 2179
        var_1 = file_downloader_0.format_retries(int_0)
        str_0 = "W'7/jJ]j"
        float_1 = 488.06216
        file_downloader_1 = module_0.FileDownloader(str_0, float_1)
        var_2 = file_downloader_1.undo_temp_name(str_0)
        bool_0 = False
        int_1 = 893
        set_0 = {int_1}
        var_3 = file_downloader_0.calc_speed(bool_0, int_1, set_0)
    except BaseException:
        pass

def test_case_32():
    try:
        bytes_0 = b'\xec\xba'
        int_0 = 1022
        file_downloader_0 = None
        int_1 = None
        file_downloader_1 = module_0.FileDownloader(file_downloader_0, int_1)
        float_0 = -134.03421
        list_0 = [float_0, bytes_0, float_0, bytes_0, float_0, float_0]
        file_downloader_2 = module_0.FileDownloader(float_0, list_0)
        var_0 = file_downloader_2.format_retries(int_0)
        float_1 = 2189.405034361562
        set_0 = {float_1}
        dict_0 = {float_1: float_1, float_1: set_0}
        file_downloader_3 = module_0.FileDownloader(set_0, dict_0)
        str_0 = 'screenx'
        var_1 = file_downloader_3.slow_down(str_0, str_0, set_0)
        str_1 = '.'
        var_2 = file_downloader_3.temp_name(str_1)
        str_2 = '\t4\t\\&s'
        str_3 = 'J'
        var_3 = file_downloader_3.try_rename(str_2, str_3)
    except BaseException:
        pass

def test_case_33():
    try:
        str_0 = '}&Zny<sv'
        str_1 = None
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_1: str_0}
        float_0 = 2179.6561
        dict_1 = {}
        bool_0 = False
        tuple_0 = (dict_0,)
        bytes_0 = b'g\xac{\x83\x0f\xd9\xd3'
        file_downloader_0 = module_0.FileDownloader(tuple_0, bytes_0)
        var_0 = file_downloader_0.calc_eta(float_0, float_0, dict_1, bool_0)
        str_2 = 'f\x0b;r,|mI~bQLTP|}o'
        bool_1 = False
        bytes_1 = b'\xbb;\xacp-\xe3\x87\x1ep\xd4\xaa'
        set_0 = {bytes_1}
        file_downloader_1 = module_0.FileDownloader(set_0, bytes_1)
        var_1 = file_downloader_1.calc_speed(dict_0, str_2, bool_1)
    except BaseException:
        pass