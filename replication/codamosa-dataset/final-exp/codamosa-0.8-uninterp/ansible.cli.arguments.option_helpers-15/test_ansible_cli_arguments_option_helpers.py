# Automatically generated by Pynguin.
import ansible.cli.arguments.option_helpers as module_0
import argparse as module_1
import ansible.utils.path as module_2

def test_case_0():
    var_0 = module_0.version()

def test_case_1():
    var_0 = module_0.unfrack_path()

def test_case_2():
    argument_parser_0 = module_1.ArgumentParser()
    var_0 = module_0.add_async_options(argument_parser_0)
    str_0 = '-B'
    str_1 = '1'
    str_2 = [str_0, str_1]
    var_1 = argument_parser_0.parse_args(str_2)

def test_case_3():
    argument_parser_0 = module_1.ArgumentParser()
    var_0 = module_0.add_basedir_options(argument_parser_0)
    str_0 = '--playbook-dir'
    str_1 = 'test_add_basedir_options'
    str_2 = [str_0, str_1]
    var_1 = argument_parser_0.parse_args(str_2)
    var_2 = var_1.basedir

def test_case_4():
    str_0 = 'add_fork_options test'
    argument_parser_0 = module_1.ArgumentParser(str_0)
    var_0 = module_0.add_fork_options(argument_parser_0)
    var_1 = []
    var_2 = argument_parser_0.parse_args(var_1)
    var_3 = var_2.forks

def test_case_5():
    argument_parser_0 = module_1.ArgumentParser()
    var_0 = module_0.add_inventory_options(argument_parser_0)
    str_0 = '-i'
    var_1 = argument_parser_0.parse_args(str_0)

def test_case_6():
    str_0 = 'test'
    argument_parser_0 = module_1.ArgumentParser(str_0)
    var_0 = module_0.add_meta_options(argument_parser_0)
    var_1 = argument_parser_0._actions
    var_2 = len(var_1)

def test_case_7():
    str_0 = 'ansible'
    argument_parser_0 = module_1.ArgumentParser(str_0)
    var_0 = module_0.add_output_options(argument_parser_0)

def test_case_8():
    str_0 = 'ansible'
    argument_parser_0 = module_1.ArgumentParser(str_0)
    var_0 = module_0.add_runas_options(argument_parser_0)
    str_1 = '-b'
    str_2 = '--become-method'
    str_3 = 'test'
    str_4 = '--become-user'
    str_5 = [str_1, str_2, str_3, str_4, str_3]
    var_1 = argument_parser_0.parse_args(str_5)

def test_case_9():
    str_0 = 'ansible-playbook'
    argument_parser_0 = module_1.ArgumentParser(str_0)
    var_0 = module_0.add_vault_options(argument_parser_0)
    str_1 = '--vault-id'
    str_2 = 'ident1@prompt'
    str_3 = 'ident2'
    str_4 = '--ask-vault-password'
    str_5 = '--vault-password-file'
    str_6 = 'file1'
    str_7 = 'file2'
    str_8 = [str_1, str_2, str_1, str_3, str_4, str_5, str_6, str_5, str_7]
    var_1 = argument_parser_0.parse_args(str_8)

def test_case_10():
    dict_0 = {}
    var_0 = module_0.create_base_parser(dict_0)
    str_0 = 'ansible'
    argument_parser_0 = module_1.ArgumentParser(str_0)
    var_1 = module_0.add_output_options(argument_parser_0)

def test_case_11():
    str_0 = '-u'
    str_1 = 'dude'
    str_2 = '--private-key'
    str_3 = 'local'
    str_4 = 'b'
    str_5 = '--ssh-common-sargs'
    str_6 = 'c'
    str_7 = '--sftp-extra-args'
    str_8 = 'd'
    str_9 = '$%]V3z\x0c9'
    str_10 = '--ssh-extra-args'
    str_11 = 'PeaPL*'
    str_12 = '--timeout'
    str_13 = [str_0, str_1, str_3, str_2, str_6, str_5, str_3, str_12, str_4, str_5, str_6, str_7, str_8, str_9, str_8, str_10, str_11, str_12, str_2, str_5]
    argument_parser_0 = module_1.ArgumentParser()
    var_0 = module_0.add_connect_options(argument_parser_0)
    var_1 = argument_parser_0.parse_args(str_13)
    var_2 = module_2.unfrackpath(str_8)

def test_case_12():
    var_0 = module_0.version()
    set_0 = None
    var_1 = module_0.unfrack_path()
    sorting_help_formatter_0 = module_0.SortingHelpFormatter(set_0)
    dict_0 = {}
    var_2 = sorting_help_formatter_0.add_arguments(dict_0)
    str_0 = 'Ep[T'
    var_3 = module_0.create_base_parser(str_0)

def test_case_13():
    str_0 = 'zHz8:G'
    var_0 = module_0.maybe_unfrack_path(str_0)
    var_1 = module_0.version()
    str_1 = '?'
    set_0 = None
    float_0 = -1909.9
    prepend_list_action_0 = module_0.PrependListAction(float_0, str_1)
    sorting_help_formatter_0 = module_0.SortingHelpFormatter(set_0)
    float_1 = None
    var_2 = prepend_list_action_0.__call__(float_1, prepend_list_action_0, str_1)
    str_2 = '8\\0;@`NgGuNnmri%'
    float_2 = None
    list_0 = []
    list_1 = [list_0, str_1, str_2]
    ansible_version_0 = module_0.AnsibleVersion(str_1, str_2, float_2, list_1, list_0)

def test_case_14():
    namespace_0 = module_1.Namespace()
    str_0 = 'foo'
    int_0 = 42
    var_0 = module_0.ensure_value(namespace_0, str_0, int_0)
    int_1 = 2
    var_1 = module_0.ensure_value(namespace_0, str_0, int_1)

def test_case_15():
    argument_parser_0 = module_1.ArgumentParser()
    var_0 = module_0.add_subset_options(argument_parser_0)
    str_0 = '-t'
    str_1 = 'foo'
    str_2 = 'bar'
    str_3 = '7@o:bdhB?t'
    str_4 = [str_0, str_1, str_0, str_2, str_3, str_1]
    var_1 = argument_parser_0.parse_args(str_4)

def test_case_16():
    str_0 = 'TESTING'
    int_0 = 40
    int_1 = 100
    var_0 = lambda prog: argparse.HelpFormatter(prog, max_help_position=int_0, width=int_1)
    argument_parser_0 = module_1.ArgumentParser(str_0, var_0)
    var_1 = module_0.add_runtask_options(argument_parser_0)
    str_1 = '-e'
    str_2 = '"foo=bar"'
    str_3 = '@extra_variables_file.yaml'
    str_4 = [str_1, str_2, str_1, str_3]
    var_2 = argument_parser_0.parse_args(str_4)

def test_case_17():
    argument_parser_0 = module_1.ArgumentParser()
    var_0 = module_0.add_check_options(argument_parser_0)