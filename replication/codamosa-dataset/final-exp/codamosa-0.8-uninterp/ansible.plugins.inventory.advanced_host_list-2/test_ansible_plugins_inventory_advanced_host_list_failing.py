# Automatically generated by Pynguin.
import ansible.plugins.inventory.advanced_host_list as module_0

def test_case_0():
    try:
        inventory_module_0 = module_0.InventoryModule()
        var_0 = inventory_module_0.verify_file(inventory_module_0)
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = 232
        inventory_module_0 = None
        inventory_module_1 = module_0.InventoryModule()
        var_0 = inventory_module_1.parse(int_0, inventory_module_0, inventory_module_0)
    except BaseException:
        pass

def test_case_2():
    try:
        inventory_module_0 = module_0.InventoryModule()
        var_0 = None
        str_0 = 'foo'
        var_1 = inventory_module_0.parse(var_0, var_0, str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        inventory_module_0 = module_0.InventoryModule()
        bool_0 = True
        bytes_0 = None
        str_0 = ',\rhibdy"'
        var_0 = inventory_module_0.parse(bool_0, bytes_0, str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'G$H\t\\'
        inventory_module_0 = module_0.InventoryModule()
        inventory_module_1 = module_0.InventoryModule()
        var_0 = inventory_module_1.verify_file(str_0)
        int_0 = -2013
        float_0 = 1251.9158785084405
        list_0 = [str_0, int_0, float_0, str_0]
        tuple_0 = (list_0, inventory_module_0)
        bool_0 = False
        str_1 = ''
        var_1 = inventory_module_0.parse(tuple_0, bool_0, str_1)
        inventory_module_2 = module_0.InventoryModule()
        bytes_0 = b"\x89\x81\x10\x11\xbf&\xae\x18;\xc8\x97\xe0\x86~\xc0'\xaeW\xeb"
        tuple_1 = ()
        bool_1 = False
        var_2 = inventory_module_0.parse(bytes_0, tuple_1, bool_1, int_0)
    except BaseException:
        pass

def test_case_5():
    try:
        inventory_module_0 = module_0.InventoryModule()
        var_0 = None
        str_0 = '\x0b2b[kZb(v\\?fv'
        var_1 = inventory_module_0.parse(var_0, var_0, str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        inventory_module_0 = module_0.InventoryModule()
        bool_0 = False
        str_0 = "S^'I=\n\x0c<j\x0b"
        var_0 = inventory_module_0.verify_file(str_0)
        inventory_module_1 = module_0.InventoryModule()
        list_0 = []
        bool_1 = False
        tuple_0 = (bool_0, inventory_module_0, bool_1)
        str_1 = 'v>;[Ba!_7??s};u|!'
        var_1 = inventory_module_0.parse(tuple_0, list_0, str_1)
    except BaseException:
        pass