# Automatically generated by Pynguin.
import ansible.cli.doc as module_0

def test_case_0():
    try:
        str_0 = '\rC\rg\x0b<"'
        doc_c_l_i_0 = module_0.DocCLI(str_0)
        var_0 = module_0.jdump(doc_c_l_i_0)
    except BaseException:
        pass

def test_case_1():
    try:
        tuple_0 = ()
        float_0 = 7022.267
        doc_c_l_i_0 = module_0.DocCLI(float_0)
        var_0 = doc_c_l_i_0.display_plugin_list(tuple_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'filename'
        str_1 = 'entry_points'
        str_2 = 'dir'
        str_3 = 'wmain'
        str_4 = 'description'
        str_5 = 'options'
        str_6 = 'This role has a main entry point'
        str_7 = 'which is invoked by default'
        str_8 = [str_6, str_7]
        str_9 = "oGq3y-x'<d=;6"
        doc_c_l_i_0 = module_0.DocCLI(str_9)
        var_0 = doc_c_l_i_0.run()
        str_10 = 'role_option'
        str_11 = 'lookup'
        str_12 = {str_11: str_11, str_4: str_11}
        str_13 = {str_10: str_12}
        str_14 = {str_4: str_8, str_5: str_13}
        str_15 = {str_3: str_14}
        str_16 = {str_0: str_2, str_1: str_15}
        doc_c_l_i_1 = module_0.DocCLI(str_16)
        str_17 = 'ro4le1'
        var_1 = doc_c_l_i_1.get_role_man_text(str_17, str_16)
        var_2 = doc_c_l_i_0.run()
        dict_0 = None
        var_3 = doc_c_l_i_1.get_all_plugins_of_type(dict_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bool_0 = False
        list_0 = []
        str_0 = " If this is desired, use '^' to match every line in the file and avoid this warning."
        doc_c_l_i_0 = module_0.DocCLI(str_0)
        dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
        doc_c_l_i_1 = module_0.DocCLI(dict_0)
        var_0 = doc_c_l_i_1.get_plugin_metadata(list_0, doc_c_l_i_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = '{%\x0chg\x0b<"'
        doc_c_l_i_0 = module_0.DocCLI(str_0)
        role_mixin_0 = None
        int_0 = None
        var_0 = doc_c_l_i_0.run()
        var_1 = module_0.add_collection_plugins(role_mixin_0, int_0)
        bool_0 = False
        dict_0 = {}
        var_2 = doc_c_l_i_0.find_plugins(bool_0, dict_0, dict_0)
        set_0 = {doc_c_l_i_0}
        bytes_0 = b'\xe0VLWV\xa2JtKS\xef'
        str_1 = '. :BU(\x0bZqVT\t*/W0*G"'
        set_1 = {int_0}
        dict_1 = {var_1: set_0}
        doc_c_l_i_1 = module_0.DocCLI(dict_1)
        list_0 = [str_1, str_0, bool_0, doc_c_l_i_1]
        var_3 = doc_c_l_i_0.format_plugin_doc(set_0, bytes_0, str_1, doc_c_l_i_0, set_1, list_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'Z8;s\x0c<C'
        doc_c_l_i_0 = module_0.DocCLI(str_0)
        bool_0 = False
        role_mixin_0 = None
        var_0 = doc_c_l_i_0.find_plugins(bool_0, role_mixin_0, bool_0)
        list_0 = [bool_0, var_0, str_0, bool_0]
        var_1 = doc_c_l_i_0.add_fields(role_mixin_0, str_0, list_0, doc_c_l_i_0, list_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'Fk\x0c/O$^l\x0b~(cBx'
        set_0 = {str_0}
        plugin_not_found_0 = module_0.PluginNotFound()
        var_0 = module_0.add_collection_plugins(plugin_not_found_0, str_0)
        float_0 = -1918.6273
        doc_c_l_i_0 = module_0.DocCLI(float_0)
        var_1 = doc_c_l_i_0.get_role_man_text(str_0, set_0)
    except BaseException:
        pass

def test_case_7():
    try:
        dict_0 = {}
        plugin_not_found_0 = module_0.PluginNotFound()
        doc_c_l_i_0 = module_0.DocCLI(plugin_not_found_0)
        var_0 = doc_c_l_i_0.get_man_text(dict_0)
    except BaseException:
        pass

def test_case_8():
    try:
        dict_0 = {}
        role_mixin_0 = module_0.RoleMixin(**dict_0)
        complex_0 = None
        tuple_0 = ()
        int_0 = 3593
        doc_c_l_i_0 = module_0.DocCLI(role_mixin_0)
        var_0 = doc_c_l_i_0.add_fields(complex_0, tuple_0, int_0, dict_0)
        int_1 = 2392
        var_1 = doc_c_l_i_0.display_plugin_list(int_1)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'e\x0cZ?6ot&8.BExB'
        bool_0 = True
        dict_0 = {str_0: str_0, str_0: str_0, str_0: bool_0, str_0: str_0}
        list_0 = [dict_0, dict_0]
        str_1 = '!_/^>De3'
        float_0 = 2357.42
        doc_c_l_i_0 = module_0.DocCLI(float_0)
        var_0 = doc_c_l_i_0.namespace_from_plugin_filepath(dict_0, list_0, str_1)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = 'entry_points'
        str_1 = 'wmain'
        str_2 = 'description'
        plugin_not_found_0 = module_0.PluginNotFound()
        str_3 = 'options'
        str_4 = 'This role has a main entry point'
        str_5 = '*4L)w'
        str_6 = {str_2: str_5, str_3: str_0}
        str_7 = {str_1: str_6}
        str_8 = {str_4: str_5, str_0: str_7}
        doc_c_l_i_0 = module_0.DocCLI(str_8)
        var_0 = doc_c_l_i_0.get_role_man_text(str_2, str_8)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = '\r+\rsg\x0b<"'
        doc_c_l_i_0 = module_0.DocCLI(str_0)
        float_0 = 2.0
        int_0 = -4086
        list_0 = []
        var_0 = doc_c_l_i_0.find_plugins(int_0, float_0, list_0)
        dict_0 = {str_0: list_0, str_0: float_0, str_0: doc_c_l_i_0, str_0: var_0}
        plugin_not_found_0 = module_0.PluginNotFound()
        var_1 = doc_c_l_i_0.add_fields(int_0, dict_0, plugin_not_found_0, list_0)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = '>+#sP0\x0b<k'
        doc_c_l_i_0 = module_0.DocCLI(str_0)
        var_0 = doc_c_l_i_0.run()
        dict_0 = {str_0: str_0}
        str_1 = 'aU+<v,eyevA{96Uf'
        var_1 = doc_c_l_i_0.get_man_text(dict_0, str_1)
    except BaseException:
        pass

def test_case_13():
    try:
        int_0 = 7
        list_0 = []
        dict_0 = {int_0: list_0}
        str_0 = ''
        bytes_0 = b'\xd0w\xc9d\xceN\x8f'
        dict_1 = {str_0: bytes_0}
        bytes_1 = b'\xe9"\x0f\xe0=M\xef'
        doc_c_l_i_0 = module_0.DocCLI(bytes_1)
        var_0 = doc_c_l_i_0.add_fields(list_0, dict_0, int_0, dict_1)
    except BaseException:
        pass

def test_case_14():
    try:
        str_0 = 'filename'
        str_1 = 'entry_points'
        str_2 = 'wmain'
        str_3 = 'description'
        str_4 = 'options'
        str_5 = 'This role has a main entry point'
        str_6 = [str_5, str_3]
        str_7 = '*4L)w'
        str_8 = {str_1: str_3}
        str_9 = {str_3: str_6, str_4: str_8}
        str_10 = {str_2: str_9}
        str_11 = {str_0: str_7, str_1: str_10}
        doc_c_l_i_0 = module_0.DocCLI(str_11)
        str_12 = 'role1'
        var_0 = doc_c_l_i_0.get_role_man_text(str_12, str_11)
    except BaseException:
        pass

def test_case_15():
    try:
        str_0 = '}BZa'
        str_1 = 'entry_points'
        plugin_not_found_0 = module_0.PluginNotFound()
        str_2 = 'wmain'
        str_3 = 'description'
        str_4 = 'options'
        str_5 = ']Q5'
        doc_c_l_i_0 = module_0.DocCLI(str_0)
        var_0 = doc_c_l_i_0.run()
        str_6 = 'roe_option'
        str_7 = {str_0: str_6, str_4: str_4, str_5: var_0, str_3: str_4}
        str_8 = {str_6: str_7}
        str_9 = {str_3: str_5, str_4: str_8}
        str_10 = {str_2: str_9}
        str_11 = {str_0: str_7, str_1: str_10}
        str_12 = 'role1'
        var_1 = doc_c_l_i_0.get_role_man_text(str_12, str_11)
    except BaseException:
        pass