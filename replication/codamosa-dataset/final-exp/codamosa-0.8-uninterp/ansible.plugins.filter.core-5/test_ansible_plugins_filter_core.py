# Automatically generated by Pynguin.
import ansible.plugins.filter.core as module_0
import ansible.template as module_1

def test_case_0():
    pass

def test_case_1():
    int_0 = 948
    str_0 = 'KZKR8}'
    var_0 = module_0.to_bool(str_0)
    var_1 = module_0.get_hash(int_0)

def test_case_2():
    float_0 = -1362.3868
    var_0 = module_0.to_bool(float_0)

def test_case_3():
    str_0 = 'To^_PI3@y#e[&\x0bb'
    var_0 = module_0.fileglob(str_0)

def test_case_4():
    var_0 = module_0.regex_replace()

def test_case_5():
    float_0 = 1000.0
    var_0 = module_0.from_yaml_all(float_0)
    str_0 = 'python'
    bytes_0 = b'\x90'
    dict_0 = {str_0: bytes_0}
    var_1 = module_0.regex_findall(float_0, str_0, dict_0)

def test_case_6():
    filter_module_0 = module_0.FilterModule()
    var_0 = module_0.regex_replace(filter_module_0)
    var_1 = filter_module_0.filters()
    bytes_0 = None
    bool_0 = False
    var_2 = module_0.ternary(bytes_0, bool_0, filter_module_0)

def test_case_7():
    float_0 = 1000.0
    var_0 = module_0.from_yaml_all(float_0)

def test_case_8():
    str_0 = '-IA$ P'
    int_0 = 428
    list_0 = []
    var_0 = module_0.rand(str_0, int_0, list_0)

def test_case_9():
    bool_0 = True
    str_0 = 'To^_PI3@y#e[&\x0bb'
    var_0 = module_0.fileglob(str_0)
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    dict_0 = {bool_0: list_0, bool_0: list_0}
    var_1 = module_0.randomize_list(list_0, dict_0)

def test_case_10():
    bool_0 = True
    var_0 = module_0.randomize_list(bool_0)

def test_case_11():
    list_0 = None
    var_0 = module_0.mandatory(list_0)

def test_case_12():
    int_0 = -2757
    str_0 = 's'
    str_1 = 'K1o9'
    dict_0 = {str_0: str_0, str_1: str_1, str_1: int_0, str_1: str_0}
    bool_0 = True
    tuple_0 = (int_0, dict_0, bool_0)
    var_0 = module_0.b64encode(tuple_0)

def test_case_13():
    float_0 = -1076.095
    var_0 = module_0.randomize_list(float_0)
    str_0 = '!cpZyz7fQ@5VAh<'
    var_1 = module_0.regex_escape(str_0)

def test_case_14():
    var_0 = module_0.combine()
    str_0 = ''
    var_1 = module_0.regex_search(str_0, str_0)

def test_case_15():
    var_0 = module_0.combine()

def test_case_16():
    str_0 = 'SL'
    var_0 = module_0.comment(str_0)

def test_case_17():
    float_0 = -2925.59
    var_0 = module_0.from_yaml(float_0)

def test_case_18():
    filter_module_0 = module_0.FilterModule()
    var_0 = module_0.randomize_list(filter_module_0)
    str_0 = 'Tx'
    str_1 = '\\\r|k(JSl6~dx'
    dict_0 = {str_1: str_0}
    list_0 = [str_1]
    int_0 = 32644
    var_1 = module_0.ternary(list_0, int_0, dict_0)
    var_2 = module_0.from_yaml(str_0)

def test_case_19():
    list_0 = None
    var_0 = module_0.to_bool(list_0)

def test_case_20():
    complex_0 = None
    list_0 = [complex_0, complex_0, complex_0, complex_0]
    var_0 = module_0.combine(*list_0)

def test_case_21():
    str_0 = 'this is a test'
    str_1 = 'posix_basic'
    var_0 = module_0.regex_escape(str_0, str_1)

def test_case_22():
    dict_0 = {}
    set_0 = None
    list_0 = [dict_0, dict_0, set_0, set_0]
    var_0 = module_0.combine(*list_0)

def test_case_23():
    filter_module_0 = module_0.FilterModule()
    var_0 = module_0.randomize_list(filter_module_0)
    dict_0 = {}
    str_0 = 'Tx'
    str_1 = '}'
    bool_0 = True
    var_1 = module_0.mandatory(dict_0, bool_0)
    str_2 = '\\\r|k(JSl6~dx'
    dict_1 = {str_2: str_0}
    list_0 = [str_2]
    var_2 = filter_module_0.filters()
    var_3 = module_0.ternary(dict_1, str_1, list_0)
    list_1 = [dict_0]
    str_3 = '\n'
    var_4 = module_0.subelements(list_1, str_3, dict_1)

def test_case_24():
    bool_0 = False
    var_0 = module_0.to_bool(bool_0)

def test_case_25():
    filter_module_0 = module_0.FilterModule()
    var_0 = module_0.randomize_list(filter_module_0)
    dict_0 = {}
    str_0 = 'Tx'
    str_1 = '}'
    bool_0 = True
    var_1 = module_0.mandatory(dict_0, bool_0)
    str_2 = '\\\r|k(JSl6~dx'
    list_0 = None
    var_2 = module_0.quote(list_0)
    dict_1 = {str_2: str_0}
    list_1 = [str_2]
    var_3 = filter_module_0.filters()
    var_4 = module_0.ternary(dict_1, str_1, list_1)
    list_2 = [dict_0]
    str_3 = '\n'
    var_5 = module_0.subelements(list_2, str_3, dict_1)

def test_case_26():
    bytes_0 = b''
    list_0 = [bytes_0, bytes_0]
    bool_0 = True
    tuple_0 = (list_0, bool_0, bool_0)
    int_0 = None
    var_0 = module_0.flatten(tuple_0, int_0)

def test_case_27():
    str_0 = ''
    var_0 = module_0.regex_replace(str_0, str_0, str_0)
    str_1 = 'abcd'
    var_1 = module_0.regex_replace(str_1, str_0, str_0)
    str_2 = 'E'
    var_2 = module_0.regex_replace(str_0, str_0, str_2)
    var_3 = module_0.regex_replace(str_1, str_0, str_2)
    str_3 = 'a'
    var_4 = module_0.regex_replace(str_0, str_3, str_0)
    var_5 = module_0.regex_replace(str_1, str_3, str_0)
    var_6 = module_0.regex_replace(str_0, str_3, str_2)
    var_7 = module_0.regex_replace(str_1, str_3, str_2)
    str_4 = 'A'
    var_8 = module_0.regex_replace(str_0, str_4, str_2)
    var_9 = module_0.regex_replace(str_1, str_4, str_2)
    bool_0 = True
    var_10 = module_0.regex_replace(str_0, str_4, str_2, bool_0)

def test_case_28():
    str_0 = '/etc/*d'
    var_0 = module_0.fileglob(str_0)
    str_1 = '/etc/fstab'
    var_1 = module_0.fileglob(str_1)
    var_2 = module_0.fileglob(str_0)

def test_case_29():
    int_0 = 0
    list_0 = [int_0]
    var_0 = module_0.combine(*list_0)

def test_case_30():
    bool_0 = True
    var_0 = module_0.to_bool(bool_0)
    str_0 = '12'
    var_1 = module_0.to_bool(str_0)
    str_1 = 'on'
    var_2 = module_0.to_bool(str_1)
    str_2 = 'true'
    var_3 = module_0.to_bool(str_2)
    str_3 = 'yes'
    var_4 = module_0.to_bool(str_3)
    str_4 = ''
    var_5 = module_0.to_bool(str_4)
    ansible_undefined_0 = module_1.AnsibleUndefined(str_1, var_4)
    async_iterator_0 = ansible_undefined_0.__aiter__()
    var_6 = module_0.regex_replace(async_iterator_0)
    bytes_0 = b'\x99\xf2KP\xed'
    var_7 = module_0.regex_replace(bytes_0)

def test_case_31():
    str_0 = ''
    str_1 = 'plain'
    var_0 = module_0.comment(str_0, str_1)
    str_2 = 'erlang'
    var_1 = module_0.comment(str_0, str_2)
    str_3 = 'c'
    var_2 = module_0.comment(str_0, str_3)
    str_4 = 'cblock'
    var_3 = module_0.comment(str_0, str_4)
    str_5 = 'xml'
    var_4 = module_0.comment(str_0, str_5)
    str_6 = ';; '
    var_5 = module_0.comment(str_0)
    str_7 = '\n'
    var_6 = module_0.comment(str_7)
    str_8 = 'example text'
    var_7 = module_0.comment(str_8)

def test_case_32():
    str_0 = 'foo'
    str_1 = 'bar'
    str_2 = 'baz'
    str_3 = [str_2]
    var_0 = module_0.flatten(str_3)
    str_4 = [str_2]
    str_5 = [str_1, str_4]
    str_6 = [str_0, str_5]
    int_0 = 1
    var_1 = module_0.flatten(str_6, int_0)
    str_7 = [str_2]
    str_8 = [str_1, str_7]
    str_9 = [str_0, str_8]
    int_1 = 2
    var_2 = module_0.flatten(str_9, int_1)
    str_10 = [str_2]
    str_11 = [str_1, str_10]
    str_12 = [str_0, str_11]
    int_2 = 3
    var_3 = module_0.flatten(str_12, int_2)
    str_13 = [str_2]
    str_14 = [str_1, str_13]
    str_15 = [str_0, str_14]
    int_3 = 4
    var_4 = module_0.flatten(str_15, int_3)