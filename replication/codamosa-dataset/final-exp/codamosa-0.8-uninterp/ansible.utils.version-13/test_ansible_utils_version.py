# Automatically generated by Pynguin.
import ansible.utils.version as module_0
import ansible.module_utils.compat.version as module_1

def test_case_0():
    semantic_version_0 = module_0.SemanticVersion()

def test_case_1():
    list_0 = []
    alpha_0 = module_0._Alpha(list_0)

def test_case_2():
    semantic_version_0 = module_0.SemanticVersion()
    bytes_0 = b'\xc7\x05\x08'
    float_0 = -1807.91166
    alpha_0 = module_0._Alpha(float_0)
    var_0 = alpha_0.__ne__(bytes_0)
    semantic_version_1 = module_0.SemanticVersion()
    var_1 = semantic_version_1.__ne__(semantic_version_0)

def test_case_3():
    int_0 = 881
    numeric_0 = module_0._Numeric(int_0)
    alpha_0 = module_0._Alpha(numeric_0)
    float_0 = -527.5
    numeric_1 = module_0._Numeric(float_0)
    var_0 = numeric_0.__repr__()
    var_1 = alpha_0.__le__(numeric_0)
    var_2 = numeric_0.__eq__(int_0)
    var_3 = numeric_1.__ge__(numeric_1)
    int_1 = -963
    var_4 = numeric_0.__gt__(int_1)

def test_case_4():
    semantic_version_0 = module_0.SemanticVersion()
    var_0 = semantic_version_0.__repr__()

def test_case_5():
    semantic_version_0 = module_0.SemanticVersion()
    var_0 = semantic_version_0.__lt__(semantic_version_0)

def test_case_6():
    semantic_version_0 = module_0.SemanticVersion()
    var_0 = semantic_version_0.__ne__(semantic_version_0)

def test_case_7():
    str_0 = 'z'
    alpha_0 = module_0._Alpha(str_0)
    str_1 = 'abc'
    alpha_1 = module_0._Alpha(str_1)
    var_0 = alpha_0 <= alpha_1
    str_2 = 'abc'
    alpha_2 = module_0._Alpha(str_2)
    str_3 = 'z'
    alpha_3 = module_0._Alpha(str_3)
    var_1 = alpha_2 <= alpha_3

def test_case_8():
    str_0 = '0.0.0'
    semantic_version_0 = module_0.SemanticVersion(str_0)
    str_1 = '1.0.0'
    semantic_version_1 = module_0.SemanticVersion(str_1)
    str_2 = '1.1.0'
    semantic_version_2 = module_0.SemanticVersion(str_2)
    str_3 = '1.1.1'
    semantic_version_3 = module_0.SemanticVersion(str_3)

def test_case_9():
    str_0 = '1.0.0-rc1'
    semantic_version_0 = module_0.SemanticVersion(str_0)
    str_1 = '1.0.0-rc1-Ip.sa.51V4f85'
    var_0 = semantic_version_0.parse(str_1)
    semantic_version_1 = module_0.SemanticVersion(str_0)
    str_2 = '1.0.0-rc1-exp.sha.5114F85'
    var_1 = semantic_version_1.parse(str_2)
    semantic_version_2 = module_0.SemanticVersion(str_0)
    str_3 = '1.0.0-rc1+exp.sha.5114f85'
    var_2 = semantic_version_2.parse(str_3)
    semantic_version_3 = module_0.SemanticVersion(str_0)
    str_4 = '1.0.0-rc1+exp.sha.5114F85'
    var_3 = semantic_version_3.parse(str_4)
    str_5 = '2.0.0-alpha.1'
    semantic_version_4 = module_0.SemanticVersion(str_5)
    var_4 = semantic_version_4.parse(str_2)

def test_case_10():
    str_0 = '1.0.0-rc1'
    semantic_version_0 = module_0.SemanticVersion(str_0)
    str_1 = '1.0.0-rc1-exp.sha.5114f85'
    var_0 = semantic_version_0.parse(str_1)
    semantic_version_1 = module_0.SemanticVersion(str_0)
    str_2 = '1.0.0-rc1-exp.sha.5114F85'
    var_1 = semantic_version_1.parse(str_2)
    semantic_version_2 = module_0.SemanticVersion(str_0)
    str_3 = '1.0.0-rc1+exp.sha.5114f85'
    var_2 = semantic_version_2.parse(str_3)
    semantic_version_3 = module_0.SemanticVersion(str_0)
    str_4 = '1.0.0-rc1+exp.sha.5114F85'
    var_3 = semantic_version_3.parse(str_4)
    str_5 = '2.0.0-alpha.1'
    semantic_version_4 = module_0.SemanticVersion(str_5)
    str_6 = '2.0.0-alpha.1+002'
    var_4 = semantic_version_4.parse(str_6)

def test_case_11():
    str_0 = 'A'
    alpha_0 = module_0._Alpha(str_0)
    var_0 = alpha_0.__le__(str_0)
    alpha_1 = module_0._Alpha(str_0)
    str_1 = 'aaa'
    var_1 = alpha_1.__le__(str_1)
    str_2 = 'B'
    alpha_2 = module_0._Alpha(str_2)
    var_2 = alpha_2.__le__(str_0)

def test_case_12():
    bool_0 = None
    float_0 = -527.5
    numeric_0 = module_0._Numeric(float_0)
    var_0 = numeric_0.__repr__()
    semantic_version_0 = module_0.SemanticVersion()
    var_1 = numeric_0.__ge__(numeric_0)
    var_2 = semantic_version_0.__eq__(semantic_version_0)
    str_0 = '-'
    loose_version_0 = module_1.LooseVersion(str_0)
    var_3 = loose_version_0.__ge__(bool_0)
    var_4 = semantic_version_0.from_loose_version(loose_version_0)
    semantic_version_1 = module_0.SemanticVersion()
    loose_version_1 = module_1.LooseVersion()
    semantic_version_2 = module_0.SemanticVersion()
    var_5 = semantic_version_0.from_loose_version(loose_version_0)