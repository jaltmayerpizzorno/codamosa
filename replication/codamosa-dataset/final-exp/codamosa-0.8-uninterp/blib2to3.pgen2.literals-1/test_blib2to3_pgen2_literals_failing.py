# Automatically generated by Pynguin.
import blib2to3.pgen2.literals as module_0
import re as module_1

def test_case_0():
    try:
        str_0 = '[$c32\x0bUGz.'
        str_1 = module_0.evalString(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        module_0.test()
        str_0 = '"".%Z&p{'
        str_1 = module_0.evalString(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '"""'
        str_1 = module_0.evalString(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '\\\\(\'|\\"|\\\\|[abfnrtv]|x.{0,2}|[0-7]{1,3})'
        str_1 = '\\x0f'
        var_0 = module_1.match(str_0, str_1)
        str_2 = module_0.escape(var_0)
        str_3 = '\\xg'
        var_1 = module_1.match(str_0, str_3)
        str_4 = module_0.escape(var_1)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = '\\\\()'
        var_0 = module_1.match(str_0, str_0)
        str_1 = module_0.escape(var_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = '\\\\(\'|\\"|\\\\|[abfnrtv]|x.{0,2}|[0-7]{1,3})'
        str_1 = '\\x0gf'
        var_0 = module_1.match(str_0, str_1)
        str_2 = module_0.escape(var_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = '\\\\(t)'
        str_1 = '\\t'
        module_0.test()
        var_0 = module_1.match(str_0, str_1)
        str_2 = module_0.escape(var_0)
        str_3 = '()'
        str_4 = '\\n'
        var_1 = module_1.match(str_3, str_4)
        str_5 = module_0.escape(var_1)
    except BaseException:
        pass