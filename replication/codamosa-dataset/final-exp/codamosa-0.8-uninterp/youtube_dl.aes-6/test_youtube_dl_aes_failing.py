# Automatically generated by Pynguin.
import youtube_dl.aes as module_0
import youtube_dl.utils as module_1

def test_case_0():
    try:
        bool_0 = False
        list_0 = [bool_0, bool_0, bool_0, bool_0, bool_0]
        dict_0 = None
        bytes_0 = b' \xc1\xc8\xb2'
        var_0 = module_0.aes_cbc_decrypt(bytes_0, list_0, dict_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bool_0 = False
        list_0 = [bool_0, bool_0, bool_0, bool_0]
        bytes_0 = b'\xc5\x1c\xb2Y\xba\x92\x05'
        tuple_0 = (bool_0, bytes_0)
        var_0 = module_0.aes_cbc_encrypt(bytes_0, tuple_0, list_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'cM;5JU7'
        str_1 = "7)ad&4^2gT.'-!X#<"
        var_0 = module_0.aes_decrypt(str_0, str_1)
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'\xe9U\x11\x1fTD\x03\xa9\x93u\x8ccTh\xd8\x9c\xac\xca\x04\xc1'
        bool_0 = False
        var_0 = module_0.aes_decrypt(bytes_0, bool_0)
    except BaseException:
        pass

def test_case_4():
    try:
        float_0 = 962.0
        var_0 = module_0.sub_bytes_inv(float_0)
    except BaseException:
        pass

def test_case_5():
    try:
        int_0 = -2899
        var_0 = module_0.mix_columns(int_0)
    except BaseException:
        pass

def test_case_6():
    try:
        bool_0 = False
        var_0 = module_0.mix_columns_inv(bool_0)
    except BaseException:
        pass

def test_case_7():
    try:
        bool_0 = True
        list_0 = [bool_0]
        var_0 = module_0.shift_rows(list_0)
    except BaseException:
        pass

def test_case_8():
    try:
        bool_0 = False
        var_0 = module_0.shift_rows_inv(bool_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = '/=DT'
        var_0 = module_0.inc(str_0)
    except BaseException:
        pass

def test_case_10():
    try:
        bool_0 = False
        tuple_0 = (bool_0,)
        set_0 = {tuple_0, tuple_0}
        var_0 = module_0.sub_bytes_inv(set_0)
    except BaseException:
        pass

def test_case_11():
    try:
        tuple_0 = ()
        var_0 = module_0.inc(tuple_0)
        str_0 = 'Z0'
        bytes_0 = b'\\'
        var_1 = module_0.aes_decrypt(str_0, bytes_0)
    except BaseException:
        pass

def test_case_12():
    try:
        bool_0 = True
        list_0 = [bool_0, bool_0, bool_0, bool_0, bool_0, bool_0, bool_0, bool_0, bool_0]
        str_0 = 'Australia'
        var_0 = module_0.aes_cbc_encrypt(str_0, list_0, list_0)
    except BaseException:
        pass

def test_case_13():
    try:
        bool_0 = False
        list_0 = [bool_0, bool_0, bool_0, bool_0, bool_0]
        dict_0 = None
        str_0 = '_kmyJ; i;'
        var_0 = module_0.rijndael_mul(str_0, bool_0)
        bytes_0 = b' \xc1\xc8\xb2'
        var_1 = module_0.aes_cbc_decrypt(bytes_0, list_0, dict_0)
    except BaseException:
        pass

def test_case_14():
    try:
        str_0 = '140b41b22a29beb4061bda66b6747e14'
        var_0 = module_1.bytes_to_intlist(str_0)
        var_1 = module_1.bytes_to_intlist(str_0)
        str_1 = '4ca00ff4c898d61e1edbf1800618fb28'
        var_2 = module_0.aes_cbc_decrypt(var_0, var_1, str_1)
    except BaseException:
        pass