# Automatically generated by Pynguin.
import ansible.utils.jsonrpc as module_0
import json as module_1

def test_case_0():
    try:
        json_rpc_server_0 = module_0.JsonRpcServer()
        str_0 = '{"method": "test", "params": [], "id": "id1"}'
        var_0 = json_rpc_server_0.handle_request(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        json_rpc_server_0 = module_0.JsonRpcServer()
        var_0 = json_rpc_server_0.response()
    except BaseException:
        pass

def test_case_2():
    try:
        list_0 = []
        json_rpc_server_0 = module_0.JsonRpcServer(*list_0)
        var_0 = json_rpc_server_0.invalid_request()
    except BaseException:
        pass

def test_case_3():
    try:
        json_rpc_server_0 = module_0.JsonRpcServer()
        str_0 = 'method'
        str_1 = 'params'
        str_2 = '.0'
        str_3 = 'error'
        int_0 = 17
        var_0 = {str_0: str_2, str_0: str_3, str_1: json_rpc_server_0, str_2: int_0, str_2: str_2, str_1: str_2}
        var_1 = module_1.dumps(var_0)
        var_2 = json_rpc_server_0.handle_request(var_1)
        var_3 = json_rpc_server_0.parse_error()
    except BaseException:
        pass

def test_case_4():
    try:
        json_rpc_server_0 = module_0.JsonRpcServer()
        str_0 = '{"method": "_method", "params": [1,2,3], "id": 2}'
        var_0 = json_rpc_server_0.handle_request(str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        json_rpc_server_0 = module_0.JsonRpcServer()
        str_0 = '{"method": "rpc.method", "params": [1,2,3], "id": 2}'
        var_0 = json_rpc_server_0.handle_request(str_0)
    except BaseException:
        pass