# Automatically generated by Pynguin.
import ansible.utils.jsonrpc as module_0
import json as module_1

def test_case_0():
    pass

def test_case_1():
    json_rpc_server_0 = module_0.JsonRpcServer()
    str_0 = '_identifier'
    var_0 = json_rpc_server_0.register(str_0)
    int_0 = 7
    var_1 = setattr(json_rpc_server_0, str_0, int_0)
    var_2 = json_rpc_server_0.response()

def test_case_2():
    json_rpc_server_0 = module_0.JsonRpcServer()
    str_0 = '\n{\n    "method": "cli",\n    "params": [\n        "show version",\n        {\n            "encoding": "text"\n        }\n    ],\n    "id": 1\n}\n    '
    var_0 = json_rpc_server_0.handle_request(str_0)

def test_case_3():
    json_rpc_server_0 = module_0.JsonRpcServer()
    str_0 = '_identifier'
    int_0 = 28
    var_0 = setattr(json_rpc_server_0, str_0, int_0)
    str_1 = '1T'
    var_1 = json_rpc_server_0.invalid_params()
    var_2 = json_rpc_server_0.response(str_1)

def test_case_4():
    json_rpc_server_0 = module_0.JsonRpcServer()
    str_0 = 'method'
    str_1 = 'params'
    str_2 = 'Pd'
    var_0 = {str_1: json_rpc_server_0, str_0: str_1, str_1: str_2}
    var_1 = module_1.dumps(var_0)
    var_2 = json_rpc_server_0.handle_request(var_1)

def test_case_5():
    json_rpc_server_0 = module_0.JsonRpcServer()
    str_0 = '_identifier'
    int_0 = 7
    var_0 = setattr(json_rpc_server_0, str_0, int_0)
    var_1 = json_rpc_server_0.response()

def test_case_6():
    json_rpc_server_0 = module_0.JsonRpcServer()
    str_0 = '_identifier'
    int_0 = 28
    var_0 = setattr(json_rpc_server_0, str_0, int_0)
    var_1 = json_rpc_server_0.response(str_0)