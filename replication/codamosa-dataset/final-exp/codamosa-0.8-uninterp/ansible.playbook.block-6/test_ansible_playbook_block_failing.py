# Automatically generated by Pynguin.
import ansible.playbook.block as module_0
import ansible.playbook.role as module_1

def test_case_0():
    try:
        str_0 = '0242ac11-000d-075d-5d1d-000000000219'
        bytes_0 = b'\xcf\x17-\xa3b\x02\x0c\x9a\xcc\x81\xbeP\x17'
        int_0 = 1903
        block_0 = module_0.Block(str_0, bytes_0, int_0, str_0)
        var_0 = block_0.all_parents_static()
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'JF\x0cGMTd^&+_7T0s0'
        block_0 = module_0.Block()
        int_0 = -785
        var_0 = block_0.preprocess_data(int_0)
        var_1 = block_0.get_dep_chain()
        var_2 = block_0.__eq__(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        tuple_0 = ()
        block_0 = module_0.Block(tuple_0)
        var_0 = block_0.__repr__()
        bytes_0 = b'\x82\x9eq\x87\xea\xe2aNP\x10\xfdK\x86\x9f\x8b'
        block_1 = module_0.Block(bytes_0)
        var_1 = block_1.get_include_params()
        float_0 = 668.8044
        block_2 = module_0.Block(float_0)
        var_2 = block_2.get_include_params()
        block_3 = module_0.Block()
        var_3 = block_3.has_tasks()
        var_4 = block_2.get_first_parent_include()
        var_5 = block_3.__repr__()
        int_0 = -1158
        var_6 = block_3.set_loader(int_0)
        var_7 = block_3.get_include_params()
        var_8 = block_2.get_dep_chain()
        str_0 = 'f1nq/S}OO/e'
        var_9 = block_3.__ne__(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'<(\r\xb5\x17U'
        bytes_1 = b'\x9c\xd0c'
        str_0 = 'r`Ao'
        block_0 = module_0.Block(bytes_0, bytes_1, str_0)
        var_0 = block_0.get_vars()
    except BaseException:
        pass

def test_case_4():
    try:
        bytes_0 = b'\xad`'
        bytes_1 = None
        block_0 = module_0.Block(bytes_1)
        var_0 = block_0.filter_tagged_tasks(bytes_0)
        str_0 = 'O'
        var_1 = block_0.load(bytes_0, str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        float_0 = 0.0001
        bytes_0 = b'\x06\x04\x92\xbcF5\x1eW'
        str_0 = 'u`Y/n'
        tuple_0 = (str_0,)
        dict_0 = {float_0: tuple_0, str_0: float_0}
        float_1 = 1606.0
        block_0 = module_0.Block(float_1)
        var_0 = block_0.load(dict_0, bytes_0)
    except BaseException:
        pass

def test_case_6():
    try:
        bool_0 = True
        str_0 = 'cT }G"'
        list_0 = [bool_0, bool_0, bool_0]
        block_0 = module_0.Block(bool_0)
        block_1 = module_0.Block(str_0, list_0, bool_0)
        var_0 = block_1.serialize()
    except BaseException:
        pass

def test_case_7():
    try:
        list_0 = []
        set_0 = set()
        block_0 = module_0.Block(list_0, set_0)
        list_1 = []
        bytes_0 = b'\xb0\x9f=\x1dS\xd6x\xd5\x84'
        str_0 = 'QtK~AiE\\So`E"|v3Q"K'
        block_1 = module_0.Block(bytes_0, str_0, set_0)
        var_0 = block_1.preprocess_data(list_1)
        block_2 = module_0.Block(set_0)
        var_1 = block_2.get_include_params()
        var_2 = block_1.copy()
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = 'C:s"'
        block_0 = module_0.Block()
        var_0 = block_0.deserialize(str_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = '6GTF'
        str_1 = '--no-cache'
        bytes_0 = b'\xcf\xf3\x9bp\x19b\x93\x9ay}r\xa1S\xf8\xf2y'
        block_0 = module_0.Block(str_1, bytes_0)
        var_0 = block_0.set_loader(str_0)
    except BaseException:
        pass

def test_case_10():
    try:
        list_0 = []
        float_0 = 2017.3
        block_0 = module_0.Block(list_0, float_0)
        var_0 = block_0.get_include_params()
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = 'RS\x0cr+AQ\\)\tch'
        str_1 = 'gs<\\RET?a& :/J0x'
        block_0 = module_0.Block(str_0, str_1)
        var_0 = block_0.all_parents_static()
    except BaseException:
        pass

def test_case_12():
    try:
        int_0 = -451
        float_0 = -1288.352632
        str_0 = 'Zf:*bN1Tl\n^@ZaF'
        block_0 = module_0.Block(int_0, float_0, str_0)
        var_0 = block_0.get_first_parent_include()
    except BaseException:
        pass

def test_case_13():
    try:
        bool_0 = True
        tuple_0 = ()
        bytes_0 = b"\xe6\x92'2\xd9\xc6\x0e\x1d\x03\xcc\xcf\xbf"
        block_0 = module_0.Block(bool_0, tuple_0, bytes_0)
        var_0 = block_0.serialize()
    except BaseException:
        pass

def test_case_14():
    try:
        bytes_0 = b'#;\xac\xdc\x84\x96\xf5%\xb5B\xd4\x81e\xf8\x1b9U'
        tuple_0 = None
        set_0 = {bytes_0, bytes_0, bytes_0, tuple_0}
        list_0 = []
        block_0 = module_0.Block(list_0)
        var_0 = block_0.filter_tagged_tasks(set_0)
        int_0 = 7
        bool_0 = True
        list_1 = [bool_0, int_0, int_0, bool_0]
        set_1 = set()
        block_1 = module_0.Block(set_1, block_0)
        var_1 = block_1.get_first_parent_include()
        var_2 = block_0.all_parents_static()
        var_3 = block_1.preprocess_data(list_1)
        block_2 = module_0.Block(int_0, bool_0, int_0, int_0)
        var_4 = block_2.has_tasks()
        var_5 = block_2.serialize()
    except BaseException:
        pass

def test_case_15():
    try:
        float_0 = None
        dict_0 = {float_0: float_0, float_0: float_0, float_0: float_0, float_0: float_0, float_0: float_0, float_0: float_0}
        str_0 = "pF'*u"
        block_0 = module_0.Block()
        var_0 = block_0.preprocess_data(str_0)
        block_1 = module_0.Block(dict_0)
        var_1 = block_1.get_include_params()
        list_0 = [var_0, str_0, block_0, block_0]
        str_1 = '0242ac11-000d-075d-5d1d-000000000352'
        var_2 = block_1.load(list_0, str_1, list_0, block_0)
    except BaseException:
        pass

def test_case_16():
    try:
        int_0 = 943
        list_0 = []
        str_0 = 'ask_pass'
        set_0 = {str_0, int_0, int_0}
        tuple_0 = (str_0, set_0)
        bool_0 = False
        str_1 = '?\x0c5?w'
        role_0 = module_1.Role(bool_0, str_1)
        block_0 = module_0.Block(tuple_0, role_0)
        bytes_0 = b'\xcc\x8a#\xb2$\xc0\xdb\x90>\x17\x88\xe1C2jr\x93;d'
        block_1 = module_0.Block(list_0, block_0, bytes_0)
        var_0 = block_1.serialize()
    except BaseException:
        pass

def test_case_17():
    try:
        bool_0 = False
        dict_0 = {bool_0: bool_0}
        bytes_0 = b'\xf9)\x97a=\xaaf9\xa0h\x9f`\x0b\xc7.|5kw'
        bool_1 = True
        list_0 = [bool_0, bool_1, dict_0]
        block_0 = module_0.Block(bool_1, list_0)
        block_1 = module_0.Block(block_0, list_0)
        block_2 = module_0.Block(dict_0, bytes_0, block_1)
        var_0 = block_2.serialize()
    except BaseException:
        pass

def test_case_18():
    try:
        float_0 = -192.663201
        dict_0 = {}
        set_0 = set()
        int_0 = -1572
        block_0 = module_0.Block(dict_0, set_0, int_0)
        var_0 = block_0.set_loader(float_0)
    except BaseException:
        pass