# Automatically generated by Pynguin.
import httpie.client as module_0
import argparse as module_1
import httpie.cli.dicts as module_2
import pathlib as module_3

def test_case_0():
    try:
        bool_0 = False
        session_0 = module_0.build_requests_session(bool_0)
        namespace_0 = module_1.Namespace()
        namespace_1 = None
        request_headers_dict_0 = module_0.make_default_headers(namespace_1)
    except BaseException:
        pass

def test_case_1():
    try:
        namespace_0 = module_1.Namespace()
        dict_0 = module_0.make_send_kwargs(namespace_0)
    except BaseException:
        pass

def test_case_2():
    try:
        namespace_0 = module_1.Namespace()
        dict_0 = module_0.make_send_kwargs_mergeable_from_env(namespace_0)
    except BaseException:
        pass

def test_case_3():
    try:
        namespace_0 = module_1.Namespace()
        dict_0 = module_0.make_request_kwargs(namespace_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'E_nUO#\x0b>OsY\x0bwbPXBJl\r'
        str_1 = module_0.ensure_path_as_is(str_0, str_0)
        str_2 = 'mW'
        dict_0 = {str_2: str_0, str_2: str_1, str_0: str_0, str_1: str_1}
        var_0 = module_0.dump_request(dict_0)
        dict_1 = None
        str_3 = '?$y1a'
        str_4 = module_0.ensure_path_as_is(str_0, str_3)
        namespace_0 = module_1.Namespace(**dict_1)
    except BaseException:
        pass

def test_case_5():
    try:
        namespace_0 = module_1.Namespace()
        bool_0 = None
        str_0 = 'Ds^8yp\\B0\x0c^M!\tPc5'
        int_0 = 1629
        dict_0 = {str_0: str_0, str_0: bool_0, str_0: int_0, str_0: str_0}
        request_headers_dict_0 = module_2.RequestHeadersDict(**dict_0)
        request_headers_dict_1 = module_0.finalize_headers(request_headers_dict_0)
        str_1 = 'T-]D6/rN#ptd9#l'
        request_headers_dict_2 = module_0.finalize_headers(request_headers_dict_1)
        dict_1 = {}
        var_0 = module_0.dump_request(dict_1)
        bool_1 = None
        session_0 = module_0.build_requests_session(bool_1, str_1)
    except BaseException:
        pass

def test_case_6():
    try:
        bool_0 = None
        str_0 = 'Ds^8yp\\Bs\x0c^-t@\tPc'
        int_0 = 1629
        dict_0 = {str_0: str_0, str_0: bool_0, str_0: int_0, str_0: str_0, str_0: bool_0}
        request_headers_dict_0 = module_2.RequestHeadersDict(**dict_0)
        str_1 = 'T-]D6/rN#ptd9#l'
        request_headers_dict_1 = module_0.finalize_headers(request_headers_dict_0)
        dict_1 = {}
        var_0 = module_0.dump_request(dict_1)
        bool_1 = False
        session_0 = module_0.build_requests_session(bool_1)
        list_0 = [bool_0, str_1, var_0]
        path_0 = module_3.Path(*list_0)
    except BaseException:
        pass

def test_case_7():
    try:
        namespace_0 = module_1.Namespace()
        path_0 = module_3.Path()
        var_0 = lambda chunk: chunk
        iterable_0 = module_0.collect_messages(namespace_0, path_0, var_0)
        var_1 = next(iterable_0)
    except BaseException:
        pass