# Automatically generated by Pynguin.
import ansible.module_utils.common.collections as module_0

def test_case_0():
    try:
        float_0 = -153.1
        immutable_dict_0 = module_0.ImmutableDict()
        var_0 = immutable_dict_0.__getitem__(float_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bool_0 = False
        immutable_dict_0 = module_0.ImmutableDict()
        var_0 = immutable_dict_0.__eq__(bool_0)
        var_1 = module_0.is_sequence(bool_0)
        var_2 = immutable_dict_0.__hash__()
        var_3 = immutable_dict_0.__len__()
        str_0 = None
        list_0 = [var_1, var_1, str_0]
        immutable_dict_1 = module_0.ImmutableDict(*list_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bool_0 = False
        str_0 = 'dN%`'
        str_1 = 'Invalid variable name in vars specified for %s: %s'
        dict_0 = {str_0: bool_0, str_0: str_0, str_1: str_1}
        immutable_dict_0 = module_0.ImmutableDict(**dict_0)
        var_0 = immutable_dict_0.union(bool_0)
    except BaseException:
        pass

def test_case_3():
    try:
        int_0 = 2163
        immutable_dict_0 = module_0.ImmutableDict()
        var_0 = immutable_dict_0.difference(int_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = ',-@9o 4]ub(?Y]9v?\x0c'
        list_0 = [str_0, str_0]
        immutable_dict_0 = module_0.ImmutableDict()
        str_1 = 'Pgelu{/0/g$1Z<s'
        var_0 = module_0.is_iterable(str_1)
        int_0 = 8769995651734
        var_1 = immutable_dict_0.__eq__(int_0)
        list_1 = [list_0]
        immutable_dict_1 = module_0.ImmutableDict(*list_1)
    except BaseException:
        pass

def test_case_5():
    try:
        float_0 = -543.394466
        var_0 = module_0.count(float_0)
    except BaseException:
        pass

def test_case_6():
    try:
        immutable_dict_0 = module_0.ImmutableDict()
        float_0 = 512.0
        dict_0 = {immutable_dict_0: immutable_dict_0, immutable_dict_0: immutable_dict_0, float_0: immutable_dict_0}
        var_0 = module_0.is_string(dict_0)
        var_1 = immutable_dict_0.__eq__(immutable_dict_0)
        float_1 = 93.4
        var_2 = immutable_dict_0.difference(float_1)
    except BaseException:
        pass

def test_case_7():
    try:
        immutable_dict_0 = module_0.ImmutableDict()
        var_0 = immutable_dict_0.__hash__()
        str_0 = 'azq1/rvz(gDrmyIb nVe'
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
        immutable_dict_1 = module_0.ImmutableDict(**dict_0)
        var_1 = immutable_dict_1.__iter__()
        str_1 = 'after_header'
        list_0 = [str_1, immutable_dict_1, str_0, str_1]
        var_2 = immutable_dict_1.difference(list_0)
        set_0 = {str_0}
        var_3 = immutable_dict_1.union(set_0)
    except BaseException:
        pass