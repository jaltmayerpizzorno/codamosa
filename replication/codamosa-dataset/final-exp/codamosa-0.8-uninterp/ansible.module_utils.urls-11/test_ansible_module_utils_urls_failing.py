# Automatically generated by Pynguin.
import ansible.module_utils.urls as module_0
import _io as module_1

def test_case_0():
    try:
        bool_0 = False
        list_0 = [bool_0, bool_0, bool_0, bool_0]
        custom_h_t_t_p_s_connection_0 = module_0.CustomHTTPSConnection(*list_0)
    except BaseException:
        pass

def test_case_1():
    try:
        custom_h_t_t_p_s_handler_0 = module_0.CustomHTTPSHandler()
        h_t_t_p_s_client_auth_handler_0 = module_0.HTTPSClientAuthHandler()
        request_0 = module_0.Request(custom_h_t_t_p_s_handler_0)
    except BaseException:
        pass

def test_case_2():
    try:
        connection_error_0 = module_0.ConnectionError()
        request_with_method_0 = None
        list_0 = [request_with_method_0]
        dict_0 = {}
        h_t_t_p_s_client_auth_handler_0 = module_0.HTTPSClientAuthHandler(connection_error_0, list_0, **dict_0)
        dict_1 = None
        h_t_t_p_s_client_auth_handler_1 = module_0.HTTPSClientAuthHandler()
        var_0 = h_t_t_p_s_client_auth_handler_1.https_open(dict_1)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '/_j{lvToP~@)A'
        unix_h_t_t_p_s_connection_0 = module_0.UnixHTTPSConnection(str_0)
        var_0 = unix_h_t_t_p_s_connection_0.connect()
    except BaseException:
        pass

def test_case_4():
    try:
        bytes_0 = b'Cz\x80\xa8L-\xde\x8d\x08\xac\xedL\xdcc\xd1b2\xcf'
        var_0 = module_0.get_channel_binding_cert_hash(bytes_0)
        parse_result_dotted_dict_0 = module_0.ParseResultDottedDict()
        unix_h_t_t_p_connection_0 = module_0.UnixHTTPConnection(parse_result_dotted_dict_0)
        var_1 = module_0.prepare_multipart(unix_h_t_t_p_connection_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'V\'\x0by%{B"V'
        bool_0 = True
        set_0 = {str_0, str_0, str_0, bool_0}
        int_0 = 9000
        tuple_0 = (bool_0, set_0, int_0)
        dict_0 = {str_0: tuple_0}
        bytes_0 = b'\x93\x07f\x05pi\xc2J\x15\xdd\xdc\xffn\xc8'
        unix_h_t_t_p_connection_0 = module_0.UnixHTTPConnection(bytes_0)
        var_0 = unix_h_t_t_p_connection_0.__call__(**dict_0)
    except BaseException:
        pass

def test_case_6():
    try:
        no_s_s_l_error_0 = module_0.NoSSLError()
        unix_h_t_t_p_handler_0 = module_0.UnixHTTPHandler(no_s_s_l_error_0)
        custom_h_t_t_p_s_handler_0 = module_0.CustomHTTPSHandler()
        custom_h_t_t_p_s_handler_1 = module_0.CustomHTTPSHandler(custom_h_t_t_p_s_handler_0)
        unix_h_t_t_p_s_connection_0 = module_0.UnixHTTPSConnection(custom_h_t_t_p_s_handler_1)
        custom_h_t_t_p_s_handler_2 = module_0.CustomHTTPSHandler(unix_h_t_t_p_s_connection_0)
        var_0 = custom_h_t_t_p_s_handler_2.https_open(unix_h_t_t_p_handler_0)
    except BaseException:
        pass

def test_case_7():
    try:
        tuple_0 = ()
        list_0 = []
        dict_0 = {}
        no_s_s_l_error_0 = module_0.NoSSLError(**dict_0)
        str_0 = None
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(no_s_s_l_error_0, str_0)
        request_with_method_0 = module_0.RequestWithMethod(tuple_0, list_0, s_s_l_validation_handler_0)
    except BaseException:
        pass

def test_case_8():
    try:
        dict_0 = {}
        float_0 = 2.0
        request_0 = module_0.Request(dict_0, dict_0, float_0, dict_0, float_0)
        str_0 = '*~2A]5'
        var_0 = request_0.delete(str_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = '\\VS$Jr>vT'
        dict_0 = {str_0: str_0}
        unix_h_t_t_p_connection_0 = module_0.UnixHTTPConnection(dict_0)
        var_0 = module_0.getpeercert(unix_h_t_t_p_connection_0)
    except BaseException:
        pass

def test_case_10():
    try:
        float_0 = 3369.8
        unix_h_t_t_p_connection_0 = module_0.UnixHTTPConnection(float_0)
        var_0 = module_0.rfc2822_date_string(unix_h_t_t_p_connection_0)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = None
        dict_0 = {str_0: str_0}
        list_0 = [dict_0, str_0]
        int_0 = -2021
        var_0 = module_0.open_url(list_0, dict_0, int_0)
    except BaseException:
        pass

def test_case_12():
    try:
        float_0 = 0.0
        var_0 = module_0.prepare_multipart(float_0)
    except BaseException:
        pass

def test_case_13():
    try:
        s_s_l_validation_error_0 = module_0.SSLValidationError()
        bytes_0 = b'K o\x81\xd9\x1c'
        parse_result_dotted_dict_0 = module_0.ParseResultDottedDict()
        unix_h_t_t_p_connection_0 = module_0.UnixHTTPConnection(parse_result_dotted_dict_0)
        proxy_error_0 = module_0.ProxyError()
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(bytes_0, bytes_0, unix_h_t_t_p_connection_0)
        str_0 = None
        missing_module_error_0 = module_0.MissingModuleError(bytes_0, str_0)
        parse_result_dotted_dict_1 = module_0.ParseResultDottedDict()
        list_0 = [unix_h_t_t_p_connection_0, unix_h_t_t_p_connection_0, parse_result_dotted_dict_1]
        str_1 = 'Could not resolve action %s in module_defaults'
        var_0 = module_0.generic_urlparse(str_1)
        bool_0 = True
        request_with_method_0 = None
        h_t_t_p_s_client_auth_handler_0 = module_0.HTTPSClientAuthHandler(request_with_method_0)
        no_s_s_l_error_0 = module_0.NoSSLError(*list_0)
        unix_h_t_t_p_s_connection_0 = module_0.UnixHTTPSConnection(parse_result_dotted_dict_1)
        var_1 = module_0.fetch_file(bool_0, h_t_t_p_s_client_auth_handler_0, no_s_s_l_error_0, unix_h_t_t_p_s_connection_0)
    except BaseException:
        pass

def test_case_14():
    try:
        list_0 = []
        dict_0 = {}
        parse_result_dotted_dict_0 = module_0.ParseResultDottedDict(*list_0, **dict_0)
        list_1 = [parse_result_dotted_dict_0]
        unix_h_t_t_p_s_connection_0 = module_0.UnixHTTPSConnection(list_1)
        var_0 = unix_h_t_t_p_s_connection_0.connect()
    except BaseException:
        pass

def test_case_15():
    try:
        bytes_0 = b'\x8d'
        set_0 = {bytes_0, bytes_0, bytes_0}
        bool_0 = False
        bytes_1 = b'\x8aI\xf7\xfdQ\xfb\xea'
        dict_0 = {bytes_1: bytes_0, bytes_1: bytes_0}
        str_0 = ''
        request_with_method_0 = module_0.RequestWithMethod(set_0, bool_0, dict_0, str_0)
    except BaseException:
        pass

def test_case_16():
    try:
        dict_0 = None
        float_0 = None
        proxy_error_0 = module_0.ProxyError()
        bytes_0 = b'\x07\x14 )}'
        list_0 = [float_0, dict_0, float_0, bytes_0]
        connection_error_0 = module_0.ConnectionError()
        parse_result_dotted_dict_0 = None
        bool_0 = None
        var_0 = module_0.open_url(float_0, proxy_error_0, list_0, connection_error_0, parse_result_dotted_dict_0, bool_0)
    except BaseException:
        pass

def test_case_17():
    try:
        str_0 = '\r(^0# b/dJ'
        var_0 = module_0.atexit_remove_file(str_0)
        float_0 = -0.7061096663146281
        var_1 = module_0.prepare_multipart(float_0)
    except BaseException:
        pass

def test_case_18():
    try:
        float_0 = 0.001
        custom_h_t_t_p_s_handler_0 = module_0.CustomHTTPSHandler()
        var_0 = custom_h_t_t_p_s_handler_0.https_open(float_0)
    except BaseException:
        pass

def test_case_19():
    try:
        str_0 = 'W}ztyPS%Yc'
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
        unix_h_t_t_p_s_connection_0 = module_0.UnixHTTPSConnection(dict_0)
        var_0 = unix_h_t_t_p_s_connection_0.__call__()
    except BaseException:
        pass

def test_case_20():
    try:
        custom_h_t_t_p_s_handler_0 = module_0.CustomHTTPSHandler()
        var_0 = module_0.generic_urlparse(custom_h_t_t_p_s_handler_0)
    except BaseException:
        pass

def test_case_21():
    try:
        str_0 = 'tiTXZ\\YX\rM44CXO$F'
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(str_0, str_0)
        var_0 = s_s_l_validation_handler_0.make_context(s_s_l_validation_handler_0, s_s_l_validation_handler_0)
    except BaseException:
        pass

def test_case_22():
    try:
        custom_h_t_t_p_s_handler_0 = module_0.CustomHTTPSHandler()
        bool_0 = False
        tuple_0 = (custom_h_t_t_p_s_handler_0, bool_0)
        list_0 = [bool_0, bool_0, tuple_0]
        no_s_s_l_error_0 = module_0.NoSSLError(*list_0)
        s_s_l_validation_error_0 = module_0.SSLValidationError()
        dict_0 = {}
        unix_h_t_t_p_handler_0 = module_0.UnixHTTPHandler(s_s_l_validation_error_0, **dict_0)
        var_0 = unix_h_t_t_p_handler_0.http_open(no_s_s_l_error_0)
    except BaseException:
        pass

def test_case_23():
    try:
        str_0 = 'V\'\x0by%{B"V'
        bool_0 = True
        set_0 = {str_0, str_0, str_0, bool_0}
        int_0 = 9000
        tuple_0 = (bool_0, set_0, int_0)
        dict_0 = {str_0: tuple_0}
        unix_h_t_t_p_s_connection_0 = None
        dict_1 = {int_0: set_0, str_0: set_0}
        unix_h_t_t_p_connection_0 = module_0.UnixHTTPConnection(dict_1)
        var_0 = module_0.basic_auth_header(unix_h_t_t_p_s_connection_0, unix_h_t_t_p_connection_0)
        bytes_0 = b'\x93\x07f\x05pi\xc2J\x15\xdd\xdc\xffn\xc8'
        unix_h_t_t_p_connection_1 = module_0.UnixHTTPConnection(bytes_0)
        var_1 = unix_h_t_t_p_connection_1.__call__(**dict_0)
    except BaseException:
        pass

def test_case_24():
    try:
        bytes_0 = b'h:\xd2R\x1e+\xc3\x01\x08'
        bytes_1 = b'K o\x81\xd9\x1c'
        parse_result_dotted_dict_0 = module_0.ParseResultDottedDict()
        unix_h_t_t_p_connection_0 = module_0.UnixHTTPConnection(parse_result_dotted_dict_0)
        proxy_error_0 = module_0.ProxyError()
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(bytes_0, bytes_1, unix_h_t_t_p_connection_0)
        float_0 = None
        var_0 = module_0.get_channel_binding_cert_hash(float_0)
        bytes_2 = b'\x10O\xafe\xec\xd0'
        var_1 = s_s_l_validation_handler_0.detect_no_proxy(bytes_2)
        int_0 = 46
        parse_result_dotted_dict_1 = module_0.ParseResultDottedDict()
        unix_h_t_t_p_handler_0 = module_0.UnixHTTPHandler(int_0)
        var_2 = s_s_l_validation_handler_0.http_request(unix_h_t_t_p_handler_0)
    except BaseException:
        pass

def test_case_25():
    try:
        custom_h_t_t_p_s_handler_0 = module_0.CustomHTTPSHandler()
        bool_0 = True
        tuple_0 = (custom_h_t_t_p_s_handler_0, bool_0)
        list_0 = [bool_0, bool_0]
        dict_0 = {bool_0: tuple_0}
        parse_result_dotted_dict_0 = module_0.ParseResultDottedDict()
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(dict_0, parse_result_dotted_dict_0)
        var_0 = s_s_l_validation_handler_0.http_request(list_0)
    except BaseException:
        pass

def test_case_26():
    try:
        custom_h_t_t_p_s_handler_0 = module_0.CustomHTTPSHandler()
        list_0 = [custom_h_t_t_p_s_handler_0]
        connection_error_0 = module_0.ConnectionError(*list_0)
        complex_0 = None
        parse_result_dotted_dict_0 = module_0.ParseResultDottedDict()
        var_0 = module_0.fetch_url(connection_error_0, complex_0, parse_result_dotted_dict_0, complex_0)
    except BaseException:
        pass

def test_case_27():
    try:
        unix_h_t_t_p_connection_0 = None
        request_0 = module_0.Request()
        var_0 = request_0.patch(unix_h_t_t_p_connection_0)
    except BaseException:
        pass

def test_case_28():
    try:
        dict_0 = {}
        float_0 = 2.0
        request_0 = module_0.Request(dict_0, dict_0, float_0, dict_0, float_0)
        str_0 = ',i0F/|{+/&q`?7t'
        var_0 = request_0.options(str_0)
    except BaseException:
        pass

def test_case_29():
    try:
        str_0 = 'tiTXZ\\YX\rM44CXO$F'
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(str_0, str_0)
        unix_h_t_t_p_s_connection_0 = None
        dict_0 = {}
        bool_0 = False
        var_0 = module_0.build_ssl_validation_error(unix_h_t_t_p_s_connection_0, dict_0, bool_0)
    except BaseException:
        pass

def test_case_30():
    try:
        dict_0 = {}
        float_0 = 1.0
        s_s_l_validation_error_0 = module_0.SSLValidationError()
        request_0 = module_0.Request(dict_0, float_0, s_s_l_validation_error_0, float_0)
        var_0 = request_0.put(request_0)
    except BaseException:
        pass

def test_case_31():
    try:
        parse_result_dotted_dict_0 = module_0.ParseResultDottedDict()
        str_0 = 'Linux'
        var_0 = parse_result_dotted_dict_0.as_list()
        connection_error_0 = None
        set_0 = {connection_error_0, connection_error_0}
        str_1 = 'e\tY!n9cBJg_,VU0g320v'
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(set_0, str_1)
        var_1 = s_s_l_validation_handler_0.make_context(parse_result_dotted_dict_0, str_0)
    except BaseException:
        pass

def test_case_32():
    try:
        list_0 = None
        list_1 = [list_0, list_0, list_0]
        connection_error_0 = module_0.ConnectionError(*list_1)
        h_t_t_p_s_client_auth_handler_0 = module_0.HTTPSClientAuthHandler(connection_error_0)
        int_0 = 2
        float_0 = 0.2
        var_0 = module_0.build_ssl_validation_error(h_t_t_p_s_client_auth_handler_0, int_0, float_0, connection_error_0)
    except BaseException:
        pass

def test_case_33():
    try:
        dict_0 = {}
        float_0 = 1.0
        s_s_l_validation_error_0 = module_0.SSLValidationError()
        request_0 = module_0.Request(dict_0, float_0, s_s_l_validation_error_0, float_0)
        str_0 = None
        dict_1 = {str_0: str_0}
        list_0 = [dict_1, str_0]
        no_s_s_l_error_0 = module_0.NoSSLError(*list_0)
        list_1 = []
        missing_module_error_0 = module_0.MissingModuleError(no_s_s_l_error_0, list_1)
        var_0 = request_0.post(missing_module_error_0)
    except BaseException:
        pass

def test_case_34():
    try:
        dict_0 = {}
        float_0 = 1.0
        s_s_l_validation_error_0 = module_0.SSLValidationError()
        request_0 = module_0.Request(dict_0, float_0, s_s_l_validation_error_0, float_0)
        bytes_0 = b'-\xa3\xb5\x04\x9d\x15u\x19'
        unix_h_t_t_p_handler_0 = module_0.UnixHTTPHandler(bytes_0)
        var_0 = request_0.head(unix_h_t_t_p_handler_0)
    except BaseException:
        pass

def test_case_35():
    try:
        dict_0 = {}
        float_0 = 1.0
        s_s_l_validation_error_0 = module_0.SSLValidationError()
        request_0 = module_0.Request(dict_0, float_0, s_s_l_validation_error_0, float_0)
        custom_h_t_t_p_s_handler_0 = module_0.CustomHTTPSHandler(s_s_l_validation_error_0)
        var_0 = request_0.get(custom_h_t_t_p_s_handler_0)
    except BaseException:
        pass

def test_case_36():
    try:
        bool_0 = False
        dict_0 = {}
        float_0 = 1.0
        s_s_l_validation_error_0 = module_0.SSLValidationError()
        request_0 = module_0.Request(dict_0, float_0, s_s_l_validation_error_0, float_0)
        str_0 = None
        dict_1 = {str_0: str_0}
        list_0 = [dict_1, str_0]
        no_s_s_l_error_0 = module_0.NoSSLError(*list_0)
        tuple_0 = (dict_1, no_s_s_l_error_0)
        unix_h_t_t_p_s_connection_0 = module_0.UnixHTTPSConnection(tuple_0)
        bytes_0 = b'\xfc\xc1\xdc*\xebe.\x1d\x83'
        set_0 = {bool_0, bytes_0}
        str_1 = 'Darwin'
        var_0 = module_0.open_url(set_0, s_s_l_validation_error_0, str_0, dict_0, str_1)
    except BaseException:
        pass

def test_case_37():
    try:
        dict_0 = {}
        float_0 = 1.1946
        s_s_l_validation_error_0 = module_0.SSLValidationError()
        int_0 = -25
        request_0 = module_0.Request(dict_0, int_0, float_0, s_s_l_validation_error_0, float_0, float_0, float_0)
        str_0 = "D'L~_X@x{AQy"
        var_0 = request_0.delete(str_0)
    except BaseException:
        pass

def test_case_38():
    try:
        dict_0 = {}
        float_0 = 1.6932165417905276
        s_s_l_validation_error_0 = module_0.SSLValidationError()
        request_0 = module_0.Request(dict_0, float_0, s_s_l_validation_error_0, float_0)
        str_0 = '*~2A]i5'
        var_0 = request_0.delete(str_0)
    except BaseException:
        pass

def test_case_39():
    try:
        s_s_l_validation_error_0 = module_0.SSLValidationError()
        str_0 = None
        dict_0 = {}
        list_0 = [dict_0, str_0]
        no_s_s_l_error_0 = module_0.NoSSLError(*list_0)
        int_0 = -2021
        var_0 = module_0.open_url(list_0, dict_0, int_0)
    except BaseException:
        pass

def test_case_40():
    try:
        str_0 = 'tiTmXCTYe\rM44CXO$F'
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(str_0, str_0)
        custom_h_t_t_p_s_handler_0 = module_0.CustomHTTPSHandler()
        var_0 = s_s_l_validation_handler_0.validate_proxy_response(custom_h_t_t_p_s_handler_0)
    except BaseException:
        pass

def test_case_41():
    try:
        str_0 = 'tTmXpTY\rM44CXO'
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(str_0, str_0)
        var_0 = s_s_l_validation_handler_0.get_ca_certs()
        str_1 = 'z\x0bBF'
        set_0 = set()
        unix_h_t_t_p_s_connection_0 = module_0.UnixHTTPSConnection(set_0)
        var_1 = s_s_l_validation_handler_0.validate_proxy_response(str_1, unix_h_t_t_p_s_connection_0)
    except BaseException:
        pass

def test_case_42():
    try:
        str_0 = "s7@JQ&D'\t)3k/76A&"
        dict_0 = {str_0: str_0, str_0: str_0}
        var_0 = module_0.prepare_multipart(dict_0)
        str_1 = '5mT DF&CTxf8i1@+r8M'
        str_2 = 'f'
        string_i_o_0 = module_1.StringIO()
        list_0 = [str_1, str_2]
        custom_h_t_t_p_s_handler_0 = module_0.CustomHTTPSHandler(string_i_o_0, list_0)
        var_1 = module_0.generic_urlparse(custom_h_t_t_p_s_handler_0)
    except BaseException:
        pass

def test_case_43():
    try:
        proxy_error_0 = module_0.ProxyError()
        list_0 = []
        str_0 = 'c'
        tuple_0 = ()
        list_1 = [str_0, str_0, tuple_0]
        s_s_l_validation_error_0 = module_0.SSLValidationError(*list_1)
        custom_h_t_t_p_s_connection_0 = module_0.CustomHTTPSConnection(*list_1)
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(str_0, s_s_l_validation_error_0, custom_h_t_t_p_s_connection_0)
        var_0 = s_s_l_validation_handler_0.make_context(proxy_error_0, list_0)
    except BaseException:
        pass

def test_case_44():
    try:
        bool_0 = False
        var_0 = module_0.atexit_remove_file(bool_0)
        s_s_l_validation_error_0 = module_0.SSLValidationError()
        var_1 = module_0.unix_socket_patch_httpconnection_connect()
        str_0 = None
        dict_0 = {str_0: str_0}
        list_0 = [dict_0, str_0]
        no_s_s_l_error_0 = module_0.NoSSLError(*list_0)
        custom_h_t_t_p_s_handler_0 = module_0.CustomHTTPSHandler()
        h_t_t_p_s_client_auth_handler_0 = module_0.HTTPSClientAuthHandler(custom_h_t_t_p_s_handler_0, no_s_s_l_error_0, **dict_0)
    except BaseException:
        pass

def test_case_45():
    try:
        dict_0 = {}
        s_s_l_validation_error_0 = module_0.SSLValidationError()
        int_0 = -25
        float_0 = None
        request_0 = module_0.Request(dict_0, int_0, float_0, s_s_l_validation_error_0, float_0, float_0, float_0)
        str_0 = "D'L~_X@x{AQy"
        var_0 = request_0.delete(str_0)
    except BaseException:
        pass

def test_case_46():
    try:
        int_0 = 7
        int_1 = 5
        int_2 = 6
        int_3 = (int_2, int_2, int_0, int_2, int_1, int_2, int_2)
        str_0 = '-0500'
        var_0 = module_0.rfc2822_date_string(int_3, str_0)
        int_4 = 11
        int_5 = 0
        int_6 = (int_0, int_2, int_3, int_4, int_1, int_0, int_5)
        str_1 = '-0400'
        var_1 = module_0.rfc2822_date_string(int_6, str_1)
    except BaseException:
        pass