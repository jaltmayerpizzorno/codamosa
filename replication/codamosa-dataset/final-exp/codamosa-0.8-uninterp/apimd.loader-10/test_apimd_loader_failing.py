# Automatically generated by Pynguin.
import apimd.loader as module_0

def test_case_0():
    try:
        str_0 = 'SJ)A/'
        str_1 = 'collections.abc.Iterable'
        dict_0 = {str_0: str_1}
        bool_0 = False
        sequence_0 = module_0.gen_api(dict_0, dry=bool_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '%cF_PK'
        dict_0 = {str_0: str_0}
        bool_0 = True
        bool_1 = True
        sequence_0 = module_0.gen_api(dict_0, toc=bool_0, dry=bool_1)
        sequence_1 = module_0.gen_api(dict_0)
        str_1 = 'n m03GR'
        iterator_0 = module_0.walk_packages(str_1, str_1)
        iterator_1 = module_0.walk_packages(str_0, str_1)
        str_2 = 'typing.ByteString'
        str_3 = ']-'
        str_4 = 'TAEj@nLExJ'
        iterator_2 = module_0.walk_packages(str_3, str_4)
        bool_2 = False
        bool_3 = False
        sequence_2 = module_0.gen_api(dict_0, link=bool_2, toc=bool_2, dry=bool_3)
        str_5 = None
        dict_1 = {str_2: str_2, str_5: str_5}
        sequence_3 = module_0.gen_api(dict_1)
    except BaseException:
        pass