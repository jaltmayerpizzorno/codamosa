# Automatically generated by Pynguin.
import apimd.loader as module_0

def test_case_0():
    pass

def test_case_1():
    str_0 = '.4D\x0bu(BF1gY*H|C<'
    str_1 = ''
    dict_0 = {str_0: str_1}
    str_2 = 'type[Self]'
    bool_0 = True
    bool_1 = True
    sequence_0 = module_0.gen_api(dict_0, prefix=str_2, link=bool_0, toc=bool_1)

def test_case_2():
    str_0 = 'SJ)A/'
    dict_0 = {str_0: str_0}
    sequence_0 = module_0.gen_api(dict_0, str_0)

def test_case_3():
    str_0 = 'tests'
    str_1 = ''
    str_2 = '\x0c*%] sCol5Mx<:akC'
    dict_0 = {str_0: str_0, str_1: str_2, str_2: str_2}
    sequence_0 = module_0.gen_api(dict_0)

def test_case_4():
    str_0 = '.Z-0H_Sz'
    str_1 = "Pgh9#tx'=f"
    str_2 = '~D%C'
    iterator_0 = module_0.walk_packages(str_2, str_2)
    iterator_1 = module_0.walk_packages(str_0, str_1)
    str_3 = 'rCty<'
    str_4 = 'utf-8'
    iterator_2 = module_0.walk_packages(str_3, str_4)
    str_5 = ',aL7S'
    str_6 = '1yuM'
    iterator_3 = module_0.walk_packages(str_5, str_6)
    iterator_4 = module_0.walk_packages(str_5, str_6)
    str_7 = "g]m6B.,Iq9Ib'"
    str_8 = "Create multi-column table with the titles.\n\n    Usage:\n    >>> table('a', 'b', [['c', 'd'], ['e', 'f']])\n    | a | b |\n    |:---:|:---:|\n    | c | d |\n    | e | f |\n    "
    iterator_5 = module_0.walk_packages(str_7, str_8)
    str_9 = "'{nz3u\x0bTMgm"
    str_10 = 'm|n(B`L}B.}upT]A'
    iterator_6 = module_0.walk_packages(str_1, str_10)
    bool_0 = False
    int_0 = 12
    str_11 = 'WAx}"I\nd`'
    str_12 = 'X'
    iterator_7 = module_0.walk_packages(str_11, str_12)
    iterator_8 = module_0.walk_packages(str_0, str_7)
    str_13 = module_0.loader(str_9, str_1, bool_0, int_0, bool_0)
    str_14 = '3^[O\\_)Bw\\k'
    str_15 = 'uq\x0csXB\t,elZDN'
    str_16 = None
    str_17 = None
    str_18 = 'typing'
    str_19 = '=Y<iS@k1elve.KWi&\t'
    str_20 = '!rroiF$s'
    str_21 = None
    dict_0 = {str_17: str_10, str_18: str_12, str_19: str_20, str_21: str_18}
    sequence_0 = module_0.gen_api(dict_0, prefix=str_8, link=bool_0, level=int_0)
    dict_1 = {str_14: str_15, str_16: str_15}
    str_22 = 'BA%K'
    bool_1 = False
    int_1 = -1409
    sequence_1 = module_0.gen_api(dict_1, prefix=str_22, link=bool_1, level=int_1, toc=bool_1)
    int_2 = 1
    bool_2 = False
    sequence_2 = module_0.gen_api(dict_1, level=int_2, toc=bool_2)
    str_23 = '<,[N%tw;N$l~*\\W'
    str_24 = module_0.loader(str_23, str_6, bool_2, int_2, bool_0)