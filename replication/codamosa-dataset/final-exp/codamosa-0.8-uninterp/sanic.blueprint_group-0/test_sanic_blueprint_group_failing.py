# Automatically generated by Pynguin.
import sanic.blueprints as module_0
import sanic.blueprint_group as module_1

def test_case_0():
    try:
        bytes_0 = b'\xb3\xab\xa1T6\xd9\tN\x07\x06('
        list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
        str_0 = '_K0'
        none_type_0 = None
        str_1 = 'r-J{vNR.C)y|!<D\rD\ndU'
        blueprint_0 = module_0.Blueprint(str_0, none_type_0, str_1)
        float_0 = 2336.0
        list_1 = [blueprint_0, blueprint_0, blueprint_0, float_0]
        tuple_0 = (blueprint_0, float_0, list_1)
        blueprint_group_0 = module_1.BlueprintGroup(tuple_0)
        var_0 = blueprint_group_0.__getitem__(list_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'j\tqd)SnAJuR'
        blueprint_0 = module_0.Blueprint(str_0)
        tuple_0 = (blueprint_0,)
        bytes_0 = b'2\xb4\xd9'
        list_0 = []
        int_0 = 577
        tuple_1 = (tuple_0, bytes_0, list_0, int_0)
        int_1 = -593
        dict_0 = {}
        bool_0 = False
        str_1 = '=\x0cY7"%ZC F 4&IK$s]>'
        blueprint_group_0 = module_1.BlueprintGroup(dict_0, bool_0, str_1)
        blueprint_group_0.__setitem__(tuple_1, int_1)
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b'\xefN\xf9v\x82E\xe7\x8d\xad\x03v\xae\xa61\xa4\xe4G'
        list_0 = [bytes_0]
        int_0 = 424
        blueprint_group_0 = module_1.BlueprintGroup(int_0)
        blueprint_group_0.__delitem__(list_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bool_0 = True
        blueprint_group_0 = module_1.BlueprintGroup(bool_0)
        var_0 = blueprint_group_0.middleware()
        set_0 = {blueprint_group_0}
        var_1 = blueprint_group_0.extend(set_0)
    except BaseException:
        pass

def test_case_4():
    try:
        int_0 = -1516
        str_0 = '{0m.8)W\r'
        bool_0 = False
        blueprint_0 = module_0.Blueprint(str_0, str_0, str_0, bool_0)
        int_1 = 410
        dict_0 = {int_1: int_1}
        blueprint_group_0 = module_1.BlueprintGroup(dict_0)
        blueprint_group_0.insert(int_0, blueprint_0)
    except BaseException:
        pass

def test_case_5():
    try:
        blueprint_group_0 = module_1.BlueprintGroup()
        str_0 = 'server_port'
        int_0 = -302
        blueprint_0 = module_0.Blueprint(str_0)
        bool_0 = True
        blueprint_group_1 = module_1.BlueprintGroup(bool_0)
        blueprint_group_1.insert(int_0, blueprint_0)
    except BaseException:
        pass

def test_case_6():
    try:
        bool_0 = False
        blueprint_group_0 = module_1.BlueprintGroup(bool_0)
        int_0 = -2317
        list_0 = [blueprint_group_0]
        var_0 = blueprint_group_0.middleware(*list_0)
        str_0 = '_after_start'
        str_1 = None
        blueprint_0 = module_0.Blueprint(str_1, str_0, int_0)
        var_1 = blueprint_0.group(*list_0, strict_slashes=list_0)
        blueprint_group_0.append(blueprint_0)
        var_2 = blueprint_group_0.middleware()
        float_0 = -846.908172
        blueprint_group_0.__delitem__(float_0)
    except BaseException:
        pass

def test_case_7():
    try:
        bool_0 = False
        blueprint_group_0 = module_1.BlueprintGroup(bool_0)
        list_0 = [blueprint_group_0]
        int_0 = blueprint_group_0.__len__()
        var_0 = blueprint_group_0.middleware(*list_0)
        str_0 = ' \x0cN? 3.u*CueAzaev'
        blueprint_0 = module_0.Blueprint(str_0, bool_0)
        list_1 = [var_0, int_0, str_0]
        var_1 = blueprint_group_0.middleware(*list_1)
    except BaseException:
        pass

def test_case_8():
    try:
        bool_0 = False
        blueprint_group_0 = module_1.BlueprintGroup(bool_0)
        list_0 = [blueprint_group_0]
        int_0 = blueprint_group_0.__len__()
        var_0 = blueprint_group_0.middleware(*list_0)
        str_0 = '_after_start'
        blueprint_0 = module_0.Blueprint(str_0, str_0)
        blueprint_1 = module_0.Blueprint(str_0, bool_0)
        blueprint_group_0.append(blueprint_0)
        list_1 = [var_0, int_0, str_0]
        var_1 = blueprint_group_0.middleware(*list_1)
    except BaseException:
        pass