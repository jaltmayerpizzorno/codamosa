# Automatically generated by Pynguin.
import flutes.iterator as module_0

def test_case_0():
    pass

def test_case_1():
    str_0 = '%*8Y\x0bE\x0bY*'
    lazy_list_0 = module_0.LazyList(str_0)
    var_0 = lazy_list_0.__iter__()

def test_case_2():
    str_0 = '.'
    lazy_list_0 = module_0.LazyList(str_0)
    var_0 = list(lazy_list_0)

def test_case_3():
    int_0 = -637
    list_0 = [int_0]
    range_0 = module_0.Range(*list_0)
    var_0 = range_0.__getitem__(int_0)

def test_case_4():
    int_0 = -637
    list_0 = [int_0, int_0, int_0]
    range_0 = module_0.Range(*list_0)
    var_0 = range_0.__getitem__(int_0)

def test_case_5():
    int_0 = -667
    str_0 = '"Y<9'
    list_0 = [int_0]
    range_0 = module_0.Range(*list_0)
    var_0 = range_0.__getitem__(int_0)
    var_1 = range(int_0)
    int_1 = range_0.__len__()
    int_2 = 4
    var_2 = lambda x: x % int_0 == int_2
    bool_0 = False
    iterator_0 = module_0.split_by(str_0, bool_0, separator=str_0)
    var_3 = list(iterator_0)

def test_case_6():
    str_0 = ''
    dict_0 = {}
    bool_0 = False
    map_list_0 = module_0.MapList(dict_0, bool_0)
    lazy_list_0 = module_0.LazyList(str_0)
    var_0 = list(lazy_list_0)

def test_case_7():
    int_0 = -275
    list_0 = [int_0]
    iterator_0 = module_0.drop(int_0, list_0)
    list_1 = [iterator_0, list_0]
    list_2 = []
    map_list_0 = module_0.MapList(list_1, list_2)
    iterator_1 = map_list_0.__iter__()
    str_0 = 'PX'
    lazy_list_0 = module_0.LazyList(str_0)
    var_0 = list(lazy_list_0)

def test_case_8():
    dict_0 = None
    str_0 = 'g@+Ff'
    tuple_0 = (str_0,)
    var_0 = module_0.scanr(dict_0, tuple_0)

def test_case_9():
    int_0 = -667
    str_0 = '"Y<9'
    list_0 = [int_0]
    range_0 = module_0.Range(*list_0)
    var_0 = range_0.__getitem__(int_0)
    int_1 = range_0.__len__()
    var_1 = range(int_0)
    bool_0 = True
    iterator_0 = range_0.__iter__()
    iterator_1 = module_0.split_by(str_0, bool_0, separator=str_0)
    var_2 = list(iterator_1)

def test_case_10():
    int_0 = 5
    int_1 = 1000000
    var_0 = range(int_1)
    iterator_0 = module_0.take(int_0, var_0)
    var_1 = list(iterator_0)

def test_case_11():
    str_0 = ' Split by: '
    bool_0 = True
    iterator_0 = module_0.split_by(str_0, bool_0, separator=str_0)
    var_0 = list(iterator_0)

def test_case_12():
    bool_0 = False
    str_0 = '.'
    iterator_0 = module_0.split_by(str_0, bool_0, separator=str_0)
    var_0 = list(iterator_0)

def test_case_13():
    bool_0 = True
    str_0 = '.'
    iterator_0 = module_0.split_by(str_0, bool_0, separator=str_0)
    var_0 = list(iterator_0)

def test_case_14():
    str_0 = ' Split by: '
    bool_0 = True
    str_1 = ':'
    iterator_0 = module_0.split_by(str_0, bool_0, separator=str_1)
    var_0 = list(iterator_0)

def test_case_15():
    str_0 = ''
    lazy_list_0 = module_0.LazyList(str_0)
    var_0 = list(lazy_list_0)
    var_1 = lazy_list_0.__iter__()

def test_case_16():
    str_0 = '&Z'
    lazy_list_0 = module_0.LazyList(str_0)
    var_0 = list(lazy_list_0)
    var_1 = lazy_list_0.__len__()

def test_case_17():
    int_0 = -637
    list_0 = [int_0]
    range_0 = module_0.Range(*list_0)
    var_0 = range_0.__getitem__(int_0)
    var_1 = lambda x: x % int_0 == var_0
    bool_0 = True
    str_0 = ']E$8HyTA6,a!"]|@]'
    var_2 = range_0.__getitem__(bool_0)
    iterator_0 = module_0.split_by(str_0, bool_0, separator=str_0)
    var_3 = list(iterator_0)

def test_case_18():
    str_0 = '>VJ'
    lazy_list_0 = module_0.LazyList(str_0)
    bool_0 = False
    var_0 = lazy_list_0.__getitem__(bool_0)
    var_1 = list(lazy_list_0)
    int_0 = None
    sequence_0 = None
    map_list_0 = module_0.MapList(int_0, sequence_0)

def test_case_19():
    int_0 = 3
    int_1 = 10
    var_0 = range(int_1)
    iterator_0 = module_0.chunk(int_0, var_0)
    var_1 = list(iterator_0)

def test_case_20():
    var_0 = lambda s, x: x + s
    str_0 = 'a'
    str_1 = 'b'
    str_2 = 'c'
    str_3 = 'd'
    str_4 = [str_0, str_1, str_2, str_3]
    var_1 = module_0.scanl(var_0, str_4)
    var_2 = list(var_1)

def test_case_21():
    int_0 = 3
    var_0 = range(int_0)
    iterator_0 = module_0.chunk(int_0, var_0)
    var_1 = list(iterator_0)

def test_case_22():
    int_0 = 5
    int_1 = 1
    int_2 = 2
    int_3 = 3
    int_4 = 33
    int_5 = 6
    int_6 = 7
    int_7 = 8
    int_8 = 9
    int_9 = 20
    int_10 = [int_1, int_2, int_3, int_4, int_0, int_5, int_6, int_7, int_8, int_9]
    iterator_0 = module_0.drop(int_0, int_10)
    var_0 = list(iterator_0)
    int_11 = [int_1, int_2, int_3, int_4, int_0]
    iterator_1 = module_0.drop(int_0, int_11)
    var_1 = list(iterator_1)
    int_12 = [int_1, int_2, int_3, int_4, int_0]
    iterator_2 = module_0.drop(int_9, int_12)
    var_2 = list(iterator_2)

def test_case_23():
    var_0 = []
    lazy_list_0 = module_0.LazyList(var_0)
    int_0 = 0
    var_1 = lazy_list_0[int_0:]
    int_1 = 5
    var_2 = range(int_1)
    lazy_list_1 = module_0.LazyList(var_2)
    int_2 = 2
    var_3 = lazy_list_1[int_2:]
    int_3 = 3
    int_4 = 4
    var_4 = lazy_list_1[int_0:int_3]
    var_5 = lazy_list_1[int_2:int_2]
    var_6 = lazy_list_1[int_2:int_4]
    var_7 = lazy_list_1[int_4:int_4]
    var_8 = lazy_list_1[int_4:int_1]
    int_5 = 6
    var_9 = lazy_list_1[int_4:int_5]
    int_6 = 7
    var_10 = lazy_list_1[int_4:int_6]
    int_7 = -1
    var_11 = lazy_list_1[int_4:int_7]
    int_8 = -2
    var_12 = lazy_list_1[int_4:int_8]

def test_case_24():
    int_0 = 1
    int_1 = 2
    int_2 = 3
    int_3 = 4
    int_4 = [int_0, int_1, int_2, int_3]
    var_0 = lambda x: x * x
    map_list_0 = module_0.MapList(var_0, int_4)
    int_5 = -1
    var_1 = map_list_0.__getitem__(int_5)
    var_2 = map_list_0.__getitem__(int_1)
    var_3 = lambda x: x * x
    map_list_1 = module_0.MapList(var_3, int_4)
    int_6 = 0
    var_4 = None
    var_5 = slice(int_6, var_4, int_0)
    var_6 = map_list_1.__getitem__(var_5)
    var_7 = lambda x: x * x
    map_list_2 = module_0.MapList(var_7, int_4)
    var_8 = slice(var_4, var_4, var_4)
    var_9 = map_list_2.__getitem__(var_8)