# Automatically generated by Pynguin.
import ansible.plugins.lookup.sequence as module_0

def test_case_0():
    try:
        str_0 = 'hDL3ByR#E]5C&HS\r'
        lookup_module_0 = module_0.LookupModule()
        var_0 = lookup_module_0.parse_kv_args(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = ''
        str_1 = [str_0]
        lookup_module_0 = module_0.LookupModule()
        var_0 = lookup_module_0.run(str_1, str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '.'
        str_1 = [str_0]
        lookup_module_0 = module_0.LookupModule()
        var_0 = lookup_module_0.run(str_1, str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'BDA'
        lookup_module_0 = module_0.LookupModule()
        var_0 = lookup_module_0.parse_simple_args(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        lookup_module_0 = module_0.LookupModule()
        var_0 = lookup_module_0.sanity_check()
    except BaseException:
        pass

def test_case_5():
    try:
        lookup_module_0 = module_0.LookupModule()
        var_0 = lookup_module_0.reset()
        var_1 = lookup_module_0.sanity_check()
    except BaseException:
        pass

def test_case_6():
    try:
        lookup_module_0 = module_0.LookupModule()
        bytes_0 = b'\x05\x0e\x85c\x19Ra\xa3\x0e\x9e'
        var_0 = lookup_module_0.run(bytes_0, bytes_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = '0=mCj?=)'
        list_0 = [str_0, str_0, str_0, str_0]
        str_1 = '^\n'
        dict_0 = {str_0: str_0, str_0: str_1, str_0: str_0}
        lookup_module_0 = module_0.LookupModule(dict_0)
        list_1 = [lookup_module_0]
        lookup_module_1 = module_0.LookupModule(list_1)
        var_0 = lookup_module_1.run(str_0, list_0, **dict_0)
    except BaseException:
        pass

def test_case_8():
    try:
        lookup_module_0 = module_0.LookupModule()
        str_0 = 'a-1'
        var_0 = lookup_module_0.parse_simple_args(str_0)
    except BaseException:
        pass

def test_case_9():
    try:
        lookup_module_0 = module_0.LookupModule()
        str_0 = '2-10/2C'
        var_0 = lookup_module_0.parse_simple_args(str_0)
    except BaseException:
        pass

def test_case_10():
    try:
        lookup_module_0 = module_0.LookupModule()
        str_0 = 'start'
        str_1 = 'end'
        str_2 = '1'
        str_3 = {str_0: str_2, str_1: str_1}
        var_0 = lookup_module_0.parse_kv_args(str_3)
    except BaseException:
        pass