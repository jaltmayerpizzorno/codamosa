# Automatically generated by Pynguin.
import typesystem.base as module_0

def test_case_0():
    try:
        base_error_0 = module_0.BaseError()
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = 6
        str_0 = '9bw%ip37Zv^'
        int_1 = 1017
        message_0 = module_0.Message(text=str_0, key=int_1)
        list_0 = [message_0]
        validation_error_0 = module_0.ValidationError(key=int_0, messages=list_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = ';Y-Jhx$Y'
        base_error_0 = module_0.BaseError(text=str_0, key=str_0)
        list_0 = base_error_0.messages()
        base_error_1 = module_0.BaseError(text=str_0, code=str_0, messages=list_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'MesGgeA'
        int_0 = 5
        position_0 = module_0.Position(int_0, int_0, int_0)
        message_0 = module_0.Message(text=str_0, code=str_0, start_position=position_0)
        float_0 = -1257.0
        list_0 = [message_0, message_0, message_0, message_0]
        base_error_0 = module_0.BaseError(messages=list_0)
        bool_0 = base_error_0.__eq__(float_0)
        message_1 = module_0.Message(text=str_0, key=str_0)
        var_0 = base_error_0.__getitem__(position_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = '\ts!OTt'
        message_0 = module_0.Message(text=str_0, key=str_0)
        str_1 = message_0.__repr__()
        base_error_0 = module_0.BaseError(text=str_0)
        str_2 = base_error_0.__str__()
        base_error_1 = module_0.BaseError(code=str_2, key=str_1)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = ';Y-Jhx$Y'
        base_error_0 = module_0.BaseError(text=str_0, key=str_0)
        validation_result_0 = module_0.ValidationResult()
        str_1 = validation_result_0.__repr__()
        bool_0 = validation_result_0.__bool__()
        int_0 = 1623
        position_0 = module_0.Position(int_0, int_0, int_0)
        message_0 = module_0.Message(text=str_0, position=position_0, end_position=position_0)
    except BaseException:
        pass

def test_case_6():
    try:
        int_0 = 98
        str_0 = '8=@/N~"lK20)J{0~ML'
        int_1 = -674
        position_0 = module_0.Position(int_1, int_0, int_1)
        message_0 = module_0.Message(text=str_0, code=str_0, position=position_0, end_position=position_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = '+olY\n'
        list_0 = [str_0, str_0]
        int_0 = -1126
        int_1 = -3142
        position_0 = module_0.Position(int_0, int_0, int_1)
        message_0 = module_0.Message(text=str_0, index=list_0, position=position_0, start_position=position_0)
    except BaseException:
        pass

def test_case_8():
    try:
        validation_result_0 = module_0.ValidationResult()
        str_0 = 'gac-\\UrQm$6$8>=/1Q|?'
        str_1 = validation_result_0.__repr__()
        message_0 = module_0.Message(text=str_0, key=str_0)
        position_0 = None
        message_1 = module_0.Message(text=str_1, code=str_1, start_position=position_0)
        list_0 = [message_0, message_0, message_1, message_0]
        base_error_0 = module_0.BaseError(code=str_1, messages=list_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'definitions'
        validation_error_0 = module_0.ValidationError(text=str_0, code=str_0)
        validation_result_0 = module_0.ValidationResult(error=validation_error_0)
        str_1 = "9_T^mL<@kuaE'J\n"
        message_0 = module_0.Message(text=str_1)
        str_2 = message_0.__repr__()
        str_3 = 'g8$cG\x0b38 L'
        message_1 = module_0.Message(text=str_3)
        int_0 = -1348
        position_0 = module_0.Position(int_0, int_0, int_0)
        list_0 = [message_0, message_0]
        base_error_0 = module_0.BaseError(position=position_0, messages=list_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = '\ts!OTt'
        message_0 = module_0.Message(text=str_0, key=str_0)
        str_1 = message_0.__repr__()
        list_0 = [message_0, message_0, message_0, message_0]
        base_error_0 = module_0.BaseError(messages=list_0)
        str_2 = base_error_0.__str__()
        list_1 = base_error_0.messages(add_prefix=str_2)
        validation_result_0 = module_0.ValidationResult()
        str_3 = validation_result_0.__repr__()
        str_4 = validation_result_0.__repr__()
        iterator_0 = validation_result_0.__iter__()
        int_0 = -3803
        int_1 = -2392
        int_2 = -2312
        position_0 = module_0.Position(int_1, int_2, int_2)
        bool_0 = position_0.__eq__(int_0)
        validation_error_0 = module_0.ValidationError()
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = '\ts!OTt'
        message_0 = module_0.Message(text=str_0, key=str_0)
        str_1 = message_0.__repr__()
        base_error_0 = module_0.BaseError(text=str_1, key=str_1)
        str_2 = base_error_0.__str__()
        list_0 = base_error_0.messages()
        bytes_0 = b'\xc0q|\xe7\x194\xe9;\x12\x00@b\x04Il\nX'
        validation_result_0 = module_0.ValidationResult(error=bytes_0)
        str_3 = validation_result_0.__repr__()
        str_4 = validation_result_0.__repr__()
        iterator_0 = validation_result_0.__iter__()
        str_5 = message_0.__repr__()
        str_6 = message_0.__repr__()
        str_7 = message_0.__repr__()
        int_0 = 1
        validation_error_0 = module_0.ValidationError(text=str_3, key=str_0)
        validation_result_1 = module_0.ValidationResult(value=int_0, error=validation_error_0)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = '\ts!OTt'
        message_0 = module_0.Message(text=str_0, key=str_0)
        str_1 = message_0.__repr__()
        base_error_0 = module_0.BaseError(text=str_0)
        str_2 = base_error_0.__str__()
        validation_result_0 = module_0.ValidationResult()
        str_3 = validation_result_0.__repr__()
        str_4 = validation_result_0.__repr__()
        iterator_0 = validation_result_0.__iter__()
        str_5 = message_0.__repr__()
        str_6 = message_0.__repr__()
        int_0 = message_0.__hash__()
        str_7 = validation_result_0.__repr__()
        bool_0 = validation_result_0.__bool__()
        list_0 = []
        int_1 = -2040
        int_2 = -2367
        position_0 = module_0.Position(int_1, int_2, int_2)
        message_1 = module_0.Message(text=str_2, end_position=position_0)
        base_error_1 = module_0.BaseError(messages=list_0)
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = '\ts!OTt'
        message_0 = module_0.Message(text=str_0, key=str_0)
        str_1 = message_0.__repr__()
        base_error_0 = module_0.BaseError(text=str_0)
        str_2 = base_error_0.__str__()
        validation_result_0 = module_0.ValidationResult()
        str_3 = validation_result_0.__repr__()
        str_4 = validation_result_0.__repr__()
        iterator_0 = validation_result_0.__iter__()
        str_5 = message_0.__repr__()
        str_6 = message_0.__repr__()
        int_0 = message_0.__hash__()
        str_7 = validation_result_0.__repr__()
        int_1 = -3518
        bool_0 = validation_result_0.__bool__()
        int_2 = 1623
        position_0 = module_0.Position(int_1, int_1, int_2)
        iterator_1 = base_error_0.__iter__()
        str_8 = None
        int_3 = 429
        list_0 = [int_3, str_1, str_2]
        message_1 = module_0.Message(text=str_8, key=str_5, index=list_0, position=position_0)
    except BaseException:
        pass

def test_case_14():
    try:
        str_0 = '\ts!OTt'
        message_0 = module_0.Message(text=str_0, key=str_0)
        str_1 = message_0.__repr__()
        base_error_0 = module_0.BaseError(text=str_0)
        str_2 = base_error_0.__str__()
        validation_result_0 = module_0.ValidationResult()
        str_3 = validation_result_0.__repr__()
        str_4 = validation_result_0.__repr__()
        int_0 = -1628
        position_0 = module_0.Position(int_0, int_0, int_0)
        message_1 = module_0.Message(text=str_2, code=str_3, key=str_0, start_position=position_0)
        str_5 = message_1.__repr__()
        str_6 = message_0.__repr__()
        str_7 = base_error_0.__repr__()
        bool_0 = validation_result_0.__bool__()
        bool_1 = validation_result_0.__bool__()
        str_8 = '2<NJm\x0bu5M}MEIcG'
        message_2 = module_0.Message(text=str_8, code=str_4, position=position_0, end_position=position_0)
    except BaseException:
        pass