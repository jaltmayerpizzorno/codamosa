# Automatically generated by Pynguin.
import ansible.parsing.yaml.objects as module_0

def test_case_0():
    pass

def test_case_1():
    str_0 = '3206.09'
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(str_0)
    var_0 = ansible_vault_encrypted_unicode_0.__len__()

def test_case_2():
    ansible_mapping_0 = module_0.AnsibleMapping()
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(ansible_mapping_0)
    var_0 = ansible_vault_encrypted_unicode_0.is_encrypted()

def test_case_3():
    str_0 = 'abcdefg'
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(str_0)
    var_0 = ansible_vault_encrypted_unicode_0 != str_0

def test_case_4():
    list_0 = []
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(list_0)
    var_0 = ansible_vault_encrypted_unicode_0.__str__()

def test_case_5():
    ansible_unicode_0 = module_0.AnsibleUnicode()
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(ansible_unicode_0)
    var_0 = ansible_vault_encrypted_unicode_0.__unicode__()

def test_case_6():
    list_0 = []
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(list_0)
    var_0 = ansible_vault_encrypted_unicode_0.__repr__()

def test_case_7():
    str_0 = ']Z)|'
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(str_0)
    int_0 = 65536
    var_0 = ansible_vault_encrypted_unicode_0.__radd__(int_0)
    var_1 = ansible_vault_encrypted_unicode_0.__len__()
    var_2 = ansible_vault_encrypted_unicode_0.__add__(str_0)
    var_3 = ansible_vault_encrypted_unicode_0.upper()
    var_4 = ansible_vault_encrypted_unicode_0.isspace()

def test_case_8():
    int_0 = -190
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(int_0)
    var_0 = ansible_vault_encrypted_unicode_0.capitalize()

def test_case_9():
    int_0 = -134
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(int_0)
    var_0 = ansible_vault_encrypted_unicode_0.casefold()

def test_case_10():
    bool_0 = False
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(bool_0)
    var_0 = ansible_vault_encrypted_unicode_0.isalpha()

def test_case_11():
    ansible_base_y_a_m_l_object_0 = module_0.AnsibleBaseYAMLObject()
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(ansible_base_y_a_m_l_object_0)
    var_0 = ansible_vault_encrypted_unicode_0.isascii()

def test_case_12():
    bool_0 = False
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(bool_0)
    var_0 = ansible_vault_encrypted_unicode_0.isdecimal()

def test_case_13():
    bool_0 = True
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(bool_0)
    var_0 = ansible_vault_encrypted_unicode_0.isnumeric()

def test_case_14():
    int_0 = -874
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(int_0)
    var_0 = ansible_vault_encrypted_unicode_0.isprintable()

def test_case_15():
    list_0 = []
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(list_0)
    var_0 = ansible_vault_encrypted_unicode_0.isspace()

def test_case_16():
    bool_0 = True
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(bool_0)
    var_0 = ansible_vault_encrypted_unicode_0.istitle()

def test_case_17():
    ansible_unicode_0 = module_0.AnsibleUnicode()
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(ansible_unicode_0)
    var_0 = ansible_vault_encrypted_unicode_0.lower()

def test_case_18():
    str_0 = 'passwordwxyzz'
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(str_0)
    str_1 = 'wxyz'
    var_0 = ansible_vault_encrypted_unicode_0.rfind(str_1)

def test_case_19():
    list_0 = []
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(list_0)
    var_0 = ansible_vault_encrypted_unicode_0.rstrip()

def test_case_20():
    str_0 = 'unknown doc_fragment(s) in file {0}: {1}'
    str_1 = ';Pc[&IT>Cn<B+ljM(sz'
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(str_1)
    var_0 = ansible_vault_encrypted_unicode_0.startswith(str_0)

def test_case_21():
    set_0 = set()
    dict_0 = {}
    list_0 = [dict_0, dict_0, dict_0, set_0]
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(list_0)
    var_0 = ansible_vault_encrypted_unicode_0.__unicode__()
    ansible_vault_encrypted_unicode_1 = module_0.AnsibleVaultEncryptedUnicode(dict_0)
    var_1 = ansible_vault_encrypted_unicode_1.strip()
    list_1 = [set_0]
    var_2 = ansible_vault_encrypted_unicode_0.istitle()
    ansible_vault_encrypted_unicode_2 = module_0.AnsibleVaultEncryptedUnicode(list_1)
    var_3 = ansible_vault_encrypted_unicode_2.isprintable()
    var_4 = ansible_vault_encrypted_unicode_2.is_encrypted()

def test_case_22():
    int_0 = -144
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(int_0)
    var_0 = ansible_vault_encrypted_unicode_0.swapcase()

def test_case_23():
    list_0 = None
    ansible_mapping_0 = module_0.AnsibleMapping()
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(ansible_mapping_0)
    var_0 = ansible_vault_encrypted_unicode_0.__radd__(list_0)
    dict_0 = {}
    list_1 = None
    set_0 = set()
    ansible_vault_encrypted_unicode_1 = module_0.AnsibleVaultEncryptedUnicode(set_0)
    var_1 = ansible_vault_encrypted_unicode_1.lstrip(list_1)
    ansible_mapping_1 = module_0.AnsibleMapping(**dict_0)
    bytes_0 = b'\x9c\xf4W\xa4'
    list_2 = [ansible_mapping_1, ansible_mapping_1, ansible_mapping_1]
    ansible_vault_encrypted_unicode_2 = module_0.AnsibleVaultEncryptedUnicode(list_2)
    var_2 = ansible_vault_encrypted_unicode_2.islower()
    ansible_vault_encrypted_unicode_3 = module_0.AnsibleVaultEncryptedUnicode(bytes_0)
    var_3 = ansible_vault_encrypted_unicode_3.upper()
    ansible_vault_encrypted_unicode_4 = module_0.AnsibleVaultEncryptedUnicode(ansible_mapping_1)
    var_4 = ansible_vault_encrypted_unicode_4.title()

def test_case_24():
    bytes_0 = b'\xc3\xdc"^g\r\xcdr\xf3K\xba\xedg+\xe4\xc1))'
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(bytes_0)
    var_0 = ansible_vault_encrypted_unicode_0.upper()

def test_case_25():
    float_0 = None
    complex_0 = None
    str_0 = '=\rpu!g40'
    dict_0 = {str_0: complex_0}
    list_0 = [float_0, float_0, complex_0]
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(list_0)
    var_0 = ansible_vault_encrypted_unicode_0.__ne__(dict_0)
    list_1 = [complex_0, complex_0, complex_0, complex_0]
    ansible_vault_encrypted_unicode_1 = module_0.AnsibleVaultEncryptedUnicode(list_1)
    var_1 = ansible_vault_encrypted_unicode_1.__reversed__()

def test_case_26():
    str_0 = 'au9tJ-Ajm:\\a&r@/Ay'
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(str_0)
    var_0 = ansible_vault_encrypted_unicode_0.isalnum()

def test_case_27():
    dict_0 = {}
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(dict_0)
    var_0 = ansible_vault_encrypted_unicode_0.isidentifier()

def test_case_28():
    ansible_unicode_0 = module_0.AnsibleUnicode()
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(ansible_unicode_0)
    var_0 = ansible_vault_encrypted_unicode_0.split()

def test_case_29():
    float_0 = -92.874472
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(float_0)
    var_0 = ansible_vault_encrypted_unicode_0.rsplit()

def test_case_30():
    dict_0 = {}
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(dict_0)
    var_0 = ansible_vault_encrypted_unicode_0.__eq__(ansible_vault_encrypted_unicode_0)

def test_case_31():
    ansible_unicode_0 = module_0.AnsibleUnicode()
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(ansible_unicode_0)
    var_0 = ansible_vault_encrypted_unicode_0.islower()

def test_case_32():
    set_0 = set()
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(set_0)
    var_0 = ansible_vault_encrypted_unicode_0.isdigit()

def test_case_33():
    ansible_sequence_0 = module_0.AnsibleSequence()
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(ansible_sequence_0)
    var_0 = ansible_vault_encrypted_unicode_0.isupper()

def test_case_34():
    float_0 = None
    complex_0 = None
    str_0 = '=\rpu!g40'
    dict_0 = {str_0: complex_0}
    list_0 = [float_0, float_0, complex_0]
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(list_0)
    var_0 = ansible_vault_encrypted_unicode_0.__ne__(dict_0)
    list_1 = [complex_0, complex_0, complex_0, complex_0]
    ansible_vault_encrypted_unicode_1 = module_0.AnsibleVaultEncryptedUnicode(list_1)
    var_1 = ansible_vault_encrypted_unicode_1.format_map(float_0)
    var_2 = ansible_vault_encrypted_unicode_1.__reversed__()

def test_case_35():
    int_0 = -144
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(int_0)
    var_0 = ansible_vault_encrypted_unicode_0.__float__()

def test_case_36():
    int_0 = -2659
    set_0 = {int_0, int_0, int_0}
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(set_0)
    int_1 = None
    ansible_vault_encrypted_unicode_1 = module_0.AnsibleVaultEncryptedUnicode(int_1)
    var_0 = ansible_vault_encrypted_unicode_0.casefold()
    var_1 = ansible_vault_encrypted_unicode_1.is_encrypted()
    str_0 = '\tYa`h%xxdW'
    str_1 = '(3S!$s} ?2)}hPN'
    set_1 = {str_1}
    ansible_mapping_0 = module_0.AnsibleMapping()
    dict_0 = {str_1: str_1, str_0: str_0, str_0: str_0, str_0: str_0}
    ansible_sequence_0 = module_0.AnsibleSequence()
    ansible_vault_encrypted_unicode_2 = module_0.AnsibleVaultEncryptedUnicode(ansible_sequence_0)
    list_0 = None
    var_2 = ansible_vault_encrypted_unicode_2.__add__(list_0)
    var_3 = ansible_vault_encrypted_unicode_2.__radd__(ansible_mapping_0)
    var_4 = ansible_vault_encrypted_unicode_2.format_map(set_0)
    var_5 = ansible_vault_encrypted_unicode_2.upper()
    ansible_vault_encrypted_unicode_3 = module_0.AnsibleVaultEncryptedUnicode(list_0)
    var_6 = ansible_vault_encrypted_unicode_3.__eq__(set_1)
    ansible_unicode_0 = module_0.AnsibleUnicode()
    var_7 = ansible_vault_encrypted_unicode_1.format(**dict_0)
    var_8 = ansible_vault_encrypted_unicode_0.__ge__(ansible_vault_encrypted_unicode_3)

def test_case_37():
    float_0 = 295.194
    dict_0 = {float_0: float_0}
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(dict_0)
    var_0 = ansible_vault_encrypted_unicode_0.__str__()
    var_1 = ansible_vault_encrypted_unicode_0.__unicode__()
    str_0 = ']Z)|'
    ansible_vault_encrypted_unicode_1 = module_0.AnsibleVaultEncryptedUnicode(str_0)
    int_0 = 65536
    var_2 = ansible_vault_encrypted_unicode_1.__radd__(int_0)
    var_3 = ansible_vault_encrypted_unicode_1.__len__()
    var_4 = ansible_vault_encrypted_unicode_0.__ne__(float_0)
    var_5 = ansible_vault_encrypted_unicode_1.__add__(str_0)
    var_6 = ansible_vault_encrypted_unicode_1.upper()
    str_1 = ''
    str_2 = '?+NUO).S%v@m6'
    list_0 = []
    dict_1 = {str_0: var_1, str_1: str_1, str_2: float_0, str_2: list_0}
    var_7 = ansible_vault_encrypted_unicode_1.format(**dict_1)
    var_8 = ansible_vault_encrypted_unicode_1.isspace()
    var_9 = ansible_vault_encrypted_unicode_0.upper()
    str_3 = 'ansible_limit'
    var_10 = ansible_vault_encrypted_unicode_1.replace(ansible_vault_encrypted_unicode_0, str_3)

def test_case_38():
    float_0 = None
    tuple_0 = (float_0,)
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(tuple_0)
    str_0 = '<ansible.parsing.yaml.objects.ansiblebaseyamlobject object at 0x7f442a516620>'
    str_1 = 'LinuxDistribution(os_release_file={self.os_release_file!r}, distro_release_file={self.distro_release_file!r}, include_lsb={self.include_lsb!r}, include_uname={self.include_uname!r}, _os_release_info={self._os_release_info!r}, _lsb_release_info={self._lsb_release_info!r}, _distro_release_info={self._distro_release_info!r}, _uname_info={self._uname_info!r})'
    dict_0 = {str_0: str_0, str_1: str_1}
    ansible_vault_encrypted_unicode_1 = module_0.AnsibleVaultEncryptedUnicode(dict_0)
    var_0 = ansible_vault_encrypted_unicode_1.rfind(ansible_vault_encrypted_unicode_0)
    list_0 = []
    ansible_vault_encrypted_unicode_2 = module_0.AnsibleVaultEncryptedUnicode(list_0)
    var_1 = ansible_vault_encrypted_unicode_2.__repr__()

def test_case_39():
    str_0 = "gP5\r'8ku<'}*xD"
    dict_0 = {str_0: str_0, str_0: str_0}
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(dict_0)
    ansible_vault_encrypted_unicode_1 = module_0.AnsibleVaultEncryptedUnicode(ansible_vault_encrypted_unicode_0)
    var_0 = ansible_vault_encrypted_unicode_1.capitalize()
    dict_1 = {}
    ansible_vault_encrypted_unicode_2 = module_0.AnsibleVaultEncryptedUnicode(dict_1)
    var_1 = ansible_vault_encrypted_unicode_2.isidentifier()
    var_2 = ansible_vault_encrypted_unicode_2.__lt__(ansible_vault_encrypted_unicode_2)

def test_case_40():
    str_0 = 'abcd'
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(str_0)
    int_0 = 0
    int_1 = 4
    var_0 = ansible_vault_encrypted_unicode_0.__getslice__(int_0, int_1)