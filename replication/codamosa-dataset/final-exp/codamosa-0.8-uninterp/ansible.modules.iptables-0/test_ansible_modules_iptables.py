# Automatically generated by Pynguin.
import ansible.modules.iptables as module_0

def test_case_0():
    pass

def test_case_1():
    int_0 = 1281
    str_0 = '\x0beK#p"yST'
    tuple_0 = (str_0, str_0)
    float_0 = 641.5
    bytes_0 = b')\xf4f\xe5 \xb2\x96g\xea\xcd\xba\xb5'
    tuple_1 = (tuple_0, float_0, float_0, bytes_0)
    var_0 = module_0.append_match_flag(int_0, tuple_1, float_0, bytes_0)

def test_case_2():
    set_0 = None
    str_0 = '@u[fDb(\r\x0bVv-E]K&ZJf'
    int_0 = -178
    float_0 = 2.0
    tuple_0 = (int_0, float_0, set_0, float_0)
    str_1 = 'ansible.modules.iptables'
    bytes_0 = b"\x86a\xe0z\xd9'\xc9\xa47;\xc7"
    list_0 = []
    var_0 = module_0.append_csv(bytes_0, list_0, str_0)
    bool_0 = False
    bool_1 = True
    var_1 = module_0.append_match_flag(bool_0, tuple_0, str_1, bool_1)

def test_case_3():
    var_0 = module_0.main()

def test_case_4():
    bool_0 = True
    str_0 = '6ZV6Mg%am^:h2u7~\n]V'
    var_0 = module_0.append_tcp_flags(bool_0, str_0, bool_0)
    bytes_0 = b'\x8e\xb3'
    bool_1 = False
    str_1 = 'A5K\r`Qo#>;'
    var_1 = module_0.append_match(bytes_0, bool_1, str_1)

def test_case_5():
    bool_0 = True
    str_0 = '6ZV6Mg%am^:h2u7~\n]V'
    var_0 = module_0.append_tcp_flags(bool_0, str_0, bool_0)

def test_case_6():
    str_0 = '--test'
    bool_0 = True
    var_0 = []
    str_1 = '!test'
    var_1 = module_0.append_param(var_0, str_1, str_0, bool_0)
    var_2 = []
    str_2 = 'test1'
    str_3 = 'test2'
    str_4 = [str_2, str_3]
    bool_1 = True
    var_3 = module_0.append_param(var_2, str_4, str_0, bool_1)
    var_4 = []
    str_5 = '!teYt1'
    str_6 = [str_5, str_4]
    var_5 = module_0.append_param(var_4, str_6, str_0, bool_1)

def test_case_7():
    str_0 = 'INPUT'
    bool_0 = False
    float_0 = 3004.52301
    str_1 = '=t>*l3I'
    var_0 = module_0.append_tcp_flags(bool_0, str_1, float_0)
    tuple_0 = None
    list_0 = None
    var_1 = module_0.append_param(list_0, list_0, str_0, tuple_0)

def test_case_8():
    var_0 = []
    str_0 = 'match'
    str_1 = '--tcp-flags'
    bool_0 = True
    var_1 = module_0.append_match_flag(var_0, str_0, str_1, bool_0)
    var_2 = []
    str_2 = 'negate'
    var_3 = module_0.append_match_flag(var_2, str_2, str_1, bool_0)

def test_case_9():
    var_0 = []
    str_0 = 'RST'
    str_1 = [str_0, str_0, str_0, str_0]
    var_1 = dict(flags=str_1, flags_set=str_1)
    var_2 = module_0.append_tcp_flags(var_0, var_1, str_1)

def test_case_10():
    var_0 = []
    str_0 = '--tcp-flags'
    var_1 = module_0.append_tcp_flags(var_0, str_0, str_0)