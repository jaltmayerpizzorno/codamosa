# Automatically generated by Pynguin.
import codetiming._timers as module_0

def test_case_0():
    pass

def test_case_1():
    timers_0 = module_0.Timers()

def test_case_2():
    timers_0 = module_0.Timers()
    str_0 = 'Test'
    float_0 = 1.5
    timers_0.add(str_0, float_0)
    float_1 = timers_0.min(str_0)

def test_case_3():
    timers_0 = module_0.Timers()
    str_0 = 'foo'
    int_0 = 123
    timers_0.add(str_0, int_0)
    float_0 = timers_0.max(str_0)

def test_case_4():
    str_0 = 'milliseconds'
    float_0 = 620.0
    timers_0 = module_0.Timers()
    timers_0.add(str_0, float_0)
    float_1 = timers_0.median(str_0)

def test_case_5():
    str_0 = 'milliseconds'
    float_0 = 620.0
    timers_0 = module_0.Timers()
    timers_0.add(str_0, float_0)
    float_1 = timers_0.stdev(str_0)
    float_2 = timers_0.median(str_0)

def test_case_6():
    timers_0 = module_0.Timers()
    str_0 = 'iter'
    float_0 = 0.1
    timers_0.add(str_0, float_0)
    float_1 = timers_0.mean(str_0)

def test_case_7():
    str_0 = 'milliseconds'
    float_0 = 618.7573661065549
    timers_0 = module_0.Timers()
    timers_0.add(str_0, float_0)
    float_1 = -706.4413
    float_2 = 3514.1
    timers_0.add(str_0, float_2)
    float_3 = timers_0.stdev(str_0)
    str_1 = 'NS<b.,:"m'
    dict_0 = {}
    timers_0.add(str_1, float_1)
    timers_1 = module_0.Timers()
    timers_1.add(str_0, float_3)
    timers_2 = module_0.Timers(**dict_0)
    float_4 = timers_0.mean(str_0)