# Automatically generated by Pynguin.
import ansible.inventory.host as module_0
import ansible.inventory.group as module_1

def test_case_0():
    try:
        str_0 = "[xA'gEJ(( "
        bool_0 = True
        host_0 = module_0.Host(str_0, bool_0)
        list_0 = [host_0, host_0, str_0, bool_0]
        bytes_0 = b'zr[\x86\x13\x8a\xc4!\x993'
        host_1 = module_0.Host(bytes_0)
        var_0 = host_1.__setstate__(list_0)
    except BaseException:
        pass

def test_case_1():
    try:
        host_0 = module_0.Host()
        list_0 = [host_0, host_0, host_0]
        host_1 = module_0.Host()
        var_0 = host_1.__getstate__()
        var_1 = host_1.__ne__(host_0)
        host_2 = module_0.Host(list_0)
        var_2 = host_2.__str__()
        var_3 = host_0.remove_group(host_0)
        var_4 = host_0.get_vars()
    except BaseException:
        pass

def test_case_2():
    try:
        host_0 = module_0.Host()
        var_0 = host_0.get_magic_vars()
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'R\xe7\x91\xb4I\xf23\xaa\xc7\xd3\xee\xe6w\xc5\n\x9f'
        dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
        bool_0 = False
        float_0 = 0.0001
        host_0 = module_0.Host(bool_0, float_0)
        host_1 = module_0.Host(dict_0, host_0)
    except BaseException:
        pass

def test_case_4():
    try:
        float_0 = -2164.6669
        list_0 = []
        host_0 = module_0.Host(list_0)
        var_0 = host_0.populate_ancestors(float_0)
    except BaseException:
        pass

def test_case_5():
    try:
        host_0 = module_0.Host()
        list_0 = [host_0, host_0, host_0]
        host_1 = module_0.Host()
        var_0 = host_1.__getstate__()
        host_2 = module_0.Host(list_0)
        str_0 = '$~&W8`Mej'
        str_1 = ')OHwrrM'
        host_3 = module_0.Host(str_1)
        var_1 = host_3.add_group(str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        float_0 = 587.78927
        str_0 = 'jgkg=WO6I!,{a'
        host_0 = module_0.Host(str_0)
        var_0 = host_0.get_groups()
        host_1 = module_0.Host(float_0)
        var_1 = host_1.get_vars()
    except BaseException:
        pass

def test_case_7():
    try:
        dict_0 = {}
        host_0 = module_0.Host()
        var_0 = host_0.__getstate__()
        host_1 = module_0.Host(dict_0)
        var_1 = host_1.get_groups()
        var_2 = host_1.populate_ancestors()
        var_3 = host_0.__setstate__(dict_0)
        var_4 = host_1.get_magic_vars()
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = 'test'
        host_0 = module_0.Host(str_0)
        str_1 = 'var1'
        str_2 = 'var2'
        str_3 = 'value2'
        str_4 = {str_1: str_3, str_2: str_3}
        str_5 = 'group1'
        group_0 = module_1.Group(str_5)
        str_6 = 'group2'
        group_1 = module_1.Group(str_6)
        group_2 = [group_0, group_1]
        var_0 = host_0._uuid
        bool_0 = False
        var_1 = dict(name=str_0, vars=str_4, address=str_0, uuid=var_0, groups=group_2, implicit=bool_0)
        var_2 = host_0.deserialize(var_1)
    except BaseException:
        pass