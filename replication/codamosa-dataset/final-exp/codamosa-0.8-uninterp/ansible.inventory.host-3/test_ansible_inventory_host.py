# Automatically generated by Pynguin.
import ansible.inventory.host as module_0
import ansible.inventory.group as module_1

def test_case_0():
    pass

def test_case_1():
    host_0 = module_0.Host()
    var_0 = host_0.__getstate__()
    bool_0 = True
    var_1 = host_0.remove_group(bool_0)
    var_2 = host_0.__repr__()

def test_case_2():
    int_0 = 2235
    set_0 = set()
    bool_0 = False
    tuple_0 = (set_0, bool_0, bool_0)
    host_0 = module_0.Host(tuple_0)
    var_0 = host_0.__ne__(int_0)

def test_case_3():
    bool_0 = True
    host_0 = module_0.Host()
    var_0 = host_0.populate_ancestors()
    var_1 = host_0.__hash__()
    host_1 = module_0.Host(bool_0)
    var_2 = host_1.serialize()

def test_case_4():
    int_0 = -1699
    host_0 = module_0.Host(int_0)
    var_0 = host_0.__str__()
    var_1 = host_0.serialize()

def test_case_5():
    bool_0 = True
    host_0 = module_0.Host(bool_0)
    var_0 = host_0.serialize()

def test_case_6():
    host_0 = module_0.Host()
    var_0 = host_0.populate_ancestors()

def test_case_7():
    str_0 = 'localhost'
    host_0 = module_0.Host(str_0)
    str_1 = 'a'
    str_2 = 'b'
    str_3 = 'c'
    str_4 = {str_2: str_3}
    var_0 = host_0.set_variable(str_1, str_4)
    str_5 = 'd'
    var_1 = host_0.get_magic_vars()
    str_6 = {str_2: str_5}
    var_2 = host_0.set_variable(str_1, str_6)

def test_case_8():
    str_0 = 'test_host'
    host_0 = module_0.Host(str_0)
    str_1 = 'test_group2'
    group_0 = module_1.Group(str_1)
    str_2 = 'test_group3'
    group_1 = [group_0]
    group_2 = module_1.Group(str_2)
    group_3 = [group_0, group_2]
    var_0 = host_0.populate_ancestors(group_3)
    group_4 = [group_0, group_2]
    var_1 = host_0.populate_ancestors(group_4)
    var_2 = host_0.populate_ancestors()

def test_case_9():
    str_0 = 'foo'
    group_0 = module_1.Group(str_0)
    str_1 = 'bar'
    bytes_0 = b'\x9a\x16\xaf^\x81g'
    host_0 = module_0.Host()
    host_1 = module_0.Host(host_0)
    var_0 = host_1.__eq__(bytes_0)
    group_1 = module_1.Group(str_1)
    list_0 = [group_0]
    host_2 = module_0.Host(list_0)
    var_1 = group_1.get_hosts()
    var_2 = host_2.populate_ancestors()
    str_2 = 'a'
    group_2 = module_1.Group(str_2)
    var_3 = group_2.add_child_group(group_0)
    bytes_1 = b'\xc13j\x901\x95\xe9P\x13\xf3\xd9/sR\x05\xc7\xde'
    host_3 = module_0.Host()
    var_4 = host_3.set_variable(bytes_1, bytes_1)
    host_4 = module_0.Host(str_0)
    var_5 = host_4.add_group(group_0)
    var_6 = host_4.remove_group(group_0)
    var_7 = host_4.add_group(group_0)
    var_8 = host_4.__getstate__()
    var_9 = host_4.add_group(group_1)
    var_10 = host_2.remove_group(bytes_1)

def test_case_10():
    str_0 = 'bar'
    group_0 = module_1.Group(str_0)
    group_1 = module_1.Group(str_0)
    var_0 = group_1.add_child_group(group_0)
    str_1 = 'test'
    host_0 = module_0.Host(str_1)
    var_1 = host_0.add_group(group_0)
    dict_0 = {}
    host_1 = module_0.Host(dict_0)
    var_2 = host_1.remove_group(dict_0)

def test_case_11():
    str_0 = 'foo'
    group_0 = module_1.Group(str_0)
    group_1 = module_1.Group(str_0)
    str_1 = 'baz'
    group_2 = module_1.Group(str_1)
    var_0 = group_2.add_child_group(group_0)
    var_1 = group_2.add_child_group(group_1)
    str_2 = 'test'
    host_0 = module_0.Host(str_2)
    var_2 = host_0.add_group(group_0)
    var_3 = host_0.add_group(group_1)
    var_4 = host_0.remove_group(group_1)

def test_case_12():
    host_0 = module_0.Host()
    str_0 = 'k'
    str_1 = 'k1'
    str_2 = 'v1'
    str_3 = {str_1: str_2}
    var_0 = host_0.set_variable(str_0, str_3)
    str_4 = 'k2'
    str_5 = 'v2'
    str_6 = {str_1: str_5, str_4: str_5}
    var_1 = host_0.set_variable(str_0, str_6)

def test_case_13():
    str_0 = 'all'
    group_0 = module_1.Group(str_0)
    str_1 = 'g1'
    group_1 = module_1.Group(str_1)
    str_2 = 'g2'
    group_2 = module_1.Group(str_2)
    var_0 = group_2.add_child_group(group_1)
    var_1 = group_0.add_child_group(group_2)
    str_3 = 'h1'
    host_0 = module_0.Host(str_3)
    var_2 = host_0.add_group(group_1)
    var_3 = host_0.populate_ancestors()

def test_case_14():
    str_0 = 'foo'
    group_0 = module_1.Group(str_0)
    str_1 = 'bar'
    group_1 = module_1.Group(str_1)
    str_2 = 'baz'
    group_2 = module_1.Group(str_2)
    var_0 = group_2.add_child_group(group_0)
    var_1 = group_2.add_child_group(group_1)
    str_3 = 'test'
    host_0 = module_0.Host(str_3)
    var_2 = host_0.add_group(group_0)
    var_3 = host_0.remove_group(group_0)
    var_4 = host_0.add_group(group_0)
    var_5 = host_0.add_group(group_1)

def test_case_15():
    str_0 = 'localhost'
    host_0 = module_0.Host(str_0)
    str_1 = 'a'
    str_2 = 'b'
    str_3 = 'c'
    str_4 = {str_2: str_3}
    var_0 = host_0.set_variable(str_1, str_4)
    var_1 = host_0.set_variable(str_1, str_1)

def test_case_16():
    host_0 = module_0.Host()
    str_0 = 'a'
    str_1 = 'b'
    str_2 = 'c'
    var_0 = host_0.set_variable(str_0, str_2)
    str_3 = {str_0: str_1}
    var_1 = host_0.set_variable(str_0, str_3)
    str_4 = 'd'
    str_5 = {str_2: str_4}
    var_2 = host_0.set_variable(str_0, str_5)

def test_case_17():
    str_0 = 'localhost'
    host_0 = module_0.Host(str_0)
    str_1 = 'g1'
    group_0 = module_1.Group(str_1)
    str_2 = 'g2'
    group_1 = module_1.Group(str_2)
    var_0 = group_0.add_child_group(group_1)
    var_1 = host_0.add_group(group_0)
    var_2 = host_0.get_vars()
    var_3 = host_0.get_groups()
    host_1 = module_0.Host(str_0)
    group_2 = module_1.Group(str_1)
    group_3 = module_1.Group(str_2)
    var_4 = group_3.add_child_group(group_2)
    var_5 = group_0.__getstate__()
    var_6 = host_1.add_group(group_2)
    var_7 = host_1.get_groups()

def test_case_18():
    str_0 = 'host'
    host_0 = module_0.Host(str_0)
    str_1 = 'all'
    group_0 = module_1.Group(str_1)
    str_2 = 'group1'
    group_1 = module_1.Group(str_2)
    str_3 = 'group2'
    group_2 = module_1.Group(str_3)
    group_3 = [group_0, group_1, group_2]
    int_0 = 0
    var_0 = group_3[int_0]
    var_1 = host_0.add_group(var_0)
    int_1 = 1
    var_2 = group_3[int_1]
    var_3 = host_0.add_group(var_2)
    int_2 = 2
    var_4 = group_3[int_2]
    var_5 = host_0.add_group(var_4)
    var_6 = host_0.get_magic_vars()

def test_case_19():
    host_0 = module_0.Host()
    str_0 = 'myhost'
    int_0 = 1
    int_1 = 2
    var_0 = dict(a=int_0, b=int_1, c=int_1)
    str_1 = '10.10.10.10'
    str_2 = '123456'
    str_3 = 'g1'
    var_1 = dict(g1a=int_0, g1b=int_1)
    var_2 = dict(name=str_3, vars=var_1)
    str_4 = 'g2'
    var_3 = dict(name=str_4, vars=str_4)
    var_4 = [var_2, var_3]
    var_5 = dict(name=str_0, vars=var_0, address=str_1, uuid=str_2, groups=var_4)
    var_6 = host_0.deserialize(var_5)
    var_7 = dict(a=int_0, b=int_1, c=int_0)

def test_case_20():
    str_0 = 'all'
    group_0 = module_1.Group(str_0)
    group_1 = module_1.Group(str_0)
    str_1 = 'db'
    group_2 = module_1.Group(str_1)
    str_2 = 'app'
    group_3 = module_1.Group(str_2)
    var_0 = group_1.add_child_group(group_3)
    var_1 = group_2.add_child_group(group_3)
    var_2 = group_0.add_child_group(group_2)
    var_3 = group_0.add_child_group(group_1)
    str_3 = '127.0.0.1'
    host_0 = module_0.Host(str_3)
    var_4 = host_0.add_group(group_0)
    var_5 = host_0.add_group(group_1)
    var_6 = host_0.add_group(group_3)
    var_7 = host_0.add_group(group_2)
    var_8 = host_0.remove_group(group_3)
    var_9 = host_0.groups
    var_10 = len(var_9)