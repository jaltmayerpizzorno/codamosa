# Automatically generated by Pynguin.
import thonny.jedi_utils as module_0

def test_case_0():
    try:
        str_0 = None
        list_0 = [str_0, str_0]
        var_0 = module_0.get_statement_of_position(str_0, list_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = "~/JBp,:3Y\\Q(2'}q<Q"
        int_0 = 80
        var_0 = module_0.get_script_completions(str_0, int_0, int_0, str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '\x0b41b[\\O\\4Zg(_X]`K'
        int_0 = 2080
        int_1 = 549
        str_1 = 'z#jsBR?'
        int_2 = 1981
        set_0 = {int_2}
        var_0 = module_0.get_script_completions(str_0, int_0, int_1, str_1, set_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'R}7WJ~]iSeq'
        int_0 = 255
        var_0 = module_0.get_definitions(str_0, int_0, int_0, str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        float_0 = 1.25
        str_0 = "7a6V@'P=5A/Gu%"
        str_1 = "c'n**\x0c%Y G[i%j5>"
        bool_0 = False
        bytes_0 = b'\xc7\xd3\xcb\xf5\x05\x178\xc8\x8c\xf4R\xb1\n:'
        tuple_0 = (bool_0, bytes_0)
        float_1 = -2991.19256
        list_0 = [float_1, float_1, str_1]
        set_0 = set()
        thonny_completion_0 = module_0.ThonnyCompletion(str_0, str_1, tuple_0, list_0, list_0, set_0)
        var_0 = thonny_completion_0.__getitem__(float_0)
    except BaseException:
        pass