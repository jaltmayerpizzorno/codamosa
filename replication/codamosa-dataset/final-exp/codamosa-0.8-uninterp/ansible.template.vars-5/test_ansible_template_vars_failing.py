# Automatically generated by Pynguin.
import ansible.template.vars as module_0

def test_case_0():
    try:
        bool_0 = False
        float_0 = -1768.220606
        str_0 = "A vault password is required to use Ansible's Vault"
        ansible_j2_vars_0 = module_0.AnsibleJ2Vars(float_0, str_0)
        var_0 = ansible_j2_vars_0.__contains__(bool_0)
    except BaseException:
        pass

def test_case_1():
    try:
        list_0 = []
        str_0 = 'mE2Sm~^}6,K.Rf }cx\x0c'
        bool_0 = False
        ansible_j2_vars_0 = module_0.AnsibleJ2Vars(str_0, bool_0)
        var_0 = ansible_j2_vars_0.__contains__(list_0)
    except BaseException:
        pass

def test_case_2():
    try:
        int_0 = -491
        str_0 = 'Serial No'
        ansible_j2_vars_0 = module_0.AnsibleJ2Vars(int_0, str_0)
        var_0 = ansible_j2_vars_0.__iter__()
    except BaseException:
        pass

def test_case_3():
    try:
        float_0 = -2098.27
        dict_0 = {float_0: float_0, float_0: float_0}
        ansible_j2_vars_0 = module_0.AnsibleJ2Vars(float_0, dict_0)
        bool_0 = True
        ansible_j2_vars_1 = module_0.AnsibleJ2Vars(ansible_j2_vars_0, bool_0, ansible_j2_vars_0)
        var_0 = ansible_j2_vars_1.__len__()
    except BaseException:
        pass

def test_case_4():
    try:
        var_0 = None
        ansible_j2_vars_0 = module_0.AnsibleJ2Vars(var_0, var_0)
        tuple_0 = ()
        var_1 = ansible_j2_vars_0.__getitem__(tuple_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'global'
        var_0 = dict(lcl=str_0)
        str_1 = 'templar'
        ansible_j2_vars_0 = module_0.AnsibleJ2Vars(str_0, var_0, var_0)
        list_0 = [ansible_j2_vars_0, str_1, str_1, str_1]
        var_1 = ansible_j2_vars_0.add_locals(list_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'lc'
        var_0 = dict(lcl=str_0)
        ansible_j2_vars_0 = module_0.AnsibleJ2Vars(str_0, var_0, var_0)
        bytes_0 = None
        var_1 = ansible_j2_vars_0.add_locals(bytes_0)
        var_2 = ansible_j2_vars_0.__getitem__(str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = '[y'
        str_1 = '#K\\1ylR?'
        int_0 = 2004
        list_0 = [str_0, str_0, str_0]
        ansible_j2_vars_0 = module_0.AnsibleJ2Vars(str_1, int_0, list_0)
        var_0 = ansible_j2_vars_0.add_locals(list_0)
        dict_0 = {str_1: ansible_j2_vars_0}
        str_2 = '6"'
        ansible_j2_vars_1 = module_0.AnsibleJ2Vars(dict_0, str_2)
        str_3 = '3Y@\r^(V\\kx\r'
        str_4 = '-ExecutionPolicy'
        str_5 = 'BBvra4\x0c'
        str_6 = 'l_'
        ansible_j2_vars_2 = module_0.AnsibleJ2Vars(str_6, dict_0, str_5)
        str_7 = 'D\x0c(2y^ \\\\hy!='
        dict_1 = {str_6: list_0, str_4: str_5}
        ansible_j2_vars_3 = module_0.AnsibleJ2Vars(dict_0, str_7, dict_1)
        int_1 = 3110
        set_0 = {str_3, int_1}
        var_1 = ansible_j2_vars_0.__getitem__(set_0)
    except BaseException:
        pass