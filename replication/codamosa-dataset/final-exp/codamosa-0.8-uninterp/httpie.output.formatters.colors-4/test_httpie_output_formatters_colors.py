# Automatically generated by Pynguin.
import httpie.output.formatters.colors as module_0
import httpie.context as module_1

def test_case_0():
    pass

def test_case_1():
    str_0 = '`J\ti!R0C\'-"[Qh?\r;F/\r'
    optional_0 = module_0.get_lexer(str_0)

def test_case_2():
    str_0 = '`J\ti!R0C\'-"[Qh?\r;F/\r'
    int_0 = -1201
    optional_0 = module_0.get_lexer(str_0, int_0)

def test_case_3():
    str_0 = '`J\ti!R0C\'-"[Qh?\r;F/\r'
    int_0 = -1242
    optional_0 = module_0.get_lexer(str_0, int_0)
    str_1 = 'application/json'
    list_0 = [str_1, int_0, str_0]
    optional_1 = module_0.get_lexer(str_1, list_0)

def test_case_4():
    str_0 = '`J\ti!R0C\'-"[Qh?\r/v'
    list_0 = []
    solarized256_style_0 = module_0.Solarized256Style(*list_0)
    optional_0 = module_0.get_lexer(str_0, str_0, solarized256_style_0)

def test_case_5():
    environment_0 = module_1.Environment()
    str_0 = 'format_options'
    dict_0 = {str_0: str_0, str_0: environment_0, str_0: str_0}
    color_formatter_0 = module_0.ColorFormatter(environment_0, **dict_0)

def test_case_6():
    environment_0 = module_1.Environment()
    str_0 = 'format_options'
    dict_0 = {str_0: str_0, str_0: environment_0, str_0: str_0}
    color_formatter_0 = module_0.ColorFormatter(environment_0, **dict_0)
    str_1 = color_formatter_0.format_headers(str_0)