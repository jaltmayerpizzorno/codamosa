# Automatically generated by Pynguin.
import typesystem.fields as module_0
import decimal as module_1

def test_case_0():
    try:
        array_0 = module_0.Array()
        bool_0 = True
        boolean_0 = module_0.Boolean(allow_null=bool_0)
        any_0 = boolean_0.validate(array_0)
    except BaseException:
        pass

def test_case_1():
    try:
        any_0 = module_0.Any()
        str_0 = ',q\rH'
        field_0 = module_0.Field(title=str_0)
        validation_result_0 = field_0.validate_or_error(any_0)
    except BaseException:
        pass

def test_case_2():
    try:
        object_0 = module_0.Object()
        any_0 = object_0.validate(object_0)
    except BaseException:
        pass

def test_case_3():
    try:
        int_0 = None
        string_0 = module_0.String(max_length=int_0, min_length=int_0)
        any_0 = string_0.validate(int_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'date'
        string_0 = module_0.String(format=str_0)
        any_0 = string_0.validate(string_0)
    except BaseException:
        pass

def test_case_5():
    try:
        int_0 = 23
        str_0 = ''
        number_0 = module_0.Number(maximum=int_0, exclusive_minimum=int_0, exclusive_maximum=int_0, precision=str_0)
        any_0 = number_0.validate(str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        object_0 = module_0.Object()
        bool_0 = False
        float_0 = -3957.3
        decimal_0 = module_0.Decimal(minimum=bool_0, maximum=float_0, multiple_of=float_0)
        any_0 = decimal_0.serialize(object_0)
    except BaseException:
        pass

def test_case_7():
    try:
        int_0 = 66
        choice_0 = module_0.Choice()
        any_0 = choice_0.validate(int_0)
    except BaseException:
        pass

def test_case_8():
    try:
        int_0 = -2758
        number_0 = module_0.Number(maximum=int_0, exclusive_minimum=int_0)
        object_0 = module_0.Object(properties=number_0, max_properties=int_0, required=number_0)
    except BaseException:
        pass

def test_case_9():
    try:
        array_0 = module_0.Array()
        any_0 = array_0.validate(array_0)
    except BaseException:
        pass

def test_case_10():
    try:
        int_0 = 3
        float_0 = module_0.Float(maximum=int_0, multiple_of=int_0)
        bool_0 = False
        field_0 = module_0.Field()
        array_0 = module_0.Array(field_0, bool_0)
        any_0 = array_0.serialize(int_0)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = '7<uk|$U;'
        str_1 = "'YKz5OX}d%k"
        bool_0 = True
        field_0 = module_0.Field(title=str_0, description=str_1, default=str_0, allow_null=bool_0)
        field_1 = module_0.Field()
        union_0 = field_1.__or__(field_0)
        number_0 = module_0.Number()
        any_0 = number_0.validate(number_0)
    except BaseException:
        pass

def test_case_12():
    try:
        object_0 = module_0.Object()
        list_0 = []
        union_0 = module_0.Union(list_0)
        any_0 = union_0.validate(object_0)
    except BaseException:
        pass

def test_case_13():
    try:
        date_0 = module_0.Date()
        field_0 = module_0.Field()
        union_0 = field_0.__or__(field_0)
        any_0 = union_0.validate(date_0)
    except BaseException:
        pass

def test_case_14():
    try:
        str_0 = '&\x0bT9~?}2V;J8Xcm_-3b'
        list_0 = [str_0, str_0]
        const_0 = module_0.Const(list_0)
        any_0 = const_0.validate(str_0)
    except BaseException:
        pass

def test_case_15():
    try:
        str_0 = None
        boolean_0 = module_0.Boolean(description=str_0)
    except BaseException:
        pass

def test_case_16():
    try:
        int_0 = 2
        integer_0 = module_0.Integer(minimum=int_0, exclusive_minimum=int_0, multiple_of=int_0)
        bool_0 = True
        dict_0 = {}
        list_0 = [bool_0, dict_0, dict_0]
        string_0 = module_0.String(allow_blank=bool_0, pattern=list_0)
    except BaseException:
        pass

def test_case_17():
    try:
        int_0 = 23
        number_0 = module_0.Number(maximum=int_0, multiple_of=int_0)
        any_0 = number_0.validate(int_0)
        string_0 = module_0.String(max_length=int_0)
        any_1 = string_0.validate(int_0)
    except BaseException:
        pass

def test_case_18():
    try:
        str_0 = 'Must be a valid time format.'
        string_0 = module_0.String(max_length=str_0, pattern=str_0)
    except BaseException:
        pass

def test_case_19():
    try:
        int_0 = 23
        string_0 = module_0.String(min_length=int_0)
        any_0 = string_0.validate(int_0)
    except BaseException:
        pass

def test_case_20():
    try:
        array_0 = module_0.Array()
        bool_0 = False
        boolean_0 = module_0.Boolean(allow_null=bool_0)
        any_0 = boolean_0.validate(array_0)
    except BaseException:
        pass

def test_case_21():
    try:
        str_0 = '4ty+H'
        field_0 = module_0.Field()
        dict_0 = {str_0: field_0, str_0: field_0}
        int_0 = -1577
        object_0 = module_0.Object(properties=dict_0, additional_properties=field_0, min_properties=int_0, max_properties=int_0)
        any_0 = object_0.validate(dict_0)
    except BaseException:
        pass

def test_case_22():
    try:
        int_0 = 23
        number_0 = module_0.Number(maximum=int_0, multiple_of=int_0)
        bool_0 = False
        object_0 = module_0.Object(additional_properties=bool_0, min_properties=int_0)
        any_0 = object_0.validate(number_0)
    except BaseException:
        pass

def test_case_23():
    try:
        bool_0 = None
        array_0 = module_0.Array(bool_0, bool_0)
    except BaseException:
        pass

def test_case_24():
    try:
        array_0 = module_0.Array()
        field_0 = module_0.Field()
        number_0 = None
        int_0 = 2319
        float_0 = module_0.Float(maximum=int_0, exclusive_maximum=int_0)
        array_1 = module_0.Array(field_0, field_0, number_0, float_0)
    except BaseException:
        pass

def test_case_25():
    try:
        any_0 = module_0.Any()
        date_0 = module_0.Date()
        str_0 = ''
        bool_0 = False
        field_0 = module_0.Field(title=str_0, description=str_0, default=str_0, allow_null=bool_0)
        str_1 = 'CR\t\\a.*=BAQ{U'
        tuple_0 = ()
        array_0 = module_0.Array(date_0, field_0, str_1, tuple_0)
    except BaseException:
        pass

def test_case_26():
    try:
        float_0 = 866.578963
        str_0 = '\tZB!9w\r5?|>i&'
        field_0 = module_0.Field(title=str_0)
        any_0 = field_0.serialize(str_0)
        array_0 = module_0.Array(field_0)
        any_1 = array_0.serialize(str_0)
        any_2 = array_0.serialize(float_0)
    except BaseException:
        pass

def test_case_27():
    try:
        number_0 = module_0.Number()
        any_0 = number_0.validate(number_0)
    except BaseException:
        pass

def test_case_28():
    try:
        any_0 = module_0.Any()
        date_0 = module_0.Date()
        dict_0 = {}
        time_0 = module_0.Time(**dict_0)
        integer_0 = module_0.Integer(multiple_of=time_0)
    except BaseException:
        pass

def test_case_29():
    try:
        str_0 = 'm$P\x0b8'
        field_0 = module_0.Field()
        dict_0 = {str_0: field_0, str_0: field_0, str_0: field_0, str_0: field_0, str_0: field_0, str_0: field_0}
        object_0 = module_0.Object(pattern_properties=dict_0, additional_properties=field_0, required=str_0)
        any_0 = module_0.Any()
        any_1 = any_0.validate(object_0)
        any_2 = field_0.get_default_value()
        choice_0 = module_0.Choice()
        any_3 = object_0.validate(dict_0)
    except BaseException:
        pass

def test_case_30():
    try:
        choice_0 = module_0.Choice()
        str_0 = '8-'
        integer_0 = module_0.Integer(exclusive_minimum=choice_0, precision=str_0)
    except BaseException:
        pass

def test_case_31():
    try:
        int_0 = 16
        number_0 = module_0.Number(maximum=int_0, multiple_of=int_0)
        array_0 = module_0.Array(int_0)
    except BaseException:
        pass

def test_case_32():
    try:
        int_0 = 41
        text_0 = module_0.Text()
        number_0 = module_0.Number(precision=text_0, multiple_of=int_0)
        any_0 = number_0.validate(int_0)
    except BaseException:
        pass

def test_case_33():
    try:
        boolean_0 = module_0.Boolean()
        time_0 = module_0.Time()
        bool_0 = True
        any_0 = boolean_0.validate(boolean_0, strict=bool_0)
    except BaseException:
        pass

def test_case_34():
    try:
        str_0 = 'a'
        object_0 = module_0.Object()
        boolean_0 = module_0.Boolean()
        boolean_1 = {str_0: boolean_0}
        object_1 = module_0.Object(properties=boolean_1)
        bool_0 = True
        bool_1 = {str_0: bool_0}
        any_0 = object_1.validate(bool_1)
        boolean_2 = {str_0: boolean_0, object_0: boolean_1}
        object_2 = module_0.Object(properties=boolean_2)
    except BaseException:
        pass

def test_case_35():
    try:
        date_time_0 = module_0.DateTime()
        choice_0 = module_0.Choice()
        float_0 = 2366.575933
        number_0 = module_0.Number(minimum=float_0, maximum=float_0, exclusive_maximum=float_0)
        any_0 = number_0.validate(float_0)
    except BaseException:
        pass

def test_case_36():
    try:
        date_time_0 = module_0.DateTime()
        list_0 = [date_time_0, date_time_0, date_time_0, date_time_0]
        object_0 = module_0.Object(required=list_0)
    except BaseException:
        pass

def test_case_37():
    try:
        str_0 = 'm$P\x0b8'
        field_0 = module_0.Field()
        dict_0 = {str_0: field_0, str_0: field_0, str_0: field_0, str_0: field_0, str_0: field_0, str_0: field_0}
        object_0 = module_0.Object(pattern_properties=dict_0, additional_properties=field_0, required=str_0)
        any_0 = object_0.validate(dict_0)
    except BaseException:
        pass

def test_case_38():
    try:
        str_0 = ''
        bool_0 = True
        string_0 = module_0.String(allow_blank=bool_0, trim_whitespace=bool_0, pattern=str_0, format=str_0)
        decimal_0 = module_1.Decimal()
        number_0 = module_0.Number(exclusive_maximum=decimal_0)
        any_0 = number_0.validate(bool_0)
    except BaseException:
        pass

def test_case_39():
    try:
        dict_0 = {}
        str_0 = '<j-'
        bool_0 = True
        field_0 = module_0.Field(description=str_0, default=dict_0, allow_null=bool_0)
        list_0 = []
        decimal_0 = module_1.Decimal(*list_0, **dict_0)
        number_0 = module_0.Number(exclusive_maximum=field_0, multiple_of=decimal_0)
    except BaseException:
        pass

def test_case_40():
    try:
        float_0 = -3531.932
        number_0 = module_0.Number(minimum=float_0, exclusive_minimum=float_0, exclusive_maximum=float_0)
        any_0 = number_0.validate(float_0)
    except BaseException:
        pass

def test_case_41():
    try:
        str_0 = ''
        int_0 = -2758
        number_0 = module_0.Number(multiple_of=int_0)
        bool_0 = True
        any_0 = number_0.validate(str_0, strict=bool_0)
    except BaseException:
        pass

def test_case_42():
    try:
        array_0 = module_0.Array()
        bool_0 = True
        boolean_0 = module_0.Boolean(allow_null=bool_0)
        field_0 = module_0.Field()
        bool_1 = False
        any_0 = boolean_0.validate(bool_0, strict=bool_1)
        any_1 = field_0.validate(array_0)
    except BaseException:
        pass

def test_case_43():
    try:
        str_0 = '1'
        str_1 = (str_0, str_0)
        choice_0 = module_0.Choice(choices=str_0)
        any_0 = choice_0.validate(str_0)
        bool_0 = True
        field_0 = module_0.Field(title=str_1, default=str_0, allow_null=bool_0)
    except BaseException:
        pass

def test_case_44():
    try:
        str_0 = ''
        number_0 = module_0.Number(precision=str_0)
        any_0 = number_0.validate(str_0)
    except BaseException:
        pass

def test_case_45():
    try:
        str_0 = ''
        bool_0 = True
        const_0 = module_0.Const(str_0)
        any_0 = const_0.validate(str_0, bool_0)
        number_0 = module_0.Number(precision=str_0)
        any_1 = number_0.validate(str_0)
    except BaseException:
        pass

def test_case_46():
    try:
        str_0 = ''
        bool_0 = False
        string_0 = module_0.String(trim_whitespace=bool_0, pattern=str_0, format=str_0)
        any_0 = string_0.validate(str_0)
    except BaseException:
        pass

def test_case_47():
    try:
        str_0 = 'date'
        string_0 = module_0.String(format=str_0)
        any_0 = string_0.validate(str_0)
    except BaseException:
        pass

def test_case_48():
    try:
        object_0 = module_0.Object()
        bool_0 = True
        bool_1 = False
        list_0 = [bool_1, bool_0, bool_0, bool_0]
        set_0 = {bool_0}
        dict_0 = {}
        number_0 = module_0.Number(minimum=list_0, maximum=set_0, **dict_0)
    except BaseException:
        pass

def test_case_49():
    try:
        array_0 = module_0.Array()
        int_0 = 9
        int_1 = [int_0, int_0, int_0, array_0, array_0, int_0, array_0, int_0, int_0, array_0, int_0]
        any_0 = array_0.validate(int_1)
        object_0 = module_0.Object(min_properties=int_0, max_properties=int_1)
    except BaseException:
        pass

def test_case_50():
    try:
        int_0 = 23
        number_0 = module_0.Number(exclusive_minimum=int_0)
        any_0 = number_0.validate(int_0)
    except BaseException:
        pass

def test_case_51():
    try:
        decimal_0 = module_1.Decimal()
        int_0 = 0
        str_0 = '5h\x0c1-_m|U4w}^{j@'
        field_0 = module_0.Field(description=str_0)
        number_0 = module_0.Number(multiple_of=decimal_0)
        number_1 = module_0.Number(maximum=int_0)
        float_0 = 500.8
        any_0 = number_1.validate(float_0)
    except BaseException:
        pass

def test_case_52():
    try:
        object_0 = module_0.Object()
        field_0 = module_0.Field()
        str_0 = ']jq\nF<7DB;j'
        object_1 = module_0.Object(min_properties=str_0)
    except BaseException:
        pass

def test_case_53():
    try:
        object_0 = module_0.Object()
        bool_0 = None
        any_0 = object_0.validate(bool_0)
    except BaseException:
        pass

def test_case_54():
    try:
        array_0 = module_0.Array()
        int_0 = 2
        int_1 = [int_0, int_0, int_0]
        any_0 = array_0.validate(int_1)
        str_0 = '9V\nhBCMu'
        int_2 = -1952
        str_1 = '2Q5uprSRv+'
        dict_0 = {str_0: int_1, str_0: int_2, str_1: int_1}
        object_0 = module_0.Object(properties=dict_0)
    except BaseException:
        pass

def test_case_55():
    try:
        array_0 = module_0.Array()
        int_0 = 1313
        int_1 = [int_0, int_0, array_0, array_0, array_0, int_0, int_0, int_0]
        date_0 = module_0.Date()
        bool_0 = False
        any_0 = array_0.validate(int_1, strict=bool_0)
        bool_1 = True
        str_0 = '\t\x0b.E2)gjXIvNU'
        str_1 = '@RaO'
        field_0 = module_0.Field(title=str_0, description=str_1)
        string_0 = module_0.String(allow_blank=bool_1, min_length=int_0, format=field_0)
    except BaseException:
        pass

def test_case_56():
    try:
        str_0 = None
        str_1 = '6):_H/'
        bool_0 = True
        field_0 = module_0.Field(title=str_1, default=str_1, allow_null=bool_0)
        array_0 = module_0.Array(field_0)
        any_0 = array_0.serialize(str_0)
        str_2 = 'Wa^*4U~w3+'
        dict_0 = {str_0: str_0, str_2: str_0}
        decimal_0 = module_1.Decimal(**dict_0)
    except BaseException:
        pass

def test_case_57():
    try:
        str_0 = 'v-9I0b'
        bool_0 = False
        int_0 = -1374
        string_0 = module_0.String(max_length=int_0, min_length=int_0)
        any_0 = string_0.validate(str_0, strict=bool_0)
    except BaseException:
        pass

def test_case_58():
    try:
        bool_0 = None
        number_0 = module_0.Number()
        any_0 = number_0.validate(bool_0)
    except BaseException:
        pass

def test_case_59():
    try:
        float_0 = 866.9787771128836
        float_1 = -3531.932
        number_0 = module_0.Number(minimum=float_0, exclusive_minimum=float_0, exclusive_maximum=float_1)
        any_0 = number_0.validate(float_1)
    except BaseException:
        pass

def test_case_60():
    try:
        bool_0 = None
        field_0 = module_0.Field()
        field_1 = module_0.Field(default=bool_0)
        union_0 = field_1.__or__(field_0)
        any_0 = union_0.validate(bool_0, bool_0)
    except BaseException:
        pass

def test_case_61():
    try:
        str_0 = '<uk|$3'
        int_0 = 20
        bool_0 = False
        str_1 = '4@\n.CYA8za~nh~nscZ_'
        field_0 = module_0.Field(title=str_1)
        list_0 = [field_0]
        union_0 = module_0.Union(list_0)
        string_0 = module_0.String(min_length=int_0)
        any_0 = string_0.validate(str_0, strict=bool_0)
    except BaseException:
        pass

def test_case_62():
    try:
        str_0 = '1'
        str_1 = 'XAh\rV<'
        bool_0 = True
        boolean_0 = module_0.Boolean(title=str_1, allow_null=bool_0)
        any_0 = boolean_0.validate(str_0)
        choice_0 = module_0.Choice(choices=str_0)
        float_0 = -2731.8654007749465
        decimal_0 = module_0.Decimal(maximum=float_0)
        string_0 = module_0.String(allow_blank=bool_0, trim_whitespace=bool_0, min_length=decimal_0)
    except BaseException:
        pass

def test_case_63():
    try:
        str_0 = 'w\n b&`,"'
        field_0 = module_0.Field()
        str_1 = 'xT>{LD7;lHR\r~'
        str_2 = None
        str_3 = 'D]Z2[o;O%iJea'
        dict_0 = {str_0: field_0, str_1: field_0, str_2: field_0, str_3: field_0}
        str_4 = ''
        object_0 = module_0.Object(pattern_properties=dict_0, min_properties=str_4)
    except BaseException:
        pass

def test_case_64():
    try:
        bytes_0 = None
        choice_0 = module_0.Choice()
        any_0 = choice_0.validate(bytes_0)
    except BaseException:
        pass

def test_case_65():
    try:
        bool_0 = None
        array_0 = module_0.Array()
        any_0 = array_0.validate(bool_0, strict=bool_0)
    except BaseException:
        pass

def test_case_66():
    try:
        object_0 = module_0.Object()
        text_0 = module_0.Text()
        set_0 = {object_0, object_0, object_0}
        int_0 = 973
        number_0 = module_0.Number(maximum=set_0, exclusive_maximum=int_0)
    except BaseException:
        pass

def test_case_67():
    try:
        bool_0 = None
        boolean_0 = module_0.Boolean()
        any_0 = boolean_0.validate(bool_0)
    except BaseException:
        pass

def test_case_68():
    try:
        int_0 = 41
        text_0 = module_0.Text()
        int_1 = -1948
        number_0 = module_0.Number(maximum=int_0, exclusive_minimum=int_1, multiple_of=int_1)
        any_0 = number_0.validate(int_0)
    except BaseException:
        pass

def test_case_69():
    try:
        float_0 = -3531.932
        str_0 = ' [sparsO]'
        number_0 = module_0.Number(minimum=float_0, maximum=float_0, exclusive_maximum=float_0, precision=str_0)
        int_0 = -862
        string_0 = module_0.String(max_length=int_0)
        bool_0 = True
        str_1 = '2$\x0ct/R6j'
        boolean_0 = module_0.Boolean(description=str_1)
        bool_1 = True
        array_0 = module_0.Array(boolean_0, bool_0, int_0, int_0, bool_1)
        any_0 = array_0.validate(bool_0)
    except BaseException:
        pass

def test_case_70():
    try:
        object_0 = module_0.Object()
        float_0 = -52.34319
        list_0 = [float_0, object_0]
        int_0 = -3114
        array_0 = module_0.Array(list_0, int_0)
    except BaseException:
        pass

def test_case_71():
    try:
        float_0 = -53.693010541839655
        number_0 = module_0.Number(maximum=float_0, multiple_of=float_0)
        bool_0 = None
        any_0 = number_0.validate(float_0, strict=bool_0)
    except BaseException:
        pass

def test_case_72():
    try:
        int_0 = 23
        dict_0 = {}
        bool_0 = False
        object_0 = module_0.Object(min_properties=int_0)
        any_0 = object_0.validate(dict_0, strict=bool_0)
    except BaseException:
        pass

def test_case_73():
    try:
        array_0 = module_0.Array()
        str_0 = '=\x0cLN4<OO\r%'
        field_0 = None
        str_1 = ',(H^1vCTLzj:s\r;TP'
        field_1 = module_0.Field(description=str_1)
        dict_0 = {str_1: field_1, str_1: field_0, str_0: field_1, str_1: field_0}
        int_0 = -2265
        dict_1 = {}
        number_0 = module_0.Number(maximum=int_0, exclusive_minimum=int_0, **dict_1)
        object_0 = module_0.Object(pattern_properties=dict_0, min_properties=int_0, max_properties=int_0, required=number_0)
    except BaseException:
        pass

def test_case_74():
    try:
        date_time_0 = None
        const_0 = module_0.Const(date_time_0)
        str_0 = ''
        str_1 = '[@H7'
        bool_0 = False
        string_0 = module_0.String(trim_whitespace=bool_0, format=str_0)
        float_0 = 2500.2028
        number_0 = module_0.Number(exclusive_maximum=float_0, precision=str_1)
        any_0 = const_0.validate(str_0, bool_0)
    except BaseException:
        pass

def test_case_75():
    try:
        number_0 = module_0.Number()
        int_0 = -1990
        object_0 = module_0.Object(additional_properties=int_0)
    except BaseException:
        pass

def test_case_76():
    try:
        str_0 = '<uw$;'
        bool_0 = False
        string_0 = module_0.String(allow_blank=bool_0, trim_whitespace=bool_0, pattern=str_0, format=str_0)
        any_0 = string_0.validate(str_0)
    except BaseException:
        pass

def test_case_77():
    try:
        str_0 = 'k*6gZL`a[G1~R!'
        dict_0 = {str_0: str_0, str_0: str_0}
        bool_0 = True
        decimal_0 = module_1.Decimal()
        float_0 = -1549.2102030368
        float_1 = module_0.Float(minimum=decimal_0, exclusive_minimum=decimal_0, precision=str_0, multiple_of=float_0)
        object_0 = module_0.Object(additional_properties=bool_0, property_names=float_1)
        any_0 = object_0.validate(dict_0, strict=bool_0)
    except BaseException:
        pass

def test_case_78():
    try:
        text_0 = module_0.Text()
        bytes_0 = b'\xe9i\xd3fs\x10=\x183&K\xb8'
        str_0 = 'Mud$t C\rnoa Latyh.'
        tuple_0 = (bytes_0, str_0)
        object_0 = module_0.Object(properties=text_0, additional_properties=tuple_0)
        dict_0 = {str_0: bytes_0, str_0: text_0}
        any_0 = object_0.validate(dict_0)
    except BaseException:
        pass

def test_case_79():
    try:
        str_0 = 'p5s8\x0c'
        field_0 = module_0.Field()
        dict_0 = {str_0: field_0, str_0: field_0, str_0: field_0, str_0: field_0, str_0: field_0, str_0: field_0}
        object_0 = module_0.Object(pattern_properties=dict_0, additional_properties=field_0, required=str_0)
        any_0 = object_0.validate(dict_0)
    except BaseException:
        pass

def test_case_80():
    try:
        bool_0 = True
        field_0 = module_0.Field()
        str_0 = ':'
        dict_0 = {str_0: field_0, str_0: field_0, str_0: field_0, str_0: field_0}
        object_0 = module_0.Object(properties=dict_0, additional_properties=bool_0)
        any_0 = object_0.validate(dict_0)
    except BaseException:
        pass

def test_case_81():
    try:
        str_0 = '~'
        bool_0 = True
        any_0 = module_0.Any()
        field_0 = module_0.Field()
        any_1 = field_0.get_default_value()
        dict_0 = {str_0: field_0, str_0: field_0, str_0: field_0, str_0: field_0}
        str_1 = '"jhz(9~C+L}'
        object_0 = module_0.Object(pattern_properties=dict_0, additional_properties=field_0, required=str_1)
        any_2 = object_0.validate(dict_0, strict=bool_0)
    except BaseException:
        pass

def test_case_82():
    try:
        str_0 = '%)z[\\8-2\']"0\\/?cU@i.'
        var_0 = None
        str_1 = 'n5DVt2`vl\\weS8|} { {'
        bool_0 = True
        field_0 = module_0.Field(title=str_1, allow_null=bool_0)
        str_2 = '['
        str_3 = '#tzJK\\`L\tfJe"'
        field_1 = module_0.Field(title=str_2, description=str_3, default=str_3)
        union_0 = field_1.__or__(field_0)
        any_0 = union_0.validate(var_0)
        float_0 = 3481.195
        number_0 = module_0.Number(exclusive_maximum=var_0, precision=str_0, multiple_of=float_0)
        str_4 = '&&SJ6(1[a>bM|9'
        str_5 = '\x0bi_0\teUdb"\''
        boolean_0 = module_0.Boolean(description=str_5)
        bool_1 = None
        field_2 = module_0.Field(title=str_0, description=str_4, allow_null=bool_1)
        integer_0 = module_0.Integer(precision=str_0)
        any_1 = field_2.validate(bool_1)
    except BaseException:
        pass

def test_case_83():
    try:
        str_0 = 'date'
        string_0 = module_0.String(format=str_0)
        any_0 = string_0.serialize(string_0)
    except BaseException:
        pass

def test_case_84():
    try:
        str_0 = 'a'
        boolean_0 = module_0.Boolean()
        boolean_1 = {str_0: boolean_0}
        object_0 = module_0.Object(properties=boolean_1)
        bool_0 = True
        bool_1 = {str_0: bool_0, boolean_0: bool_0, object_0: object_0}
        any_0 = object_0.validate(bool_1)
    except BaseException:
        pass

def test_case_85():
    try:
        str_0 = 'a'
        str_1 = (str_0, str_0)
        str_2 = [str_1]
        choice_0 = module_0.Choice(choices=str_2)
        any_0 = choice_0.validate(str_2)
    except BaseException:
        pass

def test_case_86():
    try:
        str_0 = 'P<4WMO12Ud'
        boolean_0 = module_0.Boolean()
        object_0 = module_0.Object(properties=boolean_0)
        bool_0 = True
        bool_1 = {str_0: bool_0, boolean_0: bool_0, object_0: object_0}
        any_0 = object_0.validate(bool_1)
    except BaseException:
        pass

def test_case_87():
    try:
        integer_0 = module_0.Integer()
        number_0 = module_0.Number()
        var_0 = [integer_0, number_0]
        union_0 = module_0.Union(var_0)
        any_0 = union_0.validate(number_0)
    except BaseException:
        pass

def test_case_88():
    try:
        integer_0 = module_0.Integer()
        array_0 = module_0.Array(integer_0)
        int_0 = 1
        int_1 = 3
        int_2 = [int_0, int_1, int_1]
        any_0 = array_0.validate(int_2)
        any_1 = array_0.serialize(int_1)
    except BaseException:
        pass

def test_case_89():
    try:
        str_0 = '#>=4j\t'
        any_0 = module_0.Any(description=str_0)
        date_0 = module_0.Date()
        integer_0 = module_0.Integer()
        array_0 = module_0.Array(integer_0)
        int_0 = 1
        int_1 = 3
        int_2 = [int_0, int_1, int_1]
        any_1 = array_0.validate(int_2)
        var_0 = None
        var_1 = [int_0, var_0, int_1, int_2]
        any_2 = array_0.validate(var_1)
    except BaseException:
        pass

def test_case_90():
    try:
        str_0 = 'Function returned succesfully'
        var_0 = lambda : str_0
        field_0 = module_0.Field(default=var_0)
        any_0 = field_0.get_default_value()
    except BaseException:
        pass

def test_case_91():
    try:
        string_0 = module_0.String()
        string_1 = module_0.String()
        string_2 = [string_0, string_1]
        bool_0 = False
        int_0 = 2
        int_1 = 2
        bool_1 = False
        array_0 = module_0.Array(string_2, bool_0, int_0, int_1, bool_1)
        var_0 = {}
        any_0 = array_0.validate(var_0)
    except BaseException:
        pass

def test_case_92():
    try:
        str_0 = ''
        str_1 = 'XAh\rV<'
        bool_0 = True
        boolean_0 = module_0.Boolean(title=str_1, allow_null=bool_0)
        any_0 = boolean_0.validate(str_0)
        choice_0 = module_0.Choice(choices=str_0)
        any_1 = choice_0.validate(str_0)
    except BaseException:
        pass