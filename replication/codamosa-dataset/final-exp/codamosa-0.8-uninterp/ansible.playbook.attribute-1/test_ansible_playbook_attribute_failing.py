# Automatically generated by Pynguin.
import ansible.playbook.attribute as module_0

def test_case_0():
    try:
        str_0 = 'int'
        bool_0 = True
        int_0 = 12
        attribute_0 = module_0.Attribute(str_0, bool_0, int_0)
        attribute_1 = module_0.Attribute(str_0, bool_0, int_0, bool_0)
        str_1 = 'list'
        bool_1 = False
        var_0 = []
        var_1 = attribute_0.__ne__(attribute_0)
        attribute_2 = module_0.Attribute(str_1, bool_1, var_0)
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = 22
        dict_0 = {}
        complex_0 = None
        attribute_0 = module_0.Attribute(complex_0, int_0)
        var_0 = attribute_0.__lt__(dict_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '9'
        bytes_0 = b'\x04\x8e\x01\xa5\xd8\xec\xb6-\xb7\x0e(\x18\xa8\xceo0v\x8f\x06'
        int_0 = 0
        attribute_0 = module_0.Attribute(str_0, str_0, bytes_0, int_0)
        var_0 = attribute_0.__gt__(int_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bool_0 = False
        str_0 = 'Ud-n\n P'
        str_1 = '\t/kS1:c6i"'
        attribute_0 = module_0.Attribute(bool_0, str_0, str_1, bool_0)
        bool_1 = True
        str_2 = 'JW-g1+D5mK1`J\r'
        set_0 = {bool_1}
        bool_2 = True
        int_0 = 719
        attribute_1 = module_0.Attribute(bool_2, int_0)
        dict_0 = {bool_1: set_0, str_2: bool_2}
        attribute_2 = module_0.Attribute(bool_1, str_2, set_0, bool_1, attribute_1, dict_0)
        float_0 = 2711.0
        var_0 = attribute_0.__le__(float_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = '^\x0bro<p=vq}%E'
        str_1 = '0'
        attribute_0 = module_0.Attribute(str_1)
        var_0 = attribute_0.__ge__(str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'list'
        bool_0 = False
        field_attribute_0 = module_0.FieldAttribute(str_0, bool_0, str_0, bool_0, str_0, bool_0, str_0, bool_0, bool_0, str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        bool_0 = False
        list_0 = [bool_0, bool_0]
        bytes_0 = b'\xe1\xae\xfa\xc3W{'
        int_0 = -155
        bool_1 = None
        bool_2 = False
        int_1 = 2551
        attribute_0 = module_0.Attribute(bytes_0, int_0, bool_1, bool_2, list_0, int_1)
        set_0 = set()
        str_0 = 'e"'
        dict_0 = None
        field_attribute_0 = module_0.FieldAttribute(str_0, attribute_0, attribute_0, bool_2, dict_0)
        tuple_0 = None
        tuple_1 = (tuple_0,)
        int_2 = 92
        attribute_1 = module_0.Attribute(dict_0, field_attribute_0, tuple_0, tuple_1, int_2)
        var_0 = attribute_0.__eq__(set_0)
    except BaseException:
        pass