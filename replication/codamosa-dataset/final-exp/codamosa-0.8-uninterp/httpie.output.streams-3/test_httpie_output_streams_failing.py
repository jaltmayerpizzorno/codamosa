# Automatically generated by Pynguin.
import httpie.models as module_0
import httpie.output.streams as module_1
import httpie.output.processing as module_2

def test_case_0():
    try:
        dict_0 = {}
        h_t_t_p_message_0 = module_0.HTTPMessage(dict_0)
        h_t_t_p_message_1 = module_0.HTTPMessage(h_t_t_p_message_0)
        base_stream_0 = module_1.BaseStream(h_t_t_p_message_1)
        h_t_t_p_message_2 = module_0.HTTPMessage(base_stream_0)
        str_0 = 'NS\n8=Vs>N\roHVf$f'
        base_stream_1 = module_1.BaseStream(h_t_t_p_message_2, str_0, dict_0)
        bytes_0 = base_stream_1.get_headers()
    except BaseException:
        pass

def test_case_1():
    try:
        bool_0 = True
        h_t_t_p_message_0 = module_0.HTTPMessage(bool_0)
        str_0 = '}q.Kz,>v7&=\\!$'
        base_stream_0 = module_1.BaseStream(h_t_t_p_message_0, str_0)
        iterable_0 = base_stream_0.iter_body()
    except BaseException:
        pass

def test_case_2():
    try:
        raw_stream_0 = module_1.RawStream()
    except BaseException:
        pass

def test_case_3():
    try:
        int_0 = -479
        encoded_stream_0 = module_1.EncodedStream(int_0)
    except BaseException:
        pass

def test_case_4():
    try:
        dict_0 = {}
        int_0 = -3358
        h_t_t_p_message_0 = module_0.HTTPMessage(int_0)
        formatting_0 = None
        base_stream_0 = module_1.BaseStream(h_t_t_p_message_0, formatting_0)
        int_1 = -4132
        h_t_t_p_message_1 = module_0.HTTPMessage(int_1)
        str_0 = 'NS\n8=Vs>N\roHVf$f'
        list_0 = [h_t_t_p_message_1, str_0, h_t_t_p_message_1, dict_0]
        data_suppressed_error_0 = module_1.DataSuppressedError(*list_0, **dict_0)
        conversion_0 = module_2.Conversion()
        pretty_stream_0 = module_1.PrettyStream(conversion_0, formatting_0)
    except BaseException:
        pass

def test_case_5():
    try:
        formatting_0 = None
        bool_0 = None
        h_t_t_p_message_0 = module_0.HTTPMessage(bool_0)
        binary_suppressed_error_0 = None
        h_t_t_p_message_1 = module_0.HTTPMessage(binary_suppressed_error_0)
        optional_0 = None
        base_stream_0 = module_1.BaseStream(h_t_t_p_message_1, formatting_0, optional_0)
    except BaseException:
        pass