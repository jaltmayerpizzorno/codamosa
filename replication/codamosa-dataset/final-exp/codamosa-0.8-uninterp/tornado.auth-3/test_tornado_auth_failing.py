# Automatically generated by Pynguin.
import tornado.auth as module_0

def test_case_0():
    try:
        open_id_mixin_0 = module_0.OpenIdMixin()
        open_id_mixin_0.authenticate_redirect()
    except BaseException:
        pass

def test_case_1():
    try:
        open_id_mixin_0 = module_0.OpenIdMixin()
        async_h_t_t_p_client_0 = open_id_mixin_0.get_auth_http_client()
    except BaseException:
        pass

def test_case_2():
    try:
        o_auth_mixin_0 = module_0.OAuthMixin()
        dict_0 = o_auth_mixin_0.get_authenticated_user()
        o_auth_mixin_0.authorize_redirect()
        async_h_t_t_p_client_0 = o_auth_mixin_0.get_auth_http_client()
    except BaseException:
        pass

def test_case_3():
    try:
        h_t_t_p_server_request_0 = None
        o_auth2_mixin_0 = module_0.OAuth2Mixin()
        o_auth2_mixin_0.authorize_redirect(h_t_t_p_server_request_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'Turns on formatted logging output as configured.\n\n    This is called automatically by `tornado.options.parse_command_line`\n    and `tornado.options.parse_config_file`.\n    '
        o_auth2_mixin_0 = module_0.OAuth2Mixin()
        o_auth2_mixin_0.authorize_redirect(str_0, str_0, str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        o_auth2_mixin_0 = module_0.OAuth2Mixin()
        str_0 = '!vXWW!NsA'
        dict_0 = {}
        dict_1 = {}
        list_0 = []
        twitter_mixin_0 = module_0.TwitterMixin(*list_0)
        any_0 = twitter_mixin_0.twitter_request(str_0, dict_0, **dict_1)
        auth_error_0 = module_0.AuthError()
        async_h_t_t_p_client_0 = o_auth2_mixin_0.get_auth_http_client()
    except BaseException:
        pass

def test_case_6():
    try:
        open_id_mixin_0 = module_0.OpenIdMixin()
        str_0 = '0k'
        open_id_mixin_0.authenticate_redirect(str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'CU RD>0Fe+t}'
        o_auth2_mixin_0 = module_0.OAuth2Mixin()
        str_1 = 'CY RD>0F$+t}'
        o_auth2_mixin_0.authorize_redirect(str_0, str_0, str_1, str_1)
    except BaseException:
        pass

def test_case_8():
    try:
        open_id_mixin_0 = module_0.OpenIdMixin()
        none_type_0 = None
        none_type_1 = None
        optional_0 = None
        list_0 = None
        str_0 = 'Pl4zoR'
        o_auth2_mixin_0 = module_0.OAuth2Mixin()
        o_auth2_mixin_0.authorize_redirect(none_type_0, none_type_1, optional_0, list_0, str_0)
    except BaseException:
        pass