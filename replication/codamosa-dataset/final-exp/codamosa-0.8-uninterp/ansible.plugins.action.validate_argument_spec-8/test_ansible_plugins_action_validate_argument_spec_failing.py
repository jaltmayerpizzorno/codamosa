# Automatically generated by Pynguin.
import ansible.plugins.action.validate_argument_spec as module_0

def test_case_0():
    try:
        bool_0 = True
        int_0 = 2283
        str_0 = 'tRZh`h2c~e Z\t v4R]xX'
        bytes_0 = None
        list_0 = [str_0, str_0, bytes_0]
        str_1 = 'KLRs8vBjVe'
        bool_1 = True
        int_1 = 1907
        action_module_0 = module_0.ActionModule(str_0, list_0, str_1, bool_1, bool_1, int_1)
        var_0 = action_module_0.get_args_from_task_vars(bool_0, int_0)
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = -1675
        str_0 = '>p'
        bytes_0 = b'S\xdar\xdf\xf0\x89\x87!r~5\x0f5'
        float_0 = 1440.38
        bool_0 = True
        bytes_1 = b'\xbd\xf5\xc5\x9b\xff,\xb8\xb9H\x0f\xf6\xbcM\xbbc>'
        int_1 = -812
        bytes_2 = b'\xf8\xba\x93'
        list_0 = []
        set_0 = None
        tuple_0 = (bytes_2, list_0, set_0, bytes_2)
        action_module_0 = module_0.ActionModule(bytes_0, float_0, bool_0, bytes_1, int_1, tuple_0)
        var_0 = action_module_0.run(int_0, str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 't&{$S)mO3d'
        str_1 = 'a1;q$HE}IC'
        str_2 = '&k_,dGp%D9)<<;'
        set_0 = {str_1, str_2, str_0, str_2}
        bool_0 = False
        dict_0 = None
        tuple_0 = (str_0, set_0, bool_0, dict_0)
        int_0 = 509
        bool_1 = True
        list_0 = []
        int_1 = -698
        action_module_0 = module_0.ActionModule(int_0, bool_1, list_0, bool_1, int_1, list_0)
        var_0 = action_module_0.run(tuple_0)
    except BaseException:
        pass

def test_case_3():
    try:
        int_0 = 2283
        dict_0 = {}
        str_0 = '/sbin/apk'
        bytes_0 = b'\x8f\xe2\xdb\x06\xa7H"\x89\x1e\xa8\xd7\xe6\x14\xf9\xca\xe3\x87'
        float_0 = 2580.38
        list_0 = [float_0, int_0, float_0, bytes_0]
        set_0 = set()
        str_1 = ''
        action_module_0 = module_0.ActionModule(bytes_0, list_0, set_0, int_0, str_1, float_0)
        var_0 = action_module_0.get_args_from_task_vars(dict_0, str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = '>p'
        bytes_0 = b'S\xdar\xdf\xf0\x89\x87!r~5\x0f5'
        float_0 = 1440.38
        bool_0 = True
        bytes_1 = b'\xbd\xf5\xc5\x9b\xff,\xb8\xb9H\x0f\xf6\xbcM\xbbc>'
        int_0 = -812
        bytes_2 = b'\xf8\xba\x93'
        list_0 = []
        set_0 = None
        tuple_0 = (bytes_2, list_0, set_0, bytes_2)
        action_module_0 = module_0.ActionModule(bytes_0, float_0, bool_0, bytes_1, int_0, tuple_0)
        dict_0 = {float_0: float_0, bytes_2: str_0, bytes_1: int_0}
        int_1 = 22
        var_0 = action_module_0.get_args_from_task_vars(dict_0, int_1)
    except BaseException:
        pass

def test_case_5():
    try:
        bool_0 = True
        int_0 = 2283
        dict_0 = {int_0: int_0}
        float_0 = 2580.38
        set_0 = {float_0}
        str_0 = ''
        bytes_0 = None
        list_0 = [str_0, str_0, bytes_0]
        str_1 = 'KLRs8vBjVe'
        float_1 = 3270.9
        int_1 = 480
        bytes_1 = b'y0'
        tuple_0 = ()
        int_2 = -642
        str_2 = 'CB\t~vfqdCt'
        tuple_1 = (tuple_0, int_2, str_2, bytes_0)
        action_module_0 = module_0.ActionModule(set_0, int_1, bytes_1, str_0, tuple_1, list_0)
        int_3 = 592
        str_3 = '@\\>'
        action_module_1 = module_0.ActionModule(action_module_0, int_3, bool_0, bool_0, str_1, str_3)
        action_module_2 = module_0.ActionModule(float_1, int_0, action_module_1, dict_0, int_0, action_module_1)
        var_0 = action_module_2.get_args_from_task_vars(dict_0, set_0)
    except BaseException:
        pass

def test_case_6():
    try:
        bool_0 = True
        int_0 = 2283
        dict_0 = {int_0: int_0}
        list_0 = []
        str_0 = "My!\n\x0b@ig5'p"
        tuple_0 = (list_0, str_0)
        bytes_0 = b'\x19E\xb4\x19\x0f\xdf;;?\x17\xf2'
        bool_1 = True
        str_1 = 'w:Ap%(s/~(~qz'
        action_module_0 = module_0.ActionModule(dict_0, bool_0, bytes_0, bool_1, bool_0, str_1)
        str_2 = '^h\rU'
        tuple_1 = (bool_0,)
        action_module_1 = module_0.ActionModule(list_0, tuple_0, action_module_0, str_2, tuple_1, dict_0)
        var_0 = action_module_1.get_args_from_task_vars(dict_0, dict_0)
    except BaseException:
        pass