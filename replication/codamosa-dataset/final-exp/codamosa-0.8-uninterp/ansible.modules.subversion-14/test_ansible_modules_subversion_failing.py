# Automatically generated by Pynguin.
import ansible.modules.subversion as module_0

def test_case_0():
    try:
        var_0 = None
        subversion_0 = module_0.Subversion(var_0, var_0, var_0, var_0, var_0, var_0, var_0, var_0)
        var_1 = subversion_0.get_revision()
    except BaseException:
        pass

def test_case_1():
    try:
        bool_0 = True
        list_0 = [bool_0, bool_0]
        str_0 = 'Wkc,m@Q|12#TS8P'
        int_0 = 459
        dict_0 = {int_0: str_0}
        str_1 = 'nxka|hO}&.qA*cDV'
        subversion_0 = module_0.Subversion(list_0, str_0, int_0, bool_0, list_0, dict_0, str_1, dict_0)
        var_0 = subversion_0.get_revision()
    except BaseException:
        pass

def test_case_2():
    try:
        var_0 = None
        subversion_0 = module_0.Subversion(var_0, var_0, var_0, var_0, var_0, var_0, var_0, var_0)
        var_1 = subversion_0.is_svn_repo()
    except BaseException:
        pass

def test_case_3():
    try:
        var_0 = None
        subversion_0 = module_0.Subversion(var_0, var_0, var_0, var_0, var_0, var_0, var_0, var_0)
        var_1 = subversion_0.checkout()
    except BaseException:
        pass

def test_case_4():
    try:
        var_0 = None
        subversion_0 = module_0.Subversion(var_0, var_0, var_0, var_0, var_0, var_0, var_0, var_0)
        var_1 = subversion_0.export()
    except BaseException:
        pass

def test_case_5():
    try:
        var_0 = None
        subversion_0 = module_0.Subversion(var_0, var_0, var_0, var_0, var_0, var_0, var_0, var_0)
        var_1 = subversion_0.export(subversion_0)
    except BaseException:
        pass

def test_case_6():
    try:
        var_0 = None
        subversion_0 = module_0.Subversion(var_0, var_0, var_0, var_0, var_0, var_0, var_0, var_0)
        var_1 = subversion_0.switch()
    except BaseException:
        pass

def test_case_7():
    try:
        var_0 = None
        subversion_0 = module_0.Subversion(var_0, var_0, var_0, var_0, var_0, var_0, var_0, var_0)
        var_1 = subversion_0.update()
    except BaseException:
        pass

def test_case_8():
    try:
        var_0 = None
        subversion_0 = module_0.Subversion(var_0, var_0, var_0, var_0, var_0, var_0, var_0, var_0)
        var_1 = subversion_0.revert()
    except BaseException:
        pass

def test_case_9():
    try:
        float_0 = 100.0
        bool_0 = True
        bytes_0 = b'\xe0\x1f\x91\xc5'
        set_0 = None
        str_0 = 'VFcu6^WPvf2\t|ZJuYM"'
        tuple_0 = (bool_0, bytes_0, set_0, str_0)
        list_0 = None
        int_0 = 5
        bool_1 = True
        dict_0 = {bool_1: set_0, bool_1: set_0}
        bool_2 = False
        str_1 = '__main__'
        str_2 = 'uX)$`EDj8@#lW()S'
        bytes_1 = b''
        tuple_1 = (bytes_1,)
        subversion_0 = module_0.Subversion(float_0, int_0, bool_0, list_0, bool_0, float_0, tuple_1, dict_0)
        bytes_2 = b'\n\xa5\xcc\x83t\xb5\xfa\x10\xb0\xbb\x83%SK'
        subversion_1 = module_0.Subversion(str_2, bytes_0, dict_0, bool_2, subversion_0, bool_1, tuple_0, bytes_2)
        subversion_2 = module_0.Subversion(str_1, bool_0, str_1, str_2, subversion_1, tuple_0, bytes_0, float_0)
        var_0 = subversion_2.get_remote_revision()
    except BaseException:
        pass

def test_case_10():
    try:
        int_0 = 43
        bool_0 = False
        list_0 = [bool_0, bool_0]
        bytes_0 = b'gbb\x91l\x18\xaf\xce\xb0O'
        bool_1 = False
        complex_0 = None
        dict_0 = {bytes_0: bool_1, bytes_0: bytes_0, complex_0: list_0, bytes_0: bool_1}
        bool_2 = True
        set_0 = {bool_2, bool_2, complex_0, bytes_0}
        str_0 = 'ansible.modules.subversion'
        subversion_0 = module_0.Subversion(bool_0, list_0, bytes_0, bool_1, dict_0, list_0, set_0, str_0)
        list_1 = [complex_0, set_0, int_0, list_0]
        float_0 = 1.5
        tuple_0 = (set_0,)
        float_1 = 3988.33
        tuple_1 = (list_1, float_0, tuple_0, float_1)
        complex_1 = None
        subversion_1 = module_0.Subversion(tuple_1, complex_0, tuple_0, list_1, set_0, tuple_1, complex_1, list_0)
        var_0 = subversion_1.has_local_mods()
    except BaseException:
        pass

def test_case_11():
    try:
        var_0 = None
        subversion_0 = module_0.Subversion(var_0, var_0, var_0, var_0, var_0, var_0, var_0, var_0)
        var_1 = subversion_0.needs_update()
    except BaseException:
        pass

def test_case_12():
    try:
        bool_0 = True
        set_0 = set()
        str_0 = '}hAzQ\r'
        bool_1 = None
        subversion_0 = None
        tuple_0 = (bool_1, str_0, subversion_0)
        tuple_1 = (str_0, tuple_0)
        bool_2 = True
        list_0 = [set_0]
        int_0 = -2974
        int_1 = -443
        str_1 = 'b6'
        str_2 = 'v2_runner_item_on_ok'
        subversion_1 = module_0.Subversion(tuple_1, bool_2, list_0, int_0, int_1, str_1, list_0, str_2)
        bool_3 = True
        str_3 = ')"1Yd.}n\x0b]cMS'
        str_4 = 'FM<kQcP^\\G/H0oKN["/'
        int_2 = 2104
        str_5 = 'V<8'
        int_3 = -1552
        subversion_2 = module_0.Subversion(str_3, str_4, bool_0, set_0, int_2, str_5, int_3, bool_0)
        var_0 = subversion_2.checkout(bool_3)
    except BaseException:
        pass