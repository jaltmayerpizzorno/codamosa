# Automatically generated by Pynguin.
import string_utils.generation as module_0

def test_case_0():
    try:
        bool_0 = True
        int_0 = 351
        generator_0 = module_0.roman_range(int_0)
        str_0 = module_0.uuid(bool_0)
        int_1 = 907
        str_1 = module_0.secure_random_hex(int_1)
        int_2 = 188
        int_3 = 2578
        generator_1 = module_0.roman_range(int_2, int_3)
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = -2687
        str_0 = module_0.random_string(int_0)
    except BaseException:
        pass

def test_case_2():
    try:
        int_0 = 9
        generator_0 = module_0.roman_range(int_0)
        int_1 = -2161
        str_0 = module_0.secure_random_hex(int_1)
    except BaseException:
        pass

def test_case_3():
    try:
        int_0 = 209
        str_0 = module_0.secure_random_hex(int_0)
        int_1 = 119
        generator_0 = module_0.roman_range(int_1, int_1)
    except BaseException:
        pass

def test_case_4():
    try:
        int_0 = 262
        str_0 = module_0.secure_random_hex(int_0)
        int_1 = -110
        generator_0 = module_0.roman_range(int_1, int_1)
    except BaseException:
        pass

def test_case_5():
    try:
        int_0 = None
        bool_0 = False
        str_0 = module_0.uuid(bool_0)
        int_1 = 630
        generator_0 = module_0.roman_range(int_1, int_0)
    except BaseException:
        pass

def test_case_6():
    try:
        int_0 = None
        str_0 = module_0.uuid()
        str_1 = module_0.random_string(int_0)
    except BaseException:
        pass

def test_case_7():
    try:
        bool_0 = False
        str_0 = module_0.uuid(bool_0)
        int_0 = None
        str_1 = module_0.secure_random_hex(int_0)
    except BaseException:
        pass

def test_case_8():
    try:
        int_0 = 201
        str_0 = module_0.secure_random_hex(int_0)
        int_1 = 1119
        str_1 = module_0.secure_random_hex(int_1)
        generator_0 = module_0.roman_range(int_0)
        int_2 = 4357
        int_3 = 522
        generator_1 = module_0.roman_range(int_1, int_0, int_3)
        str_2 = module_0.uuid()
        generator_2 = module_0.roman_range(int_3, int_2)
    except BaseException:
        pass

def test_case_9():
    try:
        int_0 = 3
        int_1 = 1
        int_2 = 2184
        str_0 = module_0.random_string(int_2)
        int_3 = 2
        int_4 = -1
        generator_0 = module_0.roman_range(int_3, int_0, int_4)
        var_0 = list(generator_0)
        int_5 = -2
        generator_1 = module_0.roman_range(int_1, int_3, int_5)
    except BaseException:
        pass

def test_case_10():
    try:
        int_0 = 28
        generator_0 = module_0.roman_range(int_0)
        var_0 = list(generator_0)
        int_1 = 3
        int_2 = 82
        int_3 = 2184
        str_0 = module_0.random_string(int_3)
        var_1 = list(generator_0)
        int_4 = 2
        int_5 = -1
        generator_1 = module_0.roman_range(int_4, int_1, int_5)
        var_2 = list(generator_1)
        int_6 = -3
        generator_2 = module_0.roman_range(int_2, int_0, int_6)
    except BaseException:
        pass

def test_case_11():
    try:
        int_0 = 3
        int_1 = 1
        int_2 = 2
        int_3 = -1
        generator_0 = module_0.roman_range(int_2, int_0, int_3)
        int_4 = 4
        generator_1 = module_0.roman_range(int_4, int_1, int_2)
        var_0 = list(generator_1)
    except BaseException:
        pass