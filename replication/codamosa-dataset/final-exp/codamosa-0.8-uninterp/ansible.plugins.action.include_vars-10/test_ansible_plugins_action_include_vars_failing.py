# Automatically generated by Pynguin.
import ansible.plugins.action.include_vars as module_0

def test_case_0():
    try:
        float_0 = 605.60866
        str_0 = 'nff?,|QF]\x0cRbW'
        list_0 = [str_0, str_0]
        float_1 = 0.5
        tuple_0 = ()
        bool_0 = False
        action_module_0 = module_0.ActionModule(str_0, str_0, list_0, float_1, tuple_0, bool_0)
        var_0 = action_module_0.run(float_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'G,[)7VC'
        list_0 = None
        set_0 = {str_0, list_0, list_0}
        dict_0 = {}
        int_0 = 1154
        str_1 = "'{"
        bool_0 = True
        bytes_0 = b'\r\xae[R\x8c\xe7\x0f\xfbL\x9d'
        action_module_0 = module_0.ActionModule(set_0, dict_0, int_0, str_1, bool_0, bytes_0)
        float_0 = 1.5
        tuple_0 = (float_0,)
        int_1 = 4044
        action_module_1 = module_0.ActionModule(tuple_0, action_module_0, dict_0, int_0, int_1, float_0)
        dict_1 = None
        float_1 = -1218.9739
        action_module_2 = module_0.ActionModule(tuple_0, set_0, list_0, float_1, bytes_0, int_0)
        int_2 = 1322
        complex_0 = None
        bytes_1 = b'\xdc\xc5\x84/\x12\xf4\x99\x0f}ry\xfc'
        float_2 = -994.3567
        str_2 = '\x0b9/%N1K('
        action_module_3 = module_0.ActionModule(complex_0, float_2, tuple_0, dict_0, str_2, tuple_0)
        str_3 = "2;\r_>_$Si''"
        int_3 = 1748
        bytes_2 = b'\xc6\xa2 \x1f-2#\xf9\x9b\xf55\xcc\x92\x81\x8d\x95\x85'
        action_module_4 = module_0.ActionModule(int_2, str_3, int_3, bytes_2, dict_1, set_0)
        complex_1 = None
        var_0 = action_module_3.run(complex_1, bytes_1)
    except BaseException:
        pass