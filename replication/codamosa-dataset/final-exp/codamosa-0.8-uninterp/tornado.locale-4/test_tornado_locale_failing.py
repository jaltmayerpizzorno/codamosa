# Automatically generated by Pynguin.
import tornado.locale as module_0
import gettext as module_1

def test_case_0():
    try:
        locale_0 = module_0.get()
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = None
        str_1 = 'F%f\x0b=>Fs'
        list_0 = [str_0, str_1, str_0, str_0]
        locale_0 = module_0.get(*list_0)
        str_2 = locale_0.list(locale_0)
    except BaseException:
        pass

def test_case_2():
    try:
        int_0 = 1311
        locale_0 = module_0.get()
        str_0 = locale_0.list(int_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'D'
        locale_0 = module_0.Locale(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'fr_FR'
        module_0.set_default_locale(str_0)
        str_1 = '/UsNrs/alex/Doctments/Projets/tornado/locale'
        locale_0 = module_0.get()
        str_2 = locale_0.list(str_0)
        locale_1 = module_0.Locale(str_1)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'Key version must be set when sign key dict is used'
        str_1 = 'S%!\nXzu$DKZh&O I{puj'
        datetime_0 = None
        tuple_0 = (datetime_0,)
        locale_0 = module_0.get()
        str_2 = locale_0.list(tuple_0)
        bool_0 = True
        null_translations_0 = module_1.NullTranslations(bool_0)
        gettext_locale_0 = module_0.GettextLocale(str_1, null_translations_0)
        str_3 = gettext_locale_0.translate(str_0, str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = '^@,B&#-UAE"?H|x"'
        locale_0 = module_0.get()
        str_1 = locale_0.pgettext(str_0, str_0, str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        iterable_0 = module_0.get_supported_locales()
        str_0 = '^(.+):(\\d+)$'
        str_1 = ''
        null_translations_0 = module_1.NullTranslations()
        gettext_locale_0 = module_0.GettextLocale(str_1, null_translations_0)
        str_2 = "bR^'Y'aljFP6~k"
        dict_0 = {}
        dict_1 = {str_2: dict_0}
        c_s_v_locale_0 = module_0.CSVLocale(str_0, dict_1)
        str_3 = gettext_locale_0.translate(str_0, str_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = '.Qn%4Oq,iC^64UJ#'
        str_1 = '>!)'
        int_0 = 1607
        str_2 = 'F&wcgahSq8Hf~ub$OhUt'
        bool_0 = True
        null_translations_0 = module_1.NullTranslations(bool_0)
        gettext_locale_0 = module_0.GettextLocale(str_2, null_translations_0)
        str_3 = gettext_locale_0.pgettext(str_0, str_1, int_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'w>5GA\x0bJH;{8KPtfz4'
        int_0 = -240
        str_1 = 'lt_LT'
        str_2 = 'Irish'
        list_0 = [str_1, str_1, str_1, str_2]
        locale_0 = module_0.get(*list_0)
        str_3 = locale_0.friendly_number(int_0)
        str_4 = 'ACQXd~ew&?X?<%jiV>.'
        module_0.load_gettext_translations(str_0, str_4)
    except BaseException:
        pass

def test_case_10():
    try:
        float_0 = 20.0
        int_0 = -1258
        bool_0 = None
        locale_0 = module_0.get()
        str_0 = locale_0.format_date(float_0, int_0, bool_0)
        int_1 = -2534
        str_1 = locale_0.friendly_number(int_1)
        dict_0 = {}
        c_s_v_locale_0 = module_0.CSVLocale(str_1, dict_0)
        str_2 = locale_0.translate(str_0, str_0, int_0)
        str_3 = '4p{WeF\n"VcEY``'
        str_4 = '한국어'
        null_translations_0 = module_1.NullTranslations(str_4)
        gettext_locale_0 = module_0.GettextLocale(str_0, null_translations_0)
        str_5 = gettext_locale_0.pgettext(str_3, str_4, str_4)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = '@z\n4\'v}5o$!"2)NH'
        str_1 = 'yesterday'
        null_translations_0 = module_1.NullTranslations()
        str_2 = 'Ea X"r{}TUa]x#c8'
        list_0 = [str_1, str_2]
        locale_0 = module_0.get(*list_0)
        bool_0 = False
        locale_1 = module_0.get(*list_0)
        str_3 = locale_1.list(str_2)
        int_0 = 1153
        int_1 = 251
        str_4 = locale_0.friendly_number(int_1)
        bool_1 = True
        str_5 = locale_0.format_date(int_0, int_1, bool_0, bool_1)
        str_6 = 'rD'
        str_7 = locale_1.translate(str_0, str_0, int_1)
        str_8 = 'I\nrj 1Pfm<'
        gettext_locale_0 = module_0.GettextLocale(str_8, null_translations_0)
        str_9 = 'Norsk (nynorsk)'
        module_0.load_gettext_translations(str_9, str_6)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = None
        module_0.load_translations(str_0, str_0)
        str_1 = '!`[s5$TV3KB-'
        str_2 = '@z\n4\'v}5o$!"2)NH'
        null_translations_0 = module_1.NullTranslations()
        gettext_locale_0 = module_0.GettextLocale(str_2, null_translations_0)
        str_3 = None
        str_4 = gettext_locale_0.pgettext(str_1, str_3)
        int_0 = 1951
        str_5 = '%m8d"$Hc#\rpotf1\'F\t&'
        str_6 = 'Ea X"r{}TUa]x#c8'
        list_0 = [str_5, str_6]
        locale_0 = module_0.get(*list_0)
        bool_0 = False
        str_7 = locale_0.format_date(int_0, bool_0)
        str_8 = gettext_locale_0.translate(str_1, str_7, int_0)
        locale_1 = module_0.Locale(str_6)
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = '!`[s5$TV3KB-'
        str_1 = '@z\n4\'v}5o$!"2)NH'
        str_2 = 'SERVER_PROTOCOL'
        null_translations_0 = module_1.NullTranslations()
        gettext_locale_0 = module_0.GettextLocale(str_1, null_translations_0)
        str_3 = None
        str_4 = gettext_locale_0.pgettext(str_0, str_3)
        int_0 = 1925
        str_5 = 'Ea X"r{}TUa]x#c8'
        list_0 = [str_2, str_5]
        locale_0 = module_0.get(*list_0)
        bool_0 = False
        str_6 = locale_0.list(str_2)
        str_7 = locale_0.format_date(int_0, bool_0)
        str_8 = 'rD.'
        str_9 = locale_0.translate(str_8)
        int_1 = None
        int_2 = None
        str_10 = locale_0.friendly_number(int_2)
        locale_1 = module_0.get(*list_0)
        str_11 = locale_0.format_date(int_1)
    except BaseException:
        pass

def test_case_14():
    try:
        str_0 = 'fa_IR'
        locale_0 = module_0.Locale(str_0)
    except BaseException:
        pass

def test_case_15():
    try:
        str_0 = None
        module_0.load_translations(str_0, str_0)
        str_1 = 'SZi[c+]~`'
        str_2 = 'yesterday'
        null_translations_0 = module_1.NullTranslations()
        gettext_locale_0 = module_0.GettextLocale(str_1, null_translations_0)
        str_3 = None
        str_4 = gettext_locale_0.pgettext(str_0, str_3)
        int_0 = 1925
        str_5 = 'Ea X"r{}TUa]x#c8'
        list_0 = [str_2, str_5]
        locale_0 = module_0.get(*list_0)
        str_6 = locale_0.list(str_2)
        int_1 = 1153
        str_7 = locale_0.friendly_number(int_1)
        bool_0 = True
        str_8 = locale_0.format_date(int_1, int_0, bool_0)
        str_9 = locale_0.translate(str_5)
        str_10 = "(21Y'3vh"
        gettext_locale_1 = module_0.GettextLocale(str_10, null_translations_0)
        str_11 = ''
        module_0.load_gettext_translations(str_4, str_11)
    except BaseException:
        pass

def test_case_16():
    try:
        str_0 = None
        module_0.load_translations(str_0, str_0)
        str_1 = '@z\n4\'v}5o$!"2)NH'
        str_2 = 'yesterday'
        null_translations_0 = module_1.NullTranslations()
        gettext_locale_0 = module_0.GettextLocale(str_1, null_translations_0)
        str_3 = None
        str_4 = gettext_locale_0.pgettext(str_0, str_3)
        int_0 = 1925
        str_5 = 'Ea X"r{}TUa]x#c8'
        list_0 = [str_2, str_5]
        locale_0 = module_0.get(*list_0)
        bool_0 = False
        iterable_0 = module_0.get_supported_locales()
        str_6 = locale_0.list(str_2)
        int_1 = 1153
        str_7 = locale_0.friendly_number(int_1)
        str_8 = locale_0.format_date(int_0, bool_0)
        str_9 = 'rD'
        str_10 = locale_0.translate(str_9)
        gettext_locale_1 = module_0.GettextLocale(str_2, null_translations_0)
        str_11 = '9TbX84V&TeHx~'
        module_0.load_gettext_translations(str_2, str_11)
    except BaseException:
        pass

def test_case_17():
    try:
        str_0 = None
        module_0.load_translations(str_0, str_0)
        str_1 = '!`[s5$TV3KB-'
        str_2 = '@z\n4\'v}5o$!"2)NH'
        str_3 = 'SERVER_PRTOCOL'
        null_translations_0 = module_1.NullTranslations()
        gettext_locale_0 = module_0.GettextLocale(str_2, null_translations_0)
        str_4 = None
        str_5 = gettext_locale_0.pgettext(str_1, str_4)
        int_0 = 1951
        str_6 = "Multithreaded non-blocking `Resolver` implementation.\n\n    Requires the `concurrent.futures` package to be installed\n    (available in the standard library since Python 3.2,\n    installable with ``pip install futures`` in older versions).\n\n    The thread pool size can be configured with::\n\n        Resolver.configure('tornado.netutil.ThreadedResolver',\n                           num_threads=10)\n\n    .. versionchanged:: 3.1\n       All ``ThreadedResolvers`` share a single thread pool, whose\n       size is set by the first one to be created.\n\n    .. deprecated:: 5.0\n       The default `Resolver` now uses `.IOLoop.run_in_executor`; use that instead\n       of this class.\n    "
        list_0 = [str_3, str_6]
        locale_0 = module_0.get(*list_0)
        bool_0 = False
        str_7 = locale_0.list(str_3)
        str_8 = locale_0.format_date(int_0, bool_0)
        str_9 = 'rD.'
        str_10 = locale_0.translate(str_9)
        str_11 = locale_0.list(str_1)
        str_12 = 'rD.'
        str_13 = locale_0.translate(str_12, str_0)
        int_1 = -3204
        str_14 = locale_0.friendly_number(int_1)
        module_0.set_default_locale(str_5)
        locale_1 = module_0.get(*list_0)
    except BaseException:
        pass

def test_case_18():
    try:
        str_0 = None
        module_0.load_translations(str_0, str_0)
        str_1 = '!`[s5$TV3KB-'
        str_2 = '@z\n4\'v}5o$!"2)NH'
        str_3 = ''
        null_translations_0 = module_1.NullTranslations()
        gettext_locale_0 = module_0.GettextLocale(str_2, null_translations_0)
        str_4 = None
        str_5 = gettext_locale_0.pgettext(str_1, str_4)
        int_0 = 1925
        str_6 = 'Ea sX"r{}TUa]x#c8'
        list_0 = [str_3, str_6]
        locale_0 = module_0.get(*list_0)
        str_7 = 'Sec-Websocket-Origin'
        dict_0 = {}
        c_s_v_locale_0 = module_0.CSVLocale(str_7, dict_0)
        bool_0 = False
        str_8 = locale_0.list(str_3)
        str_9 = locale_0.format_date(int_0, bool_0)
        str_10 = 'rD.'
        str_11 = locale_0.translate(str_10)
        str_12 = locale_0.list(str_1)
        str_13 = 'rD.'
        int_1 = None
        str_14 = locale_0.friendly_number(int_1)
        int_2 = 1304
        iterable_0 = module_0.get_supported_locales()
        str_15 = 'expires_in'
        str_16 = gettext_locale_0.pgettext(str_13, str_15, str_2, int_2)
        str_17 = '>j,'
        module_0.load_gettext_translations(str_5, str_17)
    except BaseException:
        pass

def test_case_19():
    try:
        str_0 = None
        module_0.load_translations(str_0, str_0)
        str_1 = '!`[s5$TV3KB-'
        str_2 = '@z\n4\'v}5o$!"2)NH'
        str_3 = 'SERVER_PRTOCOL'
        null_translations_0 = module_1.NullTranslations()
        gettext_locale_0 = module_0.GettextLocale(str_2, null_translations_0)
        str_4 = None
        str_5 = gettext_locale_0.pgettext(str_1, str_4)
        int_0 = 1925
        str_6 = 'Ea X"r{}TUa]x#c8'
        list_0 = [str_3, str_6]
        locale_0 = module_0.get(*list_0)
        bool_0 = True
        str_7 = locale_0.list(str_3)
        str_8 = locale_0.format_date(int_0, bool_0)
        str_9 = 'rD.'
        str_10 = locale_0.translate(str_9)
        str_11 = locale_0.list(str_1)
        str_12 = 'rD.'
        str_13 = locale_0.translate(str_12, str_0)
        int_1 = -3204
        str_14 = locale_0.friendly_number(int_1)
        module_0.set_default_locale(str_5)
        locale_1 = module_0.get(*list_0)
    except BaseException:
        pass

def test_case_20():
    try:
        int_0 = 1027
        bool_0 = False
        locale_0 = module_0.get()
        str_0 = locale_0.format_date(int_0, bool_0)
        iterable_0 = module_0.get_supported_locales()
        str_1 = 'expires_in'
        str_2 = 'en_US'
        null_translations_0 = module_1.NullTranslations()
        gettext_locale_0 = module_0.GettextLocale(str_0, null_translations_0)
        str_3 = gettext_locale_0.pgettext(str_1, str_2, str_2)
    except BaseException:
        pass

def test_case_21():
    try:
        str_0 = None
        module_0.load_translations(str_0, str_0)
        str_1 = '!`[s5$TV3KB-'
        str_2 = '@z\n4\'v}5o$!"2)NH'
        int_0 = -5789
        str_3 = '<-N*8{k;wcAs'
        str_4 = '/Cs?6VO7a DS&'
        list_0 = [str_2, str_3, str_4, str_2]
        locale_0 = module_0.get(*list_0)
        str_5 = locale_0.friendly_number(int_0)
        str_6 = 'SERVER_PRTOCOL'
        null_translations_0 = module_1.NullTranslations()
        gettext_locale_0 = module_0.GettextLocale(str_2, null_translations_0)
        str_7 = None
        str_8 = gettext_locale_0.pgettext(str_1, str_7)
        int_1 = 1925
        list_1 = [str_6, str_5]
        locale_1 = module_0.get(*list_1)
        bool_0 = False
        str_9 = locale_1.list(str_6)
        str_10 = locale_1.format_date(int_1, bool_0)
        str_11 = 'rD.'
        str_12 = locale_1.translate(str_11)
        int_2 = None
        str_13 = locale_1.friendly_number(int_2)
        iterable_0 = module_0.get_supported_locales()
        str_14 = '6f7G==X7#_}0qZa$0!'
        gettext_locale_1 = module_0.GettextLocale(str_14, null_translations_0)
        str_15 = None
        module_0.load_gettext_translations(str_15, str_6)
    except BaseException:
        pass

def test_case_22():
    try:
        str_0 = None
        module_0.load_translations(str_0, str_0)
        str_1 = '!`[s5$TV3KB-'
        str_2 = '@z\n4\'v}5o$!"2)NH'
        null_translations_0 = module_1.NullTranslations()
        gettext_locale_0 = module_0.GettextLocale(str_2, null_translations_0)
        str_3 = None
        str_4 = gettext_locale_0.pgettext(str_1, str_3)
        str_5 = 'Sec-Websocket-Origin'
        dict_0 = {}
        c_s_v_locale_0 = module_0.CSVLocale(str_5, dict_0)
        str_6 = 'rD.'
        float_0 = -2193.6652
        int_0 = 1304
        iterable_0 = module_0.get_supported_locales()
        bool_0 = False
        locale_0 = module_0.get()
        str_7 = locale_0.format_date(float_0, bool_0)
        str_8 = 'expires_in'
        str_9 = gettext_locale_0.pgettext(str_6, str_8, str_2, int_0)
        str_10 = '>j,'
        module_0.load_gettext_translations(str_4, str_10)
    except BaseException:
        pass