# Automatically generated by Pynguin.
import youtube_dl.downloader.f4m as module_0
import youtube_dl.compat as module_1

def test_case_0():
    try:
        flv_reader_0 = module_0.FlvReader()
        var_0 = flv_reader_0.read_asrt()
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '<manifest><foo>bar</foo></manifest>'
        var_0 = module_1.compat_etree_fromstring(str_0)
        list_0 = [var_0]
        var_1 = module_0.remove_encrypted_media(list_0)
        flv_reader_0 = module_0.FlvReader()
        var_2 = flv_reader_0.read_unsigned_long_long()
    except BaseException:
        pass

def test_case_2():
    try:
        flv_reader_0 = module_0.FlvReader()
        var_0 = flv_reader_0.read_box_info()
    except BaseException:
        pass

def test_case_3():
    try:
        flv_reader_0 = module_0.FlvReader()
        var_0 = flv_reader_0.read_string()
    except BaseException:
        pass

def test_case_4():
    try:
        flv_reader_0 = module_0.FlvReader()
        var_0 = flv_reader_0.read_afrt()
    except BaseException:
        pass

def test_case_5():
    try:
        flv_reader_0 = module_0.FlvReader()
        var_0 = flv_reader_0.read_abst()
    except BaseException:
        pass

def test_case_6():
    try:
        list_0 = []
        var_0 = module_0.read_bootstrap_info(list_0)
    except BaseException:
        pass

def test_case_7():
    try:
        dict_0 = {}
        var_0 = module_0.build_fragments_list(dict_0)
    except BaseException:
        pass

def test_case_8():
    try:
        bytes_0 = b'\x16\xb2\xd6cvu\xa0`\xd0\xcf\xf5\xd7'
        bytes_1 = b'0'
        var_0 = module_0.write_unsigned_int(bytes_0, bytes_1)
    except BaseException:
        pass

def test_case_9():
    try:
        int_0 = 1373
        bytes_0 = b'\xc2<\x02\xa4\xc1J\xe8T\xb5\xd8\x87\x17\x1f\x02'
        var_0 = module_0.write_unsigned_int_24(int_0, bytes_0)
    except BaseException:
        pass

def test_case_10():
    try:
        flv_reader_0 = module_0.FlvReader()
        var_0 = module_0.write_flv_header(flv_reader_0)
        var_1 = flv_reader_0.read_asrt()
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = "<tO)'4Q+"
        str_1 = 'lzaq\\'
        bytes_0 = b'\xb7Q\x15\xd5:\xc7+,\xa7\x8a}\xd7QJu\x9cK'
        float_0 = -917.0
        f4m_f_d_0 = module_0.F4mFD(bytes_0, float_0)
        var_0 = f4m_f_d_0.real_download(str_0, str_1)
    except BaseException:
        pass

def test_case_12():
    try:
        flv_reader_0 = module_0.FlvReader()
        bytes_0 = b'\x84a+\xae\xed4\x13\x08\x86@\x87\xa6\x99Q\xfe\x13B\xb6>\x9a'
        var_0 = module_0.read_bootstrap_info(bytes_0)
    except BaseException:
        pass

def test_case_13():
    try:
        list_0 = []
        flv_reader_0 = module_0.FlvReader(*list_0)
        int_0 = 308
        var_0 = module_0.write_metadata_tag(flv_reader_0, int_0)
    except BaseException:
        pass

def test_case_14():
    try:
        int_0 = 1582577700
        set_0 = {int_0, int_0, int_0}
        bool_0 = False
        var_0 = module_0.write_metadata_tag(set_0, bool_0)
        flv_reader_0 = module_0.FlvReader()
        var_1 = flv_reader_0.read_bootstrap_info()
    except BaseException:
        pass

def test_case_15():
    try:
        str_0 = '<manifest><foo>bar</foo></manifest>'
        var_0 = module_1.compat_etree_fromstring(str_0)
        bytes_0 = b'\xcf'
        list_0 = [bytes_0]
        flv_reader_0 = module_0.FlvReader(*list_0)
        var_1 = flv_reader_0.read_afrt()
    except BaseException:
        pass

def test_case_16():
    try:
        str_0 = '<manifest><baseURL>url</baseURL></manifest>'
        var_0 = module_1.compat_etree_fromstring(str_0)
        var_1 = module_0.get_base_url(var_0)
        str_1 = '<manifest><foo>bar</foo></manifest>'
        var_2 = module_1.compat_etree_fromstring(str_1)
        var_3 = module_0.get_base_url(var_2)
        str_2 = "\t<3M8eTxQ'R/whbhMbu "
        list_0 = []
        var_4 = module_0.remove_encrypted_media(list_0)
        flv_reader_0 = module_0.FlvReader()
        list_1 = [str_2]
        var_5 = module_0.write_metadata_tag(flv_reader_0, list_1)
    except BaseException:
        pass

def test_case_17():
    try:
        str_0 = '<manifest><foo>bar</foo></manifest>'
        var_0 = module_1.compat_etree_fromstring(str_0)
        bytes_0 = b'U\xc2\xe3O.\xbf'
        list_0 = [bytes_0]
        flv_reader_0 = module_0.FlvReader(*list_0)
        var_1 = flv_reader_0.read_afrt()
    except BaseException:
        pass