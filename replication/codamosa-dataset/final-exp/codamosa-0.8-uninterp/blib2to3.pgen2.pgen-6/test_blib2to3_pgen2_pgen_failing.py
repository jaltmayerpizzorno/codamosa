# Automatically generated by Pynguin.
import blib2to3.pgen2.pgen as module_0

def test_case_0():
    try:
        str_0 = '\\\tWyN'
        dict_0 = {}
        parser_generator_0 = module_0.ParserGenerator(str_0, dict_0)
    except BaseException:
        pass

def test_case_1():
    try:
        n_f_a_state_0 = module_0.NFAState()
        n_f_a_state_0.addarc(n_f_a_state_0)
        str_0 = "o')\\KJdUb\tVJZjn5"
        parser_generator_0 = module_0.ParserGenerator(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        tuple_0 = None
        n_f_a_state_0 = module_0.NFAState()
        dict_0 = {n_f_a_state_0: n_f_a_state_0, n_f_a_state_0: n_f_a_state_0, n_f_a_state_0: n_f_a_state_0}
        d_f_a_state_0 = module_0.DFAState(dict_0, n_f_a_state_0)
        bool_0 = d_f_a_state_0.__eq__(tuple_0)
    except BaseException:
        pass

def test_case_3():
    try:
        pgen_grammar_0 = module_0.generate_grammar()
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = '&Ycm*NE'
        n_f_a_state_0 = module_0.NFAState()
        dict_0 = {n_f_a_state_0: str_0, n_f_a_state_0: n_f_a_state_0, n_f_a_state_0: n_f_a_state_0}
        d_f_a_state_0 = module_0.DFAState(dict_0, n_f_a_state_0)
        n_f_a_state_1 = module_0.NFAState()
        dict_1 = {n_f_a_state_1: str_0}
        d_f_a_state_1 = module_0.DFAState(dict_1, n_f_a_state_1)
        d_f_a_state_1.unifystate(d_f_a_state_0, d_f_a_state_0)
        n_f_a_state_2 = module_0.NFAState()
        n_f_a_state_3 = None
        dict_2 = {n_f_a_state_3: n_f_a_state_2, n_f_a_state_2: n_f_a_state_3, n_f_a_state_3: str_0}
        d_f_a_state_2 = module_0.DFAState(dict_2, n_f_a_state_2)
    except BaseException:
        pass

def test_case_5():
    try:
        n_f_a_state_0 = module_0.NFAState()
        n_f_a_state_1 = module_0.NFAState()
        n_f_a_state_1.addarc(n_f_a_state_1)
        n_f_a_state_1.addarc(n_f_a_state_0)
        str_0 = ' 0f7'
        str_1 = None
        dict_0 = {str_0: n_f_a_state_0, str_1: n_f_a_state_1}
        n_f_a_state_1.addarc(n_f_a_state_0, dict_0)
    except BaseException:
        pass

def test_case_6():
    try:
        n_f_a_state_0 = module_0.NFAState()
        dict_0 = {n_f_a_state_0: n_f_a_state_0, n_f_a_state_0: n_f_a_state_0, n_f_a_state_0: n_f_a_state_0}
        n_f_a_state_0.addarc(n_f_a_state_0)
        d_f_a_state_0 = module_0.DFAState(dict_0, n_f_a_state_0)
        d_f_a_state_1 = module_0.DFAState(dict_0, n_f_a_state_0)
        dict_1 = {n_f_a_state_0: d_f_a_state_1}
        d_f_a_state_2 = module_0.DFAState(dict_1, n_f_a_state_0)
        d_f_a_state_3 = module_0.DFAState(dict_1, n_f_a_state_0)
        bool_0 = d_f_a_state_2.__eq__(d_f_a_state_2)
        str_0 = None
        d_f_a_state_4 = module_0.DFAState(dict_1, n_f_a_state_0)
        d_f_a_state_0.addarc(d_f_a_state_3, str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        n_f_a_state_0 = module_0.NFAState()
        n_f_a_state_1 = module_0.NFAState()
        n_f_a_state_1.addarc(n_f_a_state_1)
        n_f_a_state_1.addarc(n_f_a_state_0)
        n_f_a_state_2 = module_0.NFAState()
        n_f_a_state_3 = module_0.NFAState()
        n_f_a_state_3.addarc(n_f_a_state_2)
        n_f_a_state_4 = module_0.NFAState()
        n_f_a_state_4.addarc(n_f_a_state_4)
        dict_0 = None
        d_f_a_state_0 = module_0.DFAState(dict_0, n_f_a_state_3)
    except BaseException:
        pass

def test_case_8():
    try:
        int_0 = 661
        n_f_a_state_0 = module_0.NFAState()
        n_f_a_state_1 = module_0.NFAState()
        n_f_a_state_1.addarc(n_f_a_state_1)
        n_f_a_state_1.addarc(n_f_a_state_0)
        n_f_a_state_2 = module_0.NFAState()
        n_f_a_state_3 = module_0.NFAState()
        n_f_a_state_3.addarc(n_f_a_state_2)
        n_f_a_state_4 = module_0.NFAState()
        dict_0 = {n_f_a_state_4: n_f_a_state_4, n_f_a_state_4: int_0, n_f_a_state_4: n_f_a_state_4, n_f_a_state_4: n_f_a_state_1, n_f_a_state_0: n_f_a_state_4, n_f_a_state_1: n_f_a_state_3}
        n_f_a_state_4.addarc(n_f_a_state_4)
        d_f_a_state_0 = None
        str_0 = 'S'
        d_f_a_state_1 = module_0.DFAState(dict_0, n_f_a_state_3)
        d_f_a_state_1.addarc(d_f_a_state_0, str_0)
    except BaseException:
        pass

def test_case_9():
    try:
        n_f_a_state_0 = module_0.NFAState()
        n_f_a_state_1 = None
        n_f_a_state_0.addarc(n_f_a_state_1)
    except BaseException:
        pass

def test_case_10():
    try:
        int_0 = 702
        n_f_a_state_0 = module_0.NFAState()
        n_f_a_state_0.addarc(n_f_a_state_0)
        n_f_a_state_0.addarc(n_f_a_state_0)
        n_f_a_state_1 = module_0.NFAState()
        dict_0 = {n_f_a_state_1: n_f_a_state_1, n_f_a_state_1: int_0, n_f_a_state_1: n_f_a_state_1}
        d_f_a_state_0 = module_0.DFAState(dict_0, n_f_a_state_1)
        n_f_a_state_1.addarc(n_f_a_state_1)
        n_f_a_state_2 = None
        dict_1 = {n_f_a_state_1: n_f_a_state_0, n_f_a_state_2: n_f_a_state_0}
        d_f_a_state_1 = module_0.DFAState(dict_1, n_f_a_state_2)
    except BaseException:
        pass

def test_case_11():
    try:
        int_0 = 702
        n_f_a_state_0 = module_0.NFAState()
        str_0 = '[][(){]'
        dict_0 = {n_f_a_state_0: n_f_a_state_0, n_f_a_state_0: int_0, n_f_a_state_0: n_f_a_state_0}
        n_f_a_state_0.addarc(n_f_a_state_0, str_0)
        d_f_a_state_0 = module_0.DFAState(dict_0, n_f_a_state_0)
        d_f_a_state_1 = module_0.DFAState(dict_0, n_f_a_state_0)
        d_f_a_state_0.addarc(d_f_a_state_1, str_0)
        bool_0 = d_f_a_state_0.__eq__(d_f_a_state_0)
        n_f_a_state_1 = module_0.NFAState()
        d_f_a_state_0.addarc(d_f_a_state_0, str_0)
    except BaseException:
        pass

def test_case_12():
    try:
        int_0 = 702
        n_f_a_state_0 = module_0.NFAState()
        n_f_a_state_0.addarc(n_f_a_state_0)
        n_f_a_state_0.addarc(n_f_a_state_0)
        n_f_a_state_1 = module_0.NFAState()
        n_f_a_state_2 = module_0.NFAState()
        dict_0 = {n_f_a_state_2: n_f_a_state_2, n_f_a_state_2: int_0, n_f_a_state_2: n_f_a_state_2}
        d_f_a_state_0 = module_0.DFAState(dict_0, n_f_a_state_2)
        str_0 = '\t{.R*5F1kQ&#'
        d_f_a_state_0.addarc(d_f_a_state_0, str_0)
        n_f_a_state_3 = None
        dict_1 = {n_f_a_state_2: n_f_a_state_0, n_f_a_state_3: n_f_a_state_0}
        d_f_a_state_1 = module_0.DFAState(dict_1, n_f_a_state_1)
        d_f_a_state_2 = module_0.DFAState(dict_0, n_f_a_state_1)
        bool_0 = d_f_a_state_0.__eq__(d_f_a_state_0)
        str_1 = None
        d_f_a_state_3 = module_0.DFAState(dict_0, n_f_a_state_1)
        str_2 = 'DYJT-{r\r/=\nC'
        n_f_a_state_1.addarc(n_f_a_state_2)
        n_f_a_state_2.addarc(n_f_a_state_0, str_2)
        d_f_a_state_2.addarc(d_f_a_state_3, str_2)
        d_f_a_state_2.unifystate(d_f_a_state_1, d_f_a_state_0)
        bool_1 = d_f_a_state_2.__eq__(d_f_a_state_3)
        d_f_a_state_3.addarc(d_f_a_state_1, str_1)
    except BaseException:
        pass