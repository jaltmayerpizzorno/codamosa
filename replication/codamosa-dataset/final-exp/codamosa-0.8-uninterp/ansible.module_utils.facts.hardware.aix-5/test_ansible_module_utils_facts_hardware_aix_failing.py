# Automatically generated by Pynguin.
import ansible.module_utils.facts.hardware.aix as module_0

def test_case_0():
    try:
        set_0 = None
        a_i_x_hardware_0 = module_0.AIXHardware(set_0)
        complex_0 = None
        a_i_x_hardware_collector_0 = module_0.AIXHardwareCollector(complex_0)
        bool_0 = None
        var_0 = a_i_x_hardware_0.populate(bool_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'kW\x0bio'
        set_0 = {str_0, str_0, str_0}
        bytes_0 = b'\xc0\x06-\x15\xe1\x16($\x96\xf8J\x86\xc1\x17\x8f'
        a_i_x_hardware_0 = module_0.AIXHardware(set_0, bytes_0)
        var_0 = a_i_x_hardware_0.get_memory_facts()
    except BaseException:
        pass

def test_case_2():
    try:
        bool_0 = None
        dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
        a_i_x_hardware_collector_0 = module_0.AIXHardwareCollector()
        a_i_x_hardware_0 = module_0.AIXHardware(dict_0, a_i_x_hardware_collector_0)
        var_0 = a_i_x_hardware_0.get_dmi_facts()
    except BaseException:
        pass

def test_case_3():
    try:
        a_i_x_hardware_collector_0 = module_0.AIXHardwareCollector()
        a_i_x_hardware_0 = module_0.AIXHardware(a_i_x_hardware_collector_0)
        list_0 = [a_i_x_hardware_0, a_i_x_hardware_collector_0, a_i_x_hardware_0, a_i_x_hardware_0]
        str_0 = '{[;D2j&>e} Pqw_'
        a_i_x_hardware_1 = module_0.AIXHardware(list_0, str_0)
        var_0 = a_i_x_hardware_1.get_vgs_facts()
    except BaseException:
        pass

def test_case_4():
    try:
        int_0 = -1345
        a_i_x_hardware_0 = module_0.AIXHardware(int_0)
        var_0 = a_i_x_hardware_0.get_mount_facts()
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = '\x0cB1qo E'
        a_i_x_hardware_0 = module_0.AIXHardware(str_0)
        var_0 = a_i_x_hardware_0.get_device_facts()
    except BaseException:
        pass