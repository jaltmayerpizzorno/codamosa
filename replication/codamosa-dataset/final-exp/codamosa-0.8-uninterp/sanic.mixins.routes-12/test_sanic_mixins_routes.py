# Automatically generated by Pynguin.
import sanic.mixins.routes as module_0
import pathlib as module_1

def test_case_0():
    pass

def test_case_1():
    route_mixin_0 = module_0.RouteMixin()

def test_case_2():
    str_0 = ''
    route_mixin_0 = module_0.RouteMixin()
    var_0 = route_mixin_0.put(str_0, str_0)

def test_case_3():
    str_0 = '\n \r(*be9-DZ8CNu'
    int_0 = -1570
    bool_0 = False
    route_mixin_0 = module_0.RouteMixin()
    var_0 = route_mixin_0.get(str_0, int_0, bool_0)

def test_case_4():
    str_0 = 'Returns loaded module provided as a file path.\n\n    :param args:\n        Coresponds to importlib.util.spec_from_file_location location\n        parameters,but with this differences:\n        - It has to be of a string or bytes type.\n        - You can also use here environment variables\n          in format ${some_env_var}.\n          Mark that $some_env_var will not be resolved as environment variable.\n    :encoding:\n        If location parameter is of a bytes type, then use this encoding\n        to decode it into string.\n    :param args:\n        Coresponds to the rest of importlib.util.spec_from_file_location\n        parameters.\n    :param kwargs:\n        Coresponds to the rest of importlib.util.spec_from_file_location\n        parameters.\n\n    For example You can:\n\n        some_module = load_module_from_file_location(\n            "some_module_name",\n            "/some/path/${some_env_var}"\n        )\n    '
    bool_0 = True
    route_mixin_0 = module_0.RouteMixin()
    var_0 = route_mixin_0.post(str_0, bool_0)

def test_case_5():
    str_0 = 'k^TpP"eOcCOa{<p'
    str_1 = ' .#hS]vql6eANDSNKt{~'
    dict_0 = {str_1: str_1, str_1: str_1, str_1: str_1}
    route_mixin_0 = module_0.RouteMixin(**dict_0)
    str_2 = '/QN~9"fCDjW'
    var_0 = route_mixin_0.patch(str_2)
    bool_0 = False
    var_1 = route_mixin_0.head(str_2, bool_0)
    var_2 = route_mixin_0.get(str_0)

def test_case_6():
    dict_0 = {}
    str_0 = 'N:4ElclJ74\r~QQKl\r_2`'
    bool_0 = False
    int_0 = -2829
    pure_path_0 = module_1.PurePath(**dict_0)
    list_0 = [dict_0, pure_path_0]
    route_mixin_0 = module_0.RouteMixin(*list_0)
    var_0 = route_mixin_0.delete(str_0, str_0, bool_0, int_0, str_0)
    route_mixin_1 = module_0.RouteMixin(**dict_0)