# Automatically generated by Pynguin.
import youtube_dl.aes as module_0
import youtube_dl.utils as module_1
import base64 as module_2

def test_case_0():
    pass

def test_case_1():
    dict_0 = {}
    var_0 = module_0.sub_bytes(dict_0)

def test_case_2():
    bool_0 = False
    tuple_0 = (bool_0,)
    var_0 = module_0.sub_bytes(tuple_0)

def test_case_3():
    str_0 = 'yRDJ5Ddajp5S5O+vS6JY2Q==|3SBWO4ok4v4eRitMItCU9g==|W0/fvDsvYOw6HO/JgW+2xQ=='
    str_1 = 'g9N6nb2QsHV'
    int_0 = 32
    var_0 = module_0.aes_decrypt_text(str_0, str_1, int_0)
    str_2 = 'This is a demonstration!'
    var_1 = var_0 == str_2
    var_2 = print(var_1)

def test_case_4():
    bool_0 = False
    bytes_0 = b''
    var_0 = module_0.rijndael_mul(bytes_0, bool_0)

def test_case_5():
    bytes_0 = b'\x9a\xfd\xae\xbf\xdd\xa1w#\xdc\x1dX'
    var_0 = module_1.bytes_to_intlist(bytes_0)
    var_1 = module_0.key_expansion(var_0)

def test_case_6():
    int_0 = 0
    int_1 = 255
    int_2 = [int_0, int_1, int_1, int_1]
    var_0 = module_0.inc(int_2)

def test_case_7():
    bytes_0 = b'Sitee\x16 byt\xbbw\x94Ee \tey'
    var_0 = bytearray(bytes_0)
    var_1 = module_1.bytes_to_intlist(var_0)
    var_2 = bytearray(bytes_0)
    var_3 = module_1.bytes_to_intlist(var_0)
    var_4 = module_0.aes_cbc_encrypt(var_3, var_1, var_3)
    tuple_0 = ()
    var_5 = module_0.inc(tuple_0)

def test_case_8():
    int_0 = 1
    int_1 = [int_0]
    int_2 = 16
    var_0 = int_1 * int_2
    var_1 = module_0.key_expansion(var_0)
    var_2 = module_1.intlist_to_bytes(var_1)
    str_0 = '4FE4B7B2DC4AEF8DD83D1E65DB9BBE9F75B0D79E8BBF5E5018CDD1E3F26D2DEC'
    var_3 = module_2.b64decode(str_0)
    int_3 = [int_0]
    int_4 = 24
    var_4 = int_3 * int_4
    var_5 = module_0.key_expansion(var_4)
    var_6 = module_1.intlist_to_bytes(var_5)
    str_1 = '4FE4B7B2DC4AEF8DD83D1E65DB9BBE9F75B0D79E8BBF5E5018CDD1E3F26D2DECA7D8B77F499E7C9A178A964E1D2C0A2B'
    var_7 = module_2.b64decode(str_1)