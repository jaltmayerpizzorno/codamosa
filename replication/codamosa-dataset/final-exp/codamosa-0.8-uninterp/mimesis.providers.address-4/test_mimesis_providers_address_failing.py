# Automatically generated by Pynguin.
import mimesis.providers.address as module_0

def test_case_0():
    try:
        str_0 = 'Europe/Paris'
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
        bool_0 = True
        address_0 = module_0.Address()
        str_1 = address_0.address()
        str_2 = address_0.region()
        str_3 = address_0.province()
        str_4 = address_0.city()
        str_5 = address_0.federal_subject()
        str_6 = address_0.address()
        var_0 = address_0.latitude(bool_0)
        address_1 = module_0.Address(**dict_0)
    except BaseException:
        pass

def test_case_1():
    try:
        list_0 = []
        address_0 = module_0.Address(*list_0)
        str_0 = address_0.province()
        list_1 = None
        list_2 = []
        address_1 = module_0.Address(*list_2)
        str_1 = address_1.prefecture(*list_1)
    except BaseException:
        pass

def test_case_2():
    try:
        address_0 = module_0.Address()
        str_0 = address_0.continent()
        str_1 = address_0.continent()
        list_0 = [address_0, str_0, str_0, str_0]
        str_2 = address_0.federal_subject(*list_0)
    except BaseException:
        pass

def test_case_3():
    try:
        float_0 = 10.0
        list_0 = [float_0, float_0]
        list_1 = [list_0, list_0, float_0]
        str_0 = '\tq'
        dict_0 = {str_0: list_0, str_0: str_0, str_0: list_0}
        address_0 = module_0.Address()
        str_1 = address_0.prefecture(*list_1, **dict_0)
    except BaseException:
        pass

def test_case_4():
    try:
        address_0 = module_0.Address()
        str_0 = address_0.continent()
        str_1 = address_0.zip_code()
        str_2 = address_0.state()
        address_1 = module_0.Address()
        str_3 = address_1.postal_code()
    except BaseException:
        pass

def test_case_5():
    try:
        address_0 = module_0.Address()
        str_0 = address_0.city()
        list_0 = []
        address_1 = module_0.Address()
        str_1 = address_1.country()
        list_1 = [list_0]
        str_2 = 'yYRS.G'
        dict_0 = {str_2: list_0, str_2: list_0}
        str_3 = address_0.street_name()
        address_2 = module_0.Address()
        str_4 = address_2.city()
        str_5 = address_2.prefecture()
        address_3 = module_0.Address(*list_1, **dict_0)
    except BaseException:
        pass

def test_case_6():
    try:
        address_0 = module_0.Address()
        str_0 = address_0.city()
        str_1 = 'J\x0cg[Z9G|sUx3'
        str_2 = None
        str_3 = "ONM8m\tP\rDX'=I@n\n&"
        dict_0 = {str_1: str_1, str_2: str_1, str_3: str_2, str_2: str_1}
        address_1 = module_0.Address(**dict_0)
    except BaseException:
        pass

def test_case_7():
    try:
        address_0 = module_0.Address()
        var_0 = address_0.longitude()
        set_0 = {var_0, address_0, address_0}
        str_0 = address_0.country_code(set_0)
    except BaseException:
        pass

def test_case_8():
    try:
        address_0 = module_0.Address()
        str_0 = address_0.address()
        list_0 = None
        list_1 = [list_0]
        address_1 = module_0.Address(*list_1)
        str_1 = address_1.postal_code()
        str_2 = address_0.country_code()
        str_3 = address_0.calling_code()
        str_4 = address_0.street_number()
        str_5 = address_0.street_number()
        bool_0 = True
        str_6 = address_0.country(bool_0)
        str_7 = address_0.zip_code()
        str_8 = address_0.address()
        str_9 = address_1.country()
        str_10 = address_0.street_suffix()
        str_11 = address_0.zip_code()
        dict_0 = address_0.coordinates(bool_0)
        str_12 = address_1.street_suffix()
        address_2 = module_0.Address()
        str_13 = address_2.continent(bool_0)
        int_0 = None
        address_3 = module_0.Address(*list_1)
        str_14 = address_3.street_number(int_0)
    except BaseException:
        pass