# Automatically generated by Pynguin.
import ansible.plugins.inventory.generator as module_0

def test_case_0():
    try:
        inventory_module_0 = module_0.InventoryModule()
        tuple_0 = ()
        inventory_module_1 = module_0.InventoryModule()
        var_0 = inventory_module_1.template(inventory_module_0, tuple_0)
    except BaseException:
        pass

def test_case_1():
    try:
        set_0 = None
        bool_0 = True
        str_0 = 'AD&N^Hvbc$JE1a9S'
        list_0 = [bool_0, str_0]
        str_1 = 'Opened'
        inventory_module_0 = module_0.InventoryModule()
        var_0 = inventory_module_0.add_parents(list_0, set_0, str_1, set_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = None
        str_1 = 'jx*dibduy%4\r<~l??wG'
        float_0 = 0.1
        set_0 = None
        inventory_module_0 = module_0.InventoryModule()
        var_0 = inventory_module_0.parse(str_0, str_1, float_0, set_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'poll_interval'
        set_0 = set()
        inventory_module_0 = module_0.InventoryModule()
        inventory_module_1 = module_0.InventoryModule()
        var_0 = inventory_module_1.parse(str_0, set_0, inventory_module_0)
    except BaseException:
        pass

def test_case_4():
    try:
        inventory_module_0 = module_0.InventoryModule()
        var_0 = None
        str_0 = 'cid'
        str_1 = 'name'
        str_2 = {str_1: str_0}
        str_3 = [str_2]
        var_1 = {}
        var_2 = inventory_module_0.add_parents(var_0, str_0, str_3, var_1)
    except BaseException:
        pass