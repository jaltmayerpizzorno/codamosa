# Automatically generated by Pynguin.
import docstring_parser.numpydoc as module_0
import inspect as module_1

def test_case_0():
    try:
        str_0 = ''
        section_0 = module_0.Section(str_0, str_0)
        numpydoc_parser_0 = module_0.NumpydocParser(section_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'title'
        str_1 = 'key'
        k_v_section_0 = module_0._KVSection(str_0, str_1)
        str_2 = '\n        arg_name\n            arg_description\n        arg_2 : type, optional\n            descriptions can also span...\n            ... multiple lines\n        '
        var_0 = module_1.cleandoc(str_2)
        iterable_0 = k_v_section_0.parse(var_0)
        var_1 = list(iterable_0)
        var_2 = len(var_1)
        int_0 = 1
        iterable_1 = k_v_section_0.parse(var_0)
        var_3 = list(iterable_1)[int_0]
        var_4 = var_3.description
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '\n    Short description\n    \n    Long description\n    \n    Parameters\n    ----------\n    alpha : int\n        description of alpha\n       \n    beta : str\n        description of beta\n    \n    gamma : str, optional\n        description of gamma\n    \n    Attributes\n    ----------\n    attr1 : str\n        attribute 1\n    \n    attr2 : str\n        attribute 2\n    \n    Returns\n    -------\n    str\n        return description\n    '
        numpydoc_parser_0 = module_0.NumpydocParser()
        docstring_0 = numpydoc_parser_0.parse(str_0)
        str_1 = 'M5n"+2;0'
        complex_0 = None
        numpydoc_parser_1 = module_0.NumpydocParser(complex_0)
        str_2 = '6f2a'
        k_v_section_0 = module_0._KVSection(str_0, str_2)
        iterable_0 = k_v_section_0.parse(str_0)
        numpydoc_parser_2 = module_0.NumpydocParser(iterable_0)
        docstring_1 = numpydoc_parser_2.parse(str_1)
    except BaseException:
        pass