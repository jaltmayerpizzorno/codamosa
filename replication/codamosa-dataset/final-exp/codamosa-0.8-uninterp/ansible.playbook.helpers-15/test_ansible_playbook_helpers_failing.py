# Automatically generated by Pynguin.
import ansible.playbook.helpers as module_0

def test_case_0():
    try:
        int_0 = 5722
        tuple_0 = None
        str_0 = '*`H"&3+A,CF<|N$Olz.'
        var_0 = module_0.load_list_of_blocks(int_0, tuple_0, str_0, int_0)
    except BaseException:
        pass

def test_case_1():
    try:
        complex_0 = None
        int_0 = -1021
        bool_0 = True
        var_0 = module_0.load_list_of_tasks(bool_0, complex_0, int_0, bool_0)
    except BaseException:
        pass

def test_case_2():
    try:
        dict_0 = {}
        bytes_0 = b'\xb13\x02/2\xfb'
        str_0 = 'fileglob'
        list_0 = []
        str_1 = 'ssl_check_cert_permissions'
        tuple_0 = None
        var_0 = module_0.load_list_of_roles(list_0, str_1, tuple_0)
        list_1 = [dict_0, str_0, bytes_0, dict_0, dict_0]
        float_0 = 1371.16337
        var_1 = module_0.load_list_of_blocks(list_1, float_0, float_0, float_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = ''
        float_0 = None
        dict_0 = {str_0: float_0}
        list_0 = [str_0, float_0, dict_0, float_0]
        set_0 = {float_0}
        str_1 = 'Z;hSgD=SE|P6k+\tA#'
        var_0 = module_0.load_list_of_roles(list_0, set_0, str_1)
    except BaseException:
        pass

def test_case_4():
    try:
        bool_0 = True
        int_0 = 301
        bool_1 = True
        var_0 = module_0.load_list_of_roles(bool_0, int_0, bool_1)
    except BaseException:
        pass

def test_case_5():
    try:
        float_0 = -1422.679083
        list_0 = [float_0, float_0]
        int_0 = 200000
        var_0 = module_0.load_list_of_blocks(list_0, list_0, int_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = '*ufg*>QY '
        dict_0 = {str_0: str_0}
        bytes_0 = b'\xe9H\xff\xfe\x18\xe1\x9e\xf9&\xd3m\x80\xe18\xc0XQ\xbb'
        list_0 = [dict_0, str_0, bytes_0, dict_0, dict_0]
        float_0 = 1371.16337
        var_0 = module_0.load_list_of_blocks(list_0, float_0, float_0, float_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'N\x0b{%Y):,o\x0cwLmnv'
        dict_0 = {str_0: str_0}
        bytes_0 = b'\xb13\x02/2\xfb'
        list_0 = [dict_0, str_0, bytes_0, dict_0, dict_0]
        float_0 = -1129.1351
        var_0 = module_0.load_list_of_blocks(list_0, float_0, float_0, float_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = ''
        dict_0 = {str_0: str_0}
        bytes_0 = b'\xe9H\xff\xfe\x18\xe1\x9e\xf9&\xd3m\x80\xe18\xc0XQ\xbb'
        list_0 = [dict_0, str_0, bytes_0, dict_0, dict_0]
        float_0 = 1371.16337
        var_0 = module_0.load_list_of_blocks(list_0, float_0, float_0, float_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = '?>*7Zs=C,>u$c|!!'
        dict_0 = {str_0: str_0}
        bytes_0 = b'\xb13\x02/2\xfb'
        str_1 = 'fieglob'
        list_0 = []
        str_2 = 'ssl_check_wert_permissins'
        tuple_0 = None
        var_0 = module_0.load_list_of_roles(list_0, str_2, tuple_0)
        list_1 = [dict_0, str_0, bytes_0, str_2, dict_0, dict_0]
        float_0 = 1000.0
        str_3 = ',`@w7KHT%&.(]K]'
        bytes_1 = b'\x10d\x17\xda\xa1\xb5\xbd\xbe'
        set_0 = {str_1, str_0, bytes_1, str_3}
        str_4 = 'Class to easily allow comparing numbers\n\n    Largely this exists to make comparing an integer and a string on py3\n    so that it works like py2.\n    '
        var_1 = module_0.load_list_of_blocks(list_1, tuple_0, str_3, set_0, list_0, float_0, str_4)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = 'include'
        str_1 = 'PeCt.yml'
        str_2 = {str_0: str_1}
        str_3 = [str_2, str_0]
        var_0 = None
        bool_0 = False
        var_1 = module_0.load_list_of_tasks(str_3, var_0, var_0, var_0, var_0, bool_0, var_0, var_0)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = 'include'
        str_1 = 'test.yml'
        str_2 = {str_0: str_1}
        str_3 = 'action'
        str_4 = 'module'
        str_5 = 'args'
        str_6 = 'debug'
        str_7 = 'msg'
        str_8 = 'hello'
        str_9 = {str_7: str_8}
        str_10 = {str_4: str_6, str_5: str_9}
        str_11 = {str_3: str_10}
        str_12 = [str_2, str_11]
        var_0 = None
        bool_0 = True
        var_1 = module_0.load_list_of_tasks(str_12, var_0, var_0, var_0, var_0, bool_0, var_0, var_0)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = '?>7s=C,>u$c|!!'
        bytes_0 = None
        bytes_1 = b';\xcfh$\xab=\xd2\x98\xbe\xbbz'
        set_0 = {bytes_1, bytes_0, str_0}
        bool_0 = None
        var_0 = module_0.load_list_of_blocks(bytes_0, set_0, bool_0, bool_0)
        dict_0 = {str_0: str_0, bytes_0: bool_0}
        bytes_2 = b'i\x1f\x956r\x12\xabU\x9c\x16\xdc1_\xfbTm]$\x01\x19'
        list_0 = []
        str_1 = 'ssl_check_wert_permissins'
        tuple_0 = None
        var_1 = module_0.load_list_of_roles(list_0, str_1, tuple_0)
        float_0 = 100.0
        var_2 = module_0.load_list_of_blocks(bool_0, set_0, tuple_0, tuple_0, float_0)
        list_1 = [dict_0, str_0, bytes_2, dict_0, dict_0]
        var_3 = module_0.load_list_of_blocks(list_1, str_0, dict_0, list_1, tuple_0)
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = 'block'
        str_1 = 'This block should return None'
        str_2 = {str_0: str_1}
        str_3 = 'include_tasks'
        str_4 = 'file'
        str_5 = {str_3: str_4}
        str_6 = [str_2, str_5]
        var_0 = None
        bool_0 = False
        var_1 = module_0.load_list_of_tasks(str_6, var_0, var_0, var_0, var_0, bool_0, var_0, var_0)
    except BaseException:
        pass