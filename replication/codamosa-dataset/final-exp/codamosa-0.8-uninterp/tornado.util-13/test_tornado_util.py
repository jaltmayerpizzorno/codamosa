# Automatically generated by Pynguin.
import tornado.util as module_0
import builtins as module_1

def test_case_0():
    pass

def test_case_1():
    str_0 = '>=t_N4An'
    object_dict_0 = module_0.ObjectDict()
    object_dict_0.__setattr__(str_0, str_0)

def test_case_2():
    base_exception_0 = module_1.BaseException()
    optional_0 = module_0.errno_from_exception(base_exception_0)
    gzip_decompressor_0 = module_0.GzipDecompressor()
    bytes_0 = gzip_decompressor_0.flush()

def test_case_3():
    base_exception_0 = module_1.BaseException()
    optional_0 = module_0.errno_from_exception(base_exception_0)

def test_case_4():
    var_0 = module_0.doctests()

def test_case_5():
    int_0 = 2
    int_1 = 3
    int_2 = [int_0, int_1]
    var_0 = lambda a, b, c, d: int_1
    str_0 = 'a'
    arg_replacer_0 = module_0.ArgReplacer(var_0, str_0)
    var_1 = print(arg_replacer_0)
    tuple_0 = arg_replacer_0.replace(int_0, int_2, int_1)
    any_0 = arg_replacer_0.get_old_value(int_2, int_2)
    var_2 = lambda a, b, c, d: int_1
    arg_replacer_1 = module_0.ArgReplacer(var_2, str_0)

def test_case_6():
    int_0 = 1808
    int_1 = 5
    int_2 = 0
    var_0 = lambda a, b, c, d: int_2
    int_3 = [int_1, int_0]
    var_1 = dict(a=int_0, b=int_1)
    str_0 = 'b'
    arg_replacer_0 = module_0.ArgReplacer(var_0, str_0)
    var_2 = print(arg_replacer_0)
    tuple_0 = arg_replacer_0.replace(int_3, int_3, var_1)

def test_case_7():
    int_0 = 2
    int_1 = 3
    int_2 = [int_0, int_1]
    int_3 = 5
    var_0 = dict(a=int_1, b=int_3)
    int_4 = 0
    var_1 = lambda a, b, c, d: int_4
    str_0 = 'a'
    arg_replacer_0 = module_0.ArgReplacer(var_1, str_0)
    var_2 = print(arg_replacer_0)
    int_5 = 10
    tuple_0 = arg_replacer_0.replace(int_5, int_2, var_0)
    any_0 = arg_replacer_0.get_old_value(int_2, var_0)
    int_6 = [int_0, int_1]
    var_3 = dict(a=int_1, b=int_3)
    var_4 = lambda a, b, c, d: int_4
    str_1 = ''
    arg_replacer_1 = module_0.ArgReplacer(var_4, str_1)
    var_5 = print(arg_replacer_1)
    tuple_1 = arg_replacer_1.replace(int_5, int_6, var_3)

def test_case_8():
    int_0 = -18
    int_1 = 3
    int_2 = [int_0, int_1]
    int_3 = 5
    var_0 = dict(a=int_1, b=int_3)
    int_4 = 0
    var_1 = lambda a, b, c, d: int_4
    str_0 = '\x0b'
    arg_replacer_0 = module_0.ArgReplacer(var_1, str_0)
    var_2 = print(arg_replacer_0)
    int_5 = 10
    tuple_0 = arg_replacer_0.replace(int_5, int_2, var_0)
    any_0 = arg_replacer_0.get_old_value(int_2, var_0)
    int_6 = [int_0, int_1]
    var_3 = dict(a=int_1, b=int_3)
    var_4 = lambda a, b, c, d: int_4
    str_1 = 'b'
    arg_replacer_1 = module_0.ArgReplacer(var_4, str_1)
    var_5 = print(arg_replacer_1)
    tuple_1 = arg_replacer_1.replace(int_5, int_6, var_3)

def test_case_9():
    int_0 = 2
    int_1 = 3
    int_2 = [int_0, int_1]
    int_3 = 5
    var_0 = dict(a=int_1, b=int_3)
    int_4 = 0
    var_1 = lambda a, b, c, d: int_2
    str_0 = 'a'
    arg_replacer_0 = module_0.ArgReplacer(var_1, str_0)
    var_2 = print(arg_replacer_0)
    int_5 = 10
    tuple_0 = arg_replacer_0.replace(int_5, int_2, var_0)
    any_0 = arg_replacer_0.get_old_value(int_2, var_0)
    int_6 = [int_0, int_1]
    var_3 = dict(a=int_1, b=int_3)
    var_4 = lambda a, b, c, d: int_4
    str_1 = 'b'
    arg_replacer_1 = module_0.ArgReplacer(var_4, str_1)
    str_2 = 'p'
    dict_0 = {str_1: arg_replacer_0, str_2: int_2}
    tuple_1 = arg_replacer_1.replace(int_2, str_2, dict_0)
    var_5 = print(arg_replacer_1)
    tuple_2 = arg_replacer_1.replace(int_5, int_6, var_3)