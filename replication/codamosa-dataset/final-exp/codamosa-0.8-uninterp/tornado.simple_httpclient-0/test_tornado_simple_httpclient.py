# Automatically generated by Pynguin.
import tornado.simple_httpclient as module_0
import tornado.ioloop as module_1
import tornado.httputil as module_2
import concurrent.futures._base as module_3
import tornado.httpclient as module_4

def test_case_0():
    pass

def test_case_1():
    str_0 = 'tornado.simple_httpclient'
    h_t_t_p_timeout_error_0 = module_0.HTTPTimeoutError(str_0)

def test_case_2():
    str_0 = 'r~4W11-]'
    h_t_t_p_timeout_error_0 = module_0.HTTPTimeoutError(str_0)
    str_1 = h_t_t_p_timeout_error_0.__str__()

def test_case_3():
    str_0 = 'e~o8f@xEr\r@e'
    h_t_t_p_stream_closed_error_0 = module_0.HTTPStreamClosedError(str_0)

def test_case_4():
    str_0 = '\rV,\x0cS|m$'
    h_t_t_p_stream_closed_error_0 = module_0.HTTPStreamClosedError(str_0)
    str_1 = h_t_t_p_stream_closed_error_0.__str__()

def test_case_5():
    i_o_loop_0 = module_1.IOLoop()
    h_t_t_p_headers_0 = module_2.HTTPHeaders()
    simple_async_h_t_t_p_client_0 = module_0.SimpleAsyncHTTPClient()
    str_0 = 'Ec1=>)'
    h_t_t_p_stream_closed_error_0 = module_0.HTTPStreamClosedError(str_0)
    str_1 = 'tornado.simple_httpclient'
    future_0 = module_3.Future()
    async_h_t_t_p_client_0 = module_4.AsyncHTTPClient()
    future_1 = async_h_t_t_p_client_0.fetch(str_1)

def test_case_6():
    i_o_loop_0 = module_1.IOLoop()
    h_t_t_p_headers_0 = module_2.HTTPHeaders()
    iterator_0 = h_t_t_p_headers_0.__iter__()
    simple_async_h_t_t_p_client_0 = module_0.SimpleAsyncHTTPClient()

def test_case_7():
    i_o_loop_0 = module_1.IOLoop()
    h_t_t_p_headers_0 = module_2.HTTPHeaders()
    iterator_0 = h_t_t_p_headers_0.__iter__()
    simple_async_h_t_t_p_client_0 = module_0.SimpleAsyncHTTPClient()
    str_0 = 'tornado.simple_httpclient'
    future_0 = module_3.Future()
    int_0 = 787
    async_h_t_t_p_client_0 = module_4.AsyncHTTPClient()
    future_1 = async_h_t_t_p_client_0.fetch(str_0)
    simple_async_h_t_t_p_client_0.close()
    simple_async_h_t_t_p_client_0.initialize(int_0)

def test_case_8():
    i_o_loop_0 = module_1.IOLoop()
    h_t_t_p_headers_0 = module_2.HTTPHeaders()
    iterator_0 = h_t_t_p_headers_0.__iter__()
    simple_async_h_t_t_p_client_0 = module_0.SimpleAsyncHTTPClient()
    str_0 = 'tornado.simple_httpclient'
    int_0 = 10
    int_1 = -1521
    none_type_0 = None
    simple_async_h_t_t_p_client_0.initialize(int_0, int_1, none_type_0, int_0)
    future_0 = module_3.Future()
    int_2 = 787
    async_h_t_t_p_client_0 = module_4.AsyncHTTPClient()
    future_1 = async_h_t_t_p_client_0.fetch(str_0)
    simple_async_h_t_t_p_client_0.close()
    simple_async_h_t_t_p_client_0.initialize(int_2)