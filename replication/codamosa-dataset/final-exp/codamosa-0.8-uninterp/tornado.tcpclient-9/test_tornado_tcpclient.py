# Automatically generated by Pynguin.
import tornado.tcpclient as module_0
import tornado.ioloop as module_1
import socket as module_2
import concurrent.futures._base as module_3
import datetime as module_4
import _asyncio as module_5

def test_case_0():
    pass

def test_case_1():
    t_c_p_client_0 = module_0.TCPClient()

def test_case_2():
    int_0 = 21
    t_c_p_client_0 = module_0.TCPClient(int_0)

def test_case_3():
    t_c_p_client_0 = module_0.TCPClient()
    t_c_p_client_0.close()

def test_case_4():
    int_0 = 37
    t_c_p_client_0 = module_0.TCPClient(int_0)
    t_c_p_client_0.close()

def test_case_5():
    i_o_loop_0 = module_1.IOLoop()
    t_c_p_client_0 = module_0.TCPClient()
    float_0 = 2.0
    selectable_0 = module_1._Selectable()
    future_0 = None
    tuple_0 = (selectable_0, future_0)
    list_0 = [tuple_0]
    i_o_loop_0.make_current()
    socket_0 = module_2.socket()
    connector_0 = module_0._Connector(list_0, socket_0)
    connector_0.clear_timeouts()
    connector_0.on_timeout()
    connector_0.close_streams()
    connector_0.set_timeout(float_0)
    connector_0.clear_timeout()
    future_1 = module_3.Future()
    callable_0 = None
    connector_1 = module_0._Connector(list_0, callable_0)
    connector_0.on_connect_timeout()

def test_case_6():
    t_c_p_client_0 = module_0.TCPClient()
    t_c_p_client_0.close()
    i_o_loop_0 = module_1.IOLoop()
    i_o_loop_1 = i_o_loop_0.instance()
    t_c_p_client_1 = module_0.TCPClient()
    float_0 = 1.5
    address_family_0 = module_2.AddressFamily.AF_AX25
    selectable_0 = module_1._Selectable()
    future_0 = None
    tuple_0 = (selectable_0, future_0)
    tuple_1 = (address_family_0, tuple_0)
    list_0 = [tuple_1, tuple_1, tuple_1]
    tuple_2 = (list_0, list_0)
    dict_0 = {}
    tuple_3 = (tuple_2, dict_0)
    list_1 = [tuple_3]
    list_2 = []
    timedelta_0 = module_4.timedelta(*list_2)
    connector_0 = module_0._Connector(list_1, timedelta_0)
    connector_0.set_timeout(float_0)
    future_1 = module_3.Future()
    connector_0.set_connect_timeout(float_0)

def test_case_7():
    i_o_loop_0 = module_1.IOLoop()
    t_c_p_client_0 = module_0.TCPClient()
    selectable_0 = module_1._Selectable()
    future_0 = None
    tuple_0 = (selectable_0, future_0)
    list_0 = [tuple_0]
    i_o_loop_0.make_current()
    socket_0 = module_2.socket()
    connector_0 = module_0._Connector(list_0, socket_0)
    connector_0.clear_timeouts()
    connector_0.on_timeout()
    connector_0.close_streams()
    connector_0.clear_timeout()
    future_1 = module_3.Future()
    callable_0 = None
    connector_1 = module_0._Connector(list_0, callable_0)
    connector_0.on_connect_timeout()

def test_case_8():
    i_o_loop_0 = module_1.IOLoop()
    t_c_p_client_0 = module_0.TCPClient()
    selectable_0 = module_1._Selectable()
    future_0 = None
    tuple_0 = (selectable_0, future_0)
    list_0 = [tuple_0]
    i_o_loop_0.make_current()
    socket_0 = module_2.socket()
    connector_0 = module_0._Connector(list_0, socket_0)
    connector_0.clear_timeouts()
    connector_0.close_streams()
    connector_0.clear_timeout()
    future_1 = module_3.Future()
    callable_0 = None
    connector_1 = module_0._Connector(list_0, callable_0)
    connector_0.on_connect_timeout()

def test_case_9():
    t_c_p_client_0 = module_0.TCPClient()
    t_c_p_client_0.close()
    t_c_p_client_0.close()
    i_o_loop_0 = module_1.IOLoop()
    i_o_loop_1 = i_o_loop_0.instance()
    float_0 = 1.5
    selectable_0 = module_1._Selectable()
    future_0 = None
    tuple_0 = (selectable_0, future_0)
    list_0 = [tuple_0]
    list_1 = []
    timedelta_0 = module_4.timedelta(*list_1)
    connector_0 = module_0._Connector(list_0, timedelta_0)
    connector_0.set_timeout(float_0)
    connector_0.clear_timeouts()
    future_1 = module_3.Future()

def test_case_10():
    t_c_p_client_0 = module_0.TCPClient()
    t_c_p_client_0.close()
    t_c_p_client_0.close()
    i_o_loop_0 = module_1.IOLoop()
    t_c_p_client_1 = module_0.TCPClient()
    selectable_0 = module_1._Selectable()
    future_0 = None
    tuple_0 = (selectable_0, future_0)
    dict_0 = {}
    future_1 = module_5.Future(**dict_0)
    list_0 = None
    tuple_1 = (list_0,)
    timedelta_0 = module_4.timedelta()
    tuple_2 = (tuple_1, timedelta_0)
    list_1 = [tuple_0, tuple_0, tuple_2, tuple_2]
    connector_0 = module_0._Connector(list_1, t_c_p_client_0)
    connector_0.on_connect_timeout()

def test_case_11():
    i_o_loop_0 = module_1.IOLoop()
    t_c_p_client_0 = module_0.TCPClient()
    address_family_0 = module_2.AddressFamily.AF_AX25
    selectable_0 = module_1._Selectable()
    i_o_loop_0.clear_current()
    future_0 = None
    int_0 = selectable_0.fileno()
    tuple_0 = (selectable_0, future_0)
    i_o_loop_0.make_current()
    list_0 = [tuple_0]
    callable_0 = None
    connector_0 = module_0._Connector(list_0, callable_0)
    connector_0.on_connect_timeout()
    future_1 = module_5.Future()
    iterator_0 = None
    connector_0.on_connect_done(iterator_0, address_family_0, tuple_0, future_1)