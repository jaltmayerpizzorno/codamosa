# Automatically generated by Pynguin.
import pymonet.either as module_0

def test_case_0():
    pass

def test_case_1():
    var_0 = None
    left_0 = module_0.Left(var_0)

def test_case_2():
    bool_0 = False
    either_0 = module_0.Either(bool_0)
    var_0 = either_0.to_box()

def test_case_3():
    float_0 = -121.353
    tuple_0 = None
    dict_0 = {float_0: float_0, float_0: tuple_0}
    left_0 = module_0.Left(dict_0)
    bool_0 = left_0.is_right()

def test_case_4():
    str_0 = 'Monad is not functor'
    left_0 = module_0.Left(str_0)
    str_1 = 'Monad is functor'
    right_0 = module_0.Right(str_1)
    var_0 = lambda x: x
    var_1 = lambda x: x
    var_2 = left_0.case(var_0, var_1)
    var_3 = lambda x: x
    var_4 = lambda x: x
    var_5 = right_0.case(var_3, var_4)

def test_case_5():
    int_0 = 1
    either_0 = module_0.Either(int_0)
    either_1 = module_0.Either(int_0)
    either_2 = module_0.Either(int_0)
    int_1 = 2
    either_3 = module_0.Either(int_0)
    either_4 = module_0.Either(int_0)
    either_5 = module_0.Either(int_1)
    bool_0 = either_4.__eq__(either_5)
    either_6 = module_0.Either(int_0)
    either_7 = module_0.Either(int_0)
    bool_1 = either_6.__eq__(either_7)
    left_0 = module_0.Left(int_0)
    bool_2 = left_0.__eq__(left_0)
    left_1 = module_0.Left(int_0)
    left_2 = module_0.Left(int_1)
    right_0 = module_0.Right(either_1)
    var_0 = None
    right_1 = module_0.Right(var_0)
    left_3 = module_0.Left(var_0)
    left_4 = module_0.Left(var_0)

def test_case_6():
    int_0 = 1
    either_0 = module_0.Either(int_0)
    bool_0 = either_0.__eq__(int_0)
    either_1 = module_0.Either(int_0)
    either_2 = module_0.Either(int_0)
    int_1 = 2
    either_3 = module_0.Either(int_0)
    either_4 = module_0.Either(int_0)
    either_5 = module_0.Either(int_1)
    bool_1 = either_4.__eq__(either_5)
    var_0 = None
    right_0 = module_0.Right(var_0)