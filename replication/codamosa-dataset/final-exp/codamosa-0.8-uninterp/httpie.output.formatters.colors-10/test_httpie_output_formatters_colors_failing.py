# Automatically generated by Pynguin.
import httpie.context as module_0
import httpie.output.formatters.colors as module_1

def test_case_0():
    try:
        environment_0 = module_0.Environment()
        color_formatter_0 = module_1.ColorFormatter(environment_0, environment_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'R+n)k]H\x0c97sAz.}/'
        float_0 = 3867.0
        int_0 = -190
        optional_0 = module_1.get_lexer(str_0, float_0, int_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = "' (i.e., the response\n    headers and body is printed), if standard output is not redirected.\n    If the output is piped to another program or to a file, then only the\n    response body is printed by deault.\n\n    "
        dict_0 = {}
        environment_0 = module_0.Environment(**dict_0)
        str_1 = '){S$1)\x0cTa\\\r"/'
        simplified_h_t_t_p_lexer_0 = module_1.SimplifiedHTTPLexer()
        bytes_0 = b'\x93\xc2\xa398S\x89\xbc\x9fq'
        str_2 = 'c\\/\x0c#jH\x0b'
        optional_0 = module_1.get_lexer(str_2, bytes_0)
        optional_1 = module_1.get_lexer(str_1, str_0, str_0)
        str_3 = 'z(Uh47A\\NJJ6!z'
        str_4 = 'FJQc$n.V&+1Mb{?F+")'
        dict_1 = {str_3: str_3, str_4: str_3, str_3: str_4}
        list_0 = [dict_1]
        color_formatter_0 = module_1.ColorFormatter(environment_0, list_0)
    except BaseException:
        pass