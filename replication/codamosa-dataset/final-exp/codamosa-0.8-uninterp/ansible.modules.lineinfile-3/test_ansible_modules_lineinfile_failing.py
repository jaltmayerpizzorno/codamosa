# Automatically generated by Pynguin.
import ansible.modules.lineinfile as module_0

def test_case_0():
    try:
        set_0 = set()
        int_0 = -2520
        tuple_0 = None
        var_0 = module_0.write_changes(set_0, int_0, tuple_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'N:]RmY09\\:'
        dict_0 = {str_0: str_0}
        set_0 = None
        var_0 = module_0.check_file_attrs(str_0, dict_0, str_0, set_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '^(host=).*'
        bool_0 = True
        var_0 = module_0.present(bool_0, str_0, str_0, bool_0, str_0, bool_0, bool_0, bool_0, bool_0, bool_0, bool_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '/t+/conig'
        bool_0 = False
        var_0 = module_0.present(bool_0, str_0, str_0, bool_0, str_0, bool_0, bool_0, bool_0, bool_0, bool_0, bool_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = '/t"p+/wo}5n_)f$&'
        float_0 = 0.0001
        int_0 = 2064
        var_0 = module_0.absent(float_0, str_0, int_0, float_0, float_0, float_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = '/tmp+/config'
        bool_0 = True
        var_0 = module_0.present(bool_0, str_0, str_0, bool_0, str_0, bool_0, bool_0, bool_0, bool_0, bool_0, bool_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = '/tmp/config'
        bool_0 = True
        var_0 = module_0.present(bool_0, str_0, str_0, bool_0, str_0, bool_0, bool_0, bool_0, bool_0, bool_0, bool_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = '/Tmpq+/coNfig'
        bool_0 = True
        list_0 = [str_0, bool_0]
        str_1 = '/proc/1/environ'
        float_0 = 2.0
        bool_1 = False
        list_1 = []
        bytes_0 = b''
        str_2 = '-t)](+T#;sVxkEgOk|js'
        str_3 = '"\x0clo#RL0B"xCa_p'
        str_4 = 'G'
        dict_0 = {str_2: str_1, str_0: str_0, str_3: list_0, str_4: str_2}
        set_0 = {bool_1, str_0}
        dict_1 = {str_1: str_2}
        tuple_0 = (set_0, dict_1)
        int_0 = -3043
        var_0 = module_0.present(list_0, str_1, float_0, bool_1, list_1, bytes_0, dict_0, set_0, tuple_0, int_0, tuple_0)
    except BaseException:
        pass