# Automatically generated by Pynguin.
import ansible.modules.subversion as module_0

def test_case_0():
    try:
        var_0 = None
        subversion_0 = module_0.Subversion(var_0, var_0, var_0, var_0, var_0, var_0, var_0, var_0)
        var_1 = subversion_0.revert()
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = 2021
        int_1 = -58
        str_0 = 'oYX8cH28N0U'
        list_0 = []
        subversion_0 = module_0.Subversion(int_0, int_1, str_0, str_0, str_0, int_1, list_0, list_0)
        var_0 = subversion_0.update()
    except BaseException:
        pass

def test_case_2():
    try:
        int_0 = 268
        float_0 = -4644.952217
        str_0 = 'o">;y\t0'
        float_1 = 512.0
        dict_0 = {float_0: str_0, str_0: int_0, str_0: float_1}
        bool_0 = False
        str_1 = 'b0B$\x0bW8^'
        tuple_0 = (dict_0, bool_0, str_1)
        int_1 = None
        list_0 = []
        subversion_0 = module_0.Subversion(str_0, dict_0, int_0, bool_0, tuple_0, int_1, list_0, list_0)
        subversion_1 = module_0.Subversion(subversion_0, subversion_0, tuple_0, float_0, tuple_0, subversion_0, bool_0, dict_0)
        set_0 = {subversion_1, float_1}
        bool_1 = True
        int_2 = -2974
        subversion_2 = module_0.Subversion(int_0, float_0, set_0, dict_0, tuple_0, bool_1, list_0, int_2)
        var_0 = subversion_2.is_svn_repo()
    except BaseException:
        pass

def test_case_3():
    try:
        var_0 = None
        subversion_0 = module_0.Subversion(var_0, var_0, var_0, var_0, var_0, var_0, var_0, var_0)
        var_1 = subversion_0.export()
    except BaseException:
        pass

def test_case_4():
    try:
        bool_0 = True
        set_0 = {bool_0}
        bytes_0 = b'C\xde\xa6%r/\xd0\xce]\xc6\xcc\x94?"\xd1\x0e97'
        list_0 = [bytes_0]
        dict_0 = {}
        float_0 = 2.0
        float_1 = -2333.9589
        bytes_1 = b'\x89<\xa2rb\xe0J\xce\x9d\xb1\x1f`e\xf1\xe44\xf5'
        int_0 = -3179
        list_1 = [int_0, int_0]
        str_0 = '<O.A_L$WydNJ^c<5/WsC'
        str_1 = 'WXxAuEl'
        str_2 = 'ansible.modules.subversion'
        subversion_0 = module_0.Subversion(int_0, float_0, list_1, str_0, dict_0, str_1, str_2, bool_0)
        subversion_1 = module_0.Subversion(set_0, list_0, dict_0, float_0, float_1, bytes_1, subversion_0, float_1)
        var_0 = subversion_1.switch()
    except BaseException:
        pass

def test_case_5():
    try:
        int_0 = 3232
        bool_0 = False
        tuple_0 = ()
        dict_0 = {}
        bool_1 = False
        list_0 = [bool_0]
        float_0 = 1000.0
        str_0 = 'dbX@-)BB'
        str_1 = ' returns a human readable representation of the task '
        int_1 = -3552
        str_2 = "ux$[t'XM(V"
        bytes_0 = b'\x01\xda\xf9\xd1\xa4\xea\xcf\xe6\xe2p\x11\x936)0"'
        subversion_0 = module_0.Subversion(float_0, str_0, str_1, bool_0, int_1, str_2, bytes_0, dict_0)
        subversion_1 = module_0.Subversion(int_0, float_0, bool_0, tuple_0, dict_0, tuple_0, bool_1, list_0)
        var_0 = subversion_1.needs_update()
    except BaseException:
        pass

def test_case_6():
    try:
        bytes_0 = b'\r\x93H\xe4s$q\xd0JTbd\xbe'
        set_0 = {bytes_0, bytes_0}
        dict_0 = None
        str_0 = 'h%j'
        list_0 = [dict_0, str_0]
        tuple_0 = ()
        float_0 = 175.949
        subversion_0 = module_0.Subversion(set_0, list_0, str_0, list_0, tuple_0, set_0, float_0, bytes_0)
        tuple_1 = (subversion_0,)
        int_0 = 1988
        str_1 = 'qrXzS'
        tuple_2 = (tuple_0,)
        tuple_3 = (subversion_0, str_1)
        subversion_1 = module_0.Subversion(bytes_0, tuple_1, tuple_0, int_0, str_1, tuple_2, str_0, tuple_3)
        var_0 = subversion_1.get_remote_revision()
    except BaseException:
        pass

def test_case_7():
    try:
        bytes_0 = b'\xd1\xf63\xd9'
        str_0 = ' Z8*\tz@zzjINx'
        dict_0 = {str_0: bytes_0, str_0: str_0}
        float_0 = 4225.6426
        int_0 = 4314
        str_1 = '$>Ya\\'
        list_0 = [dict_0, int_0, dict_0]
        tuple_0 = ()
        subversion_0 = None
        complex_0 = None
        tuple_1 = (tuple_0, subversion_0, complex_0)
        bool_0 = False
        int_1 = -5188
        str_2 = '\x0bV51`/,+EQ0<|;lV'
        int_2 = -659
        subversion_1 = module_0.Subversion(tuple_1, float_0, bool_0, int_1, str_0, int_0, str_2, int_2)
        subversion_2 = module_0.Subversion(str_0, dict_0, float_0, int_0, str_1, int_0, list_0, subversion_1)
        var_0 = subversion_2.has_local_mods()
    except BaseException:
        pass

def test_case_8():
    try:
        bool_0 = True
        float_0 = 359.059
        tuple_0 = ()
        bool_1 = True
        tuple_1 = None
        dict_0 = {tuple_0: bool_1, tuple_0: float_0, bool_0: tuple_1, tuple_0: bool_0}
        set_0 = set()
        bytes_0 = b'\xc5\xa8'
        subversion_0 = module_0.Subversion(bool_0, float_0, tuple_0, dict_0, set_0, bytes_0, dict_0, dict_0)
        var_0 = subversion_0.update()
    except BaseException:
        pass

def test_case_9():
    try:
        bool_0 = False
        str_0 = '}HH$ \tYFz\t&1z\n'
        bytes_0 = b'\xd2\xb1N\x90S\x00\x17\xf0&\xeb\xfe\xe4S\r5\x90\xd8'
        list_0 = [str_0, str_0, str_0]
        bool_1 = False
        int_0 = -354
        bool_2 = True
        set_0 = set()
        dict_0 = {bool_1: list_0, str_0: int_0, str_0: bool_1, bool_2: set_0}
        float_0 = None
        tuple_0 = (float_0,)
        int_1 = 991
        subversion_0 = module_0.Subversion(tuple_0, list_0, str_0, int_0, int_0, set_0, int_1, set_0)
        str_1 = '%s should be a list or None but is %s'
        int_2 = -2251
        subversion_1 = module_0.Subversion(bool_1, list_0, bytes_0, list_0, dict_0, subversion_0, str_1, int_2)
        subversion_2 = module_0.Subversion(str_0, bytes_0, list_0, bool_1, str_0, int_0, bool_2, subversion_1)
        var_0 = subversion_2.checkout(bool_0)
    except BaseException:
        pass

def test_case_10():
    try:
        bool_0 = True
        str_0 = '}HH$ \tYFz\t&1z\n'
        bytes_0 = b'4]\xc2\n\x8e\x9ce\x91_\x94-\xbb\xc4'
        list_0 = [str_0, str_0, str_0]
        bool_1 = False
        int_0 = -354
        bool_2 = True
        set_0 = set()
        dict_0 = {bool_1: list_0, str_0: int_0, str_0: bool_1, bool_2: set_0}
        float_0 = None
        tuple_0 = (float_0,)
        int_1 = 991
        subversion_0 = module_0.Subversion(tuple_0, list_0, str_0, int_0, int_0, set_0, int_1, set_0)
        str_1 = '%s should be a list or None but is %s'
        int_2 = 239
        subversion_1 = module_0.Subversion(bool_1, list_0, bytes_0, list_0, dict_0, subversion_0, str_1, int_2)
        subversion_2 = module_0.Subversion(str_0, bytes_0, list_0, bool_1, str_0, int_0, bool_2, subversion_1)
        var_0 = subversion_2.checkout(bool_0)
    except BaseException:
        pass

def test_case_11():
    try:
        bytes_0 = b'\xa8:\xcco\x9f'
        float_0 = None
        set_0 = {float_0, float_0}
        dict_0 = {bytes_0: bytes_0, bytes_0: set_0}
        str_0 = 'NztQG.zI/ r\r$[u'
        str_1 = '@U'
        list_0 = [dict_0, str_1, dict_0]
        bytes_1 = b'\x95~\x01\x94\xbd$#\x04\xc6\xa4\x12\xdc\x18a\xc2\xb7#'
        float_1 = 0.5
        bool_0 = True
        str_2 = 'LO81+!/kQ_7]$Uy^'
        tuple_0 = (str_0, str_2)
        str_3 = '&:HT'
        float_2 = 4795.072791
        bytes_2 = b''
        set_1 = {bytes_2, str_2, str_0, bytes_1}
        bytes_3 = b''
        subversion_0 = module_0.Subversion(float_2, bytes_2, dict_0, set_1, bytes_3, dict_0, list_0, tuple_0)
        subversion_1 = module_0.Subversion(dict_0, bool_0, tuple_0, str_3, subversion_0, dict_0, set_1, tuple_0)
        var_0 = subversion_1.export(float_1)
    except BaseException:
        pass