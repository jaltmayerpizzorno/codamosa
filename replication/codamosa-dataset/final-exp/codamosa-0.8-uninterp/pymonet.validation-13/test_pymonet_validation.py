# Automatically generated by Pynguin.
import pymonet.validation as module_0

def test_case_0():
    pass

def test_case_1():
    str_0 = '25oI%o*)G,~\\'
    bool_0 = False
    validation_0 = module_0.Validation(str_0, bool_0)

def test_case_2():
    complex_0 = None
    tuple_0 = ()
    float_0 = 2269.415
    validation_0 = module_0.Validation(tuple_0, float_0)
    var_0 = validation_0.__eq__(complex_0)

def test_case_3():
    bytes_0 = b'\xf2\xe5\xf9\xe4J^\x98\x13\xaa0\x9a)\n\xed'
    tuple_0 = ()
    bool_0 = True
    dict_0 = {bytes_0: tuple_0, tuple_0: bool_0, bytes_0: bool_0, tuple_0: bytes_0}
    validation_0 = module_0.Validation(tuple_0, dict_0)
    var_0 = validation_0.to_try()
    set_0 = {bytes_0}
    validation_1 = module_0.Validation(bytes_0, set_0)
    var_1 = validation_1.to_maybe()

def test_case_4():
    str_0 = 'nw F}'
    int_0 = 3505
    validation_0 = module_0.Validation(str_0, int_0)
    var_0 = validation_0.to_box()

def test_case_5():
    dict_0 = {}
    list_0 = [dict_0, dict_0, dict_0]
    bool_0 = False
    validation_0 = module_0.Validation(list_0, bool_0)
    var_0 = validation_0.__eq__(list_0)
    var_1 = validation_0.to_lazy()

def test_case_6():
    bytes_0 = b'`\x915\x8d\x90+4\xed\xf9\x0be\xa5\x99\xe0\xe0'
    tuple_0 = ()
    dict_0 = {bytes_0: bytes_0, bytes_0: tuple_0, bytes_0: bytes_0}
    int_0 = 3378
    set_0 = {int_0}
    list_0 = []
    list_1 = [list_0, bytes_0, dict_0, int_0]
    bytes_1 = b'\xf8\xbd\x9bgMg\x8a'
    validation_0 = module_0.Validation(list_1, bytes_1)
    validation_1 = module_0.Validation(validation_0, list_0)
    var_0 = validation_1.__eq__(set_0)
    bool_0 = False
    bytes_2 = b'\xed'
    validation_2 = module_0.Validation(bool_0, bytes_2)
    float_0 = -751.7145
    validation_3 = module_0.Validation(float_0, float_0)
    validation_4 = module_0.Validation(tuple_0, list_0)
    var_1 = validation_4.to_maybe()

def test_case_7():
    bytes_0 = b'z\xfb\x7f\xb9\xb9'
    tuple_0 = (bytes_0,)
    dict_0 = {}
    validation_0 = module_0.Validation(tuple_0, dict_0)
    var_0 = validation_0.__eq__(validation_0)
    bool_0 = False
    validation_1 = module_0.Validation(bool_0, dict_0)
    tuple_1 = None
    int_0 = -634
    validation_2 = module_0.Validation(validation_1, dict_0)
    var_1 = validation_1.__str__()
    list_0 = [tuple_1, int_0]
    set_0 = set()
    validation_3 = module_0.Validation(set_0, list_0)
    var_2 = validation_1.to_either()
    var_3 = validation_3.to_box()
    list_1 = [bool_0, list_0, bool_0, bool_0]
    validation_4 = module_0.Validation(list_1, validation_2)
    validation_5 = module_0.Validation(int_0, validation_4)
    var_4 = validation_3.to_either()

def test_case_8():
    bytes_0 = b'\xaa\x84TG\xdb\xac?\xe4\x80\xce1L\xc3C\r\x91\xf2\xbb'
    tuple_0 = (bytes_0,)
    dict_0 = {}
    validation_0 = module_0.Validation(tuple_0, dict_0)
    var_0 = validation_0.__eq__(validation_0)
    float_0 = 4893.36489
    bool_0 = False
    validation_1 = module_0.Validation(bool_0, dict_0)
    var_1 = validation_1.__eq__(float_0)
    validation_2 = module_0.Validation(validation_1, dict_0)
    var_2 = validation_1.__str__()
    var_3 = validation_1.to_either()
    bytes_1 = b'\x11\xea\x06[\x0f\x1e\xbeT6\x8a\x1a\xe5\xe2\xab\xf8\x1d'
    bool_1 = True
    validation_3 = module_0.Validation(dict_0, bytes_1)
    list_0 = [bool_1, dict_0]
    int_0 = -2617
    validation_4 = module_0.Validation(list_0, int_0)
    var_4 = validation_4.__eq__(validation_0)
    var_5 = validation_0.to_maybe()