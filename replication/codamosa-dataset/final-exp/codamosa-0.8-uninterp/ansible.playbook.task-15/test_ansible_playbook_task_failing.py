# Automatically generated by Pynguin.
import ansible.playbook.task as module_0
import ansible.playbook.role as module_1
import ansible.playbook.block as module_2

def test_case_0():
    try:
        task_0 = module_0.Task()
        int_0 = 1391
        float_0 = -2093.0
        str_0 = '.'
        var_0 = task_0.load(int_0, float_0, float_0, str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = b'\x0e7\x03\xec\x90\x98\x0f\x17\x82\x08\xe6\xceU\x99'
        dict_0 = {bytes_0: bytes_0}
        list_0 = [dict_0, dict_0]
        task_0 = module_0.Task(list_0)
        task_1 = module_0.Task(dict_0, task_0)
        var_0 = task_1.get_name()
        task_2 = module_0.Task()
        var_1 = task_2.get_vars()
        float_0 = 624.0
        var_2 = task_2.post_validate(float_0)
    except BaseException:
        pass

def test_case_2():
    try:
        dict_0 = {}
        task_0 = module_0.Task()
        var_0 = task_0.load(dict_0)
    except BaseException:
        pass

def test_case_3():
    try:
        task_0 = module_0.Task()
        bool_0 = True
        var_0 = task_0.post_validate(bool_0)
    except BaseException:
        pass

def test_case_4():
    try:
        float_0 = 0.1
        bytes_0 = b'hRc'
        float_1 = -359.259
        str_0 = 'diff'
        tuple_0 = (bytes_0, float_1, str_0, float_0)
        int_0 = 884
        tuple_1 = (float_0, tuple_0, int_0, tuple_0)
        dict_0 = {tuple_1: float_0, bytes_0: bytes_0, tuple_0: tuple_1, int_0: float_0}
        float_2 = -1035.2053
        task_0 = module_0.Task(float_2)
        var_0 = task_0.deserialize(dict_0)
        bool_0 = None
        task_1 = module_0.Task()
        list_0 = [task_1, task_1, task_1]
        set_0 = set()
        task_2 = module_0.Task(list_0, set_0)
        var_1 = task_2.post_validate(bool_0)
    except BaseException:
        pass

def test_case_5():
    try:
        bool_0 = True
        str_0 = 'negotiate_send_cbt'
        int_0 = 320
        dict_0 = {bool_0: str_0, str_0: str_0, bool_0: str_0, int_0: str_0}
        tuple_0 = (bool_0, str_0, dict_0)
        task_0 = module_0.Task(tuple_0)
        var_0 = task_0.get_vars()
    except BaseException:
        pass

def test_case_6():
    try:
        bytes_0 = b'q\xb2\x08'
        int_0 = None
        task_0 = module_0.Task()
        task_1 = module_0.Task(task_0)
        var_0 = task_1.serialize()
        var_1 = task_1.get_include_params()
        bytes_1 = b'U'
        task_2 = module_0.Task()
        var_2 = task_2.get_name(bytes_1)
        dict_0 = {bytes_0: int_0, bytes_0: int_0}
        tuple_0 = (bytes_0, int_0, dict_0)
        str_0 = 'O|~Wgz&'
        task_3 = module_0.Task(tuple_0, str_0)
        task_4 = module_0.Task(tuple_0)
        var_3 = task_4.__repr__()
        var_4 = task_2.load(task_3)
    except BaseException:
        pass

def test_case_7():
    try:
        bytes_0 = b'\x05'
        task_0 = module_0.Task(bytes_0)
        var_0 = task_0.serialize()
    except BaseException:
        pass

def test_case_8():
    try:
        bytes_0 = b'\xd9@,\xbf\xdb?\xa1\xdd\x14Jbm\xe7!E\xea\xff0\x11'
        task_0 = module_0.Task()
        var_0 = task_0.deserialize(bytes_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = '9i.:aY'
        task_0 = module_0.Task(str_0)
        var_0 = task_0.__repr__()
        task_1 = module_0.Task()
        set_0 = {task_0, task_1}
        var_1 = task_0.set_loader(set_0)
    except BaseException:
        pass

def test_case_10():
    try:
        int_0 = 3488
        float_0 = 1690.8
        tuple_0 = (float_0,)
        task_0 = module_0.Task(int_0, tuple_0)
        var_0 = task_0.all_parents_static()
    except BaseException:
        pass

def test_case_11():
    try:
        bytes_0 = b'Y\xa8\xe6\x83x-?\xecK\xbb\x81\x16\x10\x03\x00f\x13g'
        task_0 = module_0.Task(bytes_0)
        var_0 = task_0.get_first_parent_include()
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = '9i.:aY'
        task_0 = module_0.Task(str_0)
        var_0 = task_0.__repr__()
        var_1 = task_0.copy()
    except BaseException:
        pass

def test_case_13():
    try:
        task_0 = module_0.Task()
        float_0 = -2516.36
        task_1 = module_0.Task()
        var_0 = task_1.copy(float_0)
        int_0 = 1391
        str_0 = '.'
        task_2 = module_0.Task()
        dict_0 = {str_0: int_0}
        var_1 = task_0.load(dict_0, dict_0)
    except BaseException:
        pass

def test_case_14():
    try:
        task_0 = module_0.Task()
        float_0 = -2516.36
        task_1 = module_0.Task()
        var_0 = task_1.copy(float_0)
        var_1 = task_0.get_include_params()
        int_0 = 1391
        var_2 = task_0.serialize()
        float_1 = 100.0
        str_0 = '.'
        task_2 = module_0.Task()
        dict_0 = {str_0: int_0, task_2: task_2, task_1: float_1}
        var_3 = task_0.load(dict_0, dict_0)
    except BaseException:
        pass

def test_case_15():
    try:
        bytes_0 = b'\xe9'
        int_0 = None
        task_0 = module_0.Task()
        dict_0 = {bytes_0: int_0, bytes_0: int_0}
        tuple_0 = (bytes_0, int_0, dict_0)
        var_0 = task_0.get_vars()
        task_1 = module_0.Task(tuple_0)
        int_1 = 1545
        var_1 = task_1.copy(int_1)
        var_2 = task_1.__repr__()
        var_3 = task_1.get_name()
        var_4 = task_1.load(dict_0)
    except BaseException:
        pass

def test_case_16():
    try:
        bytes_0 = b'q\xb2\x08'
        bytes_1 = b'%\xa7\xc0\xd7B\xe2n\t\xc2\x9b\xd5\x92\xad13\xa6'
        str_0 = ''
        tuple_0 = (bytes_0,)
        task_0 = module_0.Task(str_0, tuple_0)
        var_0 = task_0.get_vars()
        var_1 = task_0.copy(task_0, bytes_1)
        task_1 = module_0.Task()
        var_2 = task_0.get_first_parent_include()
        var_3 = task_0.serialize()
    except BaseException:
        pass

def test_case_17():
    try:
        bytes_0 = b'\xab\x06'
        str_0 = '2!%mG&:V|b|<M7D?Gz'
        role_0 = module_1.Role(str_0)
        role_1 = module_1.Role(role_0)
        task_0 = module_0.Task(bytes_0, role_1)
        bool_0 = False
        block_0 = module_2.Block(bool_0)
        float_0 = -2717.2091
        task_1 = module_0.Task(float_0)
        dict_0 = {}
        var_0 = task_1.deserialize(dict_0)
        var_1 = task_1.get_name()
        role_2 = module_1.Role()
        var_2 = task_1.preprocess_data(role_2)
    except BaseException:
        pass