# Automatically generated by Pynguin.
import flutils.codecs.b64 as module_0
import collections as module_1
import codecs as module_2

def test_case_0():
    try:
        complex_0 = None
        tuple_0 = module_0.decode(complex_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'b3-) ;0?P{=+zJsn+\\'
        tuple_0 = module_0.encode(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = None
        tuple_0 = module_0.encode(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bool_0 = True
        tuple_0 = module_0.decode(bool_0)
    except BaseException:
        pass

def test_case_4():
    try:
        module_0.register()
        bytes_0 = b'U\x1a\xf3:\xae~\xaey\x0e\x16\x10\rm\x9c\x1dY\x0c\xc3\x8e'
        module_0.register()
        module_0.register()
        set_0 = {bytes_0}
        user_string_0 = module_1.UserString(set_0)
        tuple_0 = module_0.encode(user_string_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = '64'
        var_0 = module_2.getencoder(str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        module_0.register()
        str_0 = 'v}L?\x0b1\\CC6^.'
        byte_string_0 = None
        tuple_0 = module_0.decode(byte_string_0, str_0)
    except BaseException:
        pass