# Automatically generated by Pynguin.
import httpie.plugins.base as module_0

def test_case_0():
    pass

def test_case_1():
    auth_plugin_0 = module_0.AuthPlugin()
    dict_0 = {auth_plugin_0: auth_plugin_0}
    converter_plugin_0 = module_0.ConverterPlugin(dict_0)

def test_case_2():
    str_0 = 'Unit test for method format_body of class FormatterPlugin'
    var_0 = print(str_0)
    str_1 = 'format_options'
    var_1 = {}
    var_2 = {str_1: var_1}
    formatter_plugin_0 = module_0.FormatterPlugin(**var_2)
    str_2 = 'application/atom+xml'
    str_3 = '<?xml version="1.0" encoding="UTF-8"?>\n<feed><title></title></feed>'
    str_4 = '<feed><title></title></feed>'
    str_5 = 'template:'
    var_3 = print(str_5, str_3)
    str_6 = 'formatted:'
    var_4 = print(str_6, str_4)
    str_7 = formatter_plugin_0.format_body(str_3, str_2)
    str_8 = 'result:'
    var_5 = print(str_8, str_7)

def test_case_3():
    str_0 = 'format_options'
    var_0 = {}
    var_1 = {str_0: var_0}
    formatter_plugin_0 = module_0.FormatterPlugin(**var_1)
    str_1 = 'application/atom+xml'
    str_2 = '<?xml version="1.0" encoding="UTF-8"?>\n<feed><title></title></feed>'
    str_3 = '<feed><title></title></feed>'
    str_4 = 'template:'
    var_2 = print(str_4, str_2)
    str_5 = 'formatted:'
    str_6 = 'x(&o\n!u~wN-= (O['
    str_7 = formatter_plugin_0.format_headers(str_6)
    var_3 = print(str_5, str_3)
    str_8 = formatter_plugin_0.format_body(str_2, str_1)
    str_9 = 'result:'
    var_4 = print(str_9, str_8)