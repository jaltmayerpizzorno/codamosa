# Automatically generated by Pynguin.
import ansible.parsing.dataloader as module_0

def test_case_0():
    try:
        str_0 = 'K\rgZ6iOTW85ewVG.'
        data_loader_0 = module_0.DataLoader()
        var_0 = data_loader_0.set_vault_secrets(str_0)
        set_0 = set()
        data_loader_1 = module_0.DataLoader()
        var_1 = data_loader_1.load(set_0)
    except BaseException:
        pass

def test_case_1():
    try:
        data_loader_0 = module_0.DataLoader()
        str_0 = ''
        var_0 = data_loader_0.load_from_file(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        data_loader_0 = module_0.DataLoader()
        data_loader_1 = module_0.DataLoader()
        var_0 = data_loader_1.list_directory(data_loader_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bool_0 = False
        data_loader_0 = module_0.DataLoader()
        var_0 = data_loader_0.is_executable(bool_0)
    except BaseException:
        pass

def test_case_4():
    try:
        tuple_0 = ()
        data_loader_0 = module_0.DataLoader()
        var_0 = data_loader_0.is_executable(tuple_0)
    except BaseException:
        pass

def test_case_5():
    try:
        data_loader_0 = module_0.DataLoader()
        str_0 = 'Kp)T*<#p9,'
        var_0 = data_loader_0.load_from_file(str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        data_loader_0 = module_0.DataLoader()
        str_0 = '/tmp/ansibl_ile_payload'
        var_0 = data_loader_0.get_real_file(str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        list_0 = []
        str_0 = 'iD40W$'
        data_loader_0 = module_0.DataLoader()
        var_0 = data_loader_0.path_dwim_relative_stack(list_0, list_0, str_0)
    except BaseException:
        pass

def test_case_8():
    try:
        data_loader_0 = module_0.DataLoader()
        str_0 = 'o.AK\\"'
        int_0 = None
        var_0 = data_loader_0.path_dwim_relative_stack(data_loader_0, str_0, int_0)
    except BaseException:
        pass

def test_case_9():
    try:
        bytes_0 = b'Ew\x9a+\x05<'
        list_0 = [bytes_0, bytes_0]
        data_loader_0 = module_0.DataLoader()
        var_0 = data_loader_0.get_real_file(list_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = ''
        data_loader_0 = module_0.DataLoader()
        var_0 = data_loader_0.find_vars_files(str_0, str_0)
        complex_0 = None
        var_1 = data_loader_0.get_real_file(complex_0, data_loader_0)
    except BaseException:
        pass

def test_case_11():
    try:
        data_loader_0 = module_0.DataLoader()
        bytes_0 = b'o\xcbq\r\xe8\xd4^\xa7;\x806\x8f\xe4K1\x16\x07\xcd\xc8L'
        str_0 = '"<L=}SZByhgRn\x0cKG'
        set_0 = set()
        var_0 = data_loader_0.path_dwim_relative_stack(bytes_0, str_0, set_0)
    except BaseException:
        pass

def test_case_12():
    try:
        set_0 = set()
        data_loader_0 = module_0.DataLoader()
        var_0 = data_loader_0.is_directory(set_0)
        bytes_0 = b'\x08\xdfu\x97\t\t\x82\x16'
        var_1 = data_loader_0.load_from_file(bytes_0, set_0)
    except BaseException:
        pass

def test_case_13():
    try:
        data_loader_0 = module_0.DataLoader()
        str_0 = '/path/to/playbook'
        str_1 = [str_0, str_0]
        str_2 = 'test.html'
        bool_0 = False
        var_0 = data_loader_0.path_dwim_relative_stack(str_1, str_0, str_2, bool_0)
    except BaseException:
        pass

def test_case_14():
    try:
        data_loader_0 = module_0.DataLoader()
        data_loader_1 = module_0.DataLoader()
        bool_0 = False
        var_0 = data_loader_0.cleanup_all_tmp_files()
        str_0 = 'Vx'
        data_loader_2 = module_0.DataLoader()
        int_0 = -2924
        var_1 = data_loader_0.path_dwim_relative_stack(str_0, data_loader_2, bool_0, int_0)
    except BaseException:
        pass

def test_case_15():
    try:
        data_loader_0 = module_0.DataLoader()
        list_0 = []
        var_0 = data_loader_0.is_directory(list_0)
        data_loader_1 = module_0.DataLoader()
        data_loader_2 = module_0.DataLoader()
        var_1 = data_loader_1.cleanup_all_tmp_files()
        str_0 = ''
        var_2 = data_loader_0.path_dwim_relative_stack(list_0, data_loader_1, str_0)
        var_3 = data_loader_0.list_directory(data_loader_2)
    except BaseException:
        pass

def test_case_16():
    try:
        set_0 = set()
        data_loader_0 = module_0.DataLoader()
        data_loader_1 = module_0.DataLoader()
        var_0 = data_loader_0.get_basedir()
        data_loader_2 = module_0.DataLoader()
        bytes_0 = None
        var_1 = data_loader_1.set_basedir(bytes_0)
        bool_0 = False
        var_2 = data_loader_1.cleanup_all_tmp_files()
        dict_0 = {var_2: bool_0, var_1: set_0}
        str_0 = '/dev/fcd'
        var_3 = data_loader_2.path_dwim_relative_stack(dict_0, dict_0, str_0)
    except BaseException:
        pass

def test_case_17():
    try:
        data_loader_0 = module_0.DataLoader()
        str_0 = ''
        var_0 = data_loader_0.path_dwim_relative(str_0, str_0, str_0)
        str_1 = '=X'
        bytes_0 = b'\xbb)\xc5\x87I'
        var_1 = data_loader_0.find_vars_files(str_1, bytes_0)
    except BaseException:
        pass

def test_case_18():
    try:
        data_loader_0 = module_0.DataLoader()
        str_0 = 'gm6\x0c3t\tM"Q'
        str_1 = '{h'
        float_0 = 2060.071
        var_0 = data_loader_0.find_vars_files(str_0, str_1, float_0)
    except BaseException:
        pass

def test_case_19():
    try:
        float_0 = 3675.646
        tuple_0 = ()
        str_0 = '~\n[!{JR}oD_b^\x0cCh'
        str_1 = 't^.w(tJV\x0c:s\\wQM'
        data_loader_0 = module_0.DataLoader()
        var_0 = data_loader_0.path_dwim_relative(float_0, tuple_0, str_0, str_1)
        data_loader_1 = module_0.DataLoader()
        var_1 = data_loader_1.cleanup_all_tmp_files()
        data_loader_2 = module_0.DataLoader()
        var_2 = data_loader_1.is_executable(data_loader_2)
    except BaseException:
        pass

def test_case_20():
    try:
        str_0 = 'wa!9?;1(sTXK\x0cW|tH'
        bool_0 = True
        int_0 = 32700
        list_0 = [int_0, bool_0, str_0]
        bytes_0 = b'\xa1'
        bytes_1 = b'\x01\x08\x9e~:.\x82bd'
        str_1 = 'Ui2'
        dict_0 = {str_1: str_0, str_1: bool_0}
        data_loader_0 = module_0.DataLoader()
        var_0 = data_loader_0.find_vars_files(bytes_0, bytes_1, dict_0)
        data_loader_1 = module_0.DataLoader()
        var_1 = data_loader_1.load(list_0)
    except BaseException:
        pass