# Automatically generated by Pynguin.
import ansible.plugins.action.pause as module_0

def test_case_0():
    try:
        int_0 = 125
        ansible_timeout_exceeded_0 = None
        var_0 = module_0.timeout_handler(int_0, ansible_timeout_exceeded_0)
    except BaseException:
        pass

def test_case_1():
    try:
        complex_0 = None
        var_0 = module_0.clear_line(complex_0)
    except BaseException:
        pass

def test_case_2():
    try:
        float_0 = -1097.461
        dict_0 = {}
        int_0 = 404
        str_0 = '.;Kj\r[8V\r\t E6["U'
        ansible_timeout_exceeded_0 = module_0.AnsibleTimeoutExceeded()
        action_module_0 = module_0.ActionModule(float_0, dict_0, int_0, str_0, ansible_timeout_exceeded_0, dict_0)
        var_0 = action_module_0.run()
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'\xc6~7\xb3\xe2\xc5\xc7'
        list_0 = []
        tuple_0 = ()
        int_0 = 32700
        bool_0 = True
        var_0 = module_0.is_interactive()
        bool_1 = True
        int_1 = None
        var_1 = module_0.is_interactive(int_1)
        bool_2 = False
        int_2 = -2470
        dict_0 = {bool_2: bool_1, bool_2: int_2}
        list_1 = [bool_2]
        str_0 = 'y$FmT3]Dg%'
        str_1 = "rl]^#B\x0c?Ke' za7RoST\n"
        action_module_0 = module_0.ActionModule(list_1, dict_0, list_1, str_0, list_1, str_1)
        tuple_1 = (action_module_0, action_module_0)
        tuple_2 = (dict_0, tuple_1, int_2)
        tuple_3 = (tuple_2, action_module_0, list_1, tuple_2)
        tuple_4 = (int_0, bool_0, bool_1, tuple_3)
        bytes_1 = b'\x12%\x9a\x1f@\x97\xbdl\x95\\C'
        ansible_timeout_exceeded_0 = module_0.AnsibleTimeoutExceeded()
        action_module_1 = module_0.ActionModule(bytes_1, list_1, tuple_0, bytes_0, str_1, ansible_timeout_exceeded_0)
        set_0 = {tuple_1}
        action_module_2 = module_0.ActionModule(list_0, tuple_4, dict_0, bytes_0, set_0, bytes_0)
        bytes_2 = b'(.\x9c\xbe@\t[\xa9\x05\xb4\xf3\x03?\xd7\x0e\xe4<\xcc'
        var_2 = action_module_2.run(bytes_2, list_1)
    except BaseException:
        pass