# Automatically generated by Pynguin.
import tornado.ioloop as module_0
import tornado.simple_httpclient as module_1
import tornado.tcpclient as module_2
import socket as module_3
import datetime as module_4
import tornado.httpclient as module_5

def test_case_0():
    try:
        i_o_loop_0 = module_0.IOLoop()
        simple_async_h_t_t_p_client_0 = module_1.SimpleAsyncHTTPClient()
        h_t_t_p_request_0 = None
        int_0 = 616
        t_c_p_client_0 = module_2.TCPClient()
        str_0 = 'B$Jn'
        str_1 = "m'_E* )^#!mI8(9s&\r>6"
        h_t_t_p_stream_closed_error_0 = module_1.HTTPStreamClosedError(str_1)
        str_2 = 'x}^p(i\ty\x0ceSDLia7&'
        str_3 = 'B0(wY6+H.L\n}e>'
        dict_0 = {str_3: str_0, str_0: int_0}
        simple_async_h_t_t_p_client_0.initialize(dict_0, int_0)
        h_t_t_p_timeout_error_0 = module_1.HTTPTimeoutError(str_0)
        str_4 = 'LC_MESSAGES'
        dict_1 = {str_1: i_o_loop_0, str_2: str_2, str_4: h_t_t_p_request_0}
        int_1 = 870
        address_family_0 = module_3.AddressFamily.AF_SNA
        i_o_stream_0 = t_c_p_client_0.connect(str_1, int_1, address_family_0, int_1, h_t_t_p_timeout_error_0)
        datetime_0 = module_4.datetime(**dict_1)
    except BaseException:
        pass

def test_case_1():
    try:
        i_o_loop_0 = module_0.IOLoop()
        simple_async_h_t_t_p_client_0 = module_1.SimpleAsyncHTTPClient()
        h_t_t_p_request_0 = None
        int_0 = 710
        simple_async_h_t_t_p_client_0.fetch_impl(h_t_t_p_request_0, int_0)
    except BaseException:
        pass

def test_case_2():
    try:
        i_o_loop_0 = module_0.IOLoop()
        simple_async_h_t_t_p_client_0 = module_1.SimpleAsyncHTTPClient()
        h_t_t_p_request_0 = None
        callable_0 = None
        t_c_p_client_0 = module_2.TCPClient()
        str_0 = 'B$J'
        h_t_t_p_stream_closed_error_0 = module_1.HTTPStreamClosedError(str_0)
        t_c_p_client_1 = module_2.TCPClient()
        dict_0 = {}
        int_0 = -1909
        t_c_p_client_2 = module_2.TCPClient()
        int_1 = 206
        h_t_t_p_connection_0 = module_1._HTTPConnection(simple_async_h_t_t_p_client_0, h_t_t_p_request_0, callable_0, dict_0, int_0, t_c_p_client_2, int_0, int_1)
        h_t_t_p_timeout_error_0 = module_1.HTTPTimeoutError(str_0)
        str_1 = h_t_t_p_timeout_error_0.__str__()
        str_2 = 'Euskara'
        h_t_t_p_timeout_error_1 = module_1.HTTPTimeoutError(str_2)
        h_t_t_p_connection_0.on_connection_close()
    except BaseException:
        pass

def test_case_3():
    try:
        i_o_loop_0 = module_0.IOLoop()
        simple_async_h_t_t_p_client_0 = module_1.SimpleAsyncHTTPClient()
        h_t_t_p_request_0 = None
        callable_0 = None
        int_0 = 616
        simple_async_h_t_t_p_client_0.close()
        str_0 = 'x}^p(i\ty\x0ceSDLia7&'
        simple_async_h_t_t_p_client_0.close()
        int_1 = 405
        t_c_p_client_0 = module_2.TCPClient()
        callable_1 = None
        h_t_t_p_connection_0 = module_1._HTTPConnection(simple_async_h_t_t_p_client_0, h_t_t_p_request_0, callable_0, callable_1, int_1, t_c_p_client_0, int_0, int_1)
        str_1 = 'P"c}*'
        h_t_t_p_timeout_error_0 = module_1.HTTPTimeoutError(str_1)
        callable_2 = None
        h_t_t_p_headers_0 = None
        bool_0 = False
        h_t_t_p_request_1 = module_5.HTTPRequest(str_0, h_t_t_p_headers_0, str_1, str_1, str_1, str_1, int_1, bool_0, str_1)
        simple_async_h_t_t_p_client_0.fetch_impl(h_t_t_p_request_1, callable_1)
        any_0 = i_o_loop_0.run_sync(callable_2)
    except BaseException:
        pass

def test_case_4():
    try:
        i_o_loop_0 = module_0.IOLoop()
        simple_async_h_t_t_p_client_0 = module_1.SimpleAsyncHTTPClient()
        h_t_t_p_request_0 = None
        callable_0 = None
        int_0 = 616
        simple_async_h_t_t_p_client_0.close()
        str_0 = 'x}^p(i\ty\x0ceSDLia7&'
        simple_async_h_t_t_p_client_0.close()
        t_c_p_client_0 = module_2.TCPClient()
        callable_1 = None
        int_1 = 416
        h_t_t_p_timeout_error_0 = module_1.HTTPTimeoutError(str_0)
        str_1 = h_t_t_p_timeout_error_0.__str__()
        h_t_t_p_connection_0 = module_1._HTTPConnection(simple_async_h_t_t_p_client_0, h_t_t_p_request_0, callable_0, callable_1, int_1, t_c_p_client_0, int_0, int_1)
        str_2 = 'P"c}*'
        h_t_t_p_timeout_error_1 = module_1.HTTPTimeoutError(str_2)
        bytes_0 = b'\x1e'
        h_t_t_p_connection_0.data_received(bytes_0)
    except BaseException:
        pass

def test_case_5():
    try:
        i_o_loop_0 = module_0.IOLoop()
        simple_async_h_t_t_p_client_0 = module_1.SimpleAsyncHTTPClient()
        h_t_t_p_request_0 = None
        callable_0 = None
        str_0 = '}A4g{G4Fm'
        float_0 = 3253.695
        int_0 = 1773
        t_c_p_client_0 = module_2.TCPClient()
        int_1 = -1634
        h_t_t_p_connection_0 = module_1._HTTPConnection(simple_async_h_t_t_p_client_0, h_t_t_p_request_0, callable_0, float_0, int_0, t_c_p_client_0, int_1, int_0)
        h_t_t_p_timeout_error_0 = module_1.HTTPTimeoutError(str_0)
        simple_async_h_t_t_p_client_0.close()
        int_2 = 405
        t_c_p_client_1 = module_2.TCPClient()
        str_1 = 'P"c}*'
        h_t_t_p_timeout_error_1 = module_1.HTTPTimeoutError(str_1)
        callable_1 = None
        h_t_t_p_headers_0 = None
        bool_0 = False
        h_t_t_p_request_1 = module_5.HTTPRequest(str_1, h_t_t_p_headers_0, str_1, str_1, str_1, str_1, int_2, bool_0, str_1)
        any_0 = i_o_loop_0.run_sync(callable_1, float_0)
    except BaseException:
        pass

def test_case_6():
    try:
        i_o_loop_0 = module_0.IOLoop()
        simple_async_h_t_t_p_client_0 = module_1.SimpleAsyncHTTPClient()
        h_t_t_p_request_0 = None
        callable_0 = None
        int_0 = 616
        simple_async_h_t_t_p_client_0.close()
        str_0 = 'x}^p(i\ty\x0ceSDLia7&'
        int_1 = -3042
        dict_0 = {}
        request_proxy_0 = None
        simple_async_h_t_t_p_client_0.initialize(int_1, dict_0, request_proxy_0, h_t_t_p_request_0)
        int_2 = 405
        t_c_p_client_0 = module_2.TCPClient()
        callable_1 = None
        int_3 = 416
        simple_async_h_t_t_p_client_0.close()
        h_t_t_p_connection_0 = module_1._HTTPConnection(simple_async_h_t_t_p_client_0, h_t_t_p_request_0, callable_0, callable_1, int_3, t_c_p_client_0, int_0, int_3)
        str_1 = 'P"c}*'
        h_t_t_p_timeout_error_0 = module_1.HTTPTimeoutError(str_1)
        h_t_t_p_headers_0 = None
        bool_0 = False
        h_t_t_p_request_1 = module_5.HTTPRequest(str_0, h_t_t_p_headers_0, str_1, str_1, str_1, str_1, int_2, bool_0, str_1)
        simple_async_h_t_t_p_client_0.fetch_impl(h_t_t_p_request_1, callable_1)
    except BaseException:
        pass

def test_case_7():
    try:
        i_o_loop_0 = module_0.IOLoop()
        simple_async_h_t_t_p_client_0 = module_1.SimpleAsyncHTTPClient()
        h_t_t_p_request_0 = None
        callable_0 = None
        simple_async_h_t_t_p_client_0.close()
        str_0 = 'x}^p(i\ty\x0ceSDLia7&'
        simple_async_h_t_t_p_client_0.close()
        t_c_p_client_0 = module_2.TCPClient()
        callable_1 = None
        simple_async_h_t_t_p_client_0.close()
        int_0 = 396
        int_1 = 877
        int_2 = 2970
        h_t_t_p_connection_0 = module_1._HTTPConnection(simple_async_h_t_t_p_client_0, h_t_t_p_request_0, callable_0, callable_1, int_0, t_c_p_client_0, int_1, int_2)
        str_1 = 'P"c}*'
        h_t_t_p_timeout_error_0 = module_1.HTTPTimeoutError(str_1)
        bool_0 = False
        optional_0 = None
        h_t_t_p_request_1 = module_5.HTTPRequest(str_0, optional_0, bool_0, str_1)
        simple_async_h_t_t_p_client_0.fetch_impl(h_t_t_p_request_1, callable_1)
    except BaseException:
        pass

def test_case_8():
    try:
        i_o_loop_0 = module_0.IOLoop()
        simple_async_h_t_t_p_client_0 = module_1.SimpleAsyncHTTPClient()
        h_t_t_p_request_0 = None
        callable_0 = None
        str_0 = '}A4g{G4Fm'
        float_0 = 3253.695
        t_c_p_client_0 = module_2.TCPClient()
        int_0 = -1634
        h_t_t_p_connection_0 = module_1._HTTPConnection(simple_async_h_t_t_p_client_0, h_t_t_p_request_0, callable_0, float_0, int_0, t_c_p_client_0, int_0, int_0)
        h_t_t_p_timeout_error_0 = module_1.HTTPTimeoutError(str_0)
        simple_async_h_t_t_p_client_0.close()
        t_c_p_client_1 = module_2.TCPClient()
        h_t_t_p_connection_0.finish()
    except BaseException:
        pass

def test_case_9():
    try:
        i_o_loop_0 = module_0.IOLoop()
        simple_async_h_t_t_p_client_0 = module_1.SimpleAsyncHTTPClient()
        h_t_t_p_request_0 = None
        i_o_loop_0.install()
        callable_0 = None
        str_0 = '}A4g{G4Fm'
        float_0 = 3253.695
        t_c_p_client_0 = module_2.TCPClient()
        int_0 = -1606
        h_t_t_p_connection_0 = module_1._HTTPConnection(simple_async_h_t_t_p_client_0, h_t_t_p_request_0, callable_0, float_0, int_0, t_c_p_client_0, int_0, int_0)
        h_t_t_p_timeout_error_0 = module_1.HTTPTimeoutError(str_0)
        int_1 = 616
        simple_async_h_t_t_p_client_0.close()
        t_c_p_client_0.close()
        int_2 = 405
        t_c_p_client_1 = module_2.TCPClient()
        callable_1 = None
        h_t_t_p_connection_1 = module_1._HTTPConnection(simple_async_h_t_t_p_client_0, h_t_t_p_request_0, callable_0, callable_1, int_2, t_c_p_client_0, int_0, int_2)
        str_1 = 'P"c}*'
        h_t_t_p_timeout_error_1 = module_1.HTTPTimeoutError(str_1)
        h_t_t_p_headers_0 = None
        bool_0 = False
        optional_0 = None
        h_t_t_p_request_1 = module_5.HTTPRequest(str_0, int_1, h_t_t_p_headers_0, optional_0, int_0, str_1, bool_0, str_0)
        simple_async_h_t_t_p_client_0.fetch_impl(h_t_t_p_request_1, callable_1)
    except BaseException:
        pass