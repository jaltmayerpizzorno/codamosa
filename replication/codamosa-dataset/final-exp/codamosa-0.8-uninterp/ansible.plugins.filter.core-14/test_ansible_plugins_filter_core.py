# Automatically generated by Pynguin.
import ansible.plugins.filter.core as module_0

def test_case_0():
    pass

def test_case_1():
    bool_0 = False
    var_0 = module_0.to_bool(bool_0)
    str_0 = 'true'
    var_1 = module_0.to_bool(str_0)
    str_1 = 'false'
    var_2 = module_0.to_bool(str_1)
    str_2 = 'foo'
    var_3 = module_0.to_bool(str_2)
    var_4 = module_0.to_bool(bool_0)
    var_5 = []
    var_6 = module_0.to_bool(var_5)

def test_case_2():
    float_0 = 100.0
    var_0 = module_0.to_bool(float_0)

def test_case_3():
    str_0 = ',S2lFOZ"N'
    var_0 = module_0.quote(str_0)
    str_1 = "DER';avh"
    var_1 = module_0.regex_search(str_1, str_1)

def test_case_4():
    str_0 = 'test/test*.yml'
    var_0 = module_0.fileglob(str_0)

def test_case_5():
    var_0 = module_0.regex_replace()

def test_case_6():
    bytes_0 = b"X\xd4\x1b=Tc\xb9'\xf6"
    list_0 = [bytes_0]
    str_0 = 'B'
    bool_0 = True
    list_1 = None
    dict_0 = {str_0: bool_0, str_0: list_1}
    var_0 = module_0.regex_findall(list_0, str_0, dict_0, dict_0)

def test_case_7():
    str_0 = '&=Z'
    list_0 = None
    var_0 = module_0.ternary(str_0, list_0, str_0)

def test_case_8():
    str_0 = '^$*[]'
    var_0 = module_0.regex_escape(str_0)
    str_1 = 'posix_basic'
    var_1 = module_0.regex_escape(str_0, str_1)

def test_case_9():
    list_0 = []
    set_0 = None
    var_0 = module_0.list_of_dict_key_value_elements_to_dict(list_0, set_0)
    int_0 = -3351
    var_1 = module_0.to_uuid(int_0)
    set_1 = {int_0, int_0}
    var_2 = module_0.from_yaml(set_1)

def test_case_10():
    set_0 = None
    bytes_0 = b't\xd2\xd6(n\xcf\xca\xcd\xee\xcf\x86'
    list_0 = [set_0, bytes_0]
    var_0 = module_0.from_yaml_all(list_0)

def test_case_11():
    bool_0 = True
    bytes_0 = b'\xd6:'
    var_0 = module_0.rand(bool_0, bytes_0)

def test_case_12():
    bool_0 = False
    var_0 = module_0.randomize_list(bool_0)

def test_case_13():
    str_0 = 'wBy>tU\x0b'
    list_0 = [str_0, str_0]
    var_0 = module_0.randomize_list(list_0)
    var_1 = module_0.regex_search(str_0, str_0)

def test_case_14():
    str_0 = 'posix_extended'
    var_0 = module_0.flatten(str_0)

def test_case_15():
    bytes_0 = b'\xd6\x19'
    var_0 = module_0.mandatory(bytes_0)

def test_case_16():
    dict_0 = {}
    str_0 = ''
    var_0 = module_0.comment(str_0, **dict_0)

def test_case_17():
    str_0 = 'wBy>tU\x0b'
    var_0 = module_0.regex_search(str_0, str_0)

def test_case_18():
    str_0 = '-eaWp1O"SV\x0bpW'
    str_1 = '/sys/devices/virtual/dmi/id/board_asset_tag'
    var_0 = module_0.regex_search(str_0, str_1)

def test_case_19():
    list_0 = []
    set_0 = None
    bytes_0 = b'\xf9iU\x98!'
    str_0 = ',!Gp(05*`C\x0c3cu'
    list_1 = [list_0, bytes_0, str_0]
    dict_0 = {str_0: set_0, str_0: list_1}
    str_1 = 'jghI\n%\rb35UVz:0q%'
    var_0 = module_0.regex_search(bytes_0, str_1, *list_0)
    int_0 = -816
    var_1 = module_0.subelements(dict_0, list_0, int_0)

def test_case_20():
    list_0 = None
    var_0 = module_0.to_bool(list_0)
    bytes_0 = b'\xed|Q\xd1d\xdb[7'
    var_1 = module_0.get_hash(bytes_0)
    list_1 = [bytes_0, list_0]
    var_2 = module_0.combine(*list_1)
    var_3 = module_0.to_bool(bytes_0)

def test_case_21():
    list_0 = []
    filter_module_0 = None
    bool_0 = True
    dict_0 = {}
    var_0 = module_0.rand(filter_module_0, bool_0, filter_module_0, dict_0)
    var_1 = module_0.quote(list_0)

def test_case_22():
    set_0 = None
    int_0 = 32580
    bytes_0 = b'\x0f\xf9i!'
    tuple_0 = (bytes_0,)
    dict_0 = {}
    var_0 = module_0.mandatory(dict_0, dict_0)
    var_1 = module_0.flatten(tuple_0)
    filter_module_0 = module_0.FilterModule()
    var_2 = module_0.ternary(set_0, int_0, tuple_0)
    str_0 = 'jghI\n%\rb35UVz:0q%'
    list_0 = [str_0, int_0, var_2, tuple_0]
    var_3 = module_0.flatten(list_0)

def test_case_23():
    list_0 = []
    set_0 = None
    int_0 = 32580
    bytes_0 = b'\x0f\xf9i!'
    tuple_0 = (bytes_0,)
    str_0 = ',!Gep(0*`C\x0c3`cu'
    list_1 = [list_0, bytes_0, str_0]
    dict_0 = {}
    var_0 = module_0.mandatory(dict_0, dict_0)
    var_1 = module_0.flatten(tuple_0)
    dict_1 = {str_0: set_0, str_0: list_1}
    var_2 = module_0.to_uuid(list_0)
    var_3 = module_0.from_yaml(dict_1)
    filter_module_0 = module_0.FilterModule()
    var_4 = module_0.ternary(set_0, int_0, tuple_0)
    str_1 = 'jghI\n%\rb35UVz:0q%'
    var_5 = module_0.regex_search(bytes_0, str_1, *list_0)
    var_6 = module_0.quote(list_0)
    bool_0 = True
    dict_2 = {str_1: str_1}
    var_7 = module_0.to_json(dict_2, *list_0)
    str_2 = 'XK^'
    var_8 = module_0.randomize_list(str_2, bool_0)

def test_case_24():
    int_0 = 1
    str_0 = 'a'
    str_1 = 'b'
    var_0 = module_0.ternary(int_0, str_0, str_1)
    int_1 = 0
    var_1 = module_0.ternary(int_1, str_0, str_1)
    var_2 = None
    var_3 = module_0.ternary(var_2, str_0, str_1)
    str_2 = 'c'
    var_4 = module_0.ternary(var_2, str_0, str_1, str_2)
    str_3 = ''
    var_5 = module_0.ternary(str_3, str_0, str_1)
    str_4 = 'foo'
    var_6 = module_0.ternary(str_4, str_0, str_1)
    bool_0 = False
    var_7 = module_0.ternary(bool_0, str_0, str_1)
    var_8 = dict()
    var_9 = module_0.ternary(var_8, str_0, str_1)

def test_case_25():
    int_0 = 1
    int_1 = 2
    int_2 = 3
    int_3 = [int_0, int_1, int_2]
    var_0 = module_0.flatten(int_3)
    str_0 = 'foo'
    str_1 = 'bar'
    str_2 = [str_0, str_1]
    var_1 = [int_0, str_2, int_2]
    var_2 = module_0.flatten(var_1)
    str_3 = 'baz'
    str_4 = 'qux'
    str_5 = 'quux'
    str_6 = [str_3, str_4, str_5]
    var_3 = [str_0, str_6, int_2]
    var_4 = [int_0, var_3]
    var_5 = module_0.flatten(var_4)
    str_7 = [str_3, str_4, str_5]
    var_6 = [str_0, str_7, int_2]
    int_4 = 4
    var_7 = [int_0, var_6, int_4]
    var_8 = module_0.flatten(var_7, int_0)

def test_case_26():
    str_0 = 'hello'
    str_1 = 'XX'
    var_0 = module_0.regex_replace(str_0, str_1, str_1)
    bool_0 = True
    var_1 = module_0.regex_replace(str_0, str_0, str_1, bool_0)
    str_2 = 'Hello'
    str_3 = 'YY'
    var_2 = module_0.regex_replace(str_2, str_3, str_3, bool_0)

def test_case_27():
    str_0 = '/tmp/ansible_fileglob_test_file*'
    str_1 = '/tmp/ansible_fileglob_test_file1'
    str_2 = 'a'
    var_0 = open(str_1, str_2)
    str_3 = '/tmp/ansible_fileglob_test_file2'
    var_1 = open(str_3, str_2)
    var_2 = module_0.fileglob(str_0)
    var_3 = set(var_2)
    str_4 = [str_1, str_3]
    var_4 = set(str_4)
    str_5 = [str_3, str_1]
    var_5 = set(str_5)