# Automatically generated by Pynguin.
import isort.exceptions as module_0
import builtins as module_1

def test_case_0():
    try:
        str_0 = '*%+\x0bsI6'
        dict_0 = None
        str_1 = "5'+q+d!Z\\*_~'O2L\n"
        str_2 = None
        profile_does_not_exist_0 = module_0.ProfileDoesNotExist(str_2)
        str_3 = 'M>~]u?\t9'
        dict_1 = {}
        dict_2 = {str_0: dict_0, str_1: dict_0, str_3: dict_1, str_1: dict_0}
        unsupported_settings_0 = module_0.UnsupportedSettings(dict_2)
    except BaseException:
        pass

def test_case_1():
    try:
        dict_0 = {}
        unsupported_settings_0 = module_0.UnsupportedSettings(dict_0)
        list_0 = [dict_0, unsupported_settings_0, dict_0]
        str_0 = 'Force all imports to be sorted as a single section'
        dict_1 = {str_0: dict_0}
        type_0 = module_1.type(*list_0, **dict_1)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'kj+!<bcJ_\x0bJ"/\x0b'
        file_skipped_0 = module_0.FileSkipped(str_0, str_0)
        str_1 = None
        missing_section_0 = module_0.MissingSection(str_0, str_1)
        type_0 = module_1.type()
    except BaseException:
        pass