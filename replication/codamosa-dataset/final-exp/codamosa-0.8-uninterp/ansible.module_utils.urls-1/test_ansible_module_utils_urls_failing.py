# Automatically generated by Pynguin.
import ansible.module_utils.urls as module_0
import urllib.parse as module_1

def test_case_0():
    try:
        bytes_0 = b'\xb8X\xae\x03\xd2\x94*\xbew\x15\x9b\x07k'
        str_0 = '|2|<HV{\r@\r\tr0'
        custom_h_t_t_p_s_handler_0 = module_0.CustomHTTPSHandler()
        dict_0 = {str_0: str_0, str_0: str_0, str_0: custom_h_t_t_p_s_handler_0}
        missing_module_error_0 = module_0.MissingModuleError(bytes_0, dict_0)
        h_t_t_p_s_client_auth_handler_0 = module_0.HTTPSClientAuthHandler(missing_module_error_0)
        no_s_s_l_error_0 = None
        str_1 = ''
        request_0 = module_0.Request(str_1, str_1)
        bool_0 = False
        int_0 = 33188
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(bool_0, int_0)
        var_0 = s_s_l_validation_handler_0.make_context(no_s_s_l_error_0, request_0)
    except BaseException:
        pass

def test_case_1():
    try:
        float_0 = 2289.6
        float_1 = 1850.6
        bytes_0 = b''
        h_t_t_p_s_client_auth_handler_0 = module_0.HTTPSClientAuthHandler(float_1, bytes_0)
        var_0 = h_t_t_p_s_client_auth_handler_0.https_open(float_0)
    except BaseException:
        pass

def test_case_2():
    try:
        list_0 = []
        bytes_0 = b'\xcc\xa4\n\xe9\xf1\xaew\xa3u~\xbccW'
        unix_h_t_t_p_s_connection_0 = module_0.UnixHTTPSConnection(bytes_0)
        var_0 = unix_h_t_t_p_s_connection_0.__call__(*list_0)
    except BaseException:
        pass

def test_case_3():
    try:
        no_s_s_l_error_0 = module_0.NoSSLError()
        proxy_error_0 = module_0.ProxyError()
        unix_h_t_t_p_connection_0 = module_0.UnixHTTPConnection(no_s_s_l_error_0)
        var_0 = unix_h_t_t_p_connection_0.connect()
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'ttp:/httpbn.r$Ug/get'
        var_0 = module_0.generic_urlparse(str_0)
        set_0 = set()
        unix_h_t_t_p_connection_0 = module_0.UnixHTTPConnection(set_0)
        var_1 = unix_h_t_t_p_connection_0.__call__()
    except BaseException:
        pass

def test_case_5():
    try:
        bool_0 = True
        unix_h_t_t_p_handler_0 = module_0.UnixHTTPHandler(bool_0)
        set_0 = {unix_h_t_t_p_handler_0, bool_0, unix_h_t_t_p_handler_0, unix_h_t_t_p_handler_0}
        str_0 = 'sj_EU\r\r'
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(set_0, str_0, str_0)
        var_0 = s_s_l_validation_handler_0.get_ca_certs()
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'http://foo:bar@localhost:8080/path?a=b&c=d#anchor'
        var_0 = module_1.urlparse(str_0)
        list_0 = [var_0, str_0]
        var_1 = module_0.open_url(str_0, list_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'http://httpbin.org/get'
        var_0 = module_0.open_url(str_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = ' '
        h_t_t_p_s_client_auth_handler_0 = None
        var_0 = module_0.build_ssl_validation_error(str_0, str_0, h_t_t_p_s_client_auth_handler_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'WvN|DD<3I'
        str_1 = '>mlTDZ/T$R2'
        dict_0 = {str_0: str_0, str_1: str_1, str_1: str_0}
        var_0 = module_0.rfc2822_date_string(str_0, dict_0)
    except BaseException:
        pass

def test_case_10():
    try:
        int_0 = 1024
        h_t_t_p_s_client_auth_handler_0 = module_0.HTTPSClientAuthHandler(int_0)
        str_0 = 'wP1'
        list_0 = [h_t_t_p_s_client_auth_handler_0, int_0, h_t_t_p_s_client_auth_handler_0, int_0]
        unix_h_t_t_p_connection_0 = module_0.UnixHTTPConnection(str_0)
        set_0 = None
        request_0 = module_0.Request(list_0, unix_h_t_t_p_connection_0, set_0)
    except BaseException:
        pass

def test_case_11():
    try:
        var_0 = module_0.url_argument_spec()
        bool_0 = False
        unix_h_t_t_p_s_connection_0 = module_0.UnixHTTPSConnection(bool_0)
        var_1 = unix_h_t_t_p_s_connection_0.connect()
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = 'tar'
        var_0 = module_0.open_url(str_0)
    except BaseException:
        pass

def test_case_13():
    try:
        no_s_s_l_error_0 = module_0.NoSSLError()
        connection_error_0 = module_0.ConnectionError()
        custom_h_t_t_p_s_handler_0 = module_0.CustomHTTPSHandler(connection_error_0)
        var_0 = custom_h_t_t_p_s_handler_0.https_open(no_s_s_l_error_0)
    except BaseException:
        pass

def test_case_14():
    try:
        request_0 = None
        float_0 = -3516.648598
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(request_0, float_0)
        s_s_l_validation_error_0 = module_0.SSLValidationError()
        int_0 = 1489
        var_0 = s_s_l_validation_handler_0.http_request(int_0)
    except BaseException:
        pass

def test_case_15():
    try:
        connection_error_0 = None
        set_0 = {connection_error_0, connection_error_0, connection_error_0, connection_error_0}
        h_t_t_p_s_client_auth_handler_0 = module_0.HTTPSClientAuthHandler(connection_error_0, set_0)
        unix_h_t_t_p_handler_0 = None
        bool_0 = False
        bytes_0 = b';\xf0\xc2w\xd1w'
        bytes_1 = b"iw\xcc\xb1'\x1fE\xfa\xc5\x18\xdeS',\x85"
        request_0 = module_0.Request(bool_0, h_t_t_p_s_client_auth_handler_0, bytes_0, bytes_1)
        var_0 = module_0.basic_auth_header(unix_h_t_t_p_handler_0, request_0)
        str_0 = 'Olp<?v(xB7\nD'
        list_0 = [str_0, str_0, h_t_t_p_s_client_auth_handler_0, str_0]
        custom_h_t_t_p_s_connection_0 = module_0.CustomHTTPSConnection(*list_0)
    except BaseException:
        pass

def test_case_16():
    try:
        proxy_error_0 = module_0.ProxyError()
        set_0 = {proxy_error_0, proxy_error_0}
        tuple_0 = ()
        str_0 = 'lb+pa*S6?33D=,={XB^e'
        int_0 = -5468
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(tuple_0, str_0, int_0)
        var_0 = s_s_l_validation_handler_0.validate_proxy_response(proxy_error_0, set_0)
    except BaseException:
        pass

def test_case_17():
    try:
        str_0 = 'htty://httpbin.org/get'
        int_0 = None
        list_0 = [str_0, str_0]
        custom_h_t_t_p_s_connection_0 = module_0.CustomHTTPSConnection(*list_0)
        h_t_t_p_s_client_auth_handler_0 = module_0.HTTPSClientAuthHandler(custom_h_t_t_p_s_connection_0)
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(h_t_t_p_s_client_auth_handler_0, str_0)
        var_0 = s_s_l_validation_handler_0.validate_proxy_response(int_0)
    except BaseException:
        pass

def test_case_18():
    try:
        str_0 = 'http://foo:bar@localhost:8080/path?a=b&c=d#anchor'
        var_0 = module_0.generic_urlparse(str_0)
        str_1 = None
        var_1 = module_0.prepare_multipart(str_1)
    except BaseException:
        pass

def test_case_19():
    try:
        bytes_0 = b']`+\x85\xbd\xb8I\t#@\xe3\xecw\x13\xb4A!\xb7\t\xe9'
        dict_0 = {}
        parse_result_dotted_dict_0 = module_0.ParseResultDottedDict(**dict_0)
        bool_0 = False
        connection_error_0 = module_0.ConnectionError(**dict_0)
        request_0 = module_0.Request(parse_result_dotted_dict_0, bool_0, connection_error_0)
        var_0 = request_0.delete(bytes_0)
    except BaseException:
        pass

def test_case_20():
    try:
        dict_0 = {}
        dict_1 = {}
        bool_0 = False
        parse_result_dotted_dict_0 = module_0.ParseResultDottedDict()
        var_0 = module_0.url_argument_spec()
        request_0 = module_0.Request(dict_1, bool_0, parse_result_dotted_dict_0)
        request_1 = None
        float_0 = -3516.648598
        set_0 = {float_0, float_0, request_1, request_1}
        no_s_s_l_error_0 = None
        var_1 = request_0.put(set_0, no_s_s_l_error_0, **dict_0)
    except BaseException:
        pass

def test_case_21():
    try:
        dict_0 = {}
        bool_0 = False
        parse_result_dotted_dict_0 = module_0.ParseResultDottedDict()
        request_0 = module_0.Request(dict_0, bool_0, parse_result_dotted_dict_0)
        str_0 = 'https'
        list_0 = [str_0, bool_0]
        no_s_s_l_error_0 = module_0.NoSSLError(*list_0)
        s_s_l_validation_error_0 = None
        tuple_0 = (no_s_s_l_error_0,)
        request_with_method_0 = module_0.RequestWithMethod(str_0, no_s_s_l_error_0, s_s_l_validation_error_0, tuple_0, parse_result_dotted_dict_0)
    except BaseException:
        pass

def test_case_22():
    try:
        no_s_s_l_error_0 = module_0.NoSSLError()
        parse_result_dotted_dict_0 = None
        set_0 = {parse_result_dotted_dict_0, parse_result_dotted_dict_0, parse_result_dotted_dict_0}
        dict_0 = {parse_result_dotted_dict_0: parse_result_dotted_dict_0}
        tuple_0 = (set_0, dict_0)
        missing_module_error_0 = None
        float_0 = 719.0
        var_0 = module_0.build_ssl_validation_error(tuple_0, missing_module_error_0, float_0, tuple_0)
    except BaseException:
        pass

def test_case_23():
    try:
        parse_result_dotted_dict_0 = module_0.ParseResultDottedDict()
        unix_h_t_t_p_connection_0 = None
        str_0 = 'zl/k|!<]l'
        dict_0 = {}
        connection_error_0 = module_0.ConnectionError(**dict_0)
        connection_error_1 = module_0.ConnectionError(**dict_0)
        list_0 = [connection_error_1, connection_error_0, connection_error_1, connection_error_0]
        s_s_l_validation_error_0 = module_0.SSLValidationError(*list_0)
        var_0 = module_0.fetch_file(unix_h_t_t_p_connection_0, str_0, connection_error_0, unix_h_t_t_p_connection_0, s_s_l_validation_error_0)
    except BaseException:
        pass

def test_case_24():
    try:
        int_0 = 2
        int_1 = 1084
        unix_h_t_t_p_handler_0 = module_0.UnixHTTPHandler(int_1)
        var_0 = unix_h_t_t_p_handler_0.http_open(int_0)
    except BaseException:
        pass

def test_case_25():
    try:
        no_s_s_l_error_0 = None
        str_0 = ';]jC'
        no_s_s_l_error_1 = module_0.NoSSLError()
        str_1 = None
        dict_0 = {str_0: no_s_s_l_error_1, str_1: no_s_s_l_error_0, str_1: no_s_s_l_error_1}
        list_0 = [dict_0, str_1, str_0, no_s_s_l_error_0]
        list_1 = []
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(list_1, str_1)
        var_0 = s_s_l_validation_handler_0.make_context(dict_0, list_0)
    except BaseException:
        pass

def test_case_26():
    try:
        dict_0 = {}
        bool_0 = False
        parse_result_dotted_dict_0 = module_0.ParseResultDottedDict()
        request_0 = module_0.Request(dict_0, bool_0, parse_result_dotted_dict_0)
        connection_error_0 = module_0.ConnectionError()
        custom_h_t_t_p_s_handler_0 = None
        var_0 = request_0.get(custom_h_t_t_p_s_handler_0)
    except BaseException:
        pass

def test_case_27():
    try:
        dict_0 = {}
        dict_1 = {}
        bool_0 = True
        parse_result_dotted_dict_0 = module_0.ParseResultDottedDict()
        request_0 = module_0.Request(dict_1, bool_0, parse_result_dotted_dict_0)
        s_s_l_validation_handler_0 = None
        var_0 = request_0.patch(s_s_l_validation_handler_0, **dict_0)
    except BaseException:
        pass

def test_case_28():
    try:
        bool_0 = False
        unix_h_t_t_p_s_connection_0 = module_0.UnixHTTPSConnection(bool_0)
        var_0 = unix_h_t_t_p_s_connection_0.connect()
    except BaseException:
        pass

def test_case_29():
    try:
        dict_0 = {}
        bool_0 = True
        parse_result_dotted_dict_0 = module_0.ParseResultDottedDict()
        request_0 = module_0.Request(dict_0, bool_0, parse_result_dotted_dict_0)
        tuple_0 = None
        var_0 = request_0.head(tuple_0)
    except BaseException:
        pass

def test_case_30():
    try:
        bool_0 = False
        unix_h_t_t_p_handler_0 = module_0.UnixHTTPHandler(bool_0)
        set_0 = set()
        str_0 = '&/!i{n"T'
        str_1 = '0OqR0Mgk"3"Y'
        dict_0 = {str_0: unix_h_t_t_p_handler_0, str_1: str_0, str_0: str_0, str_1: bool_0}
        tuple_0 = ()
        no_s_s_l_error_0 = module_0.NoSSLError()
        bool_1 = True
        request_0 = module_0.Request(tuple_0, no_s_s_l_error_0, bool_1)
        var_0 = request_0.post(set_0, **dict_0)
    except BaseException:
        pass

def test_case_31():
    try:
        str_0 = 'http://http%in.or\x0cLget'
        s_s_l_validation_handler_0 = None
        dict_0 = {str_0: str_0, str_0: s_s_l_validation_handler_0}
        var_0 = module_0.open_url(s_s_l_validation_handler_0, s_s_l_validation_handler_0, dict_0, str_0)
    except BaseException:
        pass

def test_case_32():
    try:
        str_0 = 'http://foo:bar@localhost:8080/path?a=b&c=d#anchor'
        var_0 = module_1.urlparse(str_0)
        var_1 = module_0.generic_urlparse(var_0)
        list_0 = [var_1, var_0]
        proxy_error_0 = module_0.ProxyError(*list_0)
        set_0 = set()
        no_s_s_l_error_0 = module_0.NoSSLError()
        var_2 = module_0.open_url(proxy_error_0, set_0, no_s_s_l_error_0, set_0)
    except BaseException:
        pass

def test_case_33():
    try:
        dict_0 = {}
        bool_0 = False
        parse_result_dotted_dict_0 = module_0.ParseResultDottedDict()
        request_0 = module_0.Request(dict_0, bool_0, parse_result_dotted_dict_0)
        str_0 = 'httpYLs'
        var_0 = request_0.options(str_0)
    except BaseException:
        pass

def test_case_34():
    try:
        float_0 = 0.0
        var_0 = module_0.getpeercert(float_0)
    except BaseException:
        pass

def test_case_35():
    try:
        bool_0 = True
        list_0 = [bool_0]
        str_0 = 'E[j_/\x0b'
        custom_h_t_t_p_s_handler_0 = module_0.CustomHTTPSHandler()
        unix_h_t_t_p_s_connection_0 = module_0.UnixHTTPSConnection(custom_h_t_t_p_s_handler_0)
        connection_error_0 = module_0.ConnectionError(*list_0)
        str_1 = 'O]tA}|hrJ'
        var_0 = module_0.fetch_url(unix_h_t_t_p_s_connection_0, connection_error_0, str_0, str_1)
    except BaseException:
        pass

def test_case_36():
    try:
        int_0 = 1024
        h_t_t_p_s_client_auth_handler_0 = module_0.HTTPSClientAuthHandler(int_0)
        str_0 = 'wP1'
        unix_h_t_t_p_connection_0 = module_0.UnixHTTPConnection(str_0)
        var_0 = unix_h_t_t_p_connection_0.connect()
    except BaseException:
        pass

def test_case_37():
    try:
        dict_0 = {}
        bool_0 = True
        parse_result_dotted_dict_0 = module_0.ParseResultDottedDict()
        request_0 = module_0.Request(dict_0, bool_0, parse_result_dotted_dict_0)
        unix_h_t_t_p_handler_0 = None
        str_0 = 'k7!I'
        str_1 = 'H9K>Q'
        float_0 = -812.0
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(str_0, str_1, float_0)
        var_0 = s_s_l_validation_handler_0.detect_no_proxy(unix_h_t_t_p_handler_0)
        s_s_l_validation_error_0 = module_0.SSLValidationError()
        connection_error_0 = module_0.ConnectionError()
        var_1 = s_s_l_validation_handler_0.make_context(s_s_l_validation_error_0, connection_error_0)
    except BaseException:
        pass

def test_case_38():
    try:
        connection_error_0 = module_0.ConnectionError()
        str_0 = 'Linux'
        var_0 = module_0.atexit_remove_file(str_0)
        str_1 = 'N\n'
        float_0 = 1651.13557
        list_0 = [connection_error_0, float_0, str_1]
        custom_h_t_t_p_s_connection_0 = module_0.CustomHTTPSConnection(*list_0)
    except BaseException:
        pass

def test_case_39():
    try:
        bool_0 = False
        parse_result_dotted_dict_0 = module_0.ParseResultDottedDict()
        dict_0 = None
        request_0 = module_0.Request(dict_0, dict_0, parse_result_dotted_dict_0, bool_0, parse_result_dotted_dict_0, parse_result_dotted_dict_0, dict_0)
        str_0 = 'dVvtUaAJwy'
        var_0 = request_0.options(str_0)
    except BaseException:
        pass

def test_case_40():
    try:
        bool_0 = True
        str_0 = 'E[j_/\x0b'
        dict_0 = {str_0: str_0, str_0: bool_0, str_0: str_0, str_0: bool_0}
        var_0 = module_0.prepare_multipart(dict_0)
    except BaseException:
        pass

def test_case_41():
    try:
        str_0 = '/Irj'
        list_0 = [str_0]
        custom_h_t_t_p_s_connection_0 = module_0.CustomHTTPSConnection(*list_0)
        no_s_s_l_error_0 = module_0.NoSSLError(*list_0)
        var_0 = custom_h_t_t_p_s_connection_0.connect()
    except BaseException:
        pass

def test_case_42():
    try:
        str_0 = 'htty'
        h_t_t_p_s_client_auth_handler_0 = None
        list_0 = [str_0, h_t_t_p_s_client_auth_handler_0, h_t_t_p_s_client_auth_handler_0, h_t_t_p_s_client_auth_handler_0]
        dict_0 = {}
        no_s_s_l_error_0 = module_0.NoSSLError()
        unix_h_t_t_p_connection_0 = module_0.UnixHTTPConnection(no_s_s_l_error_0)
        var_0 = unix_h_t_t_p_connection_0.__call__(*list_0, **dict_0)
        custom_h_t_t_p_s_connection_0 = module_0.CustomHTTPSConnection(*list_0)
        var_1 = module_0.open_url(h_t_t_p_s_client_auth_handler_0, custom_h_t_t_p_s_connection_0)
    except BaseException:
        pass