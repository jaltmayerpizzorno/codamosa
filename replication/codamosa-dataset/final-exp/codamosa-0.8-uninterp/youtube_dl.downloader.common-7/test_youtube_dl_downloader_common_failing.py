# Automatically generated by Pynguin.
import youtube_dl.downloader.common as module_0

def test_case_0():
    try:
        str_0 = ".@uG'2\nLxo|\r"
        set_0 = {str_0, str_0, str_0, str_0}
        int_0 = 1762
        tuple_0 = (int_0,)
        bytes_0 = b'\x80\x1a\xf9\x8biP\x98\xa8Vx\x18\t\x1d\x18\x86;me/'
        file_downloader_0 = module_0.FileDownloader(tuple_0, bytes_0)
        var_0 = file_downloader_0.format_seconds(set_0)
    except BaseException:
        pass

def test_case_1():
    try:
        float_0 = 848.0947699693154
        int_0 = 2431
        file_downloader_0 = module_0.FileDownloader(int_0, int_0)
        var_0 = file_downloader_0.format_speed(float_0)
        bytes_0 = None
        bytes_1 = b'\x9a\x9b9\xf5\x8e\xc4=\x95'
        bool_0 = True
        list_0 = []
        dict_0 = {}
        file_downloader_1 = module_0.FileDownloader(list_0, dict_0)
        tuple_0 = None
        list_1 = [bytes_1, tuple_0]
        list_2 = [bool_0, var_0, list_1, bool_0]
        var_1 = file_downloader_1.slow_down(dict_0, bytes_0, list_2)
        bool_1 = True
        str_0 = "]$'{"
        var_2 = file_downloader_1.parse_bytes(str_0)
        var_3 = file_downloader_0.add_progress_hook(bool_1)
        set_0 = None
        var_4 = file_downloader_1.calc_percent(set_0, list_0)
    except BaseException:
        pass

def test_case_2():
    try:
        float_0 = 834.1215
        int_0 = 2431
        file_downloader_0 = module_0.FileDownloader(int_0, int_0)
        var_0 = file_downloader_0.format_speed(float_0)
        var_1 = file_downloader_0.format_eta(file_downloader_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '71.0.3578.28'
        list_0 = [str_0]
        complex_0 = None
        bool_0 = True
        float_0 = -57.879
        file_downloader_0 = module_0.FileDownloader(bool_0, float_0)
        var_0 = file_downloader_0.format_eta(complex_0)
        str_1 = "FJVbB2Izi_'85O:"
        int_0 = -1126
        file_downloader_1 = module_0.FileDownloader(list_0, int_0)
        var_1 = file_downloader_1.report_progress(str_1)
    except BaseException:
        pass

def test_case_4():
    try:
        bool_0 = None
        bytes_0 = b'\xb1\xafl'
        file_downloader_0 = module_0.FileDownloader(bytes_0, bytes_0)
        var_0 = file_downloader_0.format_retries(bool_0)
    except BaseException:
        pass

def test_case_5():
    try:
        set_0 = set()
        bytes_0 = b''
        str_0 = 'md5:8ea652a1f36818352428cb5134933313'
        set_1 = set()
        file_downloader_0 = module_0.FileDownloader(str_0, set_1)
        var_0 = file_downloader_0.best_block_size(set_0, bytes_0)
    except BaseException:
        pass

def test_case_6():
    try:
        float_0 = -3597.02362
        str_0 = '5{K!!vggs$bA'
        file_downloader_0 = module_0.FileDownloader(str_0, str_0)
        var_0 = file_downloader_0.report_file_already_downloaded(float_0)
    except BaseException:
        pass

def test_case_7():
    try:
        int_0 = -854
        dict_0 = {int_0: int_0}
        str_0 = '+C\\,>5VKb}P!8a\\)'
        dict_1 = {str_0: dict_0}
        file_downloader_0 = module_0.FileDownloader(dict_1, dict_0)
        str_1 = ''
        var_0 = file_downloader_0.temp_name(str_1)
        var_1 = file_downloader_0.to_stderr(int_0)
    except BaseException:
        pass

def test_case_8():
    try:
        float_0 = 2298.9
        bool_0 = False
        bytes_0 = b',\xe7\xdb\x95\xedc\xeb\xfa\xac\xdcp$F\xf3\xe2_\x16\x00\xdb\xc8'
        file_downloader_0 = module_0.FileDownloader(bytes_0, float_0)
        var_0 = file_downloader_0.to_console_title(bool_0)
    except BaseException:
        pass

def test_case_9():
    try:
        bool_0 = False
        set_0 = set()
        file_downloader_0 = module_0.FileDownloader(bool_0, set_0)
        var_0 = file_downloader_0.trouble()
    except BaseException:
        pass

def test_case_10():
    try:
        bytes_0 = b'\xe4\xf5\xb7\xfb-\xd1\xc0\xca\xbd\xf8?\x9aQ\xe5\xe7'
        set_0 = {bytes_0}
        file_downloader_0 = module_0.FileDownloader(bytes_0, set_0)
        var_0 = file_downloader_0.report_error()
    except BaseException:
        pass

def test_case_11():
    try:
        int_0 = 17
        dict_0 = {}
        file_downloader_0 = module_0.FileDownloader(int_0, dict_0)
        bool_0 = None
        var_0 = file_downloader_0.temp_name(bool_0)
    except BaseException:
        pass

def test_case_12():
    try:
        list_0 = []
        str_0 = 'gE)n<HP[Ut6&FI'
        bytes_0 = b'5'
        dict_0 = {str_0: bytes_0}
        file_downloader_0 = module_0.FileDownloader(dict_0, dict_0)
        var_0 = file_downloader_0.undo_temp_name(list_0)
    except BaseException:
        pass

def test_case_13():
    try:
        float_0 = 69.438
        list_0 = []
        list_1 = [float_0, float_0]
        file_downloader_0 = module_0.FileDownloader(float_0, list_1)
        var_0 = file_downloader_0.calc_speed(float_0, float_0, list_0)
        var_1 = file_downloader_0.ytdl_filename(list_0)
    except BaseException:
        pass

def test_case_14():
    try:
        int_0 = 2331
        dict_0 = {}
        tuple_0 = (dict_0, dict_0)
        file_downloader_0 = module_0.FileDownloader(int_0, tuple_0)
        str_0 = 'data-collection="(?P<vico_id>\\d+)"[^>]+data-video="(?P<vivi_id>\\d+)"'
        str_1 = '^(?:[a-zA-Z][a-zA-Z0-9+-.]*:)?//'
        var_0 = file_downloader_0.try_rename(str_0, str_1)
    except BaseException:
        pass

def test_case_15():
    try:
        dict_0 = {}
        str_0 = 'subedo;'
        int_0 = 4453
        list_0 = []
        file_downloader_0 = module_0.FileDownloader(list_0, dict_0)
        var_0 = file_downloader_0.try_utime(str_0, file_downloader_0)
        var_1 = file_downloader_0.report_destination(int_0)
    except BaseException:
        pass

def test_case_16():
    try:
        str_0 = 'll:t?'
        int_0 = -1485
        dict_0 = {}
        file_downloader_0 = module_0.FileDownloader(int_0, dict_0)
        var_0 = file_downloader_0.report_retry(str_0, int_0, int_0)
    except BaseException:
        pass

def test_case_17():
    try:
        str_0 = 'language_w3c'
        str_1 = ';qpx.xDG(Gt9]q\\U^v@'
        set_0 = {str_1}
        file_downloader_0 = module_0.FileDownloader(str_1, set_0)
        var_0 = file_downloader_0.parse_bytes(str_0)
        var_1 = file_downloader_0.report_unable_to_resume()
    except BaseException:
        pass

def test_case_18():
    try:
        int_0 = -874
        dict_0 = {int_0: int_0, int_0: int_0}
        file_downloader_0 = module_0.FileDownloader(int_0, dict_0)
        var_0 = file_downloader_0.download(int_0, dict_0)
    except BaseException:
        pass

def test_case_19():
    try:
        bytes_0 = b'"\x9b\x9b~X\x84'
        dict_0 = {}
        set_0 = set()
        file_downloader_0 = module_0.FileDownloader(dict_0, set_0)
        var_0 = file_downloader_0.try_rename(bytes_0, file_downloader_0)
    except BaseException:
        pass

def test_case_20():
    try:
        int_0 = 26800000
        dict_0 = {int_0: int_0}
        file_downloader_0 = module_0.FileDownloader(int_0, dict_0)
        str_0 = 'FBG '
        var_0 = file_downloader_0.temp_name(str_0)
        var_1 = file_downloader_0.report_resuming_byte(file_downloader_0)
    except BaseException:
        pass

def test_case_21():
    try:
        int_0 = -2997
        dict_0 = {}
        file_downloader_0 = module_0.FileDownloader(int_0, dict_0)
        str_0 = ''
        var_0 = file_downloader_0.temp_name(str_0)
        list_0 = []
        var_1 = file_downloader_0.format_percent(list_0)
    except BaseException:
        pass

def test_case_22():
    try:
        float_0 = 834.1215
        int_0 = 2421
        file_downloader_0 = module_0.FileDownloader(int_0, int_0)
        var_0 = file_downloader_0.format_speed(float_0)
        list_0 = []
        var_1 = file_downloader_0.report_file_already_downloaded(list_0)
    except BaseException:
        pass

def test_case_23():
    try:
        int_0 = -874
        dict_0 = {}
        file_downloader_0 = module_0.FileDownloader(int_0, dict_0)
        str_0 = None
        int_1 = 590
        int_2 = 1957
        var_0 = file_downloader_0.best_block_size(int_1, int_2)
        list_0 = [str_0, file_downloader_0, dict_0]
        var_1 = file_downloader_0.report_warning(*list_0)
    except BaseException:
        pass

def test_case_24():
    try:
        int_0 = -1458
        dict_0 = {}
        file_downloader_0 = module_0.FileDownloader(int_0, dict_0)
        str_0 = ':oxplu;'
        var_0 = file_downloader_0.download(str_0, int_0)
    except BaseException:
        pass

def test_case_25():
    try:
        float_0 = None
        list_0 = []
        bytes_0 = None
        int_0 = -51
        file_downloader_0 = module_0.FileDownloader(bytes_0, int_0)
        var_0 = file_downloader_0.calc_eta(int_0, float_0, list_0, file_downloader_0)
    except BaseException:
        pass

def test_case_26():
    try:
        bool_0 = True
        float_0 = 2430.1
        str_0 = 'https://video.tv.adobe.com/v/2456/'
        list_0 = [bool_0, bool_0, str_0]
        bytes_0 = b'\xee\xe8\xf9X\x18\x99\\'
        set_0 = {bytes_0, bytes_0, bytes_0}
        file_downloader_0 = module_0.FileDownloader(bytes_0, set_0)
        var_0 = file_downloader_0.calc_eta(bool_0, float_0, str_0, list_0)
    except BaseException:
        pass

def test_case_27():
    try:
        str_0 = '?gZ\\!FKpbK[GhfU'
        tuple_0 = (str_0, str_0)
        float_0 = None
        bool_0 = False
        file_downloader_0 = module_0.FileDownloader(bool_0, tuple_0)
        var_0 = file_downloader_0.format_percent(float_0)
        list_0 = []
        dict_0 = {str_0: tuple_0}
        file_downloader_1 = module_0.FileDownloader(list_0, dict_0)
        str_1 = '虾米音乐 - 精选集'
        file_downloader_2 = module_0.FileDownloader(str_1, file_downloader_1)
        int_0 = None
        var_1 = file_downloader_1.download(str_1, int_0)
    except BaseException:
        pass

def test_case_28():
    try:
        list_0 = []
        list_1 = []
        bool_0 = True
        bytes_0 = b':\xcd\x1e\x1d\xd1\x92\xdf\xb5\xb7I\xf7O\x9c\x7fxu\xed'
        file_downloader_0 = module_0.FileDownloader(bool_0, bytes_0)
        str_0 = 'kb'
        file_downloader_1 = module_0.FileDownloader(file_downloader_0, str_0)
        var_0 = file_downloader_1.try_rename(list_0, list_1)
        str_1 = '?M:gZ\\!FKpb*[0hfU'
        float_0 = -1166.93058
        list_2 = [str_1, str_1]
        int_0 = 3572
        dict_0 = {str_1: str_1, str_1: str_1, str_1: str_1}
        int_1 = 3935
        file_downloader_2 = module_0.FileDownloader(dict_0, int_1)
        var_1 = file_downloader_2.calc_eta(float_0, list_2, float_0, int_0)
    except BaseException:
        pass

def test_case_29():
    try:
        dict_0 = None
        str_0 = "dzC_V7^C)}lhV.J'V)w\t"
        file_downloader_0 = module_0.FileDownloader(dict_0, str_0)
        set_0 = {file_downloader_0, dict_0, dict_0, dict_0, dict_0}
        bool_0 = True
        int_0 = 2487
        var_0 = file_downloader_0.best_block_size(bool_0, int_0)
        list_0 = []
        int_1 = -7
        tuple_0 = (file_downloader_0, set_0, list_0, int_1)
        str_1 = ':Q>&pd!zDCT,{A1_^4'
        list_1 = [str_0, str_0, str_0]
        list_2 = [list_1, list_1, list_1]
        bytes_0 = b'n\x19\xca\xaf\xba\x0ci!\xc4g1]]'
        var_1 = file_downloader_0.format_seconds(int_1)
        file_downloader_1 = module_0.FileDownloader(list_2, bytes_0)
        var_2 = file_downloader_1.slow_down(tuple_0, str_1, list_0)
    except BaseException:
        pass

def test_case_30():
    try:
        int_0 = 1232520922
        dict_0 = {}
        str_0 = 'ubeot;'
        file_downloader_0 = module_0.FileDownloader(dict_0, str_0)
        var_0 = file_downloader_0.format_seconds(int_0)
        float_0 = 820.5317681006203
        int_1 = 4422
        file_downloader_1 = module_0.FileDownloader(int_1, int_1)
        var_1 = file_downloader_1.format_speed(float_0)
        str_1 = 'KPaE-1T,B:|S]o\rw'
        list_0 = [file_downloader_0, dict_0]
        file_downloader_2 = module_0.FileDownloader(list_0, dict_0)
        var_2 = file_downloader_2.try_utime(str_1, file_downloader_2)
        str_2 = 'P+BQ'
        set_0 = {str_1}
        var_3 = file_downloader_2.download(str_2, set_0)
    except BaseException:
        pass

def test_case_31():
    try:
        float_0 = 804.224464359425
        int_0 = 2431
        file_downloader_0 = module_0.FileDownloader(int_0, int_0)
        str_0 = None
        var_0 = file_downloader_0.format_speed(str_0)
        var_1 = file_downloader_0.format_speed(float_0)
        str_1 = '?gZ\\!FKpbK[GfU'
        bytes_0 = None
        bytes_1 = b',\xbb*I-;I\xce\x0e[\xee'
        bool_0 = True
        list_0 = []
        dict_0 = {}
        file_downloader_1 = module_0.FileDownloader(list_0, dict_0)
        tuple_0 = None
        list_1 = [bytes_1, tuple_0]
        list_2 = [bool_0, var_1, list_1, bool_0]
        var_2 = file_downloader_1.slow_down(dict_0, bytes_0, list_2)
        var_3 = file_downloader_1.parse_bytes(str_1)
        str_2 = '\\-'
        set_0 = {bool_0}
        var_4 = file_downloader_1.download(str_2, set_0)
    except BaseException:
        pass

def test_case_32():
    try:
        dict_0 = {}
        bool_0 = False
        float_0 = 343.83135
        str_0 = '9+yQ'
        int_0 = 1508
        file_downloader_0 = module_0.FileDownloader(str_0, int_0)
        var_0 = file_downloader_0.calc_speed(bool_0, float_0, dict_0)
    except BaseException:
        pass

def test_case_33():
    try:
        bool_0 = False
        float_0 = -1127.41
        str_0 = 'https://video.tv.adobe.com/v/2456/'
        list_0 = [bool_0, bool_0, str_0]
        bytes_0 = b'\xd9]%\xec\xbc,A\x13\x98\x04:\xed\x04\xcb.'
        set_0 = {bytes_0, bytes_0, bytes_0}
        file_downloader_0 = module_0.FileDownloader(bytes_0, set_0)
        var_0 = file_downloader_0.calc_eta(bool_0, float_0, str_0, list_0)
        tuple_0 = ()
        var_1 = file_downloader_0.download(file_downloader_0, tuple_0)
    except BaseException:
        pass

def test_case_34():
    try:
        dict_0 = None
        str_0 = "dzC_V7^C)}lhV.J'V)w\t"
        file_downloader_0 = module_0.FileDownloader(dict_0, str_0)
        set_0 = {dict_0}
        bool_0 = True
        int_0 = 2487
        var_0 = file_downloader_0.best_block_size(bool_0, int_0)
        list_0 = []
        int_1 = 1
        tuple_0 = (file_downloader_0, set_0, list_0, int_1)
        str_1 = ':Q>&pd!zDCT,{A1_^4'
        list_1 = [str_0, str_0, str_0]
        list_2 = [list_1, list_1, list_1]
        bytes_0 = b'n\x19\xca\xaf\xba\x0ci!\xc4g1]]'
        var_1 = file_downloader_0.format_seconds(int_1)
        file_downloader_1 = module_0.FileDownloader(list_2, bytes_0)
        var_2 = file_downloader_1.slow_down(tuple_0, str_1, list_0)
    except BaseException:
        pass

def test_case_35():
    try:
        float_0 = 834.1215
        int_0 = 2431
        file_downloader_0 = module_0.FileDownloader(int_0, int_0)
        var_0 = file_downloader_0.format_speed(float_0)
        str_0 = '?gZ\\!FKpbK[GfU'
        bytes_0 = None
        bytes_1 = b'\xa2\x8f\xb1\x8d{P\x06\x98~\xbf\xb88\xd8\x00F\\\x8b\xa3\xe3\xb0'
        bool_0 = True
        list_0 = []
        dict_0 = {}
        file_downloader_1 = module_0.FileDownloader(list_0, dict_0)
        tuple_0 = None
        list_1 = [bytes_1, tuple_0]
        list_2 = [bool_0, var_0, list_1, bool_0]
        var_1 = file_downloader_1.slow_down(dict_0, bytes_0, list_2)
        bool_1 = True
        var_2 = file_downloader_1.parse_bytes(str_0)
        var_3 = file_downloader_0.add_progress_hook(bool_1)
        str_1 = '-'
        var_4 = file_downloader_1.try_utime(list_2, bytes_0)
        set_0 = {bool_0}
        var_5 = file_downloader_1.download(str_1, set_0)
    except BaseException:
        pass

def test_case_36():
    try:
        int_0 = -3305
        dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
        file_downloader_0 = module_0.FileDownloader(int_0, dict_0)
        int_1 = -1465
        bool_0 = True
        int_2 = -827
        list_0 = [file_downloader_0, int_1, int_2, bool_0]
        bool_1 = True
        tuple_0 = (list_0, file_downloader_0, bool_1)
        var_0 = file_downloader_0.calc_eta(int_1, bool_0, tuple_0, int_0)
    except BaseException:
        pass

def test_case_37():
    try:
        float_0 = 2418.12975
        list_0 = []
        float_1 = 1682.02428954928
        list_1 = [float_1, float_1]
        file_downloader_0 = module_0.FileDownloader(float_1, list_1)
        var_0 = file_downloader_0.calc_speed(float_0, float_0, list_0)
        int_0 = 26800018
        str_0 = '9'
        var_1 = file_downloader_0.parse_bytes(str_0)
        dict_0 = {int_0: int_0}
        file_downloader_1 = module_0.FileDownloader(int_0, dict_0)
        str_1 = 'C'
        var_2 = file_downloader_1.temp_name(str_1)
        str_2 = '*'
        str_3 = '*p'
        dict_1 = {str_1: float_0, str_3: list_0}
        var_3 = file_downloader_1.download(str_2, dict_1)
    except BaseException:
        pass