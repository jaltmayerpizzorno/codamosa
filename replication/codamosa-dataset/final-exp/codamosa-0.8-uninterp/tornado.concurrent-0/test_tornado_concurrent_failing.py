# Automatically generated by Pynguin.
import concurrent.futures._base as module_0
import tornado.concurrent as module_1
import builtins as module_2

def test_case_0():
    try:
        future_0 = module_0.Future()
        dummy_executor_0 = module_1.DummyExecutor()
        list_0 = [dummy_executor_0]
        base_exception_0 = module_2.BaseException(*list_0)
        module_1.future_set_exception_unless_cancelled(future_0, base_exception_0)
        dummy_executor_1 = module_1.DummyExecutor()
        dummy_executor_1.shutdown()
        future_1 = module_0.Future()
        str_0 = '|'
        bytes_0 = None
        tuple_0 = (bytes_0, base_exception_0, dummy_executor_1)
        module_1.future_set_exc_info(future_1, tuple_0)
        module_1.future_add_done_callback(future_1, str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        future_0 = None
        module_1.chain_future(future_0, future_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = "Yf4\x0c^B+'"
        callable_0 = module_1.run_on_executor()
        list_0 = [str_0]
        dummy_executor_0 = module_1.DummyExecutor()
        dummy_executor_0.shutdown()
        bool_0 = False
        dummy_executor_1 = module_1.DummyExecutor()
        dummy_executor_1.shutdown(bool_0)
        dummy_executor_1.shutdown()
        list_1 = [list_0]
        callable_1 = module_1.run_on_executor(*list_1)
        return_value_ignored_error_0 = module_1.ReturnValueIgnoredError(*list_0)
        base_exception_0 = module_2.BaseException()
        list_2 = [callable_1]
        dict_0 = {str_0: list_2, str_0: str_0}
        callable_2 = module_1.run_on_executor(*list_2, **dict_0)
    except BaseException:
        pass

def test_case_3():
    try:
        return_value_ignored_error_0 = module_1.ReturnValueIgnoredError()
        tuple_0 = (return_value_ignored_error_0,)
        list_0 = [tuple_0, return_value_ignored_error_0, tuple_0, tuple_0]
        callable_0 = module_1.run_on_executor(*list_0)
    except BaseException:
        pass

def test_case_4():
    try:
        callable_0 = module_1.run_on_executor()
        int_0 = -361
        return_value_ignored_error_0 = module_1.ReturnValueIgnoredError()
        dummy_executor_0 = module_1.DummyExecutor()
        future_0 = dummy_executor_0.submit(int_0)
        tuple_0 = ()
        optional_0 = None
        optional_1 = None
        tuple_1 = (tuple_0, optional_0, optional_1)
        module_1.future_set_exc_info(future_0, tuple_1)
    except BaseException:
        pass