# Automatically generated by Pynguin.
import pymonet.utils as module_0

def test_case_0():
    try:
        var_0 = module_0.fn()
    except BaseException:
        pass

def test_case_1():
    try:
        callable_0 = None
        callable_1 = module_0.memoize(callable_0)
        list_0 = [callable_1, callable_0, callable_0, callable_0, callable_1, callable_1, callable_1, callable_1]
        var_0 = None
        var_1 = module_0.identity(var_0)
        var_2 = module_0.compose(callable_0, *list_0)
    except BaseException:
        pass

def test_case_2():
    try:
        callable_0 = None
        callable_1 = module_0.memoize(callable_0)
        list_0 = [callable_1, callable_0, callable_0, callable_1]
        var_0 = module_0.compose(callable_1, *list_0)
    except BaseException:
        pass

def test_case_3():
    try:
        callable_0 = None
        callable_1 = module_0.memoize(callable_0)
        list_0 = [callable_0, callable_1, callable_1, callable_0, callable_0, callable_1, callable_1, callable_0, callable_1, callable_1]
        var_0 = module_0.pipe(list_0)
        var_1 = module_0.compose(list_0, *list_0)
    except BaseException:
        pass

def test_case_4():
    try:
        callable_0 = None
        callable_1 = module_0.memoize(callable_0)
        list_0 = None
        var_0 = module_0.cond(list_0)
        list_1 = [callable_1, callable_0, callable_1, callable_1, callable_1]
        var_1 = module_0.compose(callable_1, *list_1)
    except BaseException:
        pass

def test_case_5():
    try:
        callable_0 = None
        callable_1 = module_0.memoize(callable_0)
        list_0 = [callable_1, callable_1, callable_0, callable_1, callable_1, callable_1]
        float_0 = 7429.40594
        var_0 = module_0.pipe(float_0, *list_0)
    except BaseException:
        pass

def test_case_6():
    try:
        bool_0 = False
        list_0 = []
        var_0 = module_0.cond(list_0)
        float_0 = -2789.075019376128
        list_1 = [bool_0, var_0]
        var_1 = module_0.compose(float_0, *list_1)
    except BaseException:
        pass

def test_case_7():
    try:
        callable_0 = None
        bool_0 = False
        tuple_0 = (bool_0, callable_0)
        list_0 = [tuple_0, tuple_0]
        var_0 = module_0.cond(list_0)
        float_0 = -2790.2322214018704
        list_1 = [bool_0, var_0]
        var_1 = module_0.compose(float_0, *list_1)
    except BaseException:
        pass