# Automatically generated by Pynguin.
import dataclasses_json.core as module_0
import uuid as module_1

def test_case_0():
    try:
        float_0 = -2030.87062
        dict_0 = {float_0: float_0, float_0: float_0, float_0: float_0}
        str_0 = ')C4<[|!'
        extended_encoder_0 = module_0._ExtendedEncoder(skipkeys=str_0)
        extended_encoder_1 = module_0._ExtendedEncoder(default=dict_0)
        str_1 = '[:6^\nH:\\GH'
        list_0 = None
        dict_1 = {str_1: dict_0, str_1: list_0}
        var_0 = extended_encoder_0.default(dict_1)
        list_1 = []
        field_override_0 = module_0.FieldOverride(*list_1)
    except BaseException:
        pass

def test_case_1():
    try:
        extended_encoder_0 = module_0._ExtendedEncoder()
        var_0 = extended_encoder_0.default(extended_encoder_0)
    except BaseException:
        pass

def test_case_2():
    try:
        extended_encoder_0 = module_0._ExtendedEncoder()
        int_0 = 1
        int_1 = 20
        int_2 = 3
        int_3 = [int_0, int_1, int_2]
        var_0 = extended_encoder_0.default(int_3)
        str_0 = 'a'
        str_1 = 'b'
        int_4 = {str_0: int_0, str_1: int_1}
        var_1 = extended_encoder_0.default(int_4)
        str_2 = 'f47ac10b-58cc-4372-a567-0e02b2c3d479'
        u_u_i_d_0 = module_1.UUID(str_2)
        var_2 = extended_encoder_0.default(u_u_i_d_0)
        var_3 = Exception()
        var_4 = extended_encoder_0.default(var_3)
    except BaseException:
        pass