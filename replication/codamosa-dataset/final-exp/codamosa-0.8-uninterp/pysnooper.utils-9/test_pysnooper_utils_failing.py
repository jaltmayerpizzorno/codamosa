# Automatically generated by Pynguin.
import pysnooper.utils as module_0

def test_case_0():
    try:
        bytes_0 = b'\xd6\x8eK\xa2\xfd\xe0\xf4'
        str_0 = 'Q~qW[XwehFjp'
        var_0 = module_0.get_shortish_repr(bytes_0, str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = -2529
        str_0 = 'cV'
        list_0 = [str_0, int_0, int_0, str_0]
        var_0 = module_0.get_shortish_repr(str_0, list_0, int_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '{indent}{newish_string}{name} = {value_repr}'
        var_0 = module_0.get_shortish_repr(str_0)
        writable_stream_0 = module_0.WritableStream()
    except BaseException:
        pass

def test_case_3():
    try:
        list_0 = []
        var_0 = module_0.normalize_repr(list_0)
    except BaseException:
        pass

def test_case_4():
    try:
        bool_0 = True
        list_0 = [bool_0, bool_0]
        str_0 = ']Y'
        var_0 = module_0.truncate(list_0, str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'abcd'
        str_1 = '\x00'
        var_0 = module_0.shitcode(str_1)
        str_2 = 'Ã¿'
        var_1 = module_0.shitcode(str_2)
        str_3 = '\x7f'
        var_2 = module_0.shitcode(str_3)
        float_0 = None
        dict_0 = {}
        set_0 = {str_0}
        str_4 = ',m3jeF<1EM(DcldVOPeT'
        var_3 = module_0.get_shortish_repr(float_0, dict_0, set_0, str_4)
    except BaseException:
        pass