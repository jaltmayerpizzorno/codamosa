# Automatically generated by Pynguin.
import pysnooper.utils as module_0

def test_case_0():
    pass

def test_case_1():
    list_0 = []
    var_0 = module_0.shitcode(list_0)

def test_case_2():
    int_0 = -4965
    writable_stream_0 = None
    var_0 = module_0.truncate(int_0, writable_stream_0)

def test_case_3():
    bytes_0 = b'\x91`q\xde'
    var_0 = module_0.ensure_tuple(bytes_0)

def test_case_4():
    float_0 = 3258.0
    var_0 = module_0.ensure_tuple(float_0)

def test_case_5():
    str_0 = '['
    var_0 = module_0.shitcode(str_0)

def test_case_6():
    int_0 = 1
    var_0 = []
    var_1 = module_0.get_repr_function(int_0, var_0)
    str_0 = 'tY(syPYpJ3Bi'
    list_0 = [int_0]
    var_2 = module_0.ensure_tuple(list_0)
    str_1 = '%v'
    dict_0 = {}
    float_0 = 472.2
    var_3 = module_0.get_shortish_repr(str_1, dict_0, float_0)
    var_4 = module_0.shitcode(str_0)
    var_5 = repr(int_0)
    str_2 = 'x'
    var_6 = (var_1, str_2)
    var_7 = [var_6, var_4, str_2, str_2]
    set_0 = {str_0}
    var_8 = module_0.ensure_tuple(set_0)
    var_9 = module_0.get_repr_function(int_0, var_7)
    var_10 = lambda x: int_0
    list_1 = [var_6, var_10, var_9, str_0]
    float_1 = -1887.0
    var_11 = module_0.get_shortish_repr(float_1, list_1)

def test_case_7():
    list_0 = []
    str_0 = ''
    float_0 = 370.03
    set_0 = {str_0, float_0}
    var_0 = module_0.ensure_tuple(set_0)
    str_1 = "HoP\nLp=#-'Bzb4K-H?n"
    var_1 = module_0.get_shortish_repr(list_0)
    var_2 = module_0.ensure_tuple(str_1)

def test_case_8():
    int_0 = -2524
    var_0 = []
    var_1 = module_0.get_repr_function(int_0, var_0)
    str_0 = 'z-&JWs/SW<i:X"U\x0cW'
    var_2 = (var_1, str_0)
    list_0 = [var_2, int_0, int_0, str_0]
    var_3 = module_0.get_shortish_repr(list_0, list_0, int_0)

def test_case_9():
    str_0 = 'abcd'
    var_0 = module_0.shitcode(str_0)
    str_1 = '1234'
    var_1 = module_0.shitcode(str_1)
    str_2 = '\x00'
    var_2 = module_0.shitcode(str_2)
    str_3 = 'ÿ'
    var_3 = module_0.shitcode(str_3)
    str_4 = '\x7f'
    var_4 = module_0.shitcode(str_4)

def test_case_10():
    str_0 = 'Héllo'
    var_0 = module_0.shitcode(str_0)
    str_1 = 'H€llo'
    var_1 = module_0.shitcode(str_1)