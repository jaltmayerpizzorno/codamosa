# Automatically generated by Pynguin.
import youtube_dl.downloader.f4m as module_0

def test_case_0():
    try:
        bytes_0 = b'\xdd8O\x92\x9a\xd4\x1ax\x97\x90\xb5\xc3\xbb\xe4x\xe6C2='
        var_0 = module_0.read_bootstrap_info(bytes_0)
    except BaseException:
        pass

def test_case_1():
    try:
        float_0 = None
        var_0 = module_0.read_bootstrap_info(float_0)
    except BaseException:
        pass

def test_case_2():
    try:
        flv_reader_0 = module_0.FlvReader()
        var_0 = flv_reader_0.read_unsigned_long_long()
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'\xdc\xe3`\x96~\xa1\xa5\xfb\xb3u\xb4\xad'
        list_0 = [bytes_0]
        flv_reader_0 = module_0.FlvReader(*list_0)
        var_0 = flv_reader_0.read_afrt()
    except BaseException:
        pass

def test_case_4():
    try:
        flv_reader_0 = module_0.FlvReader()
        var_0 = flv_reader_0.read_asrt()
    except BaseException:
        pass

def test_case_5():
    try:
        bytes_0 = b'\xdc\xe3`\x96~\xa1\xa5\xfb\xb3u\xb4\xad'
        list_0 = [bytes_0]
        flv_reader_0 = module_0.FlvReader(*list_0)
        var_0 = flv_reader_0.read_abst()
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = '71.0.3578.23'
        var_0 = module_0.read_bootstrap_info(str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = ':@ive'
        str_1 = 'segments'
        str_2 = 'fragments'
        bool_0 = False
        str_3 = 'segment_run'
        int_0 = 1619
        var_0 = (bool_0, int_0)
        var_1 = [var_0, int_0]
        var_2 = {str_3: var_1}
        var_3 = [var_2]
        str_4 = 'first'
        int_1 = {str_4: int_0, str_1: int_0}
        int_2 = 5
        int_3 = [int_1, int_2, int_0]
        int_4 = {str_2: int_3}
        int_5 = [int_4]
        var_4 = {str_0: bool_0, str_1: var_3, str_2: int_5}
        var_5 = module_0.build_fragments_list(var_4)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = 'T/ ,2|v}4'
        str_1 = '_>xI9_V_J'
        var_0 = module_0.write_unsigned_int(str_0, str_1)
    except BaseException:
        pass

def test_case_9():
    try:
        bytes_0 = b'U\xad\xae\xd5\xc1\x19\xa4\xcf \xde\x1cg\xe9\xe4Y\xa4B'
        str_0 = 'zi{Q"jmQGE|?e;Ka\rF'
        dict_0 = {str_0: str_0}
        var_0 = module_0.write_unsigned_int_24(bytes_0, dict_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = 'ooyalaVOD'
        str_1 = 'r+aumgF&]'
        list_0 = [str_0, str_0]
        bytes_0 = None
        var_0 = module_0.write_metadata_tag(list_0, bytes_0)
        dict_0 = {str_0: str_0, str_1: str_1}
        flv_reader_0 = module_0.FlvReader()
        str_2 = '(?i)(?:(?P<hours>[0-9.]+)\\s*(?:hours?)|(?P<mins>[0-9.]+)\\s*(?:mins?\\.?|minutes?)\\s*)Z?$'
        flv_reader_1 = None
        list_1 = [flv_reader_1]
        str_3 = '.^7VU! 8|'
        f4m_f_d_0 = module_0.F4mFD(list_1, str_3)
        dict_1 = {f4m_f_d_0: flv_reader_1, str_0: dict_0}
        tuple_0 = (str_2, f4m_f_d_0, dict_1)
        var_1 = flv_reader_0.read_bytes(tuple_0)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = ';'
        var_0 = module_0.remove_encrypted_media(str_0)
    except BaseException:
        pass

def test_case_12():
    try:
        int_0 = None
        var_0 = module_0.get_base_url(int_0)
    except BaseException:
        pass

def test_case_13():
    try:
        float_0 = -580.77
        set_0 = {float_0, float_0, float_0, float_0}
        str_0 = '^hU'
        bytes_0 = b'o\xad\xfey\x9c\x81Fp<#\xcbk\xa6u\xe8t\x8c'
        f4m_f_d_0 = module_0.F4mFD(str_0, bytes_0)
        var_0 = f4m_f_d_0.real_download(float_0, set_0)
    except BaseException:
        pass

def test_case_14():
    try:
        bytes_0 = b'\xdc\xe3`\x96~\xa1\xa5\xfb\xb3u\xb4\xad'
        bool_0 = True
        var_0 = module_0.write_metadata_tag(bool_0, bytes_0)
    except BaseException:
        pass

def test_case_15():
    try:
        bytes_0 = b'\xdc\xe3`\x96~\xa1\xa5\xfb\xb3u\xb4\xad'
        list_0 = [bytes_0]
        flv_reader_0 = module_0.FlvReader(*list_0)
        var_0 = flv_reader_0.read_asrt()
    except BaseException:
        pass

def test_case_16():
    try:
        bytes_0 = b'y\xf0\xcd\x17p\xc9\x86\xb9\xab<J?"\xd5(\x84'
        list_0 = [bytes_0]
        flv_reader_0 = module_0.FlvReader(*list_0)
        var_0 = flv_reader_0.read_abst()
    except BaseException:
        pass

def test_case_17():
    try:
        str_0 = ':@ive'
        str_1 = 'segments'
        str_2 = 'fragments'
        bool_0 = False
        str_3 = 'segment_run'
        int_0 = 1619
        var_0 = (bool_0, int_0)
        int_1 = (int_0, int_0)
        var_1 = [var_0, int_1]
        var_2 = {str_3: var_1}
        var_3 = [var_2]
        str_4 = 'first'
        int_2 = {str_4: int_0, str_1: int_0}
        int_3 = [int_2, int_1, int_0]
        int_4 = {str_2: int_3}
        int_5 = [int_4]
        var_4 = {str_0: bool_0, str_1: var_3, str_2: int_5}
        var_5 = module_0.build_fragments_list(var_4)
    except BaseException:
        pass