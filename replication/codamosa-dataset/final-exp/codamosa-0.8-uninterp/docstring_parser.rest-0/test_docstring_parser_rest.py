# Automatically generated by Pynguin.
import docstring_parser.rest as module_0

def test_case_0():
    pass

def test_case_1():
    str_0 = '\n    This function does a thing.\n\n    :param a: description for a\n    :param b: description for b\n    :type a: str\n    :type b: int\n    :returns: description for return value\n    :rtype: str\n    :raises OSError: raises when something goes wrong\n    :raises TypeError: raises when something else goes wrong\n    :raises ValueError: raises when something else goes wrong\n    :other: something to ignore\n\n    '
    docstring_0 = module_0.parse(str_0)

def test_case_2():
    str_0 = '2XG.J[l+b'
    docstring_0 = module_0.parse(str_0)

def test_case_3():
    str_0 = None
    docstring_0 = module_0.parse(str_0)

def test_case_4():
    str_0 = '\n    Does the foo.\n    :param x: X.\n    :type x: int\n    :param y: Y.\n    :type y: int?\n    :param z: Z.\n      defaults to X + Y.\n    :returns: A.\n    '
    docstring_0 = module_0.parse(str_0)

def test_case_5():
    str_0 = 'Parse ``DocstringMeta`` objects from the body of this section.\n\n        :param text: section body text. Should be cleaned with\n                     ``inspect.cleandoc`` before parsing.\n        '
    docstring_0 = module_0.parse(str_0)

def test_case_6():
    str_0 = 'This is a short description.\n\n    This is a long\n    description.\n\n    :param foo: This is a parameter.\n    :type foo: int\n    :param bar: This is another parameter.\n    :type bar: str\n    :param int baz: This is a third parameter.\n    :param qux: This is a fourth parameter.\n    :type qux: dict, optional\n    :param quux: This is a fifth parameter, defaults to True.\n    :type quux: bool, optional\n    :returns:\n    :rtype: dict\n\n    '
    docstring_0 = module_0.parse(str_0)

def test_case_7():
    str_0 = 'hello\n    here is a description of the function\n    :param int x: the x value\n    :returns int: the output of the function\n    :raises Exception: if an error occurs\n    '
    docstring_0 = module_0.parse(str_0)