# Automatically generated by Pynguin.
import ansible.executor.task_result as module_0

def test_case_0():
    try:
        str_0 = '\n{\n    "changed": false, \n    "msg": "All items completed", \n    "results": [\n        {\n            "_ansible_no_log": false, \n            "_ansible_parsed": true, \n            "changed": false, \n            "item": "sample", \n            "rc": 0, \n            "invocation": {\n                "module_args": {\n                    "name": "sample", \n                    "foo": "bar"\n                }\n            }\n        }\n    ]\n}\n    '
        task_result_0 = module_0.TaskResult(str_0, str_0, str_0)
        var_0 = task_result_0.clean_copy()
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'host.example.org'
        var_0 = None
        str_1 = 'excluded_key'
        str_2 = 'censored'
        str_3 = '_ansible_item_label'
        str_4 = 'removed'
        bool_0 = True
        str_5 = 'filtered'
        var_1 = {str_1: str_4, str_2: str_0, str_5: bool_0, str_3: str_5}
        task_result_0 = module_0.TaskResult(str_0, var_0, var_1)
        var_2 = task_result_0.is_skipped()
        var_3 = task_result_0.clean_copy()
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'xr^'
        str_1 = 'V1gq+KE7$<*b\x0c oH'
        str_2 = '.C*-C?M/'
        task_result_0 = module_0.TaskResult(str_0, str_1, str_2)
        var_0 = task_result_0.is_unreachable()
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '\n{\n    "changed": false, \n    "msg": "All items completed", \n    "results": [\n        {\n            "_ansible_no_log": false, \n            "_ansible_parsed": true, \n            "changed": false, \n            "item": "sample", \n            "rc": 0, \n            "invocation": {\n                "module_args": {\n                    "name": "sample", \n                    "foo": "bar"\n                }\n            }\n        }\n    ]\n}\n    '
        var_0 = None
        task_result_0 = module_0.TaskResult(var_0, var_0, str_0)
        var_1 = task_result_0.clean_copy()
    except BaseException:
        pass

def test_case_4():
    try:
        var_0 = {}
        bytes_0 = b'\xf1v1\x91 !\x88\xd5k\x9d\\\xd9\x0e'
        str_0 = ',7d\x0bYL'
        str_1 = 'results'
        bool_0 = {bytes_0: str_1, str_1: str_0}
        task_result_0 = module_0.TaskResult(bool_0, bool_0, bool_0, var_0)
        var_1 = task_result_0.is_unreachable()
        var_2 = task_result_0.is_failed()
        var_3 = task_result_0.is_skipped()
        var_4 = task_result_0.is_skipped()
        var_5 = task_result_0.clean_copy()
    except BaseException:
        pass