# Automatically generated by Pynguin.
import ansible.vars.fact_cache as module_0

def test_case_0():
    fact_cache_0 = module_0.FactCache()

def test_case_1():
    str_0 = '\n        Takes a string and tries to parse it as a variable definition. Returns\n        the key and value if successful, or raises an error.\n        '
    fact_cache_0 = module_0.FactCache()
    var_0 = fact_cache_0.first_order_merge(str_0, str_0)

def test_case_2():
    fact_cache_0 = module_0.FactCache()
    list_0 = []
    fact_cache_1 = module_0.FactCache(*list_0)
    var_0 = fact_cache_1.__len__()
    var_1 = fact_cache_1.__len__()
    var_2 = fact_cache_1.__iter__()

def test_case_3():
    fact_cache_0 = module_0.FactCache()
    var_0 = fact_cache_0.copy()
    var_1 = fact_cache_0.flush()
    fact_cache_1 = module_0.FactCache()
    var_2 = fact_cache_0.flush()
    float_0 = 4130.449809390073
    str_0 = '>j\\Goj1'
    dict_0 = {str_0: fact_cache_0}
    var_3 = fact_cache_1.first_order_merge(float_0, dict_0)
    var_4 = fact_cache_0.__iter__()

def test_case_4():
    list_0 = []
    fact_cache_0 = module_0.FactCache(*list_0)
    var_0 = fact_cache_0.__iter__()
    fact_cache_1 = module_0.FactCache()
    var_1 = fact_cache_1.keys()
    fact_cache_2 = module_0.FactCache(*list_0)
    var_2 = fact_cache_2.flush()