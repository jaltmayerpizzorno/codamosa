# Automatically generated by Pynguin.
import cookiecutter.replay as module_0

def test_case_0():
    try:
        str_0 = 'cookiecutter.json'
        var_0 = module_0.load(str_0, str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '[A;,K7^;2ozBc.@+*'
        bytes_0 = b'\xcep\xf7p\x9e[\xde\x14\xaf\x18\x08\xa1\x8bI\x1b\xb4'
        var_0 = module_0.dump(str_0, str_0, bytes_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'B"\\iN,U0a\n$} ;\'X/wsw'
        bool_0 = True
        bytes_0 = b'\xc2\xee(\xedm\xd3\xe2\xd8mE\x19\xf88\x9b;\xd4\x89\x9c'
        str_1 = '_@vEZ-i^m'
        tuple_0 = None
        tuple_1 = (bytes_0, str_1, tuple_0)
        var_0 = module_0.dump(str_0, bool_0, tuple_1)
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'\xc7`\x14\xab\xe6l9\x02\xcf\x0e\n\xf0\x89v\x19>i\xa6'
        list_0 = [bytes_0, bytes_0]
        var_0 = module_0.dump(list_0, list_0, list_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = "\x0b!5<{'DByu{f9mx"
        tuple_0 = ()
        var_0 = module_0.load(str_0, tuple_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = '|Tp,pY{#b<6i\rb CX7\r7'
        var_0 = module_0.load(str_0, str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'grpt'
        list_0 = [str_0]
        bytes_0 = b''
        bool_0 = False
        var_0 = module_0.dump(bytes_0, list_0, bool_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = '/home/tcgeng/cookiecutter/tests/pipelines-replay-test/'
        str_1 = 'test-template'
        var_0 = {}
        var_1 = module_0.dump(str_0, str_1, var_0)
    except BaseException:
        pass