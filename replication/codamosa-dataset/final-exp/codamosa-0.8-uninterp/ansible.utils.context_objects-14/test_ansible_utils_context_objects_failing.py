# Automatically generated by Pynguin.
import ansible.utils.context_objects as module_0

def test_case_0():
    try:
        int_0 = -1079
        c_l_i_args_0 = module_0.CLIArgs(int_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'Invalid empty/falseegroup name provided %s'
        bool_0 = None
        tuple_0 = (bool_0,)
        dict_0 = {str_0: tuple_0, str_0: tuple_0, tuple_0: tuple_0}
        c_l_i_args_0 = module_0.CLIArgs(dict_0)
        list_0 = [str_0]
        global_c_l_i_args_0 = module_0.GlobalCLIArgs(list_0)
        dict_1 = {global_c_l_i_args_0: global_c_l_i_args_0, str_0: list_0}
        c_l_i_args_1 = module_0.CLIArgs(dict_1)
        str_1 = '+'
        set_0 = {global_c_l_i_args_0, str_1}
        bool_1 = None
        a_b_c_singleton_0 = module_0._ABCSingleton(list_0, set_0, bool_1, c_l_i_args_1)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'Invalid empty/falseegroup name provided %s'
        bool_0 = None
        tuple_0 = (bool_0,)
        dict_0 = {str_0: tuple_0, str_0: tuple_0, tuple_0: tuple_0}
        c_l_i_args_0 = module_0.CLIArgs(dict_0)
        list_0 = [str_0, c_l_i_args_0, dict_0]
        global_c_l_i_args_0 = module_0.GlobalCLIArgs(list_0)
        dict_1 = {global_c_l_i_args_0: global_c_l_i_args_0, str_0: list_0}
        c_l_i_args_1 = module_0.CLIArgs(dict_1)
        str_1 = '+'
        set_0 = {global_c_l_i_args_0, str_1}
        bool_1 = None
        a_b_c_singleton_0 = module_0._ABCSingleton(list_0, set_0, bool_1, c_l_i_args_1)
    except BaseException:
        pass

def test_case_3():
    try:
        tuple_0 = None
        int_0 = -3792
        set_0 = {int_0}
        float_0 = 3017.0
        str_0 = '4$!9 |Teb|\nHN\rn\x0c<('
        dict_0 = {float_0: set_0, float_0: tuple_0, tuple_0: set_0, int_0: tuple_0}
        int_1 = 429
        global_c_l_i_args_0 = module_0.GlobalCLIArgs(int_1)
        c_l_i_args_0 = module_0.CLIArgs(dict_0)
        list_0 = [str_0, set_0]
        str_1 = 'pow'
        a_b_c_singleton_0 = module_0._ABCSingleton(float_0, str_0, list_0, str_1)
    except BaseException:
        pass