# Automatically generated by Pynguin.
import ansible.utils.unsafe_proxy as module_0

def test_case_0():
    try:
        float_0 = 981.436623
        str_0 = '2QwNs\x0bGJ.,xS<hR:'
        set_0 = {float_0, float_0, str_0, float_0}
        list_0 = [set_0]
        unsafe_proxy_0 = module_0.UnsafeProxy(*list_0)
        dict_0 = {str_0: str_0}
        ansible_unsafe_bytes_0 = module_0.AnsibleUnsafeBytes()
        var_0 = ansible_unsafe_bytes_0.decode(**dict_0)
    except BaseException:
        pass

def test_case_1():
    try:
        ansible_unsafe_0 = module_0.AnsibleUnsafe()
        var_0 = module_0.wrap_var(ansible_unsafe_0)
        str_0 = 'f[iBS-2REvE\x0bg1Gs^Po'
        str_1 = ':bZT\x0cT90DW)n]~zs>BVa'
        str_2 = '4 {\\\n^<'
        dict_0 = {str_0: var_0, str_1: str_0, str_2: var_0, str_1: str_2}
        ansible_unsafe_text_0 = module_0.AnsibleUnsafeText()
        var_1 = ansible_unsafe_text_0.encode(**dict_0)
    except BaseException:
        pass

def test_case_2():
    try:
        int_0 = -845
        str_0 = ''
        str_1 = 'e\x0b$++D[o-/tMxxx'
        str_2 = 'vx0u\r!JWf`>n b-9j7v'
        dict_0 = {str_0: int_0, str_1: str_1, str_2: str_2, str_0: str_0}
        list_0 = [str_2]
        native_jinja_unsafe_text_0 = module_0.NativeJinjaUnsafeText()
        list_1 = [native_jinja_unsafe_text_0]
        unsafe_proxy_0 = module_0.UnsafeProxy(*list_1)
        list_2 = [unsafe_proxy_0]
        unsafe_proxy_1 = module_0.UnsafeProxy(*list_2)
        var_0 = unsafe_proxy_1.__new__(int_0, dict_0, *list_0)
    except BaseException:
        pass

def test_case_3():
    try:
        list_0 = []
        var_0 = module_0.to_unsafe_bytes(*list_0)
    except BaseException:
        pass

def test_case_4():
    try:
        list_0 = []
        ansible_unsafe_0 = module_0.AnsibleUnsafe()
        ansible_unsafe_bytes_0 = module_0.AnsibleUnsafeBytes(*list_0)
        ansible_unsafe_bytes_1 = module_0.AnsibleUnsafeBytes()
        var_0 = module_0.to_unsafe_text()
    except BaseException:
        pass

def test_case_5():
    try:
        native_jinja_unsafe_text_0 = module_0.NativeJinjaUnsafeText()
        str_0 = 'pl<V8] ^T'
        str_1 = '.F\n@|mN*\t?Td`p'
        str_2 = "|'.pju\nc|;"
        str_3 = 'lan'
        var_0 = module_0.wrap_var(str_3)
        str_4 = 'ansible_scp_extra_args'
        set_0 = {str_3, str_0}
        var_1 = module_0.wrap_var(set_0)
        str_5 = 'A6'
        dict_0 = {str_1: str_1, str_2: str_1, str_4: str_1, str_5: native_jinja_unsafe_text_0}
        unsafe_proxy_0 = module_0.UnsafeProxy(**dict_0)
    except BaseException:
        pass

def test_case_6():
    try:
        bytes_0 = b'\x0e\xfd\xcb\xaa'
        str_0 = '&:X<Dnc!Ayn8'
        str_1 = 'p10V`\nOH1JI'
        str_2 = '9n=%+\\I$f)eMTQ?A5`'
        str_3 = 'zViPiP%Km}R\t|\\S;v'
        dict_0 = {str_1: str_1, str_2: str_0, str_3: str_2, str_1: str_2}
        var_0 = module_0.wrap_var(dict_0)
        list_0 = [bytes_0, bytes_0, str_0]
        var_1 = module_0.wrap_var(bytes_0)
        int_0 = 8192
        set_0 = set()
        unsafe_proxy_0 = module_0.UnsafeProxy(*list_0)
        var_2 = unsafe_proxy_0.__new__(int_0, set_0)
    except BaseException:
        pass

def test_case_7():
    try:
        native_jinja_unsafe_text_0 = module_0.NativeJinjaUnsafeText()
        native_jinja_unsafe_text_1 = module_0.NativeJinjaUnsafeText()
        ansible_unsafe_bytes_0 = module_0.AnsibleUnsafeBytes()
        var_0 = ansible_unsafe_bytes_0.decode()
        str_0 = 'v6\rN00o/ v9<DJ)`'
        var_1 = module_0.wrap_var(str_0)
        var_2 = ansible_unsafe_bytes_0.decode()
        unsafe_proxy_0 = None
        var_3 = module_0.wrap_var(unsafe_proxy_0)
        unsafe_proxy_1 = module_0.UnsafeProxy()
    except BaseException:
        pass

def test_case_8():
    try:
        bytes_0 = b'\x0e\xfd\xcb\xaa'
        str_0 = '&:X<Dnc!Ayn8'
        list_0 = [str_0, bytes_0, bytes_0, str_0]
        var_0 = module_0.wrap_var(list_0)
        unsafe_proxy_0 = module_0.UnsafeProxy(*list_0)
        var_1 = module_0.to_unsafe_text()
    except BaseException:
        pass