# Automatically generated by Pynguin.
import ansible.modules.iptables as module_0

def test_case_0():
    pass

def test_case_1():
    float_0 = -1304.51185
    str_0 = '9<_g]dqh!xr/'
    int_0 = 856
    var_0 = module_0.append_tcp_flags(float_0, str_0, int_0)

def test_case_2():
    var_0 = module_0.main()
    int_0 = 15
    dict_0 = {int_0: var_0, var_0: int_0, var_0: int_0}
    tuple_0 = ()
    var_1 = module_0.append_tcp_flags(int_0, dict_0, tuple_0)
    int_1 = -1911
    bytes_0 = b'\xbc\x1e\xd6\x97~:\xfb\x9dE\xf8\x92\\'
    var_2 = module_0.append_wait(int_0, int_1, bytes_0)
    str_0 = '6"*(CIi{n88'
    str_1 = 'ansible.modules.iptables'
    float_0 = 1779.47326
    var_3 = module_0.append_match_flag(tuple_0, str_0, str_1, float_0)
    float_1 = 2269.154995
    int_2 = -1612
    list_0 = [var_1, int_1, dict_0]
    var_4 = module_0.push_arguments(dict_0, float_1, int_2, list_0)

def test_case_3():
    bytes_0 = b'\x869f\xe8\xb0\xfaTy\x19\xb1\x96\xefF\x05:\xfc\x03'
    bytes_1 = b'T\x02\x8b\x023,\xcc`\xabO\xe4\xf9'
    int_0 = -705
    float_0 = -405.922
    var_0 = module_0.append_match_flag(bytes_1, int_0, float_0, bytes_0)

def test_case_4():
    bytes_0 = b'sDD\xf4\xc5\xab\xc5\x97"mg\xd6\xf7\xed\x12\x03'
    set_0 = {bytes_0, bytes_0, bytes_0}
    bool_0 = True
    list_0 = []
    int_0 = 4046
    var_0 = module_0.append_param(bool_0, list_0, set_0, int_0)

def test_case_5():
    bytes_0 = b'sDD\xf4\xc5\xab\xc5\x97"mg\xd6\xf7\xed\x12\x03'
    set_0 = {bytes_0, bytes_0, bytes_0}
    bool_0 = False
    list_0 = None
    var_0 = module_0.append_param(set_0, list_0, set_0, bool_0)

def test_case_6():
    float_0 = -1304.51185
    str_0 = '9<_g]dqh!xr/'
    int_0 = -705
    var_0 = module_0.append_tcp_flags(float_0, str_0, int_0)
    str_1 = 'P\x0c@'
    str_2 = ''
    str_3 = 'http://docs.example.com'
    var_1 = module_0.append_csv(str_1, str_2, str_3)

def test_case_7():
    bool_0 = False
    str_0 = ''
    tuple_0 = None
    var_0 = module_0.append_wait(bool_0, str_0, tuple_0)

def test_case_8():
    str_0 = 'flags'
    str_1 = 'flags_set'
    str_2 = 'ACK'
    str_3 = 'FIN'
    str_4 = [str_2, str_0, str_1, str_3]
    str_5 = [str_2]
    str_6 = {str_0: str_4, str_1: str_5}
    str_7 = '--tcp-flags'
    var_0 = []
    var_1 = module_0.append_tcp_flags(var_0, str_6, str_7)

def test_case_9():
    str_0 = 'flags'
    str_1 = 'flags__set'
    str_2 = 'ACK'
    str_3 = 'RST'
    str_4 = 'SYN'
    str_5 = 'FIN'
    str_6 = [str_2, str_3, str_4, str_5]
    str_7 = {str_0: str_6, str_1: str_2}
    str_8 = 'ppcpseries'
    var_0 = []
    var_1 = module_0.append_tcp_flags(var_0, str_7, str_8)

def test_case_10():
    str_0 = '--syn'
    bool_0 = True
    var_0 = []
    str_1 = 'negate'
    var_1 = module_0.append_match_flag(var_0, str_1, str_0, bool_0)
    var_2 = []
    var_3 = None
    var_4 = module_0.append_match_flag(var_2, var_3, str_0, bool_0)

def test_case_11():
    var_0 = []
    str_0 = 'match'
    str_1 = '--syn'
    bool_0 = True
    var_1 = module_0.append_match_flag(var_0, str_0, str_1, bool_0)
    var_2 = []
    str_2 = 'negate'
    var_3 = module_0.append_match_flag(var_2, str_2, str_1, bool_0)
    var_4 = []
    var_5 = None
    var_6 = module_0.append_match_flag(var_4, var_5, str_1, bool_0)