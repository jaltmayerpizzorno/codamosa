# Automatically generated by Pynguin.
import ansible.module_utils.common.parameters as module_0

def test_case_0():
    try:
        str_0 = '@]CP0w/J@\\W#'
        bytes_0 = b'\x13'
        tuple_0 = (str_0, bytes_0)
        list_0 = [tuple_0]
        set_0 = {tuple_0, bytes_0}
        tuple_1 = (list_0, set_0)
        var_0 = module_0.remove_values(tuple_1, set_0)
    except BaseException:
        pass

def test_case_1():
    try:
        var_0 = module_0.env_fallback()
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'tR=c!;@\x0bTc'
        list_0 = [str_0, str_0, str_0, str_0]
        var_0 = module_0.env_fallback(*list_0)
    except BaseException:
        pass

def test_case_3():
    try:
        float_0 = -2585.5746
        str_0 = '`S&Ltm`5K0'
        var_0 = module_0.set_fallbacks(float_0, str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'TCm~\thct4*T[qI'
        float_0 = None
        tuple_0 = (float_0,)
        str_1 = ''
        dict_0 = {str_1: float_0, str_0: tuple_0}
        bytes_0 = b'\xbc\x1f\xb6w\xfa\x89\x1eG;"\''
        var_0 = module_0.sanitize_keys(dict_0, bytes_0)
        list_0 = []
        bytes_1 = b'\x9a\x0bN\x14\xf7W\xee\xc6\x01\xc3/\xf7'
        var_1 = module_0.set_fallbacks(list_0, bytes_1)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'p1'
        str_1 = 'p1_val'
        str_2 = {str_0: str_1}
        str_3 = 'typ("e'
        str_4 = 'str'
        str_5 = {str_3: str_4}
        str_6 = {str_0: str_5}
        var_0 = module_0.set_fallbacks(str_6, str_2)
        str_7 = 'p2'
        str_8 = {str_3: str_4}
        str_9 = 'fallback'
        str_10 = 'fallback_str'
        var_1 = lambda : str_10
        var_2 = {str_3: str_4, str_9: str_7}
        var_3 = {str_0: str_8, str_7: var_2}
        var_4 = module_0.set_fallbacks(var_3, str_5)
    except BaseException:
        pass