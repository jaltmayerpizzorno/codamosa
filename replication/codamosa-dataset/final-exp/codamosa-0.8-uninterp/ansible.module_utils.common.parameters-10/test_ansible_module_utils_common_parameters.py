# Automatically generated by Pynguin.
import ansible.module_utils.common.parameters as module_0

def test_case_0():
    pass

def test_case_1():
    float_0 = -609.430686
    str_0 = 'Oz6'
    var_0 = module_0.remove_values(float_0, str_0)

def test_case_2():
    bytes_0 = b'A\xd9\xf4T)\xcf\xf3\xbf\xdf\xd0i\xfb'
    dict_0 = {bytes_0: bytes_0}
    var_0 = module_0.remove_values(bytes_0, dict_0)

def test_case_3():
    str_0 = ''
    var_0 = module_0.remove_values(str_0, str_0)

def test_case_4():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    var_0 = module_0.remove_values(dict_0, dict_0)

def test_case_5():
    bytes_0 = b'A\xd9\xf4\xc5\x13)\xcf\xf3\xbf\xdf\xd0i\xfb'
    dict_0 = {}
    var_0 = module_0.remove_values(bytes_0, dict_0)

def test_case_6():
    str_0 = 'File %s is newer, excluding file\n'
    var_0 = module_0.remove_values(str_0, str_0)

def test_case_7():
    bytes_0 = b"\xb6s\xe9R\x18~<'\xb6\xe4\xfe\xf7\x7fN\x8aE\x13\x9a"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    str_0 = "'TY"
    int_0 = -1518
    var_0 = module_0.sanitize_keys(list_0, str_0, int_0)

def test_case_8():
    str_0 = 'VARIABLE_DOES_NOT_EXIST'
    dict_0 = {str_0: str_0}
    bytes_0 = b'\n\x87\xc0!1\xac'
    var_0 = module_0.sanitize_keys(dict_0, bytes_0)

def test_case_9():
    float_0 = 2134.28
    set_0 = {float_0, float_0, float_0}
    var_0 = module_0.sanitize_keys(float_0, set_0)

def test_case_10():
    bytes_0 = b'A\x81'
    list_0 = []
    var_0 = module_0.sanitize_keys(bytes_0, list_0)

def test_case_11():
    str_0 = 'b'
    str_1 = 'default'
    str_2 = 'foo'
    str_3 = {str_1: str_2}
    str_4 = {str_0: str_3}
    var_0 = module_0.set_fallbacks(str_4, str_4)
    var_1 = set()

def test_case_12():
    float_0 = 2134.28
    set_0 = {float_0, float_0, float_0}
    set_1 = set()
    list_0 = [set_0, float_0]
    var_0 = module_0.remove_values(set_1, list_0)

def test_case_13():
    int_0 = 1000
    str_0 = 'wisJQ}%|\x0cOdQoD'
    var_0 = module_0.remove_values(int_0, str_0)

def test_case_14():
    dict_0 = {}
    str_0 = 'w=.(v_\r1]'
    tuple_0 = ()
    dict_1 = {}
    var_0 = module_0.set_fallbacks(dict_1, dict_0)
    var_1 = module_0.sanitize_keys(tuple_0, tuple_0)
    var_2 = module_0.sanitize_keys(dict_0, str_0)

def test_case_15():
    str_0 = 'Test function env_fallback'
    bool_0 = True
    set_0 = {str_0, bool_0}
    bytes_0 = b'\xad\xaf\xf1\x1f\xcax\x9eB\x89('
    var_0 = module_0.sanitize_keys(set_0, bytes_0)

def test_case_16():
    str_0 = 'W  \x0b?'
    dict_0 = {str_0: str_0}
    list_0 = None
    tuple_0 = (list_0, dict_0)
    list_1 = [dict_0, list_0, str_0]
    var_0 = module_0.sanitize_keys(dict_0, tuple_0, list_1)

def test_case_17():
    str_0 = 'b'
    str_1 = 'default'
    str_2 = 'foo'
    str_3 = {str_1: str_2}
    str_4 = {str_0: str_3}
    var_0 = {}
    var_1 = module_0.set_fallbacks(str_4, var_0)
    var_2 = set()

def test_case_18():
    str_0 = 'super-secret-property'
    str_1 = '_ansible_no_log'
    str_2 = '_ansible_no_log_value'
    str_3 = 'super-secret-value'
    str_4 = 'yes'
    str_5 = {str_0: str_3, str_1: str_4, str_2: str_4}
    str_6 = [str_2]
    str_7 = [str_1]
    var_0 = frozenset(str_7)
    var_1 = module_0.sanitize_keys(str_5, str_6, var_0)