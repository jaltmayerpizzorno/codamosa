# Automatically generated by Pynguin.
import tornado.simple_httpclient as module_0
import tornado.netutil as module_1
import tornado.httputil as module_2
import tornado.httpclient as module_3
import tornado.tcpclient as module_4

def test_case_0():
    try:
        str_0 = None
        h_t_t_p_stream_closed_error_0 = module_0.HTTPStreamClosedError(str_0)
        str_1 = '3;b'
        h_t_t_p_stream_closed_error_1 = module_0.HTTPStreamClosedError(str_1)
        list_0 = []
        list_1 = [list_0, str_1, h_t_t_p_stream_closed_error_0]
        float_0 = -141.9
        str_2 = '2\x0c^F'
        int_0 = 400
        resolver_0 = module_1.Resolver()
        awaitable_0 = resolver_0.resolve(str_2, int_0)
        str_3 = 'PX\\@k}Q$p&gQ9\x0bd2J'
        str_4 = 'uI&zNBb\rV{\x0bn5E?'
        h_t_t_p_headers_0 = module_2.HTTPHeaders(*list_0)
        iterator_0 = h_t_t_p_headers_0.__iter__()
        str_5 = None
        float_1 = 1110.1
        list_2 = [float_1, iterator_0, iterator_0, str_4]
        dict_0 = {str_3: str_2, str_4: iterator_0, str_5: str_5, str_3: list_2}
        float_2 = 138.3
        none_type_0 = None
        bool_0 = False
        str_6 = './PM=24N'
        str_7 = 'g_#B'
        bool_1 = True
        h_t_t_p_request_0 = module_3.HTTPRequest(str_4, str_4, h_t_t_p_headers_0, str_1, str_2, float_1, float_1, int_0, float_2, none_type_0, int_0, str_4, str_4, bool_0, str_6, str_7, bool_1)
        h_t_t_p_request_1 = module_3.HTTPRequest(str_0, float_0, awaitable_0, str_0, str_0, str_2, dict_0, h_t_t_p_request_0)
        tuple_0 = ()
        bool_2 = False
        t_c_p_client_0 = module_4.TCPClient()
        h_t_t_p_connection_0 = module_0._HTTPConnection(list_1, h_t_t_p_request_1, tuple_0, bool_2, int_0, t_c_p_client_0, int_0, int_0)
    except BaseException:
        pass