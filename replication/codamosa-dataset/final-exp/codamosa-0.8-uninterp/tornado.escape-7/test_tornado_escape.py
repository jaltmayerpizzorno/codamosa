# Automatically generated by Pynguin.
import tornado.escape as module_0

def test_case_0():
    str_0 = 'i'
    str_1 = module_0.xhtml_escape(str_0)

def test_case_1():
    str_0 = 'Returns the `.AsyncHTTPClient` instance to be used for auth requests.\n\n        May be overridden by subclasses to use an HTTP client other than\n        the default.\n        '
    str_1 = module_0.xhtml_unescape(str_0)

def test_case_2():
    int_0 = -1795
    str_0 = module_0.json_encode(int_0)

def test_case_3():
    str_0 = '<`y)'
    str_1 = module_0.squeeze(str_0)

def test_case_4():
    bytes_0 = b"F\xb2\xf9\x93\xeb\n'\xa5%c\xceS\xca8"
    str_0 = module_0.url_escape(bytes_0)

def test_case_5():
    str_0 = 'jD5\x0c|S\x0bv0pn:|hZ'
    var_0 = module_0.url_unescape(str_0, str_0)

def test_case_6():
    str_0 = None
    dict_0 = module_0.parse_qs_bytes(str_0)

def test_case_7():
    str_0 = 'wR*%'
    bool_0 = True
    str_1 = module_0.linkify(str_0, bool_0, str_0, bool_0)
    str_2 = '1\x0cBH3u'
    str_3 = module_0.json_encode(str_2)
    str_4 = module_0.xhtml_unescape(str_3)
    dict_0 = module_0.parse_qs_bytes(str_2, bool_0)

def test_case_8():
    bytes_0 = b'C\x13+\xcf\xf9o\xa2`9'
    dict_0 = module_0.parse_qs_bytes(bytes_0)

def test_case_9():
    str_0 = 'ASYNC_TEST_TIMEOUT'
    str_1 = module_0.url_escape(str_0)

def test_case_10():
    bytes_0 = b'\x11'
    str_0 = module_0.xhtml_escape(bytes_0)

def test_case_11():
    str_0 = 'http://example.com/foo&bar'
    str_1 = module_0.linkify(str_0, str_0)
    any_0 = module_0.recursive_unicode(str_1)
    bool_0 = True
    str_2 = module_0.linkify(str_1, bool_0)

def test_case_12():
    str_0 = 'http://google.com'
    str_1 = module_0.linkify(str_0)

def test_case_13():
    str_0 = 'N[n>'
    str_1 = module_0.xhtml_escape(str_0)

def test_case_14():
    str_0 = 'Heo www.tonadoweb.o!'
    str_1 = module_0.linkify(str_0)
    list_0 = [str_1, str_1, str_0]
    str_2 = module_0.linkify(str_1, list_0)
    dict_0 = module_0.parse_qs_bytes(str_2)
    optional_0 = module_0.to_unicode(str_2)
    str_3 = module_0.xhtml_escape(str_1)
    any_0 = module_0.recursive_unicode(dict_0)
    any_1 = module_0.recursive_unicode(str_3)
    bool_0 = None
    bool_1 = None
    str_4 = module_0.url_escape(str_2, bool_1)
    var_0 = module_0.url_unescape(str_0, bool_0)
    str_5 = module_0.linkify(str_3, str_4)

def test_case_15():
    str_0 = "oujj[9A/'3B `_(."
    bool_0 = None
    str_1 = module_0.linkify(str_0, str_0, bool_0)
    str_2 = module_0.xhtml_unescape(str_1)
    str_3 = '5~0hOZ9\nn3\\>+2u('
    str_4 = module_0.squeeze(str_3)
    str_5 = module_0.xhtml_escape(str_4)
    str_6 = module_0.url_escape(str_5, bool_0)
    str_7 = module_0.linkify(str_1, str_2)
    any_0 = module_0.recursive_unicode(str_3)
    bool_1 = None
    bool_2 = None
    str_8 = module_0.linkify(str_2, bool_2, str_5)
    str_9 = module_0.linkify(str_2)
    str_10 = module_0.linkify(str_9, str_8)
    str_11 = module_0.linkify(str_6)
    str_12 = '9YQ"&%'
    str_13 = module_0.squeeze(str_12)
    str_14 = module_0.linkify(str_0, bool_1)

def test_case_16():
    bytes_0 = b'my%2Bstring'
    var_0 = module_0.url_unescape(bytes_0)
    str_0 = 'my%2Bstring'
    var_1 = module_0.url_unescape(str_0)
    str_1 = 'utf-8'
    var_2 = module_0.url_unescape(bytes_0, str_1)
    var_3 = module_0.url_unescape(str_0, str_1)
    bool_0 = False
    var_4 = module_0.url_unescape(bytes_0, str_1, bool_0)
    var_5 = module_0.url_unescape(str_0, str_1, bool_0)
    var_6 = None
    var_7 = module_0.url_unescape(bytes_0, var_6, bool_0)

def test_case_17():
    str_0 = '<'
    str_1 = module_0.xhtml_escape(str_0)
    str_2 = module_0.xhtml_unescape(str_1)
    str_3 = '|,FR=w<]ND|f0]drK}8w'
    bool_0 = True
    str_4 = module_0.linkify(str_0, bool_0, str_0)
    dict_0 = module_0.parse_qs_bytes(str_3)
    optional_0 = module_0.to_unicode(str_4)
    str_5 = module_0.squeeze(str_0)
    bool_1 = None
    none_type_0 = None
    optional_1 = module_0.utf8(none_type_0)
    optional_2 = module_0.utf8(str_5)
    str_6 = module_0.linkify(str_5, str_1)
    dict_1 = module_0.parse_qs_bytes(str_4, bool_1)
    optional_3 = module_0.to_unicode(str_2)
    str_7 = module_0.xhtml_escape(str_6)
    tuple_0 = ()
    any_0 = module_0.recursive_unicode(tuple_0)
    var_0 = module_0.url_unescape(str_2)
    str_8 = module_0.url_escape(str_0)
    str_9 = 'x'
    str_10 = module_0.squeeze(str_9)

def test_case_18():
    str_0 = 'hello world,www.baidu.com,http://www.baidu.com'
    str_1 = module_0.linkify(str_0)
    str_2 = 'hello world,www.baidu.com,http://www.baidu.com'
    bool_0 = True
    str_3 = module_0.linkify(str_2, bool_0)

def test_case_19():
    str_0 = 'htt://gogle.com'
    str_1 = module_0.linkify(str_0)

def test_case_20():
    str_0 = 'http://foo.com'
    str_1 = module_0.linkify(str_0)
    list_0 = []
    str_2 = module_0.linkify(str_0, list_0)
    bool_0 = True
    str_3 = '*/NL.'
    list_1 = [str_1, str_3]
    str_4 = module_0.linkify(str_1, bool_0, str_1, list_1)

def test_case_21():
    str_0 = 'http://wexample.com'
    str_1 = module_0.linkify(str_0)
    bool_0 = True
    str_2 = module_0.linkify(str_1, bool_0, str_0)

def test_case_22():
    str_0 = 'Hello www.tornadoweb.org!'
    str_1 = module_0.linkify(str_0)
    str_2 = 'Hello htp:/trnadoweb.org!'
    optional_0 = module_0.utf8(str_1)
    str_3 = '#'
    str_4 = None
    list_0 = [str_3, str_4]
    str_5 = module_0.linkify(str_1, list_0)
    dict_0 = module_0.parse_qs_bytes(str_3)
    optional_1 = module_0.to_unicode(str_2)
    bool_0 = False
    str_6 = module_0.linkify(str_0, str_5, bool_0, list_0)

def test_case_23():
    str_0 = 'Hello www.tornadoweb.org!'
    str_1 = module_0.linkify(str_0)
    str_2 = 'Hello http://tornadoweb.org!'
    str_3 = 'x'
    list_0 = [str_3, str_0]
    str_4 = module_0.linkify(str_1, list_0)
    optional_0 = module_0.to_unicode(str_2)
    str_5 = module_0.squeeze(str_0)
    str_6 = module_0.xhtml_escape(str_1)
    optional_1 = module_0.to_unicode(str_3)
    var_0 = module_0.url_unescape(str_4)
    str_7 = module_0.linkify(str_6, str_3)

def test_case_24():
    str_0 = 'hello world,www.baidu.com,http://www.baidu.com'
    str_1 = module_0.linkify(str_0)
    bool_0 = True
    list_0 = []
    str_2 = module_0.linkify(str_1, bool_0, list_0)

def test_case_25():
    str_0 = 'Hello www.tornadoweb.org!'
    str_1 = module_0.linkify(str_0)
    str_2 = 'x'
    str_3 = module_0.json_encode(str_0)
    list_0 = [str_2, str_0]
    str_4 = module_0.json_encode(str_1)
    str_5 = module_0.linkify(str_1, list_0)
    dict_0 = module_0.parse_qs_bytes(str_2)
    str_6 = '7]M;F E\n&w^t)^'
    str_7 = module_0.squeeze(str_6)
    str_8 = module_0.xhtml_escape(str_0)
    str_9 = module_0.xhtml_escape(str_4)
    optional_0 = module_0.to_unicode(str_8)
    any_0 = module_0.recursive_unicode(str_2)
    str_10 = module_0.json_encode(str_8)
    float_0 = -2043.38422
    any_1 = module_0.recursive_unicode(float_0)
    bool_0 = True
    var_0 = module_0.url_unescape(str_0, bool_0)
    var_1 = module_0.url_unescape(str_5, str_1)
    str_11 = module_0.url_escape(str_7, bool_0)
    bool_1 = True
    str_12 = module_0.linkify(str_7)
    str_13 = module_0.linkify(str_9, bool_1)

def test_case_26():
    str_0 = "oujj[9A/'3B `_(."
    bool_0 = None
    str_1 = module_0.linkify(str_0, str_0, bool_0)
    str_2 = module_0.xhtml_unescape(str_1)
    str_3 = '5~0hOZ9\nn3\\>+2u('
    str_4 = module_0.squeeze(str_3)
    str_5 = module_0.xhtml_escape(str_4)
    str_6 = module_0.url_escape(str_5, bool_0)
    str_7 = module_0.linkify(str_1, str_2)
    any_0 = module_0.recursive_unicode(str_3)
    bool_1 = None
    str_8 = module_0.url_escape(str_5)
    str_9 = module_0.xhtml_escape(str_4)
    str_10 = module_0.xhtml_escape(str_3)
    bool_2 = None
    str_11 = module_0.linkify(str_2, bool_2, str_5)
    str_12 = 'http\x0b//eaple.com/oo&ampjmp;bar'
    list_0 = [str_2, str_11]
    str_13 = module_0.linkify(str_12, list_0)
    str_14 = module_0.linkify(str_2)
    str_15 = module_0.linkify(str_3, bool_0)
    bool_3 = False
    str_16 = module_0.xhtml_unescape(str_12)
    str_17 = module_0.linkify(str_13, bool_3, str_2, bool_1)
    str_18 = module_0.json_encode(str_9)
    str_19 = module_0.linkify(str_10)

def test_case_27():
    str_0 = 'http://user:password@example.com:8080/foo/in d?x=1#y'
    str_1 = module_0.linkify(str_0)
    var_0 = print(str_1)
    bool_0 = True
    str_2 = module_0.linkify(str_0, bool_0)
    var_1 = print(str_2)