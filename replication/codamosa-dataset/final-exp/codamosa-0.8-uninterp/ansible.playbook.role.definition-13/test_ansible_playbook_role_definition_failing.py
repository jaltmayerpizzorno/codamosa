# Automatically generated by Pynguin.
import ansible.playbook.role.definition as module_0
import ansible.utils.display as module_1
import ansible.parsing.yaml.objects as module_2

def test_case_0():
    try:
        float_0 = 0.2
        bytes_0 = b'\xad'
        role_definition_0 = module_0.RoleDefinition(float_0, bytes_0)
        int_0 = 934
        bytes_1 = b'\xaf\xbf\xb0'
        int_1 = 1593
        role_definition_1 = module_0.RoleDefinition(int_0, bytes_1, int_1)
        var_0 = role_definition_1.load(role_definition_0)
    except BaseException:
        pass

def test_case_1():
    try:
        role_definition_0 = module_0.RoleDefinition()
        var_0 = role_definition_0.preprocess_data(role_definition_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'F,Sp!\r'
        role_definition_0 = module_0.RoleDefinition()
        var_0 = role_definition_0.preprocess_data(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = ''
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
        bytes_0 = b'\x1d.\xed\xa4\x93\r\xd1\x91\x0c5\x03\x1ce5\xf9'
        role_definition_0 = module_0.RoleDefinition(bytes_0)
        var_0 = role_definition_0.preprocess_data(dict_0)
    except BaseException:
        pass

def test_case_4():
    try:
        role_definition_0 = module_0.RoleDefinition()
        var_0 = role_definition_0.get_name()
        var_1 = role_definition_0.get_name(var_0)
        role_definition_1 = module_0.RoleDefinition()
        int_0 = None
        var_2 = role_definition_0.preprocess_data(int_0)
    except BaseException:
        pass

def test_case_5():
    try:
        role_definition_0 = module_0.RoleDefinition()
        int_0 = 92
        var_0 = role_definition_0.preprocess_data(int_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = '5Q,s{jk-5#`4Q*V'
        set_0 = {str_0, str_0}
        list_0 = [str_0, str_0, set_0, str_0]
        str_1 = 'T]'
        str_2 = 'pLiSV&}'
        tuple_0 = (list_0, str_1, str_2)
        str_3 = ':avFZb'
        bool_0 = True
        str_4 = 'str'
        tuple_1 = (bool_0, tuple_0, str_4, list_0)
        role_definition_0 = module_0.RoleDefinition(str_3, tuple_1, str_2)
        bool_1 = True
        var_0 = role_definition_0.preprocess_data(bool_1)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'foX[o'
        role_definition_0 = module_0.RoleDefinition()
        var_0 = dict(name=str_0)
        var_1 = role_definition_0.preprocess_data(var_0)
    except BaseException:
        pass

def test_case_8():
    try:
        display_0 = module_1.Display()
        int_0 = -1405
        float_0 = 627.6
        role_definition_0 = module_0.RoleDefinition(display_0, int_0, float_0)
        var_0 = role_definition_0.get_name()
        role_definition_1 = module_0.RoleDefinition()
        var_1 = dict(name=int_0)
        var_2 = role_definition_1.preprocess_data(var_1)
    except BaseException:
        pass

def test_case_9():
    try:
        display_0 = module_1.Display()
        int_0 = -1405
        float_0 = 627.586
        role_definition_0 = module_0.RoleDefinition(float_0, int_0, float_0)
        var_0 = role_definition_0.get_name()
        str_0 = 'localhost,'
        var_1 = dict(name=str_0)
        var_2 = role_definition_0.preprocess_data(var_1)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = 'a'
        str_1 = 'c'
        str_2 = 'my-role-basedir'
        role_definition_0 = module_0.RoleDefinition(str_2)
        str_3 = '+'
        str_4 = 'Q3gQ'
        str_5 = 'O`pQ8:e28rT}!-D1Ra_'
        dict_0 = {str_3: str_0, str_4: str_1, str_5: str_2}
        ansible_mapping_0 = module_2.AnsibleMapping(**dict_0)
        var_0 = role_definition_0.preprocess_data(ansible_mapping_0)
    except BaseException:
        pass