# Automatically generated by Pynguin.
import ansible.playbook.role.definition as module_0
import ansible.playbook.attribute as module_1
import ansible.parsing.yaml.objects as module_2

def test_case_0():
    try:
        int_0 = 3747
        str_0 = "\\AW5\nyFMcLFvBf&'[Ejf"
        float_0 = 0.001
        bool_0 = False
        bytes_0 = b'"X\xfc\xe4\x10%\xca\xe1'
        tuple_0 = ()
        role_definition_0 = module_0.RoleDefinition(bool_0, bytes_0, tuple_0)
        role_definition_1 = module_0.RoleDefinition(str_0, float_0, role_definition_0)
        var_0 = role_definition_1.get_name()
        role_definition_2 = module_0.RoleDefinition()
        var_1 = role_definition_2.load(int_0)
    except BaseException:
        pass

def test_case_1():
    try:
        role_definition_0 = module_0.RoleDefinition()
        var_0 = {}
        var_1 = role_definition_0.preprocess_data(var_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'test_role'
        role_definition_0 = module_0.RoleDefinition()
        var_0 = role_definition_0.preprocess_data(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bool_0 = False
        role_definition_0 = module_0.RoleDefinition()
        role_definition_1 = module_0.RoleDefinition(role_definition_0, role_definition_0)
        var_0 = role_definition_1.preprocess_data(bool_0)
    except BaseException:
        pass

def test_case_4():
    try:
        ansible_mapping_0 = None
        role_definition_0 = module_0.RoleDefinition()
        var_0 = role_definition_0.preprocess_data(ansible_mapping_0)
    except BaseException:
        pass

def test_case_5():
    try:
        bytes_0 = b'b\xdd\n\x87\xe1\xf5d\x18\x04\xb7v\\U:\x9d'
        list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
        float_0 = 2.0
        tuple_0 = ()
        role_definition_0 = module_0.RoleDefinition()
        role_definition_1 = module_0.RoleDefinition(list_0, float_0, tuple_0)
        var_0 = role_definition_1.get_role_params()
        role_definition_2 = module_0.RoleDefinition(bytes_0, list_0)
        str_0 = '\x0b"N\r\x0cLU+XE'
        var_1 = role_definition_1.preprocess_data(str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        dict_0 = {}
        str_0 = 'A[uE-";1z}\x0b\tMSg>d`D'
        role_definition_0 = module_0.RoleDefinition(str_0, str_0)
        var_0 = role_definition_0.get_role_path()
        bytes_0 = b'\x9e'
        var_1 = role_definition_0.get_name(bytes_0)
        var_2 = role_definition_0.preprocess_data(dict_0)
    except BaseException:
        pass

def test_case_7():
    try:
        int_0 = 1634
        bytes_0 = b'\x15\xd5\xfd\x04\xad\xa0F\xee\xb9'
        tuple_0 = ()
        str_0 = 'fD!&w9.Xo`K'
        role_definition_0 = module_0.RoleDefinition(str_0)
        var_0 = role_definition_0.get_name(tuple_0)
        role_definition_1 = module_0.RoleDefinition(bytes_0)
        var_1 = role_definition_1.preprocess_data(int_0)
    except BaseException:
        pass

def test_case_8():
    try:
        var_0 = None
        role_definition_0 = module_0.RoleDefinition(var_0, var_0, var_0, var_0)
        str_0 = 'role'
        str_1 = 'exmple'
        str_2 = {str_0: str_1}
        var_1 = role_definition_0.preprocess_data(str_2)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'role'
        str_1 = 'foo.bar'
        role_definition_0 = module_0.RoleDefinition(str_1, str_1)
        bool_0 = False
        dict_0 = {role_definition_0: role_definition_0, role_definition_0: str_0, bool_0: str_1, role_definition_0: bool_0}
        int_0 = 2089
        list_0 = [int_0, str_0, int_0, int_0]
        float_0 = 792.84
        float_1 = 3387.915683
        role_definition_1 = module_0.RoleDefinition(int_0, list_0, float_0, float_1)
        var_0 = role_definition_1.get_name(dict_0)
        str_2 = {str_0: str_1}
        bytes_0 = b''
        tuple_0 = ()
        attribute_0 = module_1.Attribute(bytes_0, tuple_0, bytes_0)
        tuple_1 = (bytes_0, attribute_0)
        role_definition_2 = module_0.RoleDefinition(bytes_0, tuple_1)
        var_1 = role_definition_1.preprocess_data(str_2)
    except BaseException:
        pass

def test_case_10():
    try:
        int_0 = -1262
        set_0 = {int_0}
        role_definition_0 = module_0.RoleDefinition(set_0)
        var_0 = role_definition_0.get_name()
        var_1 = role_definition_0.get_role_params()
        str_0 = 'role'
        dict_0 = {str_0: str_0, str_0: str_0}
        role_definition_1 = module_0.RoleDefinition(str_0, dict_0)
        var_2 = role_definition_1.get_role_params()
        ansible_mapping_0 = module_2.AnsibleMapping()
        var_3 = role_definition_0.preprocess_data(ansible_mapping_0)
    except BaseException:
        pass

def test_case_11():
    try:
        var_0 = None
        var_1 = None
        var_2 = None
        var_3 = None
        str_0 = 'ns.col.role'
        var_4 = dict(role=str_0)
        var_5 = dict(name=str_0)
        role_definition_0 = module_0.RoleDefinition(var_0, var_1, var_2, var_3)
        var_6 = role_definition_0.preprocess_data(str_0)
    except BaseException:
        pass

def test_case_12():
    try:
        int_0 = -1262
        set_0 = {int_0}
        role_definition_0 = module_0.RoleDefinition(set_0)
        var_0 = role_definition_0.get_name()
        str_0 = 'role'
        var_1 = role_definition_0.get_role_params()
        str_1 = 'foo.bar'
        str_2 = {role_definition_0: str_1, str_0: str_1, str_0: set_0}
        var_2 = role_definition_0.preprocess_data(str_2)
    except BaseException:
        pass