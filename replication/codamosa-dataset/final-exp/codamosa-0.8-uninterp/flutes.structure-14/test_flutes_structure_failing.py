# Automatically generated by Pynguin.
import flutes.structure as module_0

def test_case_0():
    try:
        dict_0 = None
        list_0 = module_0.reverse_map(dict_0)
    except BaseException:
        pass

def test_case_1():
    try:
        list_0 = None
        var_0 = module_0.no_map_instance(list_0)
    except BaseException:
        pass

def test_case_2():
    try:
        int_0 = -1378
        list_0 = [int_0]
        var_0 = module_0.map_structure(int_0, list_0)
    except BaseException:
        pass

def test_case_3():
    try:
        float_0 = 1.0
        dict_0 = {}
        list_0 = module_0.reverse_map(dict_0)
        bool_0 = False
        dict_1 = {float_0: float_0, float_0: bool_0}
        var_0 = module_0.map_structure(float_0, dict_1)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = '0sEWiAh'
        set_0 = {str_0, str_0, str_0}
        var_0 = module_0.map_structure(str_0, set_0)
    except BaseException:
        pass

def test_case_5():
    try:
        float_0 = 0.0
        var_0 = module_0.map_structure(float_0, float_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = '(s="SW19ZQ[}|%'
        var_0 = module_0.map_structure_zip(str_0, str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        var_0 = None
        int_0 = 2765
        int_1 = 1523
        dict_0 = {var_0: int_0, var_0: int_1, var_0: int_0, var_0: int_0}
        list_0 = module_0.reverse_map(dict_0)
        str_0 = 'W X~>m\nRB0 0g\x0cbAh##<'
        dict_1 = {}
        var_1 = module_0.map_structure_zip(str_0, dict_1)
    except BaseException:
        pass

def test_case_8():
    try:
        int_0 = 2078
        tuple_0 = (int_0,)
        set_0 = {int_0, int_0, tuple_0}
        var_0 = module_0.no_map_instance(set_0)
        list_0 = [tuple_0, int_0]
        list_1 = []
        var_1 = module_0.map_structure(set_0, list_1)
        var_2 = module_0.map_structure_zip(tuple_0, list_0)
    except BaseException:
        pass

def test_case_9():
    try:
        set_0 = None
        list_0 = [set_0, set_0]
        tuple_0 = (list_0,)
        list_1 = [tuple_0]
        var_0 = module_0.map_structure(list_1, tuple_0)
    except BaseException:
        pass

def test_case_10():
    try:
        bool_0 = False
        type_0 = None
        bool_1 = False
        dict_0 = {type_0: bool_1, bool_1: bool_1, type_0: bool_1}
        set_0 = set()
        var_0 = module_0.map_structure(dict_0, set_0)
        module_0.register_no_map_class(type_0)
        dict_1 = {}
        list_0 = module_0.reverse_map(dict_1)
        module_0.register_no_map_class(type_0)
        list_1 = module_0.reverse_map(dict_1)
        bytes_0 = b'Y\xa6\xe9\x15\x1b\xd0"9^\xec\x7f\xef'
        var_1 = module_0.map_structure(bytes_0, bool_0)
    except BaseException:
        pass

def test_case_11():
    try:
        int_0 = -2224
        float_0 = 376.2971412642081
        bool_0 = True
        int_1 = -1657
        dict_0 = {float_0: int_0, bool_0: int_1}
        set_0 = {bool_0}
        list_0 = [dict_0]
        var_0 = module_0.map_structure_zip(set_0, list_0)
    except BaseException:
        pass

def test_case_12():
    try:
        int_0 = -2224
        dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
        float_0 = 364.8
        bool_0 = True
        int_1 = -1657
        str_0 = 'ax$[D'
        var_0 = module_0.no_map_instance(str_0)
        dict_1 = {float_0: int_0, bool_0: int_1}
        bytes_0 = b'0\xa1\xb4t\xe9'
        var_1 = module_0.no_map_instance(bytes_0)
        list_0 = module_0.reverse_map(dict_1)
        bytes_1 = b'%\x84!\x14\xe9a\x96\xda\xc3\xab'
        var_2 = module_0.no_map_instance(bytes_1)
        list_1 = [var_1]
        var_3 = module_0.map_structure_zip(dict_0, list_1)
    except BaseException:
        pass

def test_case_13():
    try:
        dict_0 = {}
        int_0 = -2197
        tuple_0 = (dict_0, int_0)
        float_0 = -1302.94
        module_0.register_no_map_class(float_0)
        var_0 = module_0.map_structure(dict_0, tuple_0)
    except BaseException:
        pass

def test_case_14():
    try:
        int_0 = -2224
        float_0 = 376.2971412642081
        bool_0 = True
        int_1 = -1657
        str_0 = 'D^@!8"\x0cI)xUj^IY'
        list_0 = []
        tuple_0 = (list_0,)
        var_0 = module_0.map_structure(str_0, tuple_0)
        dict_0 = {float_0: int_0, bool_0: int_1}
        set_0 = {bool_0}
        list_1 = [var_0]
        var_1 = module_0.map_structure_zip(set_0, list_1)
        bytes_0 = b'0\xa1\xb4t\xe9'
        var_2 = module_0.no_map_instance(bytes_0)
        list_2 = module_0.reverse_map(dict_0)
        bool_1 = False
        set_1 = {float_0, str_0}
        list_3 = [var_1, list_1, var_2, set_1]
        var_3 = module_0.map_structure(bool_1, list_3)
    except BaseException:
        pass

def test_case_15():
    try:
        bool_0 = True
        set_0 = {bool_0}
        list_0 = [set_0]
        var_0 = module_0.map_structure_zip(set_0, list_0)
    except BaseException:
        pass