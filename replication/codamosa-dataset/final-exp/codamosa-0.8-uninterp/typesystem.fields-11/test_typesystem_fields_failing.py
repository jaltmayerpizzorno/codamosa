# Automatically generated by Pynguin.
import typesystem.fields as module_0
import decimal as module_1
import typesystem.base as module_2

def test_case_0():
    try:
        date_time_0 = module_0.DateTime()
        str_0 = 'field_name'
        field_0 = module_0.Field(description=str_0)
        validation_result_0 = field_0.validate_or_error(date_time_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bool_0 = False
        field_0 = module_0.Field()
        any_0 = field_0.serialize(bool_0)
        string_0 = module_0.String()
        object_0 = module_0.Object(properties=string_0)
        str_0 = '\\'
        str_1 = {str_0: str_0, str_0: str_0, object_0: str_0, string_0: str_0}
        any_1 = object_0.validate(str_1)
    except BaseException:
        pass

def test_case_2():
    try:
        boolean_0 = module_0.Boolean()
        any_0 = boolean_0.validate(boolean_0)
    except BaseException:
        pass

def test_case_3():
    try:
        optional_0 = None
        text_0 = module_0.Text()
        any_0 = text_0.validate(optional_0)
    except BaseException:
        pass

def test_case_4():
    try:
        string_0 = module_0.String()
        array_0 = module_0.Array(string_0)
        var_0 = [array_0]
        any_0 = array_0.validate(var_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'time'
        string_0 = module_0.String(format=str_0)
        str_1 = '12:56:00'
        any_0 = string_0.serialize(str_1)
    except BaseException:
        pass

def test_case_6():
    try:
        int_0 = 341
        number_0 = module_0.Number(minimum=int_0, exclusive_minimum=int_0)
        any_0 = number_0.validate(number_0)
    except BaseException:
        pass

def test_case_7():
    try:
        int_0 = 323
        number_0 = module_0.Number(minimum=int_0, exclusive_minimum=int_0)
        any_0 = number_0.validate(int_0)
    except BaseException:
        pass

def test_case_8():
    try:
        int_0 = 960
        str_0 = ''
        number_0 = module_0.Number(exclusive_minimum=int_0, exclusive_maximum=int_0, precision=str_0, multiple_of=int_0)
        any_0 = number_0.validate(int_0)
    except BaseException:
        pass

def test_case_9():
    try:
        int_0 = -2620
        str_0 = 'gM$='
        number_0 = module_0.Number(exclusive_minimum=int_0, multiple_of=int_0)
        any_0 = number_0.validate(str_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = 'patternProperties'
        any_0 = module_0.Any(title=str_0)
        int_0 = 770
        list_0 = [int_0]
        choice_0 = module_0.Choice(choices=list_0)
        any_1 = choice_0.validate(any_0)
    except BaseException:
        pass

def test_case_11():
    try:
        bytes_0 = b'!\xd7\xfa\x95\x8fqp\xa9!aEC\xb4\x89\x89fl\x83+'
        choice_0 = module_0.Choice()
        any_0 = choice_0.validate(bytes_0)
    except BaseException:
        pass

def test_case_12():
    try:
        array_0 = module_0.Array()
        any_0 = array_0.validate(array_0)
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = '\t9-!Sn%tlZU\\-X>X\x0cMwg'
        bool_0 = False
        field_0 = module_0.Field(title=str_0, allow_null=bool_0)
        union_0 = field_0.__or__(field_0)
        any_0 = union_0.validate(bool_0)
    except BaseException:
        pass

def test_case_14():
    try:
        any_0 = module_0.Any()
        text_0 = module_0.Text()
        str_0 = ''
        bool_0 = False
        any_1 = any_0.validate(any_0, bool_0)
        any_2 = text_0.validate(str_0)
    except BaseException:
        pass

def test_case_15():
    try:
        int_0 = 1813
        str_0 = '{e}>'
        const_0 = module_0.Const(int_0)
        any_0 = const_0.validate(str_0)
    except BaseException:
        pass

def test_case_16():
    try:
        str_0 = '>.dN[3$SvHc'
        str_1 = '6kJTy`D=,0$TZ6"g*'
        bool_0 = True
        field_0 = module_0.Field(default=str_1, allow_null=bool_0)
        str_2 = field_0.get_error_text(str_0)
    except BaseException:
        pass

def test_case_17():
    try:
        float_0 = -930.5574
        str_0 = '}qC'
        float_1 = module_0.Float(maximum=float_0, precision=str_0)
        str_1 = 'label'
        string_0 = module_0.String(min_length=str_1)
    except BaseException:
        pass

def test_case_18():
    try:
        str_0 = ' is an invalid keyword argument for '
        any_0 = module_0.Any()
        any_1 = any_0.validate(str_0)
        bool_0 = True
        boolean_0 = module_0.Boolean(description=str_0, allow_null=bool_0)
        boolean_1 = module_0.Boolean()
        float_0 = module_0.Float(multiple_of=boolean_1)
    except BaseException:
        pass

def test_case_19():
    try:
        str_0 = '|\x0b]g<j4AKU|s7t3C%C?'
        dict_0 = {str_0: str_0, str_0: str_0}
        field_0 = module_0.Field(default=dict_0)
        any_0 = field_0.get_default_value()
        const_0 = module_0.Const(dict_0)
        date_time_0 = module_0.DateTime()
        str_1 = 'R'
        dict_1 = {str_1: field_0}
        tuple_0 = ()
        object_0 = module_0.Object(pattern_properties=dict_1, additional_properties=field_0, required=tuple_0)
        any_1 = object_0.validate(any_0)
    except BaseException:
        pass

def test_case_20():
    try:
        float_0 = -1564.2
        number_0 = module_0.Number(minimum=float_0, exclusive_maximum=float_0)
        str_0 = 'enum'
        str_1 = 'e{'
        field_0 = module_0.Field(title=str_1)
        str_2 = 'F)P'
        bool_0 = False
        field_1 = module_0.Field(title=str_2, allow_null=bool_0)
        dict_0 = {str_0: field_0, str_1: field_1}
        int_0 = 893
        number_1 = module_0.Number(precision=str_1, multiple_of=int_0)
        float_1 = module_0.Float(exclusive_maximum=int_0)
        tuple_0 = (number_1, float_1)
        list_0 = [tuple_0, dict_0]
        object_0 = module_0.Object(properties=dict_0, property_names=field_0, required=list_0)
    except BaseException:
        pass

def test_case_21():
    try:
        tuple_0 = ()
        field_0 = module_0.Field(default=tuple_0)
        const_0 = module_0.Const(field_0)
        set_0 = set()
        dict_0 = {}
        int_0 = 2381
        int_1 = -3
        object_0 = module_0.Object(min_properties=int_1)
        object_1 = module_0.Object(properties=set_0, pattern_properties=dict_0, min_properties=int_0, required=object_0)
    except BaseException:
        pass

def test_case_22():
    try:
        str_0 = 'A\r[s'
        bool_0 = False
        field_0 = module_0.Field(description=str_0, default=str_0, allow_null=bool_0)
        dict_0 = {str_0: field_0}
        object_0 = module_0.Object(properties=dict_0, additional_properties=bool_0)
        any_0 = object_0.validate(dict_0)
    except BaseException:
        pass

def test_case_23():
    try:
        int_0 = 977
        str_0 = 'zi'
        field_0 = module_0.Field(title=str_0)
        dict_0 = {str_0: field_0, str_0: field_0, str_0: field_0, str_0: field_0}
        dict_1 = {}
        object_0 = module_0.Object(pattern_properties=dict_0, max_properties=int_0, **dict_1)
        any_0 = object_0.validate(dict_0)
    except BaseException:
        pass

def test_case_24():
    try:
        int_0 = -384
        str_0 = '0Le&R]nw\t'
        dict_0 = {}
        object_0 = module_0.Object(max_properties=int_0, required=str_0)
        any_0 = object_0.validate(dict_0)
    except BaseException:
        pass

def test_case_25():
    try:
        tuple_0 = ()
        int_0 = -483
        array_0 = module_0.Array(tuple_0, int_0, int_0)
    except BaseException:
        pass

def test_case_26():
    try:
        date_time_0 = module_0.DateTime()
        int_0 = 24
        bool_0 = True
        array_0 = module_0.Array(bool_0, int_0)
    except BaseException:
        pass

def test_case_27():
    try:
        float_0 = -853.3
        dict_0 = None
        object_0 = module_0.Object(properties=dict_0)
        any_0 = object_0.validate(float_0)
    except BaseException:
        pass

def test_case_28():
    try:
        choice_0 = None
        object_0 = module_0.Object(property_names=choice_0)
        any_0 = object_0.validate(choice_0)
    except BaseException:
        pass

def test_case_29():
    try:
        dict_0 = {}
        decimal_0 = module_1.Decimal()
        bool_0 = False
        str_0 = 'min_items'
        boolean_0 = module_0.Boolean(title=str_0, default=str_0)
        str_1 = 'zO`ag%%,g:BKfEBK'
        dict_1 = {}
        string_0 = module_0.String(trim_whitespace=bool_0, pattern=str_1, **dict_1)
        any_0 = string_0.serialize(dict_1)
        number_0 = module_0.Number(exclusive_minimum=decimal_0)
        float_0 = module_0.Float(minimum=dict_0, maximum=number_0, exclusive_minimum=decimal_0, multiple_of=decimal_0)
    except BaseException:
        pass

def test_case_30():
    try:
        float_0 = -853.3211793454059
        int_0 = 323
        number_0 = module_0.Number(exclusive_minimum=int_0, multiple_of=float_0)
        any_0 = number_0.validate(int_0)
    except BaseException:
        pass

def test_case_31():
    try:
        float_0 = -850.77
        int_0 = 312
        number_0 = module_0.Number(maximum=int_0, exclusive_maximum=float_0, multiple_of=float_0)
        any_0 = module_0.Any()
        bool_0 = True
        any_1 = number_0.validate(float_0, strict=bool_0)
    except BaseException:
        pass

def test_case_32():
    try:
        float_0 = -853.3211793454059
        int_0 = 312
        number_0 = module_0.Number(minimum=float_0, multiple_of=int_0)
        any_0 = number_0.validate(float_0)
    except BaseException:
        pass

def test_case_33():
    try:
        bool_0 = False
        string_0 = module_0.String()
        object_0 = module_0.Object(properties=string_0)
        str_0 = 'l6st_name'
        str_1 = {str_0: str_0, str_0: str_0}
        any_0 = object_0.validate(str_1)
        field_0 = module_0.Field(title=str_1)
    except BaseException:
        pass

def test_case_34():
    try:
        choice_0 = None
        object_0 = module_0.Object(property_names=choice_0)
        number_0 = module_0.Number()
        any_0 = number_0.validate(choice_0)
    except BaseException:
        pass

def test_case_35():
    try:
        string_0 = module_0.String()
        array_0 = module_0.Array(string_0)
        any_0 = array_0.serialize(string_0)
    except BaseException:
        pass

def test_case_36():
    try:
        boolean_0 = None
        choice_0 = module_0.Choice()
        any_0 = choice_0.validate(boolean_0)
    except BaseException:
        pass

def test_case_37():
    try:
        bool_0 = True
        int_0 = 1809
        int_1 = -1463
        str_0 = '{e}>'
        string_0 = module_0.String(allow_blank=bool_0, trim_whitespace=bool_0, max_length=int_0, min_length=int_1, pattern=str_0)
        integer_0 = module_0.Integer(exclusive_maximum=string_0, precision=str_0)
    except BaseException:
        pass

def test_case_38():
    try:
        str_0 = 'A\r[s'
        bool_0 = False
        field_0 = module_0.Field(description=str_0, default=str_0, allow_null=bool_0)
        boolean_0 = module_0.Boolean()
        any_0 = boolean_0.validate(str_0)
    except BaseException:
        pass

def test_case_39():
    try:
        boolean_0 = None
        array_0 = module_0.Array()
        any_0 = array_0.validate(boolean_0)
    except BaseException:
        pass

def test_case_40():
    try:
        str_0 = 'lst_name'
        bool_0 = True
        string_0 = module_0.String()
        object_0 = module_0.Object(properties=string_0)
        str_1 = 'Smith'
        str_2 = {str_0: str_1, str_1: str_1}
        any_0 = object_0.validate(str_2)
        decimal_0 = module_1.Decimal()
        number_0 = module_0.Number(maximum=decimal_0, exclusive_maximum=decimal_0)
        number_1 = module_0.Number(exclusive_minimum=number_0, exclusive_maximum=decimal_0)
    except BaseException:
        pass

def test_case_41():
    try:
        str_0 = '4'
        int_0 = -1375
        number_0 = module_0.Number(exclusive_maximum=int_0, multiple_of=int_0)
        bool_0 = True
        any_0 = number_0.validate(str_0, strict=bool_0)
    except BaseException:
        pass

def test_case_42():
    try:
        time_0 = None
        int_0 = 13
        object_0 = module_0.Object(properties=time_0, max_properties=int_0)
        field_0 = module_0.Field()
        bool_0 = field_0.has_default()
        str_0 = None
        field_1 = module_0.Field(description=str_0)
    except BaseException:
        pass

def test_case_43():
    try:
        any_0 = module_0.Any()
        text_0 = module_0.Text()
        str_0 = ''
        any_1 = text_0.validate(str_0)
    except BaseException:
        pass

def test_case_44():
    try:
        bool_0 = True
        string_0 = module_0.String()
        object_0 = module_0.Object(properties=string_0)
        str_0 = 'y`%AMOwrI'
        str_1 = {str_0: str_0, str_0: str_0, object_0: str_0, string_0: str_0}
        any_0 = object_0.validate(str_1)
    except BaseException:
        pass

def test_case_45():
    try:
        str_0 = '|\x0b]g<j4AKU|st3C%?'
        bool_0 = False
        date_time_0 = module_0.DateTime()
        optional_0 = None
        str_1 = '?{M:+io_vGXlws3\r<}"\x0b'
        boolean_0 = module_0.Boolean(description=str_1, default=bool_0)
        any_0 = boolean_0.validate(bool_0)
        object_0 = module_0.Object(additional_properties=bool_0, property_names=date_time_0, required=optional_0)
        float_0 = -2167.7749
        number_0 = module_0.Number(minimum=float_0, precision=str_0)
        any_1 = number_0.validate(optional_0)
    except BaseException:
        pass

def test_case_46():
    try:
        int_0 = 4
        float_0 = 416.31065865585396
        number_0 = module_0.Number(minimum=float_0)
        str_0 = '!E ^m%8B9\r'
        string_0 = module_0.String(max_length=int_0)
        any_0 = string_0.validate(str_0)
    except BaseException:
        pass

def test_case_47():
    try:
        int_0 = -2018
        bool_0 = True
        number_0 = module_0.Number(multiple_of=int_0)
        any_0 = number_0.validate(bool_0)
    except BaseException:
        pass

def test_case_48():
    try:
        bool_0 = False
        bool_1 = True
        int_0 = -70
        choice_0 = module_0.Choice()
        string_0 = module_0.String(allow_blank=bool_0, trim_whitespace=bool_1, min_length=int_0, format=choice_0)
    except BaseException:
        pass

def test_case_49():
    try:
        str_0 = 'EB7Ulm\\agD4><{&%8'
        field_0 = None
        dict_0 = {str_0: field_0}
        str_1 = "p '5vKf-'W{"
        bool_0 = False
        field_1 = module_0.Field(description=str_1, allow_null=bool_0)
        int_0 = -1396
        bool_1 = True
        string_0 = module_0.String(trim_whitespace=bool_1)
        tuple_0 = (string_0,)
        object_0 = module_0.Object(properties=dict_0, min_properties=int_0, required=tuple_0)
    except BaseException:
        pass

def test_case_50():
    try:
        str_0 = 'x8zR0CaO#GZ2;-VAfQ'
        field_0 = None
        str_1 = '['
        dict_0 = {str_0: field_0, str_1: field_0}
        object_0 = module_0.Object(pattern_properties=dict_0, additional_properties=field_0)
    except BaseException:
        pass

def test_case_51():
    try:
        time_0 = None
        int_0 = 13
        object_0 = module_0.Object(properties=time_0, max_properties=int_0)
        field_0 = module_0.Field()
        int_1 = 333
        int_2 = -20
        int_3 = None
        number_0 = module_0.Number(minimum=int_2, exclusive_minimum=int_2, multiple_of=int_3)
        any_0 = number_0.validate(int_1)
        const_0 = module_0.Const(time_0)
        bool_0 = True
        any_1 = const_0.validate(any_0, bool_0)
    except BaseException:
        pass

def test_case_52():
    try:
        int_0 = 13
        int_1 = 333
        bool_0 = True
        str_0 = "3f[r&kpz{@@+un/'"
        number_0 = module_0.Number(minimum=int_1, exclusive_maximum=int_1, precision=str_0)
        string_0 = module_0.String(trim_whitespace=bool_0, min_length=int_0, pattern=number_0)
    except BaseException:
        pass

def test_case_53():
    try:
        int_0 = -28
        integer_0 = module_0.Integer()
        var_0 = [integer_0, integer_0]
        union_0 = module_0.Union(var_0)
        bool_0 = True
        string_0 = module_0.String(allow_blank=bool_0, max_length=int_0)
        float_0 = 98.96575
        number_0 = module_0.Number(maximum=int_0, multiple_of=float_0)
        any_0 = number_0.validate(float_0)
    except BaseException:
        pass

def test_case_54():
    try:
        float_0 = -992.9
        float_1 = 1906.55
        number_0 = module_0.Number(minimum=float_0, exclusive_maximum=float_1, multiple_of=float_1)
        any_0 = number_0.validate(float_0)
    except BaseException:
        pass

def test_case_55():
    try:
        time_0 = None
        int_0 = 333
        number_0 = module_0.Number(minimum=int_0)
        boolean_0 = module_0.Boolean()
        any_0 = boolean_0.validate(time_0)
    except BaseException:
        pass

def test_case_56():
    try:
        str_0 = '|\x0b]g<j4AKU|s7t3C%C?'
        string_0 = module_0.String(pattern=str_0)
        any_0 = string_0.validate(str_0)
        int_0 = 1225
        number_0 = module_0.Number(exclusive_minimum=int_0, precision=str_0)
        any_1 = number_0.validate(int_0)
    except BaseException:
        pass

def test_case_57():
    try:
        time_0 = None
        int_0 = 20
        str_0 = '|y)3^.4~q'
        str_1 = 'ykgBt\x0b'
        field_0 = module_0.Field(description=str_1, default=time_0)
        any_0 = field_0.serialize(str_0)
        any_1 = field_0.serialize(time_0)
        number_0 = module_0.Number(minimum=int_0)
        string_0 = module_0.String(max_length=int_0, pattern=str_1)
        any_2 = string_0.validate(str_1)
    except BaseException:
        pass

def test_case_58():
    try:
        field_0 = None
        str_0 = "XUs\tGs\ny5W`'?WBb"
        bool_0 = False
        field_1 = module_0.Field(title=str_0, default=str_0, allow_null=bool_0)
        array_0 = module_0.Array(field_1, field_1)
        any_0 = array_0.serialize(field_0)
        bool_1 = False
        tuple_0 = ()
        dict_0 = {}
        string_0 = module_0.String(allow_blank=bool_1, max_length=tuple_0, **dict_0)
    except BaseException:
        pass

def test_case_59():
    try:
        time_0 = module_0.Time()
        float_0 = -850.77
        int_0 = 312
        number_0 = module_0.Number(minimum=int_0)
        text_0 = module_0.Text()
        any_0 = module_0.Any(default=text_0)
        bool_0 = False
        any_1 = number_0.validate(float_0, strict=bool_0)
    except BaseException:
        pass

def test_case_60():
    try:
        string_0 = module_0.String()
        boolean_0 = module_0.Boolean()
        int_0 = 4
        array_0 = module_0.Array(string_0, boolean_0, int_0, int_0)
        str_0 = 'a'
        bool_0 = False
        var_0 = [str_0, str_0, bool_0, bool_0, bool_0]
        any_0 = array_0.serialize(var_0)
        var_1 = array_0.validate
        int_1 = 115
        var_2 = var_0[:int_1]
        var_3 = array_0.validate
        var_4 = var_0[:int_0]
        var_5 = var_0[:int_0]
        any_1 = array_0.validate(var_5)
    except BaseException:
        pass

def test_case_61():
    try:
        time_0 = None
        int_0 = 20
        str_0 = '|y)3^.4~q'
        str_1 = 'ykgBt\x0b'
        field_0 = module_0.Field(description=str_1, default=time_0)
        any_0 = field_0.serialize(str_0)
        any_1 = field_0.serialize(time_0)
        number_0 = module_0.Number(minimum=int_0)
        str_2 = 'pJ]nE:'
        string_0 = module_0.String(min_length=int_0, format=str_2)
        any_2 = string_0.validate(str_0)
    except BaseException:
        pass

def test_case_62():
    try:
        int_0 = 20
        str_0 = '\n:>\rJ\nMw/'
        number_0 = module_0.Number(minimum=int_0)
        field_0 = None
        str_1 = 'DJF#o\x0cl0j\\\x0b$(nwR'
        str_2 = None
        dict_0 = {str_1: field_0, str_0: field_0, str_2: field_0}
        object_0 = module_0.Object(properties=dict_0, pattern_properties=dict_0, max_properties=int_0)
    except BaseException:
        pass

def test_case_63():
    try:
        time_0 = module_0.Time()
        float_0 = -850.77
        int_0 = 312
        number_0 = module_0.Number(minimum=float_0, multiple_of=int_0)
        any_0 = module_0.Any()
        date_0 = module_0.Date()
        str_0 = None
        bool_0 = True
        field_0 = module_0.Field(default=int_0, allow_null=bool_0)
        dict_0 = {str_0: field_0, str_0: field_0, str_0: field_0, str_0: field_0}
        object_0 = module_0.Object(properties=date_0, pattern_properties=dict_0)
    except BaseException:
        pass

def test_case_64():
    try:
        validation_error_0 = None
        str_0 = 'proi?p~ryNames'
        bool_0 = True
        boolean_0 = module_0.Boolean(description=str_0, allow_null=bool_0)
        any_0 = boolean_0.validate(validation_error_0)
        any_1 = boolean_0.validate(str_0, strict=bool_0)
    except BaseException:
        pass

def test_case_65():
    try:
        int_0 = -3127
        integer_0 = module_0.Integer()
        bool_0 = True
        boolean_0 = module_0.Boolean(allow_null=bool_0)
        any_0 = boolean_0.validate(integer_0)
    except BaseException:
        pass

def test_case_66():
    try:
        int_0 = 4
        str_0 = '|y)3^.4~q'
        dict_0 = {}
        number_0 = module_0.Number(**dict_0)
        bool_0 = True
        string_0 = module_0.String(allow_blank=bool_0, trim_whitespace=bool_0, max_length=int_0)
        any_0 = string_0.validate(str_0)
    except BaseException:
        pass

def test_case_67():
    try:
        float_0 = -853.3211793454059
        int_0 = 312
        decimal_0 = module_1.Decimal()
        number_0 = module_0.Number(maximum=int_0, precision=decimal_0, multiple_of=float_0)
        any_0 = number_0.validate(decimal_0)
    except BaseException:
        pass

def test_case_68():
    try:
        time_0 = module_0.Time()
        int_0 = 333
        str_0 = 'a'
        field_0 = module_0.Field(title=str_0)
        object_0 = module_0.Object(additional_properties=str_0, property_names=field_0, min_properties=int_0)
    except BaseException:
        pass

def test_case_69():
    try:
        time_0 = module_0.Time()
        field_0 = module_0.Field()
        dict_0 = {}
        date_time_0 = module_0.DateTime(**dict_0)
        object_0 = module_0.Object(max_properties=date_time_0, **dict_0)
    except BaseException:
        pass

def test_case_70():
    try:
        str_0 = 'a'
        any_0 = module_0.Any(title=str_0, default=str_0)
        var_0 = None
        field_0 = module_0.Field(title=str_0)
        sequence_0 = None
        object_0 = module_0.Object(additional_properties=var_0, min_properties=field_0, required=sequence_0)
    except BaseException:
        pass

def test_case_71():
    try:
        field_0 = module_0.Field()
        str_0 = '+$KUVI6'
        str_1 = '!([W{K'
        bool_0 = False
        field_1 = module_0.Field(title=str_0, description=str_1, default=str_1, allow_null=bool_0)
        union_0 = field_1.__or__(field_0)
        float_0 = module_0.Float(maximum=union_0)
    except BaseException:
        pass

def test_case_72():
    try:
        int_0 = 10
        dict_0 = {}
        bool_0 = None
        object_0 = module_0.Object(properties=dict_0, additional_properties=bool_0, min_properties=int_0)
        any_0 = object_0.validate(dict_0)
    except BaseException:
        pass

def test_case_73():
    try:
        int_0 = -3128
        integer_0 = module_0.Integer()
        var_0 = [integer_0]
        union_0 = module_0.Union(var_0)
        any_0 = union_0.validate(union_0)
    except BaseException:
        pass

def test_case_74():
    try:
        str_0 = ''
        int_0 = -1371
        bool_0 = False
        dict_0 = {}
        string_0 = module_0.String(allow_blank=bool_0, trim_whitespace=bool_0, max_length=int_0, **dict_0)
        any_0 = string_0.validate(str_0)
    except BaseException:
        pass

def test_case_75():
    try:
        time_0 = module_0.Time()
        float_0 = -875.2382013335426
        str_0 = 'ykgBt\x0b'
        number_0 = module_0.Number(maximum=float_0)
        dict_0 = {}
        bool_0 = False
        int_0 = -1229
        string_0 = module_0.String(trim_whitespace=bool_0, min_length=int_0, pattern=str_0, **dict_0)
        bool_1 = None
        any_0 = string_0.validate(str_0, strict=bool_1)
        field_0 = module_0.Field(default=string_0)
        any_1 = number_0.validate(str_0)
    except BaseException:
        pass

def test_case_76():
    try:
        bytes_0 = None
        list_0 = [bytes_0, bytes_0]
        bool_0 = False
        bool_1 = True
        str_0 = 's1XR(F\\MZ'
        string_0 = module_0.String(allow_blank=bool_0, trim_whitespace=bool_1, format=str_0)
        any_0 = string_0.serialize(list_0)
        str_1 = 'H91];'
        date_time_0 = module_0.DateTime()
        field_0 = module_0.Field(description=str_1, default=str_1)
        date_time_1 = module_0.DateTime()
        field_1 = module_0.Field(default=field_0)
        array_0 = module_0.Array(field_1)
        bool_2 = True
        array_1 = module_0.Array(field_1, field_1, array_0, bool_2)
    except BaseException:
        pass

def test_case_77():
    try:
        int_0 = -1844
        dict_0 = None
        object_0 = module_0.Object(pattern_properties=dict_0, min_properties=int_0)
        str_0 = None
        dict_1 = {str_0: str_0, str_0: object_0}
        any_0 = object_0.validate(dict_1)
    except BaseException:
        pass

def test_case_78():
    try:
        text_0 = module_0.Text()
        str_0 = ''
        int_0 = 32
        number_0 = module_0.Number(maximum=int_0, exclusive_minimum=int_0)
        any_0 = number_0.validate(str_0)
    except BaseException:
        pass

def test_case_79():
    try:
        time_0 = None
        int_0 = -5
        dict_0 = {}
        str_0 = 'DNFg\\6Nu/0\x0b>Yb-Q\\k'
        str_1 = 't88bPR\\Q'
        bool_0 = True
        field_0 = module_0.Field(title=str_0, description=str_1, allow_null=bool_0)
        any_0 = field_0.serialize(time_0)
        bool_1 = False
        object_0 = module_0.Object(properties=dict_0, additional_properties=bool_1, min_properties=int_0)
        int_1 = 955
        str_2 = 'y)3^.4~q'
        str_3 = '?mhcIdP}6'
        str_4 = ')'
        dict_1 = {str_2: int_1, str_3: object_0, str_4: int_1}
        any_1 = object_0.validate(dict_1)
    except BaseException:
        pass

def test_case_80():
    try:
        int_0 = -10
        int_1 = 955
        str_0 = ''
        number_0 = module_0.Number(exclusive_minimum=int_1, exclusive_maximum=int_0, precision=str_0, multiple_of=int_0)
        str_1 = 'zi'
        str_2 = '7\\bLDcEd;aPpLM6'
        field_0 = module_0.Field(title=str_2)
        dict_0 = {str_1: field_0, str_0: field_0, str_0: field_0}
        dict_1 = {}
        object_0 = module_0.Object(pattern_properties=dict_0, max_properties=int_0, **dict_1)
        any_0 = object_0.validate(dict_0)
    except BaseException:
        pass

def test_case_81():
    try:
        int_0 = -1844
        dict_0 = None
        object_0 = module_0.Object(pattern_properties=dict_0, min_properties=int_0)
        bool_0 = False
        field_0 = module_0.Field()
        union_0 = field_0.__or__(field_0)
        any_0 = union_0.validate(dict_0, bool_0)
    except BaseException:
        pass

def test_case_82():
    try:
        str_0 = 'Th4s never validates.'
        dict_0 = {str_0: str_0, str_0: str_0}
        bool_0 = False
        date_time_0 = module_0.DateTime()
        optional_0 = None
        object_0 = module_0.Object(additional_properties=bool_0, property_names=date_time_0, required=optional_0)
        any_0 = object_0.validate(dict_0)
    except BaseException:
        pass

def test_case_83():
    try:
        int_0 = -496
        integer_0 = module_0.Integer(minimum=int_0)
        var_0 = [integer_0]
        union_0 = module_0.Union(var_0)
        any_0 = union_0.validate(int_0)
        array_0 = module_0.Array(int_0)
    except BaseException:
        pass

def test_case_84():
    try:
        string_0 = module_0.String()
        list_0 = [string_0, string_0, string_0]
        array_0 = module_0.Array(list_0)
        any_0 = array_0.validate(list_0)
    except BaseException:
        pass

def test_case_85():
    try:
        str_0 = 'A'
        str_1 = 'B'
        str_2 = 'C'
        str_3 = (str_0, str_1, str_2)
        choice_0 = module_0.Choice(choices=str_3)
        str_4 = 'a'
        str_5 = (str_0, str_4)
        str_6 = 'b]@'
        str_7 = (str_1, str_6)
        str_8 = 'c'
        str_9 = (str_2, str_8)
        str_10 = [str_5, str_3, str_7, str_9]
        choice_1 = module_0.Choice(choices=str_10)
    except BaseException:
        pass

def test_case_86():
    try:
        str_0 = 'C'
        str_1 = (str_0, str_0, str_0)
        choice_0 = module_0.Choice(choices=str_1)
        str_2 = (str_1, str_0)
        str_3 = (str_0, str_1)
        str_4 = [str_3, str_2, str_3]
        choice_1 = module_0.Choice(choices=str_4)
        str_5 = 'A'
        any_0 = choice_0.validate(str_5)
    except BaseException:
        pass

def test_case_87():
    try:
        string_0 = module_0.String()
        boolean_0 = module_0.Boolean()
        int_0 = 17
        int_1 = -14
        array_0 = module_0.Array(string_0, boolean_0, int_0, int_1)
        str_0 = 'V'
        bool_0 = False
        var_0 = [str_0, str_0, bool_0, bool_0, bool_0]
        any_0 = array_0.validate(var_0)
    except BaseException:
        pass

def test_case_88():
    try:
        int_0 = 5
        integer_0 = module_0.Integer(minimum=int_0, maximum=int_0)
        number_0 = module_0.Number(multiple_of=int_0)
        var_0 = [integer_0, number_0]
        union_0 = module_0.Union(var_0)
        int_1 = 15
        any_0 = union_0.validate(int_1)
        bool_0 = False
        str_0 = 'yMz{!mE}vx8'
        field_0 = module_0.Field(title=str_0)
        dict_0 = {str_0: field_0}
        object_0 = module_0.Object(properties=dict_0)
        any_1 = object_0.validate(number_0, strict=bool_0)
    except BaseException:
        pass

def test_case_89():
    try:
        string_0 = module_0.String()
        boolean_0 = module_0.Boolean()
        int_0 = -14
        array_0 = module_0.Array(string_0, boolean_0, int_0, int_0)
        str_0 = 'V'
        bool_0 = False
        var_0 = [str_0, int_0, str_0, bool_0, bool_0, bool_0, boolean_0]
        any_0 = array_0.validate(var_0)
    except BaseException:
        pass

def test_case_90():
    try:
        str_0 = 'May not contain additional items.'
        bool_0 = False
        field_0 = module_0.Field()
        any_0 = field_0.get_default_value()
        field_1 = module_0.Field(description=str_0, allow_null=bool_0)
        bool_1 = field_1.has_default()
        str_1 = "pG*SIWV,\noe>q.WB3C'"
        str_2 = 'blank'
        dict_0 = {str_1: str_0, str_0: str_2, str_0: str_2, str_2: str_0}
        float_0 = -649.25827
        decimal_0 = module_0.Decimal(maximum=float_0)
        any_1 = decimal_0.serialize(any_0)
        time_0 = module_0.Time()
        date_time_0 = module_0.DateTime(**dict_0)
    except BaseException:
        pass

def test_case_91():
    try:
        string_0 = module_0.String()
        boolean_0 = module_0.Boolean()
        int_0 = -7
        int_1 = -14
        array_0 = module_0.Array(string_0, boolean_0, int_0, int_1)
        str_0 = 'V'
        bool_0 = False
        var_0 = [str_0, str_0, bool_0, bool_0, bool_0]
        any_0 = array_0.validate(var_0)
    except BaseException:
        pass

def test_case_92():
    try:
        boolean_0 = module_0.Boolean()
        const_0 = module_0.Const(boolean_0)
        list_0 = [const_0]
        tuple_0 = (const_0, list_0)
        bool_0 = False
        bool_1 = True
        array_0 = module_0.Array(tuple_0, bool_0, bool_1)
    except BaseException:
        pass

def test_case_93():
    try:
        boolean_0 = module_0.Boolean()
        date_0 = module_0.Date()
        list_0 = [boolean_0, boolean_0]
        bool_0 = True
        array_0 = module_0.Array(list_0, bool_0)
        any_0 = array_0.validate(boolean_0)
    except BaseException:
        pass

def test_case_94():
    try:
        boolean_0 = None
        list_0 = []
        text_0 = module_0.Text()
        int_0 = -268
        array_0 = module_0.Array(list_0, text_0, int_0)
        any_0 = array_0.validate(boolean_0)
    except BaseException:
        pass

def test_case_95():
    try:
        str_0 = 'last_name'
        bool_0 = True
        string_0 = module_0.String()
        string_1 = {str_0: string_0}
        object_0 = module_0.Object(properties=string_1)
        str_1 = 'first_name'
        str_2 = 'last_name'
        str_3 = 'John'
        str_4 = 'Smith'
        str_5 = {str_1: str_3, str_2: str_4}
        any_0 = object_0.validate(str_5)
        str_6 = 'first_name'
        str_7 = 'John'
        str_8 = {str_6: str_7}
        any_1 = object_0.validate(str_8)
        str_9 = 'first_name'
        str_10 = 'last_name'
        str_11 = 'John'
        int_0 = 12
        var_0 = {str_9: str_11, str_10: int_0}
        any_2 = object_0.validate(var_0)
    except BaseException:
        pass

def test_case_96():
    try:
        date_0 = module_0.Date()
        date_1 = [date_0]
        str_0 = 'unknown'
        union_0 = module_0.Union(date_1)
        str_1 = '2015-09-26'
        any_0 = union_0.validate(str_1)
        date_2 = module_0.Date()
        date_3 = [date_2]
        union_1 = module_0.Union(date_3)
        str_2 = 'unknown'
        str_3 = 'union'
        str_4 = 'Did not match any valid type.'
        var_0 = [str_0, str_4, str_2]
        message_0 = module_2.Message(text=str_4, code=str_3)
        message_1 = [message_0]
        validation_error_0 = module_2.ValidationError(messages=message_1)
        any_1 = union_1.validate(str_2)
    except BaseException:
        pass

def test_case_97():
    try:
        bool_0 = True
        string_0 = module_0.String()
        object_0 = module_0.Object(properties=string_0)
        str_0 = ''
        str_1 = {str_0: str_0, str_0: str_0}
        any_0 = object_0.validate(str_1)
    except BaseException:
        pass

def test_case_98():
    try:
        date_0 = module_0.Date()
        bool_0 = False
        date_time_0 = module_0.DateTime()
        var_0 = None
        optional_0 = None
        optional_1 = None
        array_0 = module_0.Array(var_0, bool_0, optional_0, date_0, optional_1)
    except BaseException:
        pass

def test_case_99():
    try:
        boolean_0 = module_0.Boolean()
        str_0 = 'true'
        any_0 = boolean_0.validate(str_0)
        boolean_1 = module_0.Boolean()
        str_1 = '1'
        any_1 = boolean_1.validate(str_1)
        boolean_2 = module_0.Boolean()
        str_2 = 'False'
        any_2 = boolean_2.validate(str_2)
        boolean_3 = module_0.Boolean()
        str_3 = '0'
        any_3 = boolean_3.validate(str_3)
        boolean_4 = module_0.Boolean()
        str_4 = ''
        any_4 = boolean_4.validate(str_4)
        bool_0 = True
        boolean_5 = module_0.Boolean(allow_null=bool_0)
        any_5 = boolean_5.validate(str_4)
        boolean_6 = module_0.Boolean(allow_null=bool_0)
        any_6 = boolean_6.validate(str_4)
        boolean_7 = module_0.Boolean(allow_null=bool_0)
        boolean_8 = module_0.Boolean()
        str_5 = 'bad input'
        any_7 = boolean_8.validate(str_5)
    except BaseException:
        pass