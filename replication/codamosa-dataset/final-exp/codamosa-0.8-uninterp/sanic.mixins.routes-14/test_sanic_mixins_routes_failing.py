# Automatically generated by Pynguin.
import sanic.mixins.routes as module_0
import pathlib as module_1

def test_case_0():
    try:
        route_mixin_0 = module_0.RouteMixin()
        pure_path_0 = module_1.PurePath()
        str_0 = '7\r\x0c@z|;`a1 nvsqJDu?0'
        var_0 = route_mixin_0.static(route_mixin_0, str_0, str_0, pure_path_0, str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = ''
        route_mixin_0 = module_0.RouteMixin()
        var_0 = route_mixin_0.add_route(str_0, str_0, str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 't\t\x0cF'
        route_mixin_0 = module_0.RouteMixin()
        var_0 = route_mixin_0.add_route(str_0, str_0, str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        route_mixin_0 = module_0.RouteMixin()
        str_0 = '&0z:Z+Zy#}4MSvm\\yBl'
        bool_0 = False
        var_0 = route_mixin_0.head(str_0, str_0, str_0, bool_0)
        list_0 = [route_mixin_0, route_mixin_0, route_mixin_0, route_mixin_0]
        route_mixin_1 = module_0.RouteMixin(*list_0)
        str_1 = None
        str_2 = 'rk]vZrvv/KFo{\x0bM'
        var_1 = route_mixin_1.put(str_2)
        tuple_0 = (route_mixin_1, str_1)
        str_3 = 'V8A}&wl>eni'
        int_0 = 16
        str_4 = 'x%_w>c&6~C*2B'
        list_1 = [str_4, str_4, str_4]
        var_2 = route_mixin_1.websocket(str_2)
        str_5 = '\n\n'
        none_type_0 = None
        var_3 = route_mixin_0.put(str_5, none_type_0)
        dict_0 = {str_4: list_1}
        route_mixin_2 = module_0.RouteMixin(**dict_0)
        var_4 = route_mixin_2.add_websocket_route(tuple_0, str_3, str_3, int_0)
    except BaseException:
        pass

def test_case_4():
    try:
        bytes_0 = b'\xaa\x11V\xf7\x90\xc8T\xad\xaa\x81\xa6\xaak\xbe'
        list_0 = [bytes_0, bytes_0]
        str_0 = ''
        str_1 = '9VNTN{#1ogN0KiSZT'
        bool_0 = False
        list_1 = [list_0, bytes_0, str_1]
        dict_0 = {str_0: list_1}
        route_mixin_0 = module_0.RouteMixin(**dict_0)
        route_mixin_1 = module_0.RouteMixin()
        str_2 = '\n        Find a route in the router based on the specified view name.\n\n        :param view_name: string of view name to search by\n        :param kwargs: additional params, usually for static files\n        :return: tuple containing (uri, Route)\n        '
        var_0 = route_mixin_1.patch(str_2, bool_0)
        var_1 = route_mixin_1.add_route(list_0, str_0, str_1, str_1, bool_0)
    except BaseException:
        pass

def test_case_5():
    try:
        bool_0 = True
        str_0 = 'D\nZ<RnW$]{9ij"\'<'
        route_mixin_0 = module_0.RouteMixin()
        var_0 = route_mixin_0.add_websocket_route(bool_0, str_0, bool_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = ''
        dict_0 = {str_0: str_0}
        route_mixin_0 = module_0.RouteMixin(**dict_0)
        var_0 = route_mixin_0.head(str_0, str_0)
        optional_0 = None
        bool_0 = True
        list_0 = [str_0]
        pure_path_0 = None
        list_1 = [optional_0, list_0]
        var_1 = route_mixin_0.static(list_0, pure_path_0, list_1, dict_0, bool_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'jN'
        route_mixin_0 = module_0.RouteMixin()
        var_0 = route_mixin_0.add_route(route_mixin_0, str_0, str_0)
    except BaseException:
        pass

def test_case_8():
    try:
        route_mixin_0 = module_0.RouteMixin()
        list_0 = [route_mixin_0]
        str_0 = '97\x0c6Zs+\x0c58mS'
        var_0 = route_mixin_0.add_route(list_0, str_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = ''
        optional_0 = None
        route_mixin_0 = module_0.RouteMixin()
        var_0 = route_mixin_0.options(str_0, optional_0)
        str_1 = 'test_RouteMixin_route'
        str_2 = '/fU(9]k%%a:FS8t!\x0bh'
        bool_0 = True
        route_mixin_1 = module_0.RouteMixin()
        var_1 = route_mixin_1.add_route(str_2, str_2, str_1, bool_0)
    except BaseException:
        pass

def test_case_10():
    try:
        complex_0 = None
        str_0 = '*6<;5\x0cb@_\x0cv'
        int_0 = 64
        route_mixin_0 = module_0.RouteMixin()
        var_0 = route_mixin_0.add_websocket_route(str_0, str_0, complex_0, str_0, int_0)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = 't\t~F'
        route_mixin_0 = module_0.RouteMixin()
        bool_0 = True
        int_0 = -14
        bool_1 = None
        var_0 = route_mixin_0.add_route(str_0, str_0, str_0, bool_0, int_0, bool_1)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = 'bx$)LN^Bw\x0b#q'
        route_mixin_0 = module_0.RouteMixin()
        var_0 = route_mixin_0.add_route(str_0, str_0, str_0, str_0)
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = ''
        optional_0 = None
        route_mixin_0 = module_0.RouteMixin()
        var_0 = route_mixin_0.options(str_0, optional_0)
        str_1 = '.t"wUS.8j`%-'
        bool_0 = True
        var_1 = route_mixin_0.add_route(str_1, str_1, str_0, bool_0)
    except BaseException:
        pass

def test_case_14():
    try:
        route_mixin_0 = module_0.RouteMixin()
        str_0 = 'z03.F?la70`@of'
        bool_0 = False
        list_0 = [bool_0, bool_0]
        str_1 = 'Improper websocket connection.'
        var_0 = route_mixin_0.delete(str_1, str_0)
        route_mixin_1 = module_0.RouteMixin()
        var_1 = route_mixin_1.add_websocket_route(route_mixin_0, str_0, str_0, bool_0, list_0, route_mixin_0, str_0)
    except BaseException:
        pass