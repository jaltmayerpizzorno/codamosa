# Automatically generated by Pynguin.
import ansible.module_utils.facts.hardware.sunos as module_0

def test_case_0():
    try:
        sun_o_s_hardware_collector_0 = module_0.SunOSHardwareCollector()
        sun_o_s_hardware_0 = module_0.SunOSHardware(sun_o_s_hardware_collector_0)
        var_0 = sun_o_s_hardware_0.populate()
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = b'=\x015\xf5\xe8\xe4\xc7\xa5\xd6\xb0\xfb\x9dz\x94\xba\xa9\xc6'
        sun_o_s_hardware_collector_0 = module_0.SunOSHardwareCollector(bytes_0)
        sun_o_s_hardware_0 = module_0.SunOSHardware(sun_o_s_hardware_collector_0)
        sun_o_s_hardware_1 = module_0.SunOSHardware(sun_o_s_hardware_0)
        list_0 = []
        set_0 = set()
        str_0 = 'ljefvi'
        tuple_0 = (list_0, set_0, str_0)
        sun_o_s_hardware_2 = module_0.SunOSHardware(tuple_0)
        var_0 = sun_o_s_hardware_2.get_cpu_facts()
    except BaseException:
        pass

def test_case_2():
    try:
        int_0 = -4075
        sun_o_s_hardware_0 = module_0.SunOSHardware(int_0)
        var_0 = sun_o_s_hardware_0.get_memory_facts()
    except BaseException:
        pass

def test_case_3():
    try:
        list_0 = []
        sun_o_s_hardware_0 = module_0.SunOSHardware(list_0)
        var_0 = sun_o_s_hardware_0.get_dmi_facts()
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'df'
        sun_o_s_hardware_0 = module_0.SunOSHardware(str_0)
        var_0 = sun_o_s_hardware_0.get_device_facts()
    except BaseException:
        pass

def test_case_5():
    try:
        int_0 = 73
        sun_o_s_hardware_0 = module_0.SunOSHardware(int_0)
        var_0 = sun_o_s_hardware_0.get_uptime_facts()
    except BaseException:
        pass

def test_case_6():
    try:
        int_0 = -3116
        str_0 = ')2A#ftVMf%o'
        list_0 = [int_0]
        sun_o_s_hardware_collector_0 = module_0.SunOSHardwareCollector(int_0)
        sun_o_s_hardware_0 = module_0.SunOSHardware(list_0, list_0)
        var_0 = sun_o_s_hardware_0.get_cpu_facts(str_0)
    except BaseException:
        pass