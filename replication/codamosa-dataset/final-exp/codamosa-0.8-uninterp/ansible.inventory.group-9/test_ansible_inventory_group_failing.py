# Automatically generated by Pynguin.
import ansible.inventory.group as module_0

def test_case_0():
    try:
        group_0 = module_0.Group()
        var_0 = group_0.__repr__()
        group_1 = module_0.Group()
        bytes_0 = None
        var_1 = group_1.add_host(bytes_0)
    except BaseException:
        pass

def test_case_1():
    try:
        group_0 = module_0.Group()
        str_0 = 'K[|-ik-"bhw/%mM X\''
        group_1 = module_0.Group(str_0)
        var_0 = group_1.add_child_group(group_0)
        var_1 = group_0.__getstate__()
        var_2 = group_1.deserialize(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        group_0 = module_0.Group()
        var_0 = group_0.serialize()
        var_1 = group_0.get_vars()
        var_2 = group_0.get_hosts()
        int_0 = -610
        var_3 = group_0.__setstate__(int_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'mQga%VI5CS\r.cK'
        group_0 = module_0.Group()
        group_1 = module_0.Group(str_0)
        var_0 = group_1.add_child_group(group_0)
        var_1 = group_1.deserialize(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        group_0 = module_0.Group()
        var_0 = group_0.get_hosts()
        set_0 = set()
        var_1 = group_0.add_child_group(set_0)
    except BaseException:
        pass

def test_case_5():
    try:
        group_0 = module_0.Group()
        var_0 = group_0.add_host(group_0)
    except BaseException:
        pass

def test_case_6():
    try:
        group_0 = module_0.Group()
        str_0 = 'K[|-ik-"bhw/%mM X\''
        group_1 = module_0.Group(str_0)
        var_0 = group_1.add_child_group(group_0)
        float_0 = 315.6
        str_1 = 'A#h*_]'
        var_1 = group_1.set_variable(float_0, str_1)
        var_2 = group_1.deserialize(str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        group_0 = module_0.Group()
        var_0 = group_0.set_priority(group_0)
        var_1 = group_0.serialize()
        var_2 = group_0.clear_hosts_cache()
        str_0 = 'rR'
        str_1 = None
        dict_0 = {str_0: var_2, str_1: var_2, str_0: str_1}
        int_0 = 110
        str_2 = None
        group_1 = module_0.Group()
        var_3 = group_1.set_variable(int_0, str_2)
        var_4 = group_0.get_descendants(**dict_0)
    except BaseException:
        pass

def test_case_8():
    try:
        bytes_0 = b'\xd3\xf4'
        group_0 = module_0.Group()
        var_0 = group_0.set_priority(bytes_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'K[|-ik-"bhw/%mM X\''
        group_0 = module_0.Group(str_0)
        var_0 = group_0.add_child_group(group_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = 'host_3'
        str_1 = 'host_4'
        str_2 = 'group_1'
        group_0 = module_0.Group(str_2)
        str_3 = 'group_2'
        str_4 = 'group_3'
        group_1 = module_0.Group(str_4)
        group_2 = module_0.Group(str_0)
        group_3 = module_0.Group(str_3)
        var_0 = group_0.add_child_group(group_2)
        var_1 = group_0.add_child_group(group_1)
        var_2 = group_1.add_child_group(group_2)
        var_3 = group_3.add_child_group(group_1)
        var_4 = group_0.add_host(str_1)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = 'host_1'
        str_1 = 'host_3'
        dict_0 = {}
        bytes_0 = b'\\'
        str_2 = ''
        var_0 = module_0.to_safe_group_name(dict_0, bytes_0, str_2)
        group_0 = module_0.Group(str_1)
        str_3 = 'group_3'
        group_1 = module_0.Group(str_3)
        str_4 = 'group_4'
        group_2 = module_0.Group(str_4)
        str_5 = 'group_5'
        group_3 = module_0.Group(str_5)
        var_1 = group_2.add_child_group(group_0)
        var_2 = group_1.add_child_group(group_2)
        var_3 = group_3.add_child_group(group_1)
        var_4 = group_1.add_host(str_0)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = 'foo'
        group_0 = module_0.Group(str_0)
        str_1 = 'bar'
        group_1 = module_0.Group(str_1)
        str_2 = 'spam'
        group_2 = module_0.Group(str_2)
        str_3 = 'eggs'
        group_3 = module_0.Group(str_3)
        str_4 = 'bacon'
        group_4 = module_0.Group(str_4)
        var_0 = group_0.add_child_group(group_1)
        var_1 = group_1.add_child_group(group_0)
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = 'host_3'
        str_1 = 'host_4'
        str_2 = 'groupc#'
        group_0 = module_0.Group(str_2)
        group_1 = module_0.Group(str_1)
        str_3 = 'group_4'
        group_2 = module_0.Group(str_3)
        str_4 = 'group_5'
        group_3 = module_0.Group(str_4)
        var_0 = group_1.add_child_group(group_0)
        var_1 = group_1.add_child_group(group_2)
        var_2 = group_3.add_child_group(group_1)
        var_3 = group_2.add_host(str_0)
    except BaseException:
        pass