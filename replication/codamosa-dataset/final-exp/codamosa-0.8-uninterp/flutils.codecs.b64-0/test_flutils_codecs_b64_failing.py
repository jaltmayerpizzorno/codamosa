# Automatically generated by Pynguin.
import flutils.codecs.b64 as module_0
import collections as module_1
import codecs as module_2

def test_case_0():
    try:
        str_0 = 'T-Q`cgSuA_'
        tuple_0 = module_0.encode(str_0, str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        byte_string_0 = None
        tuple_0 = module_0.decode(byte_string_0)
    except BaseException:
        pass

def test_case_2():
    try:
        module_0.register()
        set_0 = set()
        tuple_0 = module_0.decode(set_0)
        str_0 = None
        tuple_1 = module_0.encode(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        module_0.register()
        module_0.register()
        str_0 = '&'
        tuple_0 = module_0.encode(str_0)
        module_0.register()
        module_0.register()
        str_1 = ' W$@Z\x0c|U'
        module_0.register()
        list_0 = [str_0, str_1, str_0, str_0]
        bool_0 = True
        user_string_0 = module_1.UserString(bool_0)
        tuple_1 = module_0.decode(list_0, user_string_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'Unit test for function register'
        var_0 = module_2.getencoder(str_0)
    except BaseException:
        pass