# Automatically generated by Pynguin.
import pypara.monetary as module_0
import decimal as module_1
import pypara.currencies as module_2

def test_case_0():
    try:
        money_0 = module_0.Money()
        list_0 = [money_0, money_0, money_0]
        some_price_0 = module_0.SomePrice(*list_0)
        currency_0 = None
        price_0 = some_price_0.with_ccy(currency_0)
        price_1 = price_0.__add__(price_0)
    except BaseException:
        pass

def test_case_1():
    try:
        list_0 = []
        decimal_0 = module_1.Decimal(*list_0)
        str_0 = ' '
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.scalar_subtract(str_0)
        money_1 = none_money_0.with_qty(decimal_0)
        float_0 = money_0.as_float()
    except BaseException:
        pass

def test_case_2():
    try:
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.positive()
        bool_0 = none_money_0.gt(money_0)
        var_0 = None
        list_0 = [var_0, var_0, var_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_1 = money_0.subtract(money_0)
        money_2 = some_money_0.subtract(money_0)
        bool_1 = some_money_0.lt(money_2)
    except BaseException:
        pass

def test_case_3():
    try:
        none_money_0 = module_0.NoneMoney()
        var_0 = None
        list_0 = [var_0, var_0, var_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = none_money_0.scalar_subtract(var_0)
        decimal_0 = module_1.Decimal()
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.floor_divide(var_0)
    except BaseException:
        pass

def test_case_4():
    try:
        float_0 = -1751.24243
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.divide(float_0)
        decimal_0 = module_1.Decimal()
        list_0 = [decimal_0, decimal_0, decimal_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_1 = some_price_0.add(price_0)
        var_0 = price_1.__round__()
        none_price_1 = module_0.NonePrice()
        int_0 = none_price_1.as_integer()
    except BaseException:
        pass

def test_case_5():
    try:
        int_0 = 2513
        none_price_0 = module_0.NonePrice()
        bool_0 = none_price_0.is_equal(none_price_0)
        price_0 = none_price_0.round(int_0)
        price_1 = none_price_0.abs()
        bool_1 = price_0.lte(price_0)
        var_0 = None
        list_0 = [var_0, var_0, var_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.floor_divide(var_0)
    except BaseException:
        pass

def test_case_6():
    try:
        int_0 = 2497
        none_price_0 = module_0.NonePrice()
        price_0 = None
        price_1 = none_price_0.add(price_0)
        bool_0 = none_price_0.is_equal(int_0)
        price_2 = none_price_0.scalar_add(int_0)
        var_0 = None
        list_0 = [var_0, var_0, var_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.divide(var_0)
    except BaseException:
        pass

def test_case_7():
    try:
        int_0 = 2497
        none_price_0 = module_0.NonePrice()
        bool_0 = none_price_0.is_equal(int_0)
        price_0 = none_price_0.scalar_add(int_0)
        var_0 = None
        list_0 = [var_0, var_0, var_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.divide(var_0)
    except BaseException:
        pass

def test_case_8():
    try:
        decimal_0 = None
        int_0 = 2497
        none_price_0 = module_0.NonePrice()
        bool_0 = none_price_0.is_equal(int_0)
        price_0 = none_price_0.with_qty(decimal_0)
        var_0 = price_0.__round__(int_0)
        price_1 = none_price_0.positive()
        bool_1 = price_0.lte(price_0)
        var_1 = None
        list_0 = [var_1, var_1, var_1]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.floor_divide(var_1)
    except BaseException:
        pass

def test_case_9():
    try:
        money_0 = module_0.Money()
        currency_0 = None
        none_type_0 = None
        dict_0 = {}
        none_price_0 = module_0.NonePrice(**dict_0)
        price_0 = none_price_0.convert(currency_0, none_type_0)
        list_0 = [money_0, money_0, money_0]
        some_price_0 = module_0.SomePrice(*list_0)
        decimal_0 = module_1.Decimal()
        price_1 = some_price_0.abs()
        bool_0 = some_price_0.gt(price_1)
    except BaseException:
        pass

def test_case_10():
    try:
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.negative()
        bool_0 = none_money_0.gt(money_0)
        var_0 = None
        list_0 = [var_0, var_0, var_0]
        money_1 = money_0.round()
        some_money_0 = module_0.SomeMoney(*list_0)
        money_2 = money_0.__floordiv__(var_0)
        bool_1 = some_money_0.lt(money_0)
        money_3 = some_money_0.subtract(money_0)
        bool_2 = some_money_0.gte(money_3)
    except BaseException:
        pass

def test_case_11():
    try:
        money_0 = module_0.Money()
        list_0 = [money_0, money_0, money_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.abs()
        str_0 = '\x0ce"\x0b2*!\x0b?qjN?wP*dv'
        int_0 = 5267
        currency_type_0 = module_2.CurrencyType.METAL
        decimal_0 = module_1.Decimal()
        int_1 = 2183
        currency_0 = module_2.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_1)
        none_money_0 = module_0.NoneMoney()
        money_1 = none_money_0.with_ccy(currency_0)
        bool_0 = some_price_0.lt(price_0)
    except BaseException:
        pass

def test_case_12():
    try:
        money_0 = module_0.Money()
        list_0 = [money_0, money_0, money_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_1 = some_money_0.floor_divide(money_0)
    except BaseException:
        pass

def test_case_13():
    try:
        int_0 = 2497
        none_price_0 = module_0.NonePrice()
        bool_0 = none_price_0.is_equal(int_0)
        price_0 = none_price_0.positive()
        price_1 = none_price_0.abs()
        bool_1 = price_0.lte(price_0)
        var_0 = None
        list_0 = [var_0, var_0, var_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.floor_divide(var_0)
    except BaseException:
        pass

def test_case_14():
    try:
        money_0 = module_0.Money()
        list_0 = [money_0, money_0, money_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.positive()
        price_1 = price_0.__sub__(price_0)
    except BaseException:
        pass

def test_case_15():
    try:
        dict_0 = {}
        bytes_0 = b''
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.positive()
        price_1 = price_0.__floordiv__(bytes_0)
        int_0 = 256
        var_0 = price_0.__round__(int_0)
        var_1 = price_0.__round__()
        none_money_0 = module_0.NoneMoney(**dict_0)
        int_1 = none_money_0.as_integer()
    except BaseException:
        pass

def test_case_16():
    try:
        none_price_0 = module_0.NonePrice()
        bool_0 = none_price_0.as_boolean()
        money_0 = module_0.Money()
        list_0 = [money_0, money_0, money_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.negative()
        bool_1 = some_price_0.lt(price_0)
    except BaseException:
        pass

def test_case_17():
    try:
        var_0 = None
        int_0 = -1304
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.divide(int_0)
        price_1 = price_0.__mul__(var_0)
        money_0 = module_0.Money()
        bool_0 = money_0.__lt__(money_0)
        list_0 = [money_0, money_0, money_0]
        some_price_0 = module_0.SomePrice(*list_0)
        var_1 = None
        money_1 = money_0.scalar_subtract(var_1)
    except BaseException:
        pass

def test_case_18():
    try:
        int_0 = 2497
        none_price_0 = module_0.NonePrice()
        bool_0 = none_price_0.is_equal(int_0)
        price_0 = none_price_0.scalar_add(int_0)
        float_0 = price_0.__float__()
    except BaseException:
        pass

def test_case_19():
    try:
        money_0 = module_0.Money()
        list_0 = [money_0, money_0, money_0]
        some_price_0 = module_0.SomePrice(*list_0)
        var_0 = None
        str_0 = '_T'
        some_money_0 = module_0.SomeMoney(*list_0)
        money_1 = some_money_0.negative()
        int_0 = 29
        currency_type_0 = module_2.CurrencyType.CRYPTO
        decimal_0 = module_1.Decimal()
        currency_0 = module_2.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.with_ccy(currency_0)
        price_1 = some_price_0.subtract(price_0)
        price_2 = none_price_0.scalar_add(var_0)
        bool_0 = some_price_0.gte(price_1)
    except BaseException:
        pass

def test_case_20():
    try:
        decimal_0 = None
        int_0 = 2495
        str_0 = 'O&u3\\I\x0cX'
        int_1 = -1796
        currency_type_0 = module_2.CurrencyType.CRYPTO
        currency_0 = module_2.Currency(str_0, str_0, int_1, currency_type_0, decimal_0, int_0)
        list_0 = [decimal_0, int_0, decimal_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.abs()
        money_1 = some_money_0.convert(currency_0, list_0)
    except BaseException:
        pass

def test_case_21():
    try:
        var_0 = None
        list_0 = [var_0, var_0, var_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.scalar_subtract(var_0)
    except BaseException:
        pass

def test_case_22():
    try:
        decimal_0 = None
        int_0 = 2497
        none_price_0 = module_0.NonePrice()
        bool_0 = none_price_0.is_equal(int_0)
        price_0 = none_price_0.scalar_add(int_0)
        price_1 = price_0.with_qty(decimal_0)
        var_0 = None
        list_0 = [var_0, var_0, var_0]
        some_price_0 = module_0.SomePrice(*list_0)
        money_0 = some_price_0.times(var_0)
    except BaseException:
        pass

def test_case_23():
    try:
        money_0 = None
        int_0 = 2408
        list_0 = [int_0, int_0]
        bool_0 = False
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.scalar_add(bool_0)
        price_1 = price_0.__mul__(list_0)
        money_1 = price_1.times(money_0)
        money_2 = module_0.Money()
        list_1 = [money_2, money_2, money_2]
        some_price_0 = module_0.SomePrice(*list_1)
        price_2 = some_price_0.abs()
        bool_1 = some_price_0.gt(price_2)
    except BaseException:
        pass

def test_case_24():
    try:
        decimal_0 = None
        int_0 = 2497
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.scalar_add(int_0)
        none_money_0 = module_0.NoneMoney()
        none_money_1 = module_0.NoneMoney()
        bool_0 = price_0.__lt__(price_0)
        none_money_2 = module_0.NoneMoney()
        price_1 = none_price_0.with_qty(decimal_0)
        price_2 = price_1.round()
        var_0 = None
        list_0 = [var_0, var_0, var_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.floor_divide(var_0)
    except BaseException:
        pass

def test_case_25():
    try:
        none_price_0 = module_0.NonePrice()
        none_money_0 = module_0.NoneMoney()
        none_money_1 = module_0.NoneMoney()
        money_0 = none_money_1.scalar_add(none_money_0)
        none_money_2 = module_0.NoneMoney()
        bool_0 = none_money_2.gt(money_0)
        var_0 = None
        list_0 = [var_0, var_0, var_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_1 = some_money_0.divide(var_0)
    except BaseException:
        pass

def test_case_26():
    try:
        decimal_0 = None
        int_0 = 2503
        str_0 = 'neOq n]_\ro8O-u'
        str_1 = 'O&u3\\I\nX'
        int_1 = -1796
        currency_type_0 = module_2.CurrencyType.CRYPTO
        currency_0 = module_2.Currency(str_0, str_1, int_1, currency_type_0, decimal_0, int_0)
        list_0 = [decimal_0, int_0, decimal_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.positive()
        money_1 = money_0.convert(currency_0)
    except BaseException:
        pass

def test_case_27():
    try:
        none_price_0 = module_0.NonePrice()
        none_money_0 = module_0.NoneMoney()
        none_money_1 = module_0.NoneMoney()
        money_0 = none_money_1.scalar_add(none_money_0)
        none_money_2 = module_0.NoneMoney()
        money_1 = None
        bool_0 = none_money_2.gt(money_1)
        var_0 = None
        list_0 = [var_0, var_0, var_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_1 = some_money_0.lt(money_0)
        money_2 = some_money_0.subtract(money_0)
        bool_2 = some_money_0.gt(money_0)
        money_3 = some_money_0.add(money_0)
        money_4 = some_money_0.multiply(var_0)
    except BaseException:
        pass

def test_case_28():
    try:
        decimal_0 = None
        int_0 = 2497
        none_price_0 = module_0.NonePrice()
        price_0 = None
        price_1 = none_price_0.add(price_0)
        bool_0 = none_price_0.is_equal(int_0)
        price_2 = none_price_0.scalar_add(int_0)
        price_3 = none_price_0.with_qty(decimal_0)
        price_4 = price_2.with_qty(decimal_0)
        var_0 = None
        list_0 = [var_0, var_0, var_0]
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.scalar_add(var_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        money_1 = some_money_0.with_qty(decimal_0)
    except BaseException:
        pass

def test_case_29():
    try:
        none_money_0 = module_0.NoneMoney()
        var_0 = None
        list_0 = [var_0, var_0, var_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = none_money_0.multiply(var_0)
        bool_0 = some_money_0.gte(money_0)
        money_1 = some_money_0.subtract(money_0)
        money_2 = money_1.__add__(money_1)
    except BaseException:
        pass

def test_case_30():
    try:
        none_money_0 = module_0.NoneMoney()
        var_0 = None
        list_0 = [var_0, var_0, var_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = none_money_0.divide(var_0)
        bool_0 = some_money_0.gte(money_0)
        money_1 = some_money_0.subtract(money_0)
        money_2 = money_1.__add__(money_1)
    except BaseException:
        pass

def test_case_31():
    try:
        decimal_0 = None
        int_0 = 2543
        none_price_0 = module_0.NonePrice()
        bool_0 = none_price_0.is_equal(int_0)
        price_0 = none_price_0.round(int_0)
        price_1 = price_0.with_qty(decimal_0)
        bool_1 = price_1.gte(price_1)
        price_2 = none_price_0.abs()
        bool_2 = none_price_0.gte(price_0)
        price_3 = price_1.__neg__()
        bool_3 = price_0.lte(price_0)
        var_0 = None
        list_0 = [var_0, var_0, var_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.floor_divide(var_0)
    except BaseException:
        pass

def test_case_32():
    try:
        none_price_0 = module_0.NonePrice()
        price_0 = module_0.Price()
        price_1 = price_0.negative()
    except BaseException:
        pass

def test_case_33():
    try:
        int_0 = 2497
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.scalar_add(int_0)
        none_money_0 = module_0.NoneMoney()
        none_money_1 = module_0.NoneMoney()
        money_0 = none_money_1.scalar_add(none_money_0)
        none_money_2 = module_0.NoneMoney()
        bool_0 = none_money_2.gt(money_0)
        bool_1 = none_money_2.lt(money_0)
        var_0 = None
        list_0 = [var_0, var_0, var_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_1 = some_money_0.divide(var_0)
    except BaseException:
        pass

def test_case_34():
    try:
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.abs()
        bool_0 = none_money_0.gt(money_0)
        var_0 = None
        list_0 = [var_0, var_0, var_0]
        bool_1 = money_0.lt(money_0)
        money_1 = money_0.__floordiv__(var_0)
        money_2 = money_1.add(money_0)
        currency_0 = None
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.convert(currency_0, money_2, bool_1)
    except BaseException:
        pass

def test_case_35():
    try:
        decimal_0 = None
        int_0 = 2497
        none_price_0 = module_0.NonePrice()
        bool_0 = none_price_0.is_equal(int_0)
        price_0 = none_price_0.scalar_add(int_0)
        price_1 = price_0.with_qty(decimal_0)
        bool_1 = price_0.lte(price_0)
        var_0 = None
        money_0 = None
        none_money_0 = module_0.NoneMoney()
        money_1 = none_money_0.multiply(var_0)
        bool_2 = money_1.__gt__(money_0)
        list_0 = [var_0, var_0, var_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        int_1 = some_money_0.as_integer()
    except BaseException:
        pass

def test_case_36():
    try:
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.negative()
        bool_0 = none_money_0.gt(money_0)
        bool_1 = none_money_0.gte(money_0)
        var_0 = None
        list_0 = [var_0, var_0, var_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_2 = some_money_0.as_boolean()
        money_1 = money_0.__floordiv__(var_0)
        bool_3 = some_money_0.lt(money_0)
        money_2 = some_money_0.subtract(money_0)
        bool_4 = some_money_0.gte(money_0)
        money_3 = money_2.floor_divide(var_0)
    except BaseException:
        pass

def test_case_37():
    try:
        money_0 = module_0.Money()
        list_0 = [money_0, money_0, money_0]
        some_price_0 = module_0.SomePrice(*list_0)
        currency_0 = None
        none_money_0 = module_0.NoneMoney()
        bool_0 = none_money_0.is_equal(currency_0)
        price_0 = some_price_0.with_ccy(currency_0)
        price_1 = price_0.subtract(price_0)
    except BaseException:
        pass

def test_case_38():
    try:
        decimal_0 = None
        int_0 = 2497
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.scalar_add(int_0)
        none_money_0 = module_0.NoneMoney()
        none_money_1 = module_0.NoneMoney()
        money_0 = none_money_1.scalar_add(none_money_0)
        none_money_2 = module_0.NoneMoney()
        bool_0 = none_price_0.gt(price_0)
        bool_1 = none_money_2.gt(money_0)
        price_1 = none_price_0.with_qty(decimal_0)
        price_2 = price_1.round()
        var_0 = None
        list_0 = [var_0, var_0, var_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_1 = some_money_0.divide(var_0)
    except BaseException:
        pass

def test_case_39():
    try:
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.negative()
        bool_0 = none_money_0.gt(money_0)
        var_0 = None
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.divide(var_0)
        list_0 = [var_0, var_0, var_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_1 = money_0.__floordiv__(var_0)
        money_2 = money_1.add(money_0)
        money_3 = none_money_0.multiply(var_0)
        bool_1 = some_money_0.lt(money_0)
        money_4 = some_money_0.subtract(money_0)
        bool_2 = some_money_0.gte(money_0)
        price_1 = none_price_0.add(price_0)
        bool_3 = some_money_0.gt(money_0)
        money_5 = some_money_0.add(money_3)
        money_6 = none_money_0.scalar_subtract(var_0)
        money_7 = none_money_0.scalar_subtract(var_0)
        decimal_0 = module_1.Decimal()
        bool_4 = some_money_0.lte(money_2)
        bool_5 = some_money_0.gte(money_2)
        bool_6 = some_money_0.as_boolean()
        int_0 = -2025
        str_0 = '[i\rP9'
        str_1 = 'kbRvX6!SUG.\\\rZFk v'
        currency_type_0 = module_2.CurrencyType.MONEY
        int_1 = -850
        currency_0 = module_2.Currency(str_0, str_1, int_0, currency_type_0, decimal_0, int_1)
        money_8 = money_4.with_ccy(currency_0)
        money_9 = money_8.round()
    except BaseException:
        pass

def test_case_40():
    try:
        money_0 = module_0.Money()
        list_0 = [money_0, money_0, money_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        currency_0 = None
        money_1 = some_money_0.convert(currency_0)
    except BaseException:
        pass

def test_case_41():
    try:
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.positive()
        bool_0 = money_0.__gt__(money_0)
        var_0 = None
        list_0 = [var_0, var_0, var_0]
        money_1 = none_money_0.divide(var_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        money_2 = none_money_0.scalar_subtract(var_0)
        float_0 = -1003.080836
        var_1 = money_1.__round__(float_0)
        bool_1 = some_money_0.lt(money_0)
        money_3 = some_money_0.subtract(money_0)
        currency_0 = None
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.with_ccy(currency_0)
        price_1 = price_0.subtract(price_0)
    except BaseException:
        pass

def test_case_42():
    try:
        decimal_0 = None
        int_0 = 2497
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.scalar_add(int_0)
        none_money_0 = module_0.NoneMoney()
        str_0 = 'nj`b'
        currency_type_0 = module_2.CurrencyType.MONEY
        int_1 = -2533
        currency_0 = module_2.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_1)
        none_money_1 = module_0.NoneMoney()
        money_0 = none_money_1.convert(currency_0)
        none_money_2 = module_0.NoneMoney()
        money_1 = none_money_2.scalar_add(none_money_0)
        none_money_3 = module_0.NoneMoney()
        bool_0 = none_money_3.gt(money_1)
        price_1 = none_price_0.with_qty(decimal_0)
        price_2 = price_1.round()
        var_0 = None
        list_0 = [var_0, var_0, var_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_2 = some_money_0.divide(var_0)
    except BaseException:
        pass

def test_case_43():
    try:
        decimal_0 = None
        int_0 = 2519
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.scalar_add(int_0)
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.scalar_add(none_money_0)
        none_money_1 = module_0.NoneMoney()
        bool_0 = none_money_1.gt(money_0)
        price_1 = none_price_0.with_qty(decimal_0)
        var_0 = money_0.__round__()
        list_0 = [var_0, none_money_0, none_money_0, price_1]
        some_price_0 = module_0.SomePrice(*list_0)
    except BaseException:
        pass

def test_case_44():
    try:
        none_money_0 = module_0.NoneMoney()
        var_0 = None
        list_0 = [var_0, var_0, var_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = none_money_0.multiply(var_0)
        bool_0 = some_money_0.lt(money_0)
        bool_1 = some_money_0.gte(money_0)
        money_1 = some_money_0.subtract(money_0)
        money_2 = money_1.__add__(money_1)
    except BaseException:
        pass

def test_case_45():
    try:
        decimal_0 = None
        int_0 = 2543
        none_price_0 = module_0.NonePrice()
        price_0 = module_0.Price()
        price_1 = none_price_0.subtract(price_0)
        bool_0 = none_price_0.is_equal(int_0)
        price_2 = none_price_0.round(int_0)
        price_3 = price_2.with_qty(decimal_0)
        bool_1 = price_3.gte(price_3)
        str_0 = 'Forint'
        dict_0 = {str_0: price_2}
        some_money_0 = module_0.SomeMoney(**dict_0)
    except BaseException:
        pass

def test_case_46():
    try:
        decimal_0 = None
        int_0 = 2497
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.scalar_add(int_0)
        none_money_0 = module_0.NoneMoney()
        none_money_1 = module_0.NoneMoney()
        money_0 = none_money_1.scalar_add(none_money_0)
        none_money_2 = module_0.NoneMoney()
        bool_0 = none_money_2.gt(money_0)
        price_1 = none_price_0.with_qty(decimal_0)
        var_0 = None
        list_0 = [var_0, var_0, var_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_1 = some_money_0.scalar_add(var_0)
    except BaseException:
        pass

def test_case_47():
    try:
        decimal_0 = None
        int_0 = 2497
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.scalar_add(int_0)
        none_money_0 = module_0.NoneMoney()
        none_money_1 = module_0.NoneMoney()
        money_0 = none_money_1.scalar_add(none_money_0)
        none_money_2 = module_0.NoneMoney()
        bool_0 = none_money_2.gt(money_0)
        price_1 = none_price_0.with_qty(decimal_0)
        money_1 = module_0.Money()
        int_1 = money_1.as_integer()
    except BaseException:
        pass

def test_case_48():
    try:
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.negative()
        bool_0 = none_money_0.gt(money_0)
        var_0 = None
        list_0 = [var_0, var_0, var_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_1 = money_0.__floordiv__(var_0)
        bool_1 = some_money_0.lt(money_0)
        money_2 = some_money_0.subtract(money_0)
        bool_2 = some_money_0.gte(money_2)
    except BaseException:
        pass

def test_case_49():
    try:
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.negative()
        bool_0 = none_money_0.gt(money_0)
        var_0 = None
        list_0 = [var_0, var_0, var_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_1 = some_money_0.as_boolean()
        money_1 = money_0.__floordiv__(var_0)
        money_2 = some_money_0.subtract(money_0)
        bool_2 = some_money_0.gte(money_0)
        money_3 = some_money_0.add(money_0)
        some_price_0 = module_0.SomePrice(*list_0)
        money_4 = some_money_0.subtract(money_3)
    except BaseException:
        pass

def test_case_50():
    try:
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.positive()
        bool_0 = none_money_0.gt(money_0)
        var_0 = None
        list_0 = [var_0, var_0, var_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_1 = none_money_0.floor_divide(var_0)
        bool_1 = some_money_0.lt(money_0)
        money_2 = some_money_0.subtract(money_0)
        bool_2 = some_money_0.gte(money_0)
        price_0 = module_0.Price()
        price_1 = price_0.__abs__()
        none_price_0 = module_0.NonePrice()
        price_2 = none_price_0.add(price_1)
        money_3 = some_money_0.scalar_subtract(var_0)
    except BaseException:
        pass

def test_case_51():
    try:
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.negative()
        bool_0 = none_money_0.gt(money_0)
        var_0 = None
        list_0 = [var_0, var_0, var_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_1 = money_0.__floordiv__(var_0)
        money_2 = some_money_0.subtract(money_0)
        money_3 = some_money_0.add(money_0)
        money_4 = none_money_0.divide(var_0)
        bool_1 = some_money_0.lt(money_2)
    except BaseException:
        pass

def test_case_52():
    try:
        money_0 = module_0.Money()
        dict_0 = None
        list_0 = [money_0, money_0, money_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.positive()
        price_1 = price_0.divide(dict_0)
    except BaseException:
        pass

def test_case_53():
    try:
        money_0 = module_0.Money()
        list_0 = [money_0, money_0, money_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_0 = some_money_0.as_boolean()
        bool_1 = some_money_0.as_boolean()
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.negative()
        bool_2 = some_price_0.lt(price_0)
    except BaseException:
        pass

def test_case_54():
    try:
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.negative()
        bool_0 = none_money_0.gt(money_0)
        var_0 = None
        list_0 = [var_0, var_0, var_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_1 = money_0.lte(money_0)
        bool_2 = some_money_0.as_boolean()
        bool_3 = some_money_0.lt(money_0)
        money_1 = some_money_0.subtract(money_0)
        bool_4 = some_money_0.gte(money_0)
        money_2 = some_money_0.add(money_0)
        money_3 = money_1.floor_divide(var_0)
    except BaseException:
        pass

def test_case_55():
    try:
        decimal_0 = None
        int_0 = 2495
        str_0 = 'O&u3\\I\x0cX'
        int_1 = -1796
        currency_type_0 = module_2.CurrencyType.CRYPTO
        currency_0 = module_2.Currency(str_0, str_0, int_1, currency_type_0, decimal_0, int_0)
        list_0 = [decimal_0, int_0, decimal_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.with_ccy(currency_0)
        money_1 = some_money_0.convert(currency_0, list_0)
    except BaseException:
        pass

def test_case_56():
    try:
        none_money_0 = module_0.NoneMoney()
        var_0 = None
        list_0 = [var_0, var_0, var_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = none_money_0.multiply(var_0)
        money_1 = some_money_0.subtract(money_0)
        bool_0 = some_money_0.gt(money_0)
        decimal_0 = module_1.Decimal()
        decimal_1 = module_1.Decimal()
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.floor_divide(var_0)
    except BaseException:
        pass

def test_case_57():
    try:
        price_0 = None
        bytes_0 = b''
        list_0 = [bytes_0, bytes_0, bytes_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_1 = some_price_0.add(price_0)
    except BaseException:
        pass

def test_case_58():
    try:
        decimal_0 = None
        int_0 = 2543
        none_price_0 = module_0.NonePrice()
        price_0 = module_0.Price()
        price_1 = none_price_0.subtract(price_0)
        bool_0 = none_price_0.is_equal(int_0)
        price_2 = none_price_0.round(int_0)
        price_3 = price_2.with_qty(decimal_0)
        bool_1 = price_3.gte(price_3)
        price_4 = price_0.add(price_3)
    except BaseException:
        pass

def test_case_59():
    try:
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.round()
        none_money_0 = module_0.NoneMoney()
        var_0 = None
        list_0 = [var_0, var_0, var_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = none_money_0.multiply(var_0)
        money_1 = some_money_0.subtract(money_0)
        bool_0 = some_money_0.gt(money_1)
    except BaseException:
        pass

def test_case_60():
    try:
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.negative()
        bool_0 = none_money_0.gt(money_0)
        var_0 = None
        list_0 = [var_0, var_0, var_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_1 = some_money_0.as_boolean()
        money_1 = money_0.add(money_0)
        money_2 = none_money_0.multiply(var_0)
        bool_2 = some_money_0.lt(money_0)
        money_3 = some_money_0.subtract(money_0)
        money_4 = money_2.positive()
        bool_3 = some_money_0.lte(money_3)
    except BaseException:
        pass

def test_case_61():
    try:
        money_0 = module_0.Money()
        list_0 = [money_0, money_0, money_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.abs()
        bool_0 = price_0.__bool__()
        price_1 = some_price_0.multiply(money_0)
    except BaseException:
        pass

def test_case_62():
    try:
        decimal_0 = None
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.round()
        none_money_0 = module_0.NoneMoney()
        int_0 = 3557
        money_0 = none_money_0.scalar_add(decimal_0)
        money_1 = money_0.floor_divide(int_0)
        price_1 = none_price_0.with_qty(decimal_0)
        var_0 = None
        list_0 = [var_0, var_0, var_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_2 = none_money_0.multiply(var_0)
        bool_0 = some_money_0.lt(money_2)
        money_3 = some_money_0.subtract(money_2)
        bool_1 = some_money_0.gt(money_1)
        some_price_0 = module_0.SomePrice(*list_0)
        price_2 = some_price_0.scalar_add(var_0)
    except BaseException:
        pass

def test_case_63():
    try:
        money_0 = module_0.Money()
        list_0 = [money_0, money_0, money_0]
        some_price_0 = module_0.SomePrice(*list_0)
        currency_0 = None
        price_0 = some_price_0.convert(currency_0)
    except BaseException:
        pass

def test_case_64():
    try:
        money_0 = module_0.Money()
        list_0 = [money_0, money_0, money_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        float_0 = some_money_0.as_float()
        some_price_0 = module_0.SomePrice()
    except BaseException:
        pass

def test_case_65():
    try:
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.scalar_add(none_money_0)
        bool_0 = none_money_0.gt(money_0)
        var_0 = None
        list_0 = [var_0, var_0, var_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_1 = some_money_0.lt(money_0)
        money_1 = none_money_0.multiply(var_0)
        bool_2 = some_money_0.lt(money_1)
        money_2 = some_money_0.subtract(money_1)
        date_0 = None
        money_3 = money_0.with_dov(date_0)
        currency_0 = None
        money_4 = some_money_0.convert(currency_0, date_0)
    except BaseException:
        pass

def test_case_66():
    try:
        currency_0 = None
        money_0 = module_0.Money()
        money_1 = money_0.convert(currency_0)
    except BaseException:
        pass

def test_case_67():
    try:
        money_0 = module_0.Money()
        list_0 = [money_0, money_0, money_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.negative()
        price_1 = price_0.__sub__(price_0)
    except BaseException:
        pass

def test_case_68():
    try:
        money_0 = module_0.Money()
        list_0 = [money_0, money_0, money_0]
        some_price_0 = module_0.SomePrice(*list_0)
        var_0 = None
        str_0 = '_T'
        int_0 = 29
        currency_type_0 = module_2.CurrencyType.CRYPTO
        decimal_0 = module_1.Decimal()
        int_1 = -1796
        currency_0 = module_2.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_1)
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.with_ccy(currency_0)
        price_1 = some_price_0.subtract(price_0)
        none_price_1 = module_0.NonePrice()
        none_price_2 = module_0.NonePrice()
        money_1 = money_0.__pos__()
        bool_0 = price_1.lte(price_0)
        price_2 = none_price_2.scalar_add(var_0)
        bool_1 = some_price_0.gte(price_1)
    except BaseException:
        pass

def test_case_69():
    try:
        money_0 = module_0.Money()
        list_0 = [money_0, money_0, money_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.positive()
        bool_0 = price_0.__le__(price_0)
    except BaseException:
        pass

def test_case_70():
    try:
        money_0 = module_0.Money()
        money_1 = money_0.abs()
    except BaseException:
        pass

def test_case_71():
    try:
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.round()
        none_money_0 = module_0.NoneMoney()
        var_0 = None
        money_0 = none_money_0.multiply(var_0)
        price_1 = module_0.Price()
        bool_0 = price_1.__le__(price_0)
        some_price_0 = module_0.SomePrice()
    except BaseException:
        pass

def test_case_72():
    try:
        decimal_0 = None
        var_0 = None
        none_money_0 = module_0.NoneMoney()
        none_money_1 = module_0.NoneMoney()
        money_0 = none_money_1.negative()
        none_money_2 = module_0.NoneMoney()
        bool_0 = none_money_0.as_boolean()
        bool_1 = money_0.lt(money_0)
        bool_2 = none_money_2.gt(money_0)
        list_0 = [var_0, var_0, var_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_3 = some_money_0.lt(money_0)
        money_1 = none_money_1.multiply(var_0)
        bool_4 = some_money_0.lt(money_1)
        money_2 = some_money_0.subtract(money_1)
        str_0 = 'A% :*m_~'
        int_0 = 2475
        currency_type_0 = module_2.CurrencyType.CRYPTO
        currency_0 = module_2.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        money_3 = some_money_0.with_ccy(currency_0)
        bool_5 = money_3.gt(money_2)
    except BaseException:
        pass

def test_case_73():
    try:
        money_0 = module_0.Money()
        list_0 = [money_0, money_0, money_0]
        some_price_0 = module_0.SomePrice(*list_0)
        currency_0 = None
        int_0 = some_price_0.as_integer()
        price_0 = some_price_0.convert(currency_0)
    except BaseException:
        pass

def test_case_74():
    try:
        var_0 = None
        list_0 = [var_0, var_0, var_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_0 = some_money_0.as_boolean()
        currency_0 = None
        decimal_0 = module_1.Decimal()
        bool_1 = some_money_0.is_equal(bool_0)
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.convert(currency_0)
    except BaseException:
        pass

def test_case_75():
    try:
        money_0 = module_0.Money()
        list_0 = [money_0, money_0, money_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.abs()
        price_1 = price_0.__sub__(price_0)
    except BaseException:
        pass

def test_case_76():
    try:
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.negative()
        var_0 = None
        list_0 = [var_0, var_0, var_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_1 = none_money_0.multiply(var_0)
        bool_0 = some_money_0.lt(money_0)
        money_2 = some_money_0.subtract(money_0)
        bool_1 = some_money_0.gte(money_0)
        money_3 = money_1.floor_divide(var_0)
        money_4 = some_money_0.add(money_1)
        decimal_0 = module_1.Decimal()
        bool_2 = some_money_0.lte(money_0)
        bool_3 = some_money_0.is_equal(money_2)
        none_price_0 = module_0.NonePrice()
        decimal_1 = module_1.Decimal()
        money_5 = money_2.divide(var_0)
    except BaseException:
        pass

def test_case_77():
    try:
        money_0 = module_0.Money()
        list_0 = [money_0, money_0, money_0]
        some_price_0 = module_0.SomePrice(*list_0)
        currency_0 = None
        price_0 = some_price_0.with_ccy(currency_0)
        price_1 = price_0.subtract(price_0)
    except BaseException:
        pass

def test_case_78():
    try:
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.negative()
        var_0 = None
        list_0 = [var_0, var_0, var_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_1 = money_0.add(money_0)
        money_2 = none_money_0.multiply(var_0)
        bool_0 = some_money_0.lt(money_0)
        money_3 = some_money_0.subtract(money_0)
        bool_1 = some_money_0.gte(money_0)
        bool_2 = some_money_0.gt(money_0)
        money_4 = some_money_0.add(money_2)
        decimal_0 = module_1.Decimal()
        none_price_0 = module_0.NonePrice()
        decimal_1 = module_1.Decimal()
        some_price_0 = module_0.SomePrice(*list_0)
        some_price_1 = module_0.SomePrice(*list_0)
        bool_3 = some_price_0.is_equal(some_price_1)
        money_5 = money_4.divide(var_0)
    except BaseException:
        pass

def test_case_79():
    try:
        money_0 = module_0.Money()
        money_1 = money_0.round()
    except BaseException:
        pass

def test_case_80():
    try:
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.negative()
        var_0 = None
        list_0 = [var_0, var_0, var_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_1 = money_0.add(money_0)
        money_2 = none_money_0.multiply(var_0)
        bool_0 = some_money_0.lt(money_0)
        money_3 = some_money_0.subtract(money_0)
        bool_1 = some_money_0.gte(money_0)
        bool_2 = some_money_0.gt(money_0)
        money_4 = money_0.__truediv__(var_0)
        money_5 = some_money_0.add(money_2)
        decimal_0 = module_1.Decimal()
        none_price_0 = module_0.NonePrice()
        money_6 = some_money_0.subtract(money_0)
        date_0 = None
        money_7 = money_5.with_dov(date_0)
        currency_0 = None
        money_8 = some_money_0.convert(currency_0)
    except BaseException:
        pass

def test_case_81():
    try:
        price_0 = module_0.Price()
        none_price_0 = module_0.NonePrice()
        str_0 = 'Z5w|qts3H"^\n%9v3u]o'
        str_1 = 'Yf:&[(a*U;NI4f_['
        int_0 = -1346
        currency_type_0 = module_2.CurrencyType.CRYPTO
        decimal_0 = module_1.Decimal()
        currency_0 = module_2.Currency(str_0, str_1, int_0, currency_type_0, decimal_0, int_0)
        bool_0 = False
        price_1 = price_0.convert(currency_0, bool_0)
    except BaseException:
        pass

def test_case_82():
    try:
        price_0 = module_0.Price()
        bool_0 = price_0.__ge__(price_0)
        bool_1 = price_0.as_boolean()
    except BaseException:
        pass

def test_case_83():
    try:
        str_0 = 's@o43eCp"EP\x0c'
        str_1 = ''
        int_0 = -1787
        currency_type_0 = module_2.CurrencyType.CRYPTO
        decimal_0 = module_1.Decimal()
        int_1 = -2473
        currency_0 = module_2.Currency(str_0, str_1, int_0, currency_type_0, decimal_0, int_1)
        dict_0 = {}
        none_price_0 = module_0.NonePrice(**dict_0)
        price_0 = none_price_0.scalar_add(currency_0)
        var_0 = None
        price_1 = module_0.Price()
        price_2 = price_1.floor_divide(var_0)
    except BaseException:
        pass

def test_case_84():
    try:
        price_0 = module_0.Price()
        price_1 = price_0.__sub__(price_0)
        price_2 = price_0.__abs__()
        float_0 = price_0.as_float()
    except BaseException:
        pass

def test_case_85():
    try:
        money_0 = module_0.Money()
        bool_0 = money_0.__ge__(money_0)
        bool_1 = money_0.gt(money_0)
        some_price_0 = module_0.SomePrice()
    except BaseException:
        pass

def test_case_86():
    try:
        money_0 = module_0.Money()
        bool_0 = money_0.__ge__(money_0)
        bool_1 = money_0.gte(money_0)
        list_0 = [money_0, money_0, money_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.positive()
        bool_2 = some_price_0.lt(price_0)
    except BaseException:
        pass

def test_case_87():
    try:
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.abs()
        bool_0 = none_money_0.gt(money_0)
        var_0 = None
        list_0 = [var_0, var_0, var_0]
        decimal_0 = None
        money_1 = none_money_0.with_qty(decimal_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        money_2 = money_0.__floordiv__(var_0)
        bool_1 = some_money_0.lt(money_0)
        money_3 = some_money_0.subtract(money_0)
        bool_2 = some_money_0.gte(money_0)
        bool_3 = some_money_0.gt(money_0)
        int_0 = -2025
        money_4 = some_money_0.add(money_2)
        bool_4 = money_4.__gt__(money_0)
        money_5 = none_money_0.abs()
        bool_5 = some_money_0.lte(money_0)
        money_6 = none_money_0.abs()
        str_0 = 'CRC'
        str_1 = None
        currency_type_0 = module_2.CurrencyType.ALTERNATIVE
        decimal_1 = None
        currency_0 = module_2.Currency(str_0, str_1, int_0, currency_type_0, decimal_1, int_0)
        money_7 = some_money_0.with_ccy(currency_0)
        bool_6 = some_money_0.lte(money_7)
    except BaseException:
        pass

def test_case_88():
    try:
        price_0 = module_0.Price()
        price_1 = price_0.abs()
    except BaseException:
        pass

def test_case_89():
    try:
        price_0 = module_0.Price()
        float_0 = price_0.as_float()
    except BaseException:
        pass

def test_case_90():
    try:
        price_0 = module_0.Price()
        price_1 = price_0.__add__(price_0)
        price_2 = price_1.__abs__()
    except BaseException:
        pass

def test_case_91():
    try:
        price_0 = module_0.Price()
        var_0 = None
        price_1 = price_0.__truediv__(var_0)
        price_2 = price_0.__sub__(price_0)
        price_3 = price_0.__abs__()
        float_0 = price_2.as_float()
    except BaseException:
        pass

def test_case_92():
    try:
        list_0 = []
        price_0 = module_0.Price(*list_0)
        var_0 = price_0.__round__()
    except BaseException:
        pass

def test_case_93():
    try:
        money_0 = module_0.Money()
        list_0 = [money_0, money_0, money_0]
        some_price_0 = module_0.SomePrice(*list_0)
        var_0 = None
        str_0 = '_T'
        int_0 = 29
        currency_type_0 = module_2.CurrencyType.CRYPTO
        decimal_0 = module_1.Decimal()
        int_1 = -1796
        currency_0 = module_2.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_1)
        none_price_0 = module_0.NonePrice()
        bool_0 = money_0.__gt__(money_0)
        price_0 = none_price_0.with_ccy(currency_0)
        price_1 = some_price_0.subtract(price_0)
        none_price_1 = module_0.NonePrice()
        none_price_2 = module_0.NonePrice()
        money_1 = money_0.__pos__()
        none_money_0 = module_0.NoneMoney()
        bool_1 = none_money_0.is_equal(int_0)
        bool_2 = price_1.lte(price_0)
        price_2 = none_price_2.scalar_add(var_0)
        bool_3 = some_price_0.gte(price_1)
    except BaseException:
        pass

def test_case_94():
    try:
        money_0 = module_0.Money()
        list_0 = [money_0, money_0, money_0]
        some_price_0 = module_0.SomePrice(*list_0)
        currency_0 = None
        bool_0 = True
        price_0 = some_price_0.convert(currency_0, bool_0)
    except BaseException:
        pass

def test_case_95():
    try:
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.abs()
        bool_0 = none_money_0.gt(money_0)
        var_0 = None
        list_0 = [var_0, var_0, var_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_1 = money_0.__floordiv__(var_0)
        money_2 = money_1.add(money_0)
        bool_1 = some_money_0.lt(money_0)
        bool_2 = some_money_0.gte(money_0)
        bool_3 = some_money_0.gt(money_0)
        money_3 = some_money_0.add(money_2)
        bool_4 = money_2.__gt__(money_0)
        money_4 = none_money_0.abs()
        bool_5 = some_money_0.lte(money_0)
        none_price_0 = module_0.NonePrice()
        bool_6 = money_0.__lt__(money_3)
        dict_0 = {}
        none_price_1 = module_0.NonePrice(**dict_0)
        price_0 = module_0.Price()
        price_1 = price_0.divide(var_0)
    except BaseException:
        pass

def test_case_96():
    try:
        money_0 = module_0.Money()
        money_1 = money_0.divide(money_0)
    except BaseException:
        pass

def test_case_97():
    try:
        money_0 = module_0.Money()
        list_0 = None
        money_1 = money_0.floor_divide(list_0)
    except BaseException:
        pass

def test_case_98():
    try:
        money_0 = module_0.Money()
        money_1 = money_0.positive()
    except BaseException:
        pass

def test_case_99():
    try:
        money_0 = module_0.Money()
        money_1 = money_0.add(money_0)
    except BaseException:
        pass

def test_case_100():
    try:
        str_0 = 'E6=+'
        list_0 = [str_0, str_0, str_0]
        some_price_0 = module_0.SomePrice(*list_0)
        float_0 = some_price_0.as_float()
    except BaseException:
        pass

def test_case_101():
    try:
        money_0 = module_0.Money()
        list_0 = None
        bool_0 = money_0.is_equal(list_0)
    except BaseException:
        pass

def test_case_102():
    try:
        money_0 = module_0.Money()
        bool_0 = money_0.as_boolean()
    except BaseException:
        pass

def test_case_103():
    try:
        price_0 = module_0.Price()
        price_1 = price_0.positive()
    except BaseException:
        pass

def test_case_104():
    try:
        int_0 = 1
        str_0 = ')*'
        str_1 = '\n2i3V}ba'
        str_2 = 'n&!\\Q7McU;'
        dict_0 = {str_0: int_0, str_0: int_0, str_1: str_0, str_2: int_0}
        list_0 = []
        price_0 = module_0.Price(*list_0)
        price_1 = price_0.multiply(dict_0)
    except BaseException:
        pass

def test_case_105():
    try:
        money_0 = module_0.Money()
        money_1 = money_0.subtract(money_0)
    except BaseException:
        pass

def test_case_106():
    try:
        money_0 = module_0.Money()
        bool_0 = money_0.lt(money_0)
        list_0 = [money_0, money_0, money_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.negative()
        price_1 = price_0.__sub__(price_0)
    except BaseException:
        pass

def test_case_107():
    try:
        money_0 = module_0.Money()
        money_1 = money_0.negative()
    except BaseException:
        pass

def test_case_108():
    try:
        money_0 = module_0.Money()
        float_0 = money_0.as_float()
    except BaseException:
        pass

def test_case_109():
    try:
        money_0 = module_0.Money()
        list_0 = [money_0, money_0, money_0]
        var_0 = None
        money_1 = money_0.__floordiv__(var_0)
        some_price_0 = module_0.SomePrice(*list_0)
        currency_0 = None
        price_0 = some_price_0.with_ccy(currency_0)
        price_1 = price_0.__add__(price_0)
    except BaseException:
        pass

def test_case_110():
    try:
        money_0 = module_0.Money()
        list_0 = []
        list_1 = [list_0, list_0, money_0]
        some_price_0 = module_0.SomePrice(*list_1)
        money_1 = money_0.scalar_add(some_price_0)
    except BaseException:
        pass

def test_case_111():
    try:
        money_0 = module_0.Money()
        list_0 = [money_0, money_0, money_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.positive()
        price_1 = some_price_0.add(price_0)
    except BaseException:
        pass

def test_case_112():
    try:
        money_0 = module_0.Money()
        list_0 = [money_0, money_0, money_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.abs()
        bool_0 = some_price_0.gt(price_0)
    except BaseException:
        pass

def test_case_113():
    try:
        money_0 = module_0.Money()
        list_0 = [money_0, money_0, money_0]
        some_price_0 = module_0.SomePrice(*list_0)
        var_0 = None
        str_0 = '_T'
        int_0 = 29
        currency_type_0 = module_2.CurrencyType.ALTERNATIVE
        decimal_0 = module_1.Decimal()
        int_1 = -1796
        currency_0 = module_2.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_1)
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.with_ccy(currency_0)
        price_1 = some_price_0.subtract(price_0)
        none_price_1 = module_0.NonePrice()
        price_2 = none_price_1.scalar_add(var_0)
        bool_0 = some_price_0.gte(price_2)
        price_3 = some_price_0.negative()
        price_4 = price_3.subtract(price_3)
    except BaseException:
        pass

def test_case_114():
    try:
        money_0 = module_0.Money()
        list_0 = [money_0, money_0, money_0]
        some_price_0 = module_0.SomePrice(*list_0)
        var_0 = None
        str_0 = '_T'
        int_0 = 29
        currency_type_0 = module_2.CurrencyType.CRYPTO
        decimal_0 = module_1.Decimal()
        currency_0 = module_2.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.with_ccy(currency_0)
        price_1 = some_price_0.subtract(price_0)
        price_2 = none_price_0.scalar_add(var_0)
        bool_0 = some_price_0.gte(price_1)
    except BaseException:
        pass

def test_case_115():
    try:
        money_0 = module_0.Money()
        list_0 = [money_0, money_0, money_0]
        some_price_0 = module_0.SomePrice(*list_0)
        decimal_0 = module_1.Decimal()
        price_0 = module_0.Price()
        bool_0 = price_0.__eq__(money_0)
        int_0 = 3216
        str_0 = 'GEL'
        currency_type_0 = module_2.CurrencyType.MONEY
        currency_0 = module_2.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        price_1 = some_price_0.convert(currency_0)
    except BaseException:
        pass

def test_case_116():
    try:
        money_0 = module_0.Money()
        list_0 = [money_0, money_0, money_0]
        some_price_0 = module_0.SomePrice(*list_0)
        decimal_0 = module_1.Decimal()
        str_0 = '9Q(0*2,hmnV^+a3?Crm3'
        price_0 = some_price_0.divide(str_0)
        int_0 = 3214
        str_1 = 'GEL'
        currency_type_0 = module_2.CurrencyType.METAL
        str_2 = 'Rm*%@'
        int_1 = -1694
        currency_0 = module_2.Currency(str_2, str_1, int_0, currency_type_0, decimal_0, int_1)
        price_1 = some_price_0.with_ccy(currency_0)
        price_2 = price_1.subtract(price_1)
    except BaseException:
        pass

def test_case_117():
    try:
        money_0 = module_0.Money()
        decimal_0 = module_1.Decimal()
        money_1 = money_0.__mul__(decimal_0)
        list_0 = [money_0, money_0, money_0]
        some_price_0 = module_0.SomePrice(*list_0)
        currency_0 = None
        price_0 = some_price_0.with_ccy(currency_0)
        bool_0 = some_price_0.lt(price_0)
    except BaseException:
        pass

def test_case_118():
    try:
        money_0 = module_0.Money()
        bytes_0 = b'(\x8b\xde\xf4?o'
        money_1 = money_0.multiply(bytes_0)
    except BaseException:
        pass

def test_case_119():
    try:
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.negative()
        var_0 = None
        list_0 = [var_0, var_0, var_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_0 = some_money_0.as_boolean()
        money_1 = money_0.add(money_0)
        str_0 = '_T'
        int_0 = 29
        currency_type_0 = module_2.CurrencyType.CRYPTO
        decimal_0 = module_1.Decimal()
        str_1 = '1f6'
        currency_0 = module_2.Currency(str_1, str_0, int_0, currency_type_0, decimal_0, int_0)
        money_2 = none_money_0.subtract(money_0)
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.with_ccy(currency_0)
        dict_0 = {}
        some_price_0 = module_0.SomePrice(*list_0, **dict_0)
        price_1 = some_price_0.subtract(price_0)
        price_2 = none_price_0.scalar_add(var_0)
        bool_1 = some_price_0.gte(price_1)
    except BaseException:
        pass

def test_case_120():
    try:
        money_0 = module_0.Money()
        list_0 = [money_0, money_0, money_0]
        some_price_0 = module_0.SomePrice(*list_0)
        money_1 = money_0.__abs__()
        str_0 = '2Ds_f_h'
        currency_type_0 = module_2.CurrencyType.ALTERNATIVE
        str_1 = '\n        Indicates if this posting is a debit.\n        '
        int_0 = 4800
        decimal_0 = module_1.Decimal()
        currency_0 = module_2.Currency(str_0, str_1, int_0, currency_type_0, decimal_0, int_0)
        money_2 = money_0.with_ccy(currency_0)
        none_price_0 = module_0.NonePrice()
        price_0 = some_price_0.positive()
        bool_0 = some_price_0.gt(price_0)
    except BaseException:
        pass

def test_case_121():
    try:
        money_0 = module_0.Money()
        list_0 = [money_0, money_0, money_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.positive()
        date_0 = None
        price_1 = price_0.with_dov(date_0)
        bool_0 = some_price_0.gt(price_0)
    except BaseException:
        pass

def test_case_122():
    try:
        money_0 = module_0.Money()
        list_0 = [money_0, money_0, money_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.positive()
        bool_0 = some_price_0.lt(price_0)
    except BaseException:
        pass

def test_case_123():
    try:
        money_0 = module_0.Money()
        float_0 = -320.53
        price_0 = module_0.Price()
        price_1 = price_0.scalar_add(float_0)
    except BaseException:
        pass

def test_case_124():
    try:
        money_0 = module_0.Money()
        list_0 = [money_0, money_0, money_0]
        some_price_0 = module_0.SomePrice(*list_0)
        date_0 = None
        money_1 = money_0.with_dov(date_0)
        str_0 = 'Iranian Rial'
        str_1 = 'HNL'
        int_0 = 360
        currency_type_0 = module_2.CurrencyType.MONEY
        decimal_0 = None
        int_1 = -2670
        currency_0 = module_2.Currency(str_0, str_1, int_0, currency_type_0, decimal_0, int_1)
        some_money_0 = module_0.SomeMoney()
    except BaseException:
        pass

def test_case_125():
    try:
        money_0 = None
        bool_0 = False
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.scalar_add(bool_0)
        price_1 = none_price_0.subtract(price_0)
        money_1 = price_1.times(money_0)
        money_2 = money_1.__neg__()
        list_0 = [money_2, money_2, money_2]
        some_price_0 = module_0.SomePrice(*list_0)
        price_2 = some_price_0.abs()
        bool_1 = some_price_0.gt(price_2)
        decimal_0 = module_1.Decimal(*list_0)
    except BaseException:
        pass

def test_case_126():
    try:
        price_0 = module_0.Price()
        bool_0 = price_0.__gt__(price_0)
        some_price_0 = module_0.SomePrice()
    except BaseException:
        pass

def test_case_127():
    try:
        none_money_0 = module_0.NoneMoney()
        list_0 = [none_money_0]
        money_0 = none_money_0.divide(list_0)
        money_1 = none_money_0.negative()
        var_0 = None
        list_1 = [var_0, var_0, var_0]
        some_money_0 = module_0.SomeMoney(*list_1)
        bool_0 = some_money_0.as_boolean()
        bool_1 = some_money_0.lt(money_0)
        money_2 = some_money_0.subtract(money_1)
        bool_2 = some_money_0.gte(money_0)
        bool_3 = some_money_0.gt(money_1)
        money_3 = some_money_0.add(money_0)
        dict_0 = {}
        decimal_0 = module_1.Decimal(**dict_0)
        str_0 = '[]^tIuYKrk d1&poA'
        none_price_0 = module_0.NonePrice(**dict_0)
        currency_type_0 = module_2.CurrencyType.ALTERNATIVE
        int_0 = -512
        currency_0 = module_2.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        str_1 = '>= comparision'
        int_1 = -2667
        currency_1 = module_2.Currency(str_0, str_1, int_1, currency_type_0, decimal_0, int_0)
        money_4 = money_0.convert(currency_1)
        money_5 = money_4.with_ccy(currency_0)
        money_6 = some_money_0.with_ccy(currency_0)
        money_7 = some_money_0.add(money_6)
    except BaseException:
        pass

def test_case_128():
    try:
        none_money_0 = module_0.NoneMoney()
        list_0 = [none_money_0]
        money_0 = none_money_0.divide(list_0)
        money_1 = none_money_0.negative()
        var_0 = None
        list_1 = [var_0, var_0, var_0]
        some_money_0 = module_0.SomeMoney(*list_1)
        bool_0 = some_money_0.lt(money_0)
        money_2 = some_money_0.subtract(money_1)
        bool_1 = some_money_0.gte(money_0)
        bool_2 = some_money_0.gt(money_1)
        money_3 = some_money_0.add(money_0)
        dict_0 = {}
        decimal_0 = module_1.Decimal(**dict_0)
        money_4 = none_money_0.add(money_0)
        none_price_0 = module_0.NonePrice(**dict_0)
        price_0 = module_0.Price(**dict_0)
        price_1 = price_0.with_qty(decimal_0)
        some_price_0 = module_0.SomePrice(**dict_0)
    except BaseException:
        pass

def test_case_129():
    try:
        money_0 = module_0.Money()
        list_0 = [money_0, money_0, money_0]
        price_0 = module_0.Price()
        price_1 = price_0.scalar_subtract(list_0)
    except BaseException:
        pass

def test_case_130():
    try:
        price_0 = module_0.Price()
        bool_0 = price_0.is_equal(price_0)
    except BaseException:
        pass

def test_case_131():
    try:
        price_0 = module_0.Price()
        price_1 = price_0.subtract(price_0)
    except BaseException:
        pass

def test_case_132():
    try:
        price_0 = module_0.Price()
        str_0 = '\x0crn!*j'
        int_0 = -639
        currency_type_0 = module_2.CurrencyType.ALTERNATIVE
        decimal_0 = None
        int_1 = -15
        currency_0 = module_2.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_1)
        none_price_0 = module_0.NonePrice()
        price_1 = none_price_0.multiply(currency_type_0)
        incompatible_currency_error_0 = module_0.IncompatibleCurrencyError(currency_0, currency_0)
        bool_0 = price_0.lt(price_0)
        some_price_0 = module_0.SomePrice()
    except BaseException:
        pass