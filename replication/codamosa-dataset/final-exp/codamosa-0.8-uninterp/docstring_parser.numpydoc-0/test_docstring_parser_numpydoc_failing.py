# Automatically generated by Pynguin.
import docstring_parser.numpydoc as module_0
import docstring_parser.common as module_1

def test_case_0():
    try:
        str_0 = 'Attributes'
        str_1 = 'name'
        k_v_section_0 = module_0._KVSection(str_1, str_1)
        str_2 = 'c'
        str_3 = 'G0\rU9D]'
        deprecation_section_0 = module_0.DeprecationSection(str_2, str_3)
        iterable_0 = deprecation_section_0.parse(str_3)
        k_v_section_1 = module_0._KVSection(str_2, str_3)
        iterable_1 = k_v_section_1.parse(str_0)
        numpydoc_parser_0 = module_0.NumpydocParser(iterable_1)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'Xv&t@a'
        str_1 = None
        sphinx_section_0 = module_0._SphinxSection(str_0, str_1)
        str_2 = 'zEUo'
        str_3 = '3EGuc@R@:En<Fz'
        section_0 = module_0.Section(str_2, str_3)
        bytes_0 = b'\xca\x8e\xcd'
        numpydoc_parser_0 = module_0.NumpydocParser(bytes_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '4S7vmV&?86UI\r\x0c'
        str_1 = 'j"PH'
        deprecation_section_0 = module_0.DeprecationSection(str_1, str_1)
        iterable_0 = deprecation_section_0.parse(str_0)
        str_2 = '$+SK.F,nh*<'
        str_3 = 'F,f'
        k_v_section_0 = module_0._KVSection(str_2, str_3)
        str_4 = 'Returns'
        str_5 = 'Wb\x0cc975@~\x0b"c\\b'
        str_6 = None
        iterable_1 = deprecation_section_0.parse(str_6)
        deprecation_section_1 = module_0.DeprecationSection(str_6, str_3)
        deprecation_section_2 = module_0.DeprecationSection(str_5, str_4)
        numpydoc_parser_0 = module_0.NumpydocParser(iterable_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '\n    :param a: this is a param\n    :param b: this is another param\n    :param c: c\n              c c\n              c c\n    :param d: d\n    :param e: e\n    :param f: f\n    :param g: g\n    :returns: returns something\n    '
        numpydoc_parser_0 = module_0.NumpydocParser()
        docstring_0 = numpydoc_parser_0.parse(str_0)
        docstring_1 = module_1.Docstring()
        str_1 = ''
        k_v_section_0 = module_0._KVSection(str_0, str_0)
        iterable_0 = k_v_section_0.parse(str_1)
        numpydoc_parser_1 = module_0.NumpydocParser(iterable_0)
        str_2 = '\n        Short description.\n\n        Long description.\n\n        Parameters\n        ----------\n        arg\n            Describes argument.\n\n        warn\n            Describes warning.\n\n        Other Parameters\n        ----------------\n        other_arg : type\n            Describes other argument.\n\n        Yields\n        ------\n        yields\n            Describes yielding.\n        '
        docstring_2 = numpydoc_parser_1.parse(str_2)
    except BaseException:
        pass