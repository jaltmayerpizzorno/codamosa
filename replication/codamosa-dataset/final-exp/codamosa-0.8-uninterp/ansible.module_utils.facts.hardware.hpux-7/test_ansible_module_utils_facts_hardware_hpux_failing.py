# Automatically generated by Pynguin.
import ansible.module_utils.facts.hardware.hpux as module_0

def test_case_0():
    try:
        str_0 = 'Fpo}kn(k\rJsc'
        h_p_u_x_hardware_0 = module_0.HPUXHardware(str_0)
        var_0 = h_p_u_x_hardware_0.populate()
    except BaseException:
        pass

def test_case_1():
    try:
        h_p_u_x_hardware_collector_0 = module_0.HPUXHardwareCollector()
        bytes_0 = b'\xc6\xcfn\xabI\xb7\x93\xa4\xdb'
        h_p_u_x_hardware_0 = module_0.HPUXHardware(bytes_0)
        bool_0 = True
        var_0 = h_p_u_x_hardware_0.get_hw_facts(bool_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b'\xc4?!*\xad\x84\xa6'
        complex_0 = None
        dict_0 = {complex_0: complex_0}
        h_p_u_x_hardware_0 = module_0.HPUXHardware(dict_0)
        var_0 = h_p_u_x_hardware_0.get_cpu_facts(bytes_0)
    except BaseException:
        pass

def test_case_3():
    try:
        set_0 = set()
        list_0 = [set_0, set_0, set_0, set_0]
        tuple_0 = ()
        bytes_0 = b'\x8eG\xcc^\x07\xbf'
        h_p_u_x_hardware_0 = module_0.HPUXHardware(tuple_0, bytes_0)
        var_0 = h_p_u_x_hardware_0.get_memory_facts(list_0)
    except BaseException:
        pass

def test_case_4():
    try:
        float_0 = 142.6516
        h_p_u_x_hardware_0 = module_0.HPUXHardware(float_0)
        var_0 = h_p_u_x_hardware_0.get_hw_facts()
    except BaseException:
        pass

def test_case_5():
    try:
        var_0 = None
        h_p_u_x_hardware_0 = module_0.HPUXHardware(var_0)
        str_0 = 'ansible_architecture'
        str_1 = 'ansible_distribution_version'
        str_2 = '9000/800'
        str_3 = {str_0: str_2, str_1: str_1}
        var_1 = h_p_u_x_hardware_0.get_cpu_facts(str_3)
    except BaseException:
        pass