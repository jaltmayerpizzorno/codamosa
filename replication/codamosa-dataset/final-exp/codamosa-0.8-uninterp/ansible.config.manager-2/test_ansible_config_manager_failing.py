# Automatically generated by Pynguin.
import ansible.config.manager as module_0

def test_case_0():
    try:
        config_manager_0 = module_0.ConfigManager()
        float_0 = 512.0
        config_manager_1 = module_0.ConfigManager()
        var_0 = config_manager_1.get_config_value(config_manager_0, float_0, float_0)
    except BaseException:
        pass

def test_case_1():
    try:
        setting_0 = None
        bytes_0 = b'\xdc\x0b\xc7\xc8\x9d\x1fA\x11\xf0\xa0}'
        bool_0 = False
        config_manager_0 = module_0.ConfigManager()
        var_0 = config_manager_0.get_config_value_and_origin(setting_0, bytes_0, bool_0)
    except BaseException:
        pass

def test_case_2():
    try:
        config_manager_0 = module_0.ConfigManager()
        plugin_0 = module_0.Plugin()
    except BaseException:
        pass

def test_case_3():
    try:
        int_0 = 4159
        var_0 = module_0.get_config_type(int_0)
    except BaseException:
        pass

def test_case_4():
    try:
        var_0 = module_0.find_ini_config_file()
        bytes_0 = b'\t\xe6\xcf\xdf\x0b\xab\x13\xc3'
        var_1 = module_0.get_config_type(bytes_0)
    except BaseException:
        pass

def test_case_5():
    try:
        config_manager_0 = module_0.ConfigManager()
        bool_0 = True
        float_0 = 2035.52799
        var_0 = module_0.get_ini_config_value(bool_0, float_0)
        dict_0 = {config_manager_0: config_manager_0, config_manager_0: config_manager_0, config_manager_0: config_manager_0}
        var_1 = module_0.get_config_type(dict_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'P}$Op&G"qIx\x0cD2KBN#v}'
        config_manager_0 = module_0.ConfigManager(str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        config_manager_0 = module_0.ConfigManager()
        setting_0 = None
        str_0 = 'path'
        int_0 = -248
        float_0 = None
        var_0 = config_manager_0.get_plugin_options(str_0, config_manager_0, float_0)
        var_1 = config_manager_0.get_config_value_and_origin(setting_0, str_0, int_0)
    except BaseException:
        pass

def test_case_8():
    try:
        bytes_0 = b'\t\xe6\xcf\xdf\x0b\xab\x13\xc3'
        config_manager_0 = module_0.ConfigManager()
        list_0 = [bytes_0]
        tuple_0 = None
        config_manager_1 = module_0.ConfigManager()
        var_0 = config_manager_1.initialize_plugin_configuration_definitions(config_manager_0, list_0, tuple_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = ''
        config_manager_0 = module_0.ConfigManager(str_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = ''
        str_1 = 'str'
        var_0 = module_0.ensure_type(str_0, str_1)
        var_1 = module_0.ensure_type(str_0, str_1)
        bytes_0 = b''
        var_2 = module_0.ensure_type(bytes_0, str_1)
    except BaseException:
        pass

def test_case_11():
    try:
        tuple_0 = ()
        var_0 = module_0.find_ini_config_file()
        dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0, tuple_0: tuple_0}
        list_0 = [tuple_0, tuple_0, var_0, tuple_0]
        var_1 = module_0.get_ini_config_value(dict_0, list_0)
        list_1 = [list_0, var_1]
        config_manager_0 = module_0.ConfigManager()
        config_manager_1 = module_0.ConfigManager(list_1, config_manager_0)
    except BaseException:
        pass

def test_case_12():
    try:
        int_0 = -854
        config_manager_0 = module_0.ConfigManager()
        str_0 = 'DIST?IB_CODENAMx="(.*)"'
        list_0 = [int_0, str_0, str_0, int_0]
        var_0 = config_manager_0.update_config_data(int_0, list_0)
    except BaseException:
        pass

def test_case_13():
    try:
        tuple_0 = ()
        var_0 = module_0.find_ini_config_file()
        dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0, tuple_0: tuple_0}
        list_0 = [tuple_0, tuple_0, var_0, tuple_0]
        var_1 = module_0.get_ini_config_value(dict_0, list_0)
        config_manager_0 = module_0.ConfigManager()
        config_manager_1 = module_0.ConfigManager()
        var_2 = config_manager_1.update_config_data(dict_0)
    except BaseException:
        pass

def test_case_14():
    try:
        tuple_0 = None
        config_manager_0 = module_0.ConfigManager()
        config_manager_1 = module_0.ConfigManager()
        var_0 = config_manager_1.get_plugin_vars(tuple_0, config_manager_1)
        float_0 = 88.26579219940909
        list_0 = [tuple_0, var_0]
        int_0 = 4095
        var_1 = config_manager_1.initialize_plugin_configuration_definitions(int_0, config_manager_1, int_0)
        dict_0 = {}
        var_2 = config_manager_1.get_config_value(float_0, list_0, dict_0)
    except BaseException:
        pass

def test_case_15():
    try:
        var_0 = module_0.find_ini_config_file()
        config_manager_0 = module_0.ConfigManager()
        bytes_0 = b'f\x0f\x13\x1b\x11\x1c\xbe\x8c\xb5Z\x9e'
        str_0 = "nIt'D/uqC 7\tm+"
        dict_0 = {str_0: str_0}
        var_1 = config_manager_0.get_configuration_definition(bytes_0, dict_0)
    except BaseException:
        pass

def test_case_16():
    try:
        tuple_0 = None
        dict_0 = {}
        var_0 = module_0.get_ini_config_value(tuple_0, dict_0)
        config_manager_0 = module_0.ConfigManager()
        dict_1 = {}
        config_manager_1 = module_0.ConfigManager(dict_1)
    except BaseException:
        pass

def test_case_17():
    try:
        float_0 = -2433.818383
        config_manager_0 = module_0.ConfigManager()
        var_0 = config_manager_0.get_configuration_definition(float_0)
        dict_0 = None
        int_0 = -3089
        var_1 = config_manager_0.get_configuration_definition(dict_0, int_0, config_manager_0)
        config_manager_1 = module_0.ConfigManager()
        int_1 = None
        str_0 = '8q;5ab:taidv>de"Ur\rz'
        var_2 = config_manager_1.get_plugin_options(dict_0, int_1, str_0)
        var_3 = config_manager_1.update_config_data()
        int_2 = 4095
        var_4 = config_manager_1.initialize_plugin_configuration_definitions(int_2, config_manager_1, int_2)
        bool_0 = True
        float_1 = 31.637603
        float_2 = 100.0
        var_5 = config_manager_1.get_config_value(bool_0, config_manager_0, float_1, float_2)
    except BaseException:
        pass

def test_case_18():
    try:
        str_0 = '/path/to/config.ini'
        var_0 = module_0.get_config_type(str_0)
        str_1 = '/path/to/config.cfg'
        var_1 = module_0.get_config_type(str_1)
        str_2 = '/path/to/config.yaml'
        var_2 = module_0.get_config_type(str_2)
        str_3 = '/path/to/config.yml'
        var_3 = module_0.get_config_type(str_3)
        str_4 = '/path/to/config.foo'
        var_4 = module_0.get_config_type(str_4)
    except BaseException:
        pass