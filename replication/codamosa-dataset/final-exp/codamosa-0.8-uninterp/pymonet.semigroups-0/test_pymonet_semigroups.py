# Automatically generated by Pynguin.
import pymonet.semigroups as module_0

def test_case_0():
    int_0 = -3944
    semigroup_0 = module_0.Semigroup(int_0)

def test_case_1():
    int_0 = -3944
    semigroup_0 = module_0.Semigroup(int_0)
    all_0 = module_0.All(semigroup_0)
    str_0 = all_0.__str__()

def test_case_2():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    bytes_0 = b'6O\xfb"\xb3\xe0\xdetG\xda\x84-bJ&f\xbd\rd\xfe'
    one_0 = module_0.One(bytes_0)
    var_0 = one_0.concat(list_0)
    str_0 = '0B$>j&_2Rs=\x0cGDV_'
    all_0 = module_0.All(str_0)
    str_1 = 'e\x0ch>B2['
    all_1 = module_0.All(str_1)
    all_2 = all_1.concat(all_0)
    str_2 = all_2.__str__()

def test_case_3():
    dict_0 = {}
    one_0 = module_0.One(dict_0)
    str_0 = one_0.__str__()
    int_0 = True
    min_0 = module_0.Min(int_0)
    one_1 = module_0.One(dict_0)
    last_0 = module_0.Last(one_1)
    var_0 = last_0.concat(one_0)
    first_0 = module_0.First(min_0)

def test_case_4():
    bool_0 = False
    first_0 = module_0.First(bool_0)
    str_0 = first_0.__str__()

def test_case_5():
    int_0 = 472
    all_0 = module_0.All(int_0)
    map_0 = module_0.Map(all_0)
    first_0 = module_0.First(map_0)
    str_0 = all_0.__str__()
    all_1 = module_0.All(first_0)
    str_1 = all_1.__str__()
    str_2 = first_0.__str__()

def test_case_6():
    int_0 = 1
    max_0 = module_0.Max(int_0)
    int_1 = 6
    max_1 = module_0.Max(int_1)
    var_0 = max_0.concat(max_1)
    max_2 = module_0.Max(int_1)
    str_0 = max_0.__str__()
    max_3 = module_0.Max(int_1)
    max_4 = module_0.Max(int_0)
    var_1 = max_3.concat(max_4)
    max_5 = module_0.Max(int_1)

def test_case_7():
    str_0 = 'foo'
    str_1 = 'bar'
    int_0 = 1
    sum_0 = module_0.Sum(int_0)
    bool_0 = False
    all_0 = module_0.All(bool_0)
    var_0 = {str_0: sum_0, str_1: all_0}
    map_0 = module_0.Map(var_0)
    int_1 = 2
    sum_1 = module_0.Sum(int_1)
    bool_1 = True
    all_1 = module_0.All(bool_1)
    var_1 = {str_0: sum_1, str_1: all_1}
    map_1 = module_0.Map(var_1)
    var_2 = map_0.concat(map_1)
    var_3 = var_2.value[str_0]
    int_2 = 3
    sum_2 = module_0.Sum(int_2)
    var_4 = map_0.concat(map_1)
    var_5 = var_4.value[str_1]
    all_2 = module_0.All(bool_0)

def test_case_8():
    int_0 = -2570
    first_0 = module_0.First(int_0)
    list_0 = []
    one_0 = module_0.One(list_0)
    map_0 = module_0.Map(first_0)
    str_0 = one_0.__str__()
    str_1 = first_0.__str__()
    float_0 = 770.946
    bool_0 = True
    min_0 = module_0.Min(bool_0)
    str_2 = min_0.__str__()
    str_3 = 'SG8cQ9}j]3qL\t'
    var_0 = first_0.concat(float_0)
    var_1 = min_0.concat(first_0)
    var_2 = first_0.concat(int_0)
    one_1 = module_0.One(str_3)
    sum_0 = module_0.Sum(float_0)
    semigroup_0 = module_0.Semigroup(min_0)
    min_1 = module_0.Min(semigroup_0)
    first_1 = module_0.First(sum_0)
    str_4 = first_1.__str__()
    int_1 = 1276
    list_1 = [int_1, int_1, int_1, int_1]
    bool_1 = False
    last_0 = module_0.Last(bool_1)
    str_5 = first_1.__str__()
    var_3 = one_1.concat(list_1)
    max_0 = module_0.Max(int_1)
    str_6 = max_0.__str__()

def test_case_9():
    int_0 = 1
    max_0 = module_0.Max(int_0)
    int_1 = 6
    max_1 = module_0.Max(int_1)
    var_0 = max_0.concat(max_1)
    max_2 = module_0.Max(int_1)
    max_3 = module_0.Max(int_1)
    max_4 = module_0.Max(int_0)
    var_1 = max_3.concat(max_4)

def test_case_10():
    int_0 = 8
    max_0 = module_0.Max(int_0)
    int_1 = 6
    max_1 = module_0.Max(int_1)
    var_0 = max_0.concat(max_1)
    max_2 = module_0.Max(int_0)