# Automatically generated by Pynguin.
import typesystem.tokenize.tokens as module_0

def test_case_0():
    pass

def test_case_1():
    str_0 = '@QtBvUCY-y\\errd'
    int_0 = 149
    token_0 = module_0.Token(str_0, int_0, int_0)

def test_case_2():
    str_0 = 'ab'
    int_0 = 0
    scalar_token_0 = module_0.ScalarToken(str_0, int_0, int_0)
    scalar_token_1 = {scalar_token_0: scalar_token_0}
    list_0 = [scalar_token_1, scalar_token_1, scalar_token_1]
    dict_token_0 = module_0.DictToken(*list_0)

def test_case_3():
    list_0 = []
    list_1 = []
    int_0 = -1619
    str_0 = '_p~\tyhG'
    list_token_0 = module_0.ListToken(list_1, int_0, int_0, str_0)
    int_1 = 5261
    str_1 = '@?Mo)@W\x0chsr7J6'
    token_0 = module_0.Token(list_token_0, int_0, int_1, str_1)
    token_1 = token_0.lookup(list_0)
    str_2 = "Yd;'Y~FnMTD 6A&')D"
    list_token_1 = module_0.ListToken(str_1, int_1, int_1, str_2)
    bool_0 = token_1.__eq__(str_1)

def test_case_4():
    str_0 = 'abcdef'
    int_0 = 1
    int_1 = 2
    int_2 = 3
    scalar_token_0 = module_0.ScalarToken(int_0, int_1, int_2, str_0)
    scalar_token_1 = module_0.ScalarToken(int_0, int_1, int_2, str_0)
    int_3 = 4
    scalar_token_2 = module_0.ScalarToken(int_0, int_1, int_3, str_0)
    int_4 = 5
    scalar_token_3 = module_0.ScalarToken(int_0, int_1, int_4, str_0)
    bool_0 = scalar_token_0.__eq__(scalar_token_1)
    bool_1 = scalar_token_1.__eq__(scalar_token_0)
    bool_2 = scalar_token_0.__eq__(scalar_token_2)
    bool_3 = scalar_token_2.__eq__(scalar_token_0)
    bool_4 = scalar_token_0.__eq__(scalar_token_3)
    bool_5 = scalar_token_3.__eq__(scalar_token_0)
    bool_6 = scalar_token_2.__eq__(scalar_token_3)

def test_case_5():
    int_0 = 1
    int_1 = 1
    int_2 = 2
    int_3 = 3
    dict_token_0 = None
    int_4 = -467
    scalar_token_0 = module_0.ScalarToken(dict_token_0, int_4, int_0)
    list_0 = [int_3, int_4]
    int_5 = -1462
    scalar_token_1 = module_0.ScalarToken(list_0, int_5, int_2)
    int_6 = 4
    int_7 = -5502
    scalar_token_2 = module_0.ScalarToken(scalar_token_0, int_1, int_7)
    int_8 = 1106
    int_9 = 3
    str_0 = 'KX'
    scalar_token_3 = module_0.ScalarToken(int_6, int_8, int_9, str_0)
    int_10 = -1879
    int_11 = 67
    scalar_token_4 = module_0.ScalarToken(int_6, int_10, int_11, str_0)
    bool_0 = scalar_token_0.__eq__(int_10)
    bool_1 = scalar_token_4.__eq__(int_1)
    bool_2 = scalar_token_1.__eq__(int_2)
    bool_3 = scalar_token_4.__eq__(scalar_token_3)
    bool_4 = scalar_token_3.__eq__(bool_0)
    bool_5 = scalar_token_3.__eq__(scalar_token_4)

def test_case_6():
    int_0 = 1
    int_1 = 0
    str_0 = '1'
    scalar_token_0 = module_0.ScalarToken(int_0, int_1, int_1, str_0)
    scalar_token_1 = module_0.ScalarToken(int_0, int_1, int_1, str_0)
    int_2 = 10
    str_1 = '0123456789'
    scalar_token_2 = module_0.ScalarToken(int_0, int_2, int_2, str_1)
    scalar_token_3 = module_0.ScalarToken(int_0, int_2, int_2, str_1)
    int_3 = 501
    scalar_token_4 = module_0.ScalarToken(str_0, int_2, int_3)
    bool_0 = scalar_token_4.__eq__(scalar_token_2)
    bool_1 = scalar_token_4.__eq__(scalar_token_4)
    bool_2 = scalar_token_2.__eq__(bool_0)
    dict_0 = {}
    bool_3 = scalar_token_1.__eq__(dict_0)
    bool_4 = scalar_token_3.__eq__(bool_0)