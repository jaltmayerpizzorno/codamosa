# Automatically generated by Pynguin.
import ansible.playbook.attribute as module_0

def test_case_0():
    try:
        str_0 = 'list'
        bool_0 = True
        attribute_0 = module_0.Attribute(str_0, bool_0, bool_0, bool_0, str_0, bool_0, str_0, bool_0, bool_0, str_0, bool_0, bool_0, bool_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bool_0 = False
        bytes_0 = b'A\xa5\t\x1d\x98\xbd\xc0'
        int_0 = -43
        list_0 = []
        set_0 = {bool_0}
        attribute_0 = module_0.Attribute(int_0, list_0, set_0)
        var_0 = attribute_0.__eq__(bytes_0)
    except BaseException:
        pass

def test_case_2():
    try:
        set_0 = set()
        str_0 = '\\P<m\r9bZG&4B0P6'
        int_0 = 606
        bytes_0 = b';\xdbEft\xb4\x819'
        set_1 = {int_0, str_0, str_0}
        attribute_0 = module_0.Attribute(str_0, int_0, str_0, bytes_0, set_1, bytes_0)
        var_0 = attribute_0.__ne__(set_0)
    except BaseException:
        pass

def test_case_3():
    try:
        int_0 = -597
        str_0 = 'Unable to load data from include requirements file: %s %s'
        set_0 = {str_0, str_0, str_0}
        str_1 = 'Command "%s" detected as tar type %s. GNU tar required.'
        bool_0 = True
        bytes_0 = b'K'
        attribute_0 = module_0.Attribute(set_0, str_1, bool_0, bytes_0)
        var_0 = attribute_0.__lt__(int_0)
    except BaseException:
        pass

def test_case_4():
    try:
        bool_0 = True
        field_attribute_0 = None
        str_0 = ''
        set_0 = {str_0, bool_0, str_0}
        list_0 = [set_0, field_attribute_0, field_attribute_0]
        str_1 = 'collection metadata must be an instance of Python Mapping'
        field_attribute_1 = module_0.FieldAttribute(list_0, str_1, field_attribute_0)
        bytes_0 = b'(/'
        attribute_0 = module_0.Attribute(str_0, set_0, bytes_0, bool_0)
        var_0 = attribute_0.__gt__(field_attribute_0)
    except BaseException:
        pass

def test_case_5():
    try:
        bytes_0 = b'u\xf1\x95\xaeI\x1c\x93ft{\xd2&[\x0b'
        attribute_0 = module_0.Attribute(bytes_0)
        dict_0 = {}
        list_0 = []
        attribute_1 = module_0.Attribute(list_0)
        var_0 = attribute_1.__le__(dict_0)
    except BaseException:
        pass

def test_case_6():
    try:
        bytes_0 = b' .\n\x1e\xf4\xe2\xe4\xa1ZQR-F'
        bytes_1 = b'\xeb\xe2\xc1\xdb'
        set_0 = {bytes_0, bytes_0, bytes_1}
        float_0 = -1111.465
        set_1 = {float_0, float_0, float_0, float_0}
        list_0 = [float_0, set_1, set_1]
        str_0 = 'IUu{!py2GL(\x0cx^q#'
        str_1 = 'BnAo'
        attribute_0 = module_0.Attribute(float_0, set_1, set_1, list_0, str_0, str_0, str_1)
        var_0 = attribute_0.__ge__(set_0)
    except BaseException:
        pass