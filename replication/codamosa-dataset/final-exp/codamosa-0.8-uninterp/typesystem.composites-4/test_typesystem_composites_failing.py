# Automatically generated by Pynguin.
import typesystem.composites as module_0
import typesystem.fields as module_1

def test_case_0():
    try:
        list_0 = []
        one_of_0 = module_0.OneOf(list_0)
        any_0 = one_of_0.validate(list_0)
    except BaseException:
        pass

def test_case_1():
    try:
        field_0 = module_1.Field()
        list_0 = [field_0, field_0, field_0]
        one_of_0 = module_0.OneOf(list_0)
        any_0 = one_of_0.validate(one_of_0)
    except BaseException:
        pass

def test_case_2():
    try:
        validation_result_0 = None
        list_0 = []
        all_of_0 = module_0.AllOf(list_0)
        any_0 = all_of_0.validate(validation_result_0)
        any_1 = module_1.Any()
        not_0 = module_0.Not(any_1)
        any_2 = not_0.validate(any_1)
    except BaseException:
        pass

def test_case_3():
    try:
        never_match_0 = module_0.NeverMatch()
        str_0 = '(xu%9pq$h'
        field_0 = module_1.Field(description=str_0, default=str_0)
        str_1 = 'Must be less than {exclusive_maximum}.'
        bool_0 = False
        field_1 = module_1.Field(title=str_1, default=never_match_0, allow_null=bool_0)
        list_0 = [field_1, field_1, field_1]
        all_of_0 = module_0.AllOf(list_0)
        any_0 = all_of_0.validate(str_1)
    except BaseException:
        pass

def test_case_4():
    try:
        any_0 = module_1.Any()
        not_0 = module_0.Not(any_0)
        any_1 = not_0.validate(any_0)
    except BaseException:
        pass

def test_case_5():
    try:
        var_0 = []
        one_of_0 = module_0.OneOf(var_0)
        one_of_1 = [one_of_0]
        one_of_2 = module_0.OneOf(one_of_1)
        any_0 = one_of_2.validate(one_of_1)
    except BaseException:
        pass