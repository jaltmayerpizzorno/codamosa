# Automatically generated by Pynguin.
import mimesis.providers.choice as module_0

def test_case_0():
    try:
        dict_0 = {}
        choice_0 = module_0.Choice(**dict_0)
        bytes_0 = b'\x88\x04\xd4\x98v\x8b\xfak'
        bool_0 = True
        var_0 = choice_0.__call__(bytes_0, bool_0)
    except BaseException:
        pass

def test_case_1():
    try:
        choice_0 = module_0.Choice()
        bytes_0 = None
        float_0 = None
        tuple_0 = (bytes_0, float_0)
        int_0 = -1107
        var_0 = choice_0.__call__(tuple_0, int_0)
    except BaseException:
        pass

def test_case_2():
    try:
        optional_0 = None
        choice_0 = module_0.Choice()
        var_0 = choice_0.__call__(optional_0)
    except BaseException:
        pass

def test_case_3():
    try:
        int_0 = None
        choice_0 = module_0.Choice()
        list_0 = [choice_0, choice_0]
        str_0 = '.dd'
        list_1 = [str_0, str_0, list_0, int_0, list_0]
        var_0 = choice_0.__call__(list_1)
        var_1 = choice_0.__call__(int_0)
    except BaseException:
        pass

def test_case_4():
    try:
        bool_0 = False
        list_0 = [bool_0, bool_0]
        tuple_0 = (list_0,)
        int_0 = 1347
        choice_0 = module_0.Choice()
        var_0 = choice_0.__call__(tuple_0, int_0, bool_0)
        int_1 = None
        var_1 = choice_0.__call__(choice_0, int_1)
    except BaseException:
        pass

def test_case_5():
    try:
        list_0 = []
        choice_0 = module_0.Choice(*list_0)
        choice_1 = module_0.Choice()
        var_0 = choice_1.__call__(list_0)
    except BaseException:
        pass

def test_case_6():
    try:
        bool_0 = False
        list_0 = [bool_0, bool_0]
        tuple_0 = (list_0,)
        int_0 = 1347
        bool_1 = True
        choice_0 = module_0.Choice()
        var_0 = choice_0.__call__(tuple_0, int_0, bool_1)
    except BaseException:
        pass

def test_case_7():
    try:
        choice_0 = module_0.Choice()
        int_0 = 2299
        choice_1 = module_0.Choice()
        choice_2 = module_0.Choice()
        bool_0 = True
        str_0 = '%3c.E)Wcft\x0bxQ'
        var_0 = choice_0.__call__(str_0, int_0, bool_0)
    except BaseException:
        pass