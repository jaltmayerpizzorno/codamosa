# Automatically generated by Pynguin.
import pypara.dcc as module_0
import datetime as module_1

def test_case_0():
    try:
        date_0 = None
        decimal_0 = module_0.dcfc_act_365_f(date_0, date_0, date_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bool_0 = True
        list_0 = [bool_0, bool_0, bool_0]
        date_0 = module_1.date(*list_0)
        decimal_0 = module_0.dcfc_act_360(date_0, date_0, date_0)
        decimal_1 = module_0.dcfc_30_360_isda(date_0, date_0, date_0)
        d_c_c_registry_machinery_0 = module_0.DCCRegistryMachinery()
        d_c_c_0 = module_0.DCC()
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'SW]b+APw02'
        d_c_c_registry_machinery_0 = module_0.DCCRegistryMachinery()
        optional_0 = d_c_c_registry_machinery_0.find(str_0)
        date_0 = None
        decimal_0 = module_0.dcfc_30_360_us(date_0, date_0, date_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bool_0 = True
        list_0 = [bool_0, bool_0, bool_0]
        date_0 = module_1.date(*list_0)
        decimal_0 = module_0.dcfc_30_e_plus_360(date_0, date_0, date_0)
        decimal_1 = module_0.dcfc_act_act_icma(date_0, date_0, date_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = '-~N\ro^wj?DV?S'
        d_c_c_registry_machinery_0 = module_0.DCCRegistryMachinery()
        optional_0 = d_c_c_registry_machinery_0.find(str_0)
        optional_1 = d_c_c_registry_machinery_0.find(str_0)
        list_0 = [optional_1, str_0, str_0, d_c_c_registry_machinery_0]
        d_c_c_0 = module_0.DCC(*list_0)
        d_c_c_registry_machinery_0.register(d_c_c_0)
    except BaseException:
        pass