# Automatically generated by Pynguin.
import ansible.module_utils.facts.hardware.hpux as module_0

def test_case_0():
    try:
        int_0 = 48
        h_p_u_x_hardware_0 = module_0.HPUXHardware(int_0)
        var_0 = h_p_u_x_hardware_0.populate()
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'ansible_architecture'
        str_1 = ''
        str_2 = {str_0: str_0, str_0: str_1}
        h_p_u_x_hardware_0 = module_0.HPUXHardware(str_0, str_1)
        var_0 = h_p_u_x_hardware_0.get_cpu_facts(str_2)
        var_1 = h_p_u_x_hardware_0.get_hw_facts()
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'L<y9VXpq'
        set_0 = set()
        h_p_u_x_hardware_0 = module_0.HPUXHardware(set_0)
        var_0 = h_p_u_x_hardware_0.get_cpu_facts(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        h_p_u_x_hardware_collector_0 = module_0.HPUXHardwareCollector()
        bytes_0 = b'I'
        set_0 = {h_p_u_x_hardware_collector_0}
        tuple_0 = (set_0,)
        h_p_u_x_hardware_0 = module_0.HPUXHardware(tuple_0)
        var_0 = h_p_u_x_hardware_0.get_memory_facts(bytes_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'ansible_architecture'
        str_1 = ''
        str_2 = {str_0: str_1}
        h_p_u_x_hardware_0 = module_0.HPUXHardware(str_0, str_1)
        var_0 = h_p_u_x_hardware_0.get_cpu_facts(str_2)
        var_1 = h_p_u_x_hardware_0.get_hw_facts(h_p_u_x_hardware_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'ansible_architecture'
        str_1 = 'ansible_distribution_version'
        str_2 = '9000/785'
        str_3 = 'B.11.23'
        str_4 = {str_0: str_2, str_1: str_3}
        var_0 = dict()
        var_1 = dict()
        h_p_u_x_hardware_0 = module_0.HPUXHardware(var_0, var_1)
        var_2 = h_p_u_x_hardware_0.get_cpu_facts(str_4)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'HP-UX'
        h_p_u_x_hardware_0 = module_0.HPUXHardware(str_0)
        str_1 = 'ansible_architecture'
        str_2 = 'ansible_distribution_version'
        str_3 = 'ia64'
        str_4 = 'B.11.31'
        str_5 = {str_1: str_3, str_2: str_4}
        var_0 = h_p_u_x_hardware_0.get_cpu_facts(str_5)
    except BaseException:
        pass