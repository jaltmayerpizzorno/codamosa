# Automatically generated by Pynguin.
import pymonet.monad_try as module_0

def test_case_0():
    pass

def test_case_1():
    bool_0 = True
    try_0 = module_0.Try(bool_0, bool_0)
    str_0 = try_0.__str__()

def test_case_2():
    str_0 = '9xDpCyj5l+Lh0r'
    bytes_0 = b'\xb0\xbf\x1ca'
    set_0 = {bytes_0, bytes_0}
    bool_0 = True
    try_0 = module_0.Try(set_0, bool_0)
    bool_1 = False
    try_1 = module_0.Try(try_0, bool_1)
    bool_2 = try_1.__eq__(str_0)

def test_case_3():
    str_0 = "}X(^E%B'UDA/PC!"
    list_0 = [str_0, str_0, str_0]
    bool_0 = True
    try_0 = module_0.Try(bool_0, bool_0)
    var_0 = try_0.on_fail(list_0)

def test_case_4():
    bool_0 = None
    float_0 = -285.916286
    try_0 = module_0.Try(float_0, bool_0)
    var_0 = try_0.filter(bool_0)

def test_case_5():
    dict_0 = None
    dict_1 = {dict_0: dict_0, dict_0: dict_0, dict_0: dict_0}
    list_0 = [dict_0, dict_0, dict_0, dict_1]
    tuple_0 = ()
    tuple_1 = (dict_0, list_0, tuple_0)
    bool_0 = False
    try_0 = module_0.Try(tuple_1, bool_0)
    list_1 = []
    bool_1 = False
    try_1 = module_0.Try(list_1, bool_1)
    var_0 = try_1.get_or_else(try_0)

def test_case_6():
    str_0 = '/\r'
    dict_0 = {}
    bool_0 = False
    bool_1 = False
    int_0 = -3970
    bool_2 = False
    try_0 = module_0.Try(int_0, bool_2)
    dict_1 = {str_0: dict_0, str_0: bool_1, bool_0: bool_0}
    try_1 = module_0.Try(dict_1, bool_1)
    var_0 = try_1.get_or_else(try_0)
    try_2 = module_0.Try(bool_0, bool_1)
    str_1 = try_2.__str__()
    bool_3 = True
    try_3 = module_0.Try(dict_0, bool_3)
    var_1 = try_3.get_or_else(str_0)
    tuple_0 = ()
    bool_4 = try_3.__eq__(tuple_0)

def test_case_7():
    bool_0 = True
    try_0 = module_0.Try(bool_0, bool_0)
    var_0 = lambda value: value
    var_1 = try_0.filter(var_0)
    try_1 = module_0.Try(bool_0, bool_0)
    int_0 = 0
    try_2 = module_0.Try(int_0, bool_0)
    var_2 = lambda value: value
    var_3 = try_2.filter(var_2)
    bool_1 = False
    try_3 = module_0.Try(int_0, bool_1)
    bool_2 = False
    try_4 = module_0.Try(bool_0, bool_2)
    var_4 = lambda value: value
    var_5 = try_4.filter(var_4)
    bool_3 = False
    try_5 = module_0.Try(bool_0, bool_3)
    bool_4 = True
    try_6 = module_0.Try(bool_3, bool_4)
    var_6 = lambda value: value
    var_7 = try_6.filter(var_6)
    bool_5 = False
    try_7 = module_0.Try(bool_4, bool_5)

def test_case_8():
    bool_0 = True
    try_0 = module_0.Try(bool_0, bool_0)
    var_0 = lambda value: value
    try_1 = module_0.Try(bool_0, bool_0)
    int_0 = 0
    try_2 = module_0.Try(int_0, bool_0)
    var_1 = lambda value: value
    var_2 = try_2.filter(var_1)
    try_3 = module_0.Try(int_0, bool_0)
    bool_1 = False
    try_4 = module_0.Try(bool_0, bool_1)
    var_3 = lambda value: value
    var_4 = try_4.filter(var_3)
    bool_2 = False
    try_5 = module_0.Try(bool_0, bool_2)
    bool_3 = False
    try_6 = module_0.Try(bool_2, bool_3)
    var_5 = lambda value: value
    var_6 = try_6.filter(var_5)
    bool_4 = False
    try_7 = module_0.Try(bool_3, bool_4)