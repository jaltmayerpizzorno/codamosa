# Automatically generated by Pynguin.
import flutes.structure as module_0

def test_case_0():
    pass

def test_case_1():
    dict_0 = {}
    list_0 = module_0.reverse_map(dict_0)

def test_case_2():
    bytes_0 = b'<\xc1\xbe\xa5\xcb\xff\x95\x91\x1f\xe5\x17\xf3\xeb\xd03\x8a\x91\xec~\xd0'
    module_0.register_no_map_class(bytes_0)

def test_case_3():
    str_0 = '-aHJK'
    var_0 = module_0.no_map_instance(str_0)

def test_case_4():
    str_0 = 'h'
    str_1 = 'hello'
    str_2 = 'nest'
    str_3 = {str_2: str_0}
    int_0 = 3
    var_0 = {str_0: str_3, str_1: int_0}
    str_4 = {str_2: str_1}
    int_1 = 4
    var_1 = {str_0: str_4, str_1: int_1}
    var_2 = lambda x, y: x + y
    var_3 = [var_0, var_1]
    var_4 = module_0.map_structure_zip(var_2, var_3)

def test_case_5():
    int_0 = 1
    int_1 = 2
    int_2 = 28
    int_3 = [int_0, int_1, int_2]
    int_4 = [int_0, int_1, int_2]
    str_0 = 'a'
    str_1 = 'Lb'
    int_5 = {str_0: int_0, str_1: int_1}
    int_6 = {str_0: int_0, str_1: int_1}
    var_0 = lambda a, b: a + b
    int_7 = [int_3, int_4]
    var_1 = module_0.map_structure_zip(var_0, int_7)
    var_2 = lambda c, d: c == d
    int_8 = [int_5, int_6]
    var_3 = module_0.map_structure_zip(var_2, int_8)

def test_case_6():
    int_0 = 1
    int_1 = 2
    int_2 = 4
    var_0 = id(int_0)
    int_3 = 5
    int_4 = [int_2, int_3]
    var_1 = module_0.no_map_instance(int_4)
    var_2 = [int_0, int_1, var_1]
    var_3 = module_0.no_map_instance(var_2)
    var_4 = id(var_3)
    var_5 = module_0.no_map_instance(int_0)
    var_6 = module_0.no_map_instance(var_5)