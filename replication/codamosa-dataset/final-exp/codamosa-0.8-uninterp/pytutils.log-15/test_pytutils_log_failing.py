# Automatically generated by Pynguin.
import pytutils.log as module_0

def test_case_0():
    try:
        var_0 = module_0.get_logger()
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = b'\xb1\xb6\x80|\xa93'
        var_0 = module_0.configure(bytes_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = "\n    Loads (and returns) an env file specified by `filename` into the mapping `environ`.\n\n    >>> lines = ['TEST=${HOME}/yeee-$PATH', 'THISIS=~/a/test', 'YOLO=~/swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST']\n    >>> load_env_file(lines, write_environ=dict())\n    OrderedDict([('TEST', '.../.../yeee-...:...'),\n             ('THISIS', '.../a/test'),\n             ('YOLO',\n              '.../swaggins/$NONEXISTENT_VAR_THAT_DOES_NOT_EXIST')])\n    "
        var_0 = module_0.get_config(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        var_0 = module_0.get_config()
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = '=5C'
        var_0 = module_0.get_logger(str_0)
        var_1 = module_0.configure(str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        bytes_0 = b'8'
        list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
        var_0 = module_0.configure(list_0)
    except BaseException:
        pass

def test_case_6():
    try:
        list_0 = []
        var_0 = module_0.get_config(list_0)
        bytes_0 = b'\xf1\xf7\xde~\xc33\xb4\xbc!TS\xcb~\xaf|ay\x00'
        var_1 = module_0.configure(bytes_0)
    except BaseException:
        pass