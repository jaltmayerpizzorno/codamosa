# Automatically generated by Pynguin.
import pytutils.files as module_0

def test_case_0():
    try:
        bytes_0 = b"\x10}\xc9V'X\x98\x02\x90\xbdT\xc2\xd1M\x84\xaap"
        bool_0 = False
        var_0 = module_0.burp(bytes_0, bool_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '\n    Pretty formats with coloring.\n\n    Works in iPython, but not bpython as it does not write directly to term\n    and decodes it instead.\n    '
        bool_0 = True
        bool_1 = False
        list_0 = None
        var_0 = module_0.burp(str_0, bool_1, bool_0, list_0, list_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '5ZU~mG~RY vPU,'
        var_0 = module_0.islurp(str_0)
        var_1 = next(var_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'g7.$\nMEL5E'
        str_1 = 'hK>1x0"?2;a6Y'
        dict_0 = {str_1: str_0}
        float_0 = -530.26597
        float_1 = -1216.9364
        float_2 = None
        tuple_0 = (float_2,)
        bool_0 = None
        var_0 = module_0.burp(str_1, dict_0, float_0, float_1, tuple_0, bool_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = '.temp'
        str_1 = 'r'
        var_0 = module_0.islurp(str_0, str_1)
        var_1 = list(var_0)
        int_0 = 2
        var_2 = module_0.islurp(str_0, str_1, int_0)
        var_3 = list(var_2)
        str_2 = '.missing'
        var_4 = module_0.islurp(str_2, str_1, int_0)
        str_3 = 'enter something to test islurp with stdin: '
        var_5 = input(str_3)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = '-'
        var_0 = module_0.islurp(str_0)
        var_1 = list(var_0)
    except BaseException:
        pass

def test_case_6():
    try:
        float_0 = -511.3115
        list_0 = []
        bool_0 = True
        var_0 = module_0.islurp(float_0, list_0, bool_0)
        str_0 = '-'
        tuple_0 = None
        list_1 = [tuple_0, list_0]
        str_1 = None
        str_2 = ')3"fs)kY^lm'
        str_3 = '?pn?_\nbQj\n'
        var_1 = module_0.islurp(bool_0, str_2, str_3)
        var_2 = module_0.burp(str_0, tuple_0, list_1, str_1)
    except BaseException:
        pass

def test_case_7():
    try:
        float_0 = -511.3115
        list_0 = []
        bool_0 = True
        var_0 = module_0.islurp(float_0, list_0, bool_0)
        str_0 = '-'
        int_0 = 77
        bool_1 = True
        var_1 = module_0.islurp(int_0, bool_1)
        tuple_0 = None
        list_1 = [tuple_0, list_0]
        str_1 = ')3"fs)kY^lm'
        str_2 = '?pn?_\nbQj\n'
        var_2 = module_0.islurp(bool_0, str_1, str_2)
        var_3 = module_0.burp(str_0, tuple_0, list_1, str_0)
    except BaseException:
        pass