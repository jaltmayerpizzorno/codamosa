# Automatically generated by Pynguin.
import ansible.template.vars as module_0

def test_case_0():
    try:
        bool_0 = True
        dict_0 = {}
        float_0 = -1920.0
        ansible_j2_vars_0 = module_0.AnsibleJ2Vars(dict_0, float_0)
        var_0 = ansible_j2_vars_0.__contains__(bool_0)
    except BaseException:
        pass

def test_case_1():
    try:
        list_0 = []
        bytes_0 = b'\x11@\x0c\xcae\xc7P\xcfXZ7\xbb\xef\xaeq\xb0'
        bool_0 = False
        ansible_j2_vars_0 = module_0.AnsibleJ2Vars(bytes_0, bool_0)
        var_0 = ansible_j2_vars_0.__contains__(list_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = "q5&^h1dSQH'\nW`\np\r,"
        list_0 = []
        set_0 = set()
        dict_0 = {str_0: str_0}
        ansible_j2_vars_0 = module_0.AnsibleJ2Vars(list_0, set_0, dict_0)
        var_0 = ansible_j2_vars_0.__iter__()
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'include_vars'
        bool_0 = False
        dict_0 = {bool_0: str_0, bool_0: bool_0, str_0: str_0, bool_0: bool_0}
        ansible_j2_vars_0 = module_0.AnsibleJ2Vars(str_0, dict_0)
        var_0 = ansible_j2_vars_0.__len__()
    except BaseException:
        pass

def test_case_4():
    try:
        int_0 = 657
        str_0 = "q5&^h1dSQH'\nW`\np,"
        ansible_j2_vars_0 = module_0.AnsibleJ2Vars(int_0, str_0)
        var_0 = ansible_j2_vars_0.__getitem__(int_0)
    except BaseException:
        pass

def test_case_5():
    try:
        float_0 = 2928.38906
        dict_0 = {}
        str_0 = None
        str_1 = 'l_'
        int_0 = -488
        tuple_0 = (str_0, str_1, int_0, str_1)
        tuple_1 = (float_0, dict_0, dict_0, tuple_0)
        set_0 = None
        bool_0 = False
        ansible_j2_vars_0 = module_0.AnsibleJ2Vars(set_0, bool_0, dict_0)
        complex_0 = None
        ansible_j2_vars_1 = module_0.AnsibleJ2Vars(tuple_1, complex_0)
        tuple_2 = None
        var_0 = ansible_j2_vars_1.add_locals(tuple_2)
        var_1 = ansible_j2_vars_1.__getitem__(complex_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'rwx---'
        list_0 = []
        set_0 = {str_0}
        dict_0 = {str_0: str_0}
        ansible_j2_vars_0 = module_0.AnsibleJ2Vars(list_0, set_0, dict_0)
        var_0 = ansible_j2_vars_0.__contains__(str_0)
        var_1 = ansible_j2_vars_0.__getitem__(str_0)
        str_1 = ';m{-m.'
        var_2 = ansible_j2_vars_0.__getitem__(str_1)
    except BaseException:
        pass