# Automatically generated by Pynguin.
import dataclasses_json.undefined as module_0

def test_case_0():
    try:
        ignore_undefined_parameters_0 = module_0._IgnoreUndefinedParameters()
        int_0 = 992
        list_0 = []
        str_0 = 'gxj^'
        dict_0 = {str_0: str_0}
        undefined_parameter_error_0 = module_0.UndefinedParameterError(list_0, **dict_0)
        callable_0 = ignore_undefined_parameters_0.create_init(undefined_parameter_error_0)
        dict_1 = {}
        dict_2 = ignore_undefined_parameters_0.handle_from_dict(int_0, dict_1)
    except BaseException:
        pass

def test_case_1():
    try:
        undefined_0 = module_0.Undefined.EXCLUDE
        var_0 = None
        undefined_parameter_error_0 = module_0.UndefinedParameterError(undefined_0, var_0, undefined_0)
        dict_0 = {}
        dict_1 = {}
        raise_undefined_parameters_0 = module_0._RaiseUndefinedParameters(**dict_1)
        dict_2 = raise_undefined_parameters_0.handle_from_dict(undefined_parameter_error_0, dict_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '). Value cannot be serialized properly.'
        ignore_undefined_parameters_0 = module_0._IgnoreUndefinedParameters()
        dict_0 = {ignore_undefined_parameters_0: str_0}
        callable_0 = ignore_undefined_parameters_0.create_init(dict_0)
        callable_1 = ignore_undefined_parameters_0.create_init(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        dict_0 = {}
        catch_all_undefined_parameters_0 = module_0._CatchAllUndefinedParameters()
        callable_0 = catch_all_undefined_parameters_0.create_init(dict_0)
        dict_1 = {}
        list_0 = [dict_1, catch_all_undefined_parameters_0, dict_1, dict_0]
        raise_undefined_parameters_0 = module_0._RaiseUndefinedParameters(*list_0)
    except BaseException:
        pass

def test_case_4():
    try:
        ignore_undefined_parameters_0 = module_0._IgnoreUndefinedParameters()
        list_0 = []
        str_0 = 'gxj^'
        dict_0 = {str_0: str_0}
        undefined_parameter_error_0 = module_0.UndefinedParameterError(list_0, **dict_0)
        callable_0 = ignore_undefined_parameters_0.create_init(undefined_parameter_error_0)
        dict_1 = {}
        catch_all_undefined_parameters_0 = module_0._CatchAllUndefinedParameters()
        dict_2 = catch_all_undefined_parameters_0.handle_to_dict(dict_1, dict_1)
    except BaseException:
        pass

def test_case_5():
    try:
        ignore_undefined_parameters_0 = module_0._IgnoreUndefinedParameters()
        dict_0 = {}
        catch_all_undefined_parameters_0 = module_0._CatchAllUndefinedParameters(**dict_0)
        dict_1 = {}
        catch_all_undefined_parameters_1 = module_0._CatchAllUndefinedParameters()
        dict_2 = catch_all_undefined_parameters_1.handle_from_dict(catch_all_undefined_parameters_0, dict_1)
    except BaseException:
        pass

def test_case_6():
    try:
        ignore_undefined_parameters_0 = module_0._IgnoreUndefinedParameters()
        list_0 = []
        str_0 = 'gxj^'
        dict_0 = {str_0: str_0}
        undefined_parameter_error_0 = module_0.UndefinedParameterError(list_0, **dict_0)
        callable_0 = ignore_undefined_parameters_0.create_init(undefined_parameter_error_0)
        str_1 = '\r$T[|uR'
        catch_all_undefined_parameters_0 = module_0._CatchAllUndefinedParameters()
        dict_1 = catch_all_undefined_parameters_0.handle_dump(str_1)
    except BaseException:
        pass