# Automatically generated by Pynguin.
import sanic.utils as module_0
import pathlib as module_1

def test_case_0():
    try:
        str_0 = "U#)*ML?@n$Y$ Q'"
        bool_0 = module_0.str_to_bool(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        path_0 = module_1.Path()
        var_0 = module_0.load_module_from_file_location(path_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '\n        Determine request scheme.\n        1. `config.SERVER_NAME` if in full URL format\n        2. proxied proto/scheme\n        3. local connection protocol\n\n        :return: http|https|ws|wss or arbitrary value given by the headers.\n        :rtype: str\n        '
        var_0 = module_0.load_module_from_file_location(str_0, str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'j74&2IL~_P!=:NjkpRPK'
        var_0 = module_0.load_module_from_file_location(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        bytes_0 = b'M\x83W\xef;\xd2\x9a\x1c'
        var_0 = module_0.load_module_from_file_location(bytes_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = ']-bHZ2.4Y<&\\AU^Bus\x0cp'
        var_0 = module_0.load_module_from_file_location(str_0, str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'ValY$='
        var_0 = module_0.load_module_from_file_location(str_0, str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = '/some/path/${ENV_VAR}'
        var_0 = module_0.load_module_from_file_location(str_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = 'tests/some_config.py'
        var_0 = module_0.load_module_from_file_location(str_0)
    except BaseException:
        pass