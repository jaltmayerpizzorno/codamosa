# Automatically generated by Pynguin.
import ansible.plugins.action.wait_for_connection as module_0

def test_case_0():
    try:
        timed_out_exception_0 = module_0.TimedOutException()
        bool_0 = False
        dict_0 = {}
        float_0 = -257.625418
        str_0 = "1DLNC/lkW5WH]V'\x0c'6rl"
        set_0 = {timed_out_exception_0, timed_out_exception_0, str_0, timed_out_exception_0}
        list_0 = [float_0, set_0, dict_0, float_0]
        list_1 = [list_0, list_0, dict_0, timed_out_exception_0]
        dict_1 = {str_0: bool_0, str_0: list_1}
        tuple_0 = ()
        action_module_0 = module_0.ActionModule(list_1, dict_1, list_1, tuple_0, dict_1, tuple_0)
        str_1 = 'g~Bv\t'
        float_1 = -477.3447
        action_module_1 = module_0.ActionModule(str_1, list_0, float_1, action_module_0, str_0, float_1)
        var_0 = action_module_0.do_until_success_or_timeout(str_0, float_0, set_0, float_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'L)u@<B;RRbtEN=wL'
        bytes_0 = b'\xc33\x98E\xce\xd7 e\x9f'
        list_0 = [str_0, bytes_0]
        set_0 = set()
        str_1 = 'running'
        timed_out_exception_0 = module_0.TimedOutException()
        tuple_0 = (timed_out_exception_0,)
        bool_0 = True
        list_1 = [bool_0, str_1, tuple_0, tuple_0]
        bytes_1 = b'N\xb7TK\x08'
        action_module_0 = module_0.ActionModule(str_1, tuple_0, timed_out_exception_0, bool_0, list_1, bytes_1)
        var_0 = action_module_0.do_until_success_or_timeout(str_0, bytes_0, list_0, set_0)
    except BaseException:
        pass

def test_case_2():
    try:
        float_0 = -1516.943
        bool_0 = False
        timed_out_exception_0 = module_0.TimedOutException()
        float_1 = 0.0001
        float_2 = 0.1
        list_0 = [float_2]
        set_0 = {float_1}
        str_0 = ",y dnI>>G3E|'J;\n,"
        action_module_0 = module_0.ActionModule(timed_out_exception_0, float_1, list_0, set_0, float_1, str_0)
        var_0 = action_module_0.run(float_0, bool_0)
    except BaseException:
        pass

def test_case_3():
    try:
        dict_0 = None
        timed_out_exception_0 = module_0.TimedOutException()
        dict_1 = {dict_0: dict_0, dict_0: timed_out_exception_0, dict_0: timed_out_exception_0}
        bool_0 = False
        timed_out_exception_1 = module_0.TimedOutException()
        list_0 = [dict_1]
        list_1 = []
        int_0 = None
        bool_1 = False
        action_module_0 = module_0.ActionModule(dict_0, list_1, int_0, bool_1, list_1, bool_1)
        action_module_1 = module_0.ActionModule(dict_1, dict_1, bool_0, dict_0, timed_out_exception_1, list_0)
        str_0 = None
        var_0 = action_module_1.run(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        timed_out_exception_0 = None
        int_0 = -329
        dict_0 = {}
        dict_1 = {}
        str_0 = "'\r"
        str_1 = '3,h'
        action_module_0 = module_0.ActionModule(dict_0, timed_out_exception_0, dict_1, str_0, dict_1, str_1)
        timed_out_exception_1 = module_0.TimedOutException()
        float_0 = 13.701686746450376
        str_2 = 'i3'
        var_0 = action_module_0.do_until_success_or_timeout(float_0, float_0, str_2, int_0)
    except BaseException:
        pass