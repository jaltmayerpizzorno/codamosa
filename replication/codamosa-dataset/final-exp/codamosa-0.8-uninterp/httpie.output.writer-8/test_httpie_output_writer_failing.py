# Automatically generated by Pynguin.
import requests.models as module_0
import httpie.context as module_1
import argparse as module_2
import httpie.output.writer as module_3
import typing as module_4

def test_case_0():
    try:
        response_0 = module_0.Response()
        environment_0 = module_1.Environment()
        namespace_0 = module_2.Namespace()
        str_0 = ',mlN&8r"&Lu .M&8'
        var_0 = module_3.write_message(response_0, environment_0, namespace_0, str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        prepared_request_0 = module_0.PreparedRequest()
        environment_0 = module_1.Environment()
        namespace_0 = module_2.Namespace()
        var_0 = module_3.write_message(prepared_request_0, environment_0, namespace_0)
        tuple_0 = module_3.get_stream_type_and_kwargs(environment_0, namespace_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'w'
        bool_0 = False
        var_0 = module_3.write_stream(str_0, str_0, bool_0)
    except BaseException:
        pass

def test_case_3():
    try:
        environment_0 = None
        namespace_0 = module_2.Namespace()
        tuple_0 = module_3.get_stream_type_and_kwargs(environment_0, namespace_0)
    except BaseException:
        pass

def test_case_4():
    try:
        prepared_request_0 = module_0.PreparedRequest()
        environment_0 = module_1.Environment()
        str_0 = 'x\n9j2r?yLB(>2'
        str_1 = 'Rj&,w['
        dict_0 = {str_0: prepared_request_0, str_0: str_0, str_0: str_0, str_1: str_0}
        namespace_0 = module_2.Namespace(**dict_0)
        str_2 = ''
        i_o_0 = module_4.IO()
        var_0 = module_3.write_message(prepared_request_0, environment_0, namespace_0, str_2, dict_0)
    except BaseException:
        pass

def test_case_5():
    try:
        environment_0 = module_1.Environment()
        namespace_0 = module_2.Namespace()
        tuple_0 = module_3.get_stream_type_and_kwargs(environment_0, namespace_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = ''
        prepared_request_0 = module_0.PreparedRequest()
        environment_0 = module_1.Environment()
        var_0 = prepared_request_0.copy()
        bool_0 = False
        var_1 = module_3.write_stream(str_0, str_0, bool_0)
        var_2 = open(str_0, str_0)
    except BaseException:
        pass