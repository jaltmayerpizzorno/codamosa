# Automatically generated by Pynguin.
import ansible.module_utils.common.text.converters as module_0

def test_case_0():
    pass

def test_case_1():
    float_0 = 1554.0
    var_0 = module_0.to_text(float_0)

def test_case_2():
    bytes_0 = b'\xfao\xf3]\xb3\x1f'
    var_0 = module_0.container_to_text(bytes_0)

def test_case_3():
    set_0 = set()
    var_0 = module_0.jsonify(set_0)

def test_case_4():
    float_0 = 1.5
    var_0 = module_0.container_to_bytes(float_0)

def test_case_5():
    str_0 = '\x0bO.7 *&4-!"'
    var_0 = module_0.container_to_bytes(str_0)

def test_case_6():
    dict_0 = None
    int_0 = 555
    set_0 = {dict_0, dict_0, int_0, dict_0}
    list_0 = [int_0, int_0, set_0]
    str_0 = 'HT^M7'
    dict_1 = {str_0: str_0}
    tuple_0 = (dict_0, list_0, dict_1, set_0)
    var_0 = module_0.container_to_bytes(tuple_0)

def test_case_7():
    dict_0 = {}
    var_0 = module_0.jsonify(dict_0, **dict_0)

def test_case_8():
    list_0 = []
    var_0 = module_0.jsonify(list_0)

def test_case_9():
    str_0 = 'z2l<(;Ob3Hq'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.jsonify(dict_0)

def test_case_10():
    str_0 = 'ðŸ˜ƒ'
    str_1 = 'ascii'
    str_2 = 'surrogate_then_replace'
    var_0 = module_0.to_bytes(str_0, str_1, str_2)