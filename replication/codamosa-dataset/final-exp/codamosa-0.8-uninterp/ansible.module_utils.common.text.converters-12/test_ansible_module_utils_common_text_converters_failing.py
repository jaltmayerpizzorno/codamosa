# Automatically generated by Pynguin.
import ansible.module_utils.common.text.converters as module_0

def test_case_0():
    try:
        dict_0 = None
        var_0 = module_0.jsonify(dict_0)
        int_0 = 86400
        str_0 = '8=x`Nv'
        float_0 = None
        list_0 = [int_0, str_0, float_0]
        var_1 = module_0.to_bytes(int_0, dict_0, int_0, list_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = None
        var_0 = module_0.to_bytes(str_0, str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '/ayXB/%5zj\\0'
        str_1 = "_'7v'ESlXE:p)o<2\x0c#"
        str_2 = 'hA9xm4e9Ioy'
        str_3 = 'Ey$'
        bytes_0 = b'\xdcG\xa5I\x16M.NT\xf0lTq\xda\xbe\xd2t;\xba'
        var_0 = module_0.to_bytes(bytes_0)
        dict_0 = {str_0: str_0, str_1: str_1, str_2: str_2, str_3: str_2}
        var_1 = module_0.container_to_text(dict_0, str_1)
        str_4 = 'i=09AmQ\nE'
        bool_0 = False
        var_2 = module_0.container_to_bytes(str_4, bool_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = ''
        bytes_0 = b''
        set_0 = {str_0, bytes_0, bytes_0}
        bool_0 = True
        dict_0 = {str_0: bool_0, bool_0: bool_0}
        tuple_0 = (bytes_0, set_0, bool_0, dict_0)
        var_0 = module_0.jsonify(tuple_0)
    except BaseException:
        pass

def test_case_4():
    try:
        set_0 = set()
        var_0 = module_0.to_text(set_0)
        int_0 = 2560
        dict_0 = {}
        bool_0 = False
        dict_1 = {int_0: set_0}
        set_1 = {bool_0}
        tuple_0 = (dict_0, dict_1, set_1)
        tuple_1 = (tuple_0,)
        str_0 = 'SjPT^T)hT)'
        str_1 = '\\R\t4-u0pJR'
        var_1 = module_0.to_text(tuple_1, str_0, str_1, bool_0)
    except BaseException:
        pass

def test_case_5():
    try:
        float_0 = -113.8542
        var_0 = module_0.container_to_text(float_0)
        list_0 = [var_0, float_0, float_0]
        str_0 = 'zu['
        dict_0 = {str_0: float_0, str_0: var_0, str_0: float_0}
        var_1 = module_0.jsonify(list_0, **dict_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'hello'
        var_0 = module_0.to_bytes(str_0)
        str_1 = 'â€™'
        var_1 = module_0.to_bytes(str_1)
        str_2 = 'ascii'
        str_3 = 'surrogate_or_replace'
        var_2 = module_0.to_bytes(str_1, str_2, str_3)
    except BaseException:
        pass