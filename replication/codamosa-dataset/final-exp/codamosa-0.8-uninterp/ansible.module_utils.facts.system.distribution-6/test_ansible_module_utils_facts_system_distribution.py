# Automatically generated by Pynguin.
import ansible.module_utils.facts.system.distribution as module_0
import platform as module_1

def test_case_0():
    pass

def test_case_1():
    bool_0 = True
    distribution_0 = module_0.Distribution(bool_0)
    var_0 = distribution_0.get_distribution_facts()

def test_case_2():
    float_0 = 1260.5
    distribution_files_0 = module_0.DistributionFiles(float_0)
    distribution_fact_collector_0 = module_0.DistributionFactCollector(distribution_files_0)

def test_case_3():
    str_0 = '@LM'
    str_1 = 'use_persistent_connections'
    bool_0 = True
    distribution_files_0 = module_0.DistributionFiles(bool_0)
    set_0 = set()
    distribution_files_1 = module_0.DistributionFiles(set_0)
    var_0 = distribution_files_1.parse_distribution_file_Slackware(str_0, str_1, set_0, distribution_files_0)

def test_case_4():
    str_0 = '5/6g'
    str_1 = '*O\n".)= 39Wr? i4\t'
    bytes_0 = b'C\xbc>'
    set_0 = {bytes_0, str_1, str_0, str_1}
    str_2 = '8sGp%}D'
    list_0 = [str_2]
    distribution_files_0 = module_0.DistributionFiles(list_0)
    var_0 = distribution_files_0.parse_distribution_file_OpenWrt(str_0, str_1, bytes_0, set_0)

def test_case_5():
    complex_0 = None
    dict_0 = {complex_0: complex_0, complex_0: complex_0, complex_0: complex_0}
    complex_1 = None
    float_0 = 0.0001
    distribution_files_0 = module_0.DistributionFiles(float_0)
    float_1 = 849.2
    distribution_files_1 = module_0.DistributionFiles(float_1)
    var_0 = distribution_files_1.parse_distribution_file_Alpine(complex_1, distribution_files_0, dict_0, complex_0)
    int_0 = -317
    distribution_0 = module_0.Distribution(int_0)
    list_0 = [int_0, distribution_0, complex_0]
    tuple_0 = (dict_0, distribution_0, distribution_0, list_0)
    distribution_files_2 = module_0.DistributionFiles(tuple_0)
    var_1 = distribution_files_2.process_dist_files()

def test_case_6():
    bytes_0 = b'q\xf0\xfb'
    str_0 = 'minute'
    set_0 = {bytes_0, bytes_0}
    distribution_0 = None
    distribution_files_0 = module_0.DistributionFiles(distribution_0)
    str_1 = 'UB`Psi(Uf0+*0pY=Jk@'
    set_1 = {str_1, str_1, str_1}
    distribution_files_1 = module_0.DistributionFiles(set_1)
    var_0 = distribution_files_1.parse_distribution_file_Debian(bytes_0, str_0, set_0, distribution_files_0)
    var_1 = module_1.release()

def test_case_7():
    str_0 = 'Lin0x'
    str_1 = 'Eyv2>L!~=2vENb\tWeaHq'
    dict_0 = {str_1: str_0, str_1: str_1, str_1: str_0}
    str_2 = '88.Ly&VZqVlV3>vBYk'
    set_0 = {str_2, str_2, str_2}
    distribution_files_0 = module_0.DistributionFiles(set_0)
    var_0 = distribution_files_0.parse_distribution_file_NA(str_0, str_2, dict_0, str_0)
    tuple_0 = None
    distribution_0 = module_0.Distribution(tuple_0)

def test_case_8():
    float_0 = 1.0
    distribution_0 = module_0.Distribution(float_0)
    int_0 = 0
    str_0 = 'coreos'
    float_1 = None
    dict_0 = {}
    distribution_files_0 = module_0.DistributionFiles(dict_0)
    var_0 = distribution_files_0.parse_distribution_file_Coreos(distribution_0, int_0, str_0, float_1)

def test_case_9():
    tuple_0 = None
    distribution_files_0 = module_0.DistributionFiles(tuple_0)
    str_0 = '9l[Ot%K0qb'
    bool_0 = True
    list_0 = [bool_0, distribution_files_0, bool_0]
    var_0 = distribution_files_0.parse_distribution_file_Flatcar(str_0, bool_0, tuple_0, list_0)

def test_case_10():
    distribution_fact_collector_0 = module_0.DistributionFactCollector()
    str_0 = 'NA'
    bytes_0 = b'\x87\xd3t\xe4\xe9\xc1\xc2\xed)'
    tuple_0 = (bytes_0,)
    dict_0 = {distribution_fact_collector_0: tuple_0, tuple_0: tuple_0}
    tuple_1 = ()
    distribution_files_0 = module_0.DistributionFiles(tuple_1)
    var_0 = distribution_files_0.parse_distribution_file_ClearLinux(str_0, tuple_0, distribution_fact_collector_0, dict_0)
    bytes_1 = b'\xec\xe3\xfa@#L\xb2\xcb\xcdf\xb9\xb5\x89'
    distribution_0 = module_0.Distribution(bytes_1)

def test_case_11():
    str_0 = "&D!8r$%vi}L\nBknv'"
    distribution_0 = module_0.Distribution(str_0)
    var_0 = distribution_0.get_distribution_FreeBSD()

def test_case_12():
    bytes_0 = b'\x8d\xc7q\xa1\xdb\x80\x0e\xb3\xf9\xce\xf5\xaf\x7f\xa2]\x03m\x7f'
    distribution_0 = module_0.Distribution(bytes_0)
    var_0 = distribution_0.get_distribution_SMGL()
    bool_0 = True
    distribution_1 = module_0.Distribution(bool_0)
    distribution_2 = module_0.Distribution(distribution_1)
    var_1 = distribution_2.get_distribution_FreeBSD()

def test_case_13():
    bytes_0 = b'd\x8d\xea\x8d'
    distribution_fact_collector_0 = module_0.DistributionFactCollector(bytes_0)
    float_0 = 0.2
    var_0 = distribution_fact_collector_0.collect(float_0)
    distribution_0 = module_0.Distribution(distribution_fact_collector_0)

def test_case_14():
    set_0 = None
    str_0 = ';OGO/pQd54;y'
    bytes_0 = b'\xbe\xc2\x07\x99IA\xfe+\xfc\xab\xf6\xae\xc9\xb1\xe4\x14\xd5:\xae'
    str_1 = 'I,6&o?'
    distribution_fact_collector_0 = module_0.DistributionFactCollector(str_1)
    str_2 = 'JM\r'
    var_0 = distribution_fact_collector_0.collect()
    distribution_files_0 = module_0.DistributionFiles(str_2)
    var_1 = distribution_files_0.parse_distribution_file_Amazon(set_0, str_0, bytes_0, distribution_fact_collector_0)

def test_case_15():
    int_0 = 3576
    list_0 = []
    float_0 = 1.3045016364233002
    int_1 = -303
    distribution_files_0 = module_0.DistributionFiles(int_1)
    distribution_files_1 = module_0.DistributionFiles(float_0)
    distribution_fact_collector_0 = module_0.DistributionFactCollector(list_0, distribution_files_1)
    var_0 = distribution_fact_collector_0.collect(int_0)
    bool_0 = False
    distribution_0 = module_0.Distribution(bool_0)
    var_1 = distribution_files_1.process_dist_files()
    bytes_0 = b'\xcdJ'
    str_0 = "a-k!vz'68f\x0c:Q049"
    var_2 = distribution_fact_collector_0.collect(bytes_0, str_0)
    str_1 = 'Ha7)0x'
    var_3 = distribution_files_1.parse_distribution_file_Slackware(bool_0, str_0, list_0, str_1)