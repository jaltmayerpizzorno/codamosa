# Automatically generated by Pynguin.
import pytutils.trees as module_0

def test_case_0():
    try:
        str_0 = 'a'
        var_0 = module_0.get_tree_node(str_0, str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bool_0 = None
        registry_tree_0 = None
        tree_0 = module_0.Tree()
        var_0 = tree_0.__setitem__(bool_0, registry_tree_0)
    except BaseException:
        pass

def test_case_2():
    try:
        int_0 = 542
        registry_tree_0 = module_0.RegistryTree(int_0)
    except BaseException:
        pass

def test_case_3():
    try:
        int_0 = 4630
        tree_0 = module_0.Tree()
        var_0 = tree_0.__getitem__(int_0)
    except BaseException:
        pass

def test_case_4():
    try:
        tree_0 = module_0.Tree()
        str_0 = 'v#ZI&1=$ CbR'
        float_0 = 1174.83691
        var_0 = tree_0.__setitem__(str_0, float_0, str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        tree_0 = module_0.Tree()
        tree_1 = module_0.Tree()
        bool_0 = False
        bytes_0 = b'<\\\xe9\xda\xec'
        str_0 = 'jyL*s[<'
        registry_tree_0 = module_0.RegistryTree(bool_0, bytes_0, str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        bytes_0 = b'\xfc2_\x17\xbd\xa6\x0f\x06~:\x9ayW'
        bool_0 = None
        tree_0 = module_0.Tree()
        str_0 = 'v#ZI&1=$ CbR'
        set_0 = None
        set_1 = {set_0, str_0, set_0}
        str_1 = 'bF>G9`Rq=?G?'
        float_0 = 73.148
        str_2 = "_!q.s\rVQ>Ypm'lKa^_^"
        dict_0 = {str_1: bytes_0, str_0: bool_0, str_0: str_1, str_2: set_0}
        var_0 = module_0.get_tree_node(set_1, str_1, float_0, dict_0)
    except BaseException:
        pass