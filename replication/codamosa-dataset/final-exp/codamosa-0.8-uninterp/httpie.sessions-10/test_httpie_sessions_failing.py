# Automatically generated by Pynguin.
import pathlib as module_0
import httpie.sessions as module_1
import httpie.cli.dicts as module_2

def test_case_0():
    try:
        path_0 = module_0.Path()
        var_0 = path_0.is_socket()
        session_0 = module_1.Session(path_0)
        str_0 = 'Q/>?\x0c_mB{\tR.V[||.'
        session_1 = module_1.get_httpie_session(path_0, str_0, str_0, str_0)
        str_1 = '^;r\x0cS\'qT^;-R9\nE"q'
        str_2 = 'A nicer help formatter.\n\n    Help for arguments can be indented and contain new lines.\n    It will be de-dented and arguments in the help\n    will be separated by a blank line for better readability.\n\n\n    '
        session_2 = module_1.get_httpie_session(path_0, str_2, str_0, str_1)
        session_3 = module_1.get_httpie_session(path_0, str_1, str_1, str_1)
        path_1 = module_0.Path()
        list_0 = [session_3, path_0]
        var_1 = session_1.remove_cookies(list_0)
    except BaseException:
        pass

def test_case_1():
    try:
        path_0 = module_0.Path()
        str_0 = None
        session_0 = module_1.get_httpie_session(path_0, str_0, str_0, str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = ''
        path_0 = module_0.Path()
        str_1 = "k'C\x0bMhs"
        str_2 = 'dV>S\x0bA|!B2\x0c\nS@'
        dict_0 = {str_0: path_0, str_1: str_1, str_2: str_2}
        request_headers_dict_0 = module_2.RequestHeadersDict(**dict_0)
        str_3 = ':LP_zO6'
        session_0 = module_1.Session(str_3)
        var_0 = session_0.update_headers(request_headers_dict_0)
    except BaseException:
        pass

def test_case_3():
    try:
        iterable_0 = None
        path_0 = module_0.Path()
        str_0 = '*+Q;M\\8M*x'
        session_0 = module_1.get_httpie_session(path_0, str_0, str_0, str_0)
        str_1 = '%~\tC-b?!u'
        session_1 = module_1.Session(str_1)
        dict_0 = None
        str_2 = '.A'
        dict_1 = {str_2: dict_0, str_1: str_0}
        request_headers_dict_0 = module_2.RequestHeadersDict(dict_0, **dict_1)
        var_0 = session_0.update_headers(request_headers_dict_0)
        var_1 = session_0.remove_cookies(iterable_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = '/fake/path'
        session_0 = module_1.Session(str_0)
        str_1 = 'If-Modified-Since'
        str_2 = 'Sat, 29 Oct 1994 19:43:31 GMT'
        str_3 = {str_1: str_2}
        var_0 = session_0.update_headers(str_3)
        str_4 = 'User-Agent'
        str_5 = 'HTTPie/0.9.8'
        str_6 = {str_4: str_5}
        var_1 = session_0.update_headers(str_6)
        str_7 = 'Cookie'
        str_8 = 'session_id=38afes7a8'
        str_9 = {str_7: str_8}
        var_2 = session_0.update_headers(str_9)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'Content-Type'
        str_1 = 'Content-Length'
        str_2 = 'te'
        str_3 = 'Content-MD5'
        str_4 = 'application/json'
        str_5 = 'HTTPie/2.0.0'
        str_6 = 'trailers'
        str_7 = 'httpie.org'
        str_8 = '123ABC'
        str_9 = {str_0: str_4, str_1: str_0, str_6: str_5, str_2: str_6, str_8: str_7, str_3: str_8}
        session_0 = module_1.Session(str_6)
        var_0 = session_0.update_headers(str_9)
        var_1 = session_0[str_9]
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'name'
        session_0 = module_1.Session(str_0)
        str_1 = 'cookie'
        str_2 = {str_1: str_1}
        var_0 = session_0.update_headers(str_2)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'name'
        session_0 = module_1.Session(str_0)
        str_1 = 'cookie'
        str_2 = 'foo=bar; baz=qux'
        str_3 = {str_1: str_2}
        var_0 = session_0.update_headers(str_3)
    except BaseException:
        pass