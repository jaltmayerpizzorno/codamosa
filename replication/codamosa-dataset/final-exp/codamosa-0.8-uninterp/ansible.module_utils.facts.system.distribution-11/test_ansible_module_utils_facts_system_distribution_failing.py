# Automatically generated by Pynguin.
import ansible.module_utils.facts.system.distribution as module_0

def test_case_0():
    try:
        str_0 = '%Z71?\t c{9#iOzX'
        var_0 = module_0.get_uname(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = 267
        distribution_0 = module_0.Distribution(int_0)
        float_0 = -449.32
        str_0 = '[DLd-aNR5,[xh}=g1g'
        distribution_files_0 = module_0.DistributionFiles(int_0)
        distribution_files_1 = module_0.DistributionFiles(distribution_0)
        distribution_files_2 = module_0.DistributionFiles(distribution_files_1)
        var_0 = distribution_files_2.parse_distribution_file_NA(float_0, str_0, str_0, distribution_files_0)
        var_1 = distribution_0.get_distribution_facts()
        var_2 = distribution_0.get_distribution_facts()
        var_3 = distribution_0.get_distribution_AIX()
    except BaseException:
        pass

def test_case_2():
    try:
        distribution_fact_collector_0 = module_0.DistributionFactCollector()
        set_0 = {distribution_fact_collector_0, distribution_fact_collector_0, distribution_fact_collector_0, distribution_fact_collector_0}
        distribution_fact_collector_1 = module_0.DistributionFactCollector(set_0)
        float_0 = 2904.01733
        set_1 = set()
        distribution_0 = module_0.Distribution(set_1)
        distribution_1 = module_0.Distribution(distribution_0)
        var_0 = distribution_1.get_distribution_facts()
        distribution_files_0 = module_0.DistributionFiles(float_0)
        var_1 = distribution_0.get_distribution_HPUX()
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'WT!]6|w+A2I1g=9BQF'
        distribution_0 = module_0.Distribution(str_0)
        distribution_1 = module_0.Distribution(distribution_0)
        var_0 = distribution_1.get_distribution_Darwin()
    except BaseException:
        pass

def test_case_4():
    try:
        bool_0 = True
        distribution_0 = module_0.Distribution(bool_0)
        var_0 = distribution_0.get_distribution_OpenBSD()
    except BaseException:
        pass

def test_case_5():
    try:
        int_0 = 2897
        set_0 = None
        str_0 = 'bullseye'
        list_0 = []
        distribution_0 = module_0.Distribution(list_0)
        var_0 = distribution_0.get_distribution_FreeBSD()
        distribution_fact_collector_0 = module_0.DistributionFactCollector(str_0)
        distribution_1 = module_0.Distribution(distribution_fact_collector_0)
        distribution_fact_collector_1 = module_0.DistributionFactCollector(distribution_1)
        var_1 = distribution_fact_collector_1.collect(set_0)
        distribution_files_0 = module_0.DistributionFiles(int_0)
        list_1 = [distribution_files_0]
        distribution_files_1 = module_0.DistributionFiles(list_1)
        distribution_fact_collector_2 = module_0.DistributionFactCollector()
        distribution_2 = module_0.Distribution(distribution_fact_collector_2)
        var_2 = distribution_2.get_distribution_DragonFly()
    except BaseException:
        pass

def test_case_6():
    try:
        int_0 = 87
        set_0 = {int_0, int_0, int_0}
        list_0 = [set_0, int_0, set_0, int_0]
        distribution_0 = module_0.Distribution(list_0)
        var_0 = distribution_0.get_distribution_NetBSD()
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = ',_ci\nwM"d*\x0cWBYf'
        distribution_0 = module_0.Distribution(str_0)
        float_0 = 371.1879
        distribution_files_0 = module_0.DistributionFiles(float_0)
        var_0 = distribution_files_0.process_dist_files()
        dict_0 = {}
        var_1 = distribution_0.get_distribution_SMGL()
        distribution_files_1 = module_0.DistributionFiles(str_0)
        str_1 = "H#Bo+l^K\t5K{'"
        bytes_0 = b'\xb5\x90\xb6U\x06.Q\x1e?\xc5\x1d\xc2\xcdh\xd6'
        distribution_files_2 = module_0.DistributionFiles(dict_0)
        var_2 = distribution_files_0.parse_distribution_file_Mandriva(bytes_0, str_0, distribution_files_2, distribution_0)
        distribution_1 = module_0.Distribution(str_1)
        var_3 = distribution_1.get_distribution_FreeBSD()
        bytes_1 = b'\xd4U\xd3'
        int_0 = 1244
        bytes_2 = b'5\xa73x\r\x9a\xc1\xfc-\xa1_\x9e\x8a\x83\xd7H'
        var_4 = distribution_files_1.parse_distribution_file_Debian(distribution_0, bytes_1, int_0, bytes_2)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = '2/'
        distribution_0 = module_0.Distribution(str_0)
        set_0 = {distribution_0}
        distribution_1 = module_0.Distribution(set_0)
        var_0 = distribution_1.get_distribution_SunOS()
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = '=WD1A{f;lCX\\BNQVgZ&='
        int_0 = -1811
        float_0 = None
        bytes_0 = None
        bytes_1 = b'\x84A\xff\x91'
        bool_0 = False
        distribution_files_0 = module_0.DistributionFiles(bool_0)
        var_0 = distribution_files_0.parse_distribution_file_Debian(float_0, str_0, bytes_0, bytes_1)
        distribution_0 = module_0.Distribution(int_0)
        distribution_1 = module_0.Distribution(distribution_0)
        var_1 = module_0.get_uname(str_0, distribution_1)
    except BaseException:
        pass