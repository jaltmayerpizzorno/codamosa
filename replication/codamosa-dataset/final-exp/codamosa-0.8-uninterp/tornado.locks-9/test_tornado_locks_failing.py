# Automatically generated by Pynguin.
import tornado.locks as module_0
import builtins as module_1
import datetime as module_2
import tornado.ioloop as module_3
import _asyncio as module_4

def test_case_0():
    try:
        condition_0 = module_0.Condition()
    except BaseException:
        pass

def test_case_1():
    try:
        event_0 = module_0.Event()
        event_0.set()
        event_1 = module_0.Event()
        str_0 = event_0.__repr__()
        condition_0 = module_0.Condition()
    except BaseException:
        pass

def test_case_2():
    try:
        event_0 = module_0.Event()
        awaitable_0 = event_0.wait()
    except BaseException:
        pass

def test_case_3():
    try:
        semaphore_0 = module_0.Semaphore()
        releasing_context_manager_0 = module_0._ReleasingContextManager(semaphore_0)
        releasing_context_manager_0.__enter__()
        set_0 = {semaphore_0, semaphore_0}
        list_0 = [semaphore_0, set_0, semaphore_0, set_0]
        traceback_0 = module_1.traceback(*list_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = '${I$j)kh<vV=EO7{.'
        event_0 = module_0.Event()
        set_0 = {str_0, str_0, event_0, event_0}
        float_0 = 1948.611223
        traceback_0 = None
        timedelta_0 = module_2.timedelta()
        tuple_0 = (float_0, traceback_0, timedelta_0)
        float_1 = 1733.0
        releasing_context_manager_0 = module_0._ReleasingContextManager(float_1)
        releasing_context_manager_0.__exit__(set_0, event_0, tuple_0)
    except BaseException:
        pass

def test_case_5():
    try:
        semaphore_0 = module_0.Semaphore()
        semaphore_0.__enter__()
    except BaseException:
        pass

def test_case_6():
    try:
        event_0 = module_0.Event()
        str_0 = event_0.__repr__()
        lock_0 = module_0.Lock()
        lock_0.__aenter__()
        bool_0 = event_0.is_set()
        event_0.set()
        semaphore_0 = module_0.Semaphore()
        float_0 = -1230.196975
        dict_0 = {str_0: event_0, float_0: float_0}
        traceback_0 = None
        semaphore_0.__exit__(float_0, dict_0, traceback_0)
    except BaseException:
        pass

def test_case_7():
    try:
        lock_0 = module_0.Lock()
        lock_0.release()
    except BaseException:
        pass

def test_case_8():
    try:
        lock_0 = module_0.Lock()
        awaitable_0 = lock_0.acquire()
    except BaseException:
        pass

def test_case_9():
    try:
        semaphore_0 = module_0.Semaphore()
        event_0 = module_0.Event()
        semaphore_0.release()
        event_0.clear()
        lock_0 = module_0.Lock()
        lock_0.__enter__()
    except BaseException:
        pass

def test_case_10():
    try:
        lock_0 = module_0.Lock()
        lock_0.__aenter__()
        semaphore_0 = module_0.Semaphore()
        event_0 = module_0.Event()
        event_0.set()
        event_0.set()
        str_0 = semaphore_0.__repr__()
        lock_1 = module_0.Lock()
        condition_0 = module_0.Condition()
    except BaseException:
        pass

def test_case_11():
    try:
        semaphore_0 = module_0.Semaphore()
        event_0 = module_0.Event()
        semaphore_1 = module_0.Semaphore()
        event_1 = module_0.Event()
        event_2 = module_0.Event()
        int_0 = -2749
        bounded_semaphore_0 = module_0.BoundedSemaphore(int_0)
    except BaseException:
        pass

def test_case_12():
    try:
        semaphore_0 = module_0.Semaphore()
        event_0 = module_0.Event()
        event_0.set()
        str_0 = semaphore_0.__repr__()
        bool_0 = True
        timeout_garbage_collector_0 = module_0._TimeoutGarbageCollector()
        int_0 = 1796
        lock_0 = module_0.Lock()
        lock_0.__exit__(bool_0, timeout_garbage_collector_0, int_0)
    except BaseException:
        pass

def test_case_13():
    try:
        lock_0 = module_0.Lock()
        lock_0.__aenter__()
        semaphore_0 = module_0.Semaphore()
        event_0 = module_0.Event()
        event_0.set()
        int_0 = 0
        semaphore_1 = module_0.Semaphore(int_0)
        str_0 = semaphore_1.__repr__()
        str_1 = semaphore_0.__repr__()
        semaphore_0.release()
        event_1 = module_0.Event()
        lock_0.__aenter__()
        event_2 = module_0.Event()
        event_3 = module_0.Event()
        str_2 = event_1.__repr__()
        bounded_semaphore_0 = module_0.BoundedSemaphore()
        semaphore_1.release()
        event_4 = module_0.Event()
        lock_0.release()
    except BaseException:
        pass

def test_case_14():
    try:
        i_o_loop_0 = module_3.IOLoop()
        condition_0 = module_0.Condition()
        condition_0.notify()
        future_0 = module_4.Future()
        condition_1 = module_0.Condition()
        semaphore_0 = module_0.Semaphore()
        condition_1.notify_all()
        bounded_semaphore_0 = module_0.BoundedSemaphore()
        lock_0 = module_0.Lock()
        lock_0.release()
    except BaseException:
        pass

def test_case_15():
    try:
        i_o_loop_0 = module_3.IOLoop()
        condition_0 = module_0.Condition()
        condition_0.notify_all()
        event_0 = module_0.Event()
        event_0.clear()
        str_0 = event_0.__repr__()
        bounded_semaphore_0 = module_0.BoundedSemaphore()
        event_1 = module_0.Event()
        awaitable_0 = condition_0.wait()
        lock_0 = module_0.Lock()
        lock_0.release()
    except BaseException:
        pass

def test_case_16():
    try:
        i_o_loop_0 = module_3.IOLoop()
        condition_0 = module_0.Condition()
        condition_1 = module_0.Condition()
        str_0 = condition_1.__repr__()
        future_0 = module_4.Future()
        int_0 = 3472
        semaphore_0 = module_0.Semaphore(int_0)
        condition_2 = module_0.Condition()
        condition_0.notify_all()
        semaphore_0.release()
        event_0 = module_0.Event()
        event_1 = module_0.Event()
        float_0 = -4000.83
        awaitable_0 = condition_1.wait(float_0)
        event_0.clear()
        str_1 = event_0.__repr__()
        bounded_semaphore_0 = module_0.BoundedSemaphore()
        semaphore_0.release()
        event_2 = module_0.Event()
        lock_0 = module_0.Lock()
        lock_0.release()
    except BaseException:
        pass

def test_case_17():
    try:
        i_o_loop_0 = module_3.IOLoop()
        condition_0 = module_0.Condition()
        semaphore_0 = module_0.Semaphore()
        event_0 = module_0.Event()
        semaphore_0.release()
        str_0 = semaphore_0.__repr__()
        condition_0.notify_all()
        awaitable_0 = event_0.wait()
        str_1 = condition_0.__repr__()
        lock_0 = module_0.Lock()
        bounded_semaphore_0 = module_0.BoundedSemaphore()
        bounded_semaphore_1 = module_0.BoundedSemaphore()
        lock_1 = module_0.Lock()
        bounded_semaphore_2 = module_0.BoundedSemaphore()
        bounded_semaphore_2.release()
    except BaseException:
        pass

def test_case_18():
    try:
        i_o_loop_0 = module_3.IOLoop()
        condition_0 = module_0.Condition()
        semaphore_0 = module_0.Semaphore()
        event_0 = module_0.Event()
        event_0.set()
        semaphore_0.release()
        str_0 = semaphore_0.__repr__()
        condition_0.notify_all()
        awaitable_0 = event_0.wait()
        str_1 = condition_0.__repr__()
        lock_0 = module_0.Lock()
        bounded_semaphore_0 = module_0.BoundedSemaphore()
        bounded_semaphore_1 = module_0.BoundedSemaphore()
        lock_1 = module_0.Lock()
        lock_1.release()
    except BaseException:
        pass

def test_case_19():
    try:
        i_o_loop_0 = module_3.IOLoop()
        condition_0 = module_0.Condition()
        condition_0.notify()
        int_0 = 365
        condition_1 = module_0.Condition()
        semaphore_0 = module_0.Semaphore()
        awaitable_0 = semaphore_0.acquire()
        semaphore_1 = module_0.Semaphore(int_0)
        semaphore_1.release()
        condition_1.notify_all()
        semaphore_1.release()
        bounded_semaphore_0 = module_0.BoundedSemaphore()
        dict_0 = {bounded_semaphore_0: condition_1, semaphore_1: condition_0, bounded_semaphore_0: i_o_loop_0}
        awaitable_1 = condition_0.wait(dict_0)
    except BaseException:
        pass

def test_case_20():
    try:
        i_o_loop_0 = module_3.IOLoop()
        condition_0 = module_0.Condition()
        condition_0.notify()
        int_0 = 365
        condition_1 = module_0.Condition()
        semaphore_0 = module_0.Semaphore()
        awaitable_0 = semaphore_0.acquire()
        semaphore_1 = module_0.Semaphore(int_0)
        semaphore_1.release()
        bounded_semaphore_0 = module_0.BoundedSemaphore()
        int_1 = 2118
        condition_1.notify(int_1)
        condition_1.notify_all()
        semaphore_1.release()
        dict_0 = {}
        awaitable_1 = condition_0.wait(dict_0)
        event_0 = module_0.Event()
        event_0.set()
        releasing_context_manager_0 = module_0._ReleasingContextManager(awaitable_0)
        str_0 = event_0.__repr__()
        bounded_semaphore_1 = module_0.BoundedSemaphore()
        event_1 = module_0.Event()
        semaphore_2 = module_0.Semaphore()
        semaphore_2.release()
        event_2 = module_0.Event()
        awaitable_2 = semaphore_0.acquire()
        lock_0 = module_0.Lock()
        lock_0.release()
    except BaseException:
        pass