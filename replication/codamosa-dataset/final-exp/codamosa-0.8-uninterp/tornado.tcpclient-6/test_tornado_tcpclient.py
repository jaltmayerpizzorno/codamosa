# Automatically generated by Pynguin.
import tornado.tcpclient as module_0
import tornado.ioloop as module_1
import concurrent.futures._base as module_2
import tornado.netutil as module_3
import datetime as module_4

def test_case_0():
    pass

def test_case_1():
    t_c_p_client_0 = module_0.TCPClient()

def test_case_2():
    tuple_0 = None
    i_o_loop_0 = module_1.IOLoop()
    i_o_loop_1 = i_o_loop_0.instance()
    i_o_loop_2 = i_o_loop_1.instance()
    tuple_1 = (tuple_0, i_o_loop_2)
    list_0 = [tuple_1, tuple_1]
    bytes_0 = b'\xf4\xad\xa6\xb7\xa3\xb1\x8136h\xd0\xfdj\xd0C?Wpx'
    t_c_p_client_0 = module_0.TCPClient()
    t_c_p_client_0.close()
    connector_0 = module_0._Connector(list_0, bytes_0)
    connector_0.on_connect_timeout()

def test_case_3():
    tuple_0 = None
    i_o_loop_0 = module_1.IOLoop()
    i_o_loop_1 = i_o_loop_0.instance()
    tuple_1 = (tuple_0, i_o_loop_1)
    list_0 = [tuple_1, tuple_1]
    bytes_0 = b'>\xe8\xea{c1M\xb8'
    connector_0 = module_0._Connector(list_0, bytes_0)

def test_case_4():
    tuple_0 = None
    i_o_loop_0 = module_1.IOLoop()
    i_o_loop_1 = i_o_loop_0.instance()
    tuple_1 = (tuple_0, i_o_loop_1)
    list_0 = [tuple_1, tuple_1]
    bytes_0 = b'\xf4\xad\xa6\xb7\xa3\xb1\x8136h\xd0\xfdj\xd0C?Wpx'
    connector_0 = module_0._Connector(list_0, bytes_0)
    connector_0.on_connect_timeout()

def test_case_5():
    tuple_0 = None
    i_o_loop_0 = module_1.IOLoop()
    i_o_loop_1 = i_o_loop_0.instance()
    tuple_1 = (tuple_0, i_o_loop_1)
    list_0 = [tuple_1, tuple_1]
    str_0 = 'u:'
    connector_0 = module_0._Connector(list_0, str_0)
    connector_0.on_timeout()

def test_case_6():
    tuple_0 = None
    i_o_loop_0 = module_1.IOLoop()
    tuple_1 = (tuple_0, i_o_loop_0)
    list_0 = [tuple_1, tuple_1, tuple_1]
    bytes_0 = b'\xf4\xad\xa6\xb7\xa3\xb1\x8136h\xd0\xfdj\xd0C?Wpx'
    connector_0 = module_0._Connector(list_0, bytes_0)
    connector_0.on_connect_timeout()
    connector_0.clear_timeout()
    connector_0.on_connect_timeout()

def test_case_7():
    tuple_0 = None
    i_o_loop_0 = module_1.IOLoop()
    i_o_loop_1 = i_o_loop_0.instance()
    float_0 = 2384.618
    str_0 = 'zX&sE~\re{A'
    future_0 = module_2.Future()
    tuple_1 = (str_0, future_0)
    resolver_0 = module_3.Resolver()
    str_1 = ':lPM.\raJ/I[[?UJldG)m'
    tuple_2 = (resolver_0, str_1)
    list_0 = [tuple_1, tuple_2]
    str_2 = "2ygk=^!9f3?0\n.Il%'"
    int_0 = 550
    awaitable_0 = resolver_0.resolve(str_2, int_0)
    connector_0 = module_0._Connector(list_0, awaitable_0)
    connector_0.set_connect_timeout(float_0)
    tuple_3 = (tuple_0, i_o_loop_1)
    list_1 = [tuple_3, tuple_3, tuple_3]
    dict_0 = {}
    timedelta_0 = module_4.timedelta(**dict_0)
    connector_1 = module_0._Connector(list_1, timedelta_0)
    connector_1.on_connect_timeout()
    connector_1.clear_timeout()
    connector_1.close_streams()

def test_case_8():
    tuple_0 = None
    i_o_loop_0 = module_1.IOLoop()
    i_o_loop_1 = i_o_loop_0.instance()
    tuple_1 = (tuple_0, i_o_loop_1)
    list_0 = [tuple_1, tuple_1, tuple_1]
    bytes_0 = b'\xf4\xad\xa6\xb7\xa3\xb1\x8136h\xd0\xfdj\xd0C?Wpx'
    connector_0 = module_0._Connector(list_0, bytes_0)
    connector_0.on_connect_timeout()
    float_0 = -4585.79
    connector_0.set_connect_timeout(float_0)
    connector_0.clear_timeout()
    connector_0.on_connect_timeout()