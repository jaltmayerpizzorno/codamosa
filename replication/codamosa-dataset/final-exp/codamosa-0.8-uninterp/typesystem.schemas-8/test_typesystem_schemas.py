# Automatically generated by Pynguin.
import typesystem.schemas as module_0
import typesystem.fields as module_1

def test_case_0():
    pass

def test_case_1():
    schema_definitions_0 = module_0.SchemaDefinitions()

def test_case_2():
    schema_0 = module_0.Schema()
    schema_definitions_0 = module_0.SchemaDefinitions()
    iterator_0 = schema_definitions_0.__iter__()
    bool_0 = schema_0.__eq__(schema_0)

def test_case_3():
    schema_definitions_0 = module_0.SchemaDefinitions()
    int_0 = schema_definitions_0.__len__()

def test_case_4():
    float_0 = None
    schema_definitions_0 = module_0.SchemaDefinitions()
    schema_definitions_0.__setitem__(float_0, float_0)
    schema_0 = module_0.Schema()
    int_0 = schema_0.__len__()

def test_case_5():
    schema_definitions_0 = module_0.SchemaDefinitions()
    field_0 = module_1.Field()
    module_0.set_definitions(field_0, schema_definitions_0)

def test_case_6():
    dict_0 = {}
    list_0 = [dict_0]
    schema_0 = module_0.Schema(*list_0)

def test_case_7():
    schema_0 = module_0.Schema()

def test_case_8():
    float_0 = 2481.474
    list_0 = [float_0]
    dict_0 = {}
    schema_0 = module_0.Schema(*list_0, **dict_0)

def test_case_9():
    float_0 = 2478.0
    schema_0 = module_0.Schema()
    bool_0 = schema_0.__eq__(float_0)
    schema_1 = module_0.Schema()

def test_case_10():
    schema_0 = module_0.Schema()
    bool_0 = schema_0.__eq__(schema_0)

def test_case_11():
    str_0 = "'|\r"
    reference_0 = module_0.Reference(str_0)

def test_case_12():
    schema_0 = module_0.Schema()
    str_0 = schema_0.__repr__()

def test_case_13():
    schema_0 = module_0.Schema()
    int_0 = schema_0.__len__()

def test_case_14():
    schema_0 = module_0.Schema()
    str_0 = schema_0.__repr__()
    reference_0 = module_0.Reference(str_0)
    any_0 = reference_0.serialize(schema_0)

def test_case_15():
    schema_0 = module_0.Schema()
    bool_0 = schema_0.__eq__(schema_0)
    str_0 = '{vI$G'
    dict_0 = {str_0: str_0, str_0: str_0}
    schema_definitions_0 = module_0.SchemaDefinitions(**dict_0)
    str_1 = schema_0.__repr__()
    int_0 = schema_0.__len__()
    dict_1 = {}
    list_0 = [dict_1]
    str_2 = 'Sa=28\r\r\x0ci*M:%vLf!'
    bool_1 = False
    field_0 = module_1.Field(description=str_2, allow_null=bool_1)
    schema_1 = module_0.Schema(*list_0)
    field_1 = module_1.Field()
    schema_definitions_1 = module_0.SchemaDefinitions(*list_0)
    module_0.set_definitions(field_1, schema_definitions_0)
    dict_2 = {}
    schema_2 = module_0.Schema(**dict_2)
    any_0 = field_0.get_default_value()
    reference_0 = module_0.Reference(str_2, **dict_2)
    reference_1 = module_0.Reference(str_0)
    field_2 = None
    any_1 = reference_0.serialize(field_2)

def test_case_16():
    schema_definitions_0 = module_0.SchemaDefinitions()
    str_0 = 'oo'
    reference_0 = module_0.Reference(str_0)
    module_0.set_definitions(reference_0, schema_definitions_0)

def test_case_17():
    schema_definitions_0 = module_0.SchemaDefinitions()
    str_0 = 'a'
    str_1 = 'User'
    reference_0 = module_0.Reference(str_1)
    reference_1 = module_0.Reference(str_1)
    reference_2 = {str_0: reference_0, str_1: reference_1}
    object_0 = module_1.Object(properties=reference_2)
    module_0.set_definitions(object_0, schema_definitions_0)

def test_case_18():
    schema_definitions_0 = module_0.SchemaDefinitions()
    str_0 = 'Pet'
    reference_0 = module_0.Reference(str_0, schema_definitions_0)
    reference_1 = module_0.Reference(str_0, schema_definitions_0)
    var_0 = reference_1.target_string

def test_case_19():
    schema_definitions_0 = module_0.SchemaDefinitions()
    str_0 = 'a'
    str_1 = 'User'
    reference_0 = module_0.Reference(str_1)
    reference_1 = module_0.Reference(str_1)
    reference_2 = {str_0: reference_1, str_1: reference_1}
    object_0 = module_1.Object(properties=reference_2)
    module_0.set_definitions(object_0, schema_definitions_0)