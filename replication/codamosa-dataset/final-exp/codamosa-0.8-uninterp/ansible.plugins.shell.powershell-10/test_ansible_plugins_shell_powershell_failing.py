# Automatically generated by Pynguin.
import ansible.plugins.shell.powershell as module_0

def test_case_0():
    try:
        shell_module_0 = module_0.ShellModule()
        var_0 = shell_module_0.join_path()
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = 417
        shell_module_0 = module_0.ShellModule()
        var_0 = shell_module_0.get_remote_filename(int_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'C:\\Windows\\Temp\\'
        shell_module_0 = module_0.ShellModule()
        var_0 = shell_module_0.path_has_trailing_slash(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'\xd2\xeb\xd1\xb2\x18\xe8\x9cN\xf2\n'
        float_0 = 3938.0
        shell_module_0 = module_0.ShellModule()
        var_0 = shell_module_0.chmod(bytes_0, float_0)
    except BaseException:
        pass

def test_case_4():
    try:
        shell_module_0 = module_0.ShellModule()
        shell_module_1 = module_0.ShellModule()
        var_0 = shell_module_1.expand_user(shell_module_0)
        str_0 = '*r'
        set_0 = {shell_module_1}
        str_1 = 'w3}c\x0bFo; [L\n'
        str_2 = 'Unable to parse %s as an inventory source'
        str_3 = 'KczAT\\'
        dict_0 = {str_1: str_0, str_2: shell_module_0, str_1: str_0, str_3: str_3}
        var_1 = shell_module_0.chown(set_0, dict_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'h(t-'
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
        list_0 = [dict_0, dict_0, str_0]
        list_1 = [dict_0, list_0]
        str_1 = 'bMB1A&D|j0]$}/5l?'
        str_2 = '\n        Return a single named information item from the os-release file data\n        source of the OS distribution.\n\n        For details, see :func:`distro.os_release_attr`.\n        '
        dict_1 = {str_1: str_1, str_2: str_0}
        shell_module_0 = module_0.ShellModule()
        var_0 = shell_module_0.set_user_facl(dict_0, list_1, dict_1)
    except BaseException:
        pass

def test_case_6():
    try:
        shell_module_0 = module_0.ShellModule()
        set_0 = {shell_module_0}
        float_0 = -4895.6058
        var_0 = shell_module_0.remove(set_0, float_0)
        var_1 = shell_module_0.checksum(float_0)
        shell_module_1 = module_0.ShellModule()
        var_2 = shell_module_0.get_remote_filename(shell_module_1)
    except BaseException:
        pass

def test_case_7():
    try:
        shell_module_0 = module_0.ShellModule()
        var_0 = shell_module_0.mkdtemp()
    except BaseException:
        pass

def test_case_8():
    try:
        bytes_0 = b'\x83\xd1\x84-\xbdw\xa0'
        list_0 = [bytes_0, bytes_0]
        shell_module_0 = module_0.ShellModule()
        var_0 = shell_module_0.join_path(*list_0)
        list_1 = [list_0]
        var_1 = shell_module_0.wrap_for_exec(list_1)
        dict_0 = None
        str_0 = ''
        var_2 = shell_module_0.build_module_command(dict_0, list_0, str_0)
        float_0 = -3951.08
        shell_module_1 = module_0.ShellModule()
        var_3 = shell_module_1.path_has_trailing_slash(float_0)
    except BaseException:
        pass

def test_case_9():
    try:
        shell_module_0 = module_0.ShellModule()
        str_0 = 'foo/'
        var_0 = shell_module_0.path_has_trailing_slash(str_0)
        list_0 = [shell_module_0, str_0, str_0, shell_module_0]
        var_1 = shell_module_0.wrap_for_exec(list_0)
        str_1 = 'foo\\'
        var_2 = shell_module_0.path_has_trailing_slash(str_1)
    except BaseException:
        pass

def test_case_10():
    try:
        bytes_0 = b'\x83\xd1\x84-\xbdw\xa0'
        list_0 = [bytes_0, bytes_0]
        shell_module_0 = module_0.ShellModule()
        var_0 = shell_module_0.join_path(*list_0)
        list_1 = [list_0]
        var_1 = shell_module_0.wrap_for_exec(list_1)
        float_0 = -3949.660604587937
        var_2 = shell_module_0.path_has_trailing_slash(float_0)
    except BaseException:
        pass

def test_case_11():
    try:
        shell_module_0 = module_0.ShellModule()
        var_0 = shell_module_0.mkdtemp(shell_module_0)
    except BaseException:
        pass

def test_case_12():
    try:
        shell_module_0 = module_0.ShellModule()
        str_0 = ''
        var_0 = None
        str_1 = 'Test-Module -Arg'
        var_1 = shell_module_0.build_module_command(str_0, var_0, str_1)
    except BaseException:
        pass

def test_case_13():
    try:
        shell_module_0 = module_0.ShellModule()
        str_0 = '~'
        var_0 = shell_module_0.expand_user(str_0)
        str_1 = 'foo~'
        var_1 = shell_module_0.expand_user(str_1)
        str_2 = '~foo'
        var_2 = shell_module_0.expand_user(str_2)
        var_3 = shell_module_0.mkdtemp()
    except BaseException:
        pass

def test_case_14():
    try:
        shell_module_0 = module_0.ShellModule()
        float_0 = -437.262
        bytes_0 = b''
        var_0 = shell_module_0.expand_user(shell_module_0)
        float_1 = 1481.42
        shell_module_1 = module_0.ShellModule()
        var_1 = shell_module_1.mkdtemp(shell_module_0, float_0, bytes_0, float_1)
        shell_module_2 = module_0.ShellModule()
        var_2 = shell_module_2.join_path()
    except BaseException:
        pass