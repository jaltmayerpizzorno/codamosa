# Automatically generated by Pynguin.
import types as module_0
import flutils.namedtupleutils as module_1
import collections as module_2

def test_case_0():
    pass

def test_case_1():
    str_0 = 'F#9G4x\n/zW`ZLBtg'
    dict_0 = {str_0: str_0}
    simple_namespace_0 = module_0.SimpleNamespace(**dict_0)
    var_0 = module_1.to_namedtuple(simple_namespace_0)

def test_case_2():
    int_0 = -15
    str_0 = 'l'
    int_1 = {str_0: int_0, str_0: int_0}
    list_0 = [int_1]
    list_1 = [int_1, list_0]
    var_0 = module_1.to_namedtuple(list_1)
    list_2 = [var_0]
    var_1 = module_1.to_namedtuple(list_2)

def test_case_3():
    tuple_0 = ()
    var_0 = module_1.to_namedtuple(tuple_0)

def test_case_4():
    tuple_0 = ()
    list_0 = [tuple_0, tuple_0]
    var_0 = module_1.to_namedtuple(list_0)

def test_case_5():
    str_0 = 'has_callables'
    list_0 = [str_0, str_0]
    var_0 = module_1.to_namedtuple(list_0)

def test_case_6():
    int_0 = 4
    ordered_dict_0 = module_2.OrderedDict()
    str_0 = 'a'
    int_1 = {str_0: int_0, str_0: int_0}
    list_0 = [int_1, ordered_dict_0]
    list_1 = [int_1, list_0]
    var_0 = module_1.to_namedtuple(list_1)
    list_2 = [var_0]
    var_1 = module_1.to_namedtuple(list_2)

def test_case_7():
    ordered_dict_0 = None
    dict_0 = {ordered_dict_0: ordered_dict_0, ordered_dict_0: ordered_dict_0, ordered_dict_0: ordered_dict_0}
    str_0 = "zC/B\n#3;HffQ'qTMyAE"
    dict_1 = {str_0: ordered_dict_0}
    list_0 = [dict_0, ordered_dict_0, dict_0, dict_1]
    var_0 = module_1.to_namedtuple(list_0)
    str_1 = 'cached_property'
    str_2 = '\x0cYmzNkdTY'
    dict_2 = {str_1: str_1, str_2: str_1}
    list_1 = [dict_2]
    var_1 = module_1.to_namedtuple(list_1)