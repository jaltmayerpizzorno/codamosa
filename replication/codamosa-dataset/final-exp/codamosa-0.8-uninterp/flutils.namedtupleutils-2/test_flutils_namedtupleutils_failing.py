# Automatically generated by Pynguin.
import flutils.namedtupleutils as module_0
import collections.abc as module_1

def test_case_0():
    try:
        mapping_0 = None
        var_0 = module_0.to_namedtuple(mapping_0)
    except BaseException:
        pass

def test_case_1():
    try:
        dict_0 = None
        list_0 = [dict_0]
        var_0 = module_0.to_namedtuple(list_0)
        var_1 = module_0.to_namedtuple(list_0)
        var_2 = module_0.to_namedtuple(list_0)
        mapping_0 = module_1.Mapping(**dict_0)
    except BaseException:
        pass

def test_case_2():
    try:
        dict_0 = None
        str_0 = "7R\tw8O,O'JS:Xx6"
        list_0 = [str_0, str_0]
        list_1 = [list_0, dict_0]
        var_0 = module_0.to_namedtuple(list_1)
        var_1 = module_0.to_namedtuple(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'\xe4[W.\xcc\xa1\xfa\xff:h\x0fs"'
        str_0 = 'I)WV3!'
        dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, str_0: bytes_0}
        list_0 = [dict_0, dict_0, bytes_0]
        var_0 = module_0.to_namedtuple(list_0)
    except BaseException:
        pass