# Automatically generated by Pynguin.
import ansible.galaxy.api as module_0
import urllib.error as module_1

def test_case_0():
    try:
        str_0 = '\nname: url\nauthor: Brian Coca (@bcoca)\nversion_added: "1.9"\nshort_description: return contents from URL\ndescription:\n    - Returns the content of the URL requested to be used as data in play.\noptions:\n  _terms:\n    description: urls to query\n  validate_certs:\n    description: Flag to control SSL certificate validation\n    type: boolean\n    default: True\n  split_lines:\n    description: Flag to control if content is returned as a list of lines or as a single text blob\n    type: boolean\n    default: True\n  use_proxy:\n    description: Flag to control if the lookup will observe HTTP proxy environment variables when present.\n    type: boolean\n    default: True\n  username:\n    description: Username to use for HTTP authentication.\n    type: string\n    version_added: "2.8"\n  password:\n    description: Password to use for HTTP authentication.\n    type: string\n    version_added: "2.8"\n  headers:\n    description: HTTP request headers\n    type: dictionary\n    default: {}\n    version_added: "2.9"\n  force:\n    description: Whether or not to set "cache-control" header with value "no-cache"\n    type: boolean\n    version_added: "2.10"\n    default: False\n    vars:\n        - name: ansible_lookup_url_force\n    env:\n        - name: ANSIBLE_LOOKUP_URL_FORCE\n    ini:\n        - section: url_lookup\n          key: force\n  timeout:\n    description: How long to wait for the server to send data before giving up\n    type: float\n    version_added: "2.10"\n    default: 10\n    vars:\n        - name: ansible_lookup_url_timeout\n    env:\n        - name: ANSIBLE_LOOKUP_URL_TIMEOUT\n    ini:\n        - section: url_lookup\n          key: timeout\n  http_agent:\n    description: User-Agent to use in the request. The default was changed in 2.11 to C(ansible-httpget).\n    type: string\n    version_added: "2.10"\n    default: ansible-httpget\n    vars:\n        - name: ansible_lookup_url_agent\n    env:\n        - name: ANSIBLE_LOOKUP_URL_AGENT\n    ini:\n        - section: url_lookup\n          key: agent\n  force_basic_auth:\n    description: Force basic authentication\n    type: boolean\n    version_added: "2.10"\n    default: False\n    vars:\n        - name: ansible_lookup_url_agent\n    env:\n        - name: ANSIBLE_LOOKUP_URL_AGENT\n    ini:\n        - section: url_lookup\n          key: agent\n  follow_redirects:\n    description: String of urllib2, all/yes, safe, none to determine how redirects are followed, see RedirectHandlerFactory for more information\n    type: string\n    version_added: "2.10"\n    default: \'urllib2\'\n    vars:\n        - name: ansible_lookup_url_follow_redirects\n    env:\n        - name: ANSIBLE_LOOKUP_URL_FOLLOW_REDIRECTS\n    ini:\n        - section: url_lookup\n          key: follow_redirects\n  use_gssapi:\n    description:\n    - Use GSSAPI handler of requests\n    - As of Ansible 2.11, GSSAPI credentials can be specified with I(username) and I(password).\n    type: boolean\n    version_added: "2.10"\n    default: False\n    vars:\n        - name: ansible_lookup_url_use_gssapi\n    env:\n        - name: ANSIBLE_LOOKUP_URL_USE_GSSAPI\n    ini:\n        - section: url_lookup\n          key: use_gssapi\n  unix_socket:\n    description: String of file system path to unix socket file to use when establishing connection to the provided url\n    type: string\n    version_added: "2.10"\n    vars:\n        - name: ansible_lookup_url_unix_socket\n    env:\n        - name: ANSIBLE_LOOKUP_URL_UNIX_SOCKET\n    ini:\n        - section: url_lookup\n          key: unix_socket\n  ca_path:\n    description: String of file system path to CA cert bundle to use\n    type: string\n    version_added: "2.10"\n    vars:\n        - name: ansible_lookup_url_ca_path\n    env:\n        - name: ANSIBLE_LOOKUP_URL_CA_PATH\n    ini:\n        - section: url_lookup\n          key: ca_path\n  unredirected_headers:\n    description: A list of headers to not attach on a redirected request\n    type: list\n    version_added: "2.10"\n    vars:\n        - name: ansible_lookup_url_unredir_headers\n    env:\n        - name: ANSIBLE_LOOKUP_URL_UNREDIR_HEADERS\n    ini:\n        - section: url_lookup\n          key: unredirected_headers\n'
        str_1 = ''
        dict_0 = {str_0: str_0, str_1: str_1}
        int_0 = -3443
        int_1 = -1653
        int_2 = -618
        set_0 = {str_1, str_0}
        list_0 = [dict_0, str_0, str_0, set_0]
        collection_metadata_0 = module_0.CollectionMetadata(*list_0)
        str_2 = None
        collection_version_metadata_0 = module_0.CollectionVersionMetadata(int_0, int_1, int_2, collection_metadata_0, dict_0, str_2)
        galaxy_error_0 = module_0.GalaxyError(str_0, collection_metadata_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bool_0 = None
        int_0 = -1051
        str_0 = '$;JF`F</'
        list_0 = [int_0, str_0]
        galaxy_a_p_i_0 = module_0.GalaxyAPI(int_0, str_0, list_0)
        var_0 = galaxy_a_p_i_0.__repr__()
        galaxy_error_0 = module_0.GalaxyError(str_0, bool_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b'\xfck\xdf\xa7\xdc\x94--9k\xf8\xf7i\x07\x08\xbc\xbd\xaf'
        list_0 = []
        dict_0 = None
        var_0 = module_0.get_cache_id(dict_0)
        float_0 = 1934.5817195128282
        var_1 = module_0.g_connect(float_0)
        str_0 = ':(63r2XB&'
        list_1 = [list_0, bytes_0]
        galaxy_a_p_i_0 = module_0.GalaxyAPI(list_0, str_0, list_1)
        var_2 = galaxy_a_p_i_0.__str__()
        var_3 = galaxy_a_p_i_0.__lt__(galaxy_a_p_i_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'\xfck\xdf\xa7\xdc\x94--9k\xf8\xf7i\x07\x08\xbc\xbd\xaf'
        set_0 = {bytes_0, bytes_0, bytes_0}
        var_0 = module_0.is_rate_limit_exception(set_0)
        dict_0 = None
        var_1 = module_0.get_cache_id(dict_0)
        float_0 = 1934.5726285888181
        var_2 = module_0.g_connect(float_0)
        str_0 = ':(63r2XB&'
        dict_1 = {str_0: var_2}
        var_3 = module_0.is_rate_limit_exception(dict_1)
        str_1 = 'LU\t4Mn"/b<xkhi7'
        var_4 = module_0.g_connect(str_1)
        str_2 = ':y&\x0c!$w[-fyxtO'
        int_0 = -2194
        float_1 = 2286.0
        galaxy_a_p_i_0 = module_0.GalaxyAPI(bytes_0, str_2, bytes_0, dict_0, bytes_0, int_0, dict_1, float_1)
        var_5 = galaxy_a_p_i_0.__unicode__()
        int_1 = 69
        int_2 = None
        galaxy_error_0 = module_0.GalaxyError(int_1, int_2)
    except BaseException:
        pass

def test_case_4():
    try:
        bytes_0 = b'\x93\xfcr'
        galaxy_error_0 = None
        list_0 = []
        str_0 = 'lb5E0E'
        dict_0 = {str_0: str_0}
        tuple_0 = None
        set_0 = set()
        list_1 = [tuple_0, str_0, galaxy_error_0, set_0]
        str_1 = 'h\t'
        str_2 = '3/\x0b\\Hog'
        float_0 = 3918.58711
        bytes_1 = b'A\x1f\x0fI\xb7\x00JW1\xd2\x83\xf9\\'
        galaxy_a_p_i_0 = module_0.GalaxyAPI(galaxy_error_0, set_0, dict_0, str_1, str_2, str_1, float_0, list_1, bytes_1)
        collection_version_metadata_0 = module_0.CollectionVersionMetadata(list_0, set_0, list_1, list_1, galaxy_a_p_i_0, galaxy_a_p_i_0)
        bool_0 = False
        int_0 = 2379
        h_t_t_p_error_0 = module_1.HTTPError(collection_version_metadata_0, bool_0, list_1, bytes_0, int_0)
        collection_version_metadata_1 = module_0.CollectionVersionMetadata(list_0, dict_0, tuple_0, h_t_t_p_error_0, dict_0, set_0)
        dict_1 = {galaxy_error_0: bytes_0}
        str_3 = '~"EOoI'
        str_4 = 'F"72?k'
        str_5 = 'f>GZ&\t.ZcrU\rerEtjlN('
        list_2 = [galaxy_error_0, str_3]
        str_6 = '\x0b3=QD?w%ki'
        dict_2 = {str_3: dict_1, str_4: str_4, str_5: list_2, str_6: list_2}
        h_t_t_p_error_1 = module_1.HTTPError(bytes_0, bytes_0, galaxy_error_0, dict_1, dict_2)
        str_7 = 'x'
        collection_metadata_0 = module_0.CollectionMetadata(*list_1)
        set_1 = set()
        h_t_t_p_error_2 = module_1.HTTPError(h_t_t_p_error_1, str_7, collection_metadata_0, set_1, bytes_0)
    except BaseException:
        pass