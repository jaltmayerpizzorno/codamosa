# Automatically generated by Pynguin.
import ansible.module_utils.compat.version as module_0

def test_case_0():
    try:
        str_0 = '1.0.0'
        strict_version_0 = module_0.StrictVersion(str_0)
        var_0 = strict_version_0 > strict_version_0
        var_1 = str_0 > strict_version_0
        version_0 = module_0.Version()
        var_2 = version_0.__repr__()
    except BaseException:
        pass

def test_case_1():
    try:
        float_0 = 654.027
        version_0 = module_0.Version()
        var_0 = version_0.__lt__(float_0)
    except BaseException:
        pass

def test_case_2():
    try:
        version_0 = module_0.Version()
        loose_version_0 = module_0.LooseVersion()
        var_0 = version_0.__le__(version_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '1.0'
        strict_version_0 = module_0.StrictVersion(str_0)
        str_1 = '1.0.0'
        var_0 = strict_version_0.__str__()
        var_1 = str_1 > strict_version_0
        loose_version_0 = module_0.LooseVersion()
        var_2 = loose_version_0.parse(str_1)
        var_3 = loose_version_0 > str_0
        var_4 = strict_version_0.__str__()
        version_0 = module_0.Version()
        tuple_0 = None
        var_5 = version_0.__ge__(tuple_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = '-V@Y\x0ci33'
        strict_version_0 = module_0.StrictVersion()
        var_0 = strict_version_0.parse(str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = '2.7.2'
        strict_version_0 = module_0.StrictVersion(str_0)
        var_0 = strict_version_0.__str__()
        list_0 = [var_0, strict_version_0, str_0, strict_version_0]
        version_0 = module_0.Version()
        var_1 = version_0.__eq__(list_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = '1.0'
        strict_version_0 = module_0.StrictVersion(str_0)
        var_0 = str_0 > strict_version_0
        var_1 = strict_version_0 > var_0
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = '1.0'
        strict_version_0 = module_0.StrictVersion(str_0)
        var_0 = strict_version_0 > strict_version_0
        var_1 = var_0 > strict_version_0
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = '1.0'
        strict_version_0 = module_0.StrictVersion(str_0)
        str_1 = '1.0.0'
        var_0 = strict_version_0.__str__()
        var_1 = str_1 > strict_version_0
        str_2 = 'Y='
        loose_version_0 = module_0.LooseVersion()
        var_2 = loose_version_0.parse(str_2)
        var_3 = loose_version_0 > var_1
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'Y='
        loose_version_0 = module_0.LooseVersion()
        var_0 = loose_version_0.parse(str_0)
        var_1 = loose_version_0 > str_0
        version_0 = module_0.Version()
        loose_version_1 = module_0.LooseVersion()
        strict_version_0 = module_0.StrictVersion()
        set_0 = {str_0}
        var_2 = loose_version_1.parse(set_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = '1.0'
        strict_version_0 = module_0.StrictVersion(str_0)
        str_1 = '1.0.0'
        var_0 = strict_version_0.__str__()
        var_1 = str_1 > strict_version_0
        loose_version_0 = module_0.LooseVersion()
        var_2 = loose_version_0.parse(str_1)
        var_3 = loose_version_0 > loose_version_0
        version_0 = module_0.Version()
        loose_version_1 = module_0.LooseVersion()
        int_0 = 2941
        var_4 = loose_version_1.parse(int_0)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = '1.02'
        strict_version_0 = module_0.StrictVersion(str_0)
        str_1 = '10.0'
        var_0 = strict_version_0.__str__()
        var_1 = str_1 > strict_version_0
        loose_version_0 = module_0.LooseVersion()
        var_2 = loose_version_0.parse(str_1)
        var_3 = loose_version_0 > str_0
        version_0 = module_0.Version()
        var_4 = loose_version_0.parse(version_0)
    except BaseException:
        pass