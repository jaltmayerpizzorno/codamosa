# Automatically generated by Pynguin.
import ast as module_0
import apimd.parser as module_1

def test_case_0():
    pass

def test_case_1():
    str_0 = 'MIb#?3Gm]-_aEo/'
    dict_0 = {}
    list_0 = [str_0]
    constant_0 = module_0.Constant(*list_0)
    str_1 = None
    dict_1 = {str_1: str_1}
    resolver_0 = module_1.Resolver(str_0, dict_1)
    a_s_t_0 = resolver_0.visit_Constant(constant_0)
    parser_0 = module_1.Parser(dict_0)
    str_2 = module_1.esc_underscore(str_0)
    str_3 = 'R'
    parser_0.parse(str_0, str_3)
    str_4 = parser_0.compile()
    list_1 = []
    stmt_0 = None
    list_2 = [stmt_0, stmt_0, stmt_0, stmt_0]
    parser_0.class_api(str_2, str_3, list_1, list_2)

def test_case_2():
    str_0 = 'uMH#\\-h'
    bool_0 = True
    dict_0 = {str_0: str_0}
    parser_0 = module_1.Parser(bool_0, bool_0, dict_0, dict_0, dict_0, dict_0)
    parser_0.parse(str_0, str_0)
    str_1 = module_1.parent(str_0)

def test_case_3():
    str_0 = '=ND8/@\nR_fO,B%~=O\\'
    bool_0 = module_1.is_public_family(str_0)

def test_case_4():
    str_0 = 'uMH#\\-h'
    bool_0 = True
    dict_0 = {str_0: str_0}
    parser_0 = module_1.Parser(bool_0, bool_0, dict_0, dict_0, dict_0, dict_0)
    parser_0.parse(str_0, str_0)

def test_case_5():
    str_0 = "lX'-#06Irk-g5"
    str_1 = module_1.code(str_0)

def test_case_6():
    str_0 = '|XEV/op?&.'
    str_1 = module_1.code(str_0)

def test_case_7():
    bool_0 = False
    parser_0 = module_1.Parser(bool_0)
    str_0 = '3A?/_li[m'
    str_1 = module_1.doctest(str_0)
    str_2 = module_1.esc_underscore(str_1)

def test_case_8():
    str_0 = '+-0IK@W'
    str_1 = module_1.doctest(str_0)

def test_case_9():
    expr_0 = module_0.expr()
    str_0 = module_1.const_type(expr_0)

def test_case_10():
    float_0 = -131.734
    list_0 = [float_0, float_0, float_0]
    attribute_0 = module_0.Attribute(*list_0)
    str_0 = 'qb\txC~/]}S'
    dict_0 = {str_0: str_0, str_0: str_0}
    str_1 = 'LyN\\KP!Q'
    resolver_0 = module_1.Resolver(str_0, dict_0, str_1)
    a_s_t_0 = resolver_0.visit_Attribute(attribute_0)

def test_case_11():
    bool_0 = False
    str_0 = None
    dict_0 = {str_0: str_0}
    parser_0 = module_1.Parser(bool_0, dict_0)
    str_1 = parser_0.compile()

def test_case_12():
    str_0 = '_Ib{?GGm]-faMEo/'
    list_0 = [str_0]
    ann_assign_0 = module_0.AnnAssign(*list_0)
    dict_0 = {str_0: str_0}
    parser_0 = module_1.Parser(dict_0)
    str_1 = None
    parser_0.globals(str_1, ann_assign_0)
    expr_0 = module_0.expr()

def test_case_13():
    bool_0 = True
    parser_0 = module_1.Parser(bool_0)
    str_0 = 'uLtDc'
    list_0 = []
    stmt_0 = None
    list_1 = [stmt_0]
    parser_0.class_api(str_0, str_0, list_0, list_1)

def test_case_14():
    str_0 = 'MIb#?3Gm]-_aEo/'
    dict_0 = {str_0: str_0}
    parser_0 = module_1.Parser(dict_0)
    str_1 = 'R'
    parser_0.parse(str_0, str_1)
    str_2 = parser_0.compile()
    assign_0 = module_0.Assign()

def test_case_15():
    dict_0 = {}
    str_0 = 'D'
    dict_1 = {str_0: str_0}
    parser_0 = module_1.Parser(dict_0, dict_1, dict_1, dict_1)
    str_1 = parser_0.compile()

def test_case_16():
    str_0 = 'O'
    bool_0 = module_1.is_magic(str_0)

def test_case_17():
    bool_0 = False
    parser_0 = module_1.Parser(bool_0)
    str_0 = '3A?/_li[m'
    str_1 = module_1.doctest(str_0)
    import_from_0 = module_0.ImportFrom()
    str_2 = '\nd<UEf4,l=<D!e!'
    parser_0.imports(str_2, import_from_0)

def test_case_18():
    str_0 = 'MIb#?3Gm]-_aEo/'
    dict_0 = {}
    parser_0 = module_1.Parser(dict_0)
    str_1 = module_1.esc_underscore(str_0)
    str_2 = 'R'
    parser_0.parse(str_0, str_2)
    str_3 = parser_0.compile()
    list_0 = []
    stmt_0 = None
    list_1 = [stmt_0, stmt_0, stmt_0, stmt_0]
    parser_0.class_api(str_1, str_2, list_0, list_1)

def test_case_19():
    str_0 = ''
    dict_0 = {str_0: str_0}
    parser_0 = module_1.Parser(dict_0)
    str_1 = module_1.esc_underscore(str_0)
    str_2 = 'e9S'
    parser_0.parse(str_0, str_2)
    expr_0 = module_0.expr()
    assign_0 = module_0.Assign()
    module_x_var_0 = None
    parser_0.load_docstring(str_0, module_x_var_0)
    str_3 = module_1.esc_underscore(str_1)

def test_case_20():
    str_0 = ''
    list_0 = [str_0]
    ann_assign_0 = module_0.AnnAssign(*list_0)
    dict_0 = {str_0: str_0}
    parser_0 = module_1.Parser(dict_0)
    parser_0.globals(str_0, ann_assign_0)
    dict_1 = {str_0: str_0, str_0: str_0, str_0: str_0}
    str_1 = module_1.esc_underscore(str_0)
    str_2 = 'e9S'
    parser_0.parse(str_0, str_2)
    expr_0 = module_0.expr(**dict_1)
    expr_1 = module_0.expr()
    str_3 = parser_0.compile()
    assign_0 = module_0.Assign()
    import_from_0 = module_0.ImportFrom()
    module_x_var_0 = None
    parser_0.load_docstring(str_2, module_x_var_0)
    str_4 = '_\n[uY'
    parser_0.imports(str_4, import_from_0)

def test_case_21():
    str_0 = "Create multi-column table with the titles.\n\n    Usage:\n    >>> table('a', 'b', [['c', 'd'], ['e', 'f']])\n    | a | b |\n    |:---:|:---:|\n    | c | d |\n    | e | f |\n    "
    list_0 = [str_0, str_0, str_0]
    subscript_0 = module_0.Subscript(*list_0)
    str_1 = 'g!H?/*'
    str_2 = '>k.9V~LEtq'
    str_3 = 'n[3E^|:I0/?v|Y=Cb1B5'
    str_4 = 'vH'
    dict_0 = {str_2: str_1, str_3: str_4}
    resolver_0 = module_1.Resolver(str_0, dict_0)
    a_s_t_0 = resolver_0.visit_Subscript(subscript_0)
    str_5 = 'typing.ItemsView'
    bool_0 = module_1.is_public_family(str_5)
    dict_1 = {str_1: str_5}
    str_6 = module_1.parent(str_0)
    resolver_1 = module_1.Resolver(str_1, dict_1)
    a_s_t_1 = resolver_1.visit_Subscript(subscript_0)

def test_case_22():
    function_def_0 = module_0.FunctionDef()
    str_0 = 'z.RwZf-IQ'
    int_0 = 935
    str_1 = module_1.parent(str_0, level=int_0)
    str_2 = '[w.cl@4'
    list_0 = [str_0]
    constant_0 = module_0.Constant(*list_0)
    str_3 = ''
    str_4 = None
    str_5 = 'MI'
    str_6 = 'Ni\\c'
    dict_0 = {str_3: str_0, str_1: str_4, str_5: str_6}
    resolver_0 = module_1.Resolver(str_2, dict_0)
    a_s_t_0 = resolver_0.visit_Constant(constant_0)
    constant_1 = module_0.Constant()
    str_7 = "\r{/2j1S'3&3__t5BRr"
    str_8 = module_1.code(str_7)
    str_9 = 'y!ae:OTN;MLSVM'
    bool_0 = module_1.is_public_family(str_9)
    bool_1 = module_1.is_public_family(str_8)

def test_case_23():
    str_0 = 'Ryan\n%n]bE\x0ceD=m'
    dict_0 = {}
    list_0 = [str_0]
    constant_0 = module_0.Constant(*list_0)
    str_1 = None
    dict_1 = {str_1: str_1}
    resolver_0 = module_1.Resolver(str_0, dict_1)
    a_s_t_0 = resolver_0.visit_Constant(constant_0)
    parser_0 = module_1.Parser(dict_0)
    str_2 = module_1.esc_underscore(str_0)
    str_3 = 'R'
    parser_0.parse(str_0, str_3)
    str_4 = parser_0.compile()
    list_1 = []
    stmt_0 = None
    list_2 = [stmt_0, stmt_0, stmt_0, stmt_0]
    parser_0.class_api(str_2, str_3, list_1, list_2)

def test_case_24():
    str_0 = ''
    list_0 = [str_0]
    ann_assign_0 = module_0.AnnAssign(*list_0)
    dict_0 = {str_0: str_0}
    parser_0 = module_1.Parser(dict_0)
    parser_0.globals(str_0, ann_assign_0)
    dict_1 = {str_0: str_0, str_0: str_0, str_0: str_0}
    str_1 = module_1.esc_underscore(str_0)
    parser_0.parse(str_0, str_0)
    expr_0 = module_0.expr(**dict_1)
    expr_1 = module_0.expr()
    str_2 = parser_0.compile()
    assign_0 = module_0.Assign()
    import_from_0 = module_0.ImportFrom(*list_0)
    module_x_var_0 = None
    parser_0.load_docstring(str_0, module_x_var_0)
    str_3 = '_+%_ev0.'
    bool_0 = module_1.is_public_family(str_3)
    var_0 = parser_0.__post_init__()

def test_case_25():
    attribute_0 = None
    list_0 = [attribute_0]
    str_0 = "WV'l:>R^ e65E["
    str_1 = 'AF'
    dict_0 = {str_0: list_0, str_1: str_0}
    constant_0 = module_0.Constant(*list_0, **dict_0)
    str_2 = 'd<<^b}GAVznG'
    str_3 = 'A'
    str_4 = 'DJx"$'
    str_5 = 'a!'
    str_6 = '\t'
    str_7 = "23czQsf'*a"
    str_8 = 's_EW\\.1%sT)O*l>5'
    dict_1 = {str_3: str_4, str_5: str_6, str_7: str_8}
    resolver_0 = module_1.Resolver(str_2, dict_1)
    a_s_t_0 = resolver_0.visit_Constant(constant_0)

def test_case_26():
    str_0 = ''
    list_0 = [str_0]
    ann_assign_0 = module_0.AnnAssign(*list_0)
    dict_0 = {str_0: str_0}
    parser_0 = module_1.Parser(dict_0)
    str_1 = module_1.esc_underscore(str_0)
    expr_0 = module_0.expr()
    assign_0 = module_0.Assign()
    import_0 = module_0.Import(*list_0)
    parser_0.imports(str_0, import_0)

def test_case_27():
    str_0 = '.'
    bool_0 = False
    list_0 = [bool_0]
    str_1 = None
    import_from_0 = module_0.ImportFrom()
    bool_1 = False
    int_0 = 735
    str_2 = 'Im\\rSH\n%'
    int_1 = 2
    int_2 = None
    dict_0 = {str_2: int_0, str_2: int_1, str_0: int_0, str_2: int_2}
    str_3 = '\x0b#(P+z)qV@`=D/iK'
    dict_1 = {str_0: str_0, str_2: str_3}
    parser_0 = module_1.Parser(bool_1, int_0, dict_0, dict_1)
    parser_0.imports(str_1, import_from_0)
    dict_2 = {}
    name_0 = module_0.Name(*list_0, **dict_2)
    resolver_0 = module_1.Resolver(str_0, dict_1)
    a_s_t_0 = resolver_0.visit_Name(name_0)

def test_case_28():
    str_0 = '>>> foo\n\n>>> bar'
    str_1 = module_1.doctest(str_0)

def test_case_29():
    str_0 = '_Ib{?GGm]-faMEo/'
    list_0 = [str_0]
    ann_assign_0 = module_0.AnnAssign(*list_0)
    dict_0 = {str_0: str_0}
    parser_0 = module_1.Parser(dict_0)
    str_1 = None
    parser_0.globals(str_1, ann_assign_0)
    str_2 = 'WmhV\t'
    expr_0 = module_0.expr()
    attribute_0 = module_0.Attribute(*list_0)
    str_3 = '5~g+|{=V'
    list_1 = []
    dict_1 = {}
    constant_0 = module_0.Constant()
    list_2 = [ann_assign_0, dict_1, constant_0]
    parser_0.class_api(str_2, str_3, list_1, list_2)