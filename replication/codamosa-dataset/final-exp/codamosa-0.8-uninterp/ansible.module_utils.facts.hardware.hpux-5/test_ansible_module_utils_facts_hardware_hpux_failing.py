# Automatically generated by Pynguin.
import ansible.module_utils.facts.hardware.hpux as module_0

def test_case_0():
    try:
        bool_0 = True
        h_p_u_x_hardware_0 = module_0.HPUXHardware(bool_0)
        var_0 = h_p_u_x_hardware_0.populate()
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = "HWb~Uz?'.@s5}JJ"
        int_0 = None
        tuple_0 = None
        dict_0 = {str_0: tuple_0}
        h_p_u_x_hardware_0 = module_0.HPUXHardware(dict_0)
        var_0 = h_p_u_x_hardware_0.get_cpu_facts()
        tuple_1 = (str_0, str_0, int_0)
        str_1 = '9xgaUE(23]_l`oPG4w'
        h_p_u_x_hardware_1 = module_0.HPUXHardware(tuple_1, str_1)
        list_0 = [h_p_u_x_hardware_1]
        h_p_u_x_hardware_2 = module_0.HPUXHardware(h_p_u_x_hardware_1, list_0)
        var_1 = h_p_u_x_hardware_2.get_hw_facts()
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'The task includes an option with an undefined variable. The error was: %s'
        str_1 = '~\x0be4'
        h_p_u_x_hardware_0 = module_0.HPUXHardware(str_1)
        var_0 = h_p_u_x_hardware_0.get_cpu_facts(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'\xf39\xf7\xc1&\xad\xde\xb5\x10(\xff>7\xd2'
        h_p_u_x_hardware_0 = module_0.HPUXHardware(bytes_0)
        h_p_u_x_hardware_1 = module_0.HPUXHardware(h_p_u_x_hardware_0)
        var_0 = h_p_u_x_hardware_0.get_memory_facts(h_p_u_x_hardware_0)
    except BaseException:
        pass

def test_case_4():
    try:
        bytes_0 = b'\x81\x07\xabw\x89\x93\xee\xb4\xf7Of'
        str_0 = '#C<k\x0b`~lR~'
        h_p_u_x_hardware_0 = module_0.HPUXHardware(str_0)
        bool_0 = False
        str_1 = 'uBH()m4F_H6}0,8e?w'
        h_p_u_x_hardware_collector_0 = module_0.HPUXHardwareCollector(bool_0, str_1)
        var_0 = h_p_u_x_hardware_0.get_cpu_facts()
        var_1 = h_p_u_x_hardware_0.get_cpu_facts()
        float_0 = -3493.0
        dict_0 = {}
        h_p_u_x_hardware_1 = module_0.HPUXHardware(float_0, dict_0)
        var_2 = h_p_u_x_hardware_1.get_hw_facts(bytes_0)
    except BaseException:
        pass