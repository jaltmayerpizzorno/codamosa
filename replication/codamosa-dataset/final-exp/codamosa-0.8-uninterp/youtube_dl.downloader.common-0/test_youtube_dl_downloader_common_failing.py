# Automatically generated by Pynguin.
import youtube_dl.downloader.common as module_0

def test_case_0():
    try:
        float_0 = 3595.5
        bool_0 = False
        list_0 = [bool_0, bool_0, float_0]
        int_0 = 317
        float_1 = 918.01
        file_downloader_0 = module_0.FileDownloader(int_0, float_1)
        var_0 = file_downloader_0.calc_speed(float_0, bool_0, list_0)
        bytes_0 = b'O\xcdBPo\x14y\x16\x1a\x87\x89n|\xfa\xdf7\x18'
        var_1 = file_downloader_0.calc_percent(bytes_0, bytes_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = b'\xa0w#\x86\x82\xb4b'
        int_0 = 0
        str_0 = '|'
        float_0 = 97.86
        file_downloader_0 = module_0.FileDownloader(str_0, float_0)
        file_downloader_1 = module_0.FileDownloader(int_0, file_downloader_0)
        var_0 = file_downloader_1.format_percent(bytes_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bool_0 = False
        bytes_0 = None
        str_0 = '&f)g?y'
        bytes_1 = b'\xbf\x96=W\x95-\x01r\x1e?uk\x08N\xfdi'
        set_0 = {bytes_1, bytes_1}
        file_downloader_0 = module_0.FileDownloader(bytes_1, set_0)
        var_0 = file_downloader_0.calc_speed(bool_0, bytes_0, str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'\xaeZ'
        tuple_0 = None
        list_0 = []
        bool_0 = True
        file_downloader_0 = module_0.FileDownloader(bytes_0, bool_0)
        var_0 = file_downloader_0.format_speed(tuple_0)
        var_1 = file_downloader_0.undo_temp_name(list_0)
    except BaseException:
        pass

def test_case_4():
    try:
        set_0 = set()
        int_0 = 2775
        dict_0 = {int_0: int_0}
        file_downloader_0 = module_0.FileDownloader(int_0, dict_0)
        var_0 = file_downloader_0.format_retries(set_0)
    except BaseException:
        pass

def test_case_5():
    try:
        bool_0 = False
        tuple_0 = ()
        file_downloader_0 = module_0.FileDownloader(tuple_0, tuple_0)
        var_0 = file_downloader_0.report_file_already_downloaded(bool_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'nooverwritQes'
        file_downloader_0 = module_0.FileDownloader(str_0, str_0)
        bytes_0 = b'\x89\xb07\xe3'
        float_0 = 4987.11
        int_0 = -572
        str_1 = 'xv`-NpH .jgLL1'
        dict_0 = {str_0: int_0, str_1: bytes_0, str_0: bytes_0, str_0: str_0}
        file_downloader_1 = module_0.FileDownloader(int_0, dict_0)
        var_0 = file_downloader_1.format_eta(float_0)
        var_1 = file_downloader_1.to_stderr(bytes_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = ''
        str_1 = 'player code'
        str_2 = "kY';hr\n/"
        int_0 = 46
        dict_0 = None
        str_3 = '[$@CT7&GD\'"y=N'
        dict_1 = {int_0: int_0, int_0: int_0, str_1: dict_0, str_0: str_1, str_3: dict_0, int_0: int_0}
        bool_0 = False
        tuple_0 = (bool_0, dict_1)
        list_0 = [str_0, str_2, str_1, str_1]
        bytes_0 = b'\xbf\xa0a\xe1'
        int_1 = 0
        file_downloader_0 = module_0.FileDownloader(int_1, dict_1)
        var_0 = file_downloader_0.slow_down(tuple_0, list_0, bytes_0)
        var_1 = file_downloader_0.to_console_title(bytes_0)
    except BaseException:
        pass

def test_case_8():
    try:
        dict_0 = {}
        str_0 = 'sh4Oo{`~`"F;]{tw.`'
        list_0 = [str_0, str_0]
        float_0 = 1321.792928
        file_downloader_0 = module_0.FileDownloader(list_0, float_0)
        var_0 = file_downloader_0.report_warning(**dict_0)
    except BaseException:
        pass

def test_case_9():
    try:
        var_0 = None
        file_downloader_0 = module_0.FileDownloader(var_0, var_0)
        int_0 = -1163
        float_0 = -559.3713855320694
        var_1 = file_downloader_0.calc_speed(int_0, float_0, int_0)
        var_2 = file_downloader_0.report_error()
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = 'Mississauga resident David Farmer is still out of power as a result of the ice storm a month ago. To keep the house warm, Farmer cuts wood from his property for a wood burning stove downstairs.'
        bytes_0 = b'\x9ci\x90+;\x80t`\xa8\x0f\x1f\x13\x11\xdc\xaa\xd2'
        str_1 = 'extremely bad day for this guy..!'
        dict_0 = {str_1: str_1}
        list_0 = [dict_0]
        file_downloader_0 = module_0.FileDownloader(bytes_0, list_0)
        var_0 = file_downloader_0.parse_bytes(str_0)
        bool_0 = True
        var_1 = file_downloader_0.try_rename(file_downloader_0, bool_0)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = 'G0.#?]h)&kD(H=k|AQ`'
        str_1 = 'm:s'
        str_2 = 'M"x^lS\nLl!}kH28'
        dict_0 = {str_1: str_0, str_2: str_0, str_1: str_1, str_0: str_0}
        str_3 = 'njUUm(L\x0bS4/r{,'
        file_downloader_0 = module_0.FileDownloader(str_3, dict_0)
        var_0 = file_downloader_0.try_rename(str_2, str_1)
    except BaseException:
        pass

def test_case_12():
    try:
        bytes_0 = b'\x00\xa5\x85'
        list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
        str_0 = None
        dict_0 = {str_0: bytes_0, str_0: str_0}
        bytes_1 = b'T\x05\xaa\xe2\x91\xbf2'
        float_0 = None
        set_0 = {float_0, float_0}
        dict_1 = {float_0: set_0, float_0: set_0, float_0: float_0}
        file_downloader_0 = module_0.FileDownloader(set_0, dict_1)
        var_0 = file_downloader_0.slow_down(list_0, dict_0, bytes_1)
        str_1 = '2^lc'
        dict_2 = {str_0: dict_0, str_0: float_0, str_1: dict_0}
        var_1 = file_downloader_0.report_destination(dict_2)
    except BaseException:
        pass

def test_case_13():
    try:
        float_0 = 413.5
        int_0 = None
        list_0 = []
        tuple_0 = (list_0,)
        list_1 = [int_0, float_0, tuple_0, tuple_0]
        float_1 = 34.169
        list_2 = [float_0]
        str_0 = "]uh'eD|N*^yY3Ib"
        file_downloader_0 = module_0.FileDownloader(list_2, str_0)
        var_0 = file_downloader_0.report_retry(list_1, float_1, tuple_0)
    except BaseException:
        pass

def test_case_14():
    try:
        str_0 = ']WKtnsf4_J2,-s=)_o['
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
        file_downloader_0 = module_0.FileDownloader(dict_0, dict_0)
        var_0 = file_downloader_0.download(str_0, str_0)
    except BaseException:
        pass

def test_case_15():
    try:
        var_0 = None
        str_0 = 'nooverwrites'
        bool_0 = True
        bool_1 = {str_0: bool_0}
        file_downloader_0 = module_0.FileDownloader(var_0, bool_1)
        str_1 = 'filename'
        str_2 = 'Thu, 01 Jan 1970 00:00:00 +0000'
        var_1 = file_downloader_0.try_utime(str_1, str_2)
        str_3 = 'dK]&\r(+e8vru'
        var_2 = file_downloader_0.parse_bytes(str_3)
        var_3 = file_downloader_0.report_unable_to_resume()
    except BaseException:
        pass

def test_case_16():
    try:
        str_0 = '⪯̸'
        str_1 = 'player code'
        str_2 = '2.0'
        str_3 = "(kON'SB{z"
        dict_0 = {str_0: str_0, str_1: str_0, str_2: str_2, str_3: str_1}
        int_0 = 46
        dict_1 = {int_0: int_0, int_0: int_0, str_0: str_1, int_0: int_0}
        file_downloader_0 = module_0.FileDownloader(dict_0, dict_1)
        file_downloader_1 = module_0.FileDownloader(dict_0, int_0)
        var_0 = file_downloader_0.trouble()
    except BaseException:
        pass

def test_case_17():
    try:
        bool_0 = False
        bytes_0 = b'0m`\x96\xaf\n\xa8e'
        bool_1 = True
        file_downloader_0 = module_0.FileDownloader(bytes_0, bool_1)
        file_downloader_1 = module_0.FileDownloader(file_downloader_0, bytes_0)
        var_0 = file_downloader_1.report_resuming_byte(bool_0)
    except BaseException:
        pass

def test_case_18():
    try:
        str_0 = 'nooverwritQes'
        file_downloader_0 = module_0.FileDownloader(str_0, str_0)
        var_0 = file_downloader_0.try_utime(str_0, str_0)
        bytes_0 = b'\xe0\xb5\xb2~\x82l\x97\xa9\xc7\x17\x02Za\xc0\x11'
        dict_0 = {bytes_0: file_downloader_0}
        var_1 = file_downloader_0.ytdl_filename(dict_0)
    except BaseException:
        pass

def test_case_19():
    try:
        var_0 = None
        file_downloader_0 = module_0.FileDownloader(var_0, var_0)
        str_0 = 'downloaded_byte<'
        str_1 = 'status'
        int_0 = 78
        var_1 = {str_0: int_0, str_0: int_0, str_1: int_0, str_0: int_0, str_1: str_1}
        var_2 = file_downloader_0.report_progress(var_1)
    except BaseException:
        pass

def test_case_20():
    try:
        bytes_0 = b'\xa0w#\x86\x82\xb4b'
        float_0 = 1485.63512
        dict_0 = None
        list_0 = [float_0]
        int_0 = 2900
        file_downloader_0 = module_0.FileDownloader(list_0, int_0)
        var_0 = file_downloader_0.format_percent(dict_0)
        int_1 = 0
        str_0 = '|'
        float_1 = 97.86
        file_downloader_1 = module_0.FileDownloader(str_0, float_1)
        file_downloader_2 = module_0.FileDownloader(int_1, file_downloader_1)
        var_1 = file_downloader_2.format_percent(bytes_0)
    except BaseException:
        pass

def test_case_21():
    try:
        bool_0 = True
        set_0 = {bool_0, bool_0}
        list_0 = [bool_0, set_0, set_0, set_0]
        list_1 = [bool_0, bool_0, list_0, set_0]
        file_downloader_0 = module_0.FileDownloader(bool_0, list_1)
        int_0 = -1743
        var_0 = file_downloader_0.calc_eta(list_0, int_0, list_0, list_1)
    except BaseException:
        pass

def test_case_22():
    try:
        str_0 = '⪯̸'
        str_1 = "kY';hr\n/"
        str_2 = "(kON'SB{z"
        dict_0 = {str_0: str_0, str_0: str_0, str_1: str_1, str_2: str_0}
        int_0 = 46
        dict_1 = {int_0: int_0, int_0: int_0, str_0: str_1, int_0: int_0}
        bool_0 = False
        tuple_0 = (bool_0, dict_1)
        float_0 = None
        list_0 = [tuple_0, str_1]
        int_1 = -1
        float_1 = 854.3933
        file_downloader_0 = module_0.FileDownloader(float_1, dict_0)
        var_0 = file_downloader_0.calc_eta(dict_0, float_0, list_0, int_1)
    except BaseException:
        pass

def test_case_23():
    try:
        float_0 = -2455.31259
        float_1 = 7467.126
        list_0 = []
        bool_0 = True
        bool_1 = False
        str_0 = ':\n_'
        str_1 = '\rVO\'Du"~88<'
        tuple_0 = (bool_1, str_0, str_1)
        file_downloader_0 = module_0.FileDownloader(bool_0, tuple_0)
        var_0 = file_downloader_0.calc_eta(float_0, float_1, bool_0, list_0)
    except BaseException:
        pass

def test_case_24():
    try:
        set_0 = set()
        list_0 = []
        str_0 = "P\n'0jZNcy%\ty"
        file_downloader_0 = module_0.FileDownloader(list_0, str_0)
        var_0 = file_downloader_0.try_rename(set_0, set_0)
        var_1 = None
        str_1 = 'nooverwrites'
        bool_0 = True
        bool_1 = {str_1: bool_0}
        file_downloader_1 = module_0.FileDownloader(var_1, bool_1)
        str_2 = 'filename'
        str_3 = 'Thu, 01 Jan 1970 00:00:00 +0000'
        str_4 = 'gl\nz`)uZ.L&*V'
        list_1 = [var_1, bool_1, bool_0, str_2]
        int_0 = -433
        var_2 = file_downloader_1.slow_down(str_4, list_1, int_0)
        var_3 = file_downloader_1.try_utime(str_2, str_3)
        int_1 = 402
        var_4 = file_downloader_1.add_progress_hook(int_1)
        str_5 = 'dK]&\r(+e8vru'
        var_5 = file_downloader_1.parse_bytes(str_5)
        tuple_0 = ()
        var_6 = file_downloader_1.temp_name(tuple_0)
    except BaseException:
        pass

def test_case_25():
    try:
        tuple_0 = None
        int_0 = 14
        set_0 = None
        float_0 = -2931.0
        bool_0 = True
        float_1 = -2980.07722
        file_downloader_0 = module_0.FileDownloader(bool_0, float_1)
        var_0 = file_downloader_0.calc_eta(tuple_0, int_0, set_0, float_0)
        dict_0 = {}
        bool_1 = True
        dict_1 = {}
        file_downloader_1 = module_0.FileDownloader(bool_1, dict_1)
        var_1 = file_downloader_1.calc_speed(bool_1, int_0, dict_0)
    except BaseException:
        pass

def test_case_26():
    try:
        var_0 = None
        str_0 = 'nooverwrites'
        bool_0 = True
        bool_1 = {str_0: bool_0}
        file_downloader_0 = module_0.FileDownloader(var_0, bool_1)
        str_1 = 'p0E\x0bJ%.k]KCKvZX\x0c/'
        var_1 = file_downloader_0.download(str_1, file_downloader_0)
    except BaseException:
        pass

def test_case_27():
    try:
        str_0 = 'inf'
        int_0 = -7
        dict_0 = {}
        bool_0 = True
        dict_1 = {str_0: int_0}
        file_downloader_0 = module_0.FileDownloader(bool_0, dict_1)
        var_0 = file_downloader_0.calc_speed(bool_0, int_0, dict_0)
        float_0 = 827.0
        var_1 = file_downloader_0.best_block_size(bool_0, float_0)
        var_2 = file_downloader_0.download(file_downloader_0, float_0)
    except BaseException:
        pass

def test_case_28():
    try:
        bytes_0 = None
        list_0 = [bytes_0, bytes_0]
        list_1 = []
        file_downloader_0 = None
        str_0 = 'aJ)8X'
        str_1 = ')sJ'
        str_2 = 'GTA 5 ViLeo  e5iew'
        dict_0 = {str_0: str_0, str_1: str_0, str_2: str_0}
        bytes_1 = b'\x86{\xb5\xc2|\xc5\xba\x0b_5%\xddU\x87'
        list_2 = []
        tuple_0 = (dict_0, bytes_1, list_2)
        file_downloader_1 = module_0.FileDownloader(tuple_0, dict_0)
        var_0 = file_downloader_1.slow_down(list_0, list_1, file_downloader_0)
        str_3 = 'inf'
        int_0 = -7
        bool_0 = False
        dict_1 = {str_3: int_0}
        file_downloader_2 = module_0.FileDownloader(bool_0, dict_1)
        float_0 = 827.0
        var_1 = file_downloader_2.best_block_size(bool_0, float_0)
        var_2 = file_downloader_2.download(file_downloader_2, float_0)
    except BaseException:
        pass