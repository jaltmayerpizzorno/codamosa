# Automatically generated by Pynguin.
import typed_ast._ast3 as module_0
import py_backwards.transformers.metaclass as module_1

def test_case_0():
    pass

def test_case_1():
    a_s_t_0 = module_0.AST()
    bytes_0 = b'\t\xaf'
    list_0 = [a_s_t_0, bytes_0]
    list_1 = [list_0]
    module_x_var_0 = module_0.Module(*list_1)
    metaclass_transformer_0 = module_1.MetaclassTransformer(a_s_t_0)
    module_x_var_1 = metaclass_transformer_0.visit_Module(module_x_var_0)
    metaclass_transformer_1 = module_1.MetaclassTransformer(a_s_t_0)

def test_case_2():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    class_def_0 = module_0.ClassDef(*list_0)
    a_s_t_0 = module_0.AST()
    metaclass_transformer_0 = module_1.MetaclassTransformer(a_s_t_0)
    class_def_1 = metaclass_transformer_0.visit_ClassDef(class_def_0)