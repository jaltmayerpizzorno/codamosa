# Automatically generated by Pynguin.
import ansible.plugins.action.include_vars as module_0

def test_case_0():
    try:
        float_0 = -1720.53
        bytes_0 = b'\x8b\xe8\x1f\xcd\x0e\xc3<\x8erd\x97\xfa\xee\n\xf3\xf7\x19+\xb8'
        set_0 = set()
        str_0 = "Y)A@VIj1F,>q-G'\t"
        action_module_0 = module_0.ActionModule(float_0, bytes_0, float_0, set_0, str_0, set_0)
        var_0 = action_module_0.run()
    except BaseException:
        pass

def test_case_1():
    try:
        float_0 = None
        int_0 = -3643
        dict_0 = {float_0: float_0, float_0: int_0, int_0: float_0, float_0: float_0}
        str_0 = "P_5<\x0b@e?%CD[_';C\\2!h"
        action_module_0 = None
        float_1 = None
        list_0 = [float_0]
        str_1 = '%s.%s from %s'
        bool_0 = False
        str_2 = 'knG'
        tuple_0 = (str_1, list_0, bool_0, str_2)
        tuple_1 = (float_1, list_0, tuple_0)
        str_3 = '5:7982\x0by'
        str_4 = 'QXwfD6dnKo'
        action_module_1 = module_0.ActionModule(action_module_0, tuple_1, action_module_0, str_3, str_4, list_0)
        str_5 = 'v\r^?)xXXv5\t7me'
        action_module_2 = module_0.ActionModule(dict_0, action_module_1, dict_0, str_5, dict_0, int_0)
        bytes_0 = b'S\xa7\xfd\xcfva\x0e\xcb\x92/\x11\xda'
        bool_1 = True
        list_1 = []
        list_2 = [bytes_0, int_0]
        action_module_3 = module_0.ActionModule(dict_0, bytes_0, dict_0, dict_0, list_1, list_2)
        tuple_2 = (bool_1, action_module_3, action_module_3)
        action_module_4 = module_0.ActionModule(bytes_0, bool_1, bool_1, tuple_2, bool_1, list_2)
        bytes_1 = b'+\xcd\xed\x12%D\rA\xef'
        float_2 = -1009.7
        bytes_2 = b"\x17~ ?\x97\xdce\xd2\x9bK\xddN'"
        str_6 = "\t*#m'W"
        tuple_3 = (bytes_2, str_6, float_2)
        str_7 = 'FIpR\nQ/96C2|fLjm+l'
        str_8 = 'The full traceback was:\n\n%s'
        action_module_5 = module_0.ActionModule(bytes_1, float_2, bytes_2, tuple_3, str_7, str_8)
        var_0 = action_module_5.run(dict_0, str_0)
    except BaseException:
        pass