# Automatically generated by Pynguin.
import cookiecutter.repository as module_0

def test_case_0():
    try:
        dict_0 = None
        var_0 = module_0.is_repo_url(dict_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '\n    Test determine_repo_dir function.\n    '
        var_0 = {}
        bool_0 = False
        var_1 = module_0.determine_repo_dir(str_0, var_0, str_0, bool_0, bool_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '\n    Teot etIrmine_repo_dir function.\n    '
        var_0 = {str_0: str_0}
        bool_0 = True
        var_1 = module_0.determine_repo_dir(str_0, var_0, str_0, bool_0, bool_0)
    except BaseException:
        pass

def test_case_3():
    try:
        float_0 = 1461.461142
        str_0 = '7,yA4u'
        var_0 = module_0.expand_abbreviations(float_0, str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        bool_0 = False
        var_0 = module_0.repository_has_cookiecutter_json(bool_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'Check whether the given `path` should only be copied and not rendered.\n\n    Returns True if `path` matches a pattern in the given `context` dict,\n    otherwise False.\n\n    :param path: A file-system path referring to a fileor dir that\n        should be rendered or just copied.\n    :param context: cookiecutter context.\n    '
        var_0 = module_0.repository_has_cookiecutter_json(str_0)
        str_1 = '5'
        var_1 = module_0.expand_abbreviations(str_1, str_0)
        str_2 = '?9uczq.zip'
        set_0 = {var_0, str_2, str_1, var_0}
        dict_0 = {str_2: str_2, var_0: set_0}
        str_3 = 'EY*t|H-hS>oG^+vCr'
        var_2 = module_0.determine_repo_dir(str_2, str_0, set_0, dict_0, str_3)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = '/Users/Wayne/Desktop/Cookiecutter-Test-Repos/tests/fake-repo-pre/'
        var_0 = {}
        bool_0 = False
        str_1 = 'xxx'
        var_1 = module_0.determine_repo_dir(str_0, var_0, str_1, str_1, bool_0, str_1, str_1)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'https://github.com/audreyr/cookiecutter-pypackage.git'
        str_1 = '/home/bob/cookiecutters.bak'
        var_0 = {}
        var_1 = None
        bool_0 = False
        var_2 = module_0.determine_repo_dir(str_0, var_0, str_1, var_1, bool_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = 'Check whether the given `path` should only be copied and not rendered.\n\n    Returns True if `path` matches a pattern in the given `context` dict,\n    otherwise False.\n\n    :param path: A file-system path referring to a fileor dir that\n        should be rendered or just copied.\n    :param context: cookiecutter context.\n    '
        var_0 = module_0.repository_has_cookiecutter_json(str_0)
        str_1 = '5'
        var_1 = module_0.expand_abbreviations(str_1, str_0)
        str_2 = '?9u=zq.zip'
        str_3 = ',t<Uow~Z {E~vu(b3=Ue'
        var_2 = module_0.repository_has_cookiecutter_json(str_2)
        set_0 = {var_0, str_2, str_1, var_0}
        dict_0 = {str_2: str_3, var_0: set_0, var_1: str_3}
        var_3 = module_0.determine_repo_dir(str_2, str_3, set_0, dict_0, str_1)
    except BaseException:
        pass