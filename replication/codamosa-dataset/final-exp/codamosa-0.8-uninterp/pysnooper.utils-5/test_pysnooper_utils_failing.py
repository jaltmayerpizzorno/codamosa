# Automatically generated by Pynguin.
import pysnooper.utils as module_0

def test_case_0():
    try:
        str_0 = '{}.x'
        var_0 = module_0.get_shortish_repr(str_0, str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = 1
        int_1 = (int_0, int_0)
        int_2 = [int_1]
        var_0 = module_0.get_repr_function(int_0, int_2)
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b'\xf57\x90o\xf7'
        var_0 = module_0.normalize_repr(bytes_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '+9~Y:F\ne\r\t'
        str_1 = 'uF'
        var_0 = module_0.shitcode(str_0)
        str_2 = 's$.ERfeGsieTs4W\t'
        list_0 = [str_1]
        str_3 = '$QW\x0b1FVG{X'
        list_1 = []
        var_1 = module_0.ensure_tuple(list_1)
        str_4 = 'hh(Q5wW2vsLq\r"QP3*KO'
        var_2 = module_0.ensure_tuple(str_4)
        float_0 = -1778.8
        var_3 = module_0.get_shortish_repr(float_0)
        var_4 = module_0.shitcode(str_2)
        var_5 = module_0.get_shortish_repr(str_3, list_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = '{indent}Elapsed time: {elapsed_time_string}'
        var_0 = module_0.shitcode(str_0)
        dict_0 = None
        list_0 = [dict_0, str_0, var_0, var_0]
        bool_0 = False
        var_1 = module_0.truncate(list_0, bool_0)
        str_1 = "TcaW1Ta@W@'nl)]}\x0b\r:Z"
        var_2 = module_0.shitcode(str_1)
        str_2 = 's$.ERfeGsieTs4W\t'
        str_3 = 'V>&CMd;b M}s0#JO+'
        list_1 = [str_1, str_0, str_3, str_2]
        var_3 = module_0.get_shortish_repr(list_0, list_1)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = '{indent}Elapsed time: {elapsed_time_string}'
        var_0 = module_0.shitcode(str_0)
        str_1 = 's$.ERfeGsieTs4W\t'
        set_0 = set()
        list_0 = [str_0, var_0, str_0, str_1]
        var_1 = module_0.get_shortish_repr(list_0, set_0, list_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'P#oIR+pPDAG:/07cBhmj'
        dict_0 = None
        var_0 = module_0.truncate(str_0, dict_0)
        var_1 = module_0.shitcode(str_0)
        str_1 = 's$.ERfeGsieTs4W\t'
        list_0 = [str_0]
        var_2 = module_0.get_shortish_repr(list_0)
        str_2 = '$QW\x0b1FVG{X'
        list_1 = []
        var_3 = module_0.ensure_tuple(list_1)
        float_0 = -1845.1487376657133
        var_4 = module_0.get_shortish_repr(list_1, list_1, list_1, str_2)
        str_3 = '<M%:dK\nK'
        set_0 = {var_1, float_0, str_1, str_3}
        var_5 = module_0.shitcode(set_0)
    except BaseException:
        pass

def test_case_7():
    try:
        var_0 = lambda x: x
        str_0 = 'first'
        var_1 = lambda x: str_0
        var_2 = (var_0, var_1)
        var_3 = lambda x: x
        var_4 = (var_3, var_2)
        var_5 = (var_2, var_4)
        int_0 = -4607
        var_6 = module_0.get_repr_function(int_0, var_5)
        var_7 = lambda x: str_0
        str_1 = 'third'
        var_8 = lambda x: str_1
        var_9 = module_0.get_repr_function(int_0, str_0)
    except BaseException:
        pass