# Automatically generated by Pynguin.
import ansible.utils.collection_loader._collection_finder as module_0

def test_case_0():
    try:
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
        str_0 = ''
        var_0 = ansible_collection_finder_0.set_playbook_paths(str_0)
        bytes_0 = b'\x86h\x00'
        var_1 = ansible_collection_finder_0.set_playbook_paths(bytes_0)
        var_2 = ansible_collection_finder_0.find_module(str_0)
        str_1 = 'ansible'
        var_3 = ansible_collection_finder_0.find_module(str_1, str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
        ansible_collection_finder_1 = module_0._AnsibleCollectionFinder()
        var_0 = ansible_collection_finder_1.find_module(ansible_collection_finder_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'lib-dynload'
        set_0 = {str_0, str_0, str_0, str_0}
        ansible_path_hook_finder_0 = module_0._AnsiblePathHookFinder(str_0, set_0)
        var_0 = ansible_path_hook_finder_0.__repr__()
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
        float_0 = -776.4001531660062
        dict_0 = {float_0: float_0}
        ansible_collection_ref_0 = module_0.AnsibleCollectionRef(float_0, dict_0, float_0, dict_0)
    except BaseException:
        pass

def test_case_3():
    try:
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
        str_0 = '\x0b*J2e@\x0c]|FD$l'
        ansible_collection_n_s_pkg_loader_0 = module_0._AnsibleCollectionNSPkgLoader(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
        set_0 = {ansible_collection_finder_0, ansible_collection_finder_0}
        var_0 = ansible_collection_finder_0.set_playbook_paths(set_0)
        str_0 = 'Mn:Ms4\\~+ A'
        var_1 = ansible_collection_finder_0.find_module(str_0, ansible_collection_finder_0)
        str_1 = 'RyxE"gr5.6K'
        ansible_collection_root_pkg_loader_0 = module_0._AnsibleCollectionRootPkgLoader(str_1)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'ansible_collections.abc'
        var_0 = []
        ansible_collection_n_s_pkg_loader_0 = module_0._AnsibleCollectionNSPkgLoader(str_0, var_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'ansible_collections.foo.bar'
        str_1 = 'col1/foo/bar'
        ansible_collection_pkg_loader_0 = module_0._AnsibleCollectionPkgLoader(str_0, str_1)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'MnMs4\\+A'
        list_0 = None
        ansible_internal_redirect_loader_0 = module_0._AnsibleInternalRedirectLoader(str_0, list_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = 'ansible.builtin'
        ansible_internal_redirect_loader_0 = module_0._AnsibleInternalRedirectLoader(str_0, str_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'ns.coll'
        ansible_collection_ref_0 = module_0.AnsibleCollectionRef(str_0, str_0, str_0, str_0)
    except BaseException:
        pass

def test_case_10():
    try:
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
        float_0 = -766.951
        dict_0 = {float_0: float_0}
        ansible_collection_ref_0 = module_0.AnsibleCollectionRef(float_0, dict_0, float_0, dict_0)
    except BaseException:
        pass

def test_case_11():
    try:
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
        set_0 = set()
        int_0 = 1613
        bool_0 = False
        ansible_collection_ref_0 = module_0.AnsibleCollectionRef(ansible_collection_finder_0, set_0, int_0, bool_0)
    except BaseException:
        pass

def test_case_12():
    try:
        ansible_collection_n_s_pkg_loader_0 = None
        dict_0 = None
        dict_1 = {ansible_collection_n_s_pkg_loader_0: ansible_collection_n_s_pkg_loader_0, ansible_collection_n_s_pkg_loader_0: ansible_collection_n_s_pkg_loader_0, ansible_collection_n_s_pkg_loader_0: ansible_collection_n_s_pkg_loader_0}
        bool_0 = False
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder(dict_1, bool_0)
        dict_2 = {ansible_collection_n_s_pkg_loader_0: ansible_collection_finder_0}
        tuple_0 = (dict_2,)
        ansible_collection_finder_1 = module_0._AnsibleCollectionFinder(tuple_0)
        var_0 = ansible_collection_finder_1.set_playbook_paths(dict_0)
    except BaseException:
        pass

def test_case_13():
    try:
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
        set_0 = {ansible_collection_finder_0, ansible_collection_finder_0}
        var_0 = ansible_collection_finder_0.set_playbook_paths(set_0)
        str_0 = 'Mn:Ms4\\~+ A'
        var_1 = ansible_collection_finder_0.find_module(str_0, ansible_collection_finder_0)
        float_0 = 2473.0
        str_1 = 'P__('
        ansible_path_hook_finder_0 = module_0._AnsiblePathHookFinder(float_0, str_1)
        ansible_collection_loader_0 = module_0._AnsibleCollectionLoader(str_1)
    except BaseException:
        pass

def test_case_14():
    try:
        bool_0 = None
        str_0 = 'pj8O2O~@'
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
        set_0 = set()
        ansible_path_hook_finder_0 = module_0._AnsiblePathHookFinder(set_0, set_0)
        var_0 = ansible_path_hook_finder_0.find_module(str_0, ansible_collection_finder_0)
        ansible_collection_finder_1 = module_0._AnsibleCollectionFinder(str_0)
        dict_0 = {bool_0: set_0, str_0: ansible_collection_finder_0, ansible_collection_finder_0: bool_0, var_0: ansible_collection_finder_1}
        float_0 = -1884.702
        list_0 = []
        ansible_collection_ref_0 = module_0.AnsibleCollectionRef(dict_0, float_0, set_0, list_0)
    except BaseException:
        pass

def test_case_15():
    try:
        str_0 = 'ns.coll'
        str_1 = 'module'
        var_0 = None
        ansible_collection_ref_0 = module_0.AnsibleCollectionRef(str_0, var_0, str_0, str_1)
    except BaseException:
        pass

def test_case_16():
    try:
        var_0 = None
        str_0 = 'fake'
        ansible_path_hook_finder_0 = module_0._AnsiblePathHookFinder(var_0, str_0)
        str_1 = 'ansible_collections.ns.coll.module'
        var_1 = ansible_path_hook_finder_0.find_module(str_1)
    except BaseException:
        pass

def test_case_17():
    try:
        str_0 = 'ansible_collections.test_collection.subcollection.subsubcollection'
        str_1 = '/e/f/g/h'
        ansible_collection_pkg_loader_base_0 = module_0._AnsibleCollectionPkgLoaderBase(str_0, str_1)
        var_0 = ansible_collection_pkg_loader_base_0.load_module(ansible_collection_pkg_loader_base_0)
    except BaseException:
        pass

def test_case_18():
    try:
        str_0 = 'ansible_collections.foo.ini'
        ansible_collection_pkg_loader_base_0 = module_0._AnsibleCollectionPkgLoaderBase(str_0, str_0)
        set_0 = set()
        var_0 = ansible_collection_pkg_loader_base_0.get_data(set_0)
    except BaseException:
        pass

def test_case_19():
    try:
        str_0 = "from __future__ import print_function\nprint('Hello World !')"
        str_1 = 'ansible_collections.foo.init'
        str_2 = [str_1]
        ansible_collection_pkg_loader_base_0 = module_0._AnsibleCollectionPkgLoaderBase(str_1, str_2)
        var_0 = ansible_collection_pkg_loader_base_0.get_code(str_1)
        set_0 = {str_0, ansible_collection_pkg_loader_base_0}
        var_1 = ansible_collection_pkg_loader_base_0.get_data(set_0)
    except BaseException:
        pass

def test_case_20():
    try:
        str_0 = 'ansible_collections.test_collection.subcollection.subsubcollection'
        ansible_collection_pkg_loader_base_0 = module_0._AnsibleCollectionPkgLoaderBase(str_0, str_0)
        tuple_0 = ()
        var_0 = ansible_collection_pkg_loader_base_0.iter_modules(tuple_0)
        var_1 = ansible_collection_pkg_loader_base_0.load_module(ansible_collection_pkg_loader_base_0)
    except BaseException:
        pass

def test_case_21():
    try:
        str_0 = 'ansible_collections.test_collection.subcollection.subsubcollection'
        str_1 = '/e/f/g/h'
        ansible_collection_pkg_loader_base_0 = module_0._AnsibleCollectionPkgLoaderBase(str_0, str_1)
        dict_0 = {}
        int_0 = 1508
        ansible_path_hook_finder_0 = module_0._AnsiblePathHookFinder(dict_0, int_0)
        var_0 = ansible_collection_pkg_loader_base_0.get_source(ansible_path_hook_finder_0)
    except BaseException:
        pass

def test_case_22():
    try:
        str_0 = "from __future__ import print_function\nprint('Hello World !')"
        str_1 = 'ansible_collections.foo.init'
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
        str_2 = [ansible_collection_finder_0, str_0, str_0]
        ansible_collection_pkg_loader_base_0 = module_0._AnsibleCollectionPkgLoaderBase(str_1, str_2)
        var_0 = ansible_collection_pkg_loader_base_0.get_code(str_1)
        var_1 = ansible_collection_finder_0.set_playbook_paths(str_2)
        set_0 = set()
        var_2 = ansible_collection_pkg_loader_base_0.get_data(set_0)
    except BaseException:
        pass

def test_case_23():
    try:
        str_0 = 'gDa\x0c|~;3+7%S)&<M'
        str_1 = 'r o$G;nJu,\ny5o'
        int_0 = 2
        set_0 = {str_1, str_1}
        tuple_0 = ()
        ansible_path_hook_finder_0 = module_0._AnsiblePathHookFinder(set_0, tuple_0)
        var_0 = ansible_path_hook_finder_0.iter_modules(int_0)
        str_2 = 'ansible_collections.foo.init'
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
        ansible_collection_pkg_loader_base_0 = module_0._AnsibleCollectionPkgLoaderBase(str_2, str_0)
        var_1 = ansible_collection_pkg_loader_base_0.is_package(ansible_path_hook_finder_0)
    except BaseException:
        pass

def test_case_24():
    try:
        str_0 = 'ansible_collections.foo.init'
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
        ansible_collection_pkg_loader_base_0 = module_0._AnsibleCollectionPkgLoaderBase(str_0, str_0)
        var_0 = ansible_collection_pkg_loader_base_0.get_data(str_0)
    except BaseException:
        pass

def test_case_25():
    try:
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
        var_0 = None
        str_0 = 'ansible_collections.somens.somecoll'
        var_1 = ansible_collection_finder_0.find_module(str_0, var_0)
    except BaseException:
        pass

def test_case_26():
    try:
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
        str_0 = 'o'
        var_0 = ansible_collection_finder_0.find_module(str_0)
        str_1 = 'ansible'
        var_1 = ansible_collection_finder_0.find_module(str_1, str_0)
    except BaseException:
        pass

def test_case_27():
    try:
        str_0 = 'ansible_collections.foo.init'
        ansible_collection_root_pkg_loader_0 = module_0._AnsibleCollectionRootPkgLoader(str_0)
    except BaseException:
        pass

def test_case_28():
    try:
        str_0 = 'namespace.collection'
        str_1 = '[9,'
        str_2 = 'someaction'
        str_3 = 'action'
        ansible_collection_ref_0 = module_0.AnsibleCollectionRef(str_0, str_1, str_2, str_3)
    except BaseException:
        pass

def test_case_29():
    try:
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
        str_0 = 'ansible_coll!ctions.somens'
        str_1 = 'ansible_collections.somenss(mecll'
        var_0 = ansible_collection_finder_0.find_module(str_1, str_0)
        ansible_collection_ref_0 = None
        var_1 = ansible_collection_ref_0.__repr__()
        ansible_collection_loader_0 = module_0._AnsibleCollectionLoader(ansible_collection_ref_0)
    except BaseException:
        pass

def test_case_30():
    try:
        str_0 = 'namespLoe.collecio'
        str_1 = 'subdir1.subdir2'
        str_2 = 'action'
        ansible_collection_ref_0 = module_0.AnsibleCollectionRef(str_0, str_1, str_1, str_2)
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
        int_0 = 8
        var_0 = ansible_collection_ref_0.try_parse_fqcr(ansible_collection_finder_0, int_0)
        set_0 = None
        ansible_path_hook_finder_0 = module_0._AnsiblePathHookFinder(set_0, ansible_collection_ref_0)
        ansible_collection_n_s_pkg_loader_0 = module_0._AnsibleCollectionNSPkgLoader(str_1, ansible_path_hook_finder_0)
    except BaseException:
        pass