# Automatically generated by Pynguin.
import ansible.plugins.callback.default as module_0

def test_case_0():
    try:
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_no_hosts_remaining()
        var_1 = callback_module_0.v2_playbook_on_no_hosts_remaining()
        str_0 = 's9V[cw'
        list_0 = [var_0, str_0, var_0]
        var_2 = callback_module_0.set_options(list_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = b'W\xbbp'
        set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_on_failed(set_0)
    except BaseException:
        pass

def test_case_2():
    try:
        float_0 = 886.0
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_on_ok(float_0)
    except BaseException:
        pass

def test_case_3():
    try:
        callback_module_0 = module_0.CallbackModule()
        callback_module_1 = module_0.CallbackModule()
        dict_0 = {}
        var_0 = callback_module_1.v2_runner_on_skipped(dict_0)
    except BaseException:
        pass

def test_case_4():
    try:
        callback_module_0 = module_0.CallbackModule()
        callback_module_1 = module_0.CallbackModule()
        var_0 = callback_module_1.v2_runner_on_unreachable(callback_module_0)
    except BaseException:
        pass

def test_case_5():
    try:
        bool_0 = True
        callback_module_0 = None
        callback_module_1 = module_0.CallbackModule()
        var_0 = callback_module_1.v2_playbook_on_task_start(bool_0, callback_module_0)
    except BaseException:
        pass

def test_case_6():
    try:
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_handler_task_start(callback_module_0)
    except BaseException:
        pass

def test_case_7():
    try:
        bytes_0 = b'\xa9\x865\xbf\x1co'
        float_0 = 1000.0
        list_0 = [bytes_0, bytes_0, bytes_0, float_0]
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_cleanup_task_start(list_0)
    except BaseException:
        pass

def test_case_8():
    try:
        set_0 = None
        bytes_0 = b'\x93\x0cw\xa8o\x16\x1b\x81?'
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_on_start(set_0, bytes_0)
    except BaseException:
        pass

def test_case_9():
    try:
        callback_module_0 = module_0.CallbackModule()
        callback_module_1 = module_0.CallbackModule()
        var_0 = callback_module_1.v2_playbook_on_play_start(callback_module_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = None
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_on_file_diff(str_0)
    except BaseException:
        pass

def test_case_11():
    try:
        set_0 = set()
        list_0 = [set_0, set_0, set_0]
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_item_on_ok(list_0)
    except BaseException:
        pass

def test_case_12():
    try:
        bool_0 = False
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_item_on_skipped(bool_0)
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = '\n>GCK+}\\ft)b'
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_include(str_0)
    except BaseException:
        pass

def test_case_14():
    try:
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_start(callback_module_0)
    except BaseException:
        pass

def test_case_15():
    try:
        callback_module_0 = module_0.CallbackModule()
        str_0 = '.(\nlnUh%H<n}Hu]0V|N@'
        var_0 = callback_module_0.v2_runner_retry(str_0)
    except BaseException:
        pass

def test_case_16():
    try:
        str_0 = '9fmR8Svc4$U&A?Z7*f\x0c'
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_on_async_poll(str_0)
    except BaseException:
        pass

def test_case_17():
    try:
        str_0 = 'K:\x0ck;d]3g \x0c#D'
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_on_async_ok(str_0)
    except BaseException:
        pass

def test_case_18():
    try:
        callback_module_0 = module_0.CallbackModule()
        callback_module_1 = module_0.CallbackModule()
        var_0 = callback_module_1.v2_runner_on_async_failed(callback_module_0)
    except BaseException:
        pass

def test_case_19():
    try:
        float_0 = -2061.84767
        callback_module_0 = module_0.CallbackModule()
        callback_module_1 = module_0.CallbackModule()
        float_1 = 307.2027
        dict_0 = {callback_module_1: callback_module_0, callback_module_1: callback_module_0, float_1: float_0, callback_module_0: callback_module_0}
        var_0 = callback_module_0.v2_runner_item_on_failed(dict_0)
    except BaseException:
        pass

def test_case_20():
    try:
        callback_module_0 = module_0.CallbackModule()
        list_0 = []
        var_0 = callback_module_0.v2_playbook_on_stats(list_0)
    except BaseException:
        pass