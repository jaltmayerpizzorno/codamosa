# Automatically generated by Pynguin.
import flutils.pathutils as module_0
import pathlib as module_1
import getpass as module_2

def test_case_0():
    try:
        str_0 = '/tmp'
        path_0 = module_0.directory_present(str_0, str_0, str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = 1904
        struct_group_0 = module_0.get_os_group(int_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'h(Vby,BtmxN\r{z[=@yw'
        str_1 = "dLN=_gFp0m,KK}'6"
        str_2 = "\\sJ'-"
        dict_0 = {str_0: str_0, str_1: str_0, str_2: str_0}
        posix_path_0 = module_1.PosixPath(**dict_0)
        list_0 = [posix_path_0, str_2, str_0, str_0]
        struct_group_0 = module_0.get_os_group(list_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'r'
        struct_group_0 = module_0.get_os_group(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'home'
        list_0 = [str_0, str_0]
        posix_path_0 = module_1.PosixPath(*list_0)
        int_0 = 24
        bool_0 = False
        module_0.chmod(posix_path_0, int_0, bool_0)
        module_0.chown(posix_path_0, str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = '[|OR)@6G`%as'
        module_0.chown(str_0)
        bytes_0 = b'Z\xe1\x82\x97s\xf1FP\xe3\xc3RZ'
        str_1 = module_0.exists_as(bytes_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = '~/tmp'
        module_0.path_absent(str_0)
        str_1 = 'directory'
        str_2 = (str_0, str_1)
        module_0.chmod(str_2)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = '/tmp'
        module_0.path_absent(str_0)
        module_0.path_absent(str_0)
        generator_0 = module_0.find_paths(str_0)
        path_0 = module_0.directory_present(str_0, str_0)
    except BaseException:
        pass

def test_case_8():
    try:
        int_0 = -824
        struct_group_0 = module_0.get_os_group(int_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = '/4U2[=_jDiK@<1F/62'
        str_1 = '/42[=_)D;K@<1F/62d'
        module_0.path_absent(str_0)
        path_0 = module_0.directory_present(str_1, str_1)
    except BaseException:
        pass

def test_case_10():
    try:
        int_0 = 1645
        struct_passwd_0 = module_0.get_os_user(int_0)
    except BaseException:
        pass

def test_case_11():
    try:
        struct_group_0 = module_0.get_os_group()
        bytes_0 = b'o'
        path_0 = module_0.normalize_path(bytes_0)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = '~/tmp/*'
        str_1 = module_0.exists_as(str_0)
        module_0.path_absent(str_0)
        module_0.chown(str_0)
        str_2 = module_0.exists_as(str_0)
        path_0 = module_0.directory_present(str_0)
    except BaseException:
        pass

def test_case_13():
    try:
        bool_0 = None
        list_0 = [bool_0]
        struct_passwd_0 = module_0.get_os_user(list_0)
    except BaseException:
        pass

def test_case_14():
    try:
        str_0 = '~/tmp/flutils.tests.osutils.txt'
        var_0 = module_2.getuser()
        str_1 = '-1'
        module_0.chown(str_0, str_1, str_1)
        path_0 = module_0.normalize_path(str_0)
        var_1 = path_0.as_posix()
        module_0.chown(str_0)
        module_0.path_absent(str_1)
    except BaseException:
        pass

def test_case_15():
    try:
        str_0 = "/4E2[/e=_lDiK'<YF/62"
        path_0 = module_0.directory_present(str_0)
        module_0.chown(str_0)
        str_1 = '/4U2[=_jDiK@<1F/62'
        bool_0 = False
        module_0.chown(str_1, bool_0)
        str_2 = module_0.exists_as(str_1)
        module_0.path_absent(str_1)
        generator_0 = module_0.find_paths(str_0)
        int_0 = 50855936
        struct_passwd_0 = module_0.get_os_user()
        path_1 = module_0.directory_present(str_0, int_0, str_1, str_1)
    except BaseException:
        pass

def test_case_16():
    try:
        str_0 = '/dev/tty'
        str_1 = module_0.exists_as(str_0)
        str_2 = module_0.exists_as(str_1)
    except BaseException:
        pass

def test_case_17():
    try:
        str_0 = '~/tmp/flutils.tests.osutils.txt'
        var_0 = module_2.getuser()
        str_1 = '-1'
        module_0.chown(str_0, str_1, str_1)
        int_0 = -2221
        path_0 = module_0.directory_present(str_0, int_0, str_1)
        module_0.path_absent(str_1)
    except BaseException:
        pass

def test_case_18():
    try:
        str_0 = '/'
        path_0 = module_0.directory_present(str_0)
        str_1 = '/4U2[=_jM/K@<1F'
        bool_0 = True
        module_0.chown(str_1, bool_0)
        str_2 = module_0.exists_as(str_1)
        module_0.chmod(str_0)
        module_0.path_absent(str_1)
        generator_0 = module_0.find_paths(str_0)
        int_0 = 50855936
        path_1 = module_0.directory_present(str_0, int_0, str_1, str_1)
    except BaseException:
        pass