# Automatically generated by Pynguin.
import pytutils.lazy.lazy_regex as module_0

def test_case_0():
    pass

def test_case_1():
    var_0 = module_0.reset_compile()
    lazy_regex_0 = module_0.LazyRegex()
    list_0 = [lazy_regex_0]
    list_1 = None
    tuple_0 = (list_0, list_1)
    list_2 = [var_0, var_0, lazy_regex_0]
    invalid_pattern_0 = module_0.InvalidPattern(list_2)
    invalid_pattern_1 = module_0.InvalidPattern(invalid_pattern_0)
    var_1 = invalid_pattern_1.__eq__(tuple_0)
    var_2 = lazy_regex_0.__getstate__()

def test_case_2():
    tuple_0 = ()
    list_0 = [tuple_0, tuple_0, tuple_0, tuple_0]
    var_0 = module_0.lazy_compile(*list_0)
    invalid_pattern_0 = module_0.InvalidPattern(tuple_0)

def test_case_3():
    var_0 = module_0.reset_compile()

def test_case_4():
    str_0 = 'abc'
    int_0 = 0
    var_0 = (str_0, int_0)
    var_1 = {}
    lazy_regex_0 = module_0.LazyRegex(var_0, var_1)
    var_2 = lazy_regex_0.__getstate__()
    var_3 = ()
    var_4 = {}
    lazy_regex_1 = module_0.LazyRegex(var_3, var_4)
    var_5 = lazy_regex_1.__setstate__(var_2)