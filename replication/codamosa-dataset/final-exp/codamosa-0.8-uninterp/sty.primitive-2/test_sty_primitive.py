# Automatically generated by Pynguin.
import sty.primitive as module_0

def test_case_0():
    pass

def test_case_1():
    bytes_0 = b'\x8e\xe6\x9d\x7f\xc4L\xba}\x88l\x1c""\xba\x81\xf3\xc4'
    list_0 = [bytes_0]
    style_0 = module_0.Style(*list_0)
    register_0 = module_0.Register()
    var_0 = register_0.as_namedtuple()

def test_case_2():
    register_0 = module_0.Register()
    str_0 = 'F<\x0bdGV'
    style_0 = module_0.Style()
    var_0 = register_0.__setattr__(str_0, style_0)
    dict_0 = register_0.as_dict()
    register_1 = module_0.Register()
    register_1.unmute()
    dict_1 = register_1.as_dict()
    str_1 = register_0.__call__()
    dict_2 = register_0.as_dict()

def test_case_3():
    register_0 = module_0.Register()

def test_case_4():
    register_0 = module_0.Register()
    str_0 = register_0.__call__()
    str_1 = 'kNcHPA~_1'
    list_0 = [str_1, str_1, str_1, str_1]
    str_2 = ''
    str_3 = '1'
    dict_0 = {str_2: str_1, str_3: str_1, str_2: register_0}
    str_4 = register_0.__call__(*list_0, **dict_0)

def test_case_5():
    register_0 = module_0.Register()
    register_0.mute()
    str_0 = register_0.__call__()
    var_0 = register_0.as_namedtuple()
    str_1 = 'kNcHPA~_1'
    list_0 = [str_1, str_1, str_1, str_1]
    str_2 = ''
    str_3 = '1'
    dict_0 = {str_2: str_1, str_3: str_1, str_2: register_0}
    str_4 = register_0.__call__(*list_0, **dict_0)

def test_case_6():
    register_0 = module_0.Register()
    register_0.mute()

def test_case_7():
    register_0 = module_0.Register()
    var_0 = register_0.as_namedtuple()
    register_1 = module_0.Register()
    register_2 = register_1.copy()
    register_1.unmute()
    var_1 = register_1.as_namedtuple()

def test_case_8():
    register_0 = module_0.Register()
    var_0 = register_0.as_namedtuple()

def test_case_9():
    register_0 = module_0.Register()
    register_1 = register_0.copy()

def test_case_10():
    register_0 = module_0.Register()
    str_0 = 'F<\x0bdGV'
    style_0 = module_0.Style()
    var_0 = register_0.__setattr__(str_0, style_0)
    register_0.unmute()
    dict_0 = register_0.as_dict()
    str_1 = register_0.__call__()
    register_1 = module_0.Register()
    str_2 = '2>ZVG"bYGe{m?:>\\$'
    var_1 = register_0.__setattr__(str_2, style_0)