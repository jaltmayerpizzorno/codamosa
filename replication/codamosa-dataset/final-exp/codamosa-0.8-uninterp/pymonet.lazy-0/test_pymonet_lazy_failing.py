# Automatically generated by Pynguin.
import pymonet.lazy as module_0
import builtins as module_1

def test_case_0():
    try:
        list_0 = []
        lazy_0 = module_0.Lazy(list_0)
        var_0 = lazy_0.to_maybe()
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '\n        Create not empty maybe.\n\n        :param mapper: value to store in Maybe\n        :type mapper: Any\n        :returns: Maybe[Any]\n        '
        object_0 = module_1.object()
        list_0 = [str_0]
        lazy_0 = module_0.Lazy(list_0)
        dict_0 = {}
        var_0 = lazy_0.ap(dict_0)
        var_1 = lazy_0.to_either()
    except BaseException:
        pass

def test_case_2():
    try:
        list_0 = []
        lazy_0 = module_0.Lazy(list_0)
        var_0 = lazy_0.to_box()
    except BaseException:
        pass

def test_case_3():
    try:
        tuple_0 = ()
        lazy_0 = module_0.Lazy(tuple_0)
        list_0 = [lazy_0]
        lazy_1 = module_0.Lazy(list_0)
        var_0 = lazy_1.to_either()
    except BaseException:
        pass

def test_case_4():
    try:
        bool_0 = False
        var_0 = lambda arg: arg
        lazy_0 = module_0.Lazy(var_0)
        lazy_1 = module_0.Lazy(var_0)
        var_1 = lambda arg: arg
        lazy_2 = module_0.Lazy(var_1)
        lazy_3 = module_0.Lazy(lazy_1)
        var_2 = lazy_2 == lazy_3
        lazy_4 = module_0.Lazy(bool_0)
        var_3 = lazy_4.to_try()
        var_4 = lazy_4.to_box()
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = '8XuO|5t)Ay@E~'
        lazy_0 = module_0.Lazy(str_0)
        var_0 = lazy_0.to_validation()
    except BaseException:
        pass

def test_case_6():
    try:
        bool_0 = False
        var_0 = lambda arg: arg
        lazy_0 = module_0.Lazy(var_0)
        lazy_1 = module_0.Lazy(var_0)
        bool_1 = True
        var_1 = lambda arg: arg
        list_0 = [bool_1]
        var_2 = lazy_1.get(*list_0)
        lazy_2 = module_0.Lazy(var_1)
        lazy_3 = module_0.Lazy(lazy_1)
        var_3 = lazy_2 == lazy_3
        lazy_4 = module_0.Lazy(bool_0)
        var_4 = lazy_4.to_try()
        var_5 = lazy_4.to_box()
    except BaseException:
        pass

def test_case_7():
    try:
        bool_0 = False
        var_0 = lambda arg: arg
        lazy_0 = module_0.Lazy(var_0)
        lazy_1 = module_0.Lazy(var_0)
        bool_1 = True
        var_1 = lambda arg: arg
        list_0 = [bool_1]
        var_2 = lazy_1.get(*list_0)
        lazy_2 = module_0.Lazy(lazy_1)
        var_3 = lazy_1 == lazy_2
        lazy_3 = module_0.Lazy(bool_0)
        var_4 = lazy_1.to_validation(*list_0)
        var_5 = lazy_3.to_try()
        var_6 = lazy_3.to_box()
    except BaseException:
        pass