# Automatically generated by Pynguin.
import ansible.plugins.shell.powershell as module_0
import pkgutil as module_1
import shlex as module_2

def test_case_0():
    pass

def test_case_1():
    shell_module_0 = module_0.ShellModule()
    str_0 = 'J&>'
    dict_0 = {str_0: shell_module_0}
    var_0 = shell_module_0.env_prefix(**dict_0)
    var_1 = shell_module_0.wrap_for_exec(str_0)
    var_2 = shell_module_0.expand_user(shell_module_0)
    var_3 = shell_module_0.env_prefix()
    shell_module_1 = module_0.ShellModule()

def test_case_2():
    shell_module_0 = module_0.ShellModule()
    str_0 = 'test'
    var_0 = shell_module_0.get_remote_filename(str_0)
    str_1 = 'test.py'
    var_1 = shell_module_0.get_remote_filename(str_1)
    str_2 = 'script.ps1'
    var_2 = shell_module_0.get_remote_filename(str_2)
    str_3 = 'test.txt'
    var_3 = shell_module_0.get_remote_filename(str_3)

def test_case_3():
    shell_module_0 = module_0.ShellModule()
    var_0 = shell_module_0.remove(shell_module_0)

def test_case_4():
    shell_module_0 = module_0.ShellModule()
    var_0 = shell_module_0.expand_user(shell_module_0)

def test_case_5():
    shell_module_0 = module_0.ShellModule()
    var_0 = shell_module_0.exists(shell_module_0)

def test_case_6():
    shell_module_0 = module_0.ShellModule()
    var_0 = shell_module_0.checksum(shell_module_0)

def test_case_7():
    bytes_0 = None
    shell_module_0 = module_0.ShellModule()
    var_0 = shell_module_0.exists(bytes_0)

def test_case_8():
    shell_module_0 = module_0.ShellModule()
    str_0 = '~'
    var_0 = shell_module_0.expand_user(str_0)
    str_1 = '~\\'
    var_1 = shell_module_0.expand_user(str_1)
    str_2 = '~\\Ansible'
    var_2 = shell_module_0.expand_user(str_2)

def test_case_9():
    str_0 = 'Test-Module.ps1'
    str_1 = '#!powershell'
    var_0 = None
    shell_module_0 = module_0.ShellModule()
    str_2 = 'bootstrap_wrapper.ps1'
    var_1 = module_1.get_data(str_1, str_2)
    str_3 = 'type '
    var_2 = str_3 + str_0
    str_4 = 'env_string'
    var_3 = shell_module_0.build_module_command(str_4, str_1, str_0)

def test_case_10():
    str_0 = '#!/usr/bin/python'
    str_1 = 'test'
    var_0 = module_2.join(str_1)
    str_2 = 'arg1'
    str_3 = 'arg2'
    var_1 = [var_0, str_2, str_3]
    str_4 = 'ansible_test_module'
    str_5 = 'Testing Power module %s build'
    var_2 = str_5 % str_4
    var_3 = module_2.join(var_1)
    str_6 = ''
    shell_module_0 = module_0.ShellModule()
    var_4 = shell_module_0.build_module_command(str_6, str_0, var_3, var_0)

def test_case_11():
    str_0 = '#!powershell'
    shell_module_0 = module_0.ShellModule()
    str_1 = 'ansible.executor.powershell'
    str_2 = 'bootstrap_wrapper.ps1'
    var_0 = module_1.get_data(str_1, str_2)
    var_1 = str_0 + str_0
    str_3 = ' | '
    var_2 = var_1 + str_3
    str_4 = 'env_string'
    var_3 = shell_module_0.build_module_command(str_4, str_0, str_3)

def test_case_12():
    str_0 = '#!powershell'
    shell_module_0 = module_0.ShellModule()
    str_1 = 'ansible.executor.powershell'
    str_2 = 'bootstrap_wrapper.ps1'
    var_0 = module_1.get_data(str_1, str_2)
    var_1 = str_0 + str_0
    str_3 = ''
    var_2 = var_1 + str_3
    str_4 = 'env_string'
    var_3 = shell_module_0.build_module_command(str_4, str_0, str_3)