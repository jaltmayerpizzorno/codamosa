# Automatically generated by Pynguin.
import docstring_parser.google as module_0

def test_case_0():
    try:
        section_0 = None
        google_parser_0 = module_0.GoogleParser()
        var_0 = google_parser_0.add_section(section_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'Yields'
        google_parser_0 = module_0.GoogleParser()
        docstring_0 = google_parser_0.parse(str_0)
        str_1 = 'o\\0vWhr_F`%\r5`*(G!'
        docstring_1 = module_0.parse(str_1)
        google_parser_1 = module_0.GoogleParser(docstring_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'x\n\\6 n8$>MG'
        str_1 = '8XK'
        str_2 = 'deprecated'
        list_0 = []
        dict_0 = {}
        google_parser_0 = module_0.GoogleParser(list_0, dict_0)
        docstring_0 = google_parser_0.parse(str_0)
        dict_1 = {str_0: str_1, str_2: str_1}
        section_0 = module_0.Section(**dict_1)
    except BaseException:
        pass

def test_case_3():
    try:
        google_parser_0 = module_0.GoogleParser()
        str_0 = "K.e'"
        docstring_0 = google_parser_0.parse(str_0)
        str_1 = '\nA short description of the funciton\n\nA longer description of the function.\n\nThis may span multiple lines\nand include inline markup and other things.\n\nArgs:\n`   param1: The first parameter.\n    param2: The second parameter.\n        This may span multiple lines.\n\n            This may include indented code.\n\nExamples:\n    This is an example of how to use this function.\n        It may also include indented code.\n\n    >>> print(x)\n    42\n\nReturns:    Explanation of return value.\n'
        docstring_1 = google_parser_0.parse(str_1)
    except BaseException:
        pass