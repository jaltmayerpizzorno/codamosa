# Automatically generated by Pynguin.
import ansible.utils._junit_xml as module_0
import datetime as module_1

def test_case_0():
    try:
        test_error_0 = module_0.TestError()
        var_0 = test_error_0.__repr__()
        int_0 = -782
        list_0 = [int_0, int_0]
        datetime_0 = module_1.datetime(*list_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'state=drained should only be used for checking a port in the wait_for module'
        test_suite_0 = module_0.TestSuite(str_0, str_0)
        test_failure_0 = module_0.TestFailure()
        element_0 = test_suite_0.get_xml_element()
        test_suites_0 = module_0.TestSuites(element_0)
        str_1 = test_suites_0.to_pretty_xml()
        test_result_0 = module_0.TestResult()
    except BaseException:
        pass

def test_case_2():
    try:
        bool_0 = None
        test_suites_0 = module_0.TestSuites()
        str_0 = 'q`\ndO>'
        dict_0 = {}
        test_case_0 = module_0.TestCase(str_0, str_0, dict_0, str_0, str_0, str_0, bool_0)
        element_0 = test_case_0.get_xml_element()
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '\r2$'
        test_suites_0 = module_0.TestSuites(str_0)
        dict_0 = test_suites_0.get_attributes()
        str_1 = '%s_%s'
        str_2 = 'TC7/`'
        test_suite_0 = module_0.TestSuite(str_2, str_1, str_1, dict_0)
        element_0 = test_suite_0.get_xml_element()
        dict_1 = {}
        test_suite_1 = module_0.TestSuite(str_1, str_1, str_1, str_1, dict_1, str_1, str_1)
        element_1 = test_suite_1.get_xml_element()
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'TestSuiteTest'
        test_suite_0 = module_0.TestSuite(str_0, str_0, str_0, str_0, str_0)
        element_0 = test_suite_0.get_xml_element()
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'master_message'
        str_1 = 'mster_output'
        test_error_0 = module_0.TestError(str_1, str_0)
        test_failure_0 = module_0.TestFailure(str_1, str_0)
        str_2 = 'master_name'
        str_3 = '1'
        str_4 = 'master_status'
        str_5 = '12.34'
        test_error_1 = [test_error_0]
        test_failure_1 = [test_failure_0]
        str_6 = 'master_system_out'
        str_7 = 'master_system_err'
        test_case_0 = module_0.TestCase(str_2, str_3, str_6, str_4, str_5, test_error_1, test_failure_1, str_6, str_7)
        element_0 = test_case_0.get_xml_element()
        int_0 = 0
        var_0 = master.get_xml_element()[int_0]
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'yw'
        dict_0 = None
        str_1 = 'OZ'
        float_0 = -222.85
        test_failure_0 = module_0.TestFailure(str_1, str_0)
        list_0 = [test_failure_0, test_failure_0]
        test_case_0 = module_0.TestCase(str_1, float_0, list_0, str_0)
        str_2 = 'xU{'
        optional_0 = None
        str_3 = 'V/Ta\n`+i+Jf\\\n.ok@'
        test_case_1 = module_0.TestCase(str_2, optional_0, str_2, str_3)
        str_4 = '^p@8Mp]ZWvS`WPJ`C'
        test_case_2 = module_0.TestCase(str_4, test_failure_0)
        list_1 = [test_case_0, test_case_1, test_case_2]
        test_suite_0 = module_0.TestSuite(str_0, str_0, str_0, str_0, dict_0, list_1)
        element_0 = test_suite_0.get_xml_element()
    except BaseException:
        pass