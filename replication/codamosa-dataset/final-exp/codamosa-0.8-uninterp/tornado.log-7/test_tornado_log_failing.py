# Automatically generated by Pynguin.
import tornado.log as module_0
import logging as module_1

def test_case_0():
    try:
        log_formatter_0 = module_0.LogFormatter()
        str_0 = log_formatter_0.format(log_formatter_0)
    except BaseException:
        pass

def test_case_1():
    try:
        module_0.define_logging_options()
    except BaseException:
        pass

def test_case_2():
    try:
        none_type_0 = None
        module_0.enable_pretty_logging(none_type_0)
        str_0 = ')X1zSUyGvCx}D~g'
        int_0 = 443
        str_1 = '>z:j}fm'
        bool_0 = True
        log_formatter_0 = module_0.LogFormatter(str_1, str_0, bool_0)
        str_2 = log_formatter_0.format(int_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = None
        dict_0 = {str_0: str_0}
        list_0 = [dict_0]
        list_1 = [list_0]
        module_0.enable_pretty_logging(list_0, list_1)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'B:CsgZVK\n-E)\x0chwA'
        module_0.define_logging_options(str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        complex_0 = None
        module_0.enable_pretty_logging()
        str_0 = 'ik&\\|'
        str_1 = '_Mockable'
        log_formatter_0 = module_0.LogFormatter(str_1, str_0)
        str_2 = 'none'
        bool_0 = False
        dict_0 = None
        log_formatter_1 = module_0.LogFormatter(str_0, str_2, bool_0, dict_0)
        str_3 = log_formatter_0.format(complex_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = "'TGTpkv"
        none_type_0 = None
        logger_0 = module_1.Logger(str_0)
        module_0.enable_pretty_logging(none_type_0, logger_0)
        bool_0 = True
        int_0 = 6
        int_1 = -413
        log_formatter_0 = module_0.LogFormatter()
        var_0 = logger_0.addHandler(logger_0)
        dict_0 = {int_0: int_0, int_0: int_0, int_0: int_1, int_0: int_0}
        log_formatter_1 = module_0.LogFormatter(str_0, bool_0, dict_0)
        str_1 = '4G!'
        bool_1 = False
        log_formatter_2 = module_0.LogFormatter(str_1, bool_1, dict_0)
        var_1 = logger_0.exception(log_formatter_0)
    except BaseException:
        pass