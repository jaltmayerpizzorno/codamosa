# Automatically generated by Pynguin.
import httpie.config as module_0
import pathlib as module_1

def test_case_0():
    try:
        path_0 = module_0.get_default_config_dir()
        base_config_dict_0 = module_0.BaseConfigDict(path_0)
        var_0 = base_config_dict_0.load()
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = ''
        list_0 = [str_0, str_0, str_0]
        list_1 = [str_0]
        dict_0 = {str_0: list_1, str_0: str_0, str_0: list_0}
        path_0 = module_1.Path(*list_0, **dict_0)
        base_config_dict_0 = module_0.BaseConfigDict(path_0)
        var_0 = base_config_dict_0.load()
    except BaseException:
        pass

def test_case_2():
    try:
        path_0 = module_1.Path()
        base_config_dict_0 = module_0.BaseConfigDict(path_0)
        var_0 = base_config_dict_0.save()
    except BaseException:
        pass

def test_case_3():
    try:
        path_0 = module_1.Path()
        var_0 = path_0.touch()
        base_config_dict_0 = module_0.BaseConfigDict(path_0)
        var_1 = base_config_dict_0.delete()
    except BaseException:
        pass

def test_case_4():
    try:
        path_0 = module_1.Path()
        str_0 = None
        dict_0 = {str_0: path_0}
        base_config_dict_0 = module_0.BaseConfigDict(path_0)
        var_0 = base_config_dict_0.save(dict_0)
        var_1 = path_0.is_fifo()
        path_1 = None
        base_config_dict_1 = module_0.BaseConfigDict(path_1)
        bool_0 = base_config_dict_0.is_new()
        var_2 = base_config_dict_1.save()
    except BaseException:
        pass

def test_case_5():
    try:
        path_0 = module_1.Path()
        str_0 = None
        dict_0 = {str_0: path_0}
        base_config_dict_0 = module_0.BaseConfigDict(path_0)
        var_0 = base_config_dict_0.save(dict_0)
        var_1 = path_0.is_fifo()
        var_2 = path_0.touch()
        path_1 = None
        base_config_dict_1 = module_0.BaseConfigDict(path_1)
        var_3 = base_config_dict_1.delete()
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = '\n        Initiate and return a stream for `response` body  with progress\n        callback attached. Can be called only once.\n\n        :param initial_url: The original requested URL\n        :param final_response: Initiated response object with headers already fetched\n\n        :return: RawStream, output_file\n\n        '
        list_0 = [str_0, str_0, str_0]
        path_0 = module_1.Path(*list_0)
        base_config_dict_0 = module_0.BaseConfigDict(path_0)
        var_0 = base_config_dict_0.ensure_directory()
    except BaseException:
        pass