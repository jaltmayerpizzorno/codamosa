# Automatically generated by Pynguin.
import ansible.module_utils.common.dict_transformations as module_0

def test_case_0():
    pass

def test_case_1():
    str_0 = 'T}'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.camel_dict_to_snake_dict(dict_0)

def test_case_2():
    float_0 = 1.5
    var_0 = module_0.snake_dict_to_camel_dict(float_0)

def test_case_3():
    list_0 = []
    var_0 = module_0.snake_dict_to_camel_dict(list_0)

def test_case_4():
    set_0 = None
    dict_0 = {set_0: set_0}
    var_0 = module_0.recursive_diff(dict_0, dict_0)
    list_0 = [set_0]
    var_1 = module_0.snake_dict_to_camel_dict(list_0)
    var_2 = module_0.snake_dict_to_camel_dict(list_0)

def test_case_5():
    set_0 = None
    dict_0 = {set_0: set_0}
    var_0 = module_0.recursive_diff(dict_0, dict_0)
    list_0 = [set_0]
    var_1 = module_0.snake_dict_to_camel_dict(list_0)
    var_2 = module_0.dict_merge(dict_0, dict_0)
    var_3 = module_0.snake_dict_to_camel_dict(list_0)

def test_case_6():
    list_0 = []
    complex_0 = None
    var_0 = module_0.dict_merge(list_0, complex_0)

def test_case_7():
    set_0 = None
    dict_0 = {set_0: set_0}
    var_0 = module_0.recursive_diff(dict_0, dict_0)

def test_case_8():
    str_0 = 'B?w?y*1b_{))TkRiyY|m'
    str_1 = 'f'
    str_2 = 'OIH{{7\r[xm'
    str_3 = 'i'
    dict_0 = {str_0: str_2, str_3: str_1}
    var_0 = module_0.snake_dict_to_camel_dict(dict_0)

def test_case_9():
    str_0 = 'TestKey'
    str_1 = 'TestValue'
    str_2 = {str_0: str_1}
    var_0 = module_0.camel_dict_to_snake_dict(str_2)
    str_3 = 'TestKey2'
    str_4 = {str_3: str_0}
    str_5 = {str_0: str_4}
    var_1 = module_0.camel_dict_to_snake_dict(str_5)

def test_case_10():
    str_0 = 'T}'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    bytes_0 = b"\xce\x01\xfe#\x19\xb1Q|W\xcb'R\xcc\xf3\x9c\xa2"
    var_0 = module_0.camel_dict_to_snake_dict(dict_0, bytes_0)

def test_case_11():
    str_0 = 'tes'
    str_1 = 'ey'
    str_2 = 'SecondKey'
    str_3 = [str_0, str_2]
    str_4 = {str_1: str_3}
    var_0 = module_0.camel_dict_to_snake_dict(str_4)

def test_case_12():
    var_0 = {}
    var_1 = {}
    var_2 = module_0.dict_merge(var_0, var_1)
    str_0 = 'a'
    int_0 = 1
    int_1 = {str_0: int_0}
    str_1 = 'b'
    int_2 = 2
    int_3 = {str_1: int_2}
    var_3 = module_0.dict_merge(int_1, int_3)
    int_4 = {str_1: int_0}
    int_5 = {str_0: int_4}
    int_6 = {str_1: int_2}
    int_7 = {str_0: int_6}
    var_4 = module_0.dict_merge(int_5, int_7)
    str_2 = 'c'
    int_8 = {str_2: int_2}
    int_9 = {str_0: int_8}
    var_5 = module_0.dict_merge(int_1, int_9)
    int_10 = {str_1: int_0}
    int_11 = {str_0: int_10}
    int_12 = 3
    int_13 = {str_1: int_2, str_2: int_12}
    int_14 = {str_0: int_13}
    var_6 = module_0.dict_merge(int_11, int_14)

def test_case_13():
    str_0 = 'key1'
    str_1 = 'key2'
    str_2 = 'key3'
    str_3 = 'b'
    str_4 = 'c'
    int_0 = 1
    int_1 = 2
    int_2 = 7
    int_3 = {str_3: int_0, str_3: int_1, str_4: int_2}
    int_4 = {str_0: int_3, str_1: int_1, str_2: int_2}
    int_5 = 4
    int_6 = {str_1: int_0, str_3: int_1, str_4: int_5}
    int_7 = {str_0: int_6, str_1: int_2, str_2: int_2}
    var_0 = module_0.recursive_diff(int_4, int_7)

def test_case_14():
    str_0 = ' Unit tests for function recursive_diff '
    str_1 = '_pass'
    str_2 = 'dHfyi\rL!O'
    str_3 = 'c'
    int_0 = 1
    int_1 = 2
    int_2 = 3
    int_3 = {str_3: int_0, str_0: int_1, str_3: int_2}
    int_4 = {str_1: int_3, str_2: int_1}
    int_5 = 4
    int_6 = {str_1: int_0, str_2: int_1, str_3: int_5}
    var_0 = module_0.recursive_diff(int_4, int_6)
    list_0 = [int_3, int_6, var_0, int_2]
    var_1 = module_0.snake_dict_to_camel_dict(list_0)

def test_case_15():
    str_0 = '_pass'
    str_1 = 'dHfyi\rL!O'
    str_2 = 'key3'
    str_3 = 'a'
    str_4 = 'c'
    int_0 = 1
    int_1 = 2
    int_2 = 3
    dict_0 = None
    var_0 = module_0.snake_dict_to_camel_dict(dict_0)
    int_3 = 4
    int_4 = {str_3: int_0, str_4: int_1, str_4: int_3}
    int_5 = {str_0: int_4, str_1: int_2, str_2: int_2}
    var_1 = module_0.recursive_diff(int_4, int_5)

def test_case_16():
    str_0 = '_pass'
    str_1 = 'dHfyi\rL!O'
    str_2 = 'key3'
    str_3 = 'c'
    int_0 = 1
    int_1 = 2
    int_2 = 3
    int_3 = {str_3: int_0, str_2: int_1, str_3: int_2}
    int_4 = {str_0: int_3, str_1: int_1}
    int_5 = 4
    list_0 = [int_1, int_5, str_0]
    bool_0 = True
    var_0 = module_0.snake_dict_to_camel_dict(list_0, bool_0)
    var_1 = module_0.recursive_diff(int_4, int_4)
    int_6 = 690
    list_1 = [int_3, int_0, var_1, int_6]
    var_2 = module_0.snake_dict_to_camel_dict(list_1)

def test_case_17():
    str_0 = '_pass'
    str_1 = 'c'
    int_0 = 1
    int_1 = 2
    int_2 = {str_1: int_0, str_1: int_1, str_1: int_0}
    int_3 = {str_0: int_2, str_0: int_1}
    dict_0 = None
    var_0 = module_0.snake_dict_to_camel_dict(dict_0)
    int_4 = 4
    int_5 = {str_0: int_0, str_0: int_1, str_1: int_4}
    var_1 = module_0.recursive_diff(int_3, int_5)
    int_6 = 690
    list_0 = [int_2, int_5, var_1, int_6]
    var_2 = module_0.snake_dict_to_camel_dict(list_0)

def test_case_18():
    str_0 = 'B'
    str_1 = 'C'
    str_2 = 'a'
    str_3 = 'c'
    str_4 = {str_2: str_2, str_0: str_2, str_1: str_3}
    str_5 = {str_2: str_2, str_1: str_1, str_3: str_3}
    var_0 = module_0.camel_dict_to_snake_dict(str_4)
    str_6 = 'oX~\n$\\e/c\x0c0e\\+H,9\n'
    str_7 = [str_2, str_6, str_2, str_5]
    str_8 = {str_3: str_3, str_0: str_1, str_1: str_7}
    var_1 = module_0.camel_dict_to_snake_dict(str_8)

def test_case_19():
    str_0 = '_pass'
    str_1 = 'c'
    bytes_0 = b'B\x16\x9c\x88g\x92<\x02\x96\xfe5\x99]\xea\x8b\xc3:~'
    dict_0 = {str_0: bytes_0, str_1: bytes_0}
    str_2 = 'proxy'
    var_0 = module_0.snake_dict_to_camel_dict(dict_0, str_2)
    int_0 = 1
    int_1 = 2
    int_2 = {str_1: int_0, str_1: int_1, str_1: int_0}
    int_3 = {str_0: int_2, str_0: int_1}
    dict_1 = None
    var_1 = module_0.snake_dict_to_camel_dict(dict_1)
    int_4 = 4
    int_5 = {str_0: int_0, str_0: int_1, str_1: int_4}
    var_2 = module_0.recursive_diff(int_3, int_5)
    int_6 = 690
    list_0 = [int_2, int_5, var_2, int_6]
    var_3 = module_0.snake_dict_to_camel_dict(list_0)

def test_case_20():
    str_0 = 'A'
    str_1 = 'a'
    str_2 = 'b'
    str_3 = "%xwi7:?Y='@E_\n8iZ"
    dict_0 = {str_3: str_2, str_0: str_0}
    str_4 = {str_0: str_1, str_2: str_2, str_0: str_2, str_2: str_2, str_1: dict_0}
    str_5 = [str_1, str_2, str_4]
    str_6 = 'B?w?y*1b_{))TkRiyY|m'
    str_7 = 'f'
    str_8 = [str_5, str_6, str_7]
    str_9 = 'OIH{{7\r[xm'
    str_10 = 'VV\n8'
    str_11 = 'i'
    str_12 = [str_7, str_4, str_9, str_11]
    str_13 = {str_0: str_5, str_2: str_8, str_10: str_12}
    var_0 = module_0.snake_dict_to_camel_dict(dict_0)
    var_1 = module_0.camel_dict_to_snake_dict(str_13)

def test_case_21():
    str_0 = 'OIR?{X{99.DxLkx_'
    str_1 = 'a'
    str_2 = '0'
    str_3 = 'c'
    str_4 = "%xwi7:?Y='@E_\n8iZ"
    dict_0 = {str_4: str_2, str_3: str_3}
    var_0 = module_0.snake_dict_to_camel_dict(dict_0)
    str_5 = [str_1, str_2, str_3]
    str_6 = 'B?w?y*1b_{))TkRiyY|m'
    dict_1 = {str_0: var_0, str_6: str_5, str_2: str_3}
    var_1 = module_0.snake_dict_to_camel_dict(dict_1)
    bool_0 = True
    var_2 = module_0.camel_dict_to_snake_dict(dict_1, bool_0)
    str_7 = '0QaA\r23KM.Mp1'
    int_0 = 12
    var_3 = module_0.snake_dict_to_camel_dict(str_7, int_0)

def test_case_22():
    str_0 = '_t.x,t3ZK )t8\r(S;mH'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    bytes_0 = b"\xce\x01\xfe#\x19\xb1Q|W\xcb'R\xcc\xf3\x9c\xa2"
    var_0 = module_0.camel_dict_to_snake_dict(dict_0, bytes_0)
    var_1 = module_0.snake_dict_to_camel_dict(str_0)