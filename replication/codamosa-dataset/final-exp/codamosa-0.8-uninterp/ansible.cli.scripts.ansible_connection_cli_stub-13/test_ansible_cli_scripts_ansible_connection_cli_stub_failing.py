# Automatically generated by Pynguin.
import ansible.cli.scripts.ansible_connection_cli_stub as module_0
import _io as module_1
import ansible.playbook.play_context as module_2
import ansible.utils.display as module_3
import socket as module_4
import ansible.module_utils.connection as module_5

def test_case_0():
    try:
        var_0 = module_0.main()
    except BaseException:
        pass

def test_case_1():
    try:
        var_0 = None
        connection_process_0 = module_0.ConnectionProcess(var_0, var_0, var_0, var_0)
        var_1 = connection_process_0.run()
    except BaseException:
        pass

def test_case_2():
    try:
        string_i_o_0 = module_1.StringIO()
        play_context_0 = module_2.PlayContext()
        str_0 = '/dev/null'
        connection_process_0 = module_0.ConnectionProcess(string_i_o_0, play_context_0, str_0, str_0)
        var_0 = connection_process_0.start(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        set_0 = set()
        bytes_0 = b'\x85n'
        float_0 = -364.471965
        tuple_0 = (float_0,)
        list_0 = [tuple_0, float_0]
        int_0 = 514
        bool_0 = False
        str_0 = '?'
        str_1 = 'p'
        connection_process_0 = module_0.ConnectionProcess(int_0, bool_0, str_0, str_1)
        bytes_1 = b'\xda\x07\x0e'
        connection_process_1 = module_0.ConnectionProcess(list_0, list_0, connection_process_0, bytes_1)
        var_0 = connection_process_1.connect_timeout(set_0, bytes_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'ansible.cli.scripts.ansible_connection_cli_stub'
        dict_0 = {str_0: str_0}
        int_0 = -263
        int_1 = -272
        bytes_0 = b'_\xafQ3\x16'
        bool_0 = False
        str_1 = 'hu]\t0\x0cZ['
        connection_process_0 = module_0.ConnectionProcess(int_1, bytes_0, bool_0, str_1)
        var_0 = connection_process_0.command_timeout(dict_0, int_0)
    except BaseException:
        pass

def test_case_5():
    try:
        bool_0 = False
        set_0 = set()
        bool_1 = False
        set_1 = {bool_1, bool_1}
        tuple_0 = (set_1, set_1)
        str_0 = 'ELZFpsF]CKhG*e\tU&d,U'
        bytes_0 = b'\x03\x01\xa40\xcb1\x02'
        tuple_1 = (bool_1, tuple_0, str_0, bytes_0)
        bytes_1 = b'\x86\x1d\xc8\xa2='
        str_1 = '__main__'
        connection_process_0 = module_0.ConnectionProcess(bool_1, tuple_1, bytes_1, str_1)
        var_0 = connection_process_0.handler(bool_0, set_0)
    except BaseException:
        pass

def test_case_6():
    try:
        dict_0 = {}
        float_0 = -4535.0
        str_0 = 'u\rZVE$=/'
        connection_process_0 = module_0.ConnectionProcess(dict_0, float_0, str_0, str_0)
        var_0 = connection_process_0.run()
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = '8$S>?)v~uXh$<$PdXD:'
        string_i_o_0 = module_1.StringIO()
        str_1 = '/sys/devices/virtual/dmi/id/board_asset_tag'
        tuple_0 = (str_0,)
        connection_process_0 = module_0.ConnectionProcess(str_0, string_i_o_0, str_1, tuple_0)
        var_0 = connection_process_0.shutdown()
    except BaseException:
        pass

def test_case_8():
    try:
        display_0 = module_3.Display()
        play_context_0 = module_2.PlayContext()
        str_0 = '/dev/null'
        str_1 = ''
        int_0 = 1
        var_0 = None
        play_context_1 = module_2.PlayContext()
        connection_process_0 = module_0.ConnectionProcess(var_0, play_context_1, str_0, str_1, str_1, int_0)
        var_1 = connection_process_0.shutdown()
    except BaseException:
        pass

def test_case_9():
    try:
        display_0 = module_3.Display()
        socket_0 = module_4.socket()
        list_0 = [socket_0, display_0]
        str_0 = '\nQRbg '
        str_1 = '5W}Ox"L3'
        dict_0 = {str_0: socket_0, str_0: socket_0, str_1: str_0}
        connection_0 = module_5.Connection(dict_0)
        list_1 = []
        connection_process_0 = module_0.ConnectionProcess(list_0, dict_0, connection_0, list_1)
        connection_process_1 = module_0.ConnectionProcess(display_0, socket_0, connection_process_0, dict_0)
        list_2 = None
        list_3 = [list_2, list_2]
        str_2 = 'ansible.cli.scripts.ansible_connection_cli_stub'
        connection_1 = module_5.Connection(str_2)
        dict_1 = {}
        play_context_0 = module_2.PlayContext(dict_1)
        str_3 = 'Hq.\n/ez('
        connection_process_2 = module_0.ConnectionProcess(list_3, connection_1, play_context_0, str_3)
        var_0 = connection_process_2.start(connection_process_1)
    except BaseException:
        pass