# Automatically generated by Pynguin.
import ansible.module_utils.api as module_0

def test_case_0():
    pass

def test_case_1():
    var_0 = module_0.rate_limit_argument_spec()

def test_case_2():
    var_0 = module_0.retry_argument_spec()

def test_case_3():
    var_0 = module_0.basic_auth_argument_spec()

def test_case_4():
    var_0 = module_0.rate_limit()

def test_case_5():
    var_0 = module_0.retry()

def test_case_6():
    var_0 = module_0.generate_jittered_backoff()
    var_1 = module_0.basic_auth_argument_spec()
    int_0 = 429
    bytes_0 = b'\xa4>kS\xee\x82\xc2\xd3\x15\xba\x87\xa6\xd1\x86j\xf82j'
    float_0 = -1478.66
    var_2 = module_0.retry_with_delays_and_condition(bytes_0, float_0)
    var_3 = module_0.retry_never(int_0)

def test_case_7():
    str_0 = '}clkS]y7#'
    var_0 = module_0.retry_with_delays_and_condition(str_0)

def test_case_8():
    int_0 = -1391
    var_0 = module_0.generate_jittered_backoff(int_0)
    bytes_0 = b'<5\xfcO\x8a]\xd3'
    var_1 = module_0.generate_jittered_backoff(bytes_0)
    str_0 = 'next'
    var_2 = module_0.retry(str_0)
    int_1 = 1391
    dict_0 = {int_1: int_1, int_1: int_1, int_1: int_1, int_1: int_1}
    tuple_0 = (dict_0,)
    var_3 = module_0.rate_limit(tuple_0)
    var_4 = module_0.generate_jittered_backoff()
    var_5 = module_0.retry()
    list_0 = [var_4, str_0]
    var_6 = module_0.rate_limit(list_0)

def test_case_9():
    var_0 = module_0.retry()
    var_1 = module_0.retry()
    var_2 = module_0.retry_argument_spec()
    bool_0 = True
    int_0 = -2016
    var_3 = module_0.retry_with_delays_and_condition(bool_0, int_0)
    var_4 = module_0.retry()

def test_case_10():
    var_0 = module_0.generate_jittered_backoff()
    var_1 = [i for i in var_0]