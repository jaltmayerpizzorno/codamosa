# Automatically generated by Pynguin.
import ansible.module_utils.facts.hardware.darwin as module_0

def test_case_0():
    try:
        darwin_hardware_collector_0 = module_0.DarwinHardwareCollector()
        dict_0 = {}
        darwin_hardware_collector_1 = module_0.DarwinHardwareCollector()
        darwin_hardware_0 = module_0.DarwinHardware(dict_0, darwin_hardware_collector_1)
        var_0 = darwin_hardware_0.populate()
    except BaseException:
        pass

def test_case_1():
    try:
        bool_0 = False
        int_0 = -1528
        float_0 = 1836.2
        darwin_hardware_0 = module_0.DarwinHardware(float_0)
        tuple_0 = (bool_0, int_0, float_0, darwin_hardware_0)
        darwin_hardware_1 = module_0.DarwinHardware(tuple_0)
        var_0 = darwin_hardware_1.get_system_profile()
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '\ncontent:\n    description: Encoded file content\n    returned: success\n    type: str\n    sample: "MjE3OQo="\nencoding:\n    description: Type of encoding used for file\n    returned: success\n    type: str\n    sample: "base64"\nsource:\n    description: Actual path of file slurped\n    returned: success\n    type: str\n    sample: "/var/run/sshd.pid"\n'
        set_0 = set()
        dict_0 = {str_0: str_0, str_0: str_0, str_0: set_0}
        darwin_hardware_0 = module_0.DarwinHardware(dict_0)
        darwin_hardware_1 = module_0.DarwinHardware(str_0)
        var_0 = darwin_hardware_1.get_mac_facts()
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'8o\xaeH\xd6je?\xc1mg=eY\x9b\x81\\C,V'
        darwin_hardware_collector_0 = module_0.DarwinHardwareCollector(bytes_0)
        darwin_hardware_0 = module_0.DarwinHardware(darwin_hardware_collector_0)
        var_0 = darwin_hardware_0.get_cpu_facts()
    except BaseException:
        pass

def test_case_4():
    try:
        dict_0 = {}
        list_0 = [dict_0, dict_0, dict_0, dict_0]
        darwin_hardware_0 = module_0.DarwinHardware(list_0)
        var_0 = darwin_hardware_0.get_memory_facts()
    except BaseException:
        pass

def test_case_5():
    try:
        bool_0 = True
        darwin_hardware_0 = module_0.DarwinHardware(bool_0)
        var_0 = darwin_hardware_0.get_uptime_facts()
    except BaseException:
        pass