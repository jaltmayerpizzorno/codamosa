# Automatically generated by Pynguin.
import tornado.simple_httpclient as module_0
import tornado.tcpclient as module_1
import tornado.ioloop as module_2
import tornado.httputil as module_3
import datetime as module_4
import tornado.httpclient as module_5
import ssl as module_6
import tornado.netutil as module_7

def test_case_0():
    pass

def test_case_1():
    str_0 = 'KjKg\x0cN|\nT~'
    h_t_t_p_timeout_error_0 = module_0.HTTPTimeoutError(str_0)
    str_1 = h_t_t_p_timeout_error_0.__str__()

def test_case_2():
    str_0 = 'Stream closed'
    h_t_t_p_stream_closed_error_0 = module_0.HTTPStreamClosedError(str_0)
    str_1 = h_t_t_p_stream_closed_error_0.__str__()

def test_case_3():
    str_0 = '`'
    h_t_t_p_stream_closed_error_0 = module_0.HTTPStreamClosedError(str_0)
    str_1 = 'e@]h\x0cpYN5N'
    str_2 = h_t_t_p_stream_closed_error_0.__str__()
    h_t_t_p_stream_closed_error_1 = module_0.HTTPStreamClosedError(str_1)
    str_3 = h_t_t_p_stream_closed_error_1.__str__()
    t_c_p_client_0 = module_1.TCPClient()
    int_0 = 4434
    str_4 = ')7l)13V=\x0c>4\t{G$~;H'
    dict_0 = {}
    i_o_loop_0 = module_2.IOLoop(**dict_0)
    i_o_loop_1 = i_o_loop_0.instance()
    i_o_loop_2 = i_o_loop_1.instance()
    h_t_t_p_headers_0 = module_3.HTTPHeaders()
    timedelta_0 = module_4.timedelta()
    bool_0 = True
    h_t_t_p_request_0 = module_5.HTTPRequest(str_0, str_4, h_t_t_p_headers_0, str_1, int_0, str_0, timedelta_0, str_0, str_0, bool_0, bool_0)
    simple_async_h_t_t_p_client_0 = module_0.SimpleAsyncHTTPClient()
    h_t_t_p_timeout_error_0 = module_0.HTTPTimeoutError(str_1)
    future_0 = None
    simple_async_h_t_t_p_client_1 = module_0.SimpleAsyncHTTPClient(**dict_0)
    simple_async_h_t_t_p_client_1.fetch_impl(h_t_t_p_request_0, future_0)

def test_case_4():
    str_0 = 'e@]h\x0cpYN5N'
    h_t_t_p_stream_closed_error_0 = module_0.HTTPStreamClosedError(str_0)
    str_1 = h_t_t_p_stream_closed_error_0.__str__()
    str_2 = 'iFR\rkhPe-<j3J'
    t_c_p_client_0 = module_1.TCPClient()
    callable_0 = None
    str_3 = ' FU\x0cB-J#KZ'
    str_4 = ')7l;13V=\x0c>4\t{G$~;H'
    none_type_0 = None
    i_o_loop_0 = module_2.IOLoop()
    i_o_loop_1 = i_o_loop_0.instance()
    i_o_loop_2 = i_o_loop_1.instance()
    h_t_t_p_request_0 = module_5.HTTPRequest(str_3, str_2, str_3, str_3, str_4, callable_0, none_type_0, i_o_loop_2)
    simple_async_h_t_t_p_client_0 = module_0.SimpleAsyncHTTPClient()

def test_case_5():
    str_0 = 'e@]h\x0cpYN5N'
    h_t_t_p_stream_closed_error_0 = module_0.HTTPStreamClosedError(str_0)
    str_1 = 'tornado.simple_httpclient'
    str_2 = ''
    h_t_t_p_timeout_error_0 = module_0.HTTPTimeoutError(str_2)
    str_3 = h_t_t_p_timeout_error_0.__str__()
    str_4 = h_t_t_p_stream_closed_error_0.__str__()
    h_t_t_p_headers_0 = module_3.HTTPHeaders()
    h_t_t_p_timeout_error_1 = module_0.HTTPTimeoutError(str_1)
    str_5 = h_t_t_p_timeout_error_1.__str__()
    s_s_l_context_0 = module_6.SSLContext()
    list_0 = []
    i_o_loop_0 = module_2.IOLoop(*list_0)
    executor_0 = None
    callable_0 = None
    awaitable_0 = i_o_loop_0.run_in_executor(executor_0, callable_0, *list_0)
    str_6 = None
    h_t_t_p_stream_closed_error_1 = module_0.HTTPStreamClosedError(str_6)
    simple_async_h_t_t_p_client_0 = module_0.SimpleAsyncHTTPClient()
    resolver_0 = module_7.Resolver()
    dict_0 = {}
    simple_async_h_t_t_p_client_0.initialize(resolver_0, dict_0)

def test_case_6():
    str_0 = 'e@]h\x0cpYN5N'
    h_t_t_p_stream_closed_error_0 = module_0.HTTPStreamClosedError(str_0)
    str_1 = h_t_t_p_stream_closed_error_0.__str__()
    t_c_p_client_0 = module_1.TCPClient()
    dict_0 = {}
    i_o_loop_0 = module_2.IOLoop(**dict_0)
    i_o_loop_1 = i_o_loop_0.instance()
    timedelta_0 = module_4.timedelta()
    simple_async_h_t_t_p_client_0 = module_0.SimpleAsyncHTTPClient()
    simple_async_h_t_t_p_client_0.close()