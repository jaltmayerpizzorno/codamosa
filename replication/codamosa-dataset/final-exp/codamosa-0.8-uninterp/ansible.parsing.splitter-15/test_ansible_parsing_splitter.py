# Automatically generated by Pynguin.
import ansible.parsing.splitter as module_0

def test_case_0():
    pass

def test_case_1():
    str_0 = '$e\x0cUBI-\x0bub'
    var_0 = module_0.parse_kv(str_0)

def test_case_2():
    str_0 = '$7q\nLb7rO@}J}=2BM'
    var_0 = module_0.parse_kv(str_0)

def test_case_3():
    str_0 = 'a=b c="foo bar" "foo bar" \'foo bar\''
    var_0 = module_0.split_args(str_0)

def test_case_4():
    str_0 = 'test "foo={{bar}}" baz=\'{{qux}}\' "foo=\\"{{bar}}\\"" baz=\\\'{{qux}}\\\''
    var_0 = module_0.split_args(str_0)
    var_1 = module_0.join_args(var_0)

def test_case_5():
    bytes_0 = None
    var_0 = module_0.parse_kv(bytes_0)

def test_case_6():
    bytes_0 = b'[\x88\xa9\xb0\x9aD\x14&\x82T!\xb0\x16=\x9d\x94<\xdb('
    var_0 = module_0.parse_kv(bytes_0)

def test_case_7():
    bytes_0 = b'H`\x8c\xc3^\x8d\x08\x1b\xe7\xd5\xa5S\x8e\x13\xc3'
    str_0 = '$R7q\nLb7rO@w}J}=Y2BM'
    set_0 = {bytes_0, str_0}
    var_0 = module_0.parse_kv(str_0, set_0)

def test_case_8():
    str_0 = 'a={{b c \'d e\'}} f=\'g h\' i="{{\'j\' \'k\'}}" l=m\n    n={{o p \'q{{r}}s\'}}'
    var_0 = module_0.split_args(str_0)

def test_case_9():
    str_0 = "a=b c='foo bar'"
    var_0 = module_0.split_args(str_0)
    str_1 = 'a=b {{ a }}={{ b }}'
    var_1 = module_0.split_args(str_1)
    str_2 = 'a=b {{ a }}={{ b }} {% if 1 == 0 %} c=d{% else %} c=d {% endif %}'
    str_3 = '/8\r[\x0b.\tJOX\\rC.'
    var_2 = module_0.parse_kv(str_3)
    var_3 = module_0.split_args(str_2)

def test_case_10():
    str_0 = ' a = 1  b= 2'
    var_0 = module_0.parse_kv(str_0)
    var_1 = module_0.parse_kv(str_0)

def test_case_11():
    str_0 = 'creates=/tmp/foo executable=/bin/bash removes=/tmp/bar warn=no c=/tmp/baz d=/tmp/qux'
    bool_0 = True
    var_0 = module_0.parse_kv(str_0, bool_0)

def test_case_12():
    str_0 = 'a=b c="foo bar"'
    var_0 = module_0.split_args(str_0)
    str_1 = 'a=b c=foo\nbar d=baz'
    var_1 = module_0.split_args(str_1)
    str_2 = 'a="{{ foo }}" c="foo\nbar"'
    var_2 = module_0.split_args(str_2)

def test_case_13():
    str_0 = 'a=b {{ a }}={{ b }}'
    var_0 = module_0.split_args(str_0)
    var_1 = module_0.join_args(str_0)

def test_case_14():
    str_0 = 'a=1 b=2'
    var_0 = module_0.parse_kv(str_0)
    str_1 = ' a = 1 c z\x0c \\'
    var_1 = module_0.parse_kv(str_1)

def test_case_15():
    str_0 = "a*b c='foo bar'"
    var_0 = module_0.split_args(str_0)
    str_1 = '!1~W4r\x0b'
    var_1 = module_0.split_args(str_1)
    str_2 = 'a=b {{ a }}={{ b }} {% if 1 == 0 %} c=d{% else %} c=d {% endif %}'
    var_2 = module_0.split_args(str_2)