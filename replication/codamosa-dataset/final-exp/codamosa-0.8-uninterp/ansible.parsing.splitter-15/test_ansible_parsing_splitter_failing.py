# Automatically generated by Pynguin.
import ansible.parsing.splitter as module_0

def test_case_0():
    try:
        int_0 = -3359
        var_0 = module_0.parse_kv(int_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '@}&\t$|{%w\tt{=mAL'
        int_0 = 172
        var_0 = module_0.parse_kv(str_0, int_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'a=b c="foo bar" "foo bar" \'foo barM'
        var_0 = module_0.split_args(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = ' '
        str_1 = ' j Qn]{\n{sR\t>Y*%]j'
        var_0 = module_0.split_args(str_1)
        var_1 = module_0.parse_kv(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'bar'
        str_1 = 'foo="bar"'
        bytes_0 = b'=[\xab\xa4'
        var_0 = module_0.parse_kv(bytes_0)
        var_1 = module_0.parse_kv(str_1)
        var_2 = dict(foo=str_0)
        str_2 = "foo='bar'"
        var_3 = dict(foo=str_0)
        var_4 = module_0.parse_kv(str_0)
        var_5 = module_0.parse_kv(bytes_0)
        var_6 = dict(foo=var_3)
        str_3 = "foo'6ar az'"
        var_7 = module_0.parse_kv(str_2)
        var_8 = module_0.parse_kv(str_3)
        str_4 = 'fo=#ar baz'
        var_9 = module_0.parse_kv(str_4)
        str_5 = 'B8\nS2\x0cQG1k.X6+mf>'
        str_6 = ''
        var_10 = module_0.parse_kv(str_5, str_6)
        var_11 = dict(_raw_params=var_5)
        var_12 = module_0.parse_kv(str_3)
        bool_0 = True
        str_7 = '77J|4VVP>Sh#}a\ngt'
        var_13 = module_0.parse_kv(str_7)
        tuple_0 = (bool_0,)
        var_14 = module_0.parse_kv(tuple_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'Zhu35\x0bH>TUTrbj3{{HQU'
        var_0 = module_0.split_args(str_0)
    except BaseException:
        pass