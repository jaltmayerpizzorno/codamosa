# Automatically generated by Pynguin.
import ansible.modules.subversion as module_0

def test_case_0():
    try:
        str_0 = '/tmp/test'
        bool_0 = False
        subversion_0 = module_0.Subversion(str_0, str_0, str_0, str_0, str_0, str_0, str_0, bool_0)
        var_0 = subversion_0.is_svn_repo()
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '/tmp/test'
        bool_0 = False
        subversion_0 = module_0.Subversion(bool_0, str_0, bool_0, bool_0, bool_0, bool_0, bool_0, bool_0)
        var_0 = subversion_0.is_svn_repo()
    except BaseException:
        pass

def test_case_2():
    try:
        tuple_0 = ()
        float_0 = -2689.5123
        str_0 = 'SjFh'
        list_0 = []
        set_0 = {str_0, tuple_0, float_0, tuple_0}
        dict_0 = {}
        bool_0 = False
        list_1 = [float_0]
        subversion_0 = module_0.Subversion(str_0, float_0, list_0, set_0, str_0, dict_0, bool_0, list_1)
        var_0 = subversion_0.checkout(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = "5X`/&'f 1"
        float_0 = 159.816
        list_0 = [str_0, float_0, str_0]
        bool_0 = False
        float_1 = 870.424365
        bool_1 = True
        str_1 = 'ansible.modules.subversion'
        str_2 = '3:'
        subversion_0 = module_0.Subversion(list_0, bool_0, float_0, float_0, float_1, bool_1, str_1, str_2)
        str_3 = '-8E,d{pp|\tDf\\lSM[9l['
        str_4 = 'b=`\rZK'
        str_5 = 'Nt\r$){\t\tv/W?\x0cu/gQBL'
        bool_2 = False
        subversion_1 = module_0.Subversion(str_0, float_0, subversion_0, str_3, str_4, str_5, bool_2, str_1)
        str_6 = 'H$dwno_5C>0}K_'
        set_0 = {str_6, str_0}
        bytes_0 = b'$\xd7\x16\x8c!\x9emz\x86'
        bool_3 = True
        bool_4 = True
        str_7 = 'JLxEXWwuK_c&m7i&/[e'
        bool_5 = False
        list_1 = []
        int_0 = 300
        float_2 = 5615.8608
        str_8 = ' 32\t\n9'
        str_9 = 'Nh]7ZJn@d'
        str_10 = 'ansible.modules.subversion'
        subversion_2 = module_0.Subversion(list_1, int_0, str_0, float_2, str_8, bool_5, str_9, str_10)
        int_1 = True
        subversion_3 = module_0.Subversion(subversion_2, list_1, bool_3, bool_3, list_1, float_2, bool_5, int_1)
        subversion_4 = module_0.Subversion(bool_3, bool_4, set_0, str_7, bool_5, subversion_3, subversion_2, list_1)
        dict_0 = {str_7: str_6, bytes_0: bytes_0, bool_3: str_6, float_2: str_10}
        tuple_0 = (subversion_2, bool_3)
        subversion_5 = module_0.Subversion(set_0, bytes_0, subversion_4, dict_0, subversion_3, bool_4, tuple_0, subversion_2)
        var_0 = subversion_5.export(subversion_1)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'X% wKka:c/t}/^'
        dict_0 = {str_0: str_0}
        str_1 = ''
        tuple_0 = (str_1,)
        str_2 = 'Failed to remove service. rc: %s, out: %s, err: %s'
        bytes_0 = b'\x1b\xa0\xe5\xa5j\xe5Di\xb8\xec\xe0D\xe2\x92\x1e\x81`'
        subversion_0 = module_0.Subversion(str_0, dict_0, tuple_0, tuple_0, dict_0, str_0, str_2, bytes_0)
        str_3 = 'o+KHQh37.LN,Q2'
        str_4 = "5\rD7K_1%q$G'\\e tf\\% "
        str_5 = "'a?#ETwI/' 0a:\tpq?UZ"
        subversion_1 = module_0.Subversion(subversion_0, bytes_0, str_3, str_4, subversion_0, str_5, bytes_0, subversion_0)
        var_0 = subversion_1.switch()
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'ieHd_?'
        int_0 = -2901
        float_0 = 0.0001
        float_1 = -4543.1925
        bytes_0 = b'\xf1\x04\xf7\xf7[\xb8}W\xea\x97('
        list_0 = None
        dict_0 = {str_0: int_0, float_0: int_0, list_0: list_0}
        int_1 = 250
        tuple_0 = (list_0,)
        dict_1 = {float_0: dict_0, bytes_0: int_0, tuple_0: list_0, list_0: float_1}
        bool_0 = True
        subversion_0 = module_0.Subversion(list_0, tuple_0, dict_0, list_0, dict_0, dict_1, dict_0, bool_0)
        str_1 = '\n%z\t}4@"6Nn4Lt#Ya8b0'
        subversion_1 = module_0.Subversion(float_0, float_1, bytes_0, list_0, dict_0, int_1, subversion_0, str_1)
        tuple_1 = (subversion_1,)
        bool_1 = False
        bool_2 = True
        set_0 = {tuple_1, float_0, int_1}
        subversion_2 = module_0.Subversion(str_0, int_0, tuple_1, bool_1, bool_2, set_0, bool_0, tuple_0)
        int_2 = 420
        str_2 = '2~ On'
        subversion_3 = module_0.Subversion(subversion_2, list_0, bytes_0, int_2, str_2, tuple_1, float_1, bool_0)
        var_0 = subversion_3.revert()
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'containerd'
        bool_0 = False
        subversion_0 = module_0.Subversion(str_0, str_0, str_0, str_0, str_0, str_0, str_0, bool_0)
        var_0 = subversion_0.get_revision()
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = "5X`/&'f 1"
        float_0 = -489.316083
        tuple_0 = ()
        set_0 = {tuple_0, str_0, tuple_0, str_0}
        int_0 = 1860
        subversion_0 = module_0.Subversion(str_0, float_0, str_0, tuple_0, float_0, set_0, str_0, int_0)
        var_0 = subversion_0.get_remote_revision()
    except BaseException:
        pass

def test_case_8():
    try:
        bool_0 = False
        str_0 = "'7Ws0WHzL>-W>L"
        bool_1 = True
        dict_0 = {str_0: bool_1, str_0: bool_0, bool_0: str_0, bool_0: bool_1}
        int_0 = -127
        tuple_0 = (str_0, bool_1, dict_0, int_0)
        str_1 = 'GeyMc^38\\qDp%UZ/rr'
        list_0 = []
        str_2 = "4Nu\x0b'%-PT`DMuQj_X"
        str_3 = 'Platform does not have a selector'
        bytes_0 = b'V!\xf6'
        str_4 = 'Iard\nG'
        float_0 = -429.11727
        str_5 = '\n        Reads the connection property for the host, and returns the\n        correct connection object from the list of connection plugins\n        '
        float_1 = 1025.11
        float_2 = 60.0
        subversion_0 = module_0.Subversion(dict_0, bytes_0, str_5, bytes_0, list_0, float_1, tuple_0, float_2)
        str_6 = 'ansible.modules.subversion'
        bool_2 = True
        subversion_1 = module_0.Subversion(bytes_0, str_4, float_0, subversion_0, str_6, dict_0, subversion_0, bool_2)
        subversion_2 = module_0.Subversion(int_0, str_2, list_0, bool_1, str_3, subversion_1, tuple_0, tuple_0)
        subversion_3 = module_0.Subversion(bool_0, tuple_0, tuple_0, tuple_0, str_1, bool_1, list_0, subversion_2)
        var_0 = subversion_3.has_local_mods()
    except BaseException:
        pass

def test_case_9():
    try:
        float_0 = -4279.562059
        bytes_0 = b'{\xfe\x9eO\xf8\xddf\xceAc/\xdbe'
        bool_0 = False
        set_0 = {bool_0, float_0, float_0, float_0}
        tuple_0 = (set_0, set_0)
        str_0 = 'tDn'
        bool_1 = True
        float_1 = 1562.848084
        subversion_0 = module_0.Subversion(float_0, bytes_0, tuple_0, str_0, tuple_0, bool_1, float_1, tuple_0)
        var_0 = subversion_0.needs_update()
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = '__main__'
        bool_0 = True
        subversion_0 = module_0.Subversion(str_0, str_0, str_0, str_0, str_0, str_0, str_0, bool_0)
        var_0 = subversion_0.is_svn_repo()
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = 'IYB\x0cv.s*?P("FsSaW$'
        dict_0 = None
        str_1 = None
        tuple_0 = (dict_0, str_1)
        set_0 = {str_0}
        str_2 = 'aUV~d}$o,yj\t'
        bool_0 = False
        int_0 = 5985
        str_3 = 'ansible.modules.subversion'
        str_4 = 'A@2-B~KTb @<j'
        subversion_0 = module_0.Subversion(str_2, bool_0, int_0, str_3, dict_0, dict_0, tuple_0, str_4)
        bytes_0 = b'\xd5\x80\x97c\xfcbU\x0e7\xc2\xc6&/B'
        str_5 = 'SEE ALSO:'
        float_0 = 1252.0
        bytes_1 = b'\x14\x08\xb1X\x93\xb7\x88\xf3\x9f\x81QX\xbe\x91=\xb0\xff\xe0f\x8c'
        subversion_1 = module_0.Subversion(set_0, dict_0, bytes_0, str_5, float_0, bytes_1, dict_0, subversion_0)
        var_0 = subversion_1.checkout(bool_0)
    except BaseException:
        pass

def test_case_12():
    try:
        dict_0 = {}
        str_0 = 'Y1[fH/d>auP`\rb\t"9'
        int_0 = 1616
        tuple_0 = (int_0,)
        bytes_0 = b'Z'
        list_0 = [int_0, bytes_0, tuple_0]
        bytes_1 = b"\x1f'\x14\x82\xca\xe1\xe1\xc7\xecmO\xdbo"
        int_1 = 32601
        str_1 = ':`:xQ'
        str_2 = 'm'
        str_3 = '3"'
        subversion_0 = module_0.Subversion(dict_0, bytes_1, list_0, str_0, int_1, str_1, str_2, str_3)
        str_4 = 'ansible.modules.subversion'
        float_0 = 512.0
        subversion_1 = module_0.Subversion(tuple_0, list_0, subversion_0, list_0, bytes_0, str_4, float_0, tuple_0)
        var_0 = subversion_1.export()
    except BaseException:
        pass

def test_case_13():
    try:
        dict_0 = None
        str_0 = None
        tuple_0 = (dict_0, str_0)
        float_0 = -275.44
        str_1 = 'aUV~d}$o,yj\t'
        bool_0 = False
        int_0 = 443
        str_2 = '4D;|xLt'
        list_0 = [float_0, bool_0, float_0, str_1]
        bytes_0 = b'\x81\xb4\xc2\x03\x17\x82\xf0)k\x04\x82\xd7n\x11'
        bool_1 = False
        str_3 = 'xYa.{88K'
        str_4 = 'N\t9b^6TT .324vq~HS.'
        subversion_0 = module_0.Subversion(bytes_0, bytes_0, bool_1, list_0, bool_1, str_3, str_4, int_0)
        str_5 = 'Lr|MRm~,/_\ny@)@r@'
        str_6 = 'UB\r'
        str_7 = 'AO6V'
        subversion_1 = module_0.Subversion(bytes_0, dict_0, dict_0, subversion_0, str_5, str_6, str_7, str_0)
        bool_2 = True
        bytes_1 = b'hrTX\xce\x87\xb2\xafjC\x11\x04z86'
        subversion_2 = module_0.Subversion(int_0, tuple_0, str_2, tuple_0, list_0, subversion_1, bool_2, bytes_1)
        var_0 = subversion_2.update()
    except BaseException:
        pass