# Automatically generated by Pynguin.
import flutes.structure as module_0

def test_case_0():
    try:
        bool_0 = None
        var_0 = module_0.no_map_instance(bool_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '1m@l^Ng'
        list_0 = [str_0, str_0, str_0, str_0]
        tuple_0 = (list_0,)
        var_0 = module_0.map_structure(str_0, tuple_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b''
        var_0 = module_0.map_structure(bytes_0, bytes_0)
    except BaseException:
        pass

def test_case_3():
    try:
        float_0 = -285.0604
        bytes_0 = b'\xf8\nR\xf5\x1dhX'
        var_0 = module_0.map_structure_zip(float_0, bytes_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'K7ZEq\\0D.'
        var_0 = module_0.no_map_instance(str_0)
        type_0 = None
        module_0.register_no_map_class(type_0)
        set_0 = {str_0, var_0, var_0, var_0}
        var_1 = module_0.no_map_instance(set_0)
        list_0 = [var_1]
        bool_0 = True
        var_2 = module_0.map_structure(bool_0, list_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = ''
        int_0 = None
        dict_0 = {int_0: int_0, int_0: str_0}
        var_0 = module_0.map_structure(str_0, dict_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'K7Z.Eq\\0D'
        var_0 = module_0.no_map_instance(str_0)
        type_0 = None
        module_0.register_no_map_class(type_0)
        set_0 = {str_0, var_0, var_0, var_0}
        var_1 = module_0.no_map_instance(set_0)
        dict_0 = {}
        list_0 = [var_1]
        str_1 = 'mpGQueee[Event]'
        float_0 = -1619.089
        tuple_0 = (str_1, float_0)
        int_0 = 2
        dict_1 = {int_0: type_0, type_0: dict_0, int_0: list_0}
        bytes_0 = b"_\xbb\x03\r\xd8\xbc\x10\xe5\x89\xb2\x11'0\xce\x80"
        list_1 = [set_0, bytes_0]
        list_2 = [tuple_0, list_1, tuple_0]
        var_2 = module_0.map_structure_zip(dict_1, list_2)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'hello'
        str_1 = 'hi'
        str_2 = 'bye'
        str_3 = [str_0, str_1, str_2]
        str_4 = 'olleh'
        str_5 = 'ih'
        str_6 = 'eyb'
        str_7 = [str_4, str_5, str_6]
        var_0 = lambda *xs: var_6.join(xs)
        str_8 = [str_3, str_7]
        var_1 = module_0.map_structure_zip(var_0, str_8)
    except BaseException:
        pass

def test_case_8():
    try:
        list_0 = []
        list_1 = [list_0, list_0]
        var_0 = module_0.map_structure_zip(list_0, list_1)
        module_0.register_no_map_class(list_1)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'K7Z.Eq\\0D'
        var_0 = module_0.no_map_instance(str_0)
        type_0 = None
        module_0.register_no_map_class(type_0)
        set_0 = {str_0, var_0, var_0, var_0}
        var_1 = module_0.no_map_instance(set_0)
        list_0 = [var_1]
        str_1 = '\t0\nb'
        list_1 = [list_0, str_1]
        var_2 = module_0.map_structure_zip(list_0, list_1)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = 'KwZEq\\0D.'
        int_0 = None
        module_0.register_no_map_class(int_0)
        var_0 = module_0.no_map_instance(str_0)
        bytes_0 = b'E'
        dict_0 = {str_0: bytes_0, bytes_0: str_0}
        list_0 = [dict_0]
        var_1 = module_0.map_structure_zip(bytes_0, list_0)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = 'K7Z.Eq\\0D'
        var_0 = module_0.no_map_instance(str_0)
        type_0 = None
        module_0.register_no_map_class(type_0)
        set_0 = {str_0, var_0, var_0, var_0}
        var_1 = module_0.no_map_instance(set_0)
        bool_0 = True
        var_2 = None
        list_0 = [set_0, var_2, var_2, var_2]
        var_3 = module_0.map_structure_zip(bool_0, list_0)
    except BaseException:
        pass