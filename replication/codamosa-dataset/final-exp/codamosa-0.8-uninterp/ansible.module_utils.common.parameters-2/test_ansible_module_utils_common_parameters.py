# Automatically generated by Pynguin.
import ansible.module_utils.common.parameters as module_0

def test_case_0():
    pass

def test_case_1():
    float_0 = 0.0001
    dict_0 = {float_0: float_0, float_0: float_0}
    var_0 = module_0.remove_values(float_0, dict_0)

def test_case_2():
    str_0 = 'H@(7O8;lT(K^~xN'
    list_0 = [str_0, str_0]
    bytes_0 = b'w\xb1\xd3C\x00\r\xee'
    var_0 = module_0.remove_values(list_0, bytes_0)

def test_case_3():
    bytes_0 = b'\x87\xe9\xc3\x89\x0e\xb7r'
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    var_0 = module_0.remove_values(bytes_0, dict_0)

def test_case_4():
    str_0 = 'l2SlT{'
    set_0 = {str_0}
    bytes_0 = b'\x8c'
    var_0 = module_0.remove_values(set_0, bytes_0)

def test_case_5():
    str_0 = '0sV{%y+(6t;'
    var_0 = module_0.remove_values(str_0, str_0)

def test_case_6():
    str_0 = '\x0bsV{%y+(<.;'
    str_1 = None
    var_0 = module_0.remove_values(str_1, str_0)

def test_case_7():
    bool_0 = None
    bytes_0 = b'g\n\xfc'
    tuple_0 = ()
    str_0 = '1\x0c@-q\t#nM.o].]A'
    str_1 = 'W1qvdSNRO=cU8RYj'
    tuple_1 = (bool_0, bytes_0, tuple_0, str_1)
    list_0 = []
    list_1 = [tuple_1, tuple_0, str_0, list_0]
    tuple_2 = (list_1,)
    list_2 = []
    var_0 = module_0.remove_values(tuple_2, list_2)

def test_case_8():
    bytes_0 = b'\x10to\x01\xed\xe9K%m\x11\xc1lE'
    str_0 = '\n        Fetch the list of items specified.\n        '
    var_0 = module_0.remove_values(bytes_0, str_0)
    float_0 = 0.0001
    dict_0 = {float_0: float_0, float_0: float_0}
    var_1 = module_0.remove_values(float_0, dict_0)

def test_case_9():
    dict_0 = {}
    list_0 = [dict_0]
    str_0 = "Kerberos auth failure when calling kinit cmd '%s': %s"
    var_0 = module_0.sanitize_keys(list_0, str_0)

def test_case_10():
    str_0 = 'BvRk3)|v\t.'
    set_0 = {str_0}
    str_1 = '<'
    var_0 = module_0.sanitize_keys(set_0, str_0, str_1)

def test_case_11():
    bool_0 = True
    str_0 = 'force_basic_auth'
    bytes_0 = b's\xfd\xfc'
    str_1 = 't6xc'
    var_0 = module_0.remove_values(bytes_0, str_1)
    var_1 = module_0.remove_values(bool_0, str_0)
    str_2 = 'type_debug'
    list_0 = [bytes_0]
    str_3 = 'Do a full clone, instead of a shallow one.'
    dict_0 = {str_2: list_0, str_2: var_0, str_1: list_0, str_3: str_0}
    tuple_0 = ()
    var_2 = module_0.sanitize_keys(dict_0, tuple_0)

def test_case_12():
    dict_0 = {}
    bytes_0 = b'J\x11\xda\x11\xb1'
    var_0 = module_0.remove_values(dict_0, bytes_0)

def test_case_13():
    str_0 = 'H@(7O8;lT(+K^~xN'
    list_0 = [str_0, str_0]
    str_1 = '?J"\x0bc{wM'
    dict_0 = {str_1: str_0}
    var_0 = module_0.remove_values(dict_0, list_0)
    bytes_0 = b'\xda\xd2j\xb8\x99RG\x93!F\xf2'
    var_1 = module_0.sanitize_keys(bytes_0, bytes_0)

def test_case_14():
    str_0 = 'key_with_no_log_value_as_prefix'
    str_1 = 'key_with_no_log_value'
    str_2 = 'key_with_no_log_value_as_suffix'
    str_3 = 'some_value'
    str_4 = {str_0: str_3, str_1: str_3, str_2: str_3}
    str_5 = 'value'
    str_6 = [str_5]
    var_0 = frozenset(str_6)
    var_1 = module_0.sanitize_keys(str_4, var_0)

def test_case_15():
    bool_0 = False
    set_0 = set()
    str_0 = 'uslk-w01l7\tk-x'
    int_0 = 1000
    var_0 = module_0.sanitize_keys(int_0, set_0)
    list_0 = []
    tuple_0 = ()
    dict_0 = {str_0: bool_0, str_0: list_0, str_0: tuple_0, str_0: tuple_0}
    var_1 = module_0.remove_values(set_0, dict_0)
    var_2 = module_0.remove_values(str_0, dict_0)
    var_3 = module_0.sanitize_keys(bool_0, var_1)
    dict_1 = {str_0: var_3, str_0: dict_0}
    var_4 = module_0.set_fallbacks(dict_1, dict_1)

def test_case_16():
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0}
    str_0 = 'uslk-w01l7\tk-x'
    list_0 = []
    tuple_0 = ()
    dict_0 = {str_0: bool_0, str_0: list_0, str_0: tuple_0, str_0: tuple_0}
    var_0 = module_0.remove_values(set_0, dict_0)
    var_1 = module_0.remove_values(str_0, dict_0)
    var_2 = module_0.sanitize_keys(bool_0, var_0)
    int_0 = 5
    bytes_0 = b'\xf5\x15\xc2\x96\x13i#Q\xa5\xf9\xc9d?\xe2r\xac\xc4'
    str_1 = 'FIN_WAIT2'
    tuple_1 = (bytes_0, str_1)
    var_3 = module_0.sanitize_keys(dict_0, tuple_1)
    var_4 = module_0.remove_values(tuple_1, tuple_0)
    var_5 = module_0.remove_values(int_0, tuple_1)
    dict_1 = {str_0: var_2, str_0: dict_0}
    var_6 = module_0.set_fallbacks(dict_1, set_0)

def test_case_17():
    str_0 = 'key1'
    str_1 = 'key2'
    str_2 = 'key3'
    str_3 = 'value1'
    str_4 = 'value2'
    str_5 = 'value3'
    str_6 = {str_0: str_3, str_1: str_4, str_2: str_5}
    str_7 = [str_3, str_4, str_5]
    str_8 = (str_3, str_4, str_5)
    var_0 = frozenset(str_8)
    str_9 = {str_3}
    var_1 = module_0.remove_values(str_6, str_9)
    str_10 = {str_3}
    var_2 = module_0.remove_values(str_7, str_10)
    str_11 = {str_3}
    var_3 = module_0.remove_values(var_0, str_11)