# Automatically generated by Pynguin.
import ansible.module_utils.facts.network.darwin as module_0

def test_case_0():
    try:
        bytes_0 = b'\xb5&A!\xb3\xc9\xbe_ \xfd\x1b'
        int_0 = 645
        float_0 = None
        bytes_1 = b'R\x17\xb8'
        darwin_network_0 = module_0.DarwinNetwork(bytes_1)
        var_0 = darwin_network_0.parse_media_line(bytes_0, int_0, float_0)
    except BaseException:
        pass

def test_case_1():
    try:
        darwin_network_collector_0 = module_0.DarwinNetworkCollector()
        tuple_0 = ()
        float_0 = 2187.831356
        darwin_network_0 = module_0.DarwinNetwork(float_0)
        str_0 = 'q{'
        darwin_network_1 = module_0.DarwinNetwork(str_0)
        darwin_network_collector_1 = module_0.DarwinNetworkCollector()
        dict_0 = {}
        int_0 = 12
        darwin_network_collector_2 = module_0.DarwinNetworkCollector()
        darwin_network_2 = module_0.DarwinNetwork(darwin_network_collector_2)
        var_0 = darwin_network_2.parse_media_line(str_0, dict_0, int_0)
        set_0 = {tuple_0}
        darwin_network_3 = module_0.DarwinNetwork(tuple_0, set_0)
        darwin_network_collector_3 = module_0.DarwinNetworkCollector()
        list_0 = []
        var_1 = darwin_network_2.parse_media_line(list_0, str_0, darwin_network_collector_1)
    except BaseException:
        pass