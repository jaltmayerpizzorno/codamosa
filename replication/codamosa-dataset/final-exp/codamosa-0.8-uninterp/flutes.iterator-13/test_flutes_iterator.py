# Automatically generated by Pynguin.
import flutes.iterator as module_0

def test_case_0():
    int_0 = 5
    var_0 = range(int_0)
    lazy_list_0 = module_0.LazyList(var_0)
    var_1 = list(lazy_list_0)

def test_case_1():
    int_0 = 23
    list_0 = [int_0]
    range_0 = module_0.Range(*list_0)
    var_0 = range_0.__getitem__(int_0)

def test_case_2():
    int_0 = -51
    list_0 = [int_0]
    range_0 = module_0.Range(*list_0)
    int_1 = range_0.__len__()
    bool_0 = False
    var_0 = range_0.__getitem__(bool_0)

def test_case_3():
    str_0 = 'c$_udx+aE)>3rd'
    tuple_0 = ()
    lazy_list_0 = module_0.LazyList(tuple_0)
    map_list_0 = module_0.MapList(str_0, lazy_list_0)
    iterator_0 = map_list_0.__iter__()

def test_case_4():
    int_0 = 179
    str_0 = 'map_async'
    list_0 = [str_0]
    var_0 = module_0.scanr(int_0, list_0)

def test_case_5():
    int_0 = 5
    var_0 = range(int_0)
    lazy_list_0 = module_0.LazyList(var_0)
    var_1 = list(lazy_list_0)
    list_0 = [int_0]
    range_0 = module_0.Range(*list_0)
    iterator_0 = range_0.__iter__()

def test_case_6():
    int_0 = 0
    int_1 = 10
    var_0 = range(int_1)
    iterator_0 = module_0.take(int_0, var_0)
    var_1 = list(iterator_0)
    var_2 = len(var_1)
    int_2 = 5
    var_3 = range(int_2)
    iterator_1 = module_0.take(int_2, var_3)
    var_4 = list(iterator_1)
    var_5 = len(var_4)
    var_6 = range(int_1)
    iterator_2 = module_0.take(int_2, var_6)
    var_7 = list(iterator_2)
    var_8 = len(var_7)
    var_9 = range(int_0)
    iterator_3 = module_0.take(int_2, var_9)
    var_10 = list(iterator_3)
    var_11 = len(var_10)
    var_12 = range(int_0)
    iterator_4 = module_0.take(int_0, var_12)
    var_13 = list(iterator_4)

def test_case_7():
    bool_0 = True
    str_0 = '.'
    iterator_0 = module_0.split_by(str_0, bool_0, separator=str_0)
    var_0 = list(iterator_0)

def test_case_8():
    int_0 = -16
    var_0 = lambda x: x % int_0 == int_0
    str_0 = ' Split by: '
    bool_0 = True
    iterator_0 = module_0.split_by(str_0, bool_0, separator=str_0)
    var_1 = list(iterator_0)

def test_case_9():
    int_0 = 100000
    var_0 = range(int_0)
    lazy_list_0 = module_0.LazyList(var_0)
    var_1 = list(lazy_list_0)
    var_2 = lazy_list_0.__len__()
    var_3 = lazy_list_0[int_0:]
    var_4 = list(var_3)

def test_case_10():
    int_0 = 3
    var_0 = lambda x: x % int_0 == int_0
    bool_0 = False
    str_0 = '.'
    iterator_0 = module_0.split_by(str_0, bool_0, separator=str_0)
    var_1 = list(iterator_0)

def test_case_11():
    int_0 = 35
    var_0 = range(int_0)
    lazy_list_0 = module_0.LazyList(var_0)
    var_1 = list(lazy_list_0)
    var_2 = lazy_list_0.__len__()

def test_case_12():
    int_0 = 0
    int_1 = 1000
    var_0 = range(int_1)
    iterator_0 = module_0.drop(int_0, var_0)
    var_1 = list(iterator_0)[int_0]

def test_case_13():
    int_0 = 2
    var_0 = range(int_0)
    iterator_0 = module_0.drop(int_0, var_0)
    var_1 = list(iterator_0)
    int_1 = 100
    var_2 = []
    iterator_1 = module_0.drop(int_1, var_2)
    var_3 = list(iterator_1)
    var_4 = range(int_0)
    iterator_2 = module_0.drop(int_1, var_4)
    int_2 = 0
    int_3 = [int_2]
    iterator_3 = module_0.drop(int_1, int_3)
    var_5 = list(iterator_3)

def test_case_14():
    int_0 = 5
    var_0 = range(int_0)
    lazy_list_0 = module_0.LazyList(var_0)
    var_1 = iter(lazy_list_0)
    var_2 = list(var_1)

def test_case_15():
    var_0 = lambda x: x * x
    int_0 = 1
    int_1 = 2
    int_2 = 3
    int_3 = 348
    int_4 = 5
    int_5 = [int_0, int_1, int_2, int_3, int_4]
    map_list_0 = module_0.MapList(var_0, int_5)
    var_1 = slice(int_1, int_4, int_1)
    var_2 = map_list_0[var_1]
    var_3 = lambda x: x

def test_case_16():
    int_0 = 6959
    var_0 = range(int_0)
    lazy_list_0 = module_0.LazyList(var_0)
    var_1 = list(lazy_list_0)
    var_2 = lazy_list_0.__iter__()

def test_case_17():
    int_0 = -39
    list_0 = [int_0]
    range_0 = module_0.Range(*list_0)
    var_0 = range_0.__getitem__(int_0)

def test_case_18():
    var_0 = lambda s, x: x + s
    str_0 = 'a'
    str_1 = 'b'
    str_2 = 'c'
    str_3 = 'd'
    str_4 = [str_0, str_1, str_2, str_3]
    var_1 = module_0.scanl(var_0, str_4)
    var_2 = lambda s, x: x + s
    var_3 = lambda s, x: s * x
    int_0 = 2
    int_1 = 3
    int_2 = 7
    int_3 = [int_0, int_1, int_2, int_2]
    var_4 = module_0.scanl(var_3, int_3)
    var_5 = list(var_4)

def test_case_19():
    int_0 = 5
    int_1 = -1225
    var_0 = range(int_1)
    iterator_0 = module_0.drop_until(int_0, var_0)
    var_1 = list(iterator_0)