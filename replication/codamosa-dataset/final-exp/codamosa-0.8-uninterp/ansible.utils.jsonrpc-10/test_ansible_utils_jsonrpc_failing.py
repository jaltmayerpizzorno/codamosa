# Automatically generated by Pynguin.
import ansible.utils.jsonrpc as module_0

def test_case_0():
    try:
        json_rpc_server_0 = module_0.JsonRpcServer()
        bytes_0 = b'{"jsonrpc": "2.0", "method": "rpc.foo", "params": [], "id": 1}'
        var_0 = json_rpc_server_0.handle_request(bytes_0)
    except BaseException:
        pass

def test_case_1():
    try:
        json_rpc_server_0 = module_0.JsonRpcServer()
        list_0 = [json_rpc_server_0]
        json_rpc_server_1 = module_0.JsonRpcServer()
        var_0 = json_rpc_server_1.register(list_0)
    except BaseException:
        pass

def test_case_2():
    try:
        json_rpc_server_0 = module_0.JsonRpcServer()
        str_0 = '{"method": "test_args_pos", "id": 1, "jsonrpc": "2.0", "params": [1, "a"]}'
        var_0 = json_rpc_server_0.handle_request(str_0)
        var_1 = json_rpc_server_0.parse_error()
    except BaseException:
        pass

def test_case_3():
    try:
        json_rpc_server_0 = module_0.JsonRpcServer()
        var_0 = json_rpc_server_0.invalid_params()
    except BaseException:
        pass

def test_case_4():
    try:
        json_rpc_server_0 = module_0.JsonRpcServer()
        var_0 = json_rpc_server_0.internal_error()
    except BaseException:
        pass

def test_case_5():
    try:
        json_rpc_server_0 = module_0.JsonRpcServer()
        bytes_0 = b'{"jsonrpc":"2.0","method":"test", "params": {"test": "test"}}'
        var_0 = json_rpc_server_0.handle_request(bytes_0)
    except BaseException:
        pass

def test_case_6():
    try:
        json_rpc_server_0 = module_0.JsonRpcServer()
        str_0 = 'hello world'
        var_0 = json_rpc_server_0.register(str_0)
        str_1 = '{"params": [], "method": "__call__", "jsonrpc": "2.0", "id": 1}'
        var_1 = json_rpc_server_0.handle_request(str_1)
    except BaseException:
        pass