# Automatically generated by Pynguin.
import ansible.utils.jsonrpc as module_0
import json as module_1

def test_case_0():
    pass

def test_case_1():
    json_rpc_server_0 = module_0.JsonRpcServer()
    str_0 = '_identifier'
    var_0 = setattr(json_rpc_server_0, str_0, str_0)
    var_1 = json_rpc_server_0.response(str_0)

def test_case_2():
    json_rpc_server_0 = module_0.JsonRpcServer()
    str_0 = '{"method": "test_args_key", "id": 1, "jsonrpc": "2.0", "params": {"a": 1, "b": "a"}}'
    var_0 = json_rpc_server_0.handle_request(str_0)

def test_case_3():
    json_rpc_server_0 = module_0.JsonRpcServer()
    str_0 = '_identifier'
    var_0 = setattr(json_rpc_server_0, str_0, str_0)
    var_1 = json_rpc_server_0.response()

def test_case_4():
    json_rpc_server_0 = module_0.JsonRpcServer()
    str_0 = '_identifier'
    str_1 = 'a'
    var_0 = setattr(json_rpc_server_0, str_0, str_1)
    int_0 = 1
    str_2 = 'test_message'
    str_3 = 'test_data'
    var_1 = json_rpc_server_0.error(int_0, str_2, str_3)

def test_case_5():
    json_rpc_server_0 = module_0.JsonRpcServer()
    str_0 = '_identifier'
    int_0 = 1
    var_0 = setattr(json_rpc_server_0, str_0, int_0)
    str_1 = 'foo'
    var_1 = json_rpc_server_0.response(str_1)
    var_2 = module_1.dumps(var_1)
    bytes_0 = b'foo'
    var_3 = json_rpc_server_0.response(bytes_0)