# Automatically generated by Pynguin.
import ansible.module_utils.facts.hardware.hpux as module_0

def test_case_0():
    try:
        str_0 = '2IG6'
        h_p_u_x_hardware_0 = module_0.HPUXHardware(str_0)
        var_0 = h_p_u_x_hardware_0.populate()
    except BaseException:
        pass

def test_case_1():
    try:
        float_0 = None
        str_0 = 'Including module_utils file %s'
        int_0 = 1269
        h_p_u_x_hardware_0 = module_0.HPUXHardware(str_0, int_0)
        h_p_u_x_hardware_1 = module_0.HPUXHardware(h_p_u_x_hardware_0)
        var_0 = h_p_u_x_hardware_1.get_hw_facts(float_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'R1MMC8QK!K'
        h_p_u_x_hardware_0 = module_0.HPUXHardware(str_0)
        str_1 = 'Y`.'
        int_0 = 78
        set_0 = set()
        list_0 = [set_0, set_0, set_0, set_0]
        h_p_u_x_hardware_1 = module_0.HPUXHardware(set_0, list_0)
        str_2 = '\thldTa=&|U;XrSf"6'
        tuple_0 = (h_p_u_x_hardware_1, str_2)
        list_1 = [int_0, int_0, int_0, tuple_0]
        var_0 = h_p_u_x_hardware_1.get_cpu_facts()
        h_p_u_x_hardware_collector_0 = module_0.HPUXHardwareCollector(str_1, list_1)
        float_0 = 2039.0
        h_p_u_x_hardware_2 = module_0.HPUXHardware(float_0)
        bool_0 = True
        var_1 = h_p_u_x_hardware_2.get_memory_facts(bool_0)
    except BaseException:
        pass

def test_case_3():
    try:
        float_0 = None
        h_p_u_x_hardware_0 = module_0.HPUXHardware(float_0)
        str_0 = '20'
        h_p_u_x_hardware_1 = module_0.HPUXHardware(str_0)
        var_0 = h_p_u_x_hardware_1.get_hw_facts(h_p_u_x_hardware_0)
    except BaseException:
        pass

def test_case_4():
    try:
        var_0 = {}
        h_p_u_x_hardware_0 = module_0.HPUXHardware(var_0)
        var_1 = {}
        h_p_u_x_hardware_collector_0 = module_0.HPUXHardwareCollector(var_1)
        str_0 = 'ansible_architecture'
        str_1 = '9000/800'
        str_2 = {str_0: str_1}
        var_2 = h_p_u_x_hardware_0.get_cpu_facts(str_2)
    except BaseException:
        pass