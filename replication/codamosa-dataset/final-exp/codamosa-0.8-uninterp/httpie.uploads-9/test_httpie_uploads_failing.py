# Automatically generated by Pynguin.
import typing as module_0
import httpie.uploads as module_1
import httpie.cli.dicts as module_2
import requests.models as module_3
import requests_toolbelt.multipart.encoder as module_4

def test_case_0():
    try:
        dict_0 = {}
        i_o_0 = module_0.IO(**dict_0)
        callable_0 = None
        var_0 = module_1.prepare_request_body(i_o_0, callable_0, dict_0)
    except BaseException:
        pass

def test_case_1():
    try:
        prepared_request_0 = None
        multipart_request_data_dict_0 = module_2.MultipartRequestDataDict()
        tuple_0 = module_1.get_multipart_data_and_content_type(multipart_request_data_dict_0)
        i_o_0 = module_0.IO()
        multipart_encoder_0 = None
        chunked_multipart_upload_stream_0 = module_1.ChunkedMultipartUploadStream(multipart_encoder_0)
        var_0 = i_o_0.readline()
        request_data_dict_0 = module_2.RequestDataDict()
        set_0 = None
        chunked_upload_stream_0 = module_1.ChunkedUploadStream(request_data_dict_0, set_0)
        str_0 = ')'
        var_1 = module_1.prepare_request_body(request_data_dict_0, str_0)
        bool_0 = True
        iterable_0 = chunked_upload_stream_0.__iter__()
        var_2 = module_1.compress_request(prepared_request_0, bool_0)
    except BaseException:
        pass

def test_case_2():
    try:
        prepared_request_0 = module_3.PreparedRequest()
        bool_0 = False
        var_0 = module_1.compress_request(prepared_request_0, bool_0)
    except BaseException:
        pass

def test_case_3():
    try:
        multipart_request_data_dict_0 = module_2.MultipartRequestDataDict()
        str_0 = None
        i_o_0 = module_0.IO()
        var_0 = i_o_0.__enter__()
        int_0 = 2602
        dict_0 = {var_0: multipart_request_data_dict_0, int_0: str_0, str_0: i_o_0}
        str_1 = 'MBa,WTqSEC}=l[( 3'
        str_2 = ''
        dict_1 = {str_0: int_0, str_1: str_0, str_0: dict_0, str_2: var_0}
        request_data_dict_0 = module_2.RequestDataDict(**dict_1)
        var_1 = module_1.prepare_request_body(str_0, var_0, int_0, dict_0, request_data_dict_0)
        prepared_request_0 = module_3.PreparedRequest()
        bool_0 = False
        var_2 = module_1.compress_request(prepared_request_0, bool_0)
    except BaseException:
        pass

def test_case_4():
    try:
        dict_0 = {}
        float_0 = 0.1
        multipart_encoder_0 = module_4.MultipartEncoder(dict_0, float_0)
        var_0 = module_1.prepare_request_body(multipart_encoder_0, float_0)
        chunked_multipart_upload_stream_0 = module_1.ChunkedMultipartUploadStream(multipart_encoder_0)
        var_1 = multipart_encoder_0.to_string()
    except BaseException:
        pass

def test_case_5():
    try:
        dict_0 = {}
        float_0 = 0.1
        multipart_encoder_0 = module_4.MultipartEncoder(dict_0, float_0)
        var_0 = module_1.prepare_request_body(multipart_encoder_0, float_0)
        str_0 = 'qxja =9Ooda>X*G'
        multipart_request_data_dict_0 = module_2.MultipartRequestDataDict(**dict_0)
        tuple_0 = module_1.get_multipart_data_and_content_type(multipart_request_data_dict_0, str_0)
        chunked_multipart_upload_stream_0 = module_1.ChunkedMultipartUploadStream(multipart_encoder_0)
        iterable_0 = chunked_multipart_upload_stream_0.__iter__()
        tuple_1 = module_1.get_multipart_data_and_content_type(multipart_request_data_dict_0)
        str_1 = '2YNJ'
        iterable_1 = None
        int_0 = 2
        str_2 = '\x0crS_G*@JrjW-\x0bg+d'
        tuple_2 = module_1.get_multipart_data_and_content_type(multipart_request_data_dict_0, str_1, str_2)
        callable_0 = None
        chunked_upload_stream_0 = module_1.ChunkedUploadStream(iterable_1, callable_0)
        iterable_2 = chunked_upload_stream_0.__iter__()
        prepared_request_0 = module_3.PreparedRequest()
        var_1 = module_1.prepare_request_body(str_1, prepared_request_0, prepared_request_0, tuple_2)
        dict_1 = None
        callable_1 = None
        prepared_request_1 = module_3.PreparedRequest()
        var_2 = module_1.prepare_request_body(str_0, callable_1, int_0, dict_1, str_2)
        prepared_request_2 = module_3.PreparedRequest()
        list_0 = [iterable_1, chunked_multipart_upload_stream_0, multipart_request_data_dict_0]
        var_3 = module_1.prepare_request_body(multipart_encoder_0, callable_1, int_0, prepared_request_2, list_0)
    except BaseException:
        pass