# Automatically generated by Pynguin.
import ansible.plugins.action.include_vars as module_0

def test_case_0():
    try:
        bytes_0 = b'\x81\xa0uv\x82\x9aL&\n\xfce\x9b\x05\x1bL\xa0\xfd'
        bytes_1 = b'hje\xcc\xcc\xfb\x9a\xff\xc4\x8c\x0c\xa4\x92\x82\xbf\xd1['
        str_0 = 'xEWu(*.o['
        float_0 = 0.2
        action_module_0 = module_0.ActionModule(bytes_0, bytes_1, str_0, bytes_0, bytes_0, float_0)
        var_0 = action_module_0.run()
    except BaseException:
        pass

def test_case_1():
    try:
        float_0 = 2.0
        bool_0 = True
        dict_0 = {float_0: float_0, float_0: bool_0}
        list_0 = [dict_0, float_0]
        str_0 = 'Darwin'
        complex_0 = None
        tuple_0 = (str_0, complex_0)
        bool_1 = False
        bytes_0 = b'\xc5d\xac\xfa\x83\x89\xd3\xd8\xce&$u\xc9U\x88'
        bytes_1 = b')\xda!\xde\x83\xe2\xd8\x9b\xf9\xfc\xe5\xc9%{E6\xfb'
        action_module_0 = module_0.ActionModule(list_0, list_0, tuple_0, bool_1, bytes_0, bytes_1)
        int_0 = 250000
        str_1 = 'k%Zq,kGgF{I-z8'
        str_2 = ';=,:W;V;AO\n9BuM!'
        bool_2 = True
        list_1 = [str_1, str_2, str_2, str_1]
        bytes_2 = b'\x99\xcb]R\xc4\xa4\xf4\xc2\x10{v\xb4\xb3\xc0'
        float_1 = 0.1
        set_0 = {bytes_2}
        action_module_1 = module_0.ActionModule(str_2, bool_2, list_1, bytes_2, float_1, set_0)
        int_1 = 480
        str_3 = '-Fr'
        dict_1 = {}
        action_module_2 = module_0.ActionModule(str_1, action_module_1, int_1, list_1, str_3, dict_1)
        var_0 = action_module_2.run(action_module_0, int_0)
    except BaseException:
        pass