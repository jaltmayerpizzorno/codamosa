# Automatically generated by Pynguin.
import ansible.config.manager as module_0

def test_case_0():
    try:
        config_manager_0 = module_0.ConfigManager()
        var_0 = module_0.get_config_type(config_manager_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'ts '
        var_0 = module_0.get_config_type(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        var_0 = module_0.find_ini_config_file()
        setting_0 = module_0.Setting()
    except BaseException:
        pass

def test_case_3():
    try:
        plugin_0 = None
        config_manager_0 = module_0.ConfigManager()
        set_0 = {plugin_0, plugin_0}
        config_manager_1 = module_0.ConfigManager(set_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = '%n3^<&\rszY $%R'
        str_1 = 'CODENAME *= *([^\n]+)'
        str_2 = 'bGuLTO/$e}^,+'
        str_3 = None
        dict_0 = {str_0: str_0, str_1: str_1, str_2: str_1, str_3: str_2}
        list_0 = [str_0]
        config_manager_0 = module_0.ConfigManager(dict_0, list_0)
    except BaseException:
        pass

def test_case_5():
    try:
        float_0 = -95.0
        str_0 = 'fc;s\ry\n.\tIk\ty\\'
        str_1 = "dl6(ahzr\r/'*"
        config_manager_0 = module_0.ConfigManager()
        var_0 = config_manager_0.get_config_value(float_0, str_0, str_1)
    except BaseException:
        pass

def test_case_6():
    try:
        dict_0 = {}
        config_manager_0 = module_0.ConfigManager(dict_0)
    except BaseException:
        pass

def test_case_7():
    try:
        config_manager_0 = module_0.ConfigManager()
        var_0 = module_0.ensure_type(config_manager_0, config_manager_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = ''
        config_manager_0 = module_0.ConfigManager(str_0)
    except BaseException:
        pass

def test_case_9():
    try:
        plugin_0 = None
        float_0 = -674.0
        config_manager_0 = module_0.ConfigManager()
        var_0 = config_manager_0.get_plugin_vars(plugin_0, float_0)
        tuple_0 = None
        str_0 = '!v'
        bytes_0 = b'o\xb7\x0b\xe6\xe3\x86\x89\xa4\xfb'
        list_0 = [str_0, bytes_0]
        plugin_1 = module_0.Plugin(*list_0)
        dict_0 = {bytes_0: var_0, tuple_0: list_0}
        var_1 = config_manager_0.get_configuration_definition(plugin_1, dict_0)
    except BaseException:
        pass

def test_case_10():
    try:
        int_0 = 3600
        int_1 = -221
        dict_0 = {int_0: int_0, int_0: int_0, int_1: int_1}
        tuple_0 = (dict_0,)
        bool_0 = True
        config_manager_0 = module_0.ConfigManager()
        var_0 = config_manager_0.update_config_data(tuple_0, bool_0)
    except BaseException:
        pass

def test_case_11():
    try:
        plugin_0 = None
        float_0 = -674.0
        config_manager_0 = module_0.ConfigManager()
        var_0 = config_manager_0.get_plugin_vars(plugin_0, float_0)
        bytes_0 = b'\\\x8bH,yL\xa2'
        bytes_1 = b'\x14I\xfb\xd97\xc6\xf8W'
        tuple_0 = (float_0, bytes_1, config_manager_0)
        var_1 = config_manager_0.get_config_value(bytes_0, tuple_0)
    except BaseException:
        pass

def test_case_12():
    try:
        bytes_0 = b'\xbc?\x97a\x85\x1c\x1aK\xff\xdf\xa2%\x88\xbd\x894'
        list_0 = None
        set_0 = {bytes_0, bytes_0}
        config_manager_0 = module_0.ConfigManager()
        var_0 = config_manager_0.get_config_value(bytes_0, list_0, set_0, list_0)
    except BaseException:
        pass

def test_case_13():
    try:
        plugin_0 = None
        float_0 = -674.0
        config_manager_0 = module_0.ConfigManager()
        var_0 = config_manager_0.get_plugin_vars(plugin_0, float_0)
        dict_0 = None
        var_1 = config_manager_0.get_plugin_options(plugin_0, dict_0)
        bytes_0 = b'\\\x8bH,yL\xa2'
        bytes_1 = b'\x14I\xfb\xd97\xc6\xf8W'
        tuple_0 = (float_0, bytes_1, config_manager_0)
        var_2 = config_manager_0.get_config_value(bytes_0, tuple_0)
    except BaseException:
        pass

def test_case_14():
    try:
        plugin_0 = None
        str_0 = "W'"
        str_1 = 'list'
        float_0 = 1647.1548
        set_0 = {str_1, float_0, float_0}
        config_manager_0 = module_0.ConfigManager()
        var_0 = config_manager_0.initialize_plugin_configuration_definitions(str_0, str_1, set_0)
        config_manager_1 = module_0.ConfigManager()
        var_1 = config_manager_1.get_plugin_vars(plugin_0, float_0)
        dict_0 = None
        var_2 = config_manager_1.get_plugin_options(plugin_0, dict_0)
        str_2 = 'tmppath'
        var_3 = module_0.ensure_type(config_manager_1, str_2)
    except BaseException:
        pass

def test_case_15():
    try:
        config_manager_0 = module_0.ConfigManager()
        plugin_0 = None
        float_0 = -86.0
        str_0 = "WP'w"
        str_1 = 'list'
        float_1 = 1647.1548
        set_0 = {str_1, float_1, float_1}
        config_manager_1 = module_0.ConfigManager()
        var_0 = config_manager_1.initialize_plugin_configuration_definitions(str_0, str_1, set_0)
        var_1 = config_manager_1.get_plugin_vars(plugin_0, float_0)
        dict_0 = None
        var_2 = config_manager_0.get_plugin_options(plugin_0, dict_0, float_0)
    except BaseException:
        pass

def test_case_16():
    try:
        plugin_0 = None
        config_manager_0 = module_0.ConfigManager()
        config_manager_1 = module_0.ConfigManager()
        dict_0 = None
        var_0 = config_manager_1.get_plugin_options(plugin_0, dict_0)
        str_0 = 'Archlinux'
        str_1 = 'ny(XciyOlxI,'
        var_1 = config_manager_0.get_configuration_definition(str_0, str_1)
        bytes_0 = b'\xcf\xb3\xba\r)\xe7\xf3\x98\xd9\xcdv'
        bytes_1 = b'8\xfe'
        var_2 = config_manager_0.get_config_value(bytes_0, dict_0, config_manager_0, bytes_1, dict_0)
    except BaseException:
        pass

def test_case_17():
    try:
        plugin_0 = None
        float_0 = -83.96561225245537
        str_0 = "WP'w"
        float_1 = 1647.1548
        set_0 = {str_0, float_1, float_1}
        config_manager_0 = module_0.ConfigManager()
        var_0 = config_manager_0.initialize_plugin_configuration_definitions(str_0, str_0, set_0)
        config_manager_1 = module_0.ConfigManager()
        var_1 = config_manager_1.get_plugin_vars(plugin_0, float_0)
        dict_0 = None
        var_2 = config_manager_1.get_plugin_options(plugin_0, dict_0)
        str_1 = 'Archlinux'
        var_3 = config_manager_1.update_config_data()
        str_2 = 'ny(XciyOlxI,'
        var_4 = config_manager_0.get_configuration_definition(str_1, str_2)
        var_5 = module_0.resolve_path(set_0)
        plugin_1 = None
        var_6 = module_0.get_ini_config_value(plugin_1, dict_0)
        str_3 = '|"=)JF'
        int_0 = -1117
        var_7 = config_manager_0.get_config_value(str_3, config_manager_1, int_0)
    except BaseException:
        pass

def test_case_18():
    try:
        plugin_0 = None
        float_0 = -83.96561225245537
        str_0 = "WP'w"
        float_1 = 1647.15
        set_0 = {str_0, float_1, float_1}
        config_manager_0 = module_0.ConfigManager()
        var_0 = config_manager_0.initialize_plugin_configuration_definitions(str_0, str_0, set_0)
        config_manager_1 = module_0.ConfigManager()
        var_1 = config_manager_1.get_plugin_vars(plugin_0, float_0)
        var_2 = config_manager_0.get_configuration_definition(str_0, str_0)
        complex_0 = None
        str_1 = 'J3[a4'
        list_0 = [str_1, float_1, set_0]
        float_2 = None
        var_3 = config_manager_0.get_plugin_options(complex_0, str_1, list_0, float_2)
        var_4 = config_manager_0.get_config_value(plugin_0, float_2, plugin_0)
    except BaseException:
        pass

def test_case_19():
    try:
        plugin_0 = None
        str_0 = "WP'w"
        float_0 = 1647.1548
        set_0 = {float_0}
        config_manager_0 = module_0.ConfigManager()
        list_0 = None
        var_0 = module_0.ensure_type(list_0, list_0)
        var_1 = config_manager_0.initialize_plugin_configuration_definitions(str_0, str_0, set_0)
        config_manager_1 = module_0.ConfigManager()
        var_2 = config_manager_1.get_plugin_vars(plugin_0, float_0)
        dict_0 = None
        var_3 = config_manager_1.get_plugin_options(plugin_0, dict_0)
        dict_1 = {dict_0: plugin_0}
        tuple_0 = None
        var_4 = config_manager_0.update_config_data(dict_1, tuple_0)
    except BaseException:
        pass

def test_case_20():
    try:
        plugin_0 = None
        str_0 = "WP'w"
        float_0 = 1647.15
        set_0 = {str_0, float_0, float_0}
        config_manager_0 = module_0.ConfigManager()
        var_0 = config_manager_0.initialize_plugin_configuration_definitions(str_0, str_0, set_0)
        config_manager_1 = module_0.ConfigManager()
        var_1 = config_manager_1.get_plugin_vars(plugin_0, float_0)
        dict_0 = None
        var_2 = config_manager_1.get_plugin_options(plugin_0, dict_0)
        dict_1 = {dict_0: plugin_0}
        tuple_0 = None
        list_0 = [tuple_0, str_0]
        var_3 = module_0.get_ini_config_value(dict_1, list_0)
        complex_0 = None
        str_1 = 'J3[a4'
        list_1 = [str_1, float_0, set_0]
        var_4 = config_manager_0.get_plugin_options(complex_0, str_1, list_1, float_0)
    except BaseException:
        pass