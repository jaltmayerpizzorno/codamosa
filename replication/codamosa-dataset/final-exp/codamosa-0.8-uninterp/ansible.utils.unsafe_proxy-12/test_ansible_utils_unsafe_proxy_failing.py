# Automatically generated by Pynguin.
import ansible.utils.unsafe_proxy as module_0

def test_case_0():
    try:
        ansible_unsafe_bytes_0 = module_0.AnsibleUnsafeBytes()
        var_0 = ansible_unsafe_bytes_0.decode()
        str_0 = '4]tm'
        dict_0 = {str_0: str_0}
        var_1 = module_0.to_unsafe_text(**dict_0)
    except BaseException:
        pass

def test_case_1():
    try:
        ansible_unsafe_text_0 = module_0.AnsibleUnsafeText()
        var_0 = ansible_unsafe_text_0.encode()
        var_1 = ansible_unsafe_text_0.encode()
        var_2 = ansible_unsafe_text_0.encode()
        var_3 = module_0.to_unsafe_text()
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '5,]KZ%]hZ8hB^z'
        dict_0 = {}
        bytes_0 = b'\x87\xf2!\x1d\x0f5\xd9w\xb9\x06\xe9\x1e\xc4\xb5S?C'
        list_0 = [str_0, str_0, str_0]
        unsafe_proxy_0 = module_0.UnsafeProxy(*list_0)
        var_0 = unsafe_proxy_0.__new__(dict_0, bytes_0)
    except BaseException:
        pass

def test_case_3():
    try:
        ansible_unsafe_0 = module_0.AnsibleUnsafe()
        list_0 = [ansible_unsafe_0, ansible_unsafe_0, ansible_unsafe_0, ansible_unsafe_0]
        unsafe_proxy_0 = module_0.UnsafeProxy(*list_0)
        str_0 = None
        dict_0 = {str_0: list_0, str_0: unsafe_proxy_0}
        ansible_unsafe_bytes_0 = module_0.AnsibleUnsafeBytes(*list_0, **dict_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = '5,]KZ%]hZ8hB^z'
        str_1 = 'slaves'
        str_2 = '4\tmnHwV'
        dict_0 = {str_0: str_0, str_1: str_0, str_2: str_0}
        var_0 = module_0.to_unsafe_bytes(**dict_0)
    except BaseException:
        pass

def test_case_5():
    try:
        var_0 = module_0.to_unsafe_text()
    except BaseException:
        pass

def test_case_6():
    try:
        dict_0 = {}
        str_0 = '!wlfb$[/8yn\x0c20/\x0c`R\r'
        var_0 = module_0.wrap_var(str_0)
        ansible_unsafe_0 = module_0.AnsibleUnsafe(**dict_0)
        list_0 = [ansible_unsafe_0]
        set_0 = {var_0, str_0}
        var_1 = module_0.wrap_var(set_0)
        list_1 = [list_0]
        var_2 = module_0.to_unsafe_bytes(*list_1)
        ansible_unsafe_bytes_0 = module_0.AnsibleUnsafeBytes()
        ansible_unsafe_text_0 = module_0.AnsibleUnsafeText()
        unsafe_proxy_0 = module_0.UnsafeProxy()
    except BaseException:
        pass