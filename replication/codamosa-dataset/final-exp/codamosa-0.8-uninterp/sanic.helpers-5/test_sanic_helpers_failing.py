# Automatically generated by Pynguin.
import sanic.helpers as module_0

def test_case_0():
    try:
        dict_0 = {}
        var_0 = module_0.is_hop_by_hop_header(dict_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = b'\xe5\x16>zR\xc0\x86O\x0f'
        var_0 = module_0.has_message_body(bytes_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '5<P`>y'
        str_1 = 'mvZlK20'
        tuple_0 = (str_1,)
        var_0 = module_0.import_string(str_0, tuple_0)
    except BaseException:
        pass

def test_case_3():
    try:
        int_0 = 206
        var_0 = module_0.has_message_body(int_0)
        str_0 = '2]*g}$:sZ'
        var_1 = module_0.has_message_body(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        int_0 = -1574
        var_0 = module_0.has_message_body(int_0)
        list_0 = []
        var_1 = module_0.import_string(list_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'http.client'
        var_0 = module_0.import_string(str_0)
        str_1 = 'http.client.HTTPResponse'
        var_1 = module_0.import_string(str_1)
    except BaseException:
        pass

def test_case_6():
    try:
        int_0 = 100
        var_0 = module_0.has_message_body(int_0)
        var_1 = module_0.has_message_body(int_0)
        int_1 = 102
        var_2 = module_0.has_message_body(int_1)
        int_2 = 103
        var_3 = module_0.has_message_body(int_2)
        int_3 = 200
        var_4 = module_0.has_message_body(int_3)
        int_4 = 201
        var_5 = module_0.has_message_body(int_4)
        int_5 = 202
        var_6 = module_0.has_message_body(int_5)
        int_6 = 203
        var_7 = module_0.has_message_body(int_6)
        int_7 = 204
        var_8 = module_0.has_message_body(int_7)
        int_8 = 205
        var_9 = module_0.has_message_body(int_8)
        int_9 = 206
        var_10 = module_0.has_message_body(int_9)
        str_0 = '0v+m^?G`CGd'
        var_11 = module_0.import_string(str_0)
    except BaseException:
        pass