# Automatically generated by Pynguin.
import ansible.plugins.action.reboot as module_0

def test_case_0():
    try:
        action_module_0 = module_0.ActionModule()
    except BaseException:
        pass

def test_case_1():
    try:
        bool_0 = True
        list_0 = [bool_0, bool_0, bool_0, bool_0, bool_0, bool_0]
        action_module_0 = module_0.ActionModule(*list_0)
        timed_out_exception_0 = module_0.TimedOutException()
        float_0 = -828.765338
        var_0 = action_module_0.validate_reboot(float_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bool_0 = True
        list_0 = [bool_0, bool_0, bool_0, bool_0, bool_0, bool_0]
        action_module_0 = module_0.ActionModule(*list_0)
        var_0 = action_module_0.deprecated_args()
        str_0 = 'AT'
        var_1 = action_module_0.get_system_boot_time(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bool_0 = True
        list_0 = [bool_0, bool_0, bool_0, bool_0, bool_0, bool_0]
        action_module_0 = module_0.ActionModule(*list_0)
        var_0 = action_module_0.deprecated_args()
        float_0 = 1619.307463
        tuple_0 = ()
        var_1 = action_module_0.do_until_success_or_timeout(bool_0, float_0, action_module_0, tuple_0)
    except BaseException:
        pass

def test_case_4():
    try:
        bool_0 = True
        list_0 = [bool_0, bool_0, bool_0, bool_0, bool_0, bool_0]
        action_module_0 = module_0.ActionModule(*list_0)
        timed_out_exception_0 = module_0.TimedOutException()
        int_0 = 766
        var_0 = action_module_0.run_test_command(int_0)
    except BaseException:
        pass

def test_case_5():
    try:
        bool_0 = True
        list_0 = [bool_0, bool_0, bool_0, bool_0, bool_0, bool_0]
        action_module_0 = module_0.ActionModule(*list_0)
        timed_out_exception_0 = module_0.TimedOutException()
        str_0 = '\n    This callback puts results into a host specific file in a directory in json format.\n    '
        var_0 = action_module_0.get_shutdown_command_args(str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        bool_0 = True
        list_0 = [bool_0, bool_0, bool_0, bool_0, bool_0, bool_0]
        action_module_0 = module_0.ActionModule(*list_0)
        bytes_0 = b'\xa2%t\rg'
        list_1 = None
        tuple_0 = (bytes_0, list_1)
        var_0 = action_module_0.get_distribution(tuple_0)
    except BaseException:
        pass

def test_case_7():
    try:
        bool_0 = True
        list_0 = [bool_0, bool_0, bool_0, bool_0, bool_0, bool_0]
        action_module_0 = module_0.ActionModule(*list_0)
        timed_out_exception_0 = module_0.TimedOutException()
        float_0 = 1387.59622
        var_0 = action_module_0.get_shutdown_command(float_0, float_0)
    except BaseException:
        pass

def test_case_8():
    try:
        bool_0 = False
        list_0 = [bool_0, bool_0, bool_0, bool_0, bool_0, bool_0]
        action_module_0 = module_0.ActionModule(*list_0)
        var_0 = action_module_0.deprecated_args()
        var_1 = action_module_0.run()
    except BaseException:
        pass

def test_case_9():
    try:
        bool_0 = True
        list_0 = [bool_0, bool_0, bool_0, bool_0, bool_0, bool_0]
        action_module_0 = module_0.ActionModule(*list_0)
        int_0 = None
        str_0 = 'K$G;/Wl78'
        dict_0 = {str_0: list_0, str_0: action_module_0}
        bytes_0 = b'\x16v0\x81\xf9\xfc\x95\xa6\x05\xe7'
        list_1 = [int_0, dict_0, bytes_0, str_0]
        var_0 = action_module_0.check_boot_time(int_0, list_1)
    except BaseException:
        pass

def test_case_10():
    try:
        bool_0 = True
        list_0 = [bool_0, bool_0, bool_0, bool_0, bool_0, bool_0]
        action_module_0 = module_0.ActionModule(*list_0)
        timed_out_exception_0 = module_0.TimedOutException()
        var_0 = action_module_0.deprecated_args()
        tuple_0 = ()
        set_0 = set()
        var_1 = action_module_0.perform_reboot(tuple_0, set_0)
    except BaseException:
        pass

def test_case_11():
    try:
        bool_0 = False
        timed_out_exception_0 = module_0.TimedOutException()
        list_0 = [bool_0, bool_0, bool_0, bool_0, bool_0, bool_0]
        action_module_0 = module_0.ActionModule(*list_0)
        timed_out_exception_1 = module_0.TimedOutException()
        float_0 = -828.674590733404
        tuple_0 = ()
        var_0 = action_module_0.do_until_success_or_timeout(bool_0, float_0, action_module_0, tuple_0)
    except BaseException:
        pass

def test_case_12():
    try:
        bool_0 = True
        timed_out_exception_0 = module_0.TimedOutException()
        list_0 = [bool_0, bool_0, bool_0, bool_0, bool_0, bool_0]
        action_module_0 = module_0.ActionModule(*list_0)
        timed_out_exception_1 = module_0.TimedOutException()
        var_0 = action_module_0.deprecated_args()
        float_0 = 1314.4217239583982
        tuple_0 = ()
        bytes_0 = b'\xda^@\x0f\xdf#y\x8e\xb6Iv\xa5>'
        list_1 = [list_0, var_0, tuple_0]
        list_2 = []
        var_1 = action_module_0.do_until_success_or_timeout(bytes_0, float_0, list_1, list_2, list_0)
    except BaseException:
        pass