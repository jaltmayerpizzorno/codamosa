# Automatically generated by Pynguin.
import ansible.module_utils.facts.collector as module_0
import collections as module_1

def test_case_0():
    pass

def test_case_1():
    base_fact_collector_0 = module_0.BaseFactCollector()

def test_case_2():
    collector_not_found_error_0 = module_0.CollectorNotFoundError()
    float_0 = -722.55
    base_fact_collector_0 = module_0.BaseFactCollector(float_0)
    var_0 = base_fact_collector_0.collect_with_namespace()
    tuple_0 = (base_fact_collector_0,)
    var_1 = base_fact_collector_0.collect_with_namespace(collector_not_found_error_0)
    unresolved_fact_dep_0 = module_0.UnresolvedFactDep()
    bytes_0 = b'*\xf9\x02\x89X\x972&\xec\xb0\xbbk\x19\xb8'
    base_fact_collector_1 = module_0.BaseFactCollector()
    var_2 = base_fact_collector_1.collect(unresolved_fact_dep_0)
    var_3 = base_fact_collector_0.collect_with_namespace()
    int_0 = None
    list_0 = [int_0, bytes_0, collector_not_found_error_0]
    var_4 = module_0.collector_classes_from_gather_subset(int_0, bytes_0, list_0)
    bytes_1 = b'\xbbK\xf1\x81\xd4\x06^\xaf\x9aI\xa6\xc1\xdb'
    var_5 = module_0.collector_classes_from_gather_subset(tuple_0, bytes_1)

def test_case_3():
    defaultdict_0 = module_1.defaultdict()
    base_fact_collector_0 = module_0.BaseFactCollector(defaultdict_0)
    var_0 = base_fact_collector_0.collect()
    var_1 = module_0.collector_classes_from_gather_subset()

def test_case_4():
    var_0 = module_0.get_collector_names()

def test_case_5():
    var_0 = module_0.collector_classes_from_gather_subset()

def test_case_6():
    str_0 = 'vdD[o6\x0cDZu%'
    dict_0 = {str_0: str_0}
    var_0 = module_0.select_collector_classes(str_0, dict_0)

def test_case_7():
    collector_not_found_error_0 = module_0.CollectorNotFoundError()
    unresolved_fact_dep_0 = module_0.UnresolvedFactDep()
    bytes_0 = b'*\xf9\x02\x89X\x972&\xec\xb0\xbbk\x19\xb8'
    int_0 = None
    list_0 = [int_0, bytes_0, collector_not_found_error_0]
    var_0 = module_0.collector_classes_from_gather_subset(int_0, bytes_0, list_0)

def test_case_8():
    str_0 = 'L,H; ,j8$+d!X7U'
    set_0 = {str_0, str_0}
    dict_0 = {str_0: str_0}
    var_0 = module_0.get_collector_names(str_0, set_0, dict_0)
    var_1 = module_0.collector_classes_from_gather_subset()

def test_case_9():
    str_0 = None
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.get_collector_names(dict_0, dict_0)
    var_1 = module_0.collector_classes_from_gather_subset()

def test_case_10():
    bytes_0 = b'y\xed\xc1\x82 \xaaq\x03v\x94\xfea1'
    list_0 = [bytes_0]
    float_0 = 1105.06
    tuple_0 = (list_0, bytes_0, float_0)
    tuple_1 = (tuple_0, tuple_0)
    base_fact_collector_0 = module_0.BaseFactCollector(bytes_0, tuple_1)
    var_0 = base_fact_collector_0.collect_with_namespace()

def test_case_11():
    str_0 = 'a'
    str_1 = 'b'
    str_2 = {str_0, str_1}
    str_3 = 'c'
    str_4 = '!d'
    str_5 = [str_3, str_4]
    str_6 = 'alias_c'
    str_7 = 'c1'
    str_8 = 'c2'
    str_9 = 'c3'
    str_10 = {str_7, str_8, str_9}
    str_11 = {str_6: str_10}
    str_12 = 'd'
    str_13 = {str_3, str_12, str_0, str_1}
    var_0 = module_0.get_collector_names(str_13, str_2, str_5, str_11)

def test_case_12():
    str_0 = 'min'
    unresolved_fact_dep_0 = module_0.UnresolvedFactDep()
    dict_0 = {}
    var_0 = module_0.build_dep_data(dict_0, str_0)
    var_1 = frozenset(str_0)
    str_1 = []
    str_2 = '!all'
    str_3 = [str_2]
    var_2 = module_0.get_collector_names(str_1, var_1, str_3)
    str_4 = [str_0]
    var_3 = frozenset(str_4)

def test_case_13():
    str_0 = 'x'
    str_1 = 'a'
    str_2 = 'b'
    str_3 = 'c'
    str_4 = {str_1, str_2}
    str_5 = {str_3}
    var_0 = set()
    var_1 = {str_0: str_4, str_1: str_5, str_2: str_5, str_3: var_0}
    var_2 = module_0.tsort(var_1)
    var_3 = print(var_2)
    var_4 = module_0.tsort(var_1)
    var_5 = set()