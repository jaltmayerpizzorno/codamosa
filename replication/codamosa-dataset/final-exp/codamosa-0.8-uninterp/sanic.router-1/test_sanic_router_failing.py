# Automatically generated by Pynguin.
import sanic.router as module_0

def test_case_0():
    try:
        route_0 = None
        str_0 = None
        router_0 = module_0.Router()
        bool_0 = True
        bool_1 = False
        bool_2 = False
        bool_3 = True
        router_1 = module_0.Router(bool_2, bool_3)
        var_0 = router_1.add(str_0, route_0, router_0, bool_0, bool_1)
    except BaseException:
        pass

def test_case_1():
    try:
        router_0 = module_0.Router()
        str_0 = 'DEFAULT_METHOD'
        var_0 = hasattr(router_0, str_0)
        str_1 = 'ALLOWED_METHODS'
        var_1 = hasattr(router_0, str_1)
        str_2 = 'routes_all'
        var_2 = hasattr(router_0, str_2)
        var_3 = hasattr(router_0, var_0)
    except BaseException:
        pass

def test_case_2():
    try:
        router_0 = module_0.Router()
        str_0 = '/<__this_is_not_allowed>'
        str_1 = 'GET'
        str_2 = [str_1]
        str_3 = 'OK'
        var_0 = lambda request, __this_is_not_allowed: str_3
        var_1 = router_0.add(str_0, str_2, var_0)
        var_2 = router_0.finalize()
    except BaseException:
        pass