# Automatically generated by Pynguin.
import typesystem.tokenize.tokenize_yaml as module_0
import typesystem.tokenize.tokens as module_1
import typesystem.fields as module_2

def test_case_0():
    try:
        str_0 = '@7A'
        token_0 = module_0.tokenize_yaml(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = ''
        token_0 = module_0.tokenize_yaml(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b'J\x1eQl\x9f'
        token_0 = module_0.tokenize_yaml(bytes_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'xpFC~_X<E'
        any_0 = module_0.validate_yaml(str_0, str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'O/]@Gd!:'
        any_0 = module_0.validate_yaml(str_0, str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'off'
        any_0 = module_0.validate_yaml(str_0, str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = ''
        int_0 = -289
        scalar_token_0 = module_1.ScalarToken(str_0, int_0, int_0)
        bytes_0 = b"~\xd4'x1"
        token_0 = module_0.tokenize_yaml(bytes_0)
        int_1 = 4
        int_2 = -4427
        scalar_token_1 = module_1.ScalarToken(token_0, int_1, int_2)
        str_1 = '123.5'
        token_1 = module_0.tokenize_yaml(str_1)
        str_2 = "I6c{edp0t('"
        field_0 = module_2.Field(title=str_2)
        any_0 = module_0.validate_yaml(str_1, field_0)
    except BaseException:
        pass