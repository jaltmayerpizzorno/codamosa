# Automatically generated by Pynguin.
import ansible.playbook.base as module_0
import ansible.playbook.attribute as module_1

def test_case_0():
    try:
        bytes_0 = b'\xc7OO$\x86\x8d1'
        field_attribute_base_0 = module_0.FieldAttributeBase()
        var_0 = field_attribute_base_0.load_data(bytes_0)
    except BaseException:
        pass

def test_case_1():
    try:
        field_attribute_base_0 = module_0.FieldAttributeBase()
        var_0 = field_attribute_base_0.copy()
        var_1 = field_attribute_base_0.get_loader()
        field_attribute_base_1 = module_0.FieldAttributeBase()
        field_attribute_base_2 = module_0.FieldAttributeBase()
        var_2 = field_attribute_base_2.dump_me()
        var_3 = field_attribute_base_2.dump_attrs()
        base_0 = module_0.Base()
        var_4 = base_0.get_path()
        var_5 = field_attribute_base_2.get_variable_manager()
        var_6 = field_attribute_base_1.get_variable_manager()
        bool_0 = False
        var_7 = field_attribute_base_0.deserialize(bool_0)
    except BaseException:
        pass

def test_case_2():
    try:
        set_0 = None
        str_0 = 'VnLdpdl'
        bytes_0 = b'\x84\xad\xff\x08\x90\xc6o\x90\xfa\xc4|\xf9\xe1eg\\\xdc'
        dict_0 = {str_0: set_0}
        int_0 = None
        field_attribute_0 = module_1.FieldAttribute(str_0, bytes_0, dict_0, int_0)
        field_attribute_base_0 = module_0.FieldAttributeBase()
        var_0 = field_attribute_base_0.get_validated_value(set_0, field_attribute_0, str_0, bytes_0)
        base_meta_0 = module_0.BaseMeta()
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'\x8e\x98\xe3\xbb\xf9\xe3'
        field_attribute_base_0 = module_0.FieldAttributeBase()
        var_0 = field_attribute_base_0.post_validate(bytes_0)
    except BaseException:
        pass

def test_case_4():
    try:
        field_attribute_base_0 = module_0.FieldAttributeBase()
        field_attribute_base_1 = module_0.FieldAttributeBase()
        var_0 = field_attribute_base_1.get_variable_manager()
        base_0 = module_0.Base()
        field_attribute_base_2 = module_0.FieldAttributeBase()
        dict_0 = {}
        field_attribute_base_3 = module_0.FieldAttributeBase()
        var_1 = field_attribute_base_3.deserialize(dict_0)
        list_0 = [var_1, dict_0]
        dict_1 = {var_1: list_0, field_attribute_base_3: dict_0}
        tuple_0 = (field_attribute_base_2, dict_1, field_attribute_base_3)
        var_2 = field_attribute_base_3.deserialize(tuple_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'e,\t<[3 G{'
        field_attribute_base_0 = module_0.FieldAttributeBase()
        var_0 = field_attribute_base_0.deserialize(str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        set_0 = None
        set_1 = {set_0, set_0, set_0, set_0, set_0}
        str_0 = 'f'
        bytes_0 = b'\x84\xad\xff\x08\x90\xc6o\x90\xfa\xc4\xf9\xe1eg\\\xdc'
        dict_0 = {str_0: set_0}
        int_0 = None
        field_attribute_0 = module_1.FieldAttribute(str_0, bytes_0, dict_0, int_0)
        field_attribute_base_0 = module_0.FieldAttributeBase()
        var_0 = field_attribute_base_0.get_validated_value(set_1, field_attribute_0, str_0, bytes_0)
        var_1 = field_attribute_base_0.load_data(int_0)
    except BaseException:
        pass

def test_case_7():
    try:
        field_attribute_base_0 = module_0.FieldAttributeBase()
        var_0 = field_attribute_base_0.dump_me(field_attribute_base_0)
    except BaseException:
        pass

def test_case_8():
    try:
        set_0 = None
        set_1 = {set_0, set_0, set_0, set_0}
        str_0 = 'VnLdpdl'
        bytes_0 = b'\x84\xad\xff\x08\x90\xc6o\x90\xfa\xc4|\xf9\xe1eg\\\xdc'
        dict_0 = {str_0: set_0}
        int_0 = None
        field_attribute_0 = module_1.FieldAttribute(str_0, bytes_0, dict_0, int_0)
        str_1 = None
        field_attribute_base_0 = module_0.FieldAttributeBase()
        var_0 = field_attribute_base_0.copy()
        var_1 = field_attribute_base_0.get_validated_value(set_1, field_attribute_0, str_1, bytes_0)
        list_0 = [str_1]
        var_2 = field_attribute_base_0.validate(list_0)
        float_0 = 3080.0
        list_1 = [var_0, bytes_0, var_1, dict_0]
        var_3 = field_attribute_base_0.load_data(float_0, list_1, dict_0)
    except BaseException:
        pass

def test_case_9():
    try:
        field_attribute_base_0 = module_0.FieldAttributeBase()
        dict_0 = {}
        list_0 = [dict_0, dict_0, dict_0]
        base_meta_0 = module_0.BaseMeta(*list_0)
    except BaseException:
        pass

def test_case_10():
    try:
        set_0 = None
        str_0 = 'class'
        bytes_0 = b'\x1f\xe6\x9c\xf0v\x17\x93\xa5?\x8e\xb1'
        dict_0 = {str_0: set_0}
        int_0 = None
        field_attribute_0 = module_1.FieldAttribute(str_0, str_0, bytes_0, dict_0, int_0)
        field_attribute_base_0 = module_0.FieldAttributeBase()
        var_0 = field_attribute_base_0.get_validated_value(set_0, field_attribute_0, str_0, bytes_0)
    except BaseException:
        pass

def test_case_11():
    try:
        base_0 = module_0.Base()
        var_0 = base_0.get_search_path()
        set_0 = None
        var_1 = base_0.get_search_path()
        set_1 = {set_0, set_0, set_0, set_0, set_0}
        str_0 = 'int'
        field_attribute_base_0 = module_0.FieldAttributeBase()
        bytes_0 = b'\x1f\xe6\x9c\xf0\xd8\x8fv\x93\xa5\x8e\xb1'
        var_2 = base_0.get_path()
        dict_0 = {}
        int_0 = None
        field_attribute_0 = module_1.FieldAttribute(str_0, bytes_0, dict_0, int_0)
        var_3 = field_attribute_base_0.dump_me()
        field_attribute_base_1 = module_0.FieldAttributeBase()
        var_4 = field_attribute_base_1.get_validated_value(set_1, field_attribute_0, str_0, bytes_0)
    except BaseException:
        pass