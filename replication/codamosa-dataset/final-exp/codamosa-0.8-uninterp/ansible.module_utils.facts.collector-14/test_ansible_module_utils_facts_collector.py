# Automatically generated by Pynguin.
import ansible.module_utils.facts.collector as module_0
import collections as module_1

def test_case_0():
    collector_not_found_error_0 = module_0.CollectorNotFoundError()

def test_case_1():
    base_fact_collector_0 = module_0.BaseFactCollector()

def test_case_2():
    base_fact_collector_0 = module_0.BaseFactCollector()
    var_0 = base_fact_collector_0.collect_with_namespace()
    var_1 = module_0.collector_classes_from_gather_subset()
    var_2 = base_fact_collector_0.collect()

def test_case_3():
    var_0 = module_0.collector_classes_from_gather_subset()

def test_case_4():
    str_0 = '\tj-?_KPfB)1'
    str_1 = 'vg'
    list_0 = [str_0, str_1, str_0, str_0]
    dict_0 = {str_1: str_1, str_1: list_0}
    var_0 = module_0.select_collector_classes(str_0, dict_0)

def test_case_5():
    collector_not_found_error_0 = None
    base_fact_collector_0 = module_0.BaseFactCollector(collector_not_found_error_0)
    int_0 = -2051
    tuple_0 = ()
    bool_0 = False
    set_0 = {base_fact_collector_0, tuple_0, base_fact_collector_0, bool_0, base_fact_collector_0}
    dict_0 = {tuple_0: int_0, int_0: collector_not_found_error_0}
    var_0 = module_0.collector_classes_from_gather_subset(tuple_0, set_0, dict_0)

def test_case_6():
    str_0 = '>y2B7LOn'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.tsort(dict_0)

def test_case_7():
    str_0 = '>y2B7LOn'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    bytes_0 = b'Q\xdb\x0e\x8b\xf9\x82\xc4\x8dz'
    base_fact_collector_0 = module_0.BaseFactCollector(bytes_0)
    var_0 = base_fact_collector_0.collect_with_namespace()
    var_1 = module_0.tsort(dict_0)

def test_case_8():
    collector_not_found_error_0 = module_0.CollectorNotFoundError()
    int_0 = -2022
    unresolved_fact_dep_0 = module_0.UnresolvedFactDep()
    tuple_0 = ()
    bool_0 = False
    dict_0 = {tuple_0: int_0, int_0: collector_not_found_error_0}
    cycle_found_in_fact_deps_0 = module_0.CycleFoundInFactDeps()
    base_fact_collector_0 = module_0.BaseFactCollector(cycle_found_in_fact_deps_0, dict_0)
    defaultdict_0 = module_1.defaultdict()
    var_0 = base_fact_collector_0.collect(defaultdict_0)
    float_0 = 2695.0
    var_1 = module_0.collector_classes_from_gather_subset(bool_0, float_0)
    list_0 = [base_fact_collector_0]
    var_2 = module_0.collector_classes_from_gather_subset(list_0)

def test_case_9():
    collector_not_found_error_0 = module_0.CollectorNotFoundError()
    base_fact_collector_0 = module_0.BaseFactCollector(collector_not_found_error_0)
    int_0 = -2022
    tuple_0 = ()
    dict_0 = {tuple_0: int_0, int_0: collector_not_found_error_0}
    cycle_found_in_fact_deps_0 = module_0.CycleFoundInFactDeps()
    base_fact_collector_1 = module_0.BaseFactCollector(cycle_found_in_fact_deps_0, dict_0)
    var_0 = base_fact_collector_1.collect_with_namespace()

def test_case_10():
    collector_not_found_error_0 = module_0.CollectorNotFoundError()
    base_fact_collector_0 = module_0.BaseFactCollector(collector_not_found_error_0)
    int_0 = -2022
    unresolved_fact_dep_0 = module_0.UnresolvedFactDep()
    tuple_0 = ()
    bool_0 = False
    set_0 = {base_fact_collector_0, tuple_0, base_fact_collector_0, bool_0}
    dict_0 = {tuple_0: int_0, int_0: collector_not_found_error_0}
    var_0 = module_0.collector_classes_from_gather_subset(tuple_0, set_0, dict_0)
    var_1 = base_fact_collector_0.collect_with_namespace(tuple_0)
    str_0 = 'c'
    var_2 = base_fact_collector_0.collect_with_namespace(str_0)
    str_1 = 'Linux'
    var_3 = module_0.resolve_requires(tuple_0, str_1)
    cycle_found_in_fact_deps_0 = module_0.CycleFoundInFactDeps()
    base_fact_collector_1 = module_0.BaseFactCollector(cycle_found_in_fact_deps_0, dict_0)
    var_4 = base_fact_collector_1.collect_with_namespace(set_0, base_fact_collector_0)

def test_case_11():
    str_0 = 'foo'
    str_1 = 'bar'
    str_2 = [str_0]
    str_3 = 'ansible.module_utils.facts.bar'
    str_4 = [str_3, str_3]
    str_5 = {str_0: str_2, str_1: str_4}
    str_6 = [str_3]
    var_0 = module_0.select_collector_classes(str_6, str_5)
    str_7 = [str_1]
    var_1 = module_0.select_collector_classes(str_7, str_5)

def test_case_12():
    str_0 = ''
    str_1 = '2'
    str_2 = '3'
    str_3 = '4'
    str_4 = {str_2, str_3}
    str_5 = {str_3}
    str_6 = {str_3}
    var_0 = {}
    var_1 = {str_0: str_4, str_1: str_5, str_2: str_6, str_3: var_0}
    var_2 = module_0.tsort(var_1)
    var_3 = module_0.tsort(var_1)
    var_4 = set()

def test_case_13():
    var_0 = module_0.collector_classes_from_gather_subset()
    str_0 = 'a'
    str_1 = 'b'
    str_2 = [str_0, str_1, str_1]
    var_1 = frozenset(str_2)
    str_3 = 'f'
    str_4 = [str_1, str_3]
    var_2 = frozenset(str_4)
    list_0 = []
    collector_not_found_error_0 = module_0.CollectorNotFoundError(*list_0)
    base_fact_collector_0 = module_0.BaseFactCollector()
    var_3 = base_fact_collector_0.collect(collector_not_found_error_0)
    var_4 = module_0.get_collector_names(var_1, var_2, str_1)
    var_5 = len(var_4)