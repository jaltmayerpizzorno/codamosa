# Automatically generated by Pynguin.
import string_utils.manipulation as module_0

def test_case_0():
    string_compressor_0 = module_0.__StringCompressor()

def test_case_1():
    int_0 = 255
    str_0 = module_0.roman_encode(int_0)

def test_case_2():
    str_0 = '3RI0\\Yl>RR3X'
    str_1 = module_0.prettify(str_0)
    int_0 = 619
    str_2 = module_0.roman_encode(int_0)
    bool_0 = module_0.booleanize(str_2)
    str_3 = 'pm"'
    str_4 = '9T,{\rBr\\QV/; {XJ'
    str_5 = module_0.snake_case_to_camel(str_3, bool_0, str_4)
    roman_numbers_0 = module_0.__RomanNumbers()
    str_6 = '~Q}'
    str_7 = module_0.compress(str_6)
    str_8 = module_0.slugify(str_6)
    str_9 = module_0.prettify(str_8)

def test_case_3():
    str_0 = 'J2S&\\D""$k+'
    str_1 = module_0.compress(str_0)

def test_case_4():
    str_0 = 'thisIsACmelCaseStringiegt'
    str_1 = module_0.prettify(str_0)

def test_case_5():
    str_0 = 'thisIsACamelStringTest'
    var_0 = module_0.camel_case_to_snake(str_0)

def test_case_6():
    str_0 = '-'
    var_0 = module_0.camel_case_to_snake(str_0, str_0)

def test_case_7():
    str_0 = 'the_snake_is_green'
    str_1 = module_0.snake_case_to_camel(str_0)

def test_case_8():
    str_0 = 'is_isbn_13'
    str_1 = 'yS/Z@(<JYI.6O'
    bool_0 = None
    str_2 = module_0.snake_case_to_camel(str_1, bool_0, str_1)
    str_3 = module_0.shuffle(str_0)

def test_case_9():
    str_0 = '.V1t7F'
    str_1 = module_0.shuffle(str_0)

def test_case_10():
    str_0 = "TJ_\x0bK:h'"
    str_1 = module_0.strip_html(str_0)

def test_case_11():
    str_0 = ' .ZDL4{@suu5y~'
    str_1 = module_0.slugify(str_0)

def test_case_12():
    str_0 = 'T}uNyop'
    str_1 = 'e?L#T'
    str_2 = ''
    str_3 = module_0.prettify(str_2)
    bool_0 = module_0.booleanize(str_1)
    str_4 = module_0.asciify(str_0)
    str_5 = module_0.reverse(str_0)

def test_case_13():
    str_0 = 'O'
    str_1 = module_0.strip_margin(str_0)

def test_case_14():
    str_0 = 'i hAvE  a cOuPLe of pRoblEmS   wIth   sPaces, dUplIcatEs, html & email@google.com'
    string_formatter_0 = module_0.__StringFormatter(str_0)
    str_1 = string_formatter_0.format()

def test_case_15():
    str_0 = '({oRac)'
    str_1 = module_0.prettify(str_0)

def test_case_16():
    str_0 = '3RI0\\Yl>RR3X'
    str_1 = module_0.prettify(str_0)
    int_0 = 1533
    str_2 = module_0.roman_encode(int_0)
    bool_0 = module_0.booleanize(str_2)
    str_3 = 'pm"'
    str_4 = '9T,{\rBr\\QV/; {XJ'
    str_5 = module_0.snake_case_to_camel(str_3, bool_0, str_4)
    roman_numbers_0 = module_0.__RomanNumbers()
    str_6 = "'zd\x0c^sJ@)\nT/J"
    str_7 = '~Q}'
    str_8 = module_0.compress(str_7)
    str_9 = module_0.slugify(str_6)
    str_10 = module_0.prettify(str_9)
    int_1 = module_0.roman_decode(str_2)

def test_case_17():
    str_0 = '3RI0\\YlxRR3X'
    str_1 = module_0.prettify(str_0)
    str_2 = '\\#M\nahrW\r]a'
    str_3 = module_0.reverse(str_2)
    int_0 = 1545
    str_4 = module_0.roman_encode(int_0)
    bool_0 = module_0.booleanize(str_4)
    str_5 = 'pm"'
    str_6 = '9T,{\rBr\\QV/; {XJ'
    str_7 = module_0.snake_case_to_camel(str_5, bool_0, str_6)
    roman_numbers_0 = module_0.__RomanNumbers()
    str_8 = '~Q}'
    str_9 = module_0.compress(str_8)
    str_10 = module_0.prettify(str_4)
    int_1 = module_0.roman_decode(str_4)

def test_case_18():
    str_0 = 'the_snake_is_green'
    str_1 = module_0.snake_case_to_camel(str_0)
    bool_0 = False
    str_2 = module_0.snake_case_to_camel(str_0, bool_0)
    str_3 = '-'
    str_4 = module_0.snake_case_to_camel(str_0, str_3)

def test_case_19():
    str_0 = 'this_is_a_camel_string'
    bool_0 = True
    str_1 = module_0.snake_case_to_camel(str_0, bool_0)
    bool_1 = False
    str_2 = module_0.snake_case_to_camel(str_0, bool_1)
    str_3 = 'this::is:a:camel::string'
    str_4 = ':'
    str_5 = module_0.snake_case_to_camel(str_3, bool_1, str_4)
    str_6 = 'this--is--a-camel--string'
    str_7 = '[-_\\s]'
    str_8 = module_0.snake_case_to_camel(str_6, bool_0, str_7)