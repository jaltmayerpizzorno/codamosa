# Automatically generated by Pynguin.
import ansible.module_utils.urls as module_0
import urllib.request as module_1

def test_case_0():
    try:
        dict_0 = {}
        tuple_0 = None
        no_s_s_l_error_0 = module_0.NoSSLError()
        proxy_error_0 = module_0.ProxyError(**dict_0)
        list_0 = [dict_0, dict_0, proxy_error_0]
        missing_module_error_0 = module_0.MissingModuleError(proxy_error_0, list_0)
        var_0 = module_0.prepare_multipart(tuple_0)
    except BaseException:
        pass

def test_case_1():
    try:
        request_0 = module_0.Request()
        str_0 = 'https://httpbi@Zorg/get'
        var_0 = request_0.open(str_0, str_0, str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        s_s_l_validation_handler_0 = None
        bytes_0 = b'lT\xf8'
        dict_0 = {}
        h_t_t_p_s_client_auth_handler_0 = module_0.HTTPSClientAuthHandler(s_s_l_validation_handler_0, bytes_0, **dict_0)
        list_0 = [h_t_t_p_s_client_auth_handler_0]
        parse_result_dotted_dict_0 = module_0.ParseResultDottedDict(*list_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bool_0 = False
        unix_h_t_t_p_s_connection_0 = module_0.UnixHTTPSConnection(bool_0)
        var_0 = unix_h_t_t_p_s_connection_0.connect()
    except BaseException:
        pass

def test_case_4():
    try:
        s_s_l_validation_error_0 = module_0.SSLValidationError()
        var_0 = module_0.get_channel_binding_cert_hash(s_s_l_validation_error_0)
        no_s_s_l_error_0 = module_0.NoSSLError()
        unix_h_t_t_p_connection_0 = module_0.UnixHTTPConnection(s_s_l_validation_error_0)
        custom_h_t_t_p_s_handler_0 = module_0.CustomHTTPSHandler(unix_h_t_t_p_connection_0)
        var_1 = custom_h_t_t_p_s_handler_0.https_open(no_s_s_l_error_0)
    except BaseException:
        pass

def test_case_5():
    try:
        connection_error_0 = module_0.ConnectionError()
        str_0 = '^wn\\)BF*\\DeD'
        request_0 = None
        list_0 = []
        bytes_0 = b'<W\xc6T\xcc\x85'
        tuple_0 = (bytes_0,)
        int_0 = 4910
        list_1 = [str_0, bytes_0]
        custom_h_t_t_p_s_connection_0 = module_0.CustomHTTPSConnection(*list_1)
        request_1 = module_0.Request(list_0, tuple_0, connection_error_0, int_0)
        unix_h_t_t_p_connection_0 = module_0.UnixHTTPConnection(custom_h_t_t_p_s_connection_0)
        var_0 = unix_h_t_t_p_connection_0.__call__(*list_1)
        no_s_s_l_error_0 = module_0.NoSSLError()
        float_0 = 809.431049
        var_1 = module_0.basic_auth_header(no_s_s_l_error_0, float_0)
        var_2 = request_1.delete(request_0)
    except BaseException:
        pass

def test_case_6():
    try:
        request_0 = module_0.Request()
        str_0 = 'tMS>R`{@nnPB'
        var_0 = request_0.open(str_0, str_0, str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = '@Kem'
        var_0 = module_0.generic_urlparse(str_0)
    except BaseException:
        pass

def test_case_8():
    try:
        bytes_0 = b'\xb0\xc3\xb6l\xd2\xd6b\x00\x0c\xa8\x9f\xcf<@l\xd63\xd4'
        s_s_l_validation_error_0 = module_0.SSLValidationError()
        tuple_0 = ()
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(bytes_0, s_s_l_validation_error_0, tuple_0)
        var_0 = s_s_l_validation_handler_0.http_request(s_s_l_validation_error_0)
    except BaseException:
        pass

def test_case_9():
    try:
        parse_result_dotted_dict_0 = module_0.ParseResultDottedDict()
        bool_0 = True
        var_0 = parse_result_dotted_dict_0.as_list()
        s_s_l_validation_error_0 = module_0.SSLValidationError()
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(bool_0, s_s_l_validation_error_0)
        bytes_0 = b'\xa3\xa7\xfamo\x95B\xa2\xacX\xc7\xc86\xee\xb7'
        h_t_t_p_s_client_auth_handler_0 = module_0.HTTPSClientAuthHandler(bytes_0)
        var_1 = parse_result_dotted_dict_0.as_list()
        h_t_t_p_s_client_auth_handler_1 = module_0.HTTPSClientAuthHandler()
        var_2 = s_s_l_validation_handler_0.detect_no_proxy(h_t_t_p_s_client_auth_handler_1)
        list_0 = [s_s_l_validation_handler_0]
        var_3 = module_0.rfc2822_date_string(list_0)
    except BaseException:
        pass

def test_case_10():
    try:
        bool_0 = True
        str_0 = "[hKB'2UZE:rk?]\rA:"
        dict_0 = {str_0: str_0}
        list_0 = []
        connection_error_0 = module_0.ConnectionError(*list_0)
        request_0 = module_0.Request(bool_0, dict_0, connection_error_0, dict_0)
    except BaseException:
        pass

def test_case_11():
    try:
        dict_0 = {}
        list_0 = []
        proxy_error_0 = module_0.ProxyError(*list_0)
        h_t_t_p_s_client_auth_handler_0 = module_0.HTTPSClientAuthHandler(proxy_error_0, **dict_0)
        dict_1 = {}
        int_0 = -2911
        int_1 = 530
        missing_module_error_0 = module_0.MissingModuleError(int_0, int_1)
        bool_0 = False
        bytes_0 = b'\xde\x85\xc4'
        request_0 = module_0.Request(dict_1, missing_module_error_0, bool_0, bytes_0)
        var_0 = request_0.head(h_t_t_p_s_client_auth_handler_0)
    except BaseException:
        pass

def test_case_12():
    try:
        connection_error_0 = module_0.ConnectionError()
        list_0 = []
        bytes_0 = b'<W\xc6T\xcc\x85'
        tuple_0 = (bytes_0,)
        int_0 = 4919
        request_0 = module_0.Request(list_0, tuple_0, connection_error_0, int_0)
        no_s_s_l_error_0 = module_0.NoSSLError()
        str_0 = '(_%Bp(s,nbp#~}-B=!3'
        var_0 = request_0.delete(str_0)
    except BaseException:
        pass

def test_case_13():
    try:
        bool_0 = True
        int_0 = -519
        missing_module_error_0 = None
        var_0 = module_0.url_argument_spec()
        str_0 = 'Linux'
        var_1 = module_0.open_url(str_0, int_0, missing_module_error_0, str_0, bool_0)
    except BaseException:
        pass

def test_case_14():
    try:
        s_s_l_validation_error_0 = module_0.SSLValidationError()
        list_0 = [s_s_l_validation_error_0, s_s_l_validation_error_0, s_s_l_validation_error_0, s_s_l_validation_error_0]
        unix_h_t_t_p_s_connection_0 = module_0.UnixHTTPSConnection(list_0)
        var_0 = module_0.get_channel_binding_cert_hash(unix_h_t_t_p_s_connection_0)
        float_0 = -904.069
        unix_h_t_t_p_handler_0 = module_0.UnixHTTPHandler(float_0)
        dict_0 = {}
        no_s_s_l_error_0 = module_0.NoSSLError(*list_0, **dict_0)
        str_0 = 'uY7OR'
        h_t_t_p_s_client_auth_handler_0 = module_0.HTTPSClientAuthHandler(s_s_l_validation_error_0, str_0)
        h_t_t_p_s_client_auth_handler_1 = module_0.HTTPSClientAuthHandler(h_t_t_p_s_client_auth_handler_0)
        unix_h_t_t_p_s_connection_1 = module_0.UnixHTTPSConnection(unix_h_t_t_p_handler_0)
        connection_error_0 = None
        list_1 = [h_t_t_p_s_client_auth_handler_0, unix_h_t_t_p_handler_0, unix_h_t_t_p_s_connection_1, h_t_t_p_s_client_auth_handler_0]
        float_1 = 4858.0
        request_with_method_0 = module_0.RequestWithMethod(unix_h_t_t_p_s_connection_1, connection_error_0, list_1, float_1)
    except BaseException:
        pass

def test_case_15():
    try:
        complex_0 = None
        s_s_l_validation_error_0 = module_0.SSLValidationError()
        unix_h_t_t_p_s_connection_0 = module_0.UnixHTTPSConnection(complex_0)
        set_0 = {complex_0, complex_0}
        unix_h_t_t_p_connection_0 = module_0.UnixHTTPConnection(set_0)
        float_0 = -745.85123
        list_0 = [s_s_l_validation_error_0, set_0, unix_h_t_t_p_connection_0, float_0]
        var_0 = unix_h_t_t_p_s_connection_0.__call__(*list_0)
    except BaseException:
        pass

def test_case_16():
    try:
        str_0 = None
        var_0 = module_0.getpeercert(str_0)
    except BaseException:
        pass

def test_case_17():
    try:
        parse_result_dotted_dict_0 = module_0.ParseResultDottedDict()
        list_0 = []
        var_0 = module_0.prepare_multipart(list_0)
    except BaseException:
        pass

def test_case_18():
    try:
        set_0 = set()
        float_0 = 0.001
        custom_h_t_t_p_s_handler_0 = module_0.CustomHTTPSHandler()
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(set_0, float_0, custom_h_t_t_p_s_handler_0)
        var_0 = s_s_l_validation_handler_0.get_ca_certs()
    except BaseException:
        pass

def test_case_19():
    try:
        dict_0 = {}
        list_0 = []
        proxy_error_0 = module_0.ProxyError(*list_0)
        h_t_t_p_s_client_auth_handler_0 = module_0.HTTPSClientAuthHandler(proxy_error_0, **dict_0)
        int_0 = -2911
        int_1 = 530
        missing_module_error_0 = module_0.MissingModuleError(int_0, int_1)
        var_0 = h_t_t_p_s_client_auth_handler_0.https_open(missing_module_error_0)
    except BaseException:
        pass

def test_case_20():
    try:
        bool_0 = False
        int_0 = 4010
        var_0 = module_0.atexit_remove_file(int_0)
        int_1 = -620
        missing_module_error_0 = None
        str_0 = 'N274xJ:0f(4SP~.'
        var_1 = module_0.open_url(str_0, int_1, missing_module_error_0, str_0, bool_0)
    except BaseException:
        pass

def test_case_21():
    try:
        request_0 = module_0.Request()
        no_s_s_l_error_0 = module_0.NoSSLError()
        str_0 = 'n>UT &^]T'
        var_0 = module_0.basic_auth_header(no_s_s_l_error_0, str_0)
        str_1 = 'https://httpbin.org/get'
        var_1 = request_0.open(str_1, str_1, str_1)
    except BaseException:
        pass

def test_case_22():
    try:
        dict_0 = {}
        list_0 = []
        proxy_error_0 = module_0.ProxyError(*list_0)
        h_t_t_p_s_client_auth_handler_0 = module_0.HTTPSClientAuthHandler(proxy_error_0, **dict_0)
        int_0 = -2911
        int_1 = 530
        missing_module_error_0 = module_0.MissingModuleError(int_0, int_1)
        bytes_0 = b"\xb0&n}\xa3h\xaa'\x13,'\xb6\xcf\x0e\x03O&\xb3"
        str_0 = 'ftp'
        custom_h_t_t_p_s_handler_0 = module_0.CustomHTTPSHandler(str_0)
        unix_h_t_t_p_connection_0 = module_0.UnixHTTPConnection(custom_h_t_t_p_s_handler_0)
        request_0 = module_0.Request(dict_0, missing_module_error_0, h_t_t_p_s_client_auth_handler_0, unix_h_t_t_p_connection_0)
        var_0 = request_0.get(bytes_0, **dict_0)
    except BaseException:
        pass

def test_case_23():
    try:
        str_0 = ' \n}chLNm]ycl}^5'
        unix_h_t_t_p_s_connection_0 = module_0.UnixHTTPSConnection(str_0)
        var_0 = unix_h_t_t_p_s_connection_0.connect()
    except BaseException:
        pass

def test_case_24():
    try:
        bool_0 = True
        float_0 = 512.0
        str_0 = 'Zwm?Rg%<qR'
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(bool_0, str_0)
        var_0 = s_s_l_validation_handler_0.validate_proxy_response(float_0)
    except BaseException:
        pass

def test_case_25():
    try:
        connection_error_0 = module_0.ConnectionError()
        bool_0 = False
        float_0 = -3159.7
        unix_h_t_t_p_handler_0 = module_0.UnixHTTPHandler(float_0)
        var_0 = unix_h_t_t_p_handler_0.http_open(bool_0)
    except BaseException:
        pass

def test_case_26():
    try:
        no_s_s_l_error_0 = module_0.NoSSLError()
        tuple_0 = ()
        set_0 = {tuple_0, no_s_s_l_error_0, tuple_0}
        var_0 = module_0.build_ssl_validation_error(no_s_s_l_error_0, tuple_0, set_0)
    except BaseException:
        pass

def test_case_27():
    try:
        bool_0 = False
        int_0 = -541
        missing_module_error_0 = None
        str_0 = 'N274xJ:0f(XSP~.'
        var_0 = module_0.open_url(str_0, int_0, missing_module_error_0, str_0, bool_0)
    except BaseException:
        pass

def test_case_28():
    try:
        connection_error_0 = module_0.ConnectionError()
        request_0 = None
        bool_0 = False
        var_0 = module_0.atexit_remove_file(bool_0)
        var_1 = request_0.get(request_0)
    except BaseException:
        pass

def test_case_29():
    try:
        connection_error_0 = module_0.ConnectionError()
        str_0 = '^wn\\)BF*\\DeD'
        list_0 = []
        bytes_0 = b'\xf4\xaa\xb7\xebj!\x83.g<`\x14\xba\xed0-\x9b\xb3\xbb'
        tuple_0 = (bytes_0,)
        int_0 = 4922
        list_1 = [str_0, bytes_0]
        custom_h_t_t_p_s_connection_0 = module_0.CustomHTTPSConnection(*list_1)
        request_0 = module_0.Request(list_0, tuple_0, connection_error_0, int_0)
        h_t_t_p_s_client_auth_handler_0 = module_0.HTTPSClientAuthHandler()
        var_0 = request_0.options(h_t_t_p_s_client_auth_handler_0)
    except BaseException:
        pass

def test_case_30():
    try:
        list_0 = []
        no_s_s_l_error_0 = module_0.NoSSLError(*list_0)
        dict_0 = {}
        h_t_t_p_s_client_auth_handler_0 = module_0.HTTPSClientAuthHandler(no_s_s_l_error_0, **dict_0)
        list_1 = [h_t_t_p_s_client_auth_handler_0, h_t_t_p_s_client_auth_handler_0, list_0]
        list_2 = [h_t_t_p_s_client_auth_handler_0, dict_0, list_1, no_s_s_l_error_0]
        int_0 = -566
        parse_result_dotted_dict_0 = module_0.ParseResultDottedDict()
        list_3 = []
        tuple_0 = (list_3, dict_0)
        request_0 = None
        custom_h_t_t_p_s_handler_0 = module_0.CustomHTTPSHandler(request_0)
        var_0 = module_0.fetch_file(list_1, list_2, int_0, parse_result_dotted_dict_0, list_1, tuple_0, custom_h_t_t_p_s_handler_0)
    except BaseException:
        pass

def test_case_31():
    try:
        bytes_0 = b'0\xd8#|'
        var_0 = module_0.get_channel_binding_cert_hash(bytes_0)
        request_0 = module_0.Request()
        str_0 = ';3?v4FNv40\x0cwr6&~4'
        var_1 = request_0.put(str_0)
    except BaseException:
        pass

def test_case_32():
    try:
        list_0 = []
        s_s_l_validation_error_0 = module_0.SSLValidationError(*list_0)
        custom_h_t_t_p_s_handler_0 = module_0.CustomHTTPSHandler()
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(list_0, custom_h_t_t_p_s_handler_0)
        bool_0 = True
        unix_h_t_t_p_s_connection_0 = module_0.UnixHTTPSConnection(bool_0)
        complex_0 = None
        unix_h_t_t_p_connection_0 = module_0.UnixHTTPConnection(complex_0)
        var_0 = module_0.fetch_url(s_s_l_validation_handler_0, unix_h_t_t_p_s_connection_0, s_s_l_validation_handler_0, bool_0, unix_h_t_t_p_connection_0)
    except BaseException:
        pass

def test_case_33():
    try:
        connection_error_0 = module_0.ConnectionError()
        request_0 = None
        list_0 = []
        bytes_0 = b'<W\xc6T\xcc\x85'
        tuple_0 = (bytes_0,)
        int_0 = 4910
        request_1 = module_0.Request(list_0, tuple_0, connection_error_0, int_0)
        str_0 = '0EA~@r-={\x0b+bV\\jH9bY\x0c'
        str_1 = None
        dict_0 = {str_0: list_0, str_1: connection_error_0, str_1: request_0}
        unix_h_t_t_p_handler_0 = module_0.UnixHTTPHandler(dict_0)
        var_0 = request_1.post(unix_h_t_t_p_handler_0)
    except BaseException:
        pass

def test_case_34():
    try:
        str_0 = 'c9#\t$h&Cvo'
        s_s_l_validation_error_0 = module_0.SSLValidationError()
        unix_h_t_t_p_connection_0 = module_0.UnixHTTPConnection(str_0)
        connection_error_0 = module_0.ConnectionError()
        no_s_s_l_error_0 = module_0.NoSSLError()
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(s_s_l_validation_error_0, no_s_s_l_error_0)
        proxy_error_0 = None
        var_0 = s_s_l_validation_handler_0.make_context(proxy_error_0, no_s_s_l_error_0)
    except BaseException:
        pass

def test_case_35():
    try:
        bool_0 = True
        parse_result_dotted_dict_0 = module_0.ParseResultDottedDict()
        str_0 = 'pCK0Q$R?\x0cs['
        dict_0 = {}
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(dict_0, bool_0)
        var_0 = s_s_l_validation_handler_0.make_context(str_0, str_0)
    except BaseException:
        pass

def test_case_36():
    try:
        parse_result_dotted_dict_0 = module_0.ParseResultDottedDict()
        str_0 = '[1'
        list_0 = [str_0, str_0, str_0]
        unix_h_t_t_p_s_connection_0 = module_0.UnixHTTPSConnection(list_0)
        int_0 = 200000
        var_0 = module_0.build_ssl_validation_error(parse_result_dotted_dict_0, str_0, unix_h_t_t_p_s_connection_0, int_0)
    except BaseException:
        pass

def test_case_37():
    try:
        parse_result_dotted_dict_0 = module_0.ParseResultDottedDict()
        int_0 = 352
        connection_error_0 = None
        set_0 = {int_0}
        custom_h_t_t_p_s_handler_0 = None
        var_0 = module_0.open_url(int_0, connection_error_0, set_0, custom_h_t_t_p_s_handler_0)
    except BaseException:
        pass

def test_case_38():
    try:
        bool_0 = False
        int_0 = -620
        missing_module_error_0 = None
        str_0 = '7'
        var_0 = module_0.open_url(str_0, int_0, missing_module_error_0, bool_0, int_0)
    except BaseException:
        pass

def test_case_39():
    try:
        parse_result_dotted_dict_0 = module_0.ParseResultDottedDict()
        str_0 = '#7-`}[^E\x0b<s9wFS'
        dict_0 = {str_0: parse_result_dotted_dict_0, str_0: str_0, str_0: parse_result_dotted_dict_0}
        var_0 = module_0.prepare_multipart(dict_0)
    except BaseException:
        pass

def test_case_40():
    try:
        bool_0 = False
        missing_module_error_0 = None
        dict_0 = {missing_module_error_0: bool_0}
        var_0 = module_0.prepare_multipart(dict_0)
    except BaseException:
        pass

def test_case_41():
    try:
        list_0 = []
        no_s_s_l_error_0 = module_0.NoSSLError(*list_0)
        float_0 = None
        str_0 = 'n274xj'
        bool_0 = False
        connection_error_0 = module_0.ConnectionError()
        str_1 = '<P\\ENa'
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(bool_0, connection_error_0, str_1)
        var_0 = s_s_l_validation_handler_0.make_context(float_0, str_0)
    except BaseException:
        pass

def test_case_42():
    try:
        s_s_l_validation_error_0 = None
        str_0 = "($DZuU$\rc\r7C3,'nouE"
        h_t_t_p_s_client_auth_handler_0 = module_0.HTTPSClientAuthHandler(str_0)
        parse_result_dotted_dict_0 = module_0.ParseResultDottedDict()
        bytes_0 = b'$\xa8\xa5$\x9b\x14\x8e\x85\xf1\xa1&?\x17\x02\x10#'
        custom_h_t_t_p_s_connection_0 = None
        var_0 = module_0.open_url(s_s_l_validation_error_0, h_t_t_p_s_client_auth_handler_0, parse_result_dotted_dict_0, bytes_0, custom_h_t_t_p_s_connection_0)
    except BaseException:
        pass

def test_case_43():
    try:
        bool_0 = False
        s_s_l_validation_error_0 = None
        str_0 = 'd8}IN!v>%|6via\t'
        str_1 = 'n>\nyR=:'
        list_0 = [bool_0]
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(str_1, list_0)
        var_0 = s_s_l_validation_handler_0.validate_proxy_response(s_s_l_validation_error_0, str_0)
    except BaseException:
        pass

def test_case_44():
    try:
        request_0 = module_0.Request()
        str_0 = 'https://httpbin.org/get'
        var_0 = request_0.open(str_0, str_0, str_0)
    except BaseException:
        pass

def test_case_45():
    try:
        request_0 = module_0.Request()
        str_0 = 'https://httpbin.org/based-get'
        list_0 = [request_0, str_0, request_0]
        unix_h_t_t_p_handler_0 = module_0.UnixHTTPHandler(list_0)
        missing_module_error_0 = module_0.MissingModuleError(unix_h_t_t_p_handler_0, request_0)
        unix_h_t_t_p_s_connection_0 = module_0.UnixHTTPSConnection(missing_module_error_0)
        dict_0 = {str_0: unix_h_t_t_p_handler_0}
        var_0 = request_0.patch(unix_h_t_t_p_s_connection_0, **dict_0)
    except BaseException:
        pass

def test_case_46():
    try:
        h_t_t_p_s_handler_0 = module_1.HTTPSHandler()
        str_0 = 'https://www.google.com'
        var_0 = module_1.urlopen(str_0)
        var_1 = module_0.getpeercert(var_0)
        str_1 = 'http://www.google.com'
        var_2 = module_0.getpeercert(str_1)
    except BaseException:
        pass