# Automatically generated by Pynguin.
import dataclasses_json.mm as module_0
import builtins as module_1

def test_case_0():
    try:
        float_0 = -634.5
        str_0 = 'P'
        int_0 = -2302
        float_1 = None
        bytes_0 = b'\xbaK'
        union_field_0 = module_0._UnionField(int_0, float_1, bytes_0)
        str_1 = ' with either the `dataclass_json` decorator or mixin.'
        str_2 = 'cR;gX'
        dict_0 = {str_1: str_1, str_2: str_0, str_1: float_1}
        bool_0 = False
        str_3 = ')h*!sYMX5YV~0*+4'
        tuple_0 = (dict_0, bool_0, str_3)
        var_0 = module_0.build_type(float_0, str_0, float_0, union_field_0, tuple_0)
    except BaseException:
        pass

def test_case_1():
    try:
        schema_f_0 = module_0.SchemaF()
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '8\tMd'
        timestamp_field_0 = None
        str_1 = 'zD'
        set_0 = {str_1, timestamp_field_0, timestamp_field_0}
        var_0 = module_0.build_type(str_0, timestamp_field_0, str_1, set_0, str_1)
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'\xfc\x044\xc9\x13\xaa\x87w\xff\x8d\xb9E\xebn'
        set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
        str_0 = 'tH{'
        list_0 = []
        tuple_0 = None
        var_0 = None
        list_1 = [list_0, tuple_0, var_0]
        var_1 = module_0.schema(set_0, str_0, list_1)
    except BaseException:
        pass

def test_case_4():
    try:
        bytearray_0 = module_1.bytearray()
        str_0 = 'LLnh90wOfcBskJi'
        str_1 = 'dump'
        dict_0 = {str_0: str_0, str_1: str_0}
        float_0 = -112.0
        dict_1 = None
        bytes_0 = b'\xdf\xc0\xdd\xa8\x1d\x05\xe9\xa3\x8a/\xa8\xf7\n\xecN'
        tuple_0 = (dict_0, str_0, bytes_0)
        type_0 = module_0.build_schema(float_0, dict_1, float_0, tuple_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = '6>#HV5'
        dict_0 = {str_0: str_0, str_0: str_0}
        bool_0 = False
        iso_field_0 = module_0._IsoField(dump_default=dict_0, data_key=str_0, allow_none=bool_0, **dict_0)
        var_0 = iso_field_0.serialize(str_0, iso_field_0)
    except BaseException:
        pass