# Automatically generated by Pynguin.
import typesystem.formats as module_0

def test_case_0():
    try:
        str_0 = 'i=6{.2\tF'
        time_format_0 = module_0.TimeFormat()
        time_0 = time_format_0.validate(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = 4
        base_format_0 = module_0.BaseFormat()
        var_0 = base_format_0.validate(int_0)
    except BaseException:
        pass

def test_case_2():
    try:
        date_format_0 = module_0.DateFormat()
        str_0 = '2019-11-14'
        str_1 = '2009-12-31'
        date_0 = date_format_0.validate(str_0)
        date_1 = date_format_0.validate(str_1)
        base_format_0 = module_0.BaseFormat()
        optional_0 = base_format_0.serialize(date_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '2020-05-18T10:45:39+00:00'
        date_format_0 = module_0.DateFormat()
        date_0 = date_format_0.validate(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        date_time_format_0 = module_0.DateTimeFormat()
        str_0 = '2002-10-02T15:00:00Z'
        datetime_0 = date_time_format_0.validate(str_0)
        date_format_0 = module_0.DateFormat()
        date_0 = date_format_0.validate(date_time_format_0)
    except BaseException:
        pass

def test_case_5():
    try:
        date_format_0 = module_0.DateFormat()
        optional_0 = date_format_0.serialize(date_format_0)
    except BaseException:
        pass

def test_case_6():
    try:
        date_time_format_0 = module_0.DateTimeFormat()
        str_0 = '2002-10-02T15:00:00Z'
        datetime_0 = date_time_format_0.validate(str_0)
        u_u_i_d_format_0 = module_0.UUIDFormat()
        time_format_0 = module_0.TimeFormat()
        bool_0 = time_format_0.is_native_type(u_u_i_d_format_0)
        optional_0 = date_time_format_0.serialize(datetime_0)
        optional_1 = time_format_0.serialize(str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        bytes_0 = b'\tev\xb3\x8aL\x1c\xd5\xf3\x10\x8c\x9c'
        time_format_0 = module_0.TimeFormat()
        time_0 = time_format_0.validate(bytes_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = '2002-10-02T15:00:00Z'
        time_format_0 = module_0.TimeFormat()
        optional_0 = time_format_0.serialize(str_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'i=6{.2\tF'
        date_time_format_0 = module_0.DateTimeFormat()
        bool_0 = date_time_format_0.is_native_type(date_time_format_0)
        datetime_0 = date_time_format_0.validate(str_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = 'i=6{.2\tF'
        date_time_format_0 = module_0.DateTimeFormat()
        datetime_0 = date_time_format_0.validate(str_0)
    except BaseException:
        pass

def test_case_11():
    try:
        date_time_format_0 = module_0.DateTimeFormat()
        optional_0 = date_time_format_0.serialize(date_time_format_0)
    except BaseException:
        pass

def test_case_12():
    try:
        date_format_0 = module_0.DateFormat()
        u_u_i_d_format_0 = module_0.UUIDFormat()
        u_u_i_d_0 = u_u_i_d_format_0.validate(date_format_0)
    except BaseException:
        pass

def test_case_13():
    try:
        base_format_0 = module_0.BaseFormat()
        date_time_format_0 = module_0.DateTimeFormat()
        u_u_i_d_format_0 = module_0.UUIDFormat()
        str_0 = u_u_i_d_format_0.serialize(date_time_format_0)
        str_1 = '2002-10-52T15:00:00Z'
        datetime_0 = date_time_format_0.validate(str_1)
    except BaseException:
        pass

def test_case_14():
    try:
        base_format_0 = module_0.BaseFormat()
        dict_0 = {}
        u_u_i_d_format_0 = module_0.UUIDFormat(**dict_0)
        bool_0 = u_u_i_d_format_0.is_native_type(base_format_0)
        date_time_format_0 = module_0.DateTimeFormat()
        str_0 = '2002-10-52T15:00:00Z'
        datetime_0 = date_time_format_0.validate(str_0)
    except BaseException:
        pass

def test_case_15():
    try:
        dict_0 = None
        base_format_0 = module_0.BaseFormat()
        bool_0 = base_format_0.is_native_type(dict_0)
    except BaseException:
        pass

def test_case_16():
    try:
        dict_0 = None
        time_format_0 = module_0.TimeFormat()
        bool_0 = time_format_0.is_native_type(dict_0)
        optional_0 = time_format_0.serialize(dict_0)
        u_u_i_d_format_0 = module_0.UUIDFormat()
        str_0 = 'R'
        time_0 = time_format_0.validate(str_0)
    except BaseException:
        pass

def test_case_17():
    try:
        str_0 = '200-10-02T1500:00Z'
        u_u_i_d_format_0 = module_0.UUIDFormat()
        u_u_i_d_0 = u_u_i_d_format_0.validate(str_0)
    except BaseException:
        pass

def test_case_18():
    try:
        time_format_0 = None
        date_format_0 = module_0.DateFormat()
        optional_0 = date_format_0.serialize(time_format_0)
        list_0 = []
        time_0 = time_format_0.validate(list_0)
    except BaseException:
        pass

def test_case_19():
    try:
        date_format_0 = module_0.DateFormat()
        str_0 = '2019-11-14'
        str_1 = '2009-12-31'
        date_0 = date_format_0.validate(str_0)
        date_time_format_0 = module_0.DateTimeFormat()
        datetime_0 = date_time_format_0.validate(str_1)
    except BaseException:
        pass

def test_case_20():
    try:
        date_format_0 = module_0.DateFormat()
        str_0 = '2020-05-15'
        date_0 = date_format_0.validate(str_0)
        str_1 = '2020-15-15'
        date_1 = date_format_0.validate(str_1)
    except BaseException:
        pass

def test_case_21():
    try:
        date_time_format_0 = module_0.DateTimeFormat()
        str_0 = '2002-10-02T15:00:00Z'
        datetime_0 = date_time_format_0.validate(str_0)
        date_format_0 = module_0.DateFormat()
        optional_0 = date_format_0.serialize(datetime_0)
        set_0 = None
        list_0 = [str_0, set_0, str_0]
        base_format_0 = module_0.BaseFormat(*list_0)
    except BaseException:
        pass

def test_case_22():
    try:
        date_time_format_0 = module_0.DateTimeFormat()
        str_0 = '2002-10-52T15:00:00Z'
        datetime_0 = date_time_format_0.validate(str_0)
    except BaseException:
        pass

def test_case_23():
    try:
        time_format_0 = module_0.TimeFormat()
        str_0 = '24:00:00.000000'
        time_0 = time_format_0.validate(str_0)
    except BaseException:
        pass

def test_case_24():
    try:
        date_time_format_0 = module_0.DateTimeFormat()
        dict_0 = {}
        time_format_0 = module_0.TimeFormat(**dict_0)
        str_0 = '2019-09-2T04:18:48+00'
        datetime_0 = date_time_format_0.validate(str_0)
        optional_0 = date_time_format_0.serialize(datetime_0)
        time_0 = time_format_0.validate(optional_0)
    except BaseException:
        pass