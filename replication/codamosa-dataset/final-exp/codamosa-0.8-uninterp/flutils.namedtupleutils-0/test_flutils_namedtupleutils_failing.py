# Automatically generated by Pynguin.
import flutils.namedtupleutils as module_0
import collections.abc as module_1
import types as module_2

def test_case_0():
    try:
        var_0 = None
        var_1 = module_0.to_namedtuple(var_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = b']\xcc\xb1\x14\xce\x06Nf{\xdb_\x81W\xe9\xef'
        tuple_0 = ()
        var_0 = module_0.to_namedtuple(tuple_0)
        var_1 = module_0.to_namedtuple(bytes_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'RY*08F\x0cXaISpTU!O9'
        str_1 = 'pos'
        str_2 = None
        dict_0 = {str_0: str_0, str_1: str_1, str_2: str_0}
        float_0 = 5347.9597
        bytes_0 = None
        tuple_0 = (dict_0, bytes_0, float_0, bytes_0)
        var_0 = module_0.to_namedtuple(tuple_0)
        mapping_0 = module_1.Mapping(**dict_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'\x82`H\xa6^\x07q\xaf-\xb1\xa0\x99"\xbeJ\xb3\xaa\x91{'
        simple_namespace_0 = module_2.SimpleNamespace()
        var_0 = module_0.to_namedtuple(simple_namespace_0)
        dict_0 = {bytes_0: bytes_0, bytes_0: simple_namespace_0}
        var_1 = module_0.to_namedtuple(dict_0)
    except BaseException:
        pass