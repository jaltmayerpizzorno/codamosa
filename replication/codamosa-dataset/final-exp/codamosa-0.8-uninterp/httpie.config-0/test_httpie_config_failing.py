# Automatically generated by Pynguin.
import httpie.config as module_0
import pathlib as module_1

def test_case_0():
    try:
        path_0 = module_0.get_default_config_dir()
        base_config_dict_0 = module_0.BaseConfigDict(path_0)
        path_1 = module_1.Path()
        base_config_dict_1 = module_0.BaseConfigDict(path_1)
        var_0 = base_config_dict_1.load()
    except BaseException:
        pass

def test_case_1():
    try:
        config_0 = module_0.Config()
        var_0 = config_0.save()
    except BaseException:
        pass

def test_case_2():
    try:
        path_0 = module_0.get_default_config_dir()
        base_config_dict_0 = module_0.BaseConfigDict(path_0)
        dict_0 = {}
        path_1 = module_1.Path(**dict_0)
        base_config_dict_1 = module_0.BaseConfigDict(path_1)
        bool_0 = base_config_dict_1.is_new()
        path_2 = module_1.Path()
        base_config_dict_2 = module_0.BaseConfigDict(path_2)
        config_0 = module_0.Config(path_2)
        var_0 = base_config_dict_1.delete()
    except BaseException:
        pass

def test_case_3():
    try:
        path_0 = module_0.get_default_config_dir()
        bytes_0 = b'\xacV'
        var_0 = path_0.write_bytes(bytes_0)
        var_1 = path_0.is_mount()
        base_config_dict_0 = module_0.BaseConfigDict(path_0)
        var_2 = base_config_dict_0.load()
    except BaseException:
        pass

def test_case_4():
    try:
        path_0 = module_0.get_default_config_dir()
        path_1 = None
        base_config_dict_0 = module_0.BaseConfigDict(path_1)
        var_0 = base_config_dict_0.delete()
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'httpie/config.json'
        base_config_dict_0 = module_0.BaseConfigDict(str_0)
        var_0 = base_config_dict_0.save()
    except BaseException:
        pass

def test_case_6():
    try:
        path_0 = module_0.get_default_config_dir()
        base_config_dict_0 = module_0.BaseConfigDict(path_0)
        var_0 = base_config_dict_0.load()
        base_config_dict_1 = module_0.BaseConfigDict(path_0)
        config_0 = module_0.Config()
        config_1 = module_0.Config()
        list_0 = []
        str_0 = '\n    The HTTP method to be used for the request (GET, POST, PUT, DELETE, ...).\n\n    This argument can be omitted in which case HTTPie will use POST if there\n    is some data to be sent, otherwise GET:\n\n        $ http example.org               # => GET\n        $ http example.org hello=world   # => POST\n\n    '
        config_2 = module_0.Config(str_0)
        path_1 = module_0.get_default_config_dir()
        config_file_error_0 = module_0.ConfigFileError(*list_0)
        config_file_error_1 = module_0.ConfigFileError()
        var_1 = config_2.save()
    except BaseException:
        pass