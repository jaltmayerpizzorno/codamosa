# Automatically generated by Pynguin.
import ansible.module_utils.common.network as module_0

def test_case_0():
    try:
        set_0 = set()
        var_0 = module_0.to_masklen(set_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'a\x0cV\x0b0-J|zel;4k'
        var_0 = module_0.to_netmask(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '255.255.255.0'
        var_0 = module_0.is_netmask(str_0)
        str_1 = '255.255.123.0'
        var_1 = module_0.is_netmask(str_1)
        float_0 = 929.2777
        str_2 = '<'
        list_0 = [var_1, str_1, str_2]
        var_2 = module_0.to_subnet(float_0, str_2, list_0)
    except BaseException:
        pass

def test_case_3():
    try:
        float_0 = -1178.555
        list_0 = [float_0, float_0]
        var_0 = module_0.to_subnet(float_0, list_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = '192.168.1.5'
        int_0 = 24
        bool_0 = True
        var_0 = module_0.to_subnet(str_0, int_0, bool_0)
        var_1 = module_0.to_bits(int_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = ''
        var_0 = module_0.to_ipv6_subnet(str_0)
        int_0 = 465
        var_1 = module_0.to_ipv6_subnet(int_0)
    except BaseException:
        pass

def test_case_6():
    try:
        int_0 = -2096
        var_0 = module_0.to_ipv6_subnet(int_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = "yTL9[1'"
        var_0 = module_0.to_bits(str_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = '^M4QP'
        dict_0 = {str_0: str_0, str_0: str_0}
        var_0 = module_0.is_mac(dict_0)
    except BaseException:
        pass

def test_case_9():
    try:
        complex_0 = None
        var_0 = module_0.is_masklen(complex_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = "W#\\5c\tcAry'7YwoH8E%*"
        float_0 = -1103.71898
        var_0 = module_0.to_subnet(str_0, float_0)
    except BaseException:
        pass