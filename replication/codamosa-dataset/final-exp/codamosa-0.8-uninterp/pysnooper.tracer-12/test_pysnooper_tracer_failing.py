# Automatically generated by Pynguin.
import pysnooper.tracer as module_0

def test_case_0():
    try:
        int_0 = 46
        list_0 = [int_0, int_0, int_0, int_0]
        var_0 = module_0.get_write_function(int_0, list_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '{indent}Elapsed time: {elapsed_time_string}'
        list_0 = [str_0, str_0, str_0, str_0]
        int_0 = -119
        tracer_0 = module_0.Tracer(str_0, list_0, int_0)
    except BaseException:
        pass

def test_case_2():
    try:
        unavailable_source_0 = module_0.UnavailableSource()
        str_0 = 'Tj(%/0=5:lTzY#nb5j'
        tracer_0 = module_0.Tracer(str_0)
        int_0 = 2543
        set_0 = set()
        str_1 = 'B h)'
        dict_0 = {str_0: str_1, str_1: str_1, str_1: str_0}
        tracer_1 = module_0.Tracer(tracer_0, int_0, set_0, dict_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'\xdcP\xe5}*j\xccu\xedC|\x98\x86(\xae\x9b-[\x03'
        list_0 = [bytes_0, bytes_0, bytes_0]
        bytes_1 = b'w3)\xcfG\xc3\xe5$[\x96\xcd)\xbd$\xc5@\xc0\x89 \x07'
        tracer_0 = module_0.Tracer(bytes_0, list_0, bytes_1)
    except BaseException:
        pass

def test_case_4():
    try:
        int_0 = -166
        list_0 = [int_0, int_0]
        file_writer_0 = module_0.FileWriter(int_0, list_0)
        bool_0 = True
        float_0 = 160.4
        str_0 = '~Iq,Ew)\tKjs[9m0'
        tracer_0 = module_0.Tracer(file_writer_0, bool_0, float_0, str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        float_0 = -3208.7669
        bool_0 = False
        tuple_0 = ()
        file_writer_0 = module_0.FileWriter(bool_0, tuple_0)
        var_0 = file_writer_0.write(float_0)
    except BaseException:
        pass

def test_case_6():
    try:
        tracer_0 = module_0.Tracer()
        var_0 = tracer_0.__enter__()
        int_0 = 2408
        set_0 = {var_0, tracer_0, tracer_0, tracer_0}
        str_0 = ',t^bce+C\r'
        list_0 = []
        file_writer_0 = module_0.FileWriter(list_0, int_0)
        var_1 = file_writer_0.write(str_0)
        float_0 = -1046.893489049075
        list_1 = [float_0, set_0, int_0, var_0]
        var_2 = tracer_0.__exit__(int_0, file_writer_0, list_1)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = '\r'
        float_0 = None
        tracer_0 = module_0.Tracer(float_0, str_0)
    except BaseException:
        pass

def test_case_8():
    try:
        tracer_0 = module_0.Tracer()
        list_0 = [tracer_0]
        bytes_0 = b'[\xce\x9a\xeb\xea'
        float_0 = 3445.0
        var_0 = tracer_0.__exit__(list_0, bytes_0, float_0)
    except BaseException:
        pass

def test_case_9():
    try:
        tracer_0 = module_0.Tracer()
        dict_0 = {}
        var_0 = tracer_0.__call__(dict_0)
    except BaseException:
        pass

def test_case_10():
    try:
        float_0 = -1741.6925
        unavailable_source_0 = module_0.UnavailableSource()
        var_0 = unavailable_source_0.__getitem__(float_0)
        str_0 = ' vBj"'
        tracer_0 = module_0.Tracer(str_0)
        var_1 = tracer_0.__enter__()
        var_2 = tracer_0.set_thread_info_padding(unavailable_source_0)
    except BaseException:
        pass

def test_case_11():
    try:
        tracer_0 = module_0.Tracer()
        list_0 = [tracer_0]
        var_0 = tracer_0.__enter__()
        bytes_0 = b'[\xce\x9a\xeb\xea'
        float_0 = 3445.0
        var_1 = tracer_0.__enter__()
        var_2 = tracer_0.__exit__(list_0, bytes_0, float_0)
    except BaseException:
        pass

def test_case_12():
    try:
        tracer_0 = module_0.Tracer()
        list_0 = [tracer_0]
        var_0 = tracer_0.__enter__()
        bytes_0 = b'[\xce\x9a\xeb\xea'
        float_0 = 3445.0
        var_1 = tracer_0.__exit__(list_0, bytes_0, float_0)
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = "'..'^=s)3yNN["
        unavailable_source_0 = module_0.UnavailableSource()
        list_0 = [unavailable_source_0, str_0, str_0]
        dict_0 = {str_0: unavailable_source_0, unavailable_source_0: unavailable_source_0, unavailable_source_0: list_0, unavailable_source_0: unavailable_source_0}
        var_0 = module_0.get_write_function(str_0, dict_0)
        str_1 = ' vBj"'
        tracer_0 = module_0.Tracer(str_1)
        var_1 = tracer_0.__enter__()
        var_2 = tracer_0.__enter__()
        str_2 = 'replace'
        dict_1 = {str_2: str_1, str_2: tracer_0}
        var_3 = tracer_0.__call__(dict_1)
    except BaseException:
        pass

def test_case_14():
    try:
        str_0 = '_temp.log'
        str_1 = 'a'
        str_2 = (str_1,)
        bool_0 = False
        tracer_0 = module_0.Tracer(str_0, str_2, bool_0)
    except BaseException:
        pass

def test_case_15():
    try:
        str_0 = '\nm3SV'
        set_0 = {str_0, str_0, str_0, str_0}
        tracer_0 = module_0.Tracer(str_0, set_0)
        var_0 = tracer_0.__enter__()
        var_1 = tracer_0.__enter__()
        list_0 = []
        unavailable_source_0 = module_0.UnavailableSource(*list_0)
        int_0 = None
        bool_0 = False
        var_2 = tracer_0.__exit__(int_0, bool_0, int_0)
    except BaseException:
        pass