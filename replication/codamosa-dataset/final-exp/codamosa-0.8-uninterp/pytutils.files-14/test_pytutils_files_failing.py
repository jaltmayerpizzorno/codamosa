# Automatically generated by Pynguin.
import pytutils.files as module_0

def test_case_0():
    try:
        bytes_0 = b'\x1a\xdcq\xcf\xe2\x18H,*\xda`\x93CK\\'
        var_0 = module_0.burp(bytes_0, bytes_0, bytes_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bool_0 = False
        bytes_0 = b''
        int_0 = None
        dict_0 = {bool_0: int_0, bool_0: bytes_0, bool_0: bool_0, int_0: int_0}
        list_0 = [dict_0, bytes_0, bool_0]
        int_1 = 1465
        var_0 = module_0.islurp(list_0, list_0, int_1)
        str_0 = '$":@Q=a6XB_'
        var_1 = module_0.burp(bytes_0, str_0, bytes_0, int_0, bool_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'test.txt'
        bytes_0 = b'hello world\n'
        var_0 = module_0.burp(str_0, bytes_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'L5?=9sV'
        var_0 = module_0.islurp(str_0)
        var_1 = next(var_0, str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = '-'
        var_0 = module_0.islurp(str_0)
        var_1 = next(var_0, str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'test.txt'
        bytes_0 = b'h\x96ello orld\n'
        var_0 = module_0.burp(str_0, bytes_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = '-'
        var_0 = module_0.islurp(str_0)
        set_0 = {str_0, var_0}
        var_1 = module_0.burp(str_0, set_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = '/dev/null'
        var_0 = module_0.islurp(str_0)
        float_0 = -23.9038
        str_1 = '\x0b\rdr#ldP@1'
        var_1 = module_0.islurp(float_0, str_1, str_0, float_0)
        var_2 = next(var_0, str_0)
        str_2 = '-'
        list_0 = None
        tuple_0 = ()
        var_3 = module_0.burp(str_2, float_0, list_0, tuple_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = 'test_islurp_expanded'
        int_0 = 2
        bool_0 = True
        bool_1 = False
        var_0 = module_0.islurp(str_0, int_0, bool_0, bool_1, bool_1)
        var_1 = [s for s in var_0]
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'test.txt'
        var_0 = list(str_0)
        var_1 = module_0.islurp(str_0)
        var_2 = list(var_1)
        str_1 = 'U*$-'
        bool_0 = True
        var_3 = module_0.islurp(str_1, bool_0)
        var_4 = list(var_3)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = 'testdata.txt'
        str_1 = 'r'
        str_2 = 'LINEMODE'
        bool_0 = True
        bool_1 = True
        bool_2 = True
        var_0 = module_0.islurp(str_0, str_1, str_2, bool_0, bool_1, bool_2)
        var_1 = next(var_0)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = 'X'
        int_0 = 987
        var_0 = module_0.islurp(int_0, int_0)
        bool_0 = True
        set_0 = {str_0, str_0, str_0}
        dict_0 = {str_0: set_0, bool_0: bool_0}
        var_1 = module_0.islurp(str_0, bool_0)
        var_2 = module_0.islurp(str_0)
        float_0 = -23.9038
        str_1 = "Z\nXvS^='q\\\n3Kl8G3"
        str_2 = '?)'
        var_3 = module_0.islurp(float_0, set_0, str_1, dict_0, str_2)
        str_3 = '\x0b\rdr#ldP@E'
        var_4 = next(var_2, str_3)
        bytes_0 = b'C\x16U\x005'
        float_1 = None
        str_4 = 'LhuCR0u^#z#estZ'
        bytes_1 = b';\x1d\x06@7\xb3C /o'
        bool_1 = False
        var_5 = module_0.burp(bytes_0, float_1, dict_0, str_4, bytes_1, bool_1)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = 'testdata.txt'
        str_1 = 'r'
        str_2 = 'LINEMODE'
        bool_0 = False
        bool_1 = True
        bool_2 = False
        var_0 = module_0.islurp(str_0, str_1, str_2, bool_0, bool_1, bool_2)
        var_1 = next(var_0)
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = 'r'
        bool_0 = True
        bool_1 = True
        bool_2 = True
        var_0 = module_0.islurp(str_0, str_0, str_0, bool_0, bool_1, bool_2)
        var_1 = next(var_0)
    except BaseException:
        pass