# Automatically generated by Pynguin.
import ansible.utils.vars as module_0

def test_case_0():
    try:
        tuple_0 = ()
        str_0 = None
        var_0 = module_0.merge_hash(tuple_0, str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        set_0 = set()
        str_0 = "&)'#\x0c5^{<\n\\SzipEM&"
        var_0 = module_0.combine_vars(set_0, set_0, str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bool_0 = True
        bytes_0 = b'\x01\x93kj\xc5G\x12\x1b,\x07\xe7z'
        var_0 = module_0.combine_vars(bool_0, bytes_0)
    except BaseException:
        pass

def test_case_3():
    try:
        var_0 = module_0.get_unique_id()
        str_0 = 'block_end_string'
        dict_0 = {str_0: var_0}
        bytes_0 = b'e\x95\x16w\x11\x89\x1b\xd2\x01\xe0\xd2o'
        var_1 = module_0.combine_vars(dict_0, bytes_0)
    except BaseException:
        pass

def test_case_4():
    try:
        bool_0 = False
        dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
        float_0 = 512.0
        float_1 = 1838.21
        var_0 = module_0.merge_hash(bool_0, dict_0, float_0, float_1)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'S1Y.dff'
        var_0 = module_0.load_extra_vars(str_0)
        set_0 = set()
        var_1 = module_0.load_options_vars(set_0)
        str_1 = 'f]E~8~'
        var_2 = module_0._isidentifier_PY3(str_1)
        bytes_0 = b'\x7fC'
        var_3 = module_0.load_extra_vars(bytes_0)
        bytes_1 = b'\x05\xaa\x05\xa4JO\x99\x88"\xe0U'
        list_0 = []
        var_4 = module_0.combine_vars(bytes_1, set_0, list_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'S1.df'
        var_0 = module_0.load_extra_vars(str_0)
        dict_0 = {}
        str_1 = 'P'
        int_0 = 70
        float_0 = None
        var_1 = module_0.load_options_vars(float_0)
        var_2 = module_0.combine_vars(dict_0, str_1, int_0)
    except BaseException:
        pass