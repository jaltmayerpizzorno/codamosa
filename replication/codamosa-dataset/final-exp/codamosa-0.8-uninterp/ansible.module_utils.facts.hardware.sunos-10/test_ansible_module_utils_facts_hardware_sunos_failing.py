# Automatically generated by Pynguin.
import ansible.module_utils.facts.hardware.sunos as module_0

def test_case_0():
    try:
        int_0 = -2241
        sun_o_s_hardware_0 = module_0.SunOSHardware(int_0)
        var_0 = sun_o_s_hardware_0.populate()
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = -2247
        sun_o_s_hardware_0 = module_0.SunOSHardware(int_0)
        var_0 = sun_o_s_hardware_0.get_cpu_facts()
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b'J\xc2\xd9\xf5\xd6'
        dict_0 = {}
        sun_o_s_hardware_collector_0 = module_0.SunOSHardwareCollector(bytes_0, dict_0)
        tuple_0 = ()
        list_0 = []
        sun_o_s_hardware_0 = module_0.SunOSHardware(tuple_0, list_0)
        var_0 = sun_o_s_hardware_0.get_memory_facts()
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'D9Ma\x0cQ'
        str_1 = '[qi>|jp(&:j!UU5@?3n'
        sun_o_s_hardware_collector_0 = module_0.SunOSHardwareCollector(str_0, str_1)
        int_0 = -2467
        sun_o_s_hardware_0 = module_0.SunOSHardware(int_0)
        var_0 = sun_o_s_hardware_0.get_dmi_facts()
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'y\nl%ZGBvYe{h\r*dZTZs'
        sun_o_s_hardware_0 = module_0.SunOSHardware(str_0)
        var_0 = sun_o_s_hardware_0.get_device_facts()
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = ''
        sun_o_s_hardware_0 = module_0.SunOSHardware(str_0)
        var_0 = sun_o_s_hardware_0.get_uptime_facts()
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'metric'
        float_0 = -117.286551
        str_1 = " If this is desired, use '^' to match every line in the file and avoid this warning."
        tuple_0 = (str_0, float_0, str_1)
        set_0 = {str_0, str_0, str_1, tuple_0}
        sun_o_s_hardware_collector_0 = module_0.SunOSHardwareCollector(set_0)
        sun_o_s_hardware_collector_1 = module_0.SunOSHardwareCollector()
        sun_o_s_hardware_0 = module_0.SunOSHardware(tuple_0, sun_o_s_hardware_collector_1)
        var_0 = sun_o_s_hardware_0.get_cpu_facts(sun_o_s_hardware_collector_0)
    except BaseException:
        pass