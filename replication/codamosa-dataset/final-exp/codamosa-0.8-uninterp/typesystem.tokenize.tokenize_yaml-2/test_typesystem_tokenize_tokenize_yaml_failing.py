# Automatically generated by Pynguin.
import typesystem.tokenize.tokenize_yaml as module_0
import typesystem.fields as module_1

def test_case_0():
    try:
        str_0 = '"u^M4:`'
        token_0 = module_0.tokenize_yaml(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = ''
        token_0 = module_0.tokenize_yaml(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b'\xefD\n'
        any_0 = module_0.validate_yaml(bytes_0, bytes_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'boolean'
        field_0 = module_1.Field()
        str_1 = 'true'
        any_0 = module_0.validate_yaml(str_1, field_0)
    except BaseException:
        pass

def test_case_4():
    try:
        bytes_0 = b'\x07c_\xae'
        token_0 = module_0.tokenize_yaml(bytes_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = '7A(25r{D3'
        field_0 = module_1.Field(description=str_0)
        str_1 = 'templates'
        token_0 = module_0.tokenize_yaml(str_1)
        str_2 = None
        str_3 = '39'
        token_1 = module_0.tokenize_yaml(str_3)
        field_1 = module_1.Field(title=str_2, default=str_2)
    except BaseException:
        pass