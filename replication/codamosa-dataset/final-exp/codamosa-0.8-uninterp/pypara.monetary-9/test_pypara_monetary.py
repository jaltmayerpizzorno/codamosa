# Automatically generated by Pynguin.
import pypara.monetary as module_0
import pypara.currencies as module_1
import decimal as module_2

def test_case_0():
    pass

def test_case_1():
    bytes_0 = b'\xe4\x98\xa5'
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    set_0 = {bytes_0, bytes_0}
    none_price_0 = module_0.NonePrice()
    money_0 = none_price_0.times(set_0)
    var_0 = money_0.__round__(list_0)

def test_case_2():
    dict_0 = {}
    none_price_0 = module_0.NonePrice(**dict_0)
    price_0 = none_price_0.positive()
    str_0 = ">'8\r"
    int_0 = 31
    currency_type_0 = module_1.CurrencyType.METAL
    decimal_0 = module_2.Decimal()
    currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
    none_money_0 = module_0.NoneMoney(**dict_0)
    money_0 = none_money_0.floor_divide(currency_0)
    var_0 = price_0.__round__()
    money_1 = money_0.add(money_0)
    money_2 = money_1.__sub__(money_0)

def test_case_3():
    none_money_0 = module_0.NoneMoney()
    money_0 = none_money_0.positive()

def test_case_4():
    dict_0 = {}
    int_0 = 16
    none_price_0 = module_0.NonePrice(**dict_0)
    none_price_1 = module_0.NonePrice()
    price_0 = none_price_1.abs()
    none_money_0 = module_0.NoneMoney()
    list_0 = [dict_0, int_0, none_money_0]
    some_price_0 = module_0.SomePrice(*list_0)
    price_1 = some_price_0.positive()
    price_2 = some_price_0.subtract(price_1)
    monetary_operation_exception_0 = module_0.MonetaryOperationException()
    price_3 = some_price_0.positive()
    none_money_1 = module_0.NoneMoney(**dict_0)
    money_0 = none_money_1.scalar_add(none_price_0)
    var_0 = money_0.__round__()
    price_4 = some_price_0.positive()
    price_5 = some_price_0.add(price_2)
    decimal_0 = module_2.Decimal()
    price_6 = some_price_0.divide(int_0)

def test_case_5():
    dict_0 = {}
    int_0 = 16
    none_price_0 = module_0.NonePrice(**dict_0)
    none_money_0 = module_0.NoneMoney()
    list_0 = [dict_0, int_0, int_0]
    some_price_0 = module_0.SomePrice(*list_0)
    money_0 = none_money_0.positive()
    some_money_0 = module_0.SomeMoney(*list_0, **dict_0)
    money_1 = some_money_0.subtract(money_0)
    price_0 = some_price_0.positive()
    price_1 = some_price_0.subtract(price_0)
    monetary_operation_exception_0 = module_0.MonetaryOperationException()
    price_2 = price_0.__add__(price_0)
    bool_0 = money_1.__lt__(money_1)
    bool_1 = price_0.__lt__(price_0)
    var_0 = None
    money_2 = money_0.__mul__(var_0)

def test_case_6():
    dict_0 = {}
    none_price_0 = module_0.NonePrice()
    none_money_0 = module_0.NoneMoney()
    int_0 = -1173
    list_0 = [dict_0, int_0, none_money_0]
    some_price_0 = module_0.SomePrice(*list_0)
    monetary_operation_exception_0 = module_0.MonetaryOperationException()
    price_0 = some_price_0.positive()
    price_1 = price_0.subtract(price_0)
    decimal_0 = module_2.Decimal(**dict_0)

def test_case_7():
    bytes_0 = b'BP\x15Z'
    dict_0 = {}
    none_price_0 = module_0.NonePrice(**dict_0)
    price_0 = none_price_0.positive()
    bool_0 = price_0.__eq__(bytes_0)

def test_case_8():
    list_0 = []
    none_price_0 = module_0.NonePrice(*list_0)
    price_0 = none_price_0.abs()

def test_case_9():
    bytes_0 = b'\x06\xb1-Y'
    dict_0 = {}
    none_price_0 = module_0.NonePrice(**dict_0)
    price_0 = none_price_0.positive()
    var_0 = price_0.__round__()
    bool_0 = price_0.__eq__(bytes_0)

def test_case_10():
    list_0 = []
    none_price_0 = module_0.NonePrice(*list_0)
    price_0 = none_price_0.negative()

def test_case_11():
    dict_0 = {}
    none_price_0 = module_0.NonePrice(**dict_0)
    price_0 = none_price_0.positive()

def test_case_12():
    bytes_0 = b'\x06\xb1-Y'
    dict_0 = {}
    none_price_0 = module_0.NonePrice()
    price_0 = none_price_0.scalar_add(bytes_0)
    price_1 = none_price_0.positive()
    none_money_0 = module_0.NoneMoney()
    money_0 = none_money_0.floor_divide(dict_0)
    bool_0 = none_price_0.lte(price_1)
    int_0 = -1173
    list_0 = [dict_0, int_0, none_money_0]
    some_price_0 = module_0.SomePrice(*list_0, **dict_0)
    bool_1 = some_price_0.lte(price_1)
    str_0 = 'x>xYY]wfdNT_{yjm'
    str_1 = 'XoW/B[]Y\r#kM\n&y{'
    int_1 = 2690
    currency_type_0 = module_1.CurrencyType.CRYPTO
    decimal_0 = module_2.Decimal()
    currency_0 = module_1.Currency(str_0, str_1, int_1, currency_type_0, decimal_0, int_1)
    incompatible_currency_error_0 = module_0.IncompatibleCurrencyError(currency_0, currency_0)
    price_2 = price_1.with_qty(decimal_0)
    price_3 = some_price_0.positive()
    price_4 = some_price_0.add(price_2)
    price_5 = price_4.__neg__()
    bool_2 = price_2.__eq__(bool_0)

def test_case_13():
    bytes_0 = b'\xb1-'
    dict_0 = {}
    none_price_0 = module_0.NonePrice()
    price_0 = none_price_0.scalar_add(bytes_0)
    price_1 = none_price_0.positive()
    none_money_0 = module_0.NoneMoney()
    money_0 = none_money_0.floor_divide(dict_0)
    bool_0 = none_price_0.lte(price_1)
    int_0 = -1173
    list_0 = [dict_0, int_0, none_money_0]
    some_price_0 = module_0.SomePrice(*list_0)
    bool_1 = some_price_0.lte(price_1)
    var_0 = money_0.__round__()
    bool_2 = price_0.gte(price_0)
    price_2 = some_price_0.positive()
    price_3 = price_2.__neg__()
    monetary_operation_exception_0 = module_0.MonetaryOperationException()
    var_1 = money_0.__round__()
    price_4 = some_price_0.positive()
    price_5 = some_price_0.add(price_3)
    var_2 = None
    money_1 = none_money_0.scalar_subtract(var_2)
    price_6 = price_5.__neg__()
    bool_3 = price_4.__eq__(none_price_0)

def test_case_14():
    dict_0 = {}
    int_0 = 16
    none_price_0 = module_0.NonePrice(**dict_0)
    none_money_0 = module_0.NoneMoney()
    list_0 = [dict_0, int_0, int_0]
    some_price_0 = module_0.SomePrice(*list_0)
    money_0 = none_money_0.positive()
    some_money_0 = module_0.SomeMoney(*list_0, **dict_0)
    money_1 = some_money_0.subtract(money_0)
    price_0 = some_price_0.positive()
    price_1 = some_price_0.subtract(price_0)
    monetary_operation_exception_0 = module_0.MonetaryOperationException()
    price_2 = price_0.__add__(price_0)
    bool_0 = money_1.__lt__(money_1)
    bool_1 = price_0.__lt__(price_0)
    decimal_0 = module_2.Decimal()
    money_2 = some_money_0.add(money_1)
    money_3 = money_0.with_qty(decimal_0)

def test_case_15():
    currency_type_0 = module_1.CurrencyType.METAL
    str_0 = 'U$emD7E)mQ&1'
    int_0 = 3358
    currency_type_1 = module_1.CurrencyType.MONEY
    decimal_0 = module_2.Decimal()
    int_1 = 317
    currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_1, decimal_0, int_1)
    none_money_0 = module_0.NoneMoney()
    money_0 = none_money_0.with_ccy(currency_0)
    money_1 = money_0.divide(currency_type_0)
    money_2 = module_0.Money()
    bool_0 = money_2.lt(money_1)

def test_case_16():
    dict_0 = {}
    none_price_0 = module_0.NonePrice()
    bytes_0 = b'\xa9I\xe0\xbd\xa6'
    price_0 = none_price_0.scalar_add(bytes_0)
    price_1 = none_price_0.positive()
    var_0 = price_1.__round__()
    bool_0 = price_1.__eq__(dict_0)

def test_case_17():
    dict_0 = {}
    none_price_0 = module_0.NonePrice()
    bytes_0 = b'\xa9I\xe0\xbd\xa6'
    price_0 = none_price_0.scalar_add(bytes_0)
    price_1 = none_price_0.positive()
    none_money_0 = module_0.NoneMoney()
    money_0 = none_money_0.floor_divide(dict_0)
    int_0 = 2282
    var_0 = price_1.__round__(int_0)
    bool_0 = price_1.__eq__(int_0)

def test_case_18():
    dict_0 = {}
    none_price_0 = module_0.NonePrice(**dict_0)
    price_0 = none_price_0.positive()
    bool_0 = none_price_0.gte(price_0)

def test_case_19():
    dict_0 = {}
    none_price_0 = module_0.NonePrice(**dict_0)
    price_0 = none_price_0.positive()
    str_0 = ">'8\r"
    price_1 = none_price_0.positive()
    price_2 = price_0.__add__(price_1)
    var_0 = price_2.__round__()
    bool_0 = price_1.__eq__(str_0)

def test_case_20():
    dict_0 = {}
    none_price_0 = module_0.NonePrice()
    bytes_0 = b'\xa9I\xe0\xbd\xa6'
    price_0 = none_price_0.scalar_add(bytes_0)
    price_1 = none_price_0.positive()
    none_money_0 = module_0.NoneMoney()
    money_0 = none_money_0.floor_divide(dict_0)
    int_0 = 2282
    bool_0 = none_price_0.lte(price_1)
    var_0 = price_1.__round__(int_0)
    bool_1 = price_1.__eq__(int_0)

def test_case_21():
    dict_0 = {}
    none_price_0 = module_0.NonePrice()
    bytes_0 = b'\xa9I\xe0\xbd\xa6'
    price_0 = none_price_0.scalar_add(bytes_0)
    price_1 = none_price_0.positive()
    none_money_0 = module_0.NoneMoney()
    money_0 = none_money_0.floor_divide(dict_0)
    int_0 = 2282
    bool_0 = none_price_0.lte(price_1)
    var_0 = price_1.__round__(int_0)
    money_1 = money_0.__truediv__(int_0)
    var_1 = money_0.__round__()
    currency_type_0 = module_1.CurrencyType.MONEY
    bool_1 = price_1.__eq__(currency_type_0)

def test_case_22():
    bytes_0 = b'\x06\xb1-Y'
    dict_0 = {}
    none_price_0 = module_0.NonePrice()
    bytes_1 = b'\xa9I\xe0\xbd\xa6'
    price_0 = none_price_0.scalar_add(bytes_1)
    price_1 = none_price_0.subtract(price_0)
    none_money_0 = module_0.NoneMoney()
    money_0 = none_money_0.floor_divide(dict_0)
    bool_0 = none_price_0.lte(price_1)
    int_0 = -1171
    list_0 = [dict_0, int_0, none_money_0]
    some_price_0 = module_0.SomePrice(*list_0)
    bool_1 = some_price_0.lte(price_1)
    bool_2 = price_1.__eq__(bytes_0)

def test_case_23():
    dict_0 = {}
    int_0 = 12
    none_price_0 = module_0.NonePrice(**dict_0)
    none_price_1 = module_0.NonePrice()
    price_0 = none_price_1.abs()
    none_money_0 = module_0.NoneMoney()
    list_0 = [dict_0, int_0, none_money_0]
    money_0 = none_money_0.round()
    some_money_0 = module_0.SomeMoney(*list_0, **dict_0)
    money_1 = some_money_0.subtract(money_0)
    monetary_operation_exception_0 = module_0.MonetaryOperationException()
    bool_0 = money_1.__lt__(money_1)
    decimal_0 = module_2.Decimal()
    bool_1 = money_1.as_boolean()
    bool_2 = some_money_0.gt(money_0)
    currency_0 = None
    money_2 = money_1.with_ccy(currency_0)

def test_case_24():
    bytes_0 = b'\x06\xb1-Y'
    dict_0 = {}
    none_price_0 = module_0.NonePrice()
    price_0 = none_price_0.scalar_add(bytes_0)
    price_1 = none_price_0.positive()
    none_money_0 = module_0.NoneMoney()
    money_0 = none_money_0.floor_divide(dict_0)
    bool_0 = none_price_0.lte(price_1)
    int_0 = -1173
    list_0 = [dict_0, int_0, none_money_0]
    some_price_0 = module_0.SomePrice(*list_0)
    bool_1 = some_price_0.lte(price_1)
    var_0 = money_0.__round__()
    price_2 = some_price_0.positive()
    bool_2 = price_2.__eq__(int_0)

def test_case_25():
    bytes_0 = b'\x06\xb1-Y'
    dict_0 = {}
    none_price_0 = module_0.NonePrice()
    price_0 = none_price_0.scalar_add(bytes_0)
    price_1 = none_price_0.positive()
    none_money_0 = module_0.NoneMoney()
    money_0 = none_money_0.floor_divide(dict_0)
    bool_0 = none_price_0.lte(price_1)
    int_0 = -1173
    list_0 = [dict_0, int_0, none_money_0]
    some_price_0 = module_0.SomePrice(*list_0)
    bool_1 = some_price_0.lte(price_1)
    var_0 = money_0.__round__()
    price_2 = some_price_0.positive()
    price_3 = price_2.__neg__()
    bool_2 = price_3.__eq__(price_0)

def test_case_26():
    dict_0 = {}
    int_0 = 16
    list_0 = [dict_0, int_0, int_0]
    some_money_0 = module_0.SomeMoney(*list_0, **dict_0)
    currency_type_0 = module_1.CurrencyType.MONEY
    int_1 = -2115
    decimal_0 = module_2.Decimal()
    money_0 = some_money_0.positive()
    money_1 = some_money_0.subtract(money_0)
    str_0 = None
    str_1 = None
    currency_0 = module_1.Currency(str_0, str_1, int_1, currency_type_0, decimal_0, int_0)

def test_case_27():
    bytes_0 = b'\x06\xb1-Y'
    dict_0 = {}
    none_price_0 = module_0.NonePrice()
    price_0 = none_price_0.scalar_add(bytes_0)
    price_1 = none_price_0.positive()
    none_money_0 = module_0.NoneMoney()
    money_0 = none_money_0.floor_divide(dict_0)
    bool_0 = none_price_0.lte(price_1)
    int_0 = -1173
    list_0 = [dict_0, int_0, none_money_0]
    some_price_0 = module_0.SomePrice(*list_0)
    bool_1 = some_price_0.lte(price_1)
    price_2 = some_price_0.positive()
    price_3 = module_0.Price()
    bool_2 = price_3.__eq__(price_0)

def test_case_28():
    dict_0 = {}
    int_0 = 12
    none_price_0 = module_0.NonePrice(**dict_0)
    price_0 = none_price_0.round(int_0)
    price_1 = price_0.negative()
    none_price_1 = module_0.NonePrice()
    price_2 = none_price_1.positive()
    none_money_0 = module_0.NoneMoney()
    money_0 = none_money_0.floor_divide(dict_0)
    bool_0 = none_price_1.lte(price_2)
    int_1 = -1173
    list_0 = [dict_0, int_1, none_money_0]
    some_price_0 = module_0.SomePrice(*list_0)
    bool_1 = some_price_0.lte(price_2)
    price_3 = some_price_0.positive()
    price_4 = price_3.__neg__()
    monetary_operation_exception_0 = module_0.MonetaryOperationException()
    decimal_0 = module_2.Decimal()
    price_5 = price_3.add(price_2)
    price_6 = price_5.scalar_add(decimal_0)
    bool_2 = price_5.__eq__(some_price_0)

def test_case_29():
    dict_0 = {}
    none_price_0 = module_0.NonePrice()
    price_0 = none_price_0.negative()
    price_1 = none_price_0.positive()
    none_money_0 = module_0.NoneMoney()
    money_0 = none_money_0.floor_divide(dict_0)
    bool_0 = none_price_0.lte(price_1)
    int_0 = -1173
    list_0 = [dict_0, int_0, none_money_0]
    some_price_0 = module_0.SomePrice(*list_0, **dict_0)
    bool_1 = some_price_0.lte(price_1)
    str_0 = 'x>xYY]wfdNT_{yjm'
    int_1 = 2690
    currency_type_0 = module_1.CurrencyType.CRYPTO
    decimal_0 = module_2.Decimal()
    price_2 = none_price_0.abs()
    currency_0 = module_1.Currency(str_0, str_0, int_1, currency_type_0, decimal_0, int_1)
    price_3 = some_price_0.positive()
    price_4 = some_price_0.round()
    price_5 = some_price_0.positive()
    bool_2 = price_5.__eq__(list_0)

def test_case_30():
    bytes_0 = b'\x06\xb1-Y'
    dict_0 = {}
    none_price_0 = module_0.NonePrice()
    price_0 = none_price_0.scalar_add(bytes_0)
    price_1 = none_price_0.positive()
    none_money_0 = module_0.NoneMoney()
    money_0 = none_money_0.floor_divide(dict_0)
    price_2 = price_1.positive()
    bool_0 = none_price_0.lte(price_1)
    int_0 = -1173
    list_0 = []
    money_1 = module_0.Money(*list_0, **dict_0)
    money_2 = money_1.__abs__()
    list_1 = [dict_0, int_0, none_money_0]
    some_price_0 = module_0.SomePrice(*list_1)
    bool_1 = some_price_0.lte(price_1)
    var_0 = money_0.__round__()
    price_3 = some_price_0.positive()
    bool_2 = price_3.__eq__(int_0)

def test_case_31():
    bytes_0 = b'\xb1-'
    dict_0 = {}
    none_price_0 = module_0.NonePrice()
    price_0 = none_price_0.scalar_add(bytes_0)
    price_1 = none_price_0.positive()
    bool_0 = none_price_0.is_equal(price_0)
    none_money_0 = module_0.NoneMoney()
    bool_1 = none_price_0.lte(price_1)
    int_0 = -1173
    list_0 = [dict_0, int_0, none_money_0]
    some_price_0 = module_0.SomePrice(*list_0)
    bool_2 = some_price_0.lte(price_1)
    bool_3 = price_0.gte(price_0)
    price_2 = some_price_0.positive()
    price_3 = price_2.__neg__()
    monetary_operation_exception_0 = module_0.MonetaryOperationException()
    decimal_0 = module_2.Decimal()
    price_4 = price_2.add(price_1)
    price_5 = price_4.scalar_add(decimal_0)
    bool_4 = price_5.__eq__(monetary_operation_exception_0)

def test_case_32():
    dict_0 = {}
    int_0 = -8
    none_price_0 = module_0.NonePrice(**dict_0)
    list_0 = [dict_0, int_0, int_0]
    some_price_0 = module_0.SomePrice(*list_0)
    price_0 = some_price_0.positive()
    price_1 = some_price_0.subtract(price_0)
    price_2 = price_0.__add__(price_0)
    decimal_0 = module_2.Decimal()
    bool_0 = price_2.gte(price_0)

def test_case_33():
    bytes_0 = b'\x06\xb1-Y'
    dict_0 = {}
    none_price_0 = module_0.NonePrice()
    price_0 = none_price_0.scalar_add(bytes_0)
    price_1 = none_price_0.positive()
    none_money_0 = module_0.NoneMoney()
    bool_0 = none_price_0.lte(price_1)
    int_0 = -1173
    list_0 = [dict_0, int_0, none_money_0]
    some_price_0 = module_0.SomePrice(*list_0, **dict_0)
    bool_1 = some_price_0.lte(price_1)
    str_0 = 'x>xYY]wfdNT_{yjm'
    str_1 = 'XoW/B[]Y\r#kM\n&y{'
    int_1 = 2690
    currency_type_0 = module_1.CurrencyType.CRYPTO
    decimal_0 = module_2.Decimal()
    currency_0 = module_1.Currency(str_0, str_1, int_1, currency_type_0, decimal_0, int_1)
    str_2 = '9h]y:0jtlGP'
    incompatible_currency_error_0 = module_0.IncompatibleCurrencyError(currency_0, currency_0, str_2)
    date_0 = None
    price_2 = some_price_0.with_dov(date_0)
    incompatible_currency_error_1 = module_0.IncompatibleCurrencyError(currency_0, currency_0, str_1)
    price_3 = some_price_0.positive()
    bool_2 = price_0.__eq__(bytes_0)

def test_case_34():
    str_0 = '\n    Provides a programming error exception.\n\n    The rationale for this exception is to raise them whenever we rely on meta-programming and the programmer has\n    introduced a statement which breaks the coherence of the domain logic.\n    '
    str_1 = ''
    int_0 = 176
    currency_type_0 = module_1.CurrencyType.CRYPTO
    dict_0 = {}
    decimal_0 = module_2.Decimal(**dict_0)
    currency_0 = module_1.Currency(str_0, str_1, int_0, currency_type_0, decimal_0, int_0)
    bool_0 = True
    none_money_0 = module_0.NoneMoney()
    money_0 = none_money_0.convert(currency_0, bool_0)
    none_price_0 = module_0.NonePrice()
    price_0 = none_price_0.positive()

def test_case_35():
    dict_0 = {}
    int_0 = 16
    none_price_0 = module_0.NonePrice(**dict_0)
    price_0 = none_price_0.abs()
    none_money_0 = module_0.NoneMoney()
    list_0 = [dict_0, int_0, none_money_0]
    some_price_0 = module_0.SomePrice(*list_0)
    bool_0 = some_price_0.lte(price_0)
    price_1 = some_price_0.positive()
    price_2 = some_price_0.subtract(price_1)
    monetary_operation_exception_0 = module_0.MonetaryOperationException()
    price_3 = price_1.__add__(price_1)
    none_price_1 = module_0.NonePrice()
    bool_1 = price_1.__lt__(price_1)
    bool_2 = price_3.gte(price_1)
    bool_3 = price_3.__gt__(price_0)
    price_4 = price_0.__neg__()

def test_case_36():
    dict_0 = {}
    int_0 = 12
    none_price_0 = module_0.NonePrice(**dict_0)
    none_price_1 = module_0.NonePrice()
    none_money_0 = module_0.NoneMoney()
    money_0 = none_money_0.floor_divide(dict_0)
    list_0 = [dict_0, int_0, none_money_0]
    some_price_0 = module_0.SomePrice(*list_0)
    price_0 = some_price_0.positive()
    price_1 = some_price_0.subtract(price_0)
    monetary_operation_exception_0 = module_0.MonetaryOperationException()
    var_0 = money_0.__round__()
    bool_0 = price_0.__gt__(price_0)
    price_2 = some_price_0.positive()
    price_3 = price_2.negative()

def test_case_37():
    bytes_0 = b'\xb1\x9f'
    dict_0 = {}
    none_price_0 = module_0.NonePrice()
    none_money_0 = module_0.NoneMoney()
    money_0 = none_money_0.floor_divide(dict_0)
    int_0 = -1173
    list_0 = [dict_0, int_0, none_money_0]
    some_price_0 = module_0.SomePrice(*list_0)
    var_0 = money_0.__round__()
    price_0 = some_price_0.positive()
    price_1 = price_0.__neg__()
    var_1 = None
    money_1 = none_price_0.times(var_1)
    price_2 = some_price_0.positive()
    price_3 = some_price_0.add(price_1)
    price_4 = price_2.__neg__()
    price_5 = price_0.abs()
    bool_0 = price_3.__eq__(bytes_0)

def test_case_38():
    dict_0 = {}
    int_0 = 16
    none_price_0 = module_0.NonePrice(**dict_0)
    price_0 = none_price_0.round(int_0)
    price_1 = price_0.negative()
    none_price_1 = module_0.NonePrice()
    price_2 = none_price_1.abs()
    none_money_0 = module_0.NoneMoney()
    list_0 = [dict_0, int_0, none_money_0]
    some_price_0 = module_0.SomePrice(*list_0)
    bool_0 = some_price_0.lte(price_2)
    price_3 = some_price_0.positive()
    price_4 = some_price_0.subtract(price_3)
    monetary_operation_exception_0 = module_0.MonetaryOperationException()
    price_5 = some_price_0.positive()
    price_6 = none_price_0.add(price_1)
    price_7 = some_price_0.add(price_6)
    price_8 = price_3.__abs__()
    none_money_1 = module_0.NoneMoney(**dict_0)
    money_0 = none_money_1.scalar_add(none_price_0)
    bool_1 = price_7.gte(price_0)
    var_0 = money_0.__round__()
    bool_2 = price_5.__gt__(price_7)
    price_9 = some_price_0.positive()
    price_10 = some_price_0.add(price_4)
    price_11 = price_9.__neg__()
    var_1 = None
    money_1 = money_0.__mul__(var_1)

def test_case_39():
    dict_0 = {}
    int_0 = 16
    none_price_0 = module_0.NonePrice(**dict_0)
    list_0 = [dict_0, int_0, int_0]
    some_price_0 = module_0.SomePrice(*list_0)
    some_money_0 = module_0.SomeMoney(*list_0, **dict_0)
    price_0 = some_price_0.positive()
    price_1 = some_price_0.subtract(price_0)
    monetary_operation_exception_0 = module_0.MonetaryOperationException()
    price_2 = price_0.__add__(price_0)
    decimal_0 = module_2.Decimal()
    bool_0 = price_2.gte(price_0)
    money_0 = some_money_0.positive()
    bool_1 = price_2.__gt__(price_1)
    price_3 = some_price_0.positive()
    bool_2 = price_2.__le__(price_1)
    price_4 = price_1.__neg__()
    money_1 = some_money_0.subtract(money_0)

def test_case_40():
    money_0 = module_0.Money()
    list_0 = [money_0, money_0, money_0]
    some_price_0 = module_0.SomePrice(*list_0)
    int_0 = some_price_0.as_integer()

def test_case_41():
    dict_0 = {}
    int_0 = 12
    none_price_0 = module_0.NonePrice(**dict_0)
    price_0 = none_price_0.round(int_0)
    price_1 = price_0.negative()
    none_price_1 = module_0.NonePrice()
    price_2 = price_0.add(price_0)
    none_money_0 = module_0.NoneMoney()
    int_1 = -1173
    list_0 = [dict_0, int_1, none_money_0]
    some_price_0 = module_0.SomePrice(*list_0)
    bool_0 = some_price_0.lte(price_2)
    price_3 = some_price_0.positive()
    price_4 = some_price_0.subtract(price_3)
    monetary_operation_exception_0 = module_0.MonetaryOperationException()
    price_5 = some_price_0.positive()
    price_6 = some_price_0.positive()
    price_7 = none_price_0.add(price_1)
    price_8 = some_price_0.add(price_4)
    price_9 = price_1.negative()
    price_10 = some_price_0.positive()
    price_11 = some_price_0.add(price_9)
    price_12 = price_3.__neg__()
    price_13 = some_price_0.divide(bool_0)
    bool_1 = price_0.__eq__(price_0)

def test_case_42():
    dict_0 = {}
    int_0 = 12
    none_price_0 = module_0.NonePrice(**dict_0)
    price_0 = none_price_0.round(int_0)
    price_1 = price_0.negative()
    none_price_1 = module_0.NonePrice()
    price_2 = price_0.add(price_0)
    none_money_0 = module_0.NoneMoney()
    money_0 = none_money_0.floor_divide(dict_0)
    price_3 = price_0.add(price_0)
    int_1 = -1173
    list_0 = [dict_0, int_1, none_money_0]
    some_price_0 = module_0.SomePrice(*list_0)
    bool_0 = some_price_0.lte(price_2)
    monetary_operation_exception_0 = module_0.MonetaryOperationException()
    price_4 = price_2.scalar_add(monetary_operation_exception_0)
    price_5 = some_price_0.positive()
    price_6 = some_price_0.subtract(price_5)
    monetary_operation_exception_1 = module_0.MonetaryOperationException()
    price_7 = some_price_0.positive()
    bool_1 = price_7.__lt__(price_2)
    price_8 = none_price_0.add(price_1)
    price_9 = some_price_0.add(price_8)
    price_10 = some_price_0.add(price_1)
    price_11 = price_2.subtract(price_10)

def test_case_43():
    dict_0 = {}
    int_0 = 16
    none_price_0 = module_0.NonePrice(**dict_0)
    none_money_0 = module_0.NoneMoney()
    list_0 = [dict_0, int_0, int_0]
    some_price_0 = module_0.SomePrice(*list_0)
    money_0 = none_money_0.positive()
    some_money_0 = module_0.SomeMoney(*list_0, **dict_0)
    money_1 = some_money_0.subtract(money_0)
    price_0 = some_price_0.positive()
    price_1 = some_price_0.subtract(price_0)
    price_2 = price_0.__add__(price_0)
    bool_0 = money_1.__lt__(money_1)
    bool_1 = price_0.__lt__(price_0)

def test_case_44():
    dict_0 = {}
    int_0 = 16
    none_price_0 = module_0.NonePrice(**dict_0)
    price_0 = none_price_0.abs()
    none_money_0 = module_0.NoneMoney()
    list_0 = [dict_0, int_0, none_money_0]
    money_0 = none_money_0.round()
    some_money_0 = module_0.SomeMoney(*list_0, **dict_0)
    money_1 = some_money_0.subtract(money_0)
    currency_type_0 = module_1.CurrencyType.MONEY
    monetary_operation_exception_0 = module_0.MonetaryOperationException()
    bool_0 = money_1.__lt__(money_1)
    int_1 = -2115
    bool_1 = some_money_0.gte(money_1)
    decimal_0 = module_2.Decimal()
    money_2 = money_1.__abs__()
    bool_2 = money_1.as_boolean()
    bool_3 = some_money_0.gt(money_0)
    money_3 = money_2.__add__(money_0)
    price_1 = price_0.__neg__()
    str_0 = "/a\tBD]8$1de'seb$N}B="
    money_4 = money_3.subtract(money_3)
    currency_0 = module_1.Currency(str_0, str_0, int_1, currency_type_0, decimal_0, int_0)

def test_case_45():
    dict_0 = {}
    int_0 = 16
    none_price_0 = module_0.NonePrice(**dict_0)
    price_0 = none_price_0.abs()
    none_money_0 = module_0.NoneMoney()
    list_0 = [dict_0, int_0, none_money_0]
    money_0 = none_money_0.round()
    some_money_0 = module_0.SomeMoney(*list_0, **dict_0)
    money_1 = some_money_0.subtract(money_0)
    monetary_operation_exception_0 = module_0.MonetaryOperationException()
    decimal_0 = module_2.Decimal()
    var_0 = money_0.__round__()
    bool_0 = some_money_0.gt(money_1)
    bool_1 = some_money_0.gt(money_0)

def test_case_46():
    dict_0 = {}
    int_0 = 16
    none_price_0 = module_0.NonePrice(**dict_0)
    none_money_0 = module_0.NoneMoney()
    list_0 = [dict_0, int_0, none_money_0]
    some_money_0 = module_0.SomeMoney(*list_0, **dict_0)
    currency_type_0 = module_1.CurrencyType.MONEY
    monetary_operation_exception_0 = module_0.MonetaryOperationException()
    int_1 = -2115
    decimal_0 = module_2.Decimal()
    money_0 = some_money_0.positive()
    bool_0 = some_money_0.gt(money_0)
    str_0 = None
    str_1 = None
    currency_0 = module_1.Currency(str_0, str_1, int_1, currency_type_0, decimal_0, int_0)

def test_case_47():
    dict_0 = {}
    int_0 = 16
    none_price_0 = module_0.NonePrice(**dict_0)
    price_0 = none_price_0.abs()
    none_money_0 = module_0.NoneMoney()
    list_0 = [dict_0, int_0, none_money_0]
    money_0 = none_money_0.round()
    some_money_0 = module_0.SomeMoney(*list_0, **dict_0)
    money_1 = some_money_0.subtract(money_0)
    currency_type_0 = module_1.CurrencyType.MONEY
    monetary_operation_exception_0 = module_0.MonetaryOperationException()
    bool_0 = money_1.__lt__(money_1)
    int_1 = -2115
    bool_1 = some_money_0.gte(money_1)
    decimal_0 = module_2.Decimal()
    money_2 = money_1.__abs__()
    bool_2 = money_1.as_boolean()
    bool_3 = some_money_0.gt(money_0)
    price_1 = price_0.__neg__()
    str_0 = "/a\tBD]8$1de'seb$N}B="
    money_3 = money_1.subtract(money_1)
    currency_0 = module_1.Currency(str_0, str_0, int_1, currency_type_0, decimal_0, int_0)

def test_case_48():
    dict_0 = {}
    int_0 = 16
    none_price_0 = module_0.NonePrice(**dict_0)
    none_money_0 = module_0.NoneMoney()
    money_0 = none_money_0.floor_divide(int_0)
    none_money_1 = module_0.NoneMoney()
    list_0 = [dict_0, int_0, int_0]
    some_price_0 = module_0.SomePrice(*list_0)
    money_1 = none_money_1.positive()
    some_money_0 = module_0.SomeMoney(*list_0, **dict_0)
    money_2 = some_money_0.subtract(money_1)
    price_0 = some_price_0.positive()
    price_1 = some_price_0.subtract(price_0)
    monetary_operation_exception_0 = module_0.MonetaryOperationException()
    price_2 = price_0.__add__(price_0)
    bool_0 = money_2.__lt__(money_2)
    bool_1 = price_0.__lt__(price_0)
    bool_2 = money_2.__ge__(money_1)
    bool_3 = money_1.__ge__(money_2)

def test_case_49():
    dict_0 = {}
    int_0 = 12
    none_price_0 = module_0.NonePrice(**dict_0)
    price_0 = none_price_0.round(int_0)
    price_1 = none_price_0.positive()
    none_price_1 = module_0.NonePrice()
    price_2 = none_price_1.positive()
    none_money_0 = module_0.NoneMoney()
    money_0 = none_money_0.floor_divide(dict_0)
    bool_0 = none_price_1.lte(price_2)
    int_1 = -1173
    list_0 = [dict_0, int_1, none_money_0]
    some_price_0 = module_0.SomePrice(*list_0)
    bool_1 = some_price_0.lte(price_2)
    price_3 = some_price_0.positive()
    date_0 = None
    price_4 = none_price_0.with_dov(date_0)
    price_5 = price_3.__neg__()
    monetary_operation_exception_0 = module_0.MonetaryOperationException()
    decimal_0 = module_2.Decimal()
    price_6 = price_3.add(price_2)
    price_7 = module_0.Price()
    bool_2 = price_6.__eq__(some_price_0)

def test_case_50():
    dict_0 = {}
    int_0 = 16
    none_price_0 = module_0.NonePrice(**dict_0)
    price_0 = none_price_0.abs()
    none_money_0 = module_0.NoneMoney()
    list_0 = [dict_0, int_0, none_money_0]
    some_price_0 = module_0.SomePrice(*list_0)
    money_0 = none_money_0.round()
    some_money_0 = module_0.SomeMoney(*list_0, **dict_0)
    money_1 = some_money_0.subtract(money_0)
    bool_0 = some_price_0.lte(price_0)
    price_1 = some_price_0.positive()
    currency_type_0 = module_1.CurrencyType.MONEY
    price_2 = some_price_0.subtract(price_1)
    monetary_operation_exception_0 = module_0.MonetaryOperationException()
    monetary_operation_exception_1 = module_0.MonetaryOperationException()
    price_3 = price_2.__add__(price_2)
    bool_1 = money_1.__lt__(money_0)
    bool_2 = price_1.__lt__(price_2)
    decimal_0 = module_2.Decimal(**dict_0)
    int_1 = -720
    money_2 = money_0.__abs__()
    bool_3 = money_2.as_boolean()
    bool_4 = price_2.gte(price_1)
    bool_5 = some_money_0.gt(money_0)
    bool_6 = price_3.__gt__(price_1)
    price_4 = some_price_0.positive()
    money_3 = some_money_0.negative()
    money_4 = money_3.__add__(money_0)
    price_5 = price_3.__neg__()
    var_0 = None
    str_0 = "/a\tBD]8$1de'seb$N}B="
    money_5 = money_2.subtract(money_4)
    str_1 = "nJ,Q!/'"
    currency_0 = module_1.Currency(str_0, str_1, int_1, currency_type_0, decimal_0, int_0)
    price_6 = none_price_0.floor_divide(var_0)

def test_case_51():
    money_0 = module_0.Money()
    str_0 = 'g@#'
    int_0 = 968
    currency_type_0 = module_1.CurrencyType.MONEY
    decimal_0 = module_2.Decimal()
    bool_0 = money_0.__gt__(money_0)
    currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
    money_1 = money_0.with_ccy(currency_0)
    bool_1 = money_0.__ge__(money_0)
    bool_2 = money_0.__ge__(money_0)

def test_case_52():
    money_0 = module_0.Money()
    money_1 = money_0.__pos__()
    float_0 = money_0.__float__()
    str_0 = '\\Oe2Xd \n`\rT\nD8'
    money_2 = money_0.__truediv__(str_0)
    decimal_0 = module_2.Decimal()
    decimal_1 = module_2.Decimal()
    bool_0 = money_0.__gt__(money_0)
    money_3 = money_0.__sub__(money_0)
    bool_1 = money_0.__ge__(money_0)
    bool_2 = money_0.__ge__(money_0)
    bool_3 = money_0.__le__(money_0)

def test_case_53():
    list_0 = []
    price_0 = module_0.Price(*list_0)
    price_1 = price_0.__pos__()

def test_case_54():
    money_0 = module_0.Money()
    bool_0 = money_0.__ge__(money_0)
    bool_1 = money_0.__ge__(money_0)

def test_case_55():
    money_0 = module_0.Money()
    str_0 = 'g@#'
    float_0 = money_0.__float__()
    int_0 = 968
    currency_type_0 = module_1.CurrencyType.MONEY
    decimal_0 = module_2.Decimal()
    bool_0 = money_0.__gt__(money_0)
    currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
    money_1 = money_0.with_ccy(currency_0)
    bool_1 = money_0.__ge__(money_0)
    bool_2 = money_0.__ge__(money_0)

def test_case_56():
    money_0 = module_0.Money()
    str_0 = 'g@#'
    float_0 = money_0.__float__()
    int_0 = 968
    currency_type_0 = module_1.CurrencyType.MONEY
    decimal_0 = module_2.Decimal()
    bool_0 = money_0.__gt__(money_0)
    currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
    money_1 = money_0.__sub__(money_0)
    bool_1 = money_0.__ge__(money_0)
    bool_2 = money_0.__ge__(money_0)

def test_case_57():
    money_0 = module_0.Money()
    float_0 = money_0.__float__()
    int_0 = 968
    currency_type_0 = module_1.CurrencyType.MONEY
    str_0 = '}l1'
    decimal_0 = module_2.Decimal()
    currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
    decimal_1 = module_2.Decimal()
    bool_0 = money_0.__gt__(money_0)
    money_1 = money_0.__sub__(money_0)
    bool_1 = money_0.__ge__(money_0)
    bool_2 = money_0.__ge__(money_0)
    bool_3 = money_0.__le__(money_0)

def test_case_58():
    money_0 = module_0.Money()
    decimal_0 = module_2.Decimal()
    money_1 = money_0.with_qty(decimal_0)

def test_case_59():
    money_0 = module_0.Money()
    money_1 = money_0.__floordiv__(money_0)

def test_case_60():
    money_0 = module_0.Money()
    money_1 = money_0.__neg__()

def test_case_61():
    money_0 = module_0.Money()
    bool_0 = money_0.gt(money_0)

def test_case_62():
    money_0 = module_0.Money()
    bool_0 = money_0.__eq__(money_0)

def test_case_63():
    money_0 = module_0.Money()
    var_0 = None
    money_1 = money_0.__mul__(var_0)

def test_case_64():
    dict_0 = {}
    price_0 = module_0.Price(**dict_0)
    price_1 = None
    dict_1 = {}
    price_2 = module_0.Price(**dict_1)
    price_3 = price_2.__sub__(price_1)