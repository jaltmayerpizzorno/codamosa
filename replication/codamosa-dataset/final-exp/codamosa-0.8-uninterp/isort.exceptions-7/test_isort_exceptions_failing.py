# Automatically generated by Pynguin.
import isort.exceptions as module_0
import pathlib as module_1

def test_case_0():
    try:
        str_0 = 'isort failed to parse the given literal '
        str_1 = '6^I;dab'
        existing_syntax_errors_0 = module_0.ExistingSyntaxErrors(str_1)
        formatting_plugin_does_not_exist_0 = module_0.FormattingPluginDoesNotExist(str_1)
        file_skip_setting_0 = module_0.FileSkipSetting(str_0)
        dict_0 = {str_1: str_1}
        dict_1 = {str_0: dict_0}
        unsupported_settings_0 = module_0.UnsupportedSettings(dict_1)
    except BaseException:
        pass

def test_case_1():
    try:
        type_0 = None
        path_0 = module_1.Path()
        unsupported_encoding_0 = module_0.UnsupportedEncoding(path_0)
        literal_sort_type_mismatch_0 = module_0.LiteralSortTypeMismatch(type_0, type_0)
        str_0 = '8|5Uh@"CA'
        formatting_plugin_does_not_exist_0 = module_0.FormattingPluginDoesNotExist(str_0)
        str_1 = "AQqxkyau)}J=G~/'t1S"
        introduced_syntax_errors_0 = module_0.IntroducedSyntaxErrors(str_1)
        str_2 = '--interactive'
        missing_section_0 = module_0.MissingSection(str_0, str_2)
        list_0 = [str_1]
        dict_0 = {str_1: introduced_syntax_errors_0}
        i_sort_error_0 = module_0.ISortError(*list_0, **dict_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'nLABn'
        str_1 = 'j;Rd(%fl(c'
        str_2 = "\x0bx9r'a9_Y"
        str_3 = '/__init__.py'
        dict_0 = {str_1: str_2, str_3: str_0}
        dict_1 = {str_0: dict_0}
        unsupported_settings_0 = module_0.UnsupportedSettings(dict_1)
    except BaseException:
        pass