# Automatically generated by Pynguin.
import ansible.cli.arguments.option_helpers as module_0
import argparse as module_1

def test_case_0():
    try:
        bytes_0 = b'\x19P\xdf\xa4e\x05/\xd7\xd4\x86\xf5\xe2\xe0\xd7'
        bytes_1 = b'\xd03\xc0\xbf<\xaaY\xf7\xff\xe2\x9f\x89,C5\x05'
        str_0 = 'kr&Hb5~!j'
        list_0 = []
        str_1 = 'No action selected, at least one of --host, --graph or --list needs to be specified.'
        set_0 = set()
        float_0 = -2983.4
        tuple_0 = (set_0, float_0)
        tuple_1 = (list_0, str_1, bytes_1, tuple_0)
        ansible_version_0 = module_0.AnsibleVersion(bytes_1, str_0, tuple_1)
        sorting_help_formatter_0 = module_0.SortingHelpFormatter(ansible_version_0)
        var_0 = sorting_help_formatter_0.add_arguments(bytes_0)
    except BaseException:
        pass

def test_case_1():
    try:
        var_0 = module_0.version()
        str_0 = 'ti,'
        sorting_help_formatter_0 = module_0.SortingHelpFormatter(str_0)
        set_0 = {var_0, str_0}
        str_1 = 'uy-abQE\r'
        unrecognized_argument_0 = module_0.UnrecognizedArgument(set_0, sorting_help_formatter_0, str_1)
        tuple_0 = (sorting_help_formatter_0, unrecognized_argument_0, str_1)
        var_1 = module_0.add_basedir_options(tuple_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b'\xd9]\xcc\xbb\x91}\x0c\xbc\xf6H<\xdbVj<'
        dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
        str_0 = "w9&i@Ka6<}:`='R@6^C"
        float_0 = -1302.8444
        sorting_help_formatter_0 = module_0.SortingHelpFormatter(str_0, float_0)
        str_1 = 'osrevision'
        int_0 = 27
        unrecognized_argument_0 = module_0.UnrecognizedArgument(str_1, int_0)
        prepend_list_action_0 = module_0.PrependListAction(dict_0, str_0, str_0, unrecognized_argument_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'm\x0bY'
        bool_0 = False
        bool_1 = False
        bool_2 = True
        int_0 = 211
        list_0 = []
        tuple_0 = ()
        float_0 = 4277.628185
        tuple_1 = (tuple_0, float_0)
        int_1 = -2015
        ansible_version_0 = module_0.AnsibleVersion(tuple_1, int_1, float_0, bool_2)
        prepend_list_action_0 = module_0.PrependListAction(int_0, list_0, ansible_version_0)
        bytes_0 = b'\xdf\x88\x90\xc2\xe0\xdc\x8b\xcf\xfe\x80\x1f\xeb\xab\xba\x8e'
        int_2 = -1767
        ansible_version_1 = module_0.AnsibleVersion(bool_2, prepend_list_action_0, bytes_0, int_2)
        complex_0 = None
        prepend_list_action_1 = module_0.PrependListAction(str_0, bool_0, bool_1, ansible_version_1, complex_0)
    except BaseException:
        pass

def test_case_4():
    try:
        bytes_0 = b'X\xdai\xff\xc0\x1eEbhz\x10\x9f\xe9\x05f=#"\xab'
        str_0 = '\n    Timeout decorator to expire after a set number of seconds.  This raises an\n    ansible.module_utils.facts.TimeoutError if the timeout is hit before the\n    function completes.\n    '
        str_1 = 'tsey+F6]'
        set_0 = {bytes_0}
        var_0 = module_0.ensure_value(set_0, str_0, str_1)
    except BaseException:
        pass

def test_case_5():
    try:
        set_0 = set()
        var_0 = module_0.unfrack_path()
        int_0 = -1811
        var_1 = module_0.version(int_0)
        bool_0 = False
        prepend_list_action_0 = None
        str_0 = 'ppc32dy4'
        argument_parser_0 = module_1.ArgumentParser(str_0)
        var_2 = module_0.add_async_options(argument_parser_0)
        bool_1 = True
        sorting_help_formatter_0 = module_0.SortingHelpFormatter(prepend_list_action_0, bool_1)
        list_0 = None
        ansible_version_0 = module_0.AnsibleVersion(bool_0, int_0, set_0, list_0)
        str_1 = ';safo#"16c4\tDY=W/'
        int_1 = 0
        tuple_0 = (str_1, bool_0, int_1)
        str_2 = '|)4\r\r[}+\x0bMHE]V'
        prepend_list_action_1 = module_0.PrependListAction(ansible_version_0, str_2, tuple_0, list_0, str_2)
        var_3 = sorting_help_formatter_0.add_arguments(tuple_0)
    except BaseException:
        pass

def test_case_6():
    try:
        set_0 = set()
        var_0 = module_0.add_basedir_options(set_0)
    except BaseException:
        pass

def test_case_7():
    try:
        complex_0 = None
        var_0 = module_0.add_fork_options(complex_0)
    except BaseException:
        pass

def test_case_8():
    try:
        var_0 = module_0.unfrack_path()
        str_0 = 'Sn\t>R_p0A+46?01~KvQ+'
        float_0 = 1661.0
        set_0 = {float_0}
        dict_0 = {str_0: var_0, var_0: var_0, var_0: set_0, float_0: float_0}
        var_1 = module_0.add_runas_options(dict_0)
    except BaseException:
        pass

def test_case_9():
    try:
        set_0 = set()
        var_0 = module_0.add_runas_prompt_options(set_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = 'dO2SE'
        bool_0 = False
        tuple_0 = (str_0, bool_0)
        bytes_0 = b'\xbf=#\xd0\x81\xc8\x8cn\x15\x86'
        set_0 = {bool_0, tuple_0}
        dict_0 = {str_0: str_0, tuple_0: tuple_0, bool_0: str_0}
        int_0 = 12
        unrecognized_argument_0 = module_0.UnrecognizedArgument(set_0, dict_0, tuple_0, int_0)
        bytes_1 = b'\xe4Y\x03>'
        float_0 = -2073.89
        ansible_version_0 = module_0.AnsibleVersion(bytes_0, unrecognized_argument_0, bytes_1, unrecognized_argument_0, float_0)
        sorting_help_formatter_0 = None
        int_1 = 681
        unrecognized_argument_1 = module_0.UnrecognizedArgument(ansible_version_0, sorting_help_formatter_0, int_1)
        var_0 = module_0.add_runas_prompt_options(unrecognized_argument_1, tuple_0)
    except BaseException:
        pass

def test_case_11():
    try:
        set_0 = set()
        int_0 = 1460
        var_0 = module_0.version(int_0)
        str_0 = '?'
        bool_0 = False
        prepend_list_action_0 = None
        bool_1 = True
        sorting_help_formatter_0 = module_0.SortingHelpFormatter(prepend_list_action_0, bool_1)
        unrecognized_argument_0 = module_0.UnrecognizedArgument(str_0, bool_0, sorting_help_formatter_0, sorting_help_formatter_0)
        list_0 = None
        ansible_version_0 = module_0.AnsibleVersion(bool_0, int_0, set_0, list_0)
        str_1 = ';safo#"16c4\tDY=W/'
        str_2 = '`J}ada7/7p%V<&\rr'
        list_1 = [sorting_help_formatter_0, var_0, var_0, str_0]
        float_0 = -796.796
        argument_parser_0 = module_1.ArgumentParser(str_2, list_1, float_0)
        var_1 = module_0.add_runtask_options(argument_parser_0)
        int_1 = 0
        tuple_0 = (str_1, bool_0, int_1)
        bytes_0 = b'\x15r\x98\xde\xbe\x00\xf3\xaa\x15\x8c\xf0i\xdd'
        tuple_1 = (list_0, set_0, sorting_help_formatter_0)
        dict_0 = {sorting_help_formatter_0: tuple_0}
        prepend_list_action_1 = module_0.PrependListAction(tuple_0, bytes_0, tuple_1, sorting_help_formatter_0, dict_0)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = '&=K\x0c6i|4\rg"rNc\x0c8/ZZ'
        var_0 = module_0.add_tasknoplay_options(str_0)
    except BaseException:
        pass

def test_case_13():
    try:
        int_0 = -1546
        var_0 = module_0.add_subset_options(int_0)
    except BaseException:
        pass

def test_case_14():
    try:
        set_0 = set()
        str_0 = 'manjaro-release'
        str_1 = ''
        dict_0 = {str_0: set_0, str_1: set_0, str_0: str_1}
        str_2 = '.#gI\x0bU 71HIhs3XJLj\r|'
        unrecognized_argument_0 = module_0.UnrecognizedArgument(dict_0, str_2)
        prepend_list_action_0 = None
        argument_parser_0 = module_1.ArgumentParser(unrecognized_argument_0, prepend_list_action_0)
        var_0 = module_0.add_vault_options(argument_parser_0)
        var_1 = module_0.add_verbosity_options(set_0)
    except BaseException:
        pass

def test_case_15():
    try:
        int_0 = 1460
        var_0 = module_0.version(int_0)
        int_1 = 300
        var_1 = module_0.add_inventory_options(int_1)
    except BaseException:
        pass

def test_case_16():
    try:
        str_0 = '-3^$Kl)|kW1~Us"(z'
        set_0 = set()
        dict_0 = {str_0: set_0}
        str_1 = "w9&i@Ka6<}:`='R@6^C"
        sorting_help_formatter_0 = module_0.SortingHelpFormatter(str_1)
        tuple_0 = None
        set_1 = None
        float_0 = -3710.325
        float_1 = -1373.340386
        ansible_version_0 = module_0.AnsibleVersion(set_1, float_0, float_1, dict_0)
        str_2 = ',#'
        unrecognized_argument_0 = module_0.UnrecognizedArgument(ansible_version_0, str_2)
        list_0 = []
        int_0 = 2794
        str_3 = ';kH(A?);1^ddpG'
        unrecognized_argument_1 = module_0.UnrecognizedArgument(int_0, str_1, str_3, sorting_help_formatter_0, int_0)
        var_0 = unrecognized_argument_1.__call__(tuple_0, unrecognized_argument_0, list_0, dict_0)
    except BaseException:
        pass

def test_case_17():
    try:
        int_0 = -1640
        sorting_help_formatter_0 = module_0.SortingHelpFormatter(int_0)
        var_0 = module_0.add_basedir_options(sorting_help_formatter_0)
    except BaseException:
        pass

def test_case_18():
    try:
        set_0 = set()
        int_0 = 1460
        var_0 = module_0.version(int_0)
        str_0 = '?'
        bool_0 = False
        prepend_list_action_0 = None
        list_0 = None
        ansible_version_0 = module_0.AnsibleVersion(bool_0, int_0, set_0, list_0)
        str_1 = ';safo#"16c4\tDY=W/'
        int_1 = 0
        tuple_0 = (str_1, bool_0, int_1)
        str_2 = '|)4\r\r_Z[}+\x0bMHE]V'
        prepend_list_action_1 = module_0.PrependListAction(ansible_version_0, str_2, tuple_0, list_0, str_2)
        float_0 = 189.3846
        bool_1 = False
        tuple_1 = (bool_1,)
        bool_2 = False
        prepend_list_action_2 = module_0.PrependListAction(prepend_list_action_0, bool_2, str_0, int_1)
        var_1 = prepend_list_action_2.__call__(float_0, list_0, tuple_1)
    except BaseException:
        pass

def test_case_19():
    try:
        set_0 = set()
        var_0 = module_0.unfrack_path()
        int_0 = -1791
        bool_0 = False
        prepend_list_action_0 = None
        bool_1 = True
        sorting_help_formatter_0 = module_0.SortingHelpFormatter(prepend_list_action_0, bool_1)
        list_0 = []
        var_1 = sorting_help_formatter_0.add_arguments(list_0)
        list_1 = None
        ansible_version_0 = module_0.AnsibleVersion(bool_0, int_0, set_0, list_1)
        str_0 = ';safo#"16c4\tDY=W/'
        int_1 = 0
        tuple_0 = (str_0, bool_0, int_1)
        str_1 = '|)4\r\r[}+\x0bMHE]V'
        prepend_list_action_1 = module_0.PrependListAction(ansible_version_0, str_1, tuple_0, list_1, str_1)
        var_2 = module_0.add_inventory_options(tuple_0)
    except BaseException:
        pass

def test_case_20():
    try:
        int_0 = -1811
        sorting_help_formatter_0 = module_0.SortingHelpFormatter(int_0)
        var_0 = module_0.add_tasknoplay_options(sorting_help_formatter_0)
    except BaseException:
        pass

def test_case_21():
    try:
        set_0 = set()
        str_0 = 'manjaro-release'
        str_1 = '%s | SKIPPED'
        bool_0 = False
        list_0 = [bool_0, str_1]
        argument_parser_0 = module_1.ArgumentParser(list_0, set_0)
        tuple_0 = None
        list_1 = [tuple_0, set_0]
        argument_parser_1 = module_1.ArgumentParser(str_1, bool_0, argument_parser_0, list_1)
        var_0 = module_0.add_runas_options(argument_parser_1)
        str_2 = ''
        dict_0 = {str_0: set_0, str_2: set_0, str_0: str_2}
        str_3 = '.#gI\x0bU 71HIhs3XJLj\r|'
        unrecognized_argument_0 = module_0.UnrecognizedArgument(dict_0, str_3)
        prepend_list_action_0 = None
        argument_parser_2 = module_1.ArgumentParser(unrecognized_argument_0, prepend_list_action_0)
        var_1 = module_0.add_vault_options(argument_parser_2)
        var_2 = module_0.add_verbosity_options(set_0)
    except BaseException:
        pass