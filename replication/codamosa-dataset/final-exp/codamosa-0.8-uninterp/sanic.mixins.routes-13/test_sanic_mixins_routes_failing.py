# Automatically generated by Pynguin.
import sanic.mixins.routes as module_0
import pathlib as module_1
import sanic.response as module_2

def test_case_0():
    try:
        dict_0 = None
        str_0 = 'V)+CNZB'
        route_mixin_0 = module_0.RouteMixin()
        var_0 = route_mixin_0.static(dict_0, str_0, str_0, dict_0)
    except BaseException:
        pass

def test_case_1():
    try:
        route_mixin_0 = module_0.RouteMixin()
        str_0 = ''
        var_0 = route_mixin_0.add_route(str_0, str_0, str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        route_mixin_0 = module_0.RouteMixin()
        str_0 = 'D@C="oAc'
        var_0 = route_mixin_0.add_route(str_0, str_0, str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        pure_path_0 = module_1.PurePath()
        list_0 = [pure_path_0, pure_path_0, pure_path_0, pure_path_0]
        route_mixin_0 = module_0.RouteMixin()
        str_0 = '\\0Vq9^p\no3Mm5!`h|\n'
        var_0 = route_mixin_0.post(str_0)
        var_1 = route_mixin_0.static(pure_path_0, pure_path_0, list_0)
    except BaseException:
        pass

def test_case_4():
    try:
        route_mixin_0 = module_0.RouteMixin()
        str_0 = ';VzfgqDKE5?(!6Pqr]H>'
        var_0 = route_mixin_0.delete(str_0)
        str_1 = 'e_'
        str_2 = ''
        str_3 = 'ANYo'
        var_1 = route_mixin_0.add_route(str_1, str_2, str_3)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'QW'
        optional_0 = None
        route_mixin_0 = module_0.RouteMixin()
        var_0 = route_mixin_0.add_websocket_route(str_0, str_0, optional_0)
    except BaseException:
        pass

def test_case_6():
    try:
        bool_0 = True
        pure_path_0 = None
        set_0 = None
        list_0 = [set_0]
        route_mixin_0 = module_0.RouteMixin(*list_0)
        var_0 = route_mixin_0.static(bool_0, pure_path_0)
    except BaseException:
        pass

def test_case_7():
    try:
        route_mixin_0 = module_0.RouteMixin()
        str_0 = 'D@C="of.c'
        h_t_t_p_response_0 = module_2.HTTPResponse()
        var_0 = route_mixin_0.add_route(h_t_t_p_response_0, str_0)
    except BaseException:
        pass

def test_case_8():
    try:
        route_mixin_0 = module_0.RouteMixin()
        str_0 = 'B.1%0y!:}'
        bool_0 = False
        var_0 = route_mixin_0.add_route(route_mixin_0, str_0, bool_0)
    except BaseException:
        pass

def test_case_9():
    try:
        route_mixin_0 = module_0.RouteMixin()
        str_0 = '/'
        str_1 = 'oN'
        var_0 = route_mixin_0.add_route(str_0, str_0, str_1)
    except BaseException:
        pass

def test_case_10():
    try:
        route_mixin_0 = module_0.RouteMixin()
        str_0 = ''
        int_0 = -3353
        bool_0 = True
        var_0 = route_mixin_0.add_route(int_0, str_0, str_0, bool_0, int_0, bool_0)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = '2=q1,~'
        list_0 = [str_0, str_0, str_0, str_0]
        int_0 = 1262
        str_1 = '1@Pj'
        list_1 = [str_0, str_1, str_1]
        route_mixin_0 = module_0.RouteMixin(*list_1)
        tuple_0 = (list_0, int_0, str_1, route_mixin_0)
        str_2 = '2(0\'b].Z\x0cy".+wlO@'
        dict_0 = {str_2: str_2}
        route_mixin_1 = module_0.RouteMixin(**dict_0)
        var_0 = route_mixin_1.websocket(str_0, tuple_0, int_0)
        str_3 = '\tX)s*b~{QaE[b(4'
        dict_1 = {str_3: str_3, str_3: str_3}
        route_mixin_2 = module_0.RouteMixin(**dict_1)
        var_1 = route_mixin_2.head(str_3, str_3)
        bytes_0 = b'.\xb7\x8f\xbc\xb6'
        str_4 = '/2gaA.uRs*<'
        dict_2 = {str_4: str_4}
        str_5 = '<v\n&'
        bool_0 = False
        var_2 = route_mixin_2.delete(str_5, str_3, bool_0)
        dict_3 = {str_4: dict_2, str_4: str_4}
        route_mixin_3 = module_0.RouteMixin(**dict_3)
        var_3 = route_mixin_3.patch(str_3, bytes_0, str_3)
        bool_1 = True
        var_4 = route_mixin_3.delete(str_3, str_3, bool_1)
        str_6 = '4#A}8#];Yrydfi,n0'
        iterable_0 = None
        str_7 = '5hqlc0h'
        var_5 = route_mixin_3.add_route(tuple_0, str_7, iterable_0, str_6, int_0)
    except BaseException:
        pass

def test_case_12():
    try:
        route_mixin_0 = module_0.RouteMixin()
        str_0 = 'YlH] Uxs\x0b1gV'
        bool_0 = True
        var_0 = route_mixin_0.add_route(str_0, str_0, str_0, bool_0)
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = '5W'
        optional_0 = None
        route_mixin_0 = module_0.RouteMixin()
        var_0 = route_mixin_0.add_websocket_route(str_0, str_0, str_0, optional_0)
    except BaseException:
        pass

def test_case_14():
    try:
        route_mixin_0 = module_0.RouteMixin()
        str_0 = ''
        iterable_0 = None
        var_0 = route_mixin_0.head(str_0)
        bool_0 = True
        var_1 = route_mixin_0.add_route(var_0, str_0, iterable_0, str_0, bool_0, str_0, bool_0)
    except BaseException:
        pass