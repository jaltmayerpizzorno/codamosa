# Automatically generated by Pynguin.
import ansible.module_utils.urls as module_0

def test_case_0():
    try:
        connection_error_0 = None
        int_0 = 317
        missing_module_error_0 = module_0.MissingModuleError(connection_error_0, int_0)
        var_0 = module_0.generic_urlparse(missing_module_error_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = b'\xff'
        set_0 = {bytes_0, bytes_0, bytes_0}
        custom_h_t_t_p_s_handler_0 = module_0.CustomHTTPSHandler()
        var_0 = custom_h_t_t_p_s_handler_0.https_open(set_0)
    except BaseException:
        pass

def test_case_2():
    try:
        h_t_t_p_s_client_auth_handler_0 = module_0.HTTPSClientAuthHandler()
        list_0 = None
        str_0 = ' Remove strings that look like passwords from log messages '
        list_1 = [list_0, list_0, str_0]
        no_s_s_l_error_0 = module_0.NoSSLError(*list_1)
        int_0 = -3647
        dict_0 = {int_0: list_1}
        h_t_t_p_s_client_auth_handler_1 = module_0.HTTPSClientAuthHandler(no_s_s_l_error_0, dict_0)
        var_0 = h_t_t_p_s_client_auth_handler_1.https_open(h_t_t_p_s_client_auth_handler_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b''
        unix_h_t_t_p_s_connection_0 = module_0.UnixHTTPSConnection(bytes_0)
        var_0 = unix_h_t_t_p_s_connection_0.connect()
    except BaseException:
        pass

def test_case_4():
    try:
        s_s_l_validation_error_0 = module_0.SSLValidationError()
        dict_0 = {}
        bytes_0 = b'k\x80\xa9\x96\xa3\xc6'
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(dict_0, bytes_0)
        list_0 = [s_s_l_validation_error_0, s_s_l_validation_handler_0, dict_0, s_s_l_validation_handler_0]
        var_0 = module_0.url_argument_spec()
        h_t_t_p_s_client_auth_handler_0 = module_0.HTTPSClientAuthHandler()
        unix_h_t_t_p_s_connection_0 = module_0.UnixHTTPSConnection(h_t_t_p_s_client_auth_handler_0)
        var_1 = unix_h_t_t_p_s_connection_0.__call__(*list_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'https://ansible.com/'
        bool_0 = True
        var_0 = module_0.maybe_add_ssl_handler(str_0, bool_0)
        unix_h_t_t_p_connection_0 = module_0.UnixHTTPConnection(bool_0)
        var_1 = unix_h_t_t_p_connection_0.connect()
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'Linux'
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
        var_0 = module_0.prepare_multipart(dict_0)
        list_0 = [str_0, str_0, str_0, var_0]
        no_s_s_l_error_0 = module_0.NoSSLError(*list_0)
        list_1 = []
        unix_h_t_t_p_connection_0 = module_0.UnixHTTPConnection(no_s_s_l_error_0)
        var_1 = module_0.maybe_add_ssl_handler(list_1, unix_h_t_t_p_connection_0)
        var_2 = unix_h_t_t_p_connection_0.__call__(*list_0)
        var_3 = module_0.generic_urlparse(list_1)
    except BaseException:
        pass

def test_case_7():
    try:
        connection_error_0 = None
        no_s_s_l_error_0 = module_0.NoSSLError()
        unix_h_t_t_p_handler_0 = module_0.UnixHTTPHandler(no_s_s_l_error_0)
        int_0 = 317
        missing_module_error_0 = module_0.MissingModuleError(connection_error_0, int_0)
        var_0 = module_0.generic_urlparse(missing_module_error_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = 'https://ansibe.com/&'
        bool_0 = True
        var_0 = module_0.maybe_add_ssl_handler(str_0, bool_0)
        str_1 = 'LGJNgpW9ta;"R%/9JJd'
        unix_h_t_t_p_handler_0 = module_0.UnixHTTPHandler(str_1)
        connection_error_0 = module_0.ConnectionError()
        dict_0 = {}
        dict_1 = {}
        h_t_t_p_s_client_auth_handler_0 = module_0.HTTPSClientAuthHandler(dict_1, **dict_0)
        var_1 = unix_h_t_t_p_handler_0.http_open(h_t_t_p_s_client_auth_handler_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = '6nderan ofhsznams:%s. '
        request_0 = module_0.Request()
        var_0 = request_0.patch(str_0)
    except BaseException:
        pass

def test_case_10():
    try:
        bool_0 = False
        str_0 = 'https://ansible.comj'
        var_0 = module_0.maybe_add_ssl_handler(str_0, bool_0)
        s_s_l_validation_error_0 = module_0.SSLValidationError()
        list_0 = [s_s_l_validation_error_0]
        unix_h_t_t_p_connection_0 = module_0.UnixHTTPConnection(list_0)
        unix_h_t_t_p_s_connection_0 = module_0.UnixHTTPSConnection(unix_h_t_t_p_connection_0)
        bytes_0 = None
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(unix_h_t_t_p_s_connection_0, bytes_0)
        int_0 = 3632
        var_1 = s_s_l_validation_handler_0.http_request(int_0)
    except BaseException:
        pass

def test_case_11():
    try:
        parse_result_dotted_dict_0 = module_0.ParseResultDottedDict()
        var_0 = module_0.prepare_multipart(parse_result_dotted_dict_0)
        str_0 = 'iGG76-PX&W}O/:'
        str_1 = '`'
        bytes_0 = b'&\xe5z Q\xd7\xd8\xc2-t\xdb\x82,\x9aw\x83\x94'
        request_0 = module_0.Request(str_0, str_1, bytes_0)
    except BaseException:
        pass

def test_case_12():
    try:
        float_0 = -2355.17
        bool_0 = False
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(float_0, bool_0)
        unix_h_t_t_p_s_connection_0 = module_0.UnixHTTPSConnection(s_s_l_validation_handler_0)
        var_0 = unix_h_t_t_p_s_connection_0.connect()
    except BaseException:
        pass

def test_case_13():
    try:
        bytes_0 = b'Dp\xb4\x1f'
        str_0 = '/dev/kvm'
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(bytes_0, str_0)
        s_s_l_validation_error_0 = None
        list_0 = [s_s_l_validation_error_0, s_s_l_validation_error_0, s_s_l_validation_error_0]
        h_t_t_p_s_client_auth_handler_0 = module_0.HTTPSClientAuthHandler()
        list_1 = [h_t_t_p_s_client_auth_handler_0, list_0, s_s_l_validation_error_0, list_0]
        var_0 = module_0.rfc2822_date_string(list_1)
    except BaseException:
        pass

def test_case_14():
    try:
        request_0 = module_0.Request()
        custom_h_t_t_p_s_handler_0 = module_0.CustomHTTPSHandler()
        var_0 = module_0.get_channel_binding_cert_hash(custom_h_t_t_p_s_handler_0)
        connection_error_0 = module_0.ConnectionError()
        var_1 = module_0.prepare_multipart(custom_h_t_t_p_s_handler_0)
    except BaseException:
        pass

def test_case_15():
    try:
        dict_0 = {}
        custom_h_t_t_p_s_handler_0 = module_0.CustomHTTPSHandler()
        custom_h_t_t_p_s_handler_1 = module_0.CustomHTTPSHandler()
        proxy_error_0 = module_0.ProxyError(**dict_0)
        custom_h_t_t_p_s_handler_2 = module_0.CustomHTTPSHandler()
        set_0 = set()
        str_0 = '-pKV<Q]/MPOLCt1|_M'
        var_0 = module_0.fetch_file(set_0, str_0)
    except BaseException:
        pass

def test_case_16():
    try:
        str_0 = '`C(U|I+sw8'
        tuple_0 = (str_0,)
        set_0 = {tuple_0, str_0, str_0, str_0}
        var_0 = module_0.build_ssl_validation_error(tuple_0, set_0, tuple_0)
    except BaseException:
        pass

def test_case_17():
    try:
        int_0 = 2435
        str_0 = 'Pop!_OS'
        int_1 = 2311
        bool_0 = True
        list_0 = [int_1, bool_0, bool_0]
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(int_1, list_0)
        var_0 = s_s_l_validation_handler_0.validate_proxy_response(int_0, str_0)
    except BaseException:
        pass

def test_case_18():
    try:
        float_0 = -2380.4812116343414
        bool_0 = True
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(float_0, bool_0)
        unix_h_t_t_p_connection_0 = None
        var_0 = module_0.unix_socket_patch_httpconnection_connect()
        var_1 = s_s_l_validation_handler_0.validate_proxy_response(unix_h_t_t_p_connection_0)
    except BaseException:
        pass

def test_case_19():
    try:
        dict_0 = {}
        h_t_t_p_s_client_auth_handler_0 = module_0.HTTPSClientAuthHandler(**dict_0)
        unix_h_t_t_p_s_connection_0 = module_0.UnixHTTPSConnection(h_t_t_p_s_client_auth_handler_0)
        connection_error_0 = module_0.ConnectionError()
        proxy_error_0 = module_0.ProxyError()
        list_0 = []
        parse_result_dotted_dict_0 = None
        set_0 = None
        tuple_0 = (list_0, parse_result_dotted_dict_0, connection_error_0, set_0)
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(proxy_error_0, tuple_0)
        var_0 = s_s_l_validation_handler_0.get_ca_certs()
        bool_0 = True
        s_s_l_validation_handler_1 = module_0.SSLValidationHandler(bool_0, set_0)
        unix_h_t_t_p_handler_0 = module_0.UnixHTTPHandler(unix_h_t_t_p_s_connection_0)
        s_s_l_validation_error_0 = module_0.SSLValidationError()
        s_s_l_validation_handler_2 = module_0.SSLValidationHandler(unix_h_t_t_p_handler_0, tuple_0, s_s_l_validation_error_0)
        var_1 = s_s_l_validation_handler_2.http_request(s_s_l_validation_handler_0)
    except BaseException:
        pass

def test_case_20():
    try:
        str_0 = 'Linux'
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
        var_0 = module_0.prepare_multipart(dict_0)
        list_0 = [str_0, str_0, str_0, var_0]
        no_s_s_l_error_0 = module_0.NoSSLError(*list_0)
        list_1 = []
        float_0 = 704.91278
        bool_0 = True
        unix_h_t_t_p_connection_0 = module_0.UnixHTTPConnection(bool_0)
        str_1 = 'E'
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(float_0, unix_h_t_t_p_connection_0, str_1)
        var_1 = s_s_l_validation_handler_0.make_context(no_s_s_l_error_0, list_1)
    except BaseException:
        pass

def test_case_21():
    try:
        float_0 = 0.5
        bool_0 = False
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(float_0, bool_0)
        var_0 = s_s_l_validation_handler_0.detect_no_proxy(bool_0)
        proxy_error_0 = module_0.ProxyError()
        str_0 = 'lNSj >hbqlI]Q$O*\x0b='
        dict_0 = {str_0: float_0, str_0: float_0}
        list_0 = []
        str_1 = '.2'
        h_t_t_p_s_client_auth_handler_0 = module_0.HTTPSClientAuthHandler()
        h_t_t_p_s_client_auth_handler_1 = module_0.HTTPSClientAuthHandler(str_1, h_t_t_p_s_client_auth_handler_0)
        request_0 = module_0.Request(dict_0, list_0, float_0, h_t_t_p_s_client_auth_handler_1)
        list_1 = []
        str_2 = 'Darwin'
        request_with_method_0 = module_0.RequestWithMethod(proxy_error_0, request_0, list_1, str_2)
    except BaseException:
        pass

def test_case_22():
    try:
        float_0 = -2353.65
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(float_0, float_0)
        bytes_0 = b''
        list_0 = [bytes_0]
        var_0 = s_s_l_validation_handler_0.make_context(bytes_0, list_0)
    except BaseException:
        pass

def test_case_23():
    try:
        str_0 = 'https://ansible.com/'
        list_0 = []
        list_1 = [list_0, str_0]
        proxy_error_0 = module_0.ProxyError(*list_1)
        var_0 = module_0.basic_auth_header(list_0, proxy_error_0)
        bool_0 = False
        var_1 = module_0.maybe_add_ssl_handler(str_0, bool_0)
        var_2 = module_0.generic_urlparse(bool_0)
    except BaseException:
        pass

def test_case_24():
    try:
        request_0 = module_0.Request()
        set_0 = None
        var_0 = request_0.put(set_0)
    except BaseException:
        pass

def test_case_25():
    try:
        dict_0 = {}
        float_0 = -2353.65
        tuple_0 = ()
        list_0 = [float_0, dict_0, dict_0, float_0]
        connection_error_0 = module_0.ConnectionError(*list_0)
        unix_h_t_t_p_s_connection_0 = module_0.UnixHTTPSConnection(list_0)
        dict_1 = {float_0: unix_h_t_t_p_s_connection_0}
        request_0 = module_0.Request(dict_1, dict_1, dict_0)
        var_0 = request_0.get(tuple_0, **dict_0)
    except BaseException:
        pass

def test_case_26():
    try:
        list_0 = []
        no_s_s_l_error_0 = module_0.NoSSLError(*list_0)
        proxy_error_0 = module_0.ProxyError()
        s_s_l_validation_error_0 = None
        dict_0 = {}
        list_1 = [list_0, list_0, no_s_s_l_error_0]
        h_t_t_p_s_client_auth_handler_0 = module_0.HTTPSClientAuthHandler(list_1)
        str_0 = '18m#m]V*R1\x0bp\nK;%'
        var_0 = module_0.open_url(no_s_s_l_error_0, proxy_error_0, no_s_s_l_error_0, s_s_l_validation_error_0, dict_0, h_t_t_p_s_client_auth_handler_0, no_s_s_l_error_0, str_0)
    except BaseException:
        pass

def test_case_27():
    try:
        dict_0 = {}
        float_0 = -2353.65
        bool_0 = True
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(float_0, bool_0)
        var_0 = s_s_l_validation_handler_0.detect_no_proxy(bool_0)
        unix_h_t_t_p_connection_0 = module_0.UnixHTTPConnection(dict_0)
        bytes_0 = b'\xbc\xf9\xef\x06A'
        list_0 = [dict_0]
        no_s_s_l_error_0 = module_0.NoSSLError(*list_0)
        s_s_l_validation_error_0 = module_0.SSLValidationError()
        str_0 = 'Linux'
        var_1 = module_0.open_url(unix_h_t_t_p_connection_0, bytes_0, no_s_s_l_error_0, s_s_l_validation_error_0, str_0)
    except BaseException:
        pass

def test_case_28():
    try:
        float_0 = -414.947
        var_0 = module_0.getpeercert(float_0)
    except BaseException:
        pass

def test_case_29():
    try:
        str_0 = 'test'
        int_0 = 80
        var_0 = []
        var_1 = module_0.build_ssl_validation_error(str_0, int_0, var_0, str_0)
    except BaseException:
        pass

def test_case_30():
    try:
        bytes_0 = b'\xec\x90\xe8\xbb-K\x87p\x15'
        dict_0 = {}
        list_0 = []
        connection_error_0 = module_0.ConnectionError(*list_0)
        unix_h_t_t_p_s_connection_0 = module_0.UnixHTTPSConnection(list_0)
        str_0 = '9|9flj.ekT'
        proxy_error_0 = module_0.ProxyError(*list_0)
        dict_1 = {connection_error_0: list_0, unix_h_t_t_p_s_connection_0: unix_h_t_t_p_s_connection_0, connection_error_0: connection_error_0, str_0: proxy_error_0}
        s_s_l_validation_error_0 = module_0.SSLValidationError()
        request_0 = module_0.Request(dict_1, s_s_l_validation_error_0)
        var_0 = request_0.delete(bytes_0, **dict_0)
    except BaseException:
        pass

def test_case_31():
    try:
        str_0 = 'under any of these names: %s. '
        request_0 = module_0.Request()
        str_1 = '<8l1c;#~\x0c3\x0cLM\x0c'
        dict_0 = {str_1: request_0, str_1: str_0}
        var_0 = module_0.get_channel_binding_cert_hash(dict_0)
        unix_h_t_t_p_connection_0 = None
        var_1 = request_0.options(unix_h_t_t_p_connection_0)
    except BaseException:
        pass

def test_case_32():
    try:
        request_0 = module_0.Request()
        bool_0 = False
        dict_0 = {}
        dict_1 = {request_0: bool_0, request_0: request_0, bool_0: dict_0}
        str_0 = 'https'
        dict_2 = {str_0: request_0}
        var_0 = request_0.head(dict_1, **dict_2)
    except BaseException:
        pass

def test_case_33():
    try:
        request_0 = module_0.Request()
        bytes_0 = b'\xe2'
        dict_0 = {}
        var_0 = request_0.post(bytes_0, dict_0)
    except BaseException:
        pass

def test_case_34():
    try:
        bytes_0 = b'I\xf0\x11`\x8e~\xb9Ve\x1a\xacW'
        proxy_error_0 = module_0.ProxyError()
        float_0 = 2683.6155
        str_0 = 's]%q\\\r4kTmd\x0bRs'
        var_0 = module_0.fetch_url(bytes_0, proxy_error_0, float_0, str_0)
    except BaseException:
        pass

def test_case_35():
    try:
        float_0 = None
        bool_0 = False
        custom_h_t_t_p_s_connection_0 = None
        var_0 = module_0.open_url(float_0, bool_0, custom_h_t_t_p_s_connection_0)
    except BaseException:
        pass

def test_case_36():
    try:
        str_0 = 'https://ansibe.co/&'
        list_0 = [str_0, str_0]
        dict_0 = {}
        custom_h_t_t_p_s_connection_0 = module_0.CustomHTTPSConnection(*list_0, **dict_0)
        var_0 = custom_h_t_t_p_s_connection_0.connect()
    except BaseException:
        pass

def test_case_37():
    try:
        str_0 = 'https://ansibe.com/&'
        list_0 = [str_0, str_0]
        no_s_s_l_error_0 = module_0.NoSSLError(*list_0)
        unix_h_t_t_p_s_connection_0 = module_0.UnixHTTPSConnection(no_s_s_l_error_0)
        bytes_0 = None
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(unix_h_t_t_p_s_connection_0, bytes_0)
        str_1 = '/n[7{gp<XhSV2y\x0c7\x0c'
        str_2 = '3Ho{UbbqzYlqe'
        dict_0 = {str_0: no_s_s_l_error_0, str_1: str_2}
        parse_result_dotted_dict_0 = module_0.ParseResultDottedDict()
        request_0 = module_0.Request(parse_result_dotted_dict_0)
        var_0 = unix_h_t_t_p_s_connection_0.__call__(*list_0)
        var_1 = request_0.put(s_s_l_validation_handler_0, **dict_0)
    except BaseException:
        pass