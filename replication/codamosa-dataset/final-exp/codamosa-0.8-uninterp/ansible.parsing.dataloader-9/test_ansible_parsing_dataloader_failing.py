# Automatically generated by Pynguin.
import ansible.parsing.dataloader as module_0
import ansible.utils.display as module_1

def test_case_0():
    try:
        str_0 = 'events'
        data_loader_0 = module_0.DataLoader()
        var_0 = data_loader_0.load_from_file(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = -2298
        data_loader_0 = module_0.DataLoader()
        var_0 = data_loader_0.path_exists(int_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '}<{P,vyJ??tw'
        tuple_0 = ()
        data_loader_0 = module_0.DataLoader()
        var_0 = data_loader_0.path_dwim_relative_stack(str_0, data_loader_0, tuple_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '%s: %s: %s: duplicate host callback: %s'
        int_0 = 514
        data_loader_0 = module_0.DataLoader()
        var_0 = data_loader_0.path_dwim_relative(str_0, int_0, int_0)
    except BaseException:
        pass

def test_case_4():
    try:
        data_loader_0 = module_0.DataLoader()
        dict_0 = {}
        str_0 = ' Recursively iterate over a directory and sort the files in\n            alphabetical order. Do not iterate pass the set depth.\n            The default depth is unlimited.\n        '
        var_0 = data_loader_0.path_dwim_relative_stack(data_loader_0, dict_0, str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        bool_0 = True
        bool_1 = False
        data_loader_0 = module_0.DataLoader()
        var_0 = data_loader_0.get_real_file(bool_0, bool_1)
    except BaseException:
        pass

def test_case_6():
    try:
        data_loader_0 = module_0.DataLoader()
        str_0 = 'vars'
        var_0 = data_loader_0.find_vars_files(str_0, str_0)
        str_1 = '2(hI c|#C'
        var_1 = data_loader_0.get_real_file(str_1)
    except BaseException:
        pass

def test_case_7():
    try:
        data_loader_0 = module_0.DataLoader()
        data_loader_1 = module_0.DataLoader()
        data_loader_2 = module_0.DataLoader()
        str_0 = 'm_'
        var_0 = data_loader_0.is_executable(str_0)
    except BaseException:
        pass

def test_case_8():
    try:
        data_loader_0 = module_0.DataLoader()
        dict_0 = {}
        var_0 = data_loader_0.get_real_file(dict_0)
    except BaseException:
        pass

def test_case_9():
    try:
        data_loader_0 = module_0.DataLoader()
        var_0 = data_loader_0.get_basedir()
        var_1 = data_loader_0.get_real_file(var_0)
    except BaseException:
        pass

def test_case_10():
    try:
        data_loader_0 = module_0.DataLoader()
        float_0 = -1489.244369
        bytes_0 = b'0$s\xee,\xd9\x93O\xda"\xe3\xdd\xcc\xc0\xeej\x9eIa^'
        str_0 = '~\r'
        set_0 = {str_0, bytes_0}
        var_0 = data_loader_0.path_dwim_relative_stack(float_0, bytes_0, str_0, set_0)
    except BaseException:
        pass

def test_case_11():
    try:
        data_loader_0 = module_0.DataLoader()
        str_0 = 'vars'
        var_0 = data_loader_0.find_vars_files(str_0, str_0)
        list_0 = None
        bytes_0 = b'\xcb\xc6\x7f\xd2\x18\xce\x07\xde'
        int_0 = -169
        var_1 = data_loader_0.path_dwim_relative_stack(bytes_0, int_0, list_0)
    except BaseException:
        pass

def test_case_12():
    try:
        data_loader_0 = module_0.DataLoader()
        str_0 = '~!_?Xy9-\nf2jvr;N7S'
        var_0 = data_loader_0.load_from_file(str_0)
    except BaseException:
        pass

def test_case_13():
    try:
        bool_0 = False
        str_0 = 'g\x0b5;Of\n'
        data_loader_0 = module_0.DataLoader()
        var_0 = data_loader_0.set_basedir(str_0)
        data_loader_1 = module_0.DataLoader()
        data_loader_2 = module_0.DataLoader()
        var_1 = data_loader_2.cleanup_all_tmp_files()
        str_1 = '~\r'
        set_0 = {bool_0, bool_0, var_1}
        str_2 = '\rdPAe`Ru9)F%4G'
        var_2 = data_loader_2.cleanup_tmp_file(str_2)
        var_3 = data_loader_2.set_basedir(set_0)
        var_4 = data_loader_2.get_basedir()
        tuple_0 = ()
        int_0 = -2238
        var_5 = data_loader_1.path_dwim_relative(tuple_0, tuple_0, str_1, int_0)
        str_3 = 'O7'
        float_0 = -1402.875539
        bool_1 = False
        float_1 = -1201.9511952290377
        tuple_1 = (str_2, float_1, bool_0)
        var_6 = data_loader_0.path_dwim_relative_stack(str_3, float_0, bool_1, tuple_1)
    except BaseException:
        pass

def test_case_14():
    try:
        str_0 = 'config_mode'
        data_loader_0 = module_0.DataLoader()
        var_0 = data_loader_0.path_dwim(str_0)
        str_1 = 'g\x0b5;Of\n'
        bytes_0 = b'\xc9\x10\n\xa7n\xbbr'
        var_1 = data_loader_0.path_dwim(bytes_0)
        data_loader_1 = module_0.DataLoader()
        var_2 = data_loader_1.set_basedir(str_1)
        data_loader_2 = module_0.DataLoader()
        data_loader_3 = module_0.DataLoader()
        var_3 = data_loader_3.cleanup_all_tmp_files()
        str_2 = '~'
        str_3 = '\rdPAe`Ru9)F%4G'
        var_4 = data_loader_3.cleanup_tmp_file(str_3)
        var_5 = data_loader_3.get_basedir()
        dict_0 = {str_3: str_1, str_3: var_3}
        bytes_1 = b''
        var_6 = data_loader_3.is_directory(bytes_1)
        tuple_0 = ()
        int_0 = -2238
        var_7 = data_loader_2.path_dwim_relative(tuple_0, tuple_0, str_2, int_0)
        data_loader_4 = module_0.DataLoader()
        str_4 = '}fp'
        var_8 = data_loader_3.path_dwim_relative_stack(str_4, dict_0, str_0, str_1)
    except BaseException:
        pass

def test_case_15():
    try:
        data_loader_0 = module_0.DataLoader()
        bool_0 = True
        bytes_0 = b''
        var_0 = data_loader_0.load_from_file(bytes_0, bool_0)
    except BaseException:
        pass

def test_case_16():
    try:
        data_loader_0 = module_0.DataLoader()
        str_0 = 'D\nn(lLszyr'
        var_0 = data_loader_0.is_file(str_0)
        bytes_0 = b''
        set_0 = set()
        var_1 = data_loader_0.cleanup_tmp_file(set_0)
        dict_0 = {}
        int_0 = -2238
        tuple_0 = (set_0, dict_0, int_0, set_0)
        tuple_1 = (tuple_0, int_0, bytes_0)
        var_2 = data_loader_0.cleanup_all_tmp_files()
        var_3 = data_loader_0.path_dwim(tuple_1)
        str_1 = '0Fq;:epz'
        str_2 = 'create_home'
        bool_0 = False
        var_4 = data_loader_0.find_vars_files(str_1, str_2, bool_0, int_0)
    except BaseException:
        pass

def test_case_17():
    try:
        data_loader_0 = module_0.DataLoader()
        var_0 = data_loader_0.get_basedir()
        var_1 = data_loader_0.get_basedir()
        data_loader_1 = module_0.DataLoader()
        str_0 = '/de/ull'
        int_0 = -2238
        bool_0 = None
        list_0 = [str_0, bool_0]
        set_0 = {int_0, bool_0, str_0}
        dict_0 = None
        var_2 = data_loader_1.path_dwim_relative(list_0, set_0, str_0, dict_0)
        str_1 = '9"2w/Y,6-<Zsb7m"@'
        var_3 = data_loader_1.is_file(str_1)
        display_0 = module_1.Display()
        var_4 = data_loader_1.path_dwim_relative_stack(display_0, display_0, data_loader_1)
    except BaseException:
        pass

def test_case_18():
    try:
        data_loader_0 = module_0.DataLoader()
        str_0 = '/dev/null'
        var_0 = data_loader_0.load_from_file(str_0)
        bool_0 = True
        dict_0 = {data_loader_0: bool_0, str_0: data_loader_0, str_0: var_0}
        var_1 = data_loader_0.load_from_file(str_0, dict_0)
        float_0 = 446.19661
        list_0 = [float_0, data_loader_0, str_0]
        var_2 = data_loader_0.load_from_file(list_0, bool_0)
    except BaseException:
        pass

def test_case_19():
    try:
        data_loader_0 = module_0.DataLoader()
        str_0 = '/dev/null'
        var_0 = data_loader_0.load_from_file(str_0)
        str_1 = '@'
        tuple_0 = (str_0,)
        var_1 = data_loader_0.path_dwim_relative_stack(tuple_0, tuple_0, str_0)
        var_2 = data_loader_0.cleanup_all_tmp_files()
        bool_0 = False
        var_3 = data_loader_0.cleanup_tmp_file(bool_0)
        dict_0 = {str_0: data_loader_0, var_1: str_1}
        var_4 = data_loader_0.load_from_file(dict_0, dict_0, dict_0)
    except BaseException:
        pass