# Automatically generated by Pynguin.
import sty.primitive as module_0

def test_case_0():
    style_0 = module_0.Style()

def test_case_1():
    register_0 = module_0.Register()

def test_case_2():
    register_0 = module_0.Register()
    str_0 = register_0.__call__()

def test_case_3():
    register_0 = module_0.Register()
    register_1 = register_0.copy()
    register_2 = register_0.copy()
    dict_0 = {register_0: register_2, register_0: register_0, register_0: register_0}
    register_1.set_renderfunc(register_1, dict_0)
    register_3 = register_1.copy()

def test_case_4():
    register_0 = module_0.Register()
    register_1 = register_0.copy()
    register_2 = register_1.copy()
    register_2.mute()

def test_case_5():
    register_0 = module_0.Register()
    register_1 = register_0.copy()
    register_2 = register_1.copy()
    var_0 = register_2.as_namedtuple()
    register_3 = module_0.Register()
    register_3.unmute()

def test_case_6():
    register_0 = module_0.Register()
    register_1 = register_0.copy()
    dict_0 = register_1.as_dict()

def test_case_7():
    str_0 = ')|A['
    style_0 = None
    register_0 = module_0.Register()
    dict_0 = None
    register_0.set_renderfunc(dict_0, dict_0)
    var_0 = register_0.__setattr__(str_0, style_0)
    register_1 = module_0.Register()
    str_1 = register_1.__call__()
    dict_1 = {}
    dict_2 = register_1.as_dict()
    dict_3 = register_1.as_dict()
    style_1 = module_0.Style(**dict_1)
    type_0 = None
    register_0.set_rgb_call(type_0)

def test_case_8():
    str_0 = '~m\\lk&}bG+sA {IuV'
    list_0 = [str_0, str_0, str_0]
    register_0 = module_0.Register()
    register_1 = register_0.copy()
    str_1 = register_1.__call__(*list_0)
    register_2 = module_0.Register()
    register_3 = register_2.copy()
    register_2.unmute()
    dict_0 = register_2.as_dict()

def test_case_9():
    register_0 = module_0.Register()
    register_1 = register_0.copy()
    register_0.mute()
    register_2 = register_1.copy()
    int_0 = 3299
    list_0 = [int_0]
    str_0 = register_1.__call__(*list_0)
    register_3 = module_0.Register()
    register_2.mute()
    str_1 = register_1.__call__()
    type_0 = None
    str_2 = register_1.__call__()
    bool_0 = False
    register_0.set_renderfunc(type_0, bool_0)
    register_0.set_rgb_call(type_0)