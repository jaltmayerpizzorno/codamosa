# Automatically generated by Pynguin.
import semantic_release.hvcs as module_0

def test_case_0():
    pass

def test_case_1():
    base_0 = module_0.get_hvcs()
    str_0 = base_0.api_url()
    str_1 = 'gH!;)YJ'
    str_2 = '3'
    token_auth_0 = module_0.TokenAuth(str_2)
    var_0 = token_auth_0.__ne__(str_1)

def test_case_2():
    base_0 = module_0.get_hvcs()
    str_0 = base_0.domain()

def test_case_3():
    str_0 = '5cc5d7a5b531f7a25e2ec37d7277e44a9f8bbe11'
    bool_0 = module_0.check_build_status(str_0, str_0, str_0)

def test_case_4():
    bool_0 = module_0.check_token()

def test_case_5():
    github_0 = module_0.Github()
    optional_0 = github_0.auth()

def test_case_6():
    str_0 = 'RQ(WV>\n?/*_L\t['
    bool_0 = module_0.post_changelog(str_0, str_0, str_0, str_0)

def test_case_7():
    str_0 = 'Upload wheels to PyPI with Twine.\n\n    Wheels must already be created and stored at the given path.\n\n    Credentials are taken from either the environment variable\n    ``PYPI_TOKEN``, or from ``PYPI_USERNAME`` and ``PYPI_PASSWORD``.\n\n    :param path: Path to dist folder containing the files to upload.\n    :param skip_existing: Continue uploading files if one already exists.\n        (Only valid when uploading to PyPI. Other implementations may not support this.)\n    :param glob_patterns: List of glob patterns to include in the upload (["*"] by default).\n    '
    str_1 = 'g|TZyre:Jz60\'"i7Wk|'
    bool_0 = module_0.upload_to_release(str_0, str_0, str_1, str_0)

def test_case_8():
    gitlab_0 = module_0.Gitlab()
    str_0 = gitlab_0.api_url()

def test_case_9():
    gitlab_0 = module_0.Gitlab()
    optional_0 = gitlab_0.token()

def test_case_10():
    str_0 = None
    str_1 = ' '
    bool_0 = module_0.upload_to_release(str_1, str_1, str_0, str_1)
    str_2 = '_5l)AHY$Gsg/WS[RqP0'
    bool_1 = module_0.upload_to_release(str_1, str_0, str_0, str_2)
    optional_0 = module_0.get_domain()
    bool_2 = module_0.check_token()