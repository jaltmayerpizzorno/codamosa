# Automatically generated by Pynguin.
import ansible.modules.lineinfile as module_0

def test_case_0():
    try:
        float_0 = -1817.9444
        bytes_0 = b'J4\xc9'
        bool_0 = True
        var_0 = module_0.write_changes(float_0, bytes_0, bool_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = None
        dict_0 = None
        int_0 = 2261
        int_1 = -1771
        var_0 = module_0.check_file_attrs(bytes_0, dict_0, int_0, int_1)
    except BaseException:
        pass

def test_case_2():
    try:
        set_0 = set()
        str_0 = "\n    Return a new dictionary result of the merges of y into x,\n    so that keys from y take precedence over keys from x.\n    (x and y aren't modified)\n    "
        tuple_0 = (str_0, set_0)
        list_0 = [str_0]
        int_0 = 723
        float_0 = 1532.508138
        var_0 = module_0.present(tuple_0, str_0, int_0, list_0, list_0, tuple_0, int_0, float_0, int_0, set_0, float_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = None
        float_0 = -2471.5
        str_0 = 'MPxPq8|'
        list_0 = [bytes_0]
        str_1 = ':=\\;4VQad'
        str_2 = ',Ox4'
        dict_0 = {str_1: str_0, str_2: str_1, float_0: bytes_0}
        tuple_0 = (list_0, str_1, dict_0)
        str_3 = 'JIB#'
        str_4 = 'n03e_0&)7Gg2Jn-'
        var_0 = module_0.present(bytes_0, float_0, float_0, str_0, tuple_0, str_3, list_0, bytes_0, str_4, tuple_0, list_0)
    except BaseException:
        pass

def test_case_4():
    try:
        set_0 = set()
        tuple_0 = None
        bool_0 = None
        str_0 = 'mandrake-release'
        var_0 = module_0.absent(set_0, tuple_0, tuple_0, bool_0, str_0, tuple_0)
    except BaseException:
        pass

def test_case_5():
    try:
        set_0 = set()
        str_0 = '/windows'
        tuple_0 = (str_0, set_0)
        list_0 = [tuple_0, str_0, set_0]
        float_0 = 1477.943
        int_0 = -1380
        var_0 = module_0.present(tuple_0, str_0, int_0, list_0, list_0, tuple_0, int_0, float_0, int_0, set_0, float_0)
    except BaseException:
        pass

def test_case_6():
    try:
        set_0 = set()
        str_0 = '8W/{02k'
        tuple_0 = (str_0, set_0)
        list_0 = [tuple_0, str_0]
        float_0 = 1476.9808416773335
        int_0 = -1404
        var_0 = module_0.present(list_0, str_0, int_0, list_0, set_0, tuple_0, int_0, float_0, int_0, set_0, float_0)
    except BaseException:
        pass

def test_case_7():
    try:
        set_0 = set()
        str_0 = '.'
        tuple_0 = (str_0, set_0)
        list_0 = [tuple_0, str_0, set_0]
        float_0 = 1477.8937518200403
        int_0 = 306
        var_0 = module_0.present(tuple_0, str_0, int_0, list_0, list_0, tuple_0, int_0, float_0, int_0, set_0, float_0)
    except BaseException:
        pass