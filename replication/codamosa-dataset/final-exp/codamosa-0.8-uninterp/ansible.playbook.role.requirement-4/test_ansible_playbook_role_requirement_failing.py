# Automatically generated by Pynguin.
import ansible.playbook.role.requirement as module_0

def test_case_0():
    try:
        bytes_0 = b'\xc3\r\xc4\x06\xf6t\xca\xb3\xdc!)\xa4\xc8\x0b'
        role_requirement_0 = module_0.RoleRequirement()
        var_0 = role_requirement_0.repo_url_to_role_name(bytes_0)
    except BaseException:
        pass

def test_case_1():
    try:
        role_requirement_0 = None
        role_requirement_1 = module_0.RoleRequirement()
        var_0 = role_requirement_1.role_yaml_parse(role_requirement_0)
    except BaseException:
        pass

def test_case_2():
    try:
        list_0 = []
        role_requirement_0 = module_0.RoleRequirement()
        var_0 = role_requirement_0.role_yaml_parse(list_0)
    except BaseException:
        pass

def test_case_3():
    try:
        int_0 = -240
        list_0 = [int_0, int_0, int_0]
        role_requirement_0 = module_0.RoleRequirement()
        var_0 = role_requirement_0.scm_archive_role(int_0, list_0)
    except BaseException:
        pass

def test_case_4():
    try:
        bool_0 = True
        str_0 = 'wxVG"3,v.S.'
        role_requirement_0 = module_0.RoleRequirement()
        var_0 = role_requirement_0.role_yaml_parse(str_0)
        var_1 = role_requirement_0.role_yaml_parse(bool_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'name'
        str_1 = 'src'
        str_2 = 'L'
        list_0 = [str_1, str_2, str_2, str_0]
        role_requirement_0 = module_0.RoleRequirement()
        var_0 = role_requirement_0.role_yaml_parse(list_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'role_name'
        str_1 = 'name'
        str_2 = 'version'
        list_0 = [str_0, str_2, str_2, str_1]
        role_requirement_0 = module_0.RoleRequirement()
        var_0 = role_requirement_0.role_yaml_parse(list_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'LK5K$-%:X+(H[h:;'
        role_requirement_0 = module_0.RoleRequirement()
        var_0 = role_requirement_0.role_yaml_parse(str_0)
        var_1 = role_requirement_0.role_yaml_parse(var_0)
        role_requirement_1 = module_0.RoleRequirement()
        var_2 = role_requirement_1.role_yaml_parse(role_requirement_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = "k~@4^5<}0P},>p(B'T"
        role_requirement_0 = module_0.RoleRequirement()
        var_0 = role_requirement_0.role_yaml_parse(str_0)
        var_1 = role_requirement_0.repo_url_to_role_name(str_0)
        list_0 = None
        role_requirement_1 = module_0.RoleRequirement()
        bytes_0 = b'\xdc\xea\x07'
        var_2 = role_requirement_0.scm_archive_role(list_0, bytes_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'role'
        str_1 = 'git+https://github.com/ansible/ansible-examples,master,some_role_name'
        set_0 = {str_0, str_1}
        role_requirement_0 = module_0.RoleRequirement()
        var_0 = role_requirement_0.role_yaml_parse(set_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = "G,k~@4^<<}\nP},>,(B'T"
        role_requirement_0 = module_0.RoleRequirement()
        var_0 = role_requirement_0.role_yaml_parse(str_0)
    except BaseException:
        pass