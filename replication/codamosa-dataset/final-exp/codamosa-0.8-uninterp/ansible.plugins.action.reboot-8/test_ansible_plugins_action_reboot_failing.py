# Automatically generated by Pynguin.
import ansible.plugins.action.reboot as module_0

def test_case_0():
    try:
        action_module_0 = module_0.ActionModule()
    except BaseException:
        pass

def test_case_1():
    try:
        timed_out_exception_0 = module_0.TimedOutException()
        list_0 = [timed_out_exception_0, timed_out_exception_0, timed_out_exception_0, timed_out_exception_0, timed_out_exception_0, timed_out_exception_0]
        timed_out_exception_1 = module_0.TimedOutException(*list_0)
        action_module_0 = module_0.ActionModule(*list_0)
        var_0 = action_module_0.deprecated_args()
        str_0 = '\n    Internal convenience function to ensure arguments are MutableMappings\n\n    This checks that all arguments are MutableMappings or raises an error\n\n    :raises AnsibleError: if one of the arguments is not a MutableMapping\n    '
        var_1 = action_module_0.get_distribution(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        timed_out_exception_0 = module_0.TimedOutException()
        list_0 = [timed_out_exception_0, timed_out_exception_0, timed_out_exception_0, timed_out_exception_0, timed_out_exception_0, timed_out_exception_0]
        bool_0 = False
        action_module_0 = module_0.ActionModule(*list_0)
        var_0 = action_module_0.get_system_boot_time(bool_0)
    except BaseException:
        pass

def test_case_3():
    try:
        timed_out_exception_0 = module_0.TimedOutException()
        list_0 = [timed_out_exception_0, timed_out_exception_0, timed_out_exception_0, timed_out_exception_0, timed_out_exception_0, timed_out_exception_0]
        list_1 = [list_0]
        timed_out_exception_1 = module_0.TimedOutException(*list_0)
        action_module_0 = module_0.ActionModule(*list_0)
        bytes_0 = None
        int_0 = -354
        str_0 = '8-}/'
        list_2 = [list_1, bytes_0, str_0, list_1]
        str_1 = '@wRtE}O'
        dict_0 = {str_0: timed_out_exception_0, str_0: list_2, str_1: bytes_0}
        var_0 = action_module_0.perform_reboot(int_0, dict_0)
    except BaseException:
        pass

def test_case_4():
    try:
        timed_out_exception_0 = module_0.TimedOutException()
        list_0 = [timed_out_exception_0, timed_out_exception_0, timed_out_exception_0, timed_out_exception_0, timed_out_exception_0, timed_out_exception_0]
        timed_out_exception_1 = module_0.TimedOutException(*list_0)
        action_module_0 = module_0.ActionModule(*list_0)
        var_0 = action_module_0.get_shutdown_command_args(list_0)
    except BaseException:
        pass

def test_case_5():
    try:
        timed_out_exception_0 = module_0.TimedOutException()
        list_0 = [timed_out_exception_0, timed_out_exception_0, timed_out_exception_0, timed_out_exception_0, timed_out_exception_0, timed_out_exception_0]
        timed_out_exception_1 = module_0.TimedOutException(*list_0)
        action_module_0 = module_0.ActionModule(*list_0)
        str_0 = '\npp#Jp=k\x0c\\VXi>wu'
        dict_0 = None
        var_0 = action_module_0.validate_reboot(str_0, dict_0)
    except BaseException:
        pass

def test_case_6():
    try:
        timed_out_exception_0 = module_0.TimedOutException()
        list_0 = [timed_out_exception_0, timed_out_exception_0, timed_out_exception_0, timed_out_exception_0, timed_out_exception_0, timed_out_exception_0]
        timed_out_exception_1 = module_0.TimedOutException(*list_0)
        action_module_0 = module_0.ActionModule(*list_0)
        var_0 = action_module_0.run_test_command(list_0)
    except BaseException:
        pass

def test_case_7():
    try:
        timed_out_exception_0 = module_0.TimedOutException()
        list_0 = [timed_out_exception_0, timed_out_exception_0, timed_out_exception_0, timed_out_exception_0, timed_out_exception_0, timed_out_exception_0]
        timed_out_exception_1 = module_0.TimedOutException(*list_0)
        action_module_0 = module_0.ActionModule(*list_0)
        var_0 = action_module_0.deprecated_args()
        action_module_1 = module_0.ActionModule(*list_0)
        str_0 = ''
        tuple_0 = None
        var_1 = action_module_1.check_boot_time(str_0, tuple_0)
    except BaseException:
        pass

def test_case_8():
    try:
        timed_out_exception_0 = module_0.TimedOutException()
        list_0 = [timed_out_exception_0, timed_out_exception_0, timed_out_exception_0, timed_out_exception_0, timed_out_exception_0, timed_out_exception_0]
        dict_0 = {}
        action_module_0 = module_0.ActionModule(*list_0, **dict_0)
        var_0 = action_module_0.run()
    except BaseException:
        pass

def test_case_9():
    try:
        timed_out_exception_0 = module_0.TimedOutException()
        list_0 = [timed_out_exception_0, timed_out_exception_0, timed_out_exception_0, timed_out_exception_0, timed_out_exception_0, timed_out_exception_0]
        action_module_0 = module_0.ActionModule(*list_0)
        bytes_0 = b'\xce\xb8\x13\x89\x04\xad\x1f\xed'
        int_0 = -735
        str_0 = 'A*i'
        tuple_0 = (str_0,)
        var_0 = action_module_0.do_until_success_or_timeout(bytes_0, int_0, timed_out_exception_0, tuple_0)
    except BaseException:
        pass

def test_case_10():
    try:
        timed_out_exception_0 = module_0.TimedOutException()
        list_0 = [timed_out_exception_0, timed_out_exception_0, timed_out_exception_0, timed_out_exception_0, timed_out_exception_0, timed_out_exception_0]
        int_0 = 3489
        action_module_0 = module_0.ActionModule(*list_0)
        timed_out_exception_1 = module_0.TimedOutException()
        bytes_0 = b'\xce\xb8\x13\x89\x04\xad\x1f\xed'
        str_0 = '!uW'
        tuple_0 = (str_0,)
        var_0 = action_module_0.do_until_success_or_timeout(bytes_0, int_0, timed_out_exception_0, tuple_0)
    except BaseException:
        pass

def test_case_11():
    try:
        timed_out_exception_0 = module_0.TimedOutException()
        list_0 = [timed_out_exception_0, timed_out_exception_0, timed_out_exception_0, timed_out_exception_0, timed_out_exception_0, timed_out_exception_0]
        list_1 = [list_0]
        timed_out_exception_1 = module_0.TimedOutException(*list_0)
        action_module_0 = module_0.ActionModule(*list_0)
        var_0 = action_module_0.deprecated_args()
        timed_out_exception_2 = module_0.TimedOutException()
        str_0 = 'A*i'
        str_1 = '!uA'
        tuple_0 = (str_1,)
        str_2 = ''
        tuple_1 = (str_0, tuple_0, str_2, list_1)
        bool_0 = True
        bytes_0 = b'\xadM\xb1/\xc9\xcc\xe8\xac\xfd\xb8i\xa6\x0155'
        var_1 = action_module_0.do_until_success_or_timeout(tuple_1, bool_0, action_module_0, bytes_0, bool_0)
    except BaseException:
        pass