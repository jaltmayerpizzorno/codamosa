# Automatically generated by Pynguin.
import ansible.module_utils.facts.collector as module_0
import collections as module_1

def test_case_0():
    pass

def test_case_1():
    base_fact_collector_0 = module_0.BaseFactCollector()

def test_case_2():
    var_0 = module_0.get_collector_names()
    bytes_0 = b'\x18<\x94\xc9_xL\x02~3?\x03'
    base_fact_collector_0 = module_0.BaseFactCollector()
    var_1 = base_fact_collector_0.collect_with_namespace(bytes_0)

def test_case_3():
    var_0 = module_0.get_collector_names()

def test_case_4():
    collector_not_found_error_0 = None
    int_0 = 2528
    var_0 = module_0.collector_classes_from_gather_subset(collector_not_found_error_0, int_0)

def test_case_5():
    dict_0 = {}
    cycle_found_in_fact_deps_0 = module_0.CycleFoundInFactDeps()
    str_0 = 'orJY3JmN\t;D'
    var_0 = module_0.collector_classes_from_gather_subset(dict_0, cycle_found_in_fact_deps_0, str_0)

def test_case_6():
    str_0 = 'min'
    dict_0 = {str_0: str_0}
    base_fact_collector_0 = module_0.BaseFactCollector(str_0, dict_0)
    var_0 = base_fact_collector_0.collect_with_namespace()

def test_case_7():
    bytes_0 = b'?^4:\xd6E\xa9\xb1`\xc9Q\xc6\xf4'
    unresolved_fact_dep_0 = module_0.UnresolvedFactDep()
    list_0 = [bytes_0]
    float_0 = -1990.52
    base_fact_collector_0 = module_0.BaseFactCollector(list_0, float_0)
    var_0 = base_fact_collector_0.collect_with_namespace(unresolved_fact_dep_0)
    set_0 = {base_fact_collector_0}
    var_1 = module_0.collector_classes_from_gather_subset(set_0)

def test_case_8():
    tuple_0 = ()
    str_0 = 'F'
    var_0 = module_0.resolve_requires(str_0, str_0)
    bytes_0 = b'?^\xd94:\xd6E\xa9\xb1\xc9\xfaQ\xc6\xf4'
    list_0 = [bytes_0]
    defaultdict_0 = module_1.defaultdict()
    unresolved_fact_dep_0 = module_0.UnresolvedFactDep()
    list_1 = [bytes_0]
    float_0 = -1990.52
    base_fact_collector_0 = module_0.BaseFactCollector(list_1, float_0)
    unresolved_fact_dep_1 = None
    var_1 = base_fact_collector_0.collect_with_namespace(unresolved_fact_dep_1)
    var_2 = module_0.collector_classes_from_gather_subset(defaultdict_0, tuple_0, list_0)
    var_3 = module_0.collector_classes_from_gather_subset()
    set_0 = {base_fact_collector_0}
    str_1 = ')eK{3(\r\t!Qs`'
    var_4 = module_0.collector_classes_from_gather_subset(set_0, unresolved_fact_dep_0, str_1)

def test_case_9():
    str_0 = 'min'
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.tsort(dict_0)

def test_case_10():
    str_0 = '!w_'
    str_1 = 's6R\x0b!jJ$d#o7}/"b'
    dict_0 = {str_0: str_0, str_1: str_0}
    defaultdict_0 = module_1.defaultdict(**dict_0)
    var_0 = module_0.select_collector_classes(defaultdict_0, dict_0)

def test_case_11():
    str_0 = 'network'
    str_1 = 'virtual'
    str_2 = [str_0, str_1]
    var_0 = frozenset(str_2)
    str_3 = [str_1]
    var_1 = frozenset(str_3)
    str_4 = 'all'
    str_5 = [str_4]
    var_2 = module_0.get_collector_names(var_0, var_1, str_5)
    str_6 = [str_0, str_1]
    var_3 = frozenset(str_6)
    str_7 = [str_0]
    var_4 = module_0.get_collector_names(var_0, var_1, str_7)
    str_8 = [str_0]
    var_5 = frozenset(str_8)