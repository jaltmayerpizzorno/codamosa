# Automatically generated by Pynguin.
import flutes.iterator as module_0

def test_case_0():
    pass

def test_case_1():
    tuple_0 = ()
    lazy_list_0 = module_0.LazyList(tuple_0)

def test_case_2():
    int_0 = 676
    list_0 = [int_0]
    range_0 = module_0.Range(*list_0)
    iterator_0 = module_0.split_by(range_0)

def test_case_3():
    int_0 = 676
    list_0 = [int_0]
    range_0 = module_0.Range(*list_0)
    iterator_0 = module_0.split_by(range_0)
    iterator_1 = range_0.__iter__()

def test_case_4():
    int_0 = -9
    map_list_0 = module_0.MapList(int_0, int_0)

def test_case_5():
    int_0 = 6
    float_0 = -307.942987
    list_0 = [int_0]
    range_0 = module_0.Range(*list_0)
    var_0 = range_0.__getitem__(float_0)

def test_case_6():
    int_0 = -1813
    int_1 = [int_0, int_0, int_0, int_0, int_0, int_0, int_0]
    lazy_list_0 = module_0.LazyList(int_1)
    var_0 = list(lazy_list_0)

def test_case_7():
    int_0 = 10000
    int_1 = 5
    int_2 = 1000000
    var_0 = range(int_2)
    iterator_0 = module_0.drop(int_1, var_0)
    iterator_1 = module_0.take(int_0, iterator_0)
    var_1 = sum(iterator_1)

def test_case_8():
    var_0 = lambda s, x: x + s
    str_0 = 'a'
    str_1 = 'b'
    str_2 = 'c'
    str_3 = 'd'
    str_4 = [str_0, str_1, str_2, str_3]
    var_1 = module_0.scanl(var_0, str_4)
    var_2 = list(var_1)
    var_3 = lambda s, x: x + s

def test_case_9():
    var_0 = lambda x: x * x
    int_0 = 1
    int_1 = 2
    int_2 = 3
    int_3 = 4
    int_4 = 5
    int_5 = [int_0, int_1, int_2, int_3, int_4]
    map_list_0 = module_0.MapList(var_0, int_5)
    int_6 = 0
    var_1 = map_list_0.__getitem__(int_6)
    var_2 = map_list_0.__getitem__(int_0)
    var_3 = map_list_0.__getitem__(int_1)
    var_4 = map_list_0.__getitem__(int_2)
    var_5 = map_list_0.__getitem__(int_3)
    int_7 = -4
    var_6 = map_list_0.__getitem__(int_7)
    int_8 = -5
    var_7 = map_list_0.__getitem__(int_8)
    var_8 = None
    var_9 = slice(int_6, int_4, var_8)
    var_10 = map_list_0.__getitem__(var_9)
    int_9 = -4
    var_11 = slice(int_6, int_9, var_8)
    var_12 = map_list_0.__getitem__(var_11)

def test_case_10():
    int_0 = 3
    int_1 = 10
    var_0 = range(int_1)
    iterator_0 = module_0.chunk(int_0, var_0)
    var_1 = list(iterator_0)
    int_2 = 9
    var_2 = range(int_2)
    iterator_1 = module_0.chunk(int_0, var_2)
    var_3 = list(iterator_1)
    int_3 = 8
    var_4 = range(int_3)
    iterator_2 = module_0.chunk(int_0, var_4)
    var_5 = list(iterator_2)
    int_4 = 7
    var_6 = range(int_4)
    iterator_3 = module_0.chunk(int_0, var_6)
    var_7 = list(iterator_3)
    int_5 = 6
    var_8 = range(int_5)
    iterator_4 = module_0.chunk(int_0, var_8)
    var_9 = list(iterator_4)
    int_6 = 5
    var_10 = range(int_6)
    iterator_5 = module_0.chunk(int_0, var_10)
    var_11 = list(iterator_5)

def test_case_11():
    bool_0 = True
    str_0 = '&'
    iterator_0 = module_0.split_by(str_0, bool_0, separator=str_0)
    var_0 = list(iterator_0)

def test_case_12():
    int_0 = -2462
    bool_0 = False
    str_0 = 'ZO5!\nZ'
    iterator_0 = module_0.split_by(str_0, bool_0, separator=str_0)
    int_1 = 3644
    iterator_1 = module_0.take(int_1, int_0)
    var_0 = list(iterator_0)
    var_1 = []
    iterator_2 = module_0.split_by(int_0, criterion=var_1, separator=str_0)
    dict_0 = {str_0: iterator_1, str_0: str_0}
    list_0 = [dict_0]
    lazy_list_0 = module_0.LazyList(list_0)
    var_2 = lazy_list_0.__getitem__(bool_0)

def test_case_13():
    bool_0 = False
    str_0 = '&'
    iterator_0 = module_0.split_by(str_0, bool_0, separator=str_0)
    var_0 = list(iterator_0)

def test_case_14():
    int_0 = 38
    var_0 = lambda x: x > int_0
    int_1 = -1
    var_1 = range(int_1)
    iterator_0 = module_0.drop_until(var_0, var_1)
    var_2 = list(iterator_0)

def test_case_15():
    int_0 = 0
    int_1 = 10
    var_0 = range(int_1)
    iterator_0 = module_0.drop(int_0, var_0)
    var_1 = list(iterator_0)
    var_2 = range(int_1)
    var_3 = list(var_2)
    int_2 = 1
    var_4 = range(int_1)
    iterator_1 = module_0.drop(int_2, var_4)
    var_5 = list(iterator_1)
    var_6 = range(int_2, int_1)
    var_7 = list(var_6)
    var_8 = range(int_1)
    iterator_2 = module_0.drop(int_1, var_8)
    var_9 = list(iterator_2)
    int_3 = 5
    int_4 = 2
    int_5 = 3
    int_6 = [int_2, int_4, int_5]
    iterator_3 = module_0.drop(int_3, int_6)
    var_10 = list(iterator_3)