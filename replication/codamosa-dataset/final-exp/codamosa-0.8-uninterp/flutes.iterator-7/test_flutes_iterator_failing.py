# Automatically generated by Pynguin.
import flutes.iterator as module_0

def test_case_0():
    try:
        str_0 = 'jzl|2ZH^\t,!X*Be2tC'
        lazy_list_0 = module_0.LazyList(str_0)
        var_0 = lazy_list_0.__iter__()
        var_1 = lazy_list_0.__len__()
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'jzl|2ZH^\t,!X*Be2tC'
        lazy_list_0 = module_0.LazyList(str_0)
        var_0 = lazy_list_0.__len__()
    except BaseException:
        pass

def test_case_2():
    try:
        range_0 = module_0.Range()
    except BaseException:
        pass

def test_case_3():
    try:
        int_0 = 676
        list_0 = [int_0]
        range_0 = module_0.Range(*list_0)
        iterator_0 = module_0.split_by(range_0)
        str_0 = 'R'
        lazy_list_0 = module_0.LazyList(str_0)
        bool_0 = False
        iterable_0 = None
        iterator_1 = module_0.drop_until(bool_0, iterable_0)
        iterator_2 = range_0.__iter__()
        var_0 = module_0.scanr(iterator_1, iterator_2)
    except BaseException:
        pass

def test_case_4():
    try:
        float_0 = -3925.5
        str_0 = '"=&<48+_+\x0br\'6|/u~\n n'
        map_list_0 = module_0.MapList(float_0, str_0)
        iterator_0 = map_list_0.__iter__()
        list_0 = [iterator_0, str_0]
        lazy_list_0 = module_0.LazyList(list_0)
        var_0 = lazy_list_0.__len__()
    except BaseException:
        pass

def test_case_5():
    try:
        int_0 = -571
        set_0 = None
        iterator_0 = module_0.drop_until(int_0, set_0)
        float_0 = 0.1
        bool_0 = False
        map_list_0 = module_0.MapList(float_0, bool_0)
        int_1 = map_list_0.__len__()
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = '*h@K)IA;J\\iZ|t`8C9-'
        list_0 = [str_0, str_0]
        range_0 = module_0.Range(*list_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'r3Yi\x0ctBvyQ1'
        bool_0 = False
        var_0 = module_0.scanr(str_0, bool_0)
    except BaseException:
        pass

def test_case_8():
    try:
        bool_0 = True
        list_0 = [bool_0]
        range_0 = module_0.Range(*list_0)
        int_0 = range_0.__next__()
        iterable_0 = None
        iterator_0 = module_0.drop(int_0, iterable_0)
        lazy_list_0 = module_0.LazyList(iterator_0)
        bytes_0 = None
        var_0 = lazy_list_0.__getitem__(bytes_0)
    except BaseException:
        pass

def test_case_9():
    try:
        int_0 = 0
        bool_0 = True
        str_0 = '.'
        iterator_0 = module_0.split_by(str_0, bool_0, separator=str_0)
        str_1 = 'Mm'
        var_0 = list(iterator_0)
        list_0 = [int_0, var_0, str_1, str_1]
        range_0 = module_0.Range(*list_0)
    except BaseException:
        pass

def test_case_10():
    try:
        iterator_0 = None
        int_0 = 1167
        str_0 = 'F\x0bmV]ZCrg&}'
        iterator_1 = module_0.chunk(int_0, str_0)
        lazy_list_0 = module_0.LazyList(iterator_1)
        var_0 = lazy_list_0.__getitem__(iterator_0)
    except BaseException:
        pass

def test_case_11():
    try:
        bool_0 = True
        list_0 = [bool_0]
        range_0 = module_0.Range(*list_0)
        iterator_0 = range_0.__iter__()
        str_0 = '\\Y#6pjR3Z'
        list_1 = []
        int_0 = 31
        iterator_1 = module_0.chunk(int_0, str_0)
        iterator_2 = range_0.__iter__()
        lazy_list_0 = module_0.LazyList(iterator_2)
        tuple_0 = (list_1,)
        var_0 = module_0.scanr(lazy_list_0, tuple_0)
        var_1 = lazy_list_0.__getitem__(bool_0)
    except BaseException:
        pass

def test_case_12():
    try:
        iterable_0 = None
        set_0 = {iterable_0}
        lazy_list_0 = module_0.LazyList(set_0)
        bool_0 = False
        list_0 = [bool_0]
        tuple_0 = ()
        iterator_0 = module_0.split_by(iterable_0, bool_0, criterion=list_0, separator=tuple_0)
        list_1 = [iterator_0, list_0, tuple_0, iterator_0]
        float_0 = -555.7
        sequence_0 = None
        map_list_0 = module_0.MapList(float_0, sequence_0)
        set_1 = {map_list_0, map_list_0}
        map_list_1 = module_0.MapList(set_1, sequence_0)
        var_0 = map_list_1.__getitem__(list_1)
    except BaseException:
        pass

def test_case_13():
    try:
        iterable_0 = None
        iterator_0 = module_0.split_by(iterable_0)
        str_0 = 'R NKB5x[~prS'
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
        lazy_list_0 = module_0.LazyList(dict_0)
        var_0 = lazy_list_0.__getitem__(iterator_0)
    except BaseException:
        pass

def test_case_14():
    try:
        list_0 = []
        int_0 = 3
        str_0 = '[[VP'
        iterator_0 = module_0.chunk(int_0, str_0)
        lazy_list_0 = module_0.LazyList(list_0)
        int_1 = 5986
        iterable_0 = None
        iterator_1 = module_0.take(int_1, iterable_0)
        lazy_list_1 = module_0.LazyList(iterator_1)
        bytes_0 = None
        var_0 = lazy_list_1.__getitem__(bytes_0)
    except BaseException:
        pass

def test_case_15():
    try:
        bool_0 = True
        list_0 = [bool_0]
        range_0 = module_0.Range(*list_0)
        list_1 = [list_0]
        int_0 = 3
        lazy_list_0 = module_0.LazyList(list_1)
        iterator_0 = module_0.chunk(int_0, lazy_list_0)
        iterator_1 = range_0.__iter__()
        int_1 = 4
        var_0 = lazy_list_0.__getitem__(int_1)
    except BaseException:
        pass

def test_case_16():
    try:
        iterator_0 = None
        int_0 = -1327
        str_0 = 'F\x0bm(ZCeg'
        iterator_1 = module_0.chunk(int_0, str_0)
        lazy_list_0 = module_0.LazyList(iterator_1)
        var_0 = lazy_list_0.__getitem__(iterator_0)
    except BaseException:
        pass

def test_case_17():
    try:
        int_0 = 9990
        iterator_0 = module_0.drop(int_0, int_0)
        iterator_1 = module_0.take(int_0, iterator_0)
        var_0 = sum(iterator_0)
    except BaseException:
        pass

def test_case_18():
    try:
        bool_0 = False
        str_0 = '&'
        iterator_0 = module_0.split_by(str_0, bool_0, separator=str_0)
        str_1 = ''
        var_0 = list(iterator_0)
        var_1 = []
        var_2 = []
        iterator_1 = module_0.split_by(var_2, criterion=var_1, separator=str_1)
        iterable_0 = None
        iterator_2 = module_0.split_by(iterable_0, bool_0)
        lazy_list_0 = module_0.LazyList(iterator_2)
        lazy_list_1 = module_0.LazyList(lazy_list_0)
        int_0 = -2199
        var_3 = lazy_list_1.__getitem__(int_0)
    except BaseException:
        pass

def test_case_19():
    try:
        int_0 = -1279
        iterable_0 = None
        iterator_0 = module_0.drop(int_0, iterable_0)
        lazy_list_0 = module_0.LazyList(iterator_0)
        bytes_0 = None
        var_0 = lazy_list_0.__getitem__(bytes_0)
    except BaseException:
        pass

def test_case_20():
    try:
        bool_0 = False
        int_0 = -4
        iterable_0 = None
        iterator_0 = module_0.take(int_0, iterable_0)
        lazy_list_0 = module_0.LazyList(iterator_0)
        var_0 = lazy_list_0.__getitem__(bool_0)
    except BaseException:
        pass

def test_case_21():
    try:
        list_0 = []
        int_0 = 3
        int_1 = -970
        iterator_0 = module_0.chunk(int_0, int_1)
        str_0 = 'no'
        iterator_1 = module_0.chunk(int_0, str_0)
        lazy_list_0 = module_0.LazyList(list_0)
        str_1 = 'y$@^,\']?tia"p(-~7{.'
        bytes_0 = None
        list_1 = [bytes_0, bytes_0]
        var_0 = module_0.scanr(lazy_list_0, str_1, *list_1)
    except BaseException:
        pass

def test_case_22():
    try:
        str_0 = '\\YQ#6pjU3Z'
        int_0 = 3
        iterator_0 = module_0.chunk(int_0, str_0)
        int_1 = 239
        iterator_1 = module_0.take(int_1, str_0)
        lazy_list_0 = module_0.LazyList(iterator_1)
        bytes_0 = None
        var_0 = lazy_list_0.__getitem__(bytes_0)
    except BaseException:
        pass

def test_case_23():
    try:
        bool_0 = False
        list_0 = [bool_0]
        range_0 = module_0.Range(*list_0)
        str_0 = '\\Y#6pjR3Z'
        list_1 = []
        int_0 = 3
        str_1 = "?SCZ ]w6D},]:'9"
        iterator_0 = module_0.chunk(int_0, str_1)
        lazy_list_0 = module_0.LazyList(list_1)
        iterator_1 = range_0.__iter__()
        map_list_0 = module_0.MapList(iterator_1, iterator_1)
        iterator_2 = map_list_0.__iter__()
        iterator_3 = module_0.chunk(int_0, iterator_2)
        bool_1 = True
        iterator_4 = map_list_0.__iter__()
        dict_0 = {iterator_0: iterator_1, str_0: int_0, bool_1: iterator_4}
        bytes_0 = b'2\xa5\xce\xd0\xdf\x8b\xca\xe5z\x9aB\xe1\xa5'
        var_0 = module_0.scanr(dict_0, bytes_0, *list_0)
    except BaseException:
        pass

def test_case_24():
    try:
        int_0 = 8
        var_0 = range(int_0)
        iterator_0 = module_0.drop_until(var_0, var_0)
        var_1 = list(iterator_0)
    except BaseException:
        pass

def test_case_25():
    try:
        bool_0 = False
        str_0 = '&'
        iterator_0 = module_0.split_by(str_0, bool_0, separator=str_0)
        str_1 = ''
        var_0 = list(iterator_0)
        var_1 = []
        var_2 = []
        iterator_1 = module_0.split_by(var_2, criterion=var_1, separator=str_1)
        lazy_list_0 = module_0.LazyList(iterator_1)
        var_3 = lazy_list_0.__getitem__(bool_0)
    except BaseException:
        pass

def test_case_26():
    try:
        int_0 = 2
        int_1 = 27
        int_2 = [int_1, int_1, int_1, int_0, int_1, int_1, int_1]
        lazy_list_0 = module_0.LazyList(int_2)
        var_0 = list(lazy_list_0)
        var_1 = len(lazy_list_0)
        lazy_list_1 = module_0.LazyList(int_1)
    except BaseException:
        pass

def test_case_27():
    try:
        int_0 = 10
        var_0 = range(int_0)
        int_1 = 3
        int_2 = 0
        var_1 = lambda x: x % int_1 == int_2
        iterator_0 = module_0.split_by(var_0, criterion=var_1)
        var_2 = list(iterator_0)
    except BaseException:
        pass

def test_case_28():
    try:
        int_0 = -25
        int_1 = [int_0, int_0, int_0, int_0, int_0, int_0, int_0]
        lazy_list_0 = module_0.LazyList(int_1)
        var_0 = list(lazy_list_0)
        var_1 = lazy_list_0.__iter__()
        var_2 = len(lazy_list_0)
        lazy_list_1 = module_0.LazyList(int_0)
    except BaseException:
        pass

def test_case_29():
    try:
        int_0 = 11
        int_1 = [int_0, int_0, int_0, int_0, int_0, int_0, int_0]
        lazy_list_0 = module_0.LazyList(int_1)
        var_0 = list(lazy_list_0)
        var_1 = len(lazy_list_0)
        var_2 = range(int_0)
        lazy_list_1 = module_0.LazyList(var_2)
        dict_0 = {}
        var_3 = lazy_list_0.__getitem__(dict_0)
    except BaseException:
        pass

def test_case_30():
    try:
        bool_0 = False
        str_0 = '&'
        iterator_0 = module_0.split_by(str_0, bool_0, separator=str_0)
        str_1 = ''
        var_0 = list(iterator_0)
        var_1 = []
        var_2 = []
        iterator_1 = module_0.split_by(var_2, criterion=var_1, separator=str_1)
        iterable_0 = None
        iterator_2 = module_0.split_by(iterable_0, bool_0)
        lazy_list_0 = module_0.LazyList(iterator_2)
        lazy_list_1 = module_0.LazyList(lazy_list_0)
        var_3 = lazy_list_1.__getitem__(bool_0)
    except BaseException:
        pass

def test_case_31():
    try:
        int_0 = 3
        tuple_0 = None
        iterator_0 = module_0.take(int_0, tuple_0)
        lazy_list_0 = module_0.LazyList(iterator_0)
        bool_0 = False
        str_0 = '&'
        var_0 = lazy_list_0.__iter__()
        iterator_1 = module_0.split_by(str_0, bool_0, separator=str_0)
        int_1 = 3644
        iterator_2 = module_0.take(int_1, int_0)
        str_1 = ''
        map_list_0 = module_0.MapList(iterator_2, str_1)
        int_2 = map_list_0.__len__()
        var_1 = list(var_0)
    except BaseException:
        pass