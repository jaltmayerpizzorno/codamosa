# Automatically generated by Pynguin.
import ansible.module_utils.common.collections as module_0

def test_case_0():
    try:
        float_0 = 863.99902
        immutable_dict_0 = module_0.ImmutableDict()
        var_0 = immutable_dict_0.__getitem__(float_0)
    except BaseException:
        pass

def test_case_1():
    try:
        complex_0 = None
        immutable_dict_0 = module_0.ImmutableDict()
        var_0 = immutable_dict_0.__len__()
        var_1 = immutable_dict_0.union(complex_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b'\xf3\xae\x9d'
        str_0 = "MxlGf<'EGs.aDT;A=d6"
        str_1 = 'qw\rzoV('
        dict_0 = {str_0: bytes_0, str_0: bytes_0, str_0: str_0, str_1: str_0}
        list_0 = []
        immutable_dict_0 = module_0.ImmutableDict(*list_0, **dict_0)
        var_0 = immutable_dict_0.__len__()
        immutable_dict_1 = module_0.ImmutableDict()
        list_1 = []
        immutable_dict_2 = module_0.ImmutableDict(*list_1)
        var_1 = immutable_dict_2.__eq__(immutable_dict_1)
        bool_0 = False
        var_2 = module_0.count(bool_0)
    except BaseException:
        pass

def test_case_3():
    try:
        immutable_dict_0 = module_0.ImmutableDict()
        bool_0 = False
        var_0 = module_0.is_iterable(bool_0)
        float_0 = None
        immutable_dict_1 = module_0.ImmutableDict()
        var_1 = immutable_dict_1.difference(float_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = '<uZa.cDQJRH<@fS~S*'
        str_1 = 'vmware'
        str_2 = '('
        str_3 = '\t-T+W>(2BKn6v)%s$'
        dict_0 = {str_0: str_0, str_1: str_1, str_2: str_1, str_3: str_0}
        immutable_dict_0 = module_0.ImmutableDict()
        set_0 = {str_2, immutable_dict_0}
        var_0 = module_0.is_string(set_0)
        var_1 = immutable_dict_0.difference(dict_0)
        var_2 = immutable_dict_0.__getitem__(dict_0)
    except BaseException:
        pass

def test_case_5():
    try:
        float_0 = 1032.24418
        var_0 = module_0.count(float_0)
    except BaseException:
        pass

def test_case_6():
    try:
        immutable_dict_0 = module_0.ImmutableDict()
        str_0 = 'v+0gday-m!'
        tuple_0 = (immutable_dict_0, str_0)
        var_0 = module_0.is_iterable(tuple_0)
        bool_0 = False
        var_1 = module_0.is_iterable(bool_0)
        float_0 = None
        immutable_dict_1 = module_0.ImmutableDict()
        var_2 = immutable_dict_1.difference(float_0)
    except BaseException:
        pass

def test_case_7():
    try:
        float_0 = 0.0
        bool_0 = True
        var_0 = module_0.is_sequence(float_0, bool_0)
        bytes_0 = b'\xc6\\\x92f\xcd\x1em\x04?$@U'
        var_1 = module_0.is_sequence(bytes_0)
        bool_1 = True
        list_0 = [bytes_0, bool_1]
        immutable_dict_0 = module_0.ImmutableDict(*list_0)
    except BaseException:
        pass

def test_case_8():
    try:
        float_0 = -1196.675897
        var_0 = module_0.is_sequence(float_0)
        immutable_dict_0 = module_0.ImmutableDict()
        var_1 = immutable_dict_0.__repr__()
        var_2 = immutable_dict_0.__iter__()
        var_3 = immutable_dict_0.__iter__()
        list_0 = []
        var_4 = immutable_dict_0.__getitem__(list_0)
    except BaseException:
        pass

def test_case_9():
    try:
        immutable_dict_0 = module_0.ImmutableDict()
        var_0 = immutable_dict_0.__repr__()
        var_1 = immutable_dict_0.__repr__()
        var_2 = immutable_dict_0.__repr__()
        var_3 = immutable_dict_0.__hash__()
        tuple_0 = None
        int_0 = 8
        tuple_1 = (tuple_0, int_0, int_0)
        var_4 = module_0.count(tuple_1)
        var_5 = immutable_dict_0.__len__()
        str_0 = ';\x0ce3PlO\n%,EfTrYj'
        var_6 = immutable_dict_0.__getitem__(str_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = 'become_success'
        complex_0 = None
        str_1 = 'machdep.dmi.system-version'
        dict_0 = {str_0: str_0, str_0: str_0, str_0: complex_0, str_1: str_0}
        immutable_dict_0 = module_0.ImmutableDict(**dict_0)
        str_2 = "a'#g@\nVQ<?f!^> nM!"
        var_0 = immutable_dict_0.difference(immutable_dict_0)
        var_1 = immutable_dict_0.__getitem__(str_2)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = 'D'
        str_1 = 'qw\rzoV('
        list_0 = []
        dict_0 = {str_0: str_0, str_0: str_1}
        immutable_dict_0 = module_0.ImmutableDict(*list_0, **dict_0)
        var_0 = immutable_dict_0.__len__()
        immutable_dict_1 = module_0.ImmutableDict()
        list_1 = []
        immutable_dict_2 = module_0.ImmutableDict(*list_1)
        var_1 = immutable_dict_2.__eq__(immutable_dict_1)
        var_2 = immutable_dict_2.__repr__()
        dict_1 = {}
        var_3 = immutable_dict_0.__eq__(dict_1)
        bool_0 = False
        str_2 = "Y[XU'3c"
        var_4 = immutable_dict_0.difference(str_2)
        var_5 = module_0.count(bool_0)
    except BaseException:
        pass

def test_case_12():
    try:
        float_0 = 1156.88
        dict_0 = {float_0: float_0, float_0: float_0, float_0: float_0}
        bytes_0 = b'\x06\xb1\xc0\xbb\xc4F\x0fC*\x90\xc71|=\xfd'
        var_0 = module_0.is_iterable(bytes_0)
        var_1 = module_0.is_iterable(float_0, dict_0)
        list_0 = [var_0, float_0, bytes_0, var_0]
        str_0 = ''
        str_1 = 'Zd@y58_uGhG'
        dict_1 = {str_0: dict_0, str_0: float_0, str_1: var_0}
        immutable_dict_0 = module_0.ImmutableDict(*list_0, **dict_1)
    except BaseException:
        pass