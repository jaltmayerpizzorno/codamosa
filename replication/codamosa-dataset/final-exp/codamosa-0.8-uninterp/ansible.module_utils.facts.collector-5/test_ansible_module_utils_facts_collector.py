# Automatically generated by Pynguin.
import ansible.module_utils.facts.collector as module_0

def test_case_0():
    pass

def test_case_1():
    var_0 = module_0.get_collector_names()
    base_fact_collector_0 = module_0.BaseFactCollector()
    var_1 = base_fact_collector_0.collect_with_namespace()

def test_case_2():
    var_0 = module_0.get_collector_names()

def test_case_3():
    dict_0 = {}
    var_0 = module_0.collector_classes_from_gather_subset(dict_0)

def test_case_4():
    base_fact_collector_0 = module_0.BaseFactCollector()
    base_fact_collector_1 = module_0.BaseFactCollector(base_fact_collector_0, base_fact_collector_0)
    var_0 = base_fact_collector_1.collect_with_namespace()

def test_case_5():
    str_0 = '!all'
    str_1 = 'min'
    str_2 = '!dmi'
    str_3 = '!hardware'
    str_4 = [str_0, str_1, str_2, str_3]
    str_5 = 'all'
    str_6 = '"=,**[5AXh'
    str_7 = 'hardware'
    str_8 = [str_5, str_6, str_7]
    str_9 = 'devices'
    str_10 = [str_9, str_6]
    str_11 = {str_7: str_10}
    var_0 = module_0.get_collector_names(str_8, str_4, str_11)
    var_1 = set(var_0)

def test_case_6():
    bool_0 = False
    str_0 = 'gw^t`v\ryimD;h`sA'
    var_0 = module_0.collector_classes_from_gather_subset(bool_0, str_0)
    collector_not_found_error_0 = module_0.CollectorNotFoundError()

def test_case_7():
    tuple_0 = ()
    str_0 = 'DZp9WF.@l)p;Etqh+'
    var_0 = module_0.resolve_requires(tuple_0, str_0)
    var_1 = module_0.collector_classes_from_gather_subset()

def test_case_8():
    set_0 = set()
    base_fact_collector_0 = module_0.BaseFactCollector()
    base_fact_collector_1 = module_0.BaseFactCollector(set_0, base_fact_collector_0)
    var_0 = base_fact_collector_1.collect_with_namespace()

def test_case_9():
    str_0 = 'iL@JWj.QM^I2jP%Ke\x0cT'
    str_1 = ';o@tI'
    list_0 = [str_1, str_1]
    collector_not_found_error_0 = module_0.CollectorNotFoundError(*list_0)
    dict_0 = {str_1: list_0, str_0: str_1, str_1: collector_not_found_error_0, str_1: collector_not_found_error_0, str_1: str_0}
    var_0 = module_0.tsort(dict_0)

def test_case_10():
    unresolved_fact_dep_0 = module_0.UnresolvedFactDep()
    tuple_0 = ()
    str_0 = 'Dp9WF.@l)wEqh+'
    var_0 = module_0.resolve_requires(tuple_0, str_0)
    collector_not_found_error_0 = module_0.CollectorNotFoundError()
    int_0 = 1127
    base_fact_collector_0 = module_0.BaseFactCollector(int_0)
    list_0 = [base_fact_collector_0, base_fact_collector_0]
    var_1 = module_0.collector_classes_from_gather_subset(list_0, unresolved_fact_dep_0)

def test_case_11():
    unresolved_fact_dep_0 = module_0.UnresolvedFactDep()
    base_fact_collector_0 = module_0.BaseFactCollector()
    tuple_0 = ()
    str_0 = 'DZp9WF.@l)p;Etqh+'
    var_0 = module_0.resolve_requires(tuple_0, str_0)
    list_0 = [base_fact_collector_0, base_fact_collector_0]
    var_1 = module_0.build_fact_id_to_collector_map(list_0)
    var_2 = base_fact_collector_0.collect_with_namespace()

def test_case_12():
    var_0 = set()
    var_1 = set()
    var_2 = set()
    str_0 = '!all'
    str_1 = [str_0]
    var_3 = module_0.get_collector_names(var_1, var_2, str_1)
    var_4 = set()
    var_5 = set()
    var_6 = set()
    str_2 = '!min'
    str_3 = [str_2]
    var_7 = module_0.get_collector_names(var_5, var_6, str_3)
    var_8 = set()
    var_9 = set()
    var_10 = set()
    str_4 = [str_0, str_2]
    var_11 = module_0.get_collector_names(var_9, var_10, str_4)
    str_5 = 'min'
    str_6 = {str_5}
    var_12 = set()
    str_7 = [str_0]
    var_13 = module_0.get_collector_names(str_6, var_12, str_7)
    str_8 = {str_5}
    var_14 = set()
    str_9 = [str_2]
    var_15 = module_0.get_collector_names(str_8, var_14, str_9)
    var_16 = set()
    str_10 = {str_5}
    var_17 = set()
    str_11 = [str_0, str_2]
    var_18 = module_0.get_collector_names(str_10, var_17, str_11)
    str_12 = {str_5}
    str_13 = {str_5}
    str_14 = [str_0]
    var_19 = module_0.get_collector_names(str_12, str_13, str_14)

def test_case_13():
    var_0 = set()
    var_1 = set()
    var_2 = set()
    str_0 = '!all'
    str_1 = [str_0]
    var_3 = module_0.get_collector_names(var_1, var_2, str_1)
    var_4 = set()
    var_5 = set()
    var_6 = set()
    str_2 = '!in'
    str_3 = [str_2]
    var_7 = module_0.get_collector_names(var_5, var_6, str_3)
    var_8 = set()
    var_9 = set()
    var_10 = set()
    str_4 = [str_0, str_2]
    var_11 = module_0.get_collector_names(var_9, var_10, str_4)
    str_5 = 'min'
    str_6 = {str_5}
    var_12 = set()
    str_7 = [str_0]
    var_13 = module_0.get_collector_names(str_6, var_12, str_7)
    str_8 = {str_5}
    var_14 = set()
    str_9 = [str_2]
    var_15 = module_0.get_collector_names(str_8, var_14, str_9)
    var_16 = set()
    str_10 = {str_5}
    var_17 = set()
    str_11 = [str_0, str_2]
    var_18 = module_0.get_collector_names(str_10, var_17, str_11)
    str_12 = {str_5}
    str_13 = {str_5}
    str_14 = [str_0]
    var_19 = module_0.get_collector_names(str_12, str_13, str_14)