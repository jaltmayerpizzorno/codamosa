# Automatically generated by Pynguin.
import ansible.plugins.filter.core as module_0
import glob as module_1

def test_case_0():
    pass

def test_case_1():
    str_0 = 'Lkdd}s'
    var_0 = module_0.strftime(str_0)
    var_1 = None
    str_1 = 'good'
    var_2 = module_0.ternary(var_1, str_1, str_1)

def test_case_2():
    str_0 = '/var/log/messages*'
    var_0 = module_0.fileglob(str_0)

def test_case_3():
    var_0 = module_0.regex_replace()

def test_case_4():
    str_0 = 'ptest string'
    var_0 = module_0.regex_search(str_0, str_0)

def test_case_5():
    var_0 = None
    str_0 = 'good'
    var_1 = module_0.ternary(var_0, str_0, str_0)
    var_2 = var_1 != str_0

def test_case_6():
    float_0 = 1188.55
    list_0 = [float_0]
    var_0 = module_0.regex_escape(list_0)

def test_case_7():
    bytes_0 = b'6|\xcaD\x8f\xcd18H\xf1\xac|'
    var_0 = module_0.from_yaml(bytes_0)

def test_case_8():
    float_0 = 2211.74
    bytes_0 = b'7[_'
    var_0 = module_0.rand(float_0, bytes_0)

def test_case_9():
    dict_0 = {}
    var_0 = module_0.randomize_list(dict_0)

def test_case_10():
    filter_module_0 = module_0.FilterModule()
    var_0 = module_0.to_uuid(filter_module_0)

def test_case_11():
    dict_0 = {}
    var_0 = module_0.mandatory(dict_0)

def test_case_12():
    var_0 = module_0.combine()

def test_case_13():
    int_0 = 1555
    var_0 = module_0.b64decode(int_0)

def test_case_14():
    str_0 = '\n'
    var_0 = module_0.flatten(str_0)

def test_case_15():
    filter_module_0 = module_0.FilterModule()
    str_0 = '\n'
    var_0 = module_0.flatten(str_0)
    var_1 = filter_module_0.filters()

def test_case_16():
    bool_0 = True
    int_0 = 2
    var_0 = module_0.ternary(bool_0, bool_0, int_0)
    bool_1 = False
    var_1 = module_0.ternary(bool_1, bool_0, int_0)
    var_2 = None
    int_1 = 3
    var_3 = module_0.ternary(var_2, bool_0, int_0, int_1)

def test_case_17():
    bool_0 = True
    int_0 = 2
    bool_1 = False
    var_0 = module_0.ternary(bool_1, bool_0, int_0)
    var_1 = None
    int_1 = 3
    var_2 = module_0.ternary(var_1, bool_0, int_0, int_1)

def test_case_18():
    str_0 = 'ptest string'
    var_0 = module_0.regex_search(str_0, str_0)
    int_0 = -14
    set_0 = {str_0}
    var_1 = module_0.randomize_list(str_0, set_0)
    bytes_0 = b'h\xc6x\x19<I\xf0\xd6\x9d\xa1\\k\x13@\xd7\xd3\x9f'
    bytes_1 = b'\x1a\xfd\xc1\xe5\x15v\xce\\x\xcf\xbb\x91\x99\x91\x0c\xfd\xb3\x04\x8dV'
    var_2 = module_0.from_yaml(bytes_1)
    list_0 = [int_0, str_0, bytes_0]
    var_3 = module_0.mandatory(list_0)

def test_case_19():
    int_0 = 1180
    var_0 = module_0.from_yaml_all(int_0)

def test_case_20():
    float_0 = 2426.0
    var_0 = module_0.to_bool(float_0)

def test_case_21():
    bool_0 = True
    var_0 = module_0.randomize_list(bool_0)

def test_case_22():
    dict_0 = None
    bytes_0 = b'\xb0\x8a;'
    int_0 = None
    var_0 = module_0.ternary(dict_0, bytes_0, int_0)
    var_1 = module_0.combine()
    bool_0 = False
    var_2 = module_0.mandatory(dict_0, bool_0)
    bytes_1 = b''
    var_3 = module_0.fileglob(bytes_1)
    str_0 = '56$0Y]G~\tQ'
    bool_1 = False
    var_4 = module_0.to_nice_yaml(bool_1)
    var_5 = module_0.combine()
    filter_module_0 = module_0.FilterModule()
    var_6 = module_0.path_join(str_0)

def test_case_23():
    dict_0 = None
    bytes_0 = b'\xb0\x8a;'
    int_0 = None
    var_0 = module_0.ternary(dict_0, bytes_0, int_0)
    var_1 = module_0.combine()
    list_0 = []
    var_2 = module_0.subelements(list_0, list_0)

def test_case_24():
    filter_module_0 = None
    set_0 = {filter_module_0, filter_module_0, filter_module_0, filter_module_0}
    str_0 = '[ f|n\n'
    list_0 = None
    var_0 = module_0.regex_escape(list_0)
    dict_0 = {str_0: filter_module_0}
    var_1 = module_0.flatten(set_0, dict_0)

def test_case_25():
    str_0 = "Fus@S]'"
    var_0 = module_0.to_bool(str_0)

def test_case_26():
    dict_0 = None
    bytes_0 = b'\xb0\x8a;'
    int_0 = None
    var_0 = module_0.ternary(dict_0, bytes_0, int_0)
    var_1 = module_0.combine()
    var_2 = module_0.from_yaml_all(int_0)
    tuple_0 = ()
    list_0 = []
    tuple_1 = (tuple_0, list_0, dict_0)
    var_3 = module_0.flatten(tuple_1)

def test_case_27():
    str_0 = 'Foo123'
    str_1 = '123'
    str_2 = '456'
    var_0 = module_0.regex_replace(str_0, str_1, str_2)
    bool_0 = True
    bool_1 = False
    var_1 = module_0.regex_replace(str_0, str_1, str_2, bool_0, bool_1)
    var_2 = module_0.regex_replace(str_0, str_1, str_2, bool_0, bool_0)
    var_3 = module_0.regex_replace(str_0, str_1, str_2, bool_1, bool_0)
    var_4 = module_0.regex_replace(str_0, str_1, str_2, bool_1, bool_1)

def test_case_28():
    filter_module_0 = module_0.FilterModule()
    int_0 = -2205
    list_0 = [int_0]
    var_0 = module_0.combine(*list_0)
    var_1 = filter_module_0.filters()

def test_case_29():
    str_0 = 'OU\rE`>,PZ1b;T6~"'
    var_0 = module_0.comment(str_0)

def test_case_30():
    bytes_0 = b'\x16d\x17\xe6\x06\x05'
    int_0 = -2964
    bool_0 = None
    var_0 = module_0.flatten(bytes_0, int_0, bool_0)

def test_case_31():
    str_0 = 'test (?P<str>string)'
    var_0 = module_0.regex_search(str_0, str_0)

def test_case_32():
    str_0 = 'foo.bar*baz?'
    var_0 = module_0.regex_escape(str_0)
    str_1 = 'posix_basic'
    var_1 = module_0.regex_escape(str_0, str_1)

def test_case_33():
    var_0 = module_0.combine()
    list_0 = [var_0, var_0]
    var_1 = module_0.combine(*list_0)

def test_case_34():
    str_0 = '*'
    var_0 = module_0.fileglob(str_0)
    var_1 = module_1.glob(str_0)

def test_case_35():
    str_0 = '/tmp/xyzzy'
    var_0 = module_0.fileglob(str_0)
    str_1 = '/etc/*-release'
    var_1 = module_0.fileglob(str_1)
    str_2 = '/dev'
    var_2 = module_0.fileglob(str_2)
    str_3 = '/dev/tty[0-9]*'
    var_3 = module_0.fileglob(str_3)
    var_4 = module_0.fileglob(str_2)

def test_case_36():
    str_0 = 'This is a text to comment'
    str_1 = ';'
    var_0 = module_0.comment(str_0)
    var_1 = module_0.comment(str_0)
    str_2 = 'cblock'
    str_3 = ' -'
    str_4 = '/*'
    var_2 = module_0.comment(str_0, str_2)