# Automatically generated by Pynguin.
import pymonet.lazy as module_0

def test_case_0():
    try:
        bytes_0 = b'\xe0\xc4\x88\xb4\x7f\xe1-\x90\x88\xb8#\xd9\xca}\x9f\xdfy'
        lazy_0 = module_0.Lazy(bytes_0)
        var_0 = lazy_0.get()
    except BaseException:
        pass

def test_case_1():
    try:
        tuple_0 = ()
        int_0 = -1491
        str_0 = '*Y:G7]/Ia-ek96n'
        callable_0 = None
        list_0 = [tuple_0]
        lazy_0 = module_0.Lazy(list_0)
        var_0 = lazy_0.map(callable_0)
        lazy_1 = module_0.Lazy(str_0)
        var_1 = lazy_1.ap(int_0)
        var_2 = lazy_1.to_box()
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b'\xcc\x95[\xab\x8c\x8e\xd7\xd3J\x96\xe7'
        list_0 = [bytes_0, bytes_0]
        lazy_0 = module_0.Lazy(list_0)
        var_0 = lazy_0.to_either()
    except BaseException:
        pass

def test_case_3():
    try:
        var_0 = lambda x: x
        lazy_0 = module_0.Lazy(var_0)
        bool_0 = lazy_0.__eq__(lazy_0)
        var_1 = lazy_0.to_maybe()
    except BaseException:
        pass

def test_case_4():
    try:
        callable_0 = None
        lazy_0 = module_0.Lazy(callable_0)
        var_0 = lazy_0.to_validation()
    except BaseException:
        pass

def test_case_5():
    try:
        var_0 = lambda x: x
        lazy_0 = module_0.Lazy(var_0)
        var_1 = lambda x: x
        lazy_1 = module_0.Lazy(var_1)
        bool_0 = lazy_0.__eq__(lazy_1)
        var_2 = lambda x: x
        lazy_2 = module_0.Lazy(var_2)
        int_0 = 0
        var_3 = lambda x: x + int_0
        lazy_3 = module_0.Lazy(var_3)
        var_4 = lambda x: x
        lazy_4 = module_0.Lazy(var_4)
        var_5 = lambda x, y: x
        lazy_5 = module_0.Lazy(var_5)
        list_0 = [lazy_0, var_1]
        var_6 = lazy_5.to_maybe(*list_0)
        bool_1 = lazy_4.__eq__(lazy_5)
        var_7 = lambda x: x
        lazy_6 = module_0.Lazy(var_7)
        var_8 = lambda y: y
        lazy_7 = module_0.Lazy(var_8)
        var_9 = lambda x: x
        var_10 = lambda y: y
        lazy_8 = module_0.Lazy(var_10)
        bool_2 = lazy_7.__eq__(lazy_8)
        var_11 = lambda x: x
        lazy_9 = module_0.Lazy(var_11)
        var_12 = lambda y: y
        lazy_10 = module_0.Lazy(var_12)
        var_13 = lazy_1.to_maybe()
    except BaseException:
        pass