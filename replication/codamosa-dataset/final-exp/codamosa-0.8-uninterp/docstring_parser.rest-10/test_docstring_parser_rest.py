# Automatically generated by Pynguin.
import docstring_parser.rest as module_0

def test_case_0():
    pass

def test_case_1():
    str_0 = '\n        Short description.\n\n        Long description.\n\n        :param arg1: arg1 description\n        :type arg1: int\n        :return: return description\n        :rtype: float'
    docstring_0 = module_0.parse(str_0)

def test_case_2():
    str_0 = "8aQ'4{R(I"
    docstring_0 = module_0.parse(str_0)

def test_case_3():
    str_0 = '\n\n    :param arg1: this is an argument.\n   :type arg1: int\n    :raises IOError: if an I/O error occurs.\n    :returns: this is whatis returned.\n    :rtypel int\n\n    '
    docstring_0 = module_0.parse(str_0)

def test_case_4():
    str_0 = None
    docstring_0 = module_0.parse(str_0)

def test_case_5():
    str_0 = '\n    Test function to check the parse function\n    :param a: int\n    :param b: int\n    :returns: int\n    '
    docstring_0 = module_0.parse(str_0)

def test_case_6():
    str_0 = '\n    test_parse_1 is a function for parse docstring.\n\n    :param str arg1: docstring\n    :param int arg2: docstring\n    :return: docstring\n    :rtype: str\n    '
    docstring_0 = module_0.parse(str_0)

def test_case_7():
    str_0 = '\n\n    :param arg1: this is an argument.\n    :type arg1: int\n    :raises IOError: if an I/O error occurs.\n    :returns: this is what is returned.\n    :rtype: int\n\n    '
    docstring_0 = module_0.parse(str_0)

def test_case_8():
    str_0 = 'Argument parsing.\n    \n    :parsm str x: The X coordinate.\n    :param int y: The Y coordinate, defaults to 2.\n    :param bool z: The Z coordinate, defaults to False.\n    :returns int: The sum of the coordinates.\n    :raises ValueError: If any coordinate is negative.\n    '
    docstring_0 = module_0.parse(str_0)

def test_case_9():
    str_0 = 'test parse'
    var_0 = print(str_0)
    str_1 = ':param str arg_name: Argument description.'
    docstring_0 = module_0.parse(str_1)
    docstring_1 = module_0.parse(str_1)
    docstring_2 = module_0.parse(str_1)
    docstring_3 = module_0.parse(str_1)
    docstring_4 = module_0.parse(str_1)
    docstring_5 = module_0.parse(str_1)
    str_2 = ':param str? arg_name: Argument description.'
    docstring_6 = module_0.parse(str_2)