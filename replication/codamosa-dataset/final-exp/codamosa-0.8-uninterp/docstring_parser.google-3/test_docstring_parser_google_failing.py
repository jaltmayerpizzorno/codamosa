# Automatically generated by Pynguin.
import docstring_parser.google as module_0

def test_case_0():
    try:
        str_0 = "}^V7.\\~.LQ('%OXBLc&?"
        list_0 = [str_0, str_0, str_0]
        section_0 = module_0.Section(*list_0)
        google_parser_0 = module_0.GoogleParser()
        var_0 = google_parser_0.add_section(section_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '4J{u?t9eOWP`n{\x0cuyy '
        docstring_0 = module_0.parse(str_0)
        str_1 = 'Warning'
        str_2 = None
        docstring_1 = module_0.parse(str_2)
        str_3 = 'H\x0bdoMO('
        dict_0 = {str_1: str_1, str_3: str_3, str_3: str_1}
        section_0 = module_0.Section(**dict_0)
    except BaseException:
        pass

def test_case_2():
    try:
        float_0 = None
        list_0 = [float_0, float_0, float_0, float_0]
        google_parser_0 = module_0.GoogleParser(list_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = None
        list_0 = []
        set_0 = set()
        google_parser_0 = module_0.GoogleParser(list_0, set_0)
        docstring_0 = module_0.parse(str_0)
        str_1 = 'F&hs<|q,hdQ?ZI-F'
        docstring_1 = module_0.parse(str_1)
        google_parser_1 = module_0.GoogleParser()
        docstring_2 = google_parser_1.parse(str_1)
        google_parser_2 = module_0.GoogleParser()
        section_0 = module_0.Section()
    except BaseException:
        pass

def test_case_4():
    try:
        int_0 = 0
        str_0 = '\n        This is a docstring for a method. It can span multiple lines.\n\n        Args:\n            param1 (T): Description of param1\n            param2 (T, optional): Description of param2\n            param3 (T): Description of param3\n        '
        docstring_0 = module_0.parse(str_0)
        var_0 = docstring_0.meta[int_0]
        str_1 = '\n        This is a docstring for a method. It can span multiple lines.\n\n        Args:\n        param1 (T): Description of param1\n        param2 (T, optional): Description of param2\n        param3 (T): Description of param3\n        '
        docstring_1 = module_0.parse(str_1)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'One line summary.\n\n    Extended description.\n\n    Two blank lines required at the end.\n\n    Args:\n        arg1: First argument.\n        arg2: Second argument.\n\n        A long description for the second argument.\n\n    Kwargs:\n        kwarg1: First keyword argument.\n        kwarg2: Second keyword argument.\n\n        A long description for the second keyword argument.\n\n    Returns:\n        One line summary.\n\n        A long description of the return value.\n    '
        docstring_0 = module_0.parse(str_0)
    except BaseException:
        pass