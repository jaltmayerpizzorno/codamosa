# Automatically generated by Pynguin.
import ansible.modules.systemd as module_0

def test_case_0():
    try:
        str_0 = 'UnitFileState=enabled\n'
        str_1 = 'ExecStart={ path=/usr/sbin/crond ; argv[=/usr/sbin/crond -n $CRONDARGS ; ignore_errors=no ; start_time=[n/a] ; stop_timef[n/a] ; pid=0 ; code=(null) ; status=0a0 }\n'
        str_2 = [str_1, str_0, str_0]
        var_0 = module_0.parse_systemctl_show(str_2)
        bool_0 = False
        var_1 = module_0.is_running_service(bool_0)
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = 381
        var_0 = module_0.is_deactivating_service(int_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'UnitFileState=enabem'
        var_0 = module_0.parse_systemctl_show(str_0)
        str_1 = 'ExecStart= path=/usr/sbin/crond ; argv[]=/usr/sbin/crond -n $CRONDARGS ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/] ; pid=0 ; code=(null) ; status=0/0 }\n'
        str_2 = [str_1, str_0, var_0]
        var_1 = module_0.parse_systemctl_show(str_2)
        int_0 = 4649
        var_2 = module_0.parse_systemctl_show(int_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'ExecStart={ path=/usr/sbincrond ; argv[]=/usr/sbin/crond -n $CRONDARGS ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ;\x0ccode=(null) ; status=0/0 2\n'
        int_0 = 4649
        set_0 = {int_0, int_0, str_0, int_0}
        var_0 = module_0.parse_systemctl_show(set_0)
    except BaseException:
        pass