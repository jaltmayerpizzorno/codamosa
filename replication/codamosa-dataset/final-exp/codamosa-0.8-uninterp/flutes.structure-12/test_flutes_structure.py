# Automatically generated by Pynguin.
import flutes.structure as module_0

def test_case_0():
    pass

def test_case_1():
    var_0 = None
    int_0 = 2388
    int_1 = 1986
    float_0 = 0.1
    var_1 = module_0.no_map_instance(float_0)
    dict_0 = {var_0: int_0, var_0: int_0, var_0: int_1}
    list_0 = module_0.reverse_map(dict_0)

def test_case_2():
    str_0 = 'Wkp'
    module_0.register_no_map_class(str_0)

def test_case_3():
    str_0 = '"uNXX`P@tbn'
    var_0 = module_0.no_map_instance(str_0)

def test_case_4():
    list_0 = []
    var_0 = module_0.map_structure(list_0, list_0)

def test_case_5():
    int_0 = 1
    int_1 = 2
    int_2 = 3
    int_3 = 4
    int_4 = [int_0, int_1, int_2, int_3]
    int_5 = 5
    int_6 = 7
    int_7 = [int_2, int_3, int_5, int_6]
    int_8 = 6
    int_9 = 8
    int_10 = 10
    int_11 = [int_5, int_8, int_9, int_10]
    int_12 = [int_4, int_7, int_11]
    var_0 = lambda x, y, z: x + y + z
    var_1 = module_0.map_structure_zip(var_0, int_12)
    var_2 = print(var_1)

def test_case_6():
    int_0 = 1
    int_1 = 2
    str_0 = 'a'
    var_0 = [int_0, int_1, str_0]
    var_1 = module_0.no_map_instance(var_0)
    var_2 = module_0.no_map_instance(var_1)
    var_3 = lambda x: x + int_0
    var_4 = lambda x, y: x + y
    var_5 = [var_1, var_1]
    var_6 = module_0.map_structure_zip(var_4, var_5)

def test_case_7():
    var_0 = lambda *xs: tuple(xs)
    int_0 = 1
    int_1 = 2
    int_2 = [int_0, int_1]
    int_3 = 3
    int_4 = 4
    int_5 = [int_3, int_4]
    int_6 = {int_0: int_2, int_1: int_5}
    int_7 = 5
    int_8 = 6
    int_9 = [int_7, int_8]
    int_10 = 7
    int_11 = 8
    int_12 = [int_10, int_11]
    int_13 = {int_0: int_9, int_1: int_12}
    int_14 = [int_6, int_13]
    var_1 = module_0.map_structure_zip(var_0, int_14)
    var_2 = print(var_1)