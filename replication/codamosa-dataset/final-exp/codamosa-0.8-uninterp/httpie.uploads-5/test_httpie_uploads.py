# Automatically generated by Pynguin.
import httpie.uploads as module_0
import requests_toolbelt.multipart.encoder as module_1
import httpie.cli.dicts as module_2
import requests.models as module_3
import typing as module_4

def test_case_0():
    pass

def test_case_1():
    str_0 = ''
    list_0 = [str_0, str_0]
    chunked_upload_stream_0 = module_0.ChunkedUploadStream(str_0, list_0)
    iterable_0 = chunked_upload_stream_0.__iter__()

def test_case_2():
    str_0 = None
    str_1 = '"}P)'
    str_2 = '/'
    dict_0 = {str_0: str_0, str_1: str_1, str_2: str_0}
    multipart_encoder_0 = module_1.MultipartEncoder(dict_0, dict_0)
    chunked_multipart_upload_stream_0 = module_0.ChunkedMultipartUploadStream(multipart_encoder_0)
    iterable_0 = chunked_multipart_upload_stream_0.__iter__()

def test_case_3():
    request_data_dict_0 = module_2.RequestDataDict()
    bytes_0 = b'/\x004\xf7\x8e1\x9bZ\x1eP\xa9\xe1\xe9'
    var_0 = module_0.prepare_request_body(request_data_dict_0, request_data_dict_0, bytes_0)

def test_case_4():
    str_0 = ''
    dict_0 = {str_0: str_0, str_0: str_0}
    multipart_request_data_dict_0 = module_2.MultipartRequestDataDict()
    multipart_encoder_0 = module_1.MultipartEncoder(dict_0, multipart_request_data_dict_0)
    callable_0 = None
    var_0 = module_0.prepare_request_body(multipart_encoder_0, callable_0)

def test_case_5():
    multipart_request_data_dict_0 = module_2.MultipartRequestDataDict()
    str_0 = 'h )\\2xx%][a~if+'
    tuple_0 = module_0.get_multipart_data_and_content_type(multipart_request_data_dict_0, str_0)

def test_case_6():
    multipart_request_data_dict_0 = module_2.MultipartRequestDataDict()
    dict_0 = {}
    chunked_upload_stream_0 = module_0.ChunkedUploadStream(multipart_request_data_dict_0, dict_0)
    iterable_0 = chunked_upload_stream_0.__iter__()
    list_0 = []
    multipart_encoder_0 = module_1.MultipartEncoder(iterable_0, list_0)
    chunked_multipart_upload_stream_0 = module_0.ChunkedMultipartUploadStream(multipart_encoder_0)
    tuple_0 = module_0.get_multipart_data_and_content_type(multipart_request_data_dict_0, chunked_multipart_upload_stream_0)

def test_case_7():
    multipart_request_data_dict_0 = module_2.MultipartRequestDataDict()
    str_0 = '3HpdAQ.r*^.D9S%qC$V'
    tuple_0 = module_0.get_multipart_data_and_content_type(multipart_request_data_dict_0, str_0, str_0)

def test_case_8():
    str_0 = 'id'
    str_1 = ''
    str_2 = {str_0: str_1}
    var_0 = None
    bool_0 = True
    var_1 = module_0.prepare_request_body(str_2, var_0, var_0, bool_0, bool_0)

def test_case_9():
    str_0 = '--style'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    multipart_request_data_dict_0 = module_2.MultipartRequestDataDict(**dict_0)
    tuple_0 = module_0.get_multipart_data_and_content_type(multipart_request_data_dict_0, str_0)
    iterable_0 = None
    str_1 = '\rrH/qv7H\x0ci=L2qV1Wqp,'
    tuple_1 = module_0.get_multipart_data_and_content_type(multipart_request_data_dict_0, str_1, str_0)
    prepared_request_0 = module_3.PreparedRequest()
    str_2 = 'solarized'
    chunked_upload_stream_0 = module_0.ChunkedUploadStream(iterable_0, str_2)
    set_0 = {prepared_request_0, iterable_0, tuple_0}
    chunked_upload_stream_1 = module_0.ChunkedUploadStream(iterable_0, set_0)
    callable_0 = None
    i_o_0 = module_4.IO()
    var_0 = i_o_0.readline()
    var_1 = module_0.prepare_request_body(str_0, callable_0, var_0, multipart_request_data_dict_0)
    callable_1 = None
    chunked_upload_stream_2 = module_0.ChunkedUploadStream(iterable_0, callable_1)
    int_0 = 40
    bytes_0 = b'~'
    var_2 = module_0.prepare_request_body(i_o_0, callable_0, int_0, bytes_0, int_0)

def test_case_10():
    dict_0 = {}
    multipart_encoder_0 = module_1.MultipartEncoder(dict_0)
    chunked_multipart_upload_stream_0 = module_0.ChunkedMultipartUploadStream(multipart_encoder_0)
    callable_0 = None
    i_o_0 = module_4.IO()
    var_0 = i_o_0.__enter__()
    str_0 = '@By'
    tuple_0 = (multipart_encoder_0, str_0)
    var_1 = module_0.prepare_request_body(multipart_encoder_0, callable_0, var_0, tuple_0)

def test_case_11():
    var_0 = {}
    multipart_encoder_0 = module_1.MultipartEncoder(var_0)
    chunked_multipart_upload_stream_0 = module_0.ChunkedMultipartUploadStream(multipart_encoder_0)
    var_1 = list(chunked_multipart_upload_stream_0)
    var_2 = len(var_1)
    var_3 = list(chunked_multipart_upload_stream_0)
    var_4 = len(var_3)