# Automatically generated by Pynguin.
import ansible.vars.reserved as module_0

def test_case_0():
    try:
        dict_0 = {}
        bytes_0 = b'\xebz\x8c|\x80i\x8cU\x98\x0cMo'
        var_0 = module_0.is_reserved_name(bytes_0)
        var_1 = module_0.get_reserved_names(dict_0)
        float_0 = 0.5
        var_2 = module_0.warn_if_reserved(float_0)
    except BaseException:
        pass

def test_case_1():
    try:
        var_0 = module_0.get_reserved_names()
        int_0 = -2025
        list_0 = [int_0]
        var_1 = module_0.warn_if_reserved(int_0, list_0)
    except BaseException:
        pass

def test_case_2():
    try:
        int_0 = 149
        var_0 = module_0.is_reserved_name(int_0)
        var_1 = module_0.get_reserved_names()
        bytes_0 = b'\xef=\x88k'
        str_0 = '9e'
        var_2 = module_0.warn_if_reserved(str_0)
        list_0 = [bytes_0, var_1]
        var_3 = module_0.is_reserved_name(list_0)
    except BaseException:
        pass

def test_case_3():
    try:
        int_0 = None
        var_0 = module_0.warn_if_reserved(int_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'L"8A\r"NHq3yPFqn&Q7'
        set_0 = {str_0, str_0}
        var_0 = module_0.warn_if_reserved(set_0, set_0)
        tuple_0 = None
        float_0 = -945.8
        var_1 = module_0.is_reserved_name(float_0)
        set_1 = {tuple_0, tuple_0}
        var_2 = module_0.is_reserved_name(set_1)
        str_1 = '}>i\x0b9AE2J[+TQxWRA'
        var_3 = module_0.warn_if_reserved(str_1)
        var_4 = module_0.get_reserved_names()
        dict_0 = {}
        var_5 = module_0.is_reserved_name(dict_0)
    except BaseException:
        pass