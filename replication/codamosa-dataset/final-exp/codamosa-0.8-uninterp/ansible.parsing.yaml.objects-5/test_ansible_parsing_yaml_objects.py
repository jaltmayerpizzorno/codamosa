# Automatically generated by Pynguin.
import ansible.parsing.yaml.objects as module_0

def test_case_0():
    pass

def test_case_1():
    ansible_base_y_a_m_l_object_0 = module_0.AnsibleBaseYAMLObject()
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(ansible_base_y_a_m_l_object_0)

def test_case_2():
    str_0 = '?On>nj{X`[0j|Mk&8'
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(str_0)
    var_0 = ansible_vault_encrypted_unicode_0.isalpha()

def test_case_3():
    str_0 = '}/{C9Iz'
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(str_0)
    var_0 = ansible_vault_encrypted_unicode_0.__eq__(ansible_vault_encrypted_unicode_0)

def test_case_4():
    ansible_base_y_a_m_l_object_0 = module_0.AnsibleBaseYAMLObject()
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(ansible_base_y_a_m_l_object_0)
    var_0 = ansible_vault_encrypted_unicode_0.__reversed__()

def test_case_5():
    str_0 = 'secret'
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(str_0)
    ansible_vault_encrypted_unicode_1 = module_0.AnsibleVaultEncryptedUnicode(ansible_vault_encrypted_unicode_0)

def test_case_6():
    ansible_base_y_a_m_l_object_0 = module_0.AnsibleBaseYAMLObject()
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(ansible_base_y_a_m_l_object_0)
    var_0 = ansible_vault_encrypted_unicode_0.__unicode__()

def test_case_7():
    tuple_0 = ()
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(tuple_0)
    var_0 = ansible_vault_encrypted_unicode_0.__repr__()

def test_case_8():
    bool_0 = False
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(bool_0)

def test_case_9():
    str_0 = 'abc'
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(str_0)
    str_1 = 'abd'
    ansible_vault_encrypted_unicode_1 = module_0.AnsibleVaultEncryptedUnicode(str_1)
    ansible_vault_encrypted_unicode_2 = module_0.AnsibleVaultEncryptedUnicode(str_0)
    var_0 = ansible_vault_encrypted_unicode_0 < ansible_vault_encrypted_unicode_2

def test_case_10():
    str_0 = '?Jl1@o&=\n8%K^X:><[Fn'
    str_1 = '\n    Provides information about a OS distribution.\n\n    This package creates a private module-global instance of this class with\n    default initialization arguments, that is used by the\n    `consolidated accessor functions`_ and `single source accessor functions`_.\n    By using default initialization arguments, that module-global instance\n    returns data about the current OS distribution (i.e. the distro this\n    package runs on).\n\n    Normally, it is not necessary to create additional instances of this class.\n    However, in situations where control is needed over the exact data sources\n    that are used, instances of this class can be created with a specific\n    distro release file, or a specific os-release file, or without invoking the\n    lsb_release command.\n    '
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(str_1)
    ansible_vault_encrypted_unicode_1 = module_0.AnsibleVaultEncryptedUnicode(ansible_vault_encrypted_unicode_0)
    var_0 = ansible_vault_encrypted_unicode_1.__le__(str_0)

def test_case_11():
    str_0 = 'Parrot'
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(str_0)
    var_0 = ansible_vault_encrypted_unicode_0.__contains__(ansible_vault_encrypted_unicode_0)

def test_case_12():
    int_0 = True
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(int_0)
    var_0 = ansible_vault_encrypted_unicode_0.__len__()

def test_case_13():
    bool_0 = True
    str_0 = 'Manage the integration between Galaxy and the given source.'
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(str_0)
    var_0 = ansible_vault_encrypted_unicode_0.__add__(bool_0)

def test_case_14():
    str_0 = 'O/l6F1T!Te}i,\n/UVK\x0b'
    tuple_0 = None
    float_0 = -2518.0
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(float_0)
    var_0 = ansible_vault_encrypted_unicode_0.__len__()
    var_1 = ansible_vault_encrypted_unicode_0.__radd__(tuple_0)
    dict_0 = {str_0: tuple_0, str_0: tuple_0}
    ansible_vault_encrypted_unicode_1 = module_0.AnsibleVaultEncryptedUnicode(dict_0)
    var_2 = ansible_vault_encrypted_unicode_1.isnumeric()

def test_case_15():
    ansible_base_y_a_m_l_object_0 = module_0.AnsibleBaseYAMLObject()
    tuple_0 = (ansible_base_y_a_m_l_object_0,)
    set_0 = {tuple_0}
    int_0 = -1083
    ansible_unicode_0 = module_0.AnsibleUnicode()
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(int_0)
    ansible_vault_encrypted_unicode_1 = module_0.AnsibleVaultEncryptedUnicode(ansible_vault_encrypted_unicode_0)
    var_0 = ansible_vault_encrypted_unicode_1.upper()
    ansible_vault_encrypted_unicode_2 = module_0.AnsibleVaultEncryptedUnicode(set_0)
    var_1 = ansible_vault_encrypted_unicode_2.title()
    var_2 = ansible_vault_encrypted_unicode_0.isnumeric()
    list_0 = [var_2]
    var_3 = ansible_vault_encrypted_unicode_0.__rmod__(list_0)

def test_case_16():
    ansible_base_y_a_m_l_object_0 = module_0.AnsibleBaseYAMLObject()
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(ansible_base_y_a_m_l_object_0)
    var_0 = ansible_vault_encrypted_unicode_0.capitalize()
    var_1 = ansible_vault_encrypted_unicode_0.__eq__(ansible_vault_encrypted_unicode_0)

def test_case_17():
    ansible_unicode_0 = module_0.AnsibleUnicode()
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(ansible_unicode_0)
    var_0 = ansible_vault_encrypted_unicode_0.casefold()

def test_case_18():
    int_0 = -2075
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(int_0)
    var_0 = ansible_vault_encrypted_unicode_0.expandtabs()

def test_case_19():
    str_0 = 'd#uTa\x0c*O&,'
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(str_0)
    var_0 = ansible_vault_encrypted_unicode_0.find(ansible_vault_encrypted_unicode_0)

def test_case_20():
    ansible_sequence_0 = module_0.AnsibleSequence()
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(ansible_sequence_0)
    var_0 = ansible_vault_encrypted_unicode_0.isalnum()

def test_case_21():
    dict_0 = {}
    ansible_sequence_0 = module_0.AnsibleSequence(**dict_0)
    ansible_base_y_a_m_l_object_0 = module_0.AnsibleBaseYAMLObject()
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(ansible_base_y_a_m_l_object_0)
    var_0 = ansible_vault_encrypted_unicode_0.isascii()
    var_1 = ansible_vault_encrypted_unicode_0.__add__(ansible_sequence_0)

def test_case_22():
    str_0 = '}+~n\x0b9U^'
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(str_0)
    var_0 = ansible_vault_encrypted_unicode_0.isdigit()

def test_case_23():
    str_0 = 'jaYu& ugM"-Vm&^yBO'
    dict_0 = {str_0: str_0, str_0: str_0}
    ansible_unicode_0 = module_0.AnsibleUnicode()
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(ansible_unicode_0)
    var_0 = ansible_vault_encrypted_unicode_0.__len__()
    ansible_vault_encrypted_unicode_1 = module_0.AnsibleVaultEncryptedUnicode(dict_0)
    var_1 = ansible_vault_encrypted_unicode_1.islower()

def test_case_24():
    str_0 = 'RE\n,6\x0c]2IA.5a%9zIdAB'
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(str_0)
    var_0 = ansible_vault_encrypted_unicode_0.isnumeric()

def test_case_25():
    ansible_sequence_0 = module_0.AnsibleSequence()
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(ansible_sequence_0)
    var_0 = ansible_vault_encrypted_unicode_0.isprintable()

def test_case_26():
    ansible_base_y_a_m_l_object_0 = module_0.AnsibleBaseYAMLObject()
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(ansible_base_y_a_m_l_object_0)
    var_0 = ansible_vault_encrypted_unicode_0.capitalize()
    bytes_0 = b''
    var_1 = ansible_vault_encrypted_unicode_0.isupper()
    var_2 = ansible_vault_encrypted_unicode_0.__add__(bytes_0)
    var_3 = ansible_vault_encrypted_unicode_0.__eq__(ansible_vault_encrypted_unicode_0)

def test_case_27():
    ansible_base_y_a_m_l_object_0 = None
    bool_0 = False
    list_0 = [bool_0, bool_0, ansible_base_y_a_m_l_object_0]
    tuple_0 = (bool_0, list_0)
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(tuple_0)
    var_0 = ansible_vault_encrypted_unicode_0.lstrip()
    str_0 = 'Ezp] ;Q<'
    ansible_vault_encrypted_unicode_1 = module_0.AnsibleVaultEncryptedUnicode(str_0)
    bytes_0 = b'\xfc+\xa9\xaaIN\x8f'
    ansible_vault_encrypted_unicode_2 = module_0.AnsibleVaultEncryptedUnicode(list_0)
    var_1 = ansible_vault_encrypted_unicode_2.isdigit()
    ansible_vault_encrypted_unicode_3 = module_0.AnsibleVaultEncryptedUnicode(bytes_0)
    var_2 = ansible_vault_encrypted_unicode_3.isdecimal()
    var_3 = ansible_vault_encrypted_unicode_3.swapcase()
    list_1 = [ansible_base_y_a_m_l_object_0, ansible_base_y_a_m_l_object_0, ansible_base_y_a_m_l_object_0]
    ansible_vault_encrypted_unicode_4 = module_0.AnsibleVaultEncryptedUnicode(list_1)
    var_4 = ansible_vault_encrypted_unicode_4.isalpha()

def test_case_28():
    tuple_0 = None
    float_0 = -2517.553086483846
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(float_0)
    var_0 = ansible_vault_encrypted_unicode_0.__len__()
    var_1 = ansible_vault_encrypted_unicode_0.__radd__(tuple_0)
    bytes_0 = b'\xde'
    var_2 = ansible_vault_encrypted_unicode_0.__eq__(bytes_0)
    float_1 = None
    ansible_vault_encrypted_unicode_1 = module_0.AnsibleVaultEncryptedUnicode(float_1)
    int_0 = -3165
    var_3 = ansible_vault_encrypted_unicode_0.rjust(int_0)

def test_case_29():
    ansible_unicode_0 = module_0.AnsibleUnicode()
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(ansible_unicode_0)
    var_0 = ansible_vault_encrypted_unicode_0.splitlines()
    var_1 = ansible_vault_encrypted_unicode_0.__hash__()
    str_0 = 'further limit selected hosts to an additional pattern'
    dict_0 = {}
    ansible_vault_encrypted_unicode_1 = module_0.AnsibleVaultEncryptedUnicode(dict_0)
    var_2 = ansible_vault_encrypted_unicode_0.count(str_0)
    str_1 = '|ZZ_8P>W'
    var_3 = ansible_vault_encrypted_unicode_0.rpartition(str_1)
    var_4 = ansible_vault_encrypted_unicode_1.isalnum()
    var_5 = ansible_vault_encrypted_unicode_1.__hash__()
    var_6 = ansible_vault_encrypted_unicode_1.isdecimal()
    var_7 = ansible_vault_encrypted_unicode_1.strip()

def test_case_30():
    bool_0 = False
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(bool_0)
    var_0 = ansible_vault_encrypted_unicode_0.title()

def test_case_31():
    list_0 = []
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(list_0)
    var_0 = ansible_vault_encrypted_unicode_0.upper()

def test_case_32():
    dict_0 = {}
    ansible_sequence_0 = module_0.AnsibleSequence(**dict_0)
    ansible_base_y_a_m_l_object_0 = module_0.AnsibleBaseYAMLObject()
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(ansible_base_y_a_m_l_object_0)
    var_0 = ansible_vault_encrypted_unicode_0.isascii()
    str_0 = '-=]C*F\r<S/#d4`AOtBXm'
    var_1 = ansible_vault_encrypted_unicode_0.__add__(str_0)

def test_case_33():
    int_0 = 2501
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(int_0)
    var_0 = ansible_vault_encrypted_unicode_0.isdecimal()

def test_case_34():
    bytes_0 = b'vK\xaa +\xa65]\xf4\xfbG\xf5(\xef\xbcP'
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(bytes_0)
    var_0 = ansible_vault_encrypted_unicode_0.isspace()
    list_0 = [ansible_vault_encrypted_unicode_0, ansible_vault_encrypted_unicode_0]
    ansible_vault_encrypted_unicode_1 = module_0.AnsibleVaultEncryptedUnicode(list_0)
    var_1 = ansible_vault_encrypted_unicode_1.title()
    ansible_unicode_0 = None
    var_2 = ansible_vault_encrypted_unicode_1.__eq__(ansible_unicode_0)

def test_case_35():
    bytes_0 = b'\x1e\x0e\xf7Q{\x08\x95\x8f\xaac!@\x018\x88`c.\x9e'
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(bytes_0)
    var_0 = ansible_vault_encrypted_unicode_0.rstrip()

def test_case_36():
    ansible_base_y_a_m_l_object_0 = module_0.AnsibleBaseYAMLObject()
    str_0 = 'Parrot'
    str_1 = '"8;2@'
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(str_1)
    str_2 = 'o7w5\\v%\x0chPl+E'
    ansible_vault_encrypted_unicode_1 = module_0.AnsibleVaultEncryptedUnicode(str_2)
    var_0 = ansible_vault_encrypted_unicode_1.__contains__(str_0)
    var_1 = ansible_vault_encrypted_unicode_1.isprintable()
    complex_0 = None
    var_2 = ansible_vault_encrypted_unicode_0.__add__(complex_0)

def test_case_37():
    ansible_unicode_0 = module_0.AnsibleUnicode()
    float_0 = -238.2758
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(float_0)
    var_0 = ansible_vault_encrypted_unicode_0.rfind(ansible_unicode_0)

def test_case_38():
    str_0 = '}/{C9Iz'
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(str_0)
    var_0 = ansible_vault_encrypted_unicode_0.is_encrypted()

def test_case_39():
    set_0 = set()
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(set_0)
    var_0 = ansible_vault_encrypted_unicode_0.rsplit()

def test_case_40():
    int_0 = 2385
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(int_0)
    var_0 = ansible_vault_encrypted_unicode_0.isidentifier()

def test_case_41():
    tuple_0 = None
    float_0 = -2517.553086483846
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(float_0)
    var_0 = ansible_vault_encrypted_unicode_0.is_encrypted()
    var_1 = ansible_vault_encrypted_unicode_0.__len__()
    var_2 = ansible_vault_encrypted_unicode_0.__radd__(tuple_0)
    bytes_0 = b'\xde'
    var_3 = ansible_vault_encrypted_unicode_0.__eq__(bytes_0)
    float_1 = None
    str_0 = '   '
    var_4 = ansible_vault_encrypted_unicode_0.__add__(str_0)
    ansible_vault_encrypted_unicode_1 = module_0.AnsibleVaultEncryptedUnicode(float_1)
    int_0 = 2301
    ansible_mapping_0 = module_0.AnsibleMapping()
    int_1 = -856
    var_5 = ansible_vault_encrypted_unicode_0.__getslice__(int_1, int_0)
    ansible_vault_encrypted_unicode_2 = module_0.AnsibleVaultEncryptedUnicode(ansible_mapping_0)
    var_6 = ansible_vault_encrypted_unicode_0.isalpha()

def test_case_42():
    str_0 = ''
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(str_0)
    var_0 = ansible_vault_encrypted_unicode_0.__ne__(str_0)

def test_case_43():
    str_0 = 'aaaaa'
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(str_0)
    ansible_vault_encrypted_unicode_1 = module_0.AnsibleVaultEncryptedUnicode(str_0)
    str_1 = 'aaaab'
    ansible_vault_encrypted_unicode_2 = module_0.AnsibleVaultEncryptedUnicode(str_1)
    var_0 = ansible_vault_encrypted_unicode_0 <= ansible_vault_encrypted_unicode_2

def test_case_44():
    str_0 = 'This is secret'
    dict_0 = {str_0: str_0}
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(dict_0)
    dict_1 = {str_0: str_0, str_0: str_0}
    ansible_vault_encrypted_unicode_1 = module_0.AnsibleVaultEncryptedUnicode(dict_1)
    var_0 = ansible_vault_encrypted_unicode_1.count(ansible_vault_encrypted_unicode_0)

def test_case_45():
    str_0 = 'password'
    bool_0 = False
    bool_1 = False
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(bool_1)
    dict_0 = {str_0: bool_0}
    ansible_vault_encrypted_unicode_1 = module_0.AnsibleVaultEncryptedUnicode(dict_0)
    var_0 = ansible_vault_encrypted_unicode_1.__gt__(ansible_vault_encrypted_unicode_0)