# Automatically generated by Pynguin.
import ansible.utils.native_jinja as module_0
import ansible.utils.unsafe_proxy as module_1

def test_case_0():
    pass

def test_case_1():
    bytes_0 = b';2\x19\x11\xdaE]\xf9\x132\xb1G\xa9\x02\x92\x1ee[**'
    native_jinja_text_0 = module_0.NativeJinjaText()
    set_0 = {bytes_0, bytes_0, native_jinja_text_0}
    var_0 = module_1.wrap_var(set_0)

def test_case_2():
    bytes_0 = b'\xa5\x9dI\x888]u\x12\xc0\xf3R\x0c\x0ey\x07?_\xc8\xb3W'
    var_0 = module_1.wrap_var(bytes_0)

def test_case_3():
    int_0 = 679
    var_0 = module_1.wrap_var(int_0)

def test_case_4():
    str_0 = 'Deprecation warnings can be disabled by setting deprecation_warnings=False in ansible.cfg.'
    str_1 = 'bUtK&Qw\tS&S+'
    str_2 = "N6`o8'Dl_"
    ansible_unsafe_0 = module_1.AnsibleUnsafe()
    var_0 = module_1.wrap_var(ansible_unsafe_0)
    ansible_unsafe_text_0 = module_1.AnsibleUnsafeText()
    var_1 = ansible_unsafe_text_0.encode()
    dict_0 = {str_0: str_0, str_2: str_0, str_1: str_1}
    int_0 = -1794
    var_2 = module_1.wrap_var(int_0)
    var_3 = module_1.wrap_var(dict_0)

def test_case_5():
    str_0 = '$@Jd{dj=TNFG*.-:Y!'
    var_0 = module_1.wrap_var(str_0)

def test_case_6():
    native_jinja_text_0 = module_0.NativeJinjaText()
    var_0 = module_1.wrap_var(native_jinja_text_0)