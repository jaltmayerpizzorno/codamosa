# Automatically generated by Pynguin.
import tornado.util as module_0
import builtins as module_1

def test_case_0():
    try:
        object_dict_0 = module_0.ObjectDict()
        var_0 = object_dict_0.bar
    except BaseException:
        pass

def test_case_1():
    try:
        gzip_decompressor_0 = module_0.GzipDecompressor()
        str_0 = 'tornado.missing_module'
        any_0 = module_0.import_object(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = None
        gzip_decompressor_0 = module_0.GzipDecompressor()
        bytes_1 = gzip_decompressor_0.decompress(bytes_0)
    except BaseException:
        pass

def test_case_3():
    try:
        gzip_decompressor_0 = module_0.GzipDecompressor()
        bytes_0 = gzip_decompressor_0.flush()
        str_0 = 'tornado.missing_module'
        any_0 = module_0.import_object(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        timeout_error_0 = module_0.TimeoutError()
        str_0 = 'X1=^a&wpd,\rLr)n'
        any_0 = module_0.import_object(str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'tornado.missing_module'
        any_0 = module_0.import_object(str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        var_0 = module_0.doctests()
        list_0 = []
        str_0 = 'MtXU'
        dict_0 = {str_0: str_0}
        module_0.exec_in(list_0, dict_0)
    except BaseException:
        pass

def test_case_7():
    try:
        gzip_decompressor_0 = module_0.GzipDecompressor()
        bytes_0 = gzip_decompressor_0.flush()
        bytes_1 = gzip_decompressor_0.flush()
        str_0 = '=(Txh* D+'
        dict_0 = None
        optional_0 = None
        module_0.exec_in(str_0, dict_0, optional_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = 'wD=/@(2%PQYO4'
        base_exception_0 = module_1.BaseException()
        optional_0 = module_0.errno_from_exception(base_exception_0)
        var_0 = module_0.raise_exc_info(str_0)
    except BaseException:
        pass

def test_case_9():
    try:
        bytes_0 = b'\xd8\xd5\xc3\x91LY?\x99q'
        sequence_0 = None
        str_0 = '4jpZ'
        dict_0 = {str_0: str_0, str_0: bytes_0}
        tuple_0 = (bytes_0, sequence_0, dict_0)
        var_0 = module_0.raise_exc_info(tuple_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = '[Ls#SKl'
        str_1 = module_0.re_unescape(str_0)
        str_2 = 'tornado.missing_module'
        any_0 = module_0.import_object(str_2)
    except BaseException:
        pass

def test_case_11():
    try:
        var_0 = module_0.doctests()
        configurable_0 = module_0.Configurable()
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = 'z}d\x0co\x0bvH{[]g]`%/M'
        arg_replacer_0 = module_0.ArgReplacer(str_0, str_0)
    except BaseException:
        pass

def test_case_13():
    try:
        object_dict_0 = module_0.ObjectDict()
        var_0 = module_0.timedelta_to_seconds(object_dict_0)
    except BaseException:
        pass

def test_case_14():
    try:
        str_0 = 'tornado.missing_module'
        var_0 = module_0.doctests()
        any_0 = module_0.import_object(str_0)
    except BaseException:
        pass

def test_case_15():
    try:
        str_0 = 'E\\KAK=6edW{0p;X.f?B'
        str_1 = module_0.re_unescape(str_0)
    except BaseException:
        pass

def test_case_16():
    try:
        str_0 = '~*{"("AX\x0b4\t-]!@X5U'
        object_dict_0 = module_0.ObjectDict()
        object_dict_0.__setattr__(str_0, str_0)
        str_1 = 'tornado.missing_module'
        any_0 = module_0.import_object(str_1)
    except BaseException:
        pass

def test_case_17():
    try:
        var_0 = None
        var_1 = lambda arg1, arg2, arg3=3: var_0
        str_0 = 'arg2'
        arg_replacer_0 = module_0.ArgReplacer(var_1, str_0)
        int_0 = 2
        set_0 = {int_0, var_0}
        dict_0 = {}
        any_0 = arg_replacer_0.get_old_value(set_0, dict_0)
    except BaseException:
        pass

def test_case_18():
    try:
        str_0 = 'a'
        str_1 = 'b'
        str_2 = [str_1, str_0, str_1, str_0, str_1]
        var_0 = None
        var_1 = lambda arg1, arg2, arg3=3: var_0
        arg_replacer_0 = module_0.ArgReplacer(var_1, str_2)
        int_0 = 2
        set_0 = {int_0, var_0}
        dict_0 = {}
        any_0 = arg_replacer_0.get_old_value(set_0, dict_0)
    except BaseException:
        pass

def test_case_19():
    try:
        str_0 = 'cdA'
        int_0 = 3
        var_0 = lambda arg1, arg2, arg3=3: int_0
        str_1 = 'arg2'
        arg_replacer_0 = module_0.ArgReplacer(var_0, str_1)
        timeout_error_0 = module_0.TimeoutError()
        set_0 = {timeout_error_0, str_0}
        dict_0 = {str_0: str_1, str_0: timeout_error_0}
        tuple_0 = arg_replacer_0.replace(var_0, set_0, dict_0)
    except BaseException:
        pass

def test_case_20():
    try:
        str_0 = 'J\x0cjCBuzI-%j+G?e6:}eS'
        int_0 = 24
        var_0 = lambda arg1, arg2, arg3=3: int_0
        str_1 = 'arg2'
        arg_replacer_0 = module_0.ArgReplacer(var_0, str_1)
        timeout_error_0 = module_0.TimeoutError()
        set_0 = set()
        dict_0 = {str_0: int_0, str_0: str_1, str_0: timeout_error_0}
        tuple_0 = arg_replacer_0.replace(var_0, set_0, dict_0)
        int_1 = 2
        set_1 = {int_1, arg_replacer_0}
        dict_1 = {}
        any_0 = arg_replacer_0.get_old_value(set_1, dict_1)
    except BaseException:
        pass

def test_case_21():
    try:
        str_0 = 't,-oyV\\<y'
        str_1 = module_0.re_unescape(str_0)
        str_2 = '-s_lB?]r\x0cr\\28o5&3'
        any_0 = module_0.import_object(str_2)
    except BaseException:
        pass