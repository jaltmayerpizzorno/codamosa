# Automatically generated by Pynguin.
import ansible.plugins.callback.junit as module_0

def test_case_0():
    try:
        bytes_0 = b'\x9ed'
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_on_failed(bytes_0)
    except BaseException:
        pass

def test_case_1():
    try:
        tuple_0 = None
        list_0 = [tuple_0, tuple_0, tuple_0]
        list_1 = [list_0, tuple_0, list_0]
        list_2 = [list_1]
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_on_no_hosts(list_2)
    except BaseException:
        pass

def test_case_2():
    try:
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_on_skipped(callback_module_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '({D'
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_start(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = '@[:nV'
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_play_start(str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        int_0 = 743
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_stats(int_0)
        set_0 = set()
        var_1 = callback_module_0.v2_playbook_on_task_start(callback_module_0, set_0)
    except BaseException:
        pass

def test_case_6():
    try:
        callback_module_0 = None
        set_0 = {callback_module_0}
        callback_module_1 = module_0.CallbackModule()
        var_0 = callback_module_1.v2_playbook_on_cleanup_task_start(set_0)
    except BaseException:
        pass

def test_case_7():
    try:
        float_0 = -1006.12515
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_handler_task_start(float_0)
    except BaseException:
        pass

def test_case_8():
    try:
        tuple_0 = ()
        list_0 = [tuple_0, tuple_0]
        dict_0 = {tuple_0: tuple_0, tuple_0: list_0}
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_on_failed(tuple_0, dict_0)
    except BaseException:
        pass

def test_case_9():
    try:
        task_data_0 = None
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_on_failed(task_data_0)
    except BaseException:
        pass

def test_case_10():
    try:
        callback_module_0 = module_0.CallbackModule()
        str_0 = '`@#Jk0VToN'
        var_0 = callback_module_0.v2_playbook_on_stats(str_0)
        callback_module_1 = module_0.CallbackModule()
        dict_0 = {}
        complex_0 = None
        bool_0 = False
        float_0 = None
        host_data_0 = module_0.HostData(dict_0, complex_0, bool_0, float_0)
        var_1 = callback_module_0.v2_runner_on_ok(host_data_0)
    except BaseException:
        pass

def test_case_11():
    try:
        int_0 = -990
        str_0 = ' # DD$Er'
        tuple_0 = (int_0, str_0)
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_include(tuple_0)
    except BaseException:
        pass

def test_case_12():
    try:
        int_0 = 0
        str_0 = 'play'
        str_1 = 'action'
        task_data_0 = module_0.TaskData(int_0, str_1, str_0, str_0, str_1)
        host_data_0 = module_0.HostData(str_1, str_0, str_1, str_1)
        var_0 = task_data_0.add_host(host_data_0)
        var_1 = task_data_0.add_host(host_data_0)
    except BaseException:
        pass