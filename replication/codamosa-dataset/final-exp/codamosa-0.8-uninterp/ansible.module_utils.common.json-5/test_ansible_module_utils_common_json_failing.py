# Automatically generated by Pynguin.
import ansible.module_utils.common.json as module_0

def test_case_0():
    try:
        str_0 = 'Malformed output discovered from systemd list-unit-files: {0}'
        ansible_j_s_o_n_encoder_0 = module_0.AnsibleJSONEncoder()
        float_0 = -2624.88
        str_1 = ''
        ansible_j_s_o_n_encoder_1 = module_0.AnsibleJSONEncoder(ansible_j_s_o_n_encoder_0, str_1)
        var_0 = ansible_j_s_o_n_encoder_1.iterencode(str_0)
        set_0 = set()
        float_1 = -2246.3194
        str_2 = 'Ui0Y}$Gg".q_6fAZ-$'
        bytes_0 = b'L\xecY'
        str_3 = 'IBa3m0<|UPMkcNTpOY'
        dict_0 = {str_2: bytes_0, str_1: float_0, str_3: set_0, str_1: str_1}
        tuple_0 = (ansible_j_s_o_n_encoder_0, float_1, dict_0)
        var_1 = ansible_j_s_o_n_encoder_1.iterencode(tuple_0)
        list_0 = []
        list_1 = [list_0]
        ansible_j_s_o_n_encoder_2 = module_0.AnsibleJSONEncoder(list_1)
        int_0 = 168
        ansible_j_s_o_n_encoder_3 = module_0.AnsibleJSONEncoder(int_0, list_0, **dict_0)
    except BaseException:
        pass

def test_case_1():
    try:
        ansible_j_s_o_n_encoder_0 = module_0.AnsibleJSONEncoder()
        str_0 = None
        dict_0 = {str_0: str_0}
        str_1 = 'Dwn\n9jrG#\\nu.8'
        ansible_j_s_o_n_encoder_1 = module_0.AnsibleJSONEncoder()
        ansible_j_s_o_n_encoder_2 = module_0.AnsibleJSONEncoder(str_1, str_1)
        dict_1 = {ansible_j_s_o_n_encoder_1: ansible_j_s_o_n_encoder_2, str_1: ansible_j_s_o_n_encoder_1}
        ansible_j_s_o_n_encoder_3 = module_0.AnsibleJSONEncoder(dict_1)
        var_0 = ansible_j_s_o_n_encoder_2.iterencode(dict_0)
        ansible_j_s_o_n_encoder_4 = module_0.AnsibleJSONEncoder()
        list_0 = []
        var_1 = ansible_j_s_o_n_encoder_2.default(list_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '4EqTp>LB((y0*M'
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
        dict_1 = {}
        ansible_j_s_o_n_encoder_0 = module_0.AnsibleJSONEncoder(**dict_1)
        var_0 = ansible_j_s_o_n_encoder_0.default(dict_0)
    except BaseException:
        pass

def test_case_3():
    try:
        ansible_j_s_o_n_encoder_0 = module_0.AnsibleJSONEncoder()
        var_0 = ansible_j_s_o_n_encoder_0.default(ansible_j_s_o_n_encoder_0)
    except BaseException:
        pass

def test_case_4():
    try:
        ansible_j_s_o_n_encoder_0 = module_0.AnsibleJSONEncoder()
        var_0 = ansible_j_s_o_n_encoder_0.encode(ansible_j_s_o_n_encoder_0)
    except BaseException:
        pass