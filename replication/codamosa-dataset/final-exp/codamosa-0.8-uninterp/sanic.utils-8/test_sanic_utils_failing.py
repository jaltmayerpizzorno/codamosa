# Automatically generated by Pynguin.
import sanic.utils as module_0
import pathlib as module_1

def test_case_0():
    try:
        str_0 = '\n        Writes data with backpressure control.\n        '
        bool_0 = module_0.str_to_bool(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'h"a_/fc'
        var_0 = module_0.load_module_from_file_location(str_0, str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'CKK+=^q\n;'
        var_0 = module_0.load_module_from_file_location(str_0, str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'b\xe6\xce"\xec\xb5\x1a\xe7k\xc4\x13\xc8\xb9\x8c'
        str_0 = '='
        var_0 = module_0.load_module_from_file_location(bytes_0, str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'temp_file.py'
        var_0 = module_0.load_module_from_file_location(str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        path_0 = module_1.Path()
        var_0 = module_0.load_module_from_file_location(path_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = ':hSA\n",=z0$cug$'
        var_0 = module_0.load_module_from_file_location(str_0, str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = '${TEST_CONFIG_FILE_LOCATION}'
        var_0 = module_0.load_module_from_file_location(str_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = '/home/leonardo/PycharmProjects/sanic-toolkit/sanic_toolkit/tools/config_examples/test.py'
        var_0 = module_0.load_module_from_file_location(str_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = '/some/path/fil/${HOME}'
        var_0 = module_0.load_module_from_file_location(str_0)
    except BaseException:
        pass