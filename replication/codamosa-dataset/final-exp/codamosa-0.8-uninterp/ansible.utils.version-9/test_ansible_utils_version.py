# Automatically generated by Pynguin.
import ansible.utils.version as module_0
import ansible.module_utils.compat.version as module_1

def test_case_0():
    pass

def test_case_1():
    bool_0 = False
    alpha_0 = module_0._Alpha(bool_0)
    var_0 = alpha_0.__gt__(alpha_0)

def test_case_2():
    bool_0 = True
    numeric_0 = module_0._Numeric(bool_0)

def test_case_3():
    semantic_version_0 = module_0.SemanticVersion()
    float_0 = 0.2
    numeric_0 = module_0._Numeric(float_0)
    alpha_0 = module_0._Alpha(semantic_version_0)
    str_0 = 'b2'
    var_0 = numeric_0.__eq__(str_0)
    var_1 = alpha_0.__gt__(numeric_0)
    var_2 = semantic_version_0.__le__(semantic_version_0)

def test_case_4():
    int_0 = 232
    bool_0 = True
    numeric_0 = module_0._Numeric(bool_0)
    var_0 = numeric_0.__ge__(int_0)

def test_case_5():
    semantic_version_0 = module_0.SemanticVersion()
    float_0 = 0.2
    numeric_0 = module_0._Numeric(float_0)
    alpha_0 = module_0._Alpha(semantic_version_0)
    var_0 = alpha_0.__ge__(numeric_0)
    str_0 = 'r'
    var_1 = numeric_0.__eq__(str_0)
    var_2 = semantic_version_0.__repr__()
    var_3 = alpha_0.__gt__(numeric_0)
    var_4 = semantic_version_0.__le__(semantic_version_0)
    var_5 = numeric_0.__le__(numeric_0)

def test_case_6():
    bool_0 = False
    float_0 = -2772.0
    numeric_0 = module_0._Numeric(float_0)
    var_0 = numeric_0.__gt__(bool_0)

def test_case_7():
    semantic_version_0 = module_0.SemanticVersion()

def test_case_8():
    str_0 = '1.2.3-preelease+buildmeadata'
    semantic_version_0 = module_0.SemanticVersion(str_0)
    var_0 = tuple()

def test_case_9():
    semantic_version_0 = module_0.SemanticVersion()
    alpha_0 = module_0._Alpha(semantic_version_0)
    var_0 = semantic_version_0.__repr__()
    var_1 = semantic_version_0.__le__(semantic_version_0)

def test_case_10():
    semantic_version_0 = module_0.SemanticVersion()
    var_0 = semantic_version_0.__le__(semantic_version_0)

def test_case_11():
    str_0 = ''
    semantic_version_0 = module_0.SemanticVersion()
    var_0 = semantic_version_0.__eq__(str_0)

def test_case_12():
    str_0 = '\x0cwp,'
    str_1 = '<FT'
    alpha_0 = module_0._Alpha(str_1)
    var_0 = alpha_0.__le__(str_0)

def test_case_13():
    semantic_version_0 = module_0.SemanticVersion()
    float_0 = 0.7307200472090276
    numeric_0 = module_0._Numeric(float_0)
    alpha_0 = module_0._Alpha(semantic_version_0)
    var_0 = alpha_0.__ge__(numeric_0)
    str_0 = 'r'
    var_1 = numeric_0.__eq__(str_0)
    var_2 = alpha_0.__gt__(numeric_0)
    var_3 = semantic_version_0.__le__(semantic_version_0)

def test_case_14():
    semantic_version_0 = module_0.SemanticVersion()
    float_0 = 0.2
    numeric_0 = module_0._Numeric(float_0)
    alpha_0 = module_0._Alpha(semantic_version_0)
    var_0 = alpha_0.__ge__(numeric_0)
    str_0 = 'b2'
    var_1 = numeric_0.__eq__(str_0)
    var_2 = semantic_version_0.__repr__()
    var_3 = alpha_0.__gt__(numeric_0)
    var_4 = semantic_version_0.__le__(semantic_version_0)
    tuple_0 = ()
    alpha_1 = module_0._Alpha(tuple_0)
    var_5 = numeric_0.__repr__()

def test_case_15():
    str_0 = '1.2.3'
    loose_version_0 = module_1.LooseVersion(str_0)
    semantic_version_0 = module_0.SemanticVersion(str_0)
    str_1 = '1.2.3-alpha'
    loose_version_1 = module_1.LooseVersion(str_1)
    semantic_version_1 = module_0.SemanticVersion(str_1)
    str_2 = '1.2.3+20200101'
    loose_version_2 = module_1.LooseVersion(str_2)
    semantic_version_2 = module_0.SemanticVersion(str_2)

def test_case_16():
    str_0 = '1'
    alpha_0 = module_0._Alpha(str_0)
    alpha_1 = module_0._Alpha(str_0)
    str_1 = '2'
    alpha_2 = module_0._Alpha(str_1)
    alpha_3 = module_0._Alpha(str_0)
    var_0 = alpha_2 <= alpha_3
    alpha_4 = module_0._Alpha(str_0)
    alpha_5 = module_0._Alpha(str_1)
    var_1 = alpha_4 <= alpha_5
    alpha_6 = module_0._Alpha(str_0)
    str_2 = '1.1'
    alpha_7 = module_0._Alpha(str_2)
    var_2 = alpha_6 <= alpha_7
    alpha_8 = module_0._Alpha(str_0)
    str_3 = '1.0'
    alpha_9 = module_0._Alpha(str_3)
    alpha_10 = module_0._Alpha(str_3)
    alpha_11 = module_0._Alpha(str_0)
    var_3 = alpha_10 <= alpha_11
    alpha_12 = module_0._Alpha(str_3)
    alpha_13 = module_0._Alpha(str_3)