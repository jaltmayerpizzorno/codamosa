# Automatically generated by Pynguin.
import cookiecutter.replay as module_0

def test_case_0():
    try:
        str_0 = './tests/fake-repo-pre/'
        var_0 = module_0.load(str_0, str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '--replay-file'
        set_0 = {str_0, str_0, str_0, str_0}
        bool_0 = False
        var_0 = module_0.dump(str_0, set_0, bool_0)
    except BaseException:
        pass

def test_case_2():
    try:
        int_0 = 3264
        bytes_0 = b'w'
        var_0 = module_0.dump(int_0, int_0, bytes_0)
    except BaseException:
        pass

def test_case_3():
    try:
        int_0 = -1343
        dict_0 = {int_0: int_0, int_0: int_0}
        bool_0 = True
        var_0 = module_0.load(dict_0, bool_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = ''
        set_0 = {str_0, str_0, str_0, str_0}
        bool_0 = False
        int_0 = -723
        list_0 = [set_0, bool_0, int_0]
        str_1 = "Q}p*f0IX'(u2"
        var_0 = module_0.dump(str_0, list_0, str_1)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'I8hfVq~v'
        int_0 = 676
        var_0 = module_0.dump(str_0, str_0, int_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'hookiecutter'
        str_1 = 'full_name'
        str_2 = 'robi@rbi.cm'
        str_3 = {str_1: str_0, str_0: str_2}
        str_4 = {str_0: str_3}
        var_0 = module_0.dump(str_1, str_1, str_4)
    except BaseException:
        pass