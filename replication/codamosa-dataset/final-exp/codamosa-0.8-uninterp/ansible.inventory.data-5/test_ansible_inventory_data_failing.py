# Automatically generated by Pynguin.
import ansible.inventory.data as module_0

def test_case_0():
    try:
        inventory_data_0 = module_0.InventoryData()
        var_0 = inventory_data_0.get_groups_dict()
        inventory_data_1 = module_0.InventoryData()
        bool_0 = False
        var_1 = inventory_data_0.deserialize(bool_0)
    except BaseException:
        pass

def test_case_1():
    try:
        inventory_data_0 = module_0.InventoryData()
        str_0 = 'test_host'
        var_0 = inventory_data_0.add_host(str_0)
        str_1 = 'ungrouped'
        var_1 = inventory_data_0.groups[str_1]
        var_2 = inventory_data_0.hosts[str_0]
        var_3 = inventory_data_0.remove_host(var_2)
        bool_0 = True
        var_4 = inventory_data_0.add_group(bool_0)
    except BaseException:
        pass

def test_case_2():
    try:
        tuple_0 = ()
        inventory_data_0 = module_0.InventoryData()
        var_0 = inventory_data_0.add_group(tuple_0)
    except BaseException:
        pass

def test_case_3():
    try:
        inventory_data_0 = module_0.InventoryData()
        str_0 = 'localhost'
        var_0 = inventory_data_0.add_host(str_0)
        var_1 = inventory_data_0.add_host(str_0)
        str_1 = 'anotherHost'
        dict_0 = {str_1: var_1, var_1: var_1, str_1: str_1, var_0: var_1}
        list_0 = [dict_0, inventory_data_0, str_0]
        var_2 = inventory_data_0.add_host(list_0)
    except BaseException:
        pass

def test_case_4():
    try:
        inventory_data_0 = module_0.InventoryData()
        bool_0 = False
        bytes_0 = b'}'
        var_0 = inventory_data_0.set_variable(bool_0, bool_0, bytes_0)
    except BaseException:
        pass

def test_case_5():
    try:
        inventory_data_0 = module_0.InventoryData()
        var_0 = inventory_data_0.reconcile_inventory()
        inventory_data_1 = module_0.InventoryData()
        inventory_data_2 = module_0.InventoryData()
        bool_0 = None
        var_1 = inventory_data_1.add_child(inventory_data_2, bool_0)
    except BaseException:
        pass

def test_case_6():
    try:
        inventory_data_0 = module_0.InventoryData()
        var_0 = inventory_data_0.get_groups_dict()
        var_1 = inventory_data_0.get_groups_dict()
        int_0 = -2785
        set_0 = {int_0}
        var_2 = inventory_data_0.deserialize(set_0)
    except BaseException:
        pass

def test_case_7():
    try:
        inventory_data_0 = module_0.InventoryData()
        var_0 = inventory_data_0.serialize()
        inventory_data_1 = module_0.InventoryData()
        bool_0 = False
        var_1 = inventory_data_1.add_host(bool_0)
    except BaseException:
        pass

def test_case_8():
    try:
        inventory_data_0 = module_0.InventoryData()
        inventory_data_1 = module_0.InventoryData()
        inventory_data_2 = module_0.InventoryData()
        str_0 = '*HOe1r'
        inventory_data_3 = module_0.InventoryData()
        var_0 = inventory_data_3.remove_group(str_0)
        var_1 = inventory_data_2.add_host(str_0)
        var_2 = inventory_data_1.add_host(str_0, inventory_data_3)
    except BaseException:
        pass

def test_case_9():
    try:
        inventory_data_0 = module_0.InventoryData()
        str_0 = 'localhost'
        var_0 = inventory_data_0.add_host(str_0)
        str_1 = 'localhost1'
        var_1 = inventory_data_0.add_host(str_1)
        str_2 = 'anotherHost'
        var_2 = inventory_data_0.add_host(str_2)
        dict_0 = {str_0: var_0, var_2: var_2, var_1: var_2}
        var_3 = inventory_data_0.deserialize(dict_0)
        var_4 = inventory_data_0.hosts
        var_5 = len(var_4)
    except BaseException:
        pass

def test_case_10():
    try:
        inventory_data_0 = module_0.InventoryData()
        str_0 = 'testgroup1'
        var_0 = inventory_data_0.add_group(str_0)
        str_1 = 'test1'
        var_1 = inventory_data_0.add_child(str_0, str_1)
    except BaseException:
        pass