# Automatically generated by Pynguin.
import ansible.inventory.group as module_0
import ansible.module_utils.common.text.converters as module_1

def test_case_0():
    try:
        group_0 = module_0.Group()
        var_0 = group_0.__repr__()
        set_0 = None
        dict_0 = {group_0: set_0, set_0: var_0}
        var_1 = group_0.__setstate__(dict_0)
        var_2 = group_0.__getstate__()
        list_0 = [var_0]
        var_3 = group_0.deserialize(list_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = "P'\x0bNAvLcdh~"
        group_0 = module_0.Group(str_0)
        str_1 = '\x0cV?-i)?;\x0b,+O{!h'
        group_1 = module_0.Group()
        var_0 = group_1.__str__()
        var_1 = group_1.__setstate__(str_1)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'uGGv0=(G4n"'
        dict_0 = {str_0: str_0}
        group_0 = module_0.Group()
        var_0 = group_0.__setstate__(dict_0)
        group_1 = module_0.Group()
        var_1 = group_1.add_child_group(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = None
        group_0 = module_0.Group()
        var_0 = group_0.add_child_group(bytes_0)
    except BaseException:
        pass

def test_case_4():
    try:
        bool_0 = False
        group_0 = module_0.Group()
        var_0 = group_0.add_host(bool_0)
    except BaseException:
        pass

def test_case_5():
    try:
        list_0 = []
        str_0 = 'G(Xw$\rE'
        tuple_0 = (list_0, str_0)
        str_1 = '+N)uos+'
        group_0 = module_0.Group()
        var_0 = group_0.set_variable(tuple_0, str_1)
    except BaseException:
        pass

def test_case_6():
    try:
        group_0 = module_0.Group()
        var_0 = group_0.serialize()
        bytes_0 = b'\xc5r\xddB\x94\xa9\xf8'
        var_1 = group_0.set_priority(bytes_0)
    except BaseException:
        pass

def test_case_7():
    try:
        group_0 = module_0.Group()
        var_0 = group_0.get_vars()
        str_0 = 'r:g'
        dict_0 = {str_0: group_0}
        var_1 = group_0.set_priority(dict_0)
        var_2 = group_0.clear_hosts_cache()
        var_3 = group_0.__getstate__()
        var_4 = group_0.get_vars()
        var_5 = group_0.clear_hosts_cache()
        bool_0 = False
        group_1 = module_0.Group(bool_0)
        var_6 = group_1.get_vars()
        dict_1 = None
        var_7 = group_0.__setstate__(dict_1)
    except BaseException:
        pass

def test_case_8():
    try:
        group_0 = module_0.Group()
        group_1 = module_0.Group()
        var_0 = group_1.add_host(group_0)
    except BaseException:
        pass

def test_case_9():
    try:
        group_0 = module_0.Group()
        var_0 = group_0.add_child_group(group_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = 'af4gxH9S1oJ>bRNw9bcw'
        str_1 = 'RHEV'
        group_0 = module_0.Group(str_1)
        dict_0 = {str_0: str_0, str_0: str_0}
        group_1 = module_0.Group()
        var_0 = group_1.__setstate__(dict_0)
        var_1 = group_1.remove_host(str_0)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = 'g3'
        str_1 = 'g2'
        group_0 = module_0.Group(str_1)
        str_2 = 'k2'
        str_3 = 'v2'
        var_0 = group_0.set_variable(str_2, str_3)
        group_1 = module_0.Group(str_0)
        str_4 = 'v1'
        var_1 = group_1.set_variable(str_0, str_4)
        var_2 = group_1.add_child_group(group_0)
        var_3 = group_0.add_child_group(group_1)
    except BaseException:
        pass

def test_case_12():
    try:
        group_0 = module_0.Group()
        str_0 = 'Test set a variable successfully'
        var_0 = print(str_0)
        str_1 = "Test set variable 'ansible_group_priority' failure"
        var_1 = print(str_1)
        str_2 = 'ansible_group_priority'
        str_3 = 'test'
        var_2 = group_0.set_variable(str_2, str_3)
    except BaseException:
        pass

def test_case_13():
    try:
        group_0 = module_0.Group()
        var_0 = group_0.get_hosts()
        str_0 = 'pV_zf"4'
        var_1 = group_0.__repr__()
        int_0 = 1690
        var_2 = module_0.to_safe_group_name(str_0, int_0, str_0)
    except BaseException:
        pass

def test_case_14():
    try:
        str_0 = 'foo bar'
        var_0 = module_0.to_safe_group_name(str_0)
        str_1 = 'foo,bar'
        var_1 = module_0.to_safe_group_name(str_1)
        str_2 = 'A2\x0bqvSdmzu}l'
        var_2 = module_0.to_safe_group_name(str_2)
        str_3 = 'test_var'
        var_3 = module_1.to_text(str_3)
        str_4 = '"/kJ<=OvbkV+p?7c'
        str_5 = "=v|2'Cgx\x0cYQJ7j\t^~F8"
        bool_0 = True
        var_4 = module_0.to_safe_group_name(str_4, str_5, bool_0)
        float_0 = -3640.2
        var_5 = module_0.to_safe_group_name(float_0)
    except BaseException:
        pass