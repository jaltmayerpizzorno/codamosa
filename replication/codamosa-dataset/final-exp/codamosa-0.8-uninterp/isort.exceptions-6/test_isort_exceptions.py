# Automatically generated by Pynguin.
import isort.exceptions as module_0
import pathlib as module_1

def test_case_0():
    i_sort_error_0 = module_0.ISortError()

def test_case_1():
    str_0 = '--combine-as'
    invalid_settings_path_0 = module_0.InvalidSettingsPath(str_0)
    dict_0 = {}
    unsupported_settings_0 = module_0.UnsupportedSettings(dict_0)
    str_1 = ':after'
    invalid_settings_path_1 = module_0.InvalidSettingsPath(str_1)

def test_case_2():
    str_0 = 'builtins'
    existing_syntax_errors_0 = module_0.ExistingSyntaxErrors(str_0)

def test_case_3():
    str_0 = 'vr'
    str_1 = '|i3V*B.]'
    file_skip_setting_0 = module_0.FileSkipSetting(str_1)
    dict_0 = {}
    unsupported_settings_0 = module_0.UnsupportedSettings(dict_0)
    file_skipped_0 = module_0.FileSkipped(str_0, str_1)

def test_case_4():
    i_sort_error_0 = module_0.ISortError()
    str_0 = '--unique'
    file_skip_comment_0 = module_0.FileSkipComment(str_0)
    str_1 = 'W&aD8O-W'
    invalid_settings_path_0 = module_0.InvalidSettingsPath(str_1)
    str_2 = '~@)vnfmFKCqh1D7m#7f'
    introduced_syntax_errors_0 = module_0.IntroducedSyntaxErrors(str_2)
    file_skip_comment_1 = module_0.FileSkipComment(str_2)
    str_3 = "V<')%lEdPmm"
    str_4 = 'S\t@^CW\x0c%WQMUTY!'
    assignments_format_mismatch_0 = module_0.AssignmentsFormatMismatch(str_3)
    file_skipped_0 = module_0.FileSkipped(str_3, str_4)
    str_5 = '$B'
    assignments_format_mismatch_1 = module_0.AssignmentsFormatMismatch(str_5)

def test_case_5():
    path_0 = module_1.Path()
    unsupported_encoding_0 = module_0.UnsupportedEncoding(path_0)
    i_sort_error_0 = module_0.ISortError()
    str_0 = ';dMJF8mk^LJ2l47'
    str_1 = '@X>Zm$qv:Gh\x0b'
    file_skipped_0 = module_0.FileSkipped(str_1, str_0)
    introduced_syntax_errors_0 = module_0.IntroducedSyntaxErrors(str_0)
    str_2 = 'KRN3#u.C/\\:NR$Jf{.l'
    file_skip_setting_0 = module_0.FileSkipSetting(str_2)

def test_case_6():
    str_0 = '\nFile contains the standard library of Python 2.7.\n\nDO NOT EDIT. If the standard library changes, a new list should be created\nusing the mkstdlibs.py script.\n'
    introduced_syntax_errors_0 = module_0.IntroducedSyntaxErrors(str_0)
    str_1 = 'NE'
    missing_section_0 = module_0.MissingSection(str_1, str_1)
    str_2 = '\nk$"`OUs07d\x0c0T\r'
    profile_does_not_exist_0 = module_0.ProfileDoesNotExist(str_2)

def test_case_7():
    str_0 = 'option1'
    str_1 = 'value'
    str_2 = 'source'
    int_0 = 0
    str_3 = 'test'
    var_0 = {str_1: int_0, str_2: str_3}
    var_1 = {str_0: var_0}
    unsupported_settings_0 = module_0.UnsupportedSettings(var_1)