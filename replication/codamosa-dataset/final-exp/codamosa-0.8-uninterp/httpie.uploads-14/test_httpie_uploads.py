# Automatically generated by Pynguin.
import httpie.uploads as module_0
import httpie.cli.dicts as module_1
import requests_toolbelt.multipart.encoder as module_2
import typing as module_3
import requests.models as module_4

def test_case_0():
    pass

def test_case_1():
    iterable_0 = None
    callable_0 = None
    chunked_upload_stream_0 = module_0.ChunkedUploadStream(iterable_0, callable_0)

def test_case_2():
    str_0 = 'F;oYwN^'
    dict_0 = {str_0: str_0}
    request_data_dict_0 = module_1.RequestDataDict(**dict_0)
    list_0 = []
    multipart_request_data_dict_0 = module_1.MultipartRequestDataDict(*list_0)
    multipart_encoder_0 = module_2.MultipartEncoder(request_data_dict_0, multipart_request_data_dict_0)
    tuple_0 = (multipart_encoder_0, str_0)
    var_0 = module_0.prepare_request_body(multipart_encoder_0, tuple_0)

def test_case_3():
    multipart_request_data_dict_0 = module_1.MultipartRequestDataDict()
    optional_0 = None
    tuple_0 = module_0.get_multipart_data_and_content_type(multipart_request_data_dict_0, optional_0)
    bytes_0 = b'\xec\xfeH\x00.\xc8\xa6\xdd\xdc\x81o\x08 \x8e\xf73\xc7H'
    set_0 = None
    var_0 = module_0.prepare_request_body(bytes_0, set_0)
    list_0 = [multipart_request_data_dict_0, optional_0]
    chunked_upload_stream_0 = module_0.ChunkedUploadStream(bytes_0, list_0)
    iterable_0 = chunked_upload_stream_0.__iter__()

def test_case_4():
    multipart_request_data_dict_0 = module_1.MultipartRequestDataDict()
    tuple_0 = module_0.get_multipart_data_and_content_type(multipart_request_data_dict_0)

def test_case_5():
    str_0 = '123'
    str_1 = '456'
    str_2 = [str_0, str_1]
    var_0 = lambda x: x
    chunked_upload_stream_0 = module_0.ChunkedUploadStream(str_2, var_0)
    iterable_0 = chunked_upload_stream_0.__iter__()
    var_1 = next(iterable_0)
    iterable_1 = chunked_upload_stream_0.__iter__()
    var_2 = next(iterable_1)

def test_case_6():
    bytes_0 = b'{1, \x8f\x81\x1ea\xe0jk\x8cH\xf5\xc9b\xa8\xea\x1f\x88'
    multipart_request_data_dict_0 = module_1.MultipartRequestDataDict()
    dict_0 = {}
    list_0 = [multipart_request_data_dict_0, multipart_request_data_dict_0, dict_0, bytes_0]
    chunked_upload_stream_0 = module_0.ChunkedUploadStream(dict_0, list_0)
    iterable_0 = chunked_upload_stream_0.__iter__()
    tuple_0 = module_0.get_multipart_data_and_content_type(multipart_request_data_dict_0)
    str_0 = 'GVlXZSZ|BzpCEdPM\tQy'
    var_0 = module_0.prepare_request_body(bytes_0, list_0, str_0)
    int_0 = 300
    i_o_0 = module_3.IO()
    var_1 = i_o_0.readline(int_0)
    multipart_encoder_0 = module_2.MultipartEncoder(chunked_upload_stream_0)
    chunked_multipart_upload_stream_0 = module_0.ChunkedMultipartUploadStream(multipart_encoder_0)
    prepared_request_0 = module_4.PreparedRequest()

def test_case_7():
    bytes_0 = b'{1, \x8f\x81\x1ea\xe0jk\x8cH\xf5\xc9b\xa8\xea\x1f\x88'
    multipart_request_data_dict_0 = module_1.MultipartRequestDataDict()
    dict_0 = {}
    list_0 = [multipart_request_data_dict_0, multipart_request_data_dict_0, dict_0, bytes_0, bytes_0, dict_0]
    chunked_upload_stream_0 = module_0.ChunkedUploadStream(dict_0, list_0)
    tuple_0 = module_0.get_multipart_data_and_content_type(multipart_request_data_dict_0)
    tuple_1 = module_0.get_multipart_data_and_content_type(multipart_request_data_dict_0)
    iterable_0 = chunked_upload_stream_0.__iter__()
    i_o_0 = module_3.IO()
    multipart_encoder_0 = module_2.MultipartEncoder(chunked_upload_stream_0)
    chunked_multipart_upload_stream_0 = module_0.ChunkedMultipartUploadStream(multipart_encoder_0)
    callable_0 = None
    var_0 = module_0.prepare_request_body(multipart_encoder_0, callable_0)
    int_0 = 2879
    var_1 = module_0.prepare_request_body(multipart_encoder_0, callable_0, int_0, iterable_0)

def test_case_8():
    multipart_request_data_dict_0 = module_1.MultipartRequestDataDict()
    str_0 = 'GVlXZSZ|BzpCEdPM\tQy'
    str_1 = None
    tuple_0 = module_0.get_multipart_data_and_content_type(multipart_request_data_dict_0, str_1, str_0)