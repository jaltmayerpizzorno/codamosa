# Automatically generated by Pynguin.
import tornado.locale as module_0
import datetime as module_1
import gettext as module_2

def test_case_0():
    try:
        str_0 = None
        module_0.load_translations(str_0, str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'Test load_translations'
        var_0 = print(str_0)
        str_1 = '.'
        str_2 = 'utf-8'
        module_0.load_translations(str_1, str_2)
        str_3 = 'locale: %s, extension: %s'
        var_1 = str_3 % none_type_0
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = None
        str_1 = "{FYU3BD@'^O^<\n"
        module_0.load_gettext_translations(str_0, str_1)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'Content-Type'
        locale_0 = module_0.Locale(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        bytes_0 = b'\x03\x12\x81+\x9e\xd4_\xbe:\x07\x9d\xda'
        locale_0 = module_0.get()
        str_0 = locale_0.list(bytes_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = "cannot unescape '\\\\%s'"
        dict_0 = {str_0: str_0}
        int_0 = 999
        locale_0 = module_0.get()
        str_1 = locale_0.friendly_number(int_0)
        datetime_0 = module_1.datetime(**dict_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = '{G'
        dict_0 = {str_0: str_0}
        int_0 = 999
        locale_0 = module_0.get()
        str_1 = locale_0.friendly_number(int_0)
        datetime_0 = module_1.datetime(**dict_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'IOStream is not idle; cannot convert to SSL'
        module_0.set_default_locale(str_0)
        str_1 = 'https://api.twitter.com/oauth/authorize'
        str_2 = 'Gfel,I~\r%H'
        str_3 = 'd%Ru=?)wdOsbT#z'
        str_4 = ''
        dict_0 = {str_0: str_0, str_2: str_0, str_3: str_4}
        dict_1 = {str_1: dict_0}
        c_s_v_locale_0 = module_0.CSVLocale(str_1, dict_1)
        str_5 = c_s_v_locale_0.translate(str_0, str_0)
    except BaseException:
        pass

def test_case_8():
    try:
        locale_0 = module_0.get()
        str_0 = ' G8Bg@4aR^a@['
        str_1 = "#*Mn:|PfdB'p)uvMG"
        str_2 = 'x'
        str_3 = 'b9^hG.r}sAjLW(\t/? #'
        null_translations_0 = module_2.NullTranslations()
        gettext_locale_0 = module_0.GettextLocale(str_3, null_translations_0)
        str_4 = gettext_locale_0.pgettext(str_0, str_1, str_2)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = '3lelJlcM1'
        module_0.set_default_locale(str_0)
        int_0 = 185
        str_1 = 'v\x0cDa\\~'
        str_2 = 'P80"#;>QiJtbH"_GHF'
        list_0 = [str_0, str_1, str_1, str_2]
        locale_0 = module_0.get(*list_0)
        str_3 = locale_0.friendly_number(int_0)
        str_4 = '&Ewvr\r<"EWOv#'
        bool_0 = True
        str_5 = locale_0.format_date(int_0, bool_0)
        locale_1 = module_0.get()
        module_0.load_translations(str_4)
    except BaseException:
        pass

def test_case_10():
    try:
        null_translations_0 = module_2.NullTranslations()
        datetime_0 = None
        str_0 = 'Tx\\2s"&.3JevN%Y|^'
        module_0.set_default_locale(str_0)
        locale_0 = module_0.get()
        bool_0 = False
        str_1 = locale_0.format_date(datetime_0, bool_0)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = 'Attempt to complete the current read operation from buffered data.\n\n        If the read can be completed without blocking, schedules the\n        read callback on the next IOLoop iteration; otherwise starts\n        listening for reads on the socket.\n        '
        int_0 = 2152
        str_1 = 'sGjmQlmc1EG3n@m&_f'
        null_translations_0 = module_2.NullTranslations()
        gettext_locale_0 = module_0.GettextLocale(str_1, null_translations_0)
        str_2 = gettext_locale_0.translate(str_0, int_0)
    except BaseException:
        pass

def test_case_12():
    try:
        locale_0 = module_0.get()
        str_0 = "D\x0c_5+'?WA;2Zl03z"
        int_0 = -778
        bool_0 = True
        bool_1 = True
        str_1 = locale_0.format_date(int_0, int_0, bool_0, bool_1, bool_0)
        null_translations_0 = module_2.NullTranslations()
        gettext_locale_0 = module_0.GettextLocale(str_0, null_translations_0)
        locale_1 = module_0.Locale(str_0)
    except BaseException:
        pass

def test_case_13():
    try:
        locale_0 = module_0.get()
        int_0 = -799
        bool_0 = False
        locale_1 = module_0.get()
        str_0 = locale_0.format_date(int_0, int_0, bool_0)
        str_1 = None
        module_0.load_translations(str_1)
    except BaseException:
        pass

def test_case_14():
    try:
        str_0 = None
        module_0.load_translations(str_0)
        str_1 = "}h<gSWbDD3p\t[$u'&\x0bA-"
        null_translations_0 = module_2.NullTranslations()
        locale_0 = None
        dict_0 = {}
        c_s_v_locale_0 = module_0.CSVLocale(str_1, dict_0)
        gettext_locale_0 = module_0.GettextLocale(str_1, null_translations_0)
        dict_1 = None
        gettext_locale_1 = module_0.GettextLocale(str_1, null_translations_0)
        locale_1 = module_0.get()
        int_0 = 1933
        str_2 = gettext_locale_0.translate(str_1, str_1, int_0)
        str_3 = locale_0.translate(str_1, dict_1)
    except BaseException:
        pass

def test_case_15():
    try:
        str_0 = '>'
        module_0.set_default_locale(str_0)
        locale_0 = module_0.get()
        str_1 = locale_0.list(str_0)
        datetime_0 = module_1.datetime()
    except BaseException:
        pass

def test_case_16():
    try:
        locale_0 = module_0.get()
        int_0 = -778
        bool_0 = False
        str_0 = locale_0.format_date(int_0, bool_0)
        str_1 = locale_0.friendly_number(int_0)
        iterable_0 = module_0.get_supported_locales()
        str_2 = 'gI<:$Q7X*:q]psbO"K'
        list_0 = [str_2, str_1]
        locale_1 = module_0.get()
        locale_2 = module_0.get(*list_0)
        str_3 = locale_0.friendly_number(int_0)
        set_0 = set()
        null_translations_0 = module_2.NullTranslations(set_0)
        str_4 = 'X$Hntfv{r1*=>'
        gettext_locale_0 = module_0.GettextLocale(str_4, null_translations_0)
        locale_3 = module_0.Locale(str_1)
    except BaseException:
        pass

def test_case_17():
    try:
        locale_0 = module_0.get()
        str_0 = "D\x0c_5+'?WA;2Zl03z"
        int_0 = -778
        bool_0 = False
        str_1 = locale_0.format_date(int_0, bool_0)
        iterable_0 = module_0.get_supported_locales()
        locale_1 = module_0.get()
        str_2 = locale_0.friendly_number(int_0)
        null_translations_0 = module_2.NullTranslations()
        gettext_locale_0 = module_0.GettextLocale(str_0, null_translations_0)
        str_3 = 'apply missing method name'
        gettext_locale_1 = module_0.GettextLocale(str_3, null_translations_0)
        datetime_0 = None
        bool_1 = True
        float_0 = 0.5
        var_0 = null_translations_0.gettext(float_0)
        bool_2 = locale_1.format_day(datetime_0, bool_1)
    except BaseException:
        pass

def test_case_18():
    try:
        str_0 = '='
        str_1 = 'L\rZ]\\~/o^*I'
        str_2 = 'Turns on formatted logging output as configured.\n\n    This is called automatically by `tornado.options.parse_command_line`\n    and `tornado.options.parse_config_file`.\n    '
        list_0 = [str_2, str_1]
        locale_0 = module_0.get(*list_0)
        str_3 = locale_0.list(str_0)
        locale_1 = module_0.Locale(str_1)
    except BaseException:
        pass

def test_case_19():
    try:
        locale_0 = module_0.get()
        str_0 = '\x0b\'@gOF15";D!FVl>'
        int_0 = 795
        str_1 = locale_0.translate(str_0, str_0, int_0)
        null_translations_0 = module_2.NullTranslations()
        gettext_locale_0 = module_0.GettextLocale(str_1, null_translations_0)
        str_2 = gettext_locale_0.pgettext(str_0, str_1, str_1, int_0)
        str_3 = locale_0.list(str_2)
        int_1 = 1584
        bool_0 = True
        str_4 = locale_0.format_date(int_1, bool_0)
        str_5 = 'U#cb'
        module_0.set_default_locale(str_5)
        str_6 = None
        int_2 = -1072
        str_7 = locale_0.friendly_number(int_2)
        var_0 = null_translations_0.charset()
        str_8 = ''
        null_translations_1 = module_2.NullTranslations()
        gettext_locale_1 = module_0.GettextLocale(str_4, null_translations_1)
        str_9 = locale_0.list(str_8)
        str_10 = gettext_locale_1.pgettext(str_4, str_3)
        module_0.load_translations(str_6)
    except BaseException:
        pass

def test_case_20():
    try:
        locale_0 = module_0.get()
        str_0 = ''
        str_1 = "\tqf ,I~\rV$.'GY7qX"
        str_2 = 'he_IL'
        null_translations_0 = module_2.NullTranslations()
        gettext_locale_0 = module_0.GettextLocale(str_2, null_translations_0)
        str_3 = gettext_locale_0.pgettext(str_0, str_1)
        str_4 = 'w_8>UXW+_LBv2bQ'
        locale_1 = module_0.Locale(str_4)
    except BaseException:
        pass