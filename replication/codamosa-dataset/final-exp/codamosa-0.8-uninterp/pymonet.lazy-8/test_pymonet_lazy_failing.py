# Automatically generated by Pynguin.
import pymonet.lazy as module_0

def test_case_0():
    try:
        str_0 = 'ImmutableList{}'
        lazy_0 = module_0.Lazy(str_0)
        var_0 = lazy_0.to_maybe()
    except BaseException:
        pass

def test_case_1():
    try:
        list_0 = []
        str_0 = 'fV(oj*Jo/<'
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
        lazy_0 = module_0.Lazy(dict_0)
        var_0 = lazy_0.to_box(*list_0)
    except BaseException:
        pass

def test_case_2():
    try:
        callable_0 = None
        lazy_0 = module_0.Lazy(callable_0)
        var_0 = lazy_0.to_either()
    except BaseException:
        pass

def test_case_3():
    try:
        list_0 = []
        lazy_0 = module_0.Lazy(list_0)
        var_0 = lazy_0.to_validation()
    except BaseException:
        pass

def test_case_4():
    try:
        var_0 = lambda x: x
        lazy_0 = module_0.Lazy(var_0)
        list_0 = [lazy_0]
        var_1 = lazy_0.get(*list_0)
        lazy_1 = module_0.Lazy(lazy_0)
        var_2 = lazy_1 == lazy_1
    except BaseException:
        pass

def test_case_5():
    try:
        var_0 = lambda x: x
        lazy_0 = module_0.Lazy(var_0)
        list_0 = [lazy_0]
        var_1 = lazy_0.get(*list_0)
        lazy_1 = module_0.Lazy(lazy_0)
        var_2 = lazy_0.to_either(*list_0)
        var_3 = lazy_1 == lazy_1
    except BaseException:
        pass