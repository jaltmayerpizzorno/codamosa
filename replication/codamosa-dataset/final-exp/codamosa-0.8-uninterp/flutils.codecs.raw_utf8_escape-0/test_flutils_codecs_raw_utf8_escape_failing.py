# Automatically generated by Pynguin.
import collections as module_0
import flutils.codecs.raw_utf8_escape as module_1
import codecs as module_2

def test_case_0():
    try:
        bytes_0 = b'H\x82\x8c.\x86\xef!\xd3\x05'
        user_string_0 = module_0.UserString(bytes_0)
        module_1.register()
        tuple_0 = module_1.encode(user_string_0, user_string_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = b'mu'
        int_0 = -1995
        tuple_0 = (bytes_0, int_0)
        user_string_0 = module_0.UserString(tuple_0)
        str_0 = 'HK.9'
        tuple_1 = module_1.encode(user_string_0, str_0)
        module_1.register()
        bytes_1 = b'\xb1Y\x0f\xf9\xba\xb5\x92q'
        int_1 = 1962
        tuple_2 = (bytes_1, int_1)
        user_string_1 = module_0.UserString(tuple_2)
        tuple_3 = module_1.encode(user_string_1)
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b'E}\xfb_\xe7\xc4\x11`N\x8e\x0f"'
        tuple_0 = module_1.decode(bytes_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '*08TU1b_M(/2'
        tuple_0 = module_1.encode(str_0)
        bool_0 = False
        tuple_1 = module_1.decode(bool_0)
    except BaseException:
        pass

def test_case_4():
    try:
        tuple_0 = None
        list_0 = [tuple_0, tuple_0]
        tuple_1 = module_1.decode(list_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = '_'
        tuple_0 = module_1.encode(str_0)
        tuple_1 = module_1.encode(str_0)
        module_1.register()
        list_0 = [tuple_1, str_0, tuple_1, tuple_1]
        tuple_2 = module_1.decode(list_0)
    except BaseException:
        pass

def test_case_6():
    try:
        module_1.register()
        str_0 = 'eutf8h'
        var_0 = module_2.getdecoder(str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        byte_string_0 = None
        module_1.register()
        str_0 = '?Q\r~gcfa~\n{&q{xi{rs'
        user_string_0 = module_0.UserString(str_0)
        bool_0 = False
        var_0 = user_string_0.__add__(bool_0)
        tuple_0 = module_1.decode(byte_string_0, user_string_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = '^2T~ea,rXM\x0cFx7'
        tuple_0 = module_1.encode(str_0)
        module_1.register()
        tuple_1 = module_1.encode(str_0)
        tuple_2 = module_1.encode(str_0)
        bytes_0 = b'w\xea\xec\xb8;\xf6zy\xc3\x9b\xd6\xb7N\xab\xdafA'
        tuple_3 = module_1.decode(bytes_0, str_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'Pythön is fun!...\n'
        str_1 = '你好，世界\n'
        var_0 = str_0 + str_1
        str_2 = 'Hello, world...\n'
        var_1 = var_0 + str_2
        str_3 = 'Pyth\\xc3\\xb6n is fun!...\\n\\xe4\\xbd\\xa0\\xe5\\xa5\\xbd\\xef\\xbc\\x8c\\xe4\\xb8\\x96\\xe7\\x95\\x8c\\nHello, world...\\n'
        tuple_0 = module_1.encode(str_0)
        tuple_1 = module_1.decode(str_3)
    except BaseException:
        pass