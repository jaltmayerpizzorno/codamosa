# Automatically generated by Pynguin.
import ansible.module_utils.common.arg_spec as module_0

def test_case_0():
    try:
        str_0 = None
        list_0 = [str_0]
        module_argument_spec_validator_0 = module_0.ModuleArgumentSpecValidator(*list_0)
    except BaseException:
        pass

def test_case_1():
    try:
        module_argument_spec_validator_0 = module_0.ModuleArgumentSpecValidator()
    except BaseException:
        pass

def test_case_2():
    try:
        dict_0 = {}
        list_0 = [dict_0, dict_0, dict_0]
        argument_spec_validator_0 = module_0.ArgumentSpecValidator(dict_0, list_0)
        var_0 = argument_spec_validator_0.validate(list_0)
    except BaseException:
        pass

def test_case_3():
    try:
        dict_0 = {}
        list_0 = [dict_0, dict_0]
        list_1 = [list_0, list_0, list_0, list_0]
        validation_result_0 = module_0.ValidationResult(list_1)
        str_0 = '(xz9/UyHZu'
        argument_spec_validator_0 = module_0.ArgumentSpecValidator(dict_0, validation_result_0, list_1, str_0)
        var_0 = argument_spec_validator_0.validate(dict_0, **dict_0)
        str_1 = '<@'
        validation_result_1 = module_0.ValidationResult(str_1)
        module_argument_spec_validator_0 = module_0.ModuleArgumentSpecValidator(**dict_0)
    except BaseException:
        pass

def test_case_4():
    try:
        tuple_0 = ()
        dict_0 = {}
        list_0 = [dict_0, dict_0]
        list_1 = [list_0, list_0, list_0, dict_0, list_0]
        validation_result_0 = module_0.ValidationResult(list_1)
        str_0 = '(xz9/UyHZu'
        argument_spec_validator_0 = module_0.ArgumentSpecValidator(dict_0, validation_result_0, tuple_0, list_1, str_0)
        dict_1 = {str_0: argument_spec_validator_0, str_0: str_0}
        var_0 = argument_spec_validator_0.validate(dict_1, *list_1, **dict_0)
    except BaseException:
        pass