# Automatically generated by Pynguin.
import sanic.exceptions as module_0

def test_case_0():
    pass

def test_case_1():
    float_0 = 2183.0
    invalid_signal_0 = module_0.InvalidSignal(float_0)

def test_case_2():
    float_0 = -13.617783873346733
    load_file_exception_0 = module_0.LoadFileException(float_0, float_0)

def test_case_3():
    dict_0 = {}
    py_file_error_0 = module_0.PyFileError(dict_0)
    bytes_0 = b';#\x1f\x91\x0f\xff4\x1b\x91k;\x00M\xa1/1'
    unauthorized_0 = module_0.Unauthorized(bytes_0, **dict_0)
    str_0 = '\\'
    method_not_supported_0 = module_0.MethodNotSupported(unauthorized_0, dict_0, str_0)

def test_case_4():
    set_0 = None
    int_0 = None
    server_error_0 = None
    load_file_exception_0 = module_0.LoadFileException(int_0, server_error_0)
    unauthorized_0 = module_0.Unauthorized(set_0, load_file_exception_0)
    list_0 = [server_error_0]
    service_unavailable_0 = module_0.ServiceUnavailable(unauthorized_0, list_0)
    int_1 = -725
    u_r_l_build_error_0 = module_0.URLBuildError(int_1)
    tuple_0 = None
    forbidden_0 = None
    file_not_found_0 = module_0.FileNotFound(u_r_l_build_error_0, tuple_0, forbidden_0)

def test_case_5():
    str_0 = '"'
    invalid_usage_0 = module_0.InvalidUsage(str_0)
    int_0 = 2864
    u_r_l_build_error_0 = module_0.URLBuildError(int_0)
    unauthorized_0 = module_0.Unauthorized(invalid_usage_0, u_r_l_build_error_0)
    sanic_exception_0 = module_0.SanicException(unauthorized_0)

def test_case_6():
    forbidden_0 = None
    bytes_0 = b'r\x95S\x04<\x0e\x89P'
    list_0 = [bytes_0, forbidden_0, bytes_0, bytes_0]
    list_1 = [bytes_0, list_0, forbidden_0, list_0]
    tuple_0 = ()
    invalid_signal_0 = module_0.InvalidSignal(list_1, tuple_0)
    sanic_exception_0 = module_0.SanicException(list_0)
    unauthorized_0 = module_0.Unauthorized(invalid_signal_0, sanic_exception_0)
    set_0 = {invalid_signal_0}
    tuple_1 = (unauthorized_0, set_0)
    u_r_l_build_error_0 = module_0.URLBuildError(forbidden_0, tuple_1, unauthorized_0)
    payload_too_large_0 = module_0.PayloadTooLarge(u_r_l_build_error_0, invalid_signal_0)