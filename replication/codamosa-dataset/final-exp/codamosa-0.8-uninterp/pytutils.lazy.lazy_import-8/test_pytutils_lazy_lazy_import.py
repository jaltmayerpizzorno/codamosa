# Automatically generated by Pynguin.
import pytutils.lazy.lazy_import as module_0

def test_case_0():
    pass

def test_case_1():
    list_0 = None
    complex_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(list_0, complex_0)

def test_case_2():
    list_0 = None
    complex_0 = None
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(list_0, complex_0)
    var_0 = illegal_use_of_scope_replacer_0.__eq__(complex_0)

def test_case_3():
    var_0 = module_0.disallow_proxying()

def test_case_4():
    import_processor_0 = module_0.ImportProcessor()

def test_case_5():
    int_0 = -2147
    bytes_0 = b'6\xbe:\x8d~\x0e'
    illegal_use_of_scope_replacer_0 = module_0.IllegalUseOfScopeReplacer(int_0, bytes_0)
    int_1 = -1801
    list_0 = [int_1]
    dict_0 = {int_1: list_0, int_1: list_0}
    str_0 = "\n'\n.s=u<"
    scope_replacer_0 = module_0.ScopeReplacer(dict_0, dict_0, str_0)
    illegal_use_of_scope_replacer_1 = module_0.IllegalUseOfScopeReplacer(list_0, scope_replacer_0)
    var_0 = illegal_use_of_scope_replacer_1.__eq__(illegal_use_of_scope_replacer_0)