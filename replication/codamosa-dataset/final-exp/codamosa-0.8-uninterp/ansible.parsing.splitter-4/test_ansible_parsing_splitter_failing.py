# Automatically generated by Pynguin.
import ansible.parsing.splitter as module_0

def test_case_0():
    try:
        bool_0 = False
        var_0 = module_0.parse_kv(bool_0)
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = -2321
        var_0 = module_0.join_args(int_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'zM\x0cb%WdyNw 3&A8$1A"'
        var_0 = module_0.parse_kv(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        dict_0 = None
        str_0 = 'n<vk@](-nl30f\x0cAeX3'
        var_0 = module_0.parse_kv(str_0)
        var_1 = module_0.parse_kv(dict_0)
        var_2 = module_0.join_args(dict_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = '`ellof9=world'
        str_1 = 'foo="bar baz" bam=bh\n'
        list_0 = [str_0, str_0, str_0]
        var_0 = module_0.parse_kv(str_1, list_0)
        str_2 = 'W(Qw%h1q"6Q\'\nK@'
        var_1 = module_0.parse_kv(str_2)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'foo=X[ar baO" bm=baz'
        var_0 = module_0.parse_kv(str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = '{{%o F bar}|'
        var_0 = module_0.split_args(str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = '\n        changed_when is evaluated after the execution of the task is complete,\n        and should not be templated during the regular post_validate step.\n        '
        var_0 = module_0.parse_kv(str_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = 'foo="bar ba" bam=baz'
        list_0 = [str_0]
        var_0 = module_0.parse_kv(str_0, list_0)
        var_1 = module_0.parse_kv(list_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'hello\\=world'
        var_0 = module_0.parse_kv(str_0)
        float_0 = 2109.22
        var_1 = module_0.parse_kv(float_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = 'W(Qw%h1q"6Q{\nK@'
        var_0 = module_0.parse_kv(str_0)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = 'a=b=c\\ d e="f\\"g"'
        var_0 = module_0.parse_kv(str_0)
        str_1 = 'a=b" r="d"'
        var_1 = module_0.parse_kv(str_1)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = 'Testing split_args...'
        var_0 = print(str_0)
        str_1 = "`{'{#"
        var_1 = module_0.parse_kv(str_1)
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = '!oo51bar'
        str_1 = "1-*(J'7L}}x"
        list_0 = [str_0, str_0, str_0]
        var_0 = module_0.parse_kv(str_1, list_0)
    except BaseException:
        pass