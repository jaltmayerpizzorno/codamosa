# Automatically generated by Pynguin.
import typesystem.base as module_0

def test_case_0():
    try:
        str_0 = '.jGNP_'
        int_0 = -1313
        validation_result_0 = module_0.ValidationResult(value=int_0)
        iterator_0 = validation_result_0.__iter__()
        base_error_0 = module_0.BaseError(text=str_0)
        int_1 = base_error_0.__hash__()
        position_0 = None
        message_0 = module_0.Message(text=str_0, position=position_0)
        int_2 = -661
        position_1 = module_0.Position(int_2, int_2, int_2)
        str_1 = position_1.__repr__()
        str_2 = position_1.__repr__()
        base_error_1 = module_0.BaseError(key=str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = -1839
        str_0 = 'Jw8"|2Y$\\@rE\\oD'
        message_0 = module_0.Message(text=str_0)
        int_1 = 5
        validation_result_0 = module_0.ValidationResult()
        bool_0 = validation_result_0.__bool__()
        iterator_0 = validation_result_0.__iter__()
        str_1 = message_0.__repr__()
        position_0 = module_0.Position(int_0, int_1, int_0)
        base_error_0 = module_0.BaseError(text=str_0, code=str_0)
        var_0 = base_error_0.__getitem__(base_error_0)
    except BaseException:
        pass

def test_case_2():
    try:
        base_error_0 = module_0.BaseError()
    except BaseException:
        pass

def test_case_3():
    try:
        int_0 = -1550
        str_0 = 'jf2<>'
        base_error_0 = module_0.BaseError(text=str_0, code=str_0, key=str_0, position=str_0)
        list_0 = base_error_0.messages(add_prefix=int_0)
        str_1 = '<7~DcSqPyC8oJa'
        message_0 = module_0.Message(text=str_1)
        int_1 = -2646
        int_2 = 4
        position_0 = module_0.Position(int_0, int_1, int_2)
        bool_0 = position_0.__eq__(list_0)
        base_error_1 = module_0.BaseError()
    except BaseException:
        pass

def test_case_4():
    try:
        message_0 = None
        validation_result_0 = module_0.ValidationResult()
        str_0 = '8ql'
        base_error_0 = module_0.BaseError(text=str_0, key=str_0, position=message_0)
        iterator_0 = base_error_0.__iter__()
        iterator_1 = base_error_0.__iter__()
        list_0 = [message_0, message_0, message_0]
        iterator_2 = validation_result_0.__iter__()
        base_error_1 = module_0.BaseError(messages=list_0)
    except BaseException:
        pass

def test_case_5():
    try:
        int_0 = 4
        str_0 = ';Oxf8?d|\tddnly~T\tP'
        list_0 = [str_0]
        int_1 = None
        int_2 = 0
        int_3 = 139
        position_0 = module_0.Position(int_1, int_2, int_3)
        message_0 = module_0.Message(text=str_0, index=list_0, position=position_0)
        list_1 = [message_0, message_0, message_0, message_0]
        base_error_0 = module_0.BaseError(key=int_0, messages=list_1)
    except BaseException:
        pass

def test_case_6():
    try:
        int_0 = 5
        str_0 = 'E[|{8J?4gBv'
        int_1 = 751
        int_2 = 5
        position_0 = module_0.Position(int_1, int_0, int_2)
        message_0 = module_0.Message(text=str_0, key=int_0, position=position_0, start_position=position_0)
    except BaseException:
        pass

def test_case_7():
    try:
        complex_0 = None
        str_0 = 'KQboX|Ll>aJg\\\x0b'
        message_0 = module_0.Message(text=str_0)
        bool_0 = message_0.__eq__(complex_0)
        int_0 = -1286
        validation_error_0 = module_0.ValidationError(key=int_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = '\x0c/C}lE'
        int_0 = -1469
        position_0 = module_0.Position(int_0, int_0, int_0)
        message_0 = module_0.Message(text=str_0, code=str_0, key=str_0, start_position=position_0, end_position=position_0)
        var_0 = message_0 == message_0
        list_0 = []
        base_error_0 = module_0.BaseError(code=str_0, messages=list_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = '\t.B\x0b '
        message_0 = module_0.Message(text=str_0)
        message_1 = module_0.Message(text=str_0)
        list_0 = [message_0, message_1]
        int_0 = 6
        position_0 = module_0.Position(int_0, int_0, int_0)
        base_error_0 = module_0.BaseError(key=list_0, position=position_0, messages=list_0)
    except BaseException:
        pass

def test_case_10():
    try:
        int_0 = 1
        str_0 = '`_W"\'W#}pP{,K:_j'
        int_1 = -1846
        int_2 = 1
        position_0 = module_0.Position(int_0, int_1, int_2)
        message_0 = module_0.Message(text=str_0, code=str_0, key=int_0, position=position_0)
        int_3 = message_0.__hash__()
        int_4 = 2
        int_5 = 6
        position_1 = module_0.Position(int_0, int_4, int_5)
        str_1 = 'atK@,wrXX\\'
        validation_error_0 = module_0.ValidationError(text=str_1)
        list_0 = [str_1, position_1, validation_error_0]
        message_1 = module_0.Message(text=str_1, index=list_0, position=position_1)
        validation_result_0 = module_0.ValidationResult()
        bool_0 = validation_result_0.__bool__()
        list_1 = [message_1, message_1, message_1]
        str_2 = position_1.__repr__()
        base_error_0 = module_0.BaseError(position=position_1, messages=list_1)
    except BaseException:
        pass

def test_case_11():
    try:
        validation_result_0 = module_0.ValidationResult()
        iterator_0 = validation_result_0.__iter__()
        int_0 = 1855
        int_1 = 95
        int_2 = -1950
        str_0 = '8^ge[4V427ClQ}<Y'
        message_0 = module_0.Message(text=str_0, key=int_1, start_position=int_1)
        validation_error_0 = module_0.ValidationError(text=message_0, code=str_0)
        int_3 = 422
        position_0 = module_0.Position(int_3, int_3, int_3)
        base_error_0 = module_0.BaseError(text=str_0, position=position_0)
        str_1 = validation_result_0.__repr__()
        int_4 = 1
        position_1 = module_0.Position(int_2, int_0, int_4)
        bool_0 = validation_result_0.__bool__()
        base_error_1 = module_0.BaseError(text=str_1, code=str_1, messages=message_0)
    except BaseException:
        pass

def test_case_12():
    try:
        int_0 = 1
        str_0 = '`_W"\'W#}pP{,K:_j'
        int_1 = -1846
        int_2 = 1
        position_0 = module_0.Position(int_0, int_1, int_2)
        message_0 = module_0.Message(text=str_0, code=str_0, key=int_0, position=position_0)
        int_3 = message_0.__hash__()
        int_4 = 2
        int_5 = 6
        position_1 = module_0.Position(int_0, int_4, int_5)
        str_1 = 'atK@,wrXX\\'
        validation_error_0 = module_0.ValidationError(text=str_1)
        list_0 = [str_1, position_1, validation_error_0]
        message_1 = module_0.Message(text=str_1, index=list_0, position=position_1)
        validation_result_0 = module_0.ValidationResult()
        bool_0 = validation_result_0.__bool__()
        list_1 = [message_1, message_1, message_1]
        str_2 = position_1.__repr__()
        base_error_0 = module_0.BaseError(messages=list_1)
    except BaseException:
        pass

def test_case_13():
    try:
        int_0 = -1550
        str_0 = 'jf2<>'
        base_error_0 = module_0.BaseError(text=str_0, code=str_0, key=str_0, position=str_0)
        list_0 = base_error_0.messages(add_prefix=int_0)
        str_1 = '<7~DcSqPyC8oJa'
        base_error_1 = module_0.BaseError(text=str_0, key=str_1)
        str_2 = base_error_1.__str__()
        validation_error_0 = module_0.ValidationError(code=str_0, key=str_1)
    except BaseException:
        pass

def test_case_14():
    try:
        int_0 = -1839
        str_0 = 'Jw8"|2Y$\\@rE\\oD'
        message_0 = module_0.Message(text=str_0)
        validation_result_0 = module_0.ValidationResult()
        bool_0 = validation_result_0.__bool__()
        iterator_0 = validation_result_0.__iter__()
        str_1 = message_0.__repr__()
        str_2 = validation_result_0.__repr__()
        position_0 = module_0.Position(int_0, int_0, int_0)
        bool_1 = validation_result_0.__bool__()
        base_error_0 = module_0.BaseError(text=str_2)
        str_3 = base_error_0.__repr__()
        base_error_1 = module_0.BaseError(code=str_2, position=position_0)
    except BaseException:
        pass

def test_case_15():
    try:
        str_0 = None
        int_0 = 3488
        int_1 = -180
        int_2 = 1
        position_0 = module_0.Position(int_0, int_1, int_2)
        message_0 = module_0.Message(text=str_0, code=str_0, position=position_0)
        list_0 = [message_0, message_0]
        validation_error_0 = module_0.ValidationError(messages=list_0)
        validation_result_0 = module_0.ValidationResult(error=validation_error_0)
        str_1 = validation_result_0.__repr__()
        str_2 = '_|1\x0cc'
        validation_error_1 = module_0.ValidationError(code=str_2, key=str_2)
    except BaseException:
        pass

def test_case_16():
    try:
        list_0 = []
        base_error_0 = module_0.BaseError(messages=list_0)
    except BaseException:
        pass

def test_case_17():
    try:
        str_0 = '}[TET&'
        list_0 = []
        list_1 = [str_0]
        message_0 = module_0.Message(text=str_0, key=str_0, index=list_0, start_position=list_1)
    except BaseException:
        pass

def test_case_18():
    try:
        str_0 = '7G[(~cg>7RA<'
        optional_0 = None
        int_0 = 1486
        position_0 = module_0.Position(int_0, int_0, int_0)
        message_0 = module_0.Message(text=str_0, code=str_0, key=str_0, index=optional_0, start_position=position_0)
        int_1 = -2646
        str_1 = message_0.__repr__()
        int_2 = -2042
        bool_0 = message_0.__eq__(int_2)
        base_error_0 = module_0.BaseError(text=str_1, position=position_0)
        bool_1 = base_error_0.__eq__(position_0)
        base_error_1 = module_0.BaseError(text=str_1)
        position_1 = module_0.Position(int_1, int_0, int_2)
        bool_2 = position_1.__eq__(optional_0)
        int_3 = message_0.__hash__()
        bool_3 = message_0.__eq__(message_0)
        parse_error_0 = module_0.ParseError(key=int_2)
    except BaseException:
        pass

def test_case_19():
    try:
        str_0 = '}[TET&'
        message_0 = module_0.Message(text=str_0, code=str_0)
        validation_result_0 = module_0.ValidationResult(value=str_0)
        str_1 = validation_result_0.__repr__()
        iterator_0 = validation_result_0.__iter__()
        str_2 = '7G[(~cg>7RA<'
        optional_0 = None
        int_0 = 1486
        position_0 = module_0.Position(int_0, int_0, int_0)
        str_3 = message_0.__repr__()
        message_1 = module_0.Message(text=str_2, code=str_2, key=str_2, index=optional_0, start_position=position_0)
        int_1 = -2646
        bool_0 = message_0.__eq__(message_1)
        int_2 = -2042
        str_4 = validation_result_0.__repr__()
        position_1 = module_0.Position(int_1, int_0, int_2)
        bool_1 = position_1.__eq__(optional_0)
        base_error_0 = module_0.BaseError(text=str_0, key=int_0)
        int_3 = message_0.__hash__()
        bool_2 = message_0.__eq__(message_0)
        base_error_1 = module_0.BaseError(code=str_2, key=int_0)
    except BaseException:
        pass

def test_case_20():
    try:
        str_0 = '}[TET&'
        message_0 = module_0.Message(text=str_0, code=str_0)
        validation_result_0 = module_0.ValidationResult(value=str_0)
        iterator_0 = validation_result_0.__iter__()
        str_1 = '7G[(~cg>7RA<'
        optional_0 = None
        int_0 = 1486
        int_1 = -3591
        position_0 = module_0.Position(int_1, int_0, int_0)
        str_2 = message_0.__repr__()
        message_1 = module_0.Message(text=str_1, key=str_1)
        str_3 = validation_result_0.__repr__()
        int_2 = 1
        position_1 = module_0.Position(int_2, int_0, int_0)
        bool_0 = position_1.__eq__(message_0)
        base_error_0 = module_0.BaseError(text=str_2)
        int_3 = message_0.__hash__()
        bool_1 = message_1.__eq__(optional_0)
        list_0 = [message_1, message_0, message_1, message_1]
        base_error_1 = module_0.BaseError(messages=list_0)
        str_4 = base_error_1.__str__()
        base_error_2 = module_0.BaseError(position=position_1, messages=list_0)
    except BaseException:
        pass

def test_case_21():
    try:
        str_0 = '}[TET&'
        message_0 = module_0.Message(text=str_0, code=str_0)
        validation_result_0 = module_0.ValidationResult(value=str_0)
        str_1 = validation_result_0.__repr__()
        iterator_0 = validation_result_0.__iter__()
        str_2 = '7G[(~cg>7RA<'
        optional_0 = None
        int_0 = 1486
        position_0 = module_0.Position(int_0, int_0, int_0)
        str_3 = message_0.__repr__()
        message_1 = module_0.Message(text=str_2, code=str_2, key=str_2, index=optional_0, start_position=position_0)
        int_1 = -2646
        int_2 = -2042
        str_4 = validation_result_0.__repr__()
        position_1 = module_0.Position(int_1, int_0, int_2)
        int_3 = -886
        int_4 = 4
        position_2 = module_0.Position(int_3, int_4, int_1)
        bool_0 = position_0.__eq__(position_1)
        base_error_0 = module_0.BaseError(position=position_0)
    except BaseException:
        pass

def test_case_22():
    try:
        str_0 = '}[TET&'
        message_0 = module_0.Message(text=str_0, code=str_0)
        validation_result_0 = module_0.ValidationResult(value=str_0)
        str_1 = validation_result_0.__repr__()
        iterator_0 = validation_result_0.__iter__()
        str_2 = '7G[(~cg>7RA<'
        int_0 = 1486
        int_1 = 1677
        position_0 = module_0.Position(int_1, int_0, int_1)
        str_3 = message_0.__repr__()
        bytes_0 = b'\xdb\x02\xa6;l\x04S\xc8'
        tuple_0 = (bytes_0,)
        message_1 = module_0.Message(text=str_2, index=tuple_0, position=position_0, end_position=position_0)
    except BaseException:
        pass

def test_case_23():
    try:
        str_0 = ''
        message_0 = module_0.Message(text=str_0, code=str_0)
        int_0 = message_0.__hash__()
        base_error_0 = module_0.BaseError(text=str_0)
        iterator_0 = base_error_0.__iter__()
        str_1 = message_0.__repr__()
        list_0 = []
        validation_result_0 = module_0.ValidationResult(value=base_error_0, error=list_0)
    except BaseException:
        pass

def test_case_24():
    try:
        str_0 = '}[TET&'
        message_0 = module_0.Message(text=str_0, code=str_0)
        validation_result_0 = module_0.ValidationResult(value=str_0)
        str_1 = validation_result_0.__repr__()
        iterator_0 = validation_result_0.__iter__()
        str_2 = '7G[(~cg>7RA<'
        int_0 = 954
        validation_result_1 = module_0.ValidationResult(error=int_0)
        optional_0 = None
        int_1 = 1486
        position_0 = module_0.Position(int_1, int_1, int_1)
        str_3 = message_0.__repr__()
        message_1 = module_0.Message(text=str_2, code=str_2, key=str_2, index=optional_0, start_position=position_0)
        int_2 = -2646
        str_4 = validation_result_0.__repr__()
        position_1 = module_0.Position(int_2, int_1, int_2)
        bool_0 = position_1.__eq__(optional_0)
        base_error_0 = module_0.BaseError(text=str_0, key=int_1)
        list_0 = base_error_0.messages()
        str_5 = '$i|J[NGPoXg,X>S_E\tK'
        list_1 = base_error_0.messages(add_prefix=str_0)
        bool_1 = position_0.__eq__(int_2)
        message_2 = module_0.Message(text=str_5, code=str_1, position=position_0)
        int_3 = message_2.__hash__()
        bool_2 = message_2.__eq__(str_5)
        str_6 = base_error_0.__str__()
        base_error_1 = module_0.BaseError(text=str_6, position=position_1)
        var_0 = base_error_1.__getitem__(int_3)
    except BaseException:
        pass

def test_case_25():
    try:
        str_0 = '}[TET&'
        message_0 = module_0.Message(text=str_0, code=str_0)
        validation_result_0 = module_0.ValidationResult(value=str_0)
        str_1 = validation_result_0.__repr__()
        iterator_0 = validation_result_0.__iter__()
        int_0 = message_0.__hash__()
        str_2 = '7G[(~cg>7RA<'
        optional_0 = None
        int_1 = 1486
        position_0 = module_0.Position(int_1, int_1, int_1)
        str_3 = message_0.__repr__()
        message_1 = module_0.Message(text=str_2, code=str_2, key=str_2, index=optional_0, start_position=position_0)
        int_2 = -2646
        str_4 = message_0.__repr__()
        int_3 = -2042
        str_5 = validation_result_0.__repr__()
        position_1 = module_0.Position(int_2, int_1, int_3)
        base_error_0 = module_0.BaseError(text=str_0, key=int_1)
        bool_0 = validation_result_0.__bool__()
        int_4 = message_0.__hash__()
        bool_1 = message_0.__eq__(message_0)
        str_6 = base_error_0.__str__()
        str_7 = base_error_0.__repr__()
        base_error_1 = module_0.BaseError(text=str_0)
        var_0 = base_error_1.__getitem__(position_1)
    except BaseException:
        pass

def test_case_26():
    try:
        str_0 = '}[TET&'
        validation_result_0 = module_0.ValidationResult(value=str_0)
        str_1 = validation_result_0.__repr__()
        iterator_0 = validation_result_0.__iter__()
        str_2 = '7G[(~cg>7RA<'
        optional_0 = None
        int_0 = 1486
        position_0 = module_0.Position(int_0, int_0, int_0)
        str_3 = '[ql\x0cAPw"-hllskU\x0b'
        message_0 = module_0.Message(text=str_3, code=str_2)
        int_1 = -2646
        str_4 = message_0.__repr__()
        str_5 = validation_result_0.__repr__()
        bool_0 = message_0.__eq__(optional_0)
        int_2 = -1225
        position_1 = module_0.Position(int_0, int_1, int_2)
        bool_1 = position_1.__eq__(position_0)
        list_0 = [int_2]
        base_error_0 = module_0.BaseError(key=str_2, position=position_1, messages=list_0)
    except BaseException:
        pass

def test_case_27():
    try:
        str_0 = '}[TET&'
        validation_result_0 = module_0.ValidationResult(value=str_0)
        int_0 = 1486
        int_1 = 2
        int_2 = 312
        int_3 = 1
        position_0 = module_0.Position(int_1, int_2, int_3)
        message_0 = module_0.Message(text=str_0, key=int_0)
        str_1 = message_0.__repr__()
        str_2 = validation_result_0.__repr__()
        message_1 = module_0.Message(text=str_0, key=int_2)
        bool_0 = message_0.__eq__(message_1)
        list_0 = []
        base_error_0 = module_0.BaseError(position=position_0, messages=list_0)
    except BaseException:
        pass

def test_case_28():
    try:
        str_0 = '}[TET&'
        validation_result_0 = module_0.ValidationResult(value=str_0)
        iterator_0 = validation_result_0.__iter__()
        str_1 = '7G[(~cg>7RA<'
        optional_0 = None
        int_0 = 1486
        position_0 = module_0.Position(int_0, int_0, int_0)
        message_0 = module_0.Message(text=str_1, code=str_1, key=str_1, index=optional_0, start_position=position_0)
        int_1 = -2042
        str_2 = validation_result_0.__repr__()
        bool_0 = message_0.__eq__(int_1)
        base_error_0 = module_0.BaseError(text=str_0)
        bool_1 = base_error_0.__eq__(int_1)
        base_error_1 = module_0.BaseError(text=str_0, code=str_0)
        validation_error_0 = module_0.ValidationError(text=str_0, position=position_0)
        bool_2 = base_error_0.__eq__(validation_error_0)
        base_error_2 = None
        bool_3 = position_0.__eq__(base_error_2)
        list_0 = [message_0, message_0]
        base_error_3 = module_0.BaseError(key=str_1, messages=list_0)
    except BaseException:
        pass