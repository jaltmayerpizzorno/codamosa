# Automatically generated by Pynguin.
import typesystem.base as module_0

def test_case_0():
    validation_result_0 = module_0.ValidationResult()

def test_case_1():
    int_0 = 2205
    int_1 = 5
    int_2 = 3
    position_0 = module_0.Position(int_0, int_1, int_2)

def test_case_2():
    str_0 = '\x0c/EC}VlE'
    int_0 = -1459
    position_0 = module_0.Position(int_0, int_0, int_0)
    message_0 = module_0.Message(text=str_0, code=str_0, key=str_0, start_position=position_0, end_position=position_0)
    var_0 = message_0 == message_0

def test_case_3():
    str_0 = '\t.B\x0b '
    message_0 = module_0.Message(text=str_0)
    message_1 = module_0.Message(text=str_0)
    int_0 = 6
    position_0 = module_0.Position(int_0, int_0, int_0)
    validation_result_0 = module_0.ValidationResult()
    bool_0 = validation_result_0.__bool__()
    base_error_0 = module_0.BaseError(text=str_0, position=position_0)
    str_1 = base_error_0.__str__()

def test_case_4():
    str_0 = None
    optional_0 = None
    float_0 = 2761.17
    message_0 = module_0.Message(text=str_0, index=optional_0, end_position=float_0)
    str_1 = '"{`A#U(lCd$^'
    message_1 = module_0.Message(text=str_1, code=str_0, key=str_1)
    list_0 = [message_0, message_1]
    base_error_0 = module_0.BaseError(messages=list_0)

def test_case_5():
    int_0 = -1839
    str_0 = 'Jw8"|2Y$\\@rE\\oD'
    message_0 = module_0.Message(text=str_0)
    int_1 = 5
    validation_result_0 = module_0.ValidationResult()
    bool_0 = validation_result_0.__bool__()
    iterator_0 = validation_result_0.__iter__()
    str_1 = message_0.__repr__()
    position_0 = module_0.Position(int_0, int_1, int_0)
    bool_1 = validation_result_0.__bool__()

def test_case_6():
    validation_result_0 = module_0.ValidationResult()
    float_0 = -229.0
    str_0 = '(text='
    base_error_0 = module_0.BaseError(text=float_0, key=str_0)
    bool_0 = base_error_0.__eq__(validation_result_0)
    bool_1 = validation_result_0.__bool__()

def test_case_7():
    str_0 = '}[TET&'
    message_0 = module_0.Message(text=str_0, code=str_0)
    validation_result_0 = module_0.ValidationResult(value=str_0)
    list_0 = [message_0, message_0]
    base_error_0 = module_0.BaseError(text=list_0)
    str_1 = base_error_0.__str__()
    validation_result_1 = module_0.ValidationResult()
    str_2 = validation_result_1.__repr__()
    str_3 = validation_result_1.__repr__()
    int_0 = base_error_0.__len__()
    str_4 = validation_result_1.__repr__()
    iterator_0 = validation_result_1.__iter__()
    validation_result_2 = module_0.ValidationResult()

def test_case_8():
    int_0 = 6
    validation_result_0 = module_0.ValidationResult(value=int_0)
    bool_0 = validation_result_0.__bool__()

def test_case_9():
    position_0 = None
    int_0 = 5
    validation_result_0 = module_0.ValidationResult(value=int_0)
    bool_0 = validation_result_0.__bool__()
    str_0 = position_0.__repr__()
    validation_result_1 = module_0.ValidationResult()
    str_1 = validation_result_1.__repr__()

def test_case_10():
    int_0 = 1101
    int_1 = 1
    int_2 = 1306
    int_3 = -1515
    position_0 = module_0.Position(int_1, int_2, int_3)
    bool_0 = position_0.__eq__(int_0)

def test_case_11():
    validation_result_0 = module_0.ValidationResult()
    var_0 = list(validation_result_0)

def test_case_12():
    str_0 = 'May not have more than 100 characters'
    str_1 = 'max_length'
    message_0 = module_0.Message(text=str_0, code=str_1)
    message_1 = module_0.Message(text=str_0, code=str_1)
    str_2 = 'min_length'
    message_2 = module_0.Message(text=str_0, code=str_2)
    var_0 = message_2 == message_2
    message_3 = module_0.Message(text=str_0, code=str_1)
    var_1 = None
    var_2 = message_3 == message_2
    message_4 = module_0.Message(text=str_0, code=str_1)
    var_3 = dict()
    var_4 = message_4 == var_3
    message_5 = module_0.Message(text=str_0, code=str_1)
    var_5 = message_5 == var_1