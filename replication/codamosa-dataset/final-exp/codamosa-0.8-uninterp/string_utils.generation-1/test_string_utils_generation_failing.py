# Automatically generated by Pynguin.
import string_utils.generation as module_0

def test_case_0():
    try:
        int_0 = 746
        str_0 = module_0.random_string(int_0)
        bool_0 = True
        str_1 = module_0.uuid(bool_0)
        str_2 = module_0.uuid()
        str_3 = module_0.uuid()
        str_4 = module_0.uuid()
        int_1 = 2603
        int_2 = 2626
        str_5 = module_0.uuid()
        str_6 = module_0.secure_random_hex(int_2)
        generator_0 = module_0.roman_range(int_1)
        int_3 = -632
        str_7 = module_0.random_string(int_3)
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = -1484
        str_0 = module_0.random_string(int_0)
    except BaseException:
        pass

def test_case_2():
    try:
        int_0 = -283
        str_0 = module_0.secure_random_hex(int_0)
    except BaseException:
        pass

def test_case_3():
    try:
        int_0 = 2
        int_1 = 1
        generator_0 = module_0.roman_range(int_0, int_1, int_1)
        var_0 = list(generator_0)
        generator_1 = module_0.roman_range(int_1, int_1)
    except BaseException:
        pass

def test_case_4():
    try:
        int_0 = -1968
        generator_0 = module_0.roman_range(int_0, int_0)
    except BaseException:
        pass

def test_case_5():
    try:
        int_0 = 2
        int_1 = 1
        generator_0 = module_0.roman_range(int_0, int_1, int_1)
        var_0 = list(generator_0)
        int_2 = 34
        int_3 = None
        generator_1 = module_0.roman_range(int_3, int_3, int_2)
    except BaseException:
        pass

def test_case_6():
    try:
        int_0 = 1806
        str_0 = module_0.secure_random_hex(int_0)
        int_1 = None
        str_1 = module_0.random_string(int_1)
    except BaseException:
        pass

def test_case_7():
    try:
        int_0 = 7
        generator_0 = module_0.roman_range(int_0)
        var_0 = list(generator_0)
        str_0 = module_0.uuid()
        int_1 = None
        str_1 = module_0.secure_random_hex(int_1)
    except BaseException:
        pass

def test_case_8():
    try:
        int_0 = 2
        int_1 = 1
        generator_0 = module_0.roman_range(int_0, int_1, int_1)
        var_0 = list(generator_0)
        int_2 = 5
        int_3 = 705
        generator_1 = module_0.roman_range(int_2, int_3)
    except BaseException:
        pass

def test_case_9():
    try:
        int_0 = 10
        str_0 = module_0.random_string(int_0)
        int_1 = 5
        str_1 = module_0.uuid()
        str_2 = module_0.random_string(int_1)
        int_2 = 4176
        generator_0 = module_0.roman_range(int_2)
    except BaseException:
        pass

def test_case_10():
    try:
        int_0 = 7
        generator_0 = module_0.roman_range(int_0)
        var_0 = list(generator_0)
        int_1 = 8
        int_2 = -1
        generator_1 = module_0.roman_range(int_1, int_0, int_2)
    except BaseException:
        pass