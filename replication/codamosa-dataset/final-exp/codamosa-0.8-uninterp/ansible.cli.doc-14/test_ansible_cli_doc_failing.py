# Automatically generated by Pynguin.
import ansible.cli.doc as module_0

def test_case_0():
    try:
        float_0 = 512.0
        role_mixin_0 = module_0.RoleMixin()
        doc_c_l_i_0 = module_0.DocCLI(role_mixin_0)
        var_0 = doc_c_l_i_0.display_plugin_list(float_0)
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = -2626
        float_0 = 2.0
        tuple_0 = (int_0, float_0)
        list_0 = [tuple_0, int_0, int_0]
        float_1 = None
        list_1 = [float_1, float_1]
        plugin_not_found_0 = module_0.PluginNotFound(*list_1)
        list_2 = [plugin_not_found_0, plugin_not_found_0]
        doc_c_l_i_0 = module_0.DocCLI(list_2)
        var_0 = doc_c_l_i_0.get_all_plugins_of_type(list_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'inventory'
        list_0 = [str_0, str_0, str_0]
        plugin_not_found_0 = module_0.PluginNotFound()
        dict_0 = {str_0: str_0, plugin_not_found_0: str_0}
        doc_c_l_i_0 = module_0.DocCLI(dict_0)
        var_0 = doc_c_l_i_0.get_plugin_metadata(str_0, list_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = ''
        set_0 = {str_0, str_0}
        role_mixin_0 = module_0.RoleMixin()
        str_1 = 'OHQ-yumzghOgQ!*.WmpO'
        float_0 = 5362.4618
        doc_c_l_i_0 = module_0.DocCLI(float_0)
        var_0 = doc_c_l_i_0.namespace_from_plugin_filepath(set_0, role_mixin_0, str_1)
    except BaseException:
        pass

def test_case_4():
    try:
        float_0 = 1191.89898
        tuple_0 = ()
        bool_0 = False
        float_1 = 2081.59
        doc_c_l_i_0 = module_0.DocCLI(float_1)
        var_0 = doc_c_l_i_0.format_snippet(float_0, tuple_0, bool_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = "US~oHT'j"
        bytes_0 = b'\xd1\xb5]\xfe\xd3\x8a\x12\x9e\x83[\x08\xd5\xe6'
        doc_c_l_i_0 = module_0.DocCLI(bytes_0)
        str_1 = '~\n.3'
        int_0 = 404
        list_0 = [str_1]
        var_0 = doc_c_l_i_0.format_snippet(str_1, int_0, list_0)
        str_2 = 'nD\x0cy]mT~>Mh"1.'
        str_3 = 'pZDOS20H]\n6gc>Nu\x0c/;'
        dict_0 = {str_3: doc_c_l_i_0, str_0: bytes_0}
        role_mixin_0 = module_0.RoleMixin()
        var_1 = doc_c_l_i_0.add_fields(str_2, dict_0, role_mixin_0, str_3)
    except BaseException:
        pass

def test_case_6():
    try:
        plugin_not_found_0 = module_0.PluginNotFound()
        list_0 = []
        role_mixin_0 = module_0.RoleMixin()
        list_1 = [role_mixin_0]
        bool_0 = True
        role_mixin_1 = module_0.RoleMixin()
        doc_c_l_i_0 = module_0.DocCLI(role_mixin_1)
        var_0 = doc_c_l_i_0.format_plugin_doc(plugin_not_found_0, list_0, role_mixin_0, list_1, bool_0, bool_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = '(?i)^#ansiblerequires\\s+\\-osversion\\s+([0-9]+(\\.[0-9]+){0,3})$'
        float_0 = -1451.1
        plugin_not_found_0 = module_0.PluginNotFound()
        bytes_0 = b'\xae3\x1a\x97\x81r\xa2\xb0x\xd2\x7f\xbc\xc8'
        doc_c_l_i_0 = module_0.DocCLI(bytes_0)
        list_0 = [doc_c_l_i_0]
        doc_c_l_i_1 = module_0.DocCLI(list_0)
        var_0 = doc_c_l_i_1.find_plugins(str_0, float_0, plugin_not_found_0)
    except BaseException:
        pass

def test_case_8():
    try:
        list_0 = []
        int_0 = 512
        role_mixin_0 = None
        str_0 = "=B'S[},;[&C)luv\t"
        doc_c_l_i_0 = module_0.DocCLI(int_0)
        str_1 = 'RcYlQwD#'
        dict_0 = {str_0: int_0, str_0: doc_c_l_i_0, str_1: list_0, str_1: str_1}
        str_2 = ' Return a CRC32 checksum of a file '
        var_0 = doc_c_l_i_0.add_fields(role_mixin_0, dict_0, str_2, doc_c_l_i_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'yR~YS-b]C0Cv.'
        str_1 = "ii}3B4't*~"
        bool_0 = True
        role_mixin_0 = module_0.RoleMixin()
        bytes_0 = b'\xab\xf0M/a\x97\x05~{!\xa6m#'
        bool_1 = False
        dict_0 = {bool_0: str_1, str_1: str_0, bool_1: str_0}
        doc_c_l_i_0 = module_0.DocCLI(dict_0)
        var_0 = doc_c_l_i_0.get_role_man_text(role_mixin_0, bytes_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = '46qK-Y:c\n&VL'
        doc_c_l_i_0 = module_0.DocCLI(str_0)
        list_0 = []
        var_0 = doc_c_l_i_0.get_man_text(list_0)
    except BaseException:
        pass

def test_case_11():
    try:
        role_mixin_0 = module_0.RoleMixin()
        var_0 = module_0.jdump(role_mixin_0)
    except BaseException:
        pass

def test_case_12():
    try:
        float_0 = 2024.8
        str_0 = ':gR*)[{~jl'
        dict_0 = {float_0: float_0}
        set_0 = {float_0, float_0}
        dict_1 = {}
        dict_2 = {str_0: dict_1}
        doc_c_l_i_0 = module_0.DocCLI(dict_2)
        var_0 = doc_c_l_i_0.get_man_text(dict_0, set_0)
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = '46qK-Y:X%c\n&VL'
        doc_c_l_i_0 = module_0.DocCLI(str_0)
        set_0 = set()
        list_0 = []
        plugin_not_found_0 = module_0.PluginNotFound()
        bytes_0 = b'\xa0Sr,\xa0n\x15\x17nS\xec\x00\xb8!\x9a'
        var_0 = doc_c_l_i_0.add_fields(str_0, set_0, list_0, plugin_not_found_0, bytes_0)
        bytes_1 = b'h\xfc6>\xde\xa6;\xc7\x80\x8a\x1eZ\xd5\xe3\xc6'
        doc_c_l_i_1 = module_0.DocCLI(bytes_1)
        list_1 = []
        var_1 = doc_c_l_i_0.get_man_text(list_1)
    except BaseException:
        pass

def test_case_14():
    try:
        int_0 = 512
        doc_c_l_i_0 = module_0.DocCLI(int_0)
        list_0 = []
        dict_0 = {int_0: list_0}
        str_0 = 't\t(U\\K?'
        plugin_not_found_0 = None
        var_0 = doc_c_l_i_0.add_fields(list_0, dict_0, str_0, plugin_not_found_0)
    except BaseException:
        pass