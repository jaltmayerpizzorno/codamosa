# Automatically generated by Pynguin.
import youtube_dl.downloader.common as module_0

def test_case_0():
    try:
        str_0 = '(gq1(WD7 yEH.:!R'
        float_0 = 275.946
        file_downloader_0 = module_0.FileDownloader(float_0, float_0)
        var_0 = file_downloader_0.format_percent(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '\nq(cq#l;JlGX"'
        bool_0 = True
        bytes_0 = None
        set_0 = {bool_0}
        bytes_1 = b'.\xd2\xb1'
        file_downloader_0 = module_0.FileDownloader(set_0, bytes_1)
        var_0 = file_downloader_0.format_speed(bytes_0)
        file_downloader_1 = module_0.FileDownloader(str_0, bool_0)
        var_1 = file_downloader_1.report_warning()
    except BaseException:
        pass

def test_case_2():
    try:
        dict_0 = {}
        file_downloader_0 = module_0.FileDownloader(dict_0, dict_0)
        str_0 = "'Iv7"
        var_0 = file_downloader_0.temp_name(str_0)
        bytes_0 = b'\x01\x85\xe2\x14-'
        var_1 = file_downloader_0.format_speed(bytes_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'\xfet\xb0;=w\x86\x062x\x89%\x9f\xc4W_\xfe'
        list_0 = [bytes_0]
        file_downloader_0 = module_0.FileDownloader(bytes_0, list_0)
        var_0 = file_downloader_0.format_retries(bytes_0)
    except BaseException:
        pass

def test_case_4():
    try:
        bytes_0 = b'\xa3\x88\xf8\xbc7'
        bool_0 = True
        file_downloader_0 = module_0.FileDownloader(bytes_0, bool_0)
        str_0 = 'bXPT)M5-OH:SPfTz'
        var_0 = file_downloader_0.report_file_already_downloaded(str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        list_0 = None
        set_0 = {list_0, list_0, list_0}
        bytes_0 = b'\xa3\x88\xf8\xbc7'
        bool_0 = True
        file_downloader_0 = module_0.FileDownloader(bytes_0, bool_0)
        var_0 = file_downloader_0.to_stderr(set_0)
    except BaseException:
        pass

def test_case_6():
    try:
        float_0 = 850.998
        set_0 = {float_0, float_0}
        float_1 = -2854.15782
        int_0 = 197
        bytes_0 = b'\xb0`cOp]\xca\xa7'
        file_downloader_0 = module_0.FileDownloader(int_0, bytes_0)
        var_0 = file_downloader_0.calc_eta(float_0, float_0, set_0, float_1)
        str_0 = 'nM/H-Bd44\nTPZRb_'
        dict_0 = {str_0: str_0}
        file_downloader_1 = module_0.FileDownloader(str_0, dict_0)
        str_1 = 'O4B'
        file_downloader_2 = module_0.FileDownloader(file_downloader_1, str_1)
        var_1 = file_downloader_2.trouble()
    except BaseException:
        pass

def test_case_7():
    try:
        int_0 = -66
        file_downloader_0 = None
        int_1 = -2508
        str_0 = 'Ì‘'
        list_0 = [str_0]
        file_downloader_1 = module_0.FileDownloader(str_0, list_0)
        var_0 = file_downloader_1.calc_eta(int_0, file_downloader_0, int_0, int_1)
        var_1 = file_downloader_1.report_warning()
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = 'episodes/%s'
        str_1 = 'J# _o`4Io'
        dict_0 = {str_0: str_0, str_0: str_0, str_1: str_1, str_0: str_0}
        str_2 = 'fmQh'
        bytes_0 = b'l\xaf"2\xcd\xec'
        file_downloader_0 = module_0.FileDownloader(str_2, bytes_0)
        var_0 = file_downloader_0.report_error(**dict_0)
    except BaseException:
        pass

def test_case_9():
    try:
        int_0 = 817
        bool_0 = False
        dict_0 = {bool_0: bool_0, bool_0: bool_0}
        file_downloader_0 = module_0.FileDownloader(bool_0, dict_0)
        float_0 = 921.4
        bool_1 = True
        list_0 = []
        var_0 = file_downloader_0.slow_down(float_0, bool_1, list_0)
        var_1 = file_downloader_0.ytdl_filename(int_0)
    except BaseException:
        pass

def test_case_10():
    try:
        float_0 = None
        set_0 = {float_0, float_0, float_0}
        list_0 = [set_0, float_0, set_0, float_0]
        bytes_0 = b's\xb0f\x80\xe6[AV\x1ab2x\x9b'
        bytes_1 = None
        list_1 = [bytes_0, set_0]
        list_2 = []
        str_0 = ':v#l{:|A8R'
        bool_0 = False
        str_1 = 'W8'
        file_downloader_0 = module_0.FileDownloader(list_1, str_1)
        var_0 = file_downloader_0.try_utime(str_0, bool_0)
        file_downloader_1 = module_0.FileDownloader(list_2, list_2)
        var_1 = file_downloader_1.calc_eta(list_0, bytes_0, bytes_1, list_1)
        dict_0 = {}
        file_downloader_2 = module_0.FileDownloader(dict_0, dict_0)
        str_2 = "'7"
        str_3 = 'Z:?2Kfms>JYM@_'
        tuple_0 = (str_3, list_1, set_0, list_1)
        int_0 = -4223
        tuple_1 = ()
        str_4 = '!ZL'
        dict_1 = None
        str_5 = '{zHSJ^|m!eq]'
        dict_2 = {str_4: list_0, str_2: str_2, str_2: dict_1, str_5: tuple_1}
        tuple_2 = (int_0, tuple_1, list_2, dict_2)
        file_downloader_3 = module_0.FileDownloader(file_downloader_1, tuple_2)
        var_2 = file_downloader_3.report_destination(tuple_0)
    except BaseException:
        pass

def test_case_11():
    try:
        list_0 = []
        bool_0 = False
        str_0 = 'aAl\rUM7p3'
        file_downloader_0 = module_0.FileDownloader(bool_0, str_0)
        var_0 = file_downloader_0.report_progress(list_0)
    except BaseException:
        pass

def test_case_12():
    try:
        dict_0 = None
        list_0 = []
        list_1 = [list_0, list_0]
        file_downloader_0 = module_0.FileDownloader(list_0, list_1)
        var_0 = file_downloader_0.add_progress_hook(dict_0)
        dict_1 = {}
        file_downloader_1 = module_0.FileDownloader(dict_1, dict_1)
        complex_0 = None
        file_downloader_2 = module_0.FileDownloader(file_downloader_1, complex_0)
        str_0 = "'IXvX7"
        var_1 = file_downloader_1.temp_name(str_0)
        set_0 = {file_downloader_1, dict_0}
        dict_2 = {str_0: set_0}
        var_2 = file_downloader_1.report_resuming_byte(dict_2)
    except BaseException:
        pass

def test_case_13():
    try:
        dict_0 = {}
        file_downloader_0 = module_0.FileDownloader(dict_0, dict_0)
        str_0 = "'Iv7"
        var_0 = file_downloader_0.temp_name(str_0)
        bytes_0 = b'\x8a\x06\x03\x9b6cV\x9e\xaeJ\x88'
        float_0 = 629.0
        str_1 = 'Vt~#T/C)VK\n\x0c_N`$!!o'
        dict_1 = {}
        dict_2 = {str_0: float_0, str_1: dict_1, str_1: float_0, str_0: file_downloader_0}
        file_downloader_1 = module_0.FileDownloader(bytes_0, dict_2)
        var_1 = file_downloader_1.report_unable_to_resume()
    except BaseException:
        pass

def test_case_14():
    try:
        dict_0 = {}
        file_downloader_0 = module_0.FileDownloader(dict_0, dict_0)
        str_0 = '\t+xHkbCS3jK<'
        var_0 = file_downloader_0.download(dict_0, str_0)
    except BaseException:
        pass

def test_case_15():
    try:
        dict_0 = {}
        file_downloader_0 = module_0.FileDownloader(dict_0, dict_0)
        str_0 = '4l@bQ4T`OU^8'
        var_0 = file_downloader_0.download(str_0, str_0)
    except BaseException:
        pass

def test_case_16():
    try:
        int_0 = -310
        file_downloader_0 = None
        file_downloader_1 = module_0.FileDownloader(int_0, file_downloader_0)
        set_0 = {file_downloader_1}
        str_0 = '+gv.&~6gKW7,%:G9'
        str_1 = 'B9'
        bool_0 = True
        var_0 = file_downloader_1.format_eta(bool_0)
        file_downloader_2 = module_0.FileDownloader(str_0, str_1)
        var_1 = file_downloader_2.parse_bytes(set_0)
    except BaseException:
        pass

def test_case_17():
    try:
        str_0 = 'Vyrbose'
        bool_0 = True
        var_0 = {str_0: bool_0, str_0: bool_0, str_0: bool_0}
        file_downloader_0 = module_0.FileDownloader(str_0, var_0)
        str_1 = 'status'
        str_2 = 'elapsed'
        str_3 = 'total_byte'
        str_4 = 'finished'
        int_0 = -1983
        int_1 = 100
        float_0 = 50.0
        var_1 = {str_1: str_4, str_2: int_0, str_3: int_1, str_3: int_1, str_3: float_0}
        var_2 = file_downloader_0.report_progress(var_1)
    except BaseException:
        pass

def test_case_18():
    try:
        str_0 = '74.0.3729.29'
        str_1 = "$%'m&N`zhes]O"
        str_2 = 'bI;h7='
        dict_0 = {str_0: str_0, str_0: str_0, str_1: str_2}
        int_0 = 99
        bool_0 = True
        file_downloader_0 = module_0.FileDownloader(int_0, bool_0)
        list_0 = []
        file_downloader_1 = module_0.FileDownloader(file_downloader_0, list_0)
        var_0 = file_downloader_1.format_eta(dict_0)
    except BaseException:
        pass

def test_case_19():
    try:
        list_0 = None
        list_1 = [list_0, list_0, list_0, list_0]
        float_0 = 3140.154
        int_0 = 2985
        str_0 = '/yHmD15,DQg23'
        str_1 = None
        dict_0 = {str_0: str_1, str_0: str_1, str_1: int_0}
        dict_1 = {str_0: int_0}
        file_downloader_0 = module_0.FileDownloader(dict_0, dict_1)
        file_downloader_1 = module_0.FileDownloader(int_0, file_downloader_0)
        var_0 = file_downloader_1.best_block_size(list_1, float_0)
    except BaseException:
        pass

def test_case_20():
    try:
        dict_0 = {}
        file_downloader_0 = module_0.FileDownloader(dict_0, dict_0)
        var_0 = file_downloader_0.temp_name(dict_0)
    except BaseException:
        pass

def test_case_21():
    try:
        str_0 = 'Vyrbose'
        bool_0 = True
        var_0 = {str_0: bool_0, str_0: bool_0, str_0: bool_0}
        file_downloader_0 = module_0.FileDownloader(bool_0, var_0)
        str_1 = 'status'
        str_2 = 'total_byte'
        var_1 = file_downloader_0.parse_bytes(str_1)
        int_0 = -2000
        int_1 = 100
        float_0 = 50.632997889425546
        var_2 = {str_1: str_0, str_2: int_0, str_2: int_1, str_2: int_1, str_2: float_0}
        var_3 = file_downloader_0.report_progress(var_2)
        str_3 = "~yH*9'D}v#rK\x0c"
        list_0 = [str_0]
        var_4 = file_downloader_0.try_rename(str_3, list_0)
    except BaseException:
        pass

def test_case_22():
    try:
        int_0 = 52
        list_0 = [int_0]
        str_0 = 'xchqIY&MiUQ!'
        str_1 = '_P7]lg'
        list_1 = []
        float_0 = 2235.93
        file_downloader_0 = module_0.FileDownloader(float_0, list_0)
        file_downloader_1 = module_0.FileDownloader(list_1, file_downloader_0)
        var_0 = file_downloader_1.try_rename(str_1, str_0)
    except BaseException:
        pass

def test_case_23():
    try:
        float_0 = 0.001
        str_0 = 'BUGGER'
        dict_0 = {str_0: str_0}
        dict_1 = None
        str_1 = ".'\nd]u#TTY)"
        float_1 = 447.746992
        file_downloader_0 = module_0.FileDownloader(str_1, float_1)
        var_0 = file_downloader_0.report_retry(float_0, dict_0, dict_1)
    except BaseException:
        pass

def test_case_24():
    try:
        dict_0 = {}
        file_downloader_0 = module_0.FileDownloader(dict_0, dict_0)
        dict_1 = {}
        var_0 = file_downloader_0.slow_down(dict_1, file_downloader_0, dict_1)
        tuple_0 = None
        var_1 = file_downloader_0.to_console_title(tuple_0)
    except BaseException:
        pass

def test_case_25():
    try:
        dict_0 = {}
        file_downloader_0 = module_0.FileDownloader(dict_0, dict_0)
        str_0 = 's^(dPxl!\\~K'
        list_0 = [str_0, dict_0]
        list_1 = [dict_0]
        var_0 = file_downloader_0.calc_percent(list_0, list_1)
    except BaseException:
        pass

def test_case_26():
    try:
        int_0 = -710
        float_0 = 137.973
        str_0 = ''
        dict_0 = {str_0: str_0, str_0: int_0}
        file_downloader_0 = module_0.FileDownloader(str_0, dict_0)
        var_0 = file_downloader_0.best_block_size(float_0, float_0)
    except BaseException:
        pass

def test_case_27():
    try:
        float_0 = 850.4931355556802
        set_0 = {float_0, float_0}
        float_1 = -2854.1578
        str_0 = '*0\x0cN"-\r=l7@<=<DL\x0b(T/'
        list_0 = None
        bytes_0 = b'\x89G\xafA\xf4}'
        file_downloader_0 = module_0.FileDownloader(bytes_0, set_0)
        var_0 = file_downloader_0.calc_percent(str_0, list_0)
        int_0 = 197
        bytes_1 = b'\xb0`cOp]\xca\xa7'
        file_downloader_1 = module_0.FileDownloader(int_0, bytes_1)
        var_1 = file_downloader_1.calc_eta(float_0, float_0, set_0, float_1)
        var_2 = file_downloader_1.report_warning()
    except BaseException:
        pass

def test_case_28():
    try:
        str_0 = '42'
        str_1 = '0'
        str_2 = '1M'
        dict_0 = {str_1: str_1, str_1: str_2, str_2: str_2}
        list_0 = [str_1, dict_0, str_0, str_1]
        tuple_0 = (list_0,)
        list_1 = [str_1]
        str_3 = 'j'
        str_4 = None
        dict_1 = {str_1: str_2, str_3: list_1, str_4: str_1, str_3: str_1}
        file_downloader_0 = module_0.FileDownloader(list_1, dict_1)
        var_0 = file_downloader_0.try_rename(tuple_0, tuple_0)
        str_5 = 'BmTZRE_=S_edw$'
        bytes_0 = b'\x15\xa26\x87^g]'
        file_downloader_1 = module_0.FileDownloader(str_5, bytes_0)
        var_1 = file_downloader_1.report_resuming_byte(list_1)
    except BaseException:
        pass

def test_case_29():
    try:
        str_0 = 'Vyrbose'
        bool_0 = True
        var_0 = {str_0: bool_0, str_0: bool_0, str_0: bool_0}
        file_downloader_0 = module_0.FileDownloader(bool_0, var_0)
        str_1 = 'status'
        str_2 = 'total_byte'
        set_0 = None
        var_1 = file_downloader_0.format_percent(set_0)
        str_3 = 'finished'
        float_0 = 2980.0
        var_2 = file_downloader_0.format_retries(float_0)
        var_3 = file_downloader_0.parse_bytes(str_2)
        int_0 = -2000
        int_1 = 100
        float_1 = 50.0
        var_4 = {str_1: str_3, str_2: int_0, str_2: int_1, str_2: int_1, str_2: float_1}
        str_4 = 'jLOoIOS3D6Y.Zq"'
        bytes_0 = b'b\xbe\x9f-\xf7\xfdE\xf1\x80\xda\x12:|o\xbf($\x18Y'
        dict_0 = {str_2: var_4, str_4: bytes_0, str_2: var_0}
        str_5 = 'https?://(?:www\\.)?webofstories\\.com/play/(?:[^/]+/)?(?P<id>[0-9]+)'
        var_5 = file_downloader_0.slow_down(str_4, dict_0, str_5)
        var_6 = file_downloader_0.report_progress(var_4)
    except BaseException:
        pass

def test_case_30():
    try:
        dict_0 = {}
        file_downloader_0 = module_0.FileDownloader(dict_0, dict_0)
        int_0 = 1434179342
        str_0 = '8[WeG:9eGjJT\x0b'
        int_1 = 1059
        file_downloader_1 = module_0.FileDownloader(str_0, int_1)
        var_0 = file_downloader_1.format_eta(int_0)
        str_1 = '{zHSJ^|m!eq]'
        list_0 = [str_1, file_downloader_0, file_downloader_0, str_1]
        var_1 = file_downloader_0.download(str_1, list_0)
    except BaseException:
        pass

def test_case_31():
    try:
        str_0 = 'Vyrbose'
        bool_0 = True
        var_0 = {str_0: bool_0, str_0: bool_0, str_0: bool_0}
        file_downloader_0 = module_0.FileDownloader(bool_0, var_0)
        str_1 = 'status'
        str_2 = 'total_byte'
        str_3 = 'finished'
        int_0 = -2000
        float_0 = 50.0
        var_1 = {str_1: str_3, str_2: int_0, str_2: int_0, str_2: int_0, str_2: float_0}
        var_2 = file_downloader_0.report_progress(var_1)
    except BaseException:
        pass

def test_case_32():
    try:
        str_0 = 'Vyrbose'
        bool_0 = True
        var_0 = {str_0: bool_0, str_0: bool_0, str_0: bool_0}
        var_1 = {}
        file_downloader_0 = module_0.FileDownloader(var_1, var_0)
        str_1 = 'status'
        str_2 = 'elapsed'
        str_3 = 'total_bytes'
        str_4 = 'finished'
        int_0 = -1983
        int_1 = -845
        float_0 = 50.0
        var_2 = {str_1: str_4, str_2: int_0, str_3: int_1, str_2: int_1, str_3: float_0}
        var_3 = file_downloader_0.report_progress(var_2)
    except BaseException:
        pass

def test_case_33():
    try:
        str_0 = 'logger'
        str_1 = 'noprogress'
        str_2 = 'verbose'
        var_0 = None
        bool_0 = True
        var_1 = {str_0: var_0, str_1: bool_0, str_2: bool_0}
        var_2 = {}
        file_downloader_0 = module_0.FileDownloader(var_2, var_1)
        str_3 = 'status'
        str_4 = 'elapsed'
        str_5 = 'total_bytes'
        str_6 = 'downloaded_bytes'
        str_7 = 'speed'
        str_8 = 'finished'
        int_0 = 2
        int_1 = 100
        float_0 = 50.0
        var_3 = {str_3: str_8, str_4: int_0, str_5: int_1, str_6: int_1, str_7: float_0}
        var_4 = file_downloader_0.report_progress(var_3)
    except BaseException:
        pass

def test_case_34():
    try:
        var_0 = None
        str_0 = 'nopart'
        str_1 = 'nooverwrites'
        bool_0 = True
        bool_1 = {str_0: bool_0, str_1: bool_0}
        file_downloader_0 = module_0.FileDownloader(var_0, bool_1)
        str_2 = 'test.txt'
        var_1 = file_downloader_0.temp_name(str_2)
        file_downloader_1 = module_0.FileDownloader(var_0, bool_0)
        var_2 = file_downloader_1.temp_name(str_2)
    except BaseException:
        pass

def test_case_35():
    try:
        bytes_0 = b'\xfet\xb0;=w\x86\x062x\x89%\x9f\xc4W_\xfe'
        list_0 = []
        bool_0 = False
        bool_1 = True
        bool_2 = True
        bool_3 = False
        file_downloader_0 = module_0.FileDownloader(bool_3, bytes_0)
        file_downloader_1 = module_0.FileDownloader(bool_2, file_downloader_0)
        var_0 = file_downloader_1.best_block_size(bool_0, bool_1)
        file_downloader_2 = module_0.FileDownloader(bytes_0, list_0)
        set_0 = {file_downloader_2, bytes_0, file_downloader_2}
        var_1 = file_downloader_2.format_retries(set_0)
    except BaseException:
        pass

def test_case_36():
    try:
        dict_0 = None
        list_0 = [dict_0]
        str_0 = ',QIR'
        int_0 = 2724
        tuple_0 = ()
        bool_0 = False
        tuple_1 = ()
        dict_1 = {str_0: str_0}
        file_downloader_0 = module_0.FileDownloader(tuple_1, dict_1)
        file_downloader_1 = module_0.FileDownloader(file_downloader_0, str_0)
        var_0 = file_downloader_1.calc_eta(int_0, int_0, tuple_0, bool_0)
        float_0 = -2571.0
        file_downloader_2 = module_0.FileDownloader(str_0, float_0)
        var_1 = file_downloader_2.to_screen(*list_0)
    except BaseException:
        pass

def test_case_37():
    try:
        str_0 = 'dSwnloaded_byte\x0b'
        bool_0 = False
        var_0 = {str_0: bool_0, str_0: bool_0, bool_0: bool_0, str_0: bool_0, str_0: str_0}
        file_downloader_0 = module_0.FileDownloader(str_0, var_0)
        bool_1 = False
        int_0 = 125
        list_0 = [int_0]
        var_1 = file_downloader_0.calc_speed(bool_1, int_0, list_0)
    except BaseException:
        pass

def test_case_38():
    try:
        bytes_0 = b'\xfet\xb0;=w\x86\x062x\x89%\x9f\xc4W_\xfe'
        list_0 = []
        bool_0 = True
        bool_1 = True
        bool_2 = True
        bool_3 = False
        file_downloader_0 = module_0.FileDownloader(bool_3, bytes_0)
        file_downloader_1 = module_0.FileDownloader(bool_2, file_downloader_0)
        var_0 = file_downloader_1.best_block_size(bool_0, bool_1)
        file_downloader_2 = module_0.FileDownloader(bytes_0, list_0)
        set_0 = {file_downloader_2, bytes_0, file_downloader_2}
        var_1 = file_downloader_2.format_retries(set_0)
    except BaseException:
        pass