# Automatically generated by Pynguin.
import tornado.escape as module_0

def test_case_0():
    try:
        bytes_0 = b'\x87'
        str_0 = module_0.xhtml_escape(bytes_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = b'\xe7\xf7\x11\xad:\xb5C\xf1CS\xf7['
        str_0 = module_0.xhtml_unescape(bytes_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b'X\xb0\x07\xd7\xa4OY'
        any_0 = module_0.json_decode(bytes_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = None
        str_1 = module_0.squeeze(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        bytes_0 = b'T\xbb\x94\xbf'
        var_0 = module_0.url_unescape(bytes_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = '<a href="http://www.example.com">www.example.com</a>'
        bool_0 = True
        str_1 = module_0.linkify(str_0, bool_0, str_0)
        var_0 = module_0.url_unescape(str_0)
        bytes_0 = None
        dict_0 = module_0.parse_qs_bytes(str_0, bool_0)
        var_1 = module_0.url_unescape(bytes_0)
    except BaseException:
        pass

def test_case_6():
    try:
        bytes_0 = b''
        dict_0 = module_0.parse_qs_bytes(bytes_0)
        str_0 = None
        str_1 = module_0.squeeze(str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        bytes_0 = b'!\xb9j\xe2\xd39\xdb\xf8\xdd-'
        optional_0 = module_0.to_unicode(bytes_0)
    except BaseException:
        pass

def test_case_8():
    try:
        bytes_0 = b'X\xb0\x07\xd7\xa4OY'
        any_0 = module_0.recursive_unicode(bytes_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'R7K'
        var_0 = module_0.url_unescape(str_0)
        bool_0 = False
        str_1 = module_0.xhtml_unescape(str_0)
        str_2 = module_0.url_escape(str_0, bool_0)
        str_3 = 'vmm]ERI'
        str_4 = module_0.xhtml_escape(str_0)
        str_5 = module_0.squeeze(str_3)
        any_0 = module_0.recursive_unicode(var_0)
        optional_0 = module_0.to_unicode(str_3)
        str_6 = module_0.url_escape(str_1)
        optional_1 = module_0.to_unicode(str_4)
        any_1 = module_0.json_decode(str_5)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = 'E\\2HQ\r#VmI]z_[e;_r'
        list_0 = None
        str_1 = 'M!&%]ZA=e@IcQ&K3h'
        dict_0 = {str_0: list_0, str_1: list_0}
        optional_0 = module_0.to_unicode(dict_0)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = ' dn^y^c'
        bytes_0 = b'\xda\xf8t{'
        bytes_1 = b'\xf2=\x82`\xcdU\xa2\xba\xd9\x86'
        list_0 = [bytes_0, bytes_0, bytes_1, bytes_1]
        str_1 = "vqLO1)0Z'G_&Lm\r"
        dict_0 = {str_0: list_0, str_1: list_0, str_0: list_0}
        any_0 = module_0.recursive_unicode(dict_0)
    except BaseException:
        pass

def test_case_12():
    try:
        int_0 = -549
        optional_0 = module_0.utf8(int_0)
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = 'http://example.com/foo&bar=baz&quux=spam'
        str_1 = module_0.xhtml_escape(str_0)
        bool_0 = True
        list_0 = None
        str_2 = module_0.linkify(str_0, bool_0, list_0)
    except BaseException:
        pass