# Automatically generated by Pynguin.
import ansible.parsing.yaml.dumper as module_0
import ansible.parsing.yaml.objects as module_1
import ansible.template as module_2
import ansible.vars.hostvars as module_3
import ansible.utils.unsafe_proxy as module_4

def test_case_0():
    try:
        var_0 = None
        ansible_dumper_0 = module_0.AnsibleDumper(var_0)
        float_0 = None
        ansible_vault_encrypted_unicode_0 = module_1.AnsibleVaultEncryptedUnicode(float_0)
        ansible_undefined_0 = module_2.AnsibleUndefined(ansible_vault_encrypted_unicode_0)
        var_1 = ansible_dumper_0.represent_data(ansible_undefined_0)
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = -1401
        float_0 = 0.1
        ansible_vault_encrypted_unicode_0 = module_1.AnsibleVaultEncryptedUnicode(float_0)
        ansible_unicode_0 = module_1.AnsibleUnicode()
        float_1 = -136.06524
        ansible_unicode_1 = None
        host_vars_vars_0 = module_3.HostVarsVars(int_0, ansible_unicode_1)
        tuple_0 = (ansible_unicode_0, float_1, host_vars_vars_0, ansible_vault_encrypted_unicode_0)
        str_0 = '+wh'
        ansible_undefined_0 = module_2.AnsibleUndefined(str_0, str_0)
        str_1 = 'Privilege Escalation Options'
        bool_0 = False
        list_0 = [int_0, float_0, bool_0]
        bytes_0 = b'\xee\x07\xcf\t\xe1\xbf\xfej\x02\xff\xff#\x83\xd8n\x91\xaf56\x1b'
        host_vars_vars_1 = module_3.HostVarsVars(list_0, bytes_0)
        set_0 = set()
        host_vars_vars_2 = module_3.HostVarsVars(host_vars_vars_1, set_0)
        ansible_dumper_0 = module_0.AnsibleDumper(bool_0, host_vars_vars_2)
        ansible_dumper_1 = module_0.AnsibleDumper(ansible_undefined_0, ansible_vault_encrypted_unicode_0, str_1, ansible_dumper_0)
        var_0 = ansible_dumper_1.represent_data(tuple_0)
    except BaseException:
        pass

def test_case_2():
    try:
        var_0 = None
        ansible_dumper_0 = module_0.AnsibleDumper(var_0)
        ansible_unsafe_bytes_0 = module_4.AnsibleUnsafeBytes()
        var_1 = ansible_dumper_0.represent_data(ansible_unsafe_bytes_0)
        list_0 = [ansible_dumper_0, var_0, ansible_unsafe_bytes_0, ansible_dumper_0]
        dict_0 = {}
        var_2 = ansible_unsafe_bytes_0.decode(*list_0, **dict_0)
    except BaseException:
        pass