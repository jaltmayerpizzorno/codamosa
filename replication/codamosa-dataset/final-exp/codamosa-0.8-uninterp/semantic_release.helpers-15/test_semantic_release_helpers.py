# Automatically generated by Pynguin.
import semantic_release.helpers as module_0
import urllib3.util.retry as module_1

def test_case_0():
    pass

def test_case_1():
    bool_0 = False
    bytes_0 = b'\xe2\xeb\x04\x8ai\x9aY7'
    list_0 = [bytes_0, bytes_0]
    logged_function_0 = module_0.LoggedFunction(list_0)
    var_0 = logged_function_0.__call__(bool_0)
    int_0 = 3
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
    var_1 = module_0.format_arg(dict_0)

def test_case_2():
    str_0 = '&,)wjK'
    var_0 = module_0.format_arg(str_0)
    int_0 = False
    str_1 = 'a('
    float_0 = 1024.6727
    logged_function_0 = module_0.LoggedFunction(float_0)
    var_1 = logged_function_0.__call__(int_0)
    logged_function_1 = module_0.LoggedFunction(str_1)
    var_2 = logged_function_1.__call__(int_0)

def test_case_3():
    str_0 = 'n'
    str_1 = None
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_1, str_0: str_0}
    logged_function_0 = module_0.LoggedFunction(dict_0)
    session_0 = module_0.build_requests_session(logged_function_0)

def test_case_4():
    list_0 = []
    complex_0 = None
    logged_function_0 = module_0.LoggedFunction(complex_0)
    float_0 = -918.0
    int_0 = 750
    session_0 = module_0.build_requests_session(float_0, int_0)
    var_0 = module_0.format_arg(logged_function_0)
    session_1 = module_0.build_requests_session()
    logged_function_1 = module_0.LoggedFunction(list_0)

def test_case_5():
    str_0 = '/V&eT/s{dQ2*1eFV@Tu'
    list_0 = [str_0, str_0, str_0]
    session_0 = module_0.build_requests_session()
    bytes_0 = b'\xfb\x9e7\xce\xfc\x95\x12\xc8%\x07&\xc5x#E'
    retry_0 = module_1.Retry(session_0, bytes_0, str_0)
    session_1 = module_0.build_requests_session(list_0, retry_0)

def test_case_6():
    float_0 = -2241.97
    logged_function_0 = module_0.LoggedFunction(float_0)

def test_case_7():
    session_0 = module_0.build_requests_session()
    float_0 = 5794.7385
    float_1 = -418.301612
    logged_function_0 = module_0.LoggedFunction(float_1)
    var_0 = logged_function_0.__call__(float_0)

def test_case_8():
    retry_0 = None
    bool_0 = False
    logged_function_0 = None
    session_0 = module_0.build_requests_session()
    var_0 = module_0.format_arg(session_0)
    tuple_0 = (bool_0, logged_function_0, bool_0)
    session_1 = module_0.build_requests_session()
    var_1 = module_0.format_arg(tuple_0)
    str_0 = '3/WV\x0b,E/\nW84'
    str_1 = ']e E\\#y(QLv!V!LF\x0b'
    str_2 = 'draft'
    dict_0 = {str_0: tuple_0, str_1: session_1, str_0: str_0, str_2: retry_0}
    var_2 = module_0.format_arg(dict_0)
    session_2 = module_0.build_requests_session(retry_0)
    session_3 = module_0.build_requests_session()
    float_0 = -845.8
    logged_function_1 = module_0.LoggedFunction(float_0)
    session_4 = module_0.build_requests_session(session_2, retry_0)
    tuple_1 = ()
    str_3 = 'xD`6`\\vh6>i'
    logged_function_2 = module_0.LoggedFunction(logged_function_1)
    logged_function_3 = module_0.LoggedFunction(str_3)
    logged_function_4 = module_0.LoggedFunction(tuple_1)
    session_5 = module_0.build_requests_session()
    set_0 = set()
    var_3 = logged_function_2.__call__(set_0)
    session_6 = module_0.build_requests_session()
    var_4 = logged_function_4.__call__(retry_0)
    var_5 = logged_function_2.__call__(session_2)
    session_7 = module_0.build_requests_session()

def test_case_9():
    bool_0 = False
    bool_1 = False
    logged_function_0 = module_0.LoggedFunction(bool_1)
    var_0 = logged_function_0.__call__(bool_0)
    dict_0 = {}
    str_0 = 'feature'
    logged_function_1 = module_0.LoggedFunction(str_0)
    bool_2 = False
    session_0 = module_0.build_requests_session(bool_2)
    logged_function_2 = module_0.LoggedFunction(session_0)
    var_1 = logged_function_1.__call__(dict_0)
    list_0 = [logged_function_1, str_0]
    logged_function_3 = module_0.LoggedFunction(list_0)
    list_1 = [dict_0]
    logged_function_4 = module_0.LoggedFunction(list_1)
    str_1 = None
    var_2 = module_0.format_arg(str_1)