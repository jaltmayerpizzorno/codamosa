# Automatically generated by Pynguin.
import ansible.module_utils.urls as module_0
import urllib.request as module_1

def test_case_0():
    try:
        proxy_error_0 = module_0.ProxyError()
        str_0 = 'eSO?X/&e8\x0b7V'
        bytes_0 = b'\x8f\x17W\x07=\x01C7'
        list_0 = [bytes_0]
        unix_h_t_t_p_s_connection_0 = module_0.UnixHTTPSConnection(list_0)
        missing_module_error_0 = module_0.MissingModuleError(str_0, unix_h_t_t_p_s_connection_0)
        dict_0 = {}
        request_0 = module_0.Request(dict_0)
        var_0 = request_0.post(missing_module_error_0, list_0)
    except BaseException:
        pass

def test_case_1():
    try:
        custom_h_t_t_p_s_connection_0 = module_0.CustomHTTPSConnection()
    except BaseException:
        pass

def test_case_2():
    try:
        dict_0 = None
        request_0 = module_0.Request(dict_0, dict_0, dict_0, dict_0, dict_0, dict_0)
        str_0 = '[;6l=U&\t-U'
        var_0 = request_0.head(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'bj=?/'
        proxy_error_0 = module_0.ProxyError()
        dict_0 = {}
        h_t_t_p_s_client_auth_handler_0 = module_0.HTTPSClientAuthHandler(proxy_error_0, **dict_0)
        var_0 = h_t_t_p_s_client_auth_handler_0.https_open(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = '(ls?74O8NmX%52\n'
        unix_h_t_t_p_s_connection_0 = module_0.UnixHTTPSConnection(str_0)
        var_0 = unix_h_t_t_p_s_connection_0.connect()
    except BaseException:
        pass

def test_case_5():
    try:
        h_t_t_p_s_client_auth_handler_0 = None
        unix_h_t_t_p_connection_0 = module_0.UnixHTTPConnection(h_t_t_p_s_client_auth_handler_0)
        var_0 = module_0.getpeercert(unix_h_t_t_p_connection_0)
    except BaseException:
        pass

def test_case_6():
    try:
        dict_0 = {}
        unix_h_t_t_p_handler_0 = module_0.UnixHTTPHandler(dict_0)
        parse_result_dotted_dict_0 = module_0.ParseResultDottedDict()
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = '- downloading role from %s'
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
        parse_result_dotted_dict_0 = module_0.ParseResultDottedDict()
        unix_h_t_t_p_handler_0 = module_0.UnixHTTPHandler(parse_result_dotted_dict_0)
        var_0 = unix_h_t_t_p_handler_0.http_open(dict_0)
    except BaseException:
        pass

def test_case_8():
    try:
        list_0 = []
        parse_result_dotted_dict_0 = module_0.ParseResultDottedDict(*list_0)
        var_0 = parse_result_dotted_dict_0.as_list()
        bool_0 = True
        tuple_0 = ()
        custom_h_t_t_p_s_handler_0 = module_0.CustomHTTPSHandler(tuple_0)
        var_1 = custom_h_t_t_p_s_handler_0.https_open(bool_0)
    except BaseException:
        pass

def test_case_9():
    try:
        dict_0 = {}
        request_0 = module_0.Request(dict_0)
        str_0 = '.tKZY:cEPbr#V'
        var_0 = request_0.head(str_0)
    except BaseException:
        pass

def test_case_10():
    try:
        bool_0 = True
        var_0 = module_0.getpeercert(bool_0)
    except BaseException:
        pass

def test_case_11():
    try:
        bool_0 = True
        unix_h_t_t_p_s_connection_0 = module_0.UnixHTTPSConnection(bool_0)
        connection_error_0 = module_0.ConnectionError()
        var_0 = module_0.rfc2822_date_string(connection_error_0)
    except BaseException:
        pass

def test_case_12():
    try:
        dict_0 = {}
        no_s_s_l_error_0 = module_0.NoSSLError(**dict_0)
        unix_h_t_t_p_connection_0 = module_0.UnixHTTPConnection(no_s_s_l_error_0)
        str_0 = '%.2f %s'
        tuple_0 = None
        request_0 = module_0.Request(str_0, tuple_0)
    except BaseException:
        pass

def test_case_13():
    try:
        bool_0 = False
        request_0 = module_0.Request(bool_0)
        var_0 = request_0.get(bool_0)
    except BaseException:
        pass

def test_case_14():
    try:
        parse_result_dotted_dict_0 = None
        var_0 = module_0.get_channel_binding_cert_hash(parse_result_dotted_dict_0)
        dict_0 = {}
        request_0 = module_0.Request(dict_0)
        var_1 = module_0.prepare_multipart(request_0)
    except BaseException:
        pass

def test_case_15():
    try:
        dict_0 = {}
        request_0 = module_0.Request(dict_0)
        str_0 = '.tKZY:cEPbr#V'
        list_0 = [str_0, str_0, dict_0]
        custom_h_t_t_p_s_connection_0 = module_0.CustomHTTPSConnection(*list_0)
        unix_h_t_t_p_s_connection_0 = module_0.UnixHTTPSConnection(custom_h_t_t_p_s_connection_0)
        var_0 = module_0.basic_auth_header(str_0, unix_h_t_t_p_s_connection_0)
        var_1 = request_0.head(str_0)
    except BaseException:
        pass

def test_case_16():
    try:
        var_0 = module_0.url_argument_spec()
        str_0 = '(ls?74O8NmX%52\n'
        unix_h_t_t_p_s_connection_0 = module_0.UnixHTTPSConnection(str_0)
        var_1 = unix_h_t_t_p_s_connection_0.connect()
    except BaseException:
        pass

def test_case_17():
    try:
        str_0 = '>DEn<jP[0H")L\n'
        dict_0 = {}
        var_0 = module_0.fetch_file(str_0, dict_0)
    except BaseException:
        pass

def test_case_18():
    try:
        str_0 = 'x*7<A!Z6E'
        var_0 = module_0.generic_urlparse(str_0)
        connection_error_0 = module_0.ConnectionError()
        unix_h_t_t_p_s_connection_0 = module_0.UnixHTTPSConnection(connection_error_0)
        var_1 = unix_h_t_t_p_s_connection_0.connect()
    except BaseException:
        pass

def test_case_19():
    try:
        str_0 = 'https://www.google.com'
        bool_0 = True
        var_0 = module_0.maybe_add_ssl_handler(str_0, bool_0)
        s_s_l_validation_error_0 = module_0.SSLValidationError()
        set_0 = {bool_0}
        unix_h_t_t_p_s_connection_0 = module_0.UnixHTTPSConnection(set_0)
        s_s_l_validation_error_1 = module_0.SSLValidationError()
        unix_h_t_t_p_handler_0 = module_0.UnixHTTPHandler(s_s_l_validation_error_1)
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(unix_h_t_t_p_handler_0, set_0)
        connection_error_0 = module_0.ConnectionError()
        str_1 = '\x0cN-,'
        list_0 = []
        no_s_s_l_error_0 = None
        dict_0 = {}
        request_with_method_0 = module_0.RequestWithMethod(str_1, list_0, no_s_s_l_error_0, dict_0)
    except BaseException:
        pass

def test_case_20():
    try:
        custom_h_t_t_p_s_handler_0 = module_0.CustomHTTPSHandler()
        list_0 = [custom_h_t_t_p_s_handler_0, custom_h_t_t_p_s_handler_0]
        unix_h_t_t_p_s_connection_0 = None
        connection_error_0 = module_0.ConnectionError()
        var_0 = module_0.fetch_url(custom_h_t_t_p_s_handler_0, list_0, unix_h_t_t_p_s_connection_0, connection_error_0, custom_h_t_t_p_s_handler_0)
    except BaseException:
        pass

def test_case_21():
    try:
        dict_0 = {}
        no_s_s_l_error_0 = module_0.NoSSLError(**dict_0)
        list_0 = [dict_0, dict_0, no_s_s_l_error_0, dict_0]
        unix_h_t_t_p_s_connection_0 = module_0.UnixHTTPSConnection(list_0)
        var_0 = unix_h_t_t_p_s_connection_0.__call__()
    except BaseException:
        pass

def test_case_22():
    try:
        str_0 = 'disable'
        str_1 = '[c&RU0DZOy'
        var_0 = module_0.atexit_remove_file(str_1)
        dict_0 = {}
        request_0 = module_0.Request(dict_0)
        var_1 = request_0.head(str_0)
    except BaseException:
        pass

def test_case_23():
    try:
        proxy_error_0 = module_0.ProxyError()
        str_0 = 'eSO?X/&e8\x0b7V'
        list_0 = []
        unix_h_t_t_p_s_connection_0 = module_0.UnixHTTPSConnection(list_0)
        missing_module_error_0 = module_0.MissingModuleError(str_0, unix_h_t_t_p_s_connection_0)
        dict_0 = {}
        request_0 = module_0.Request(dict_0)
        var_0 = request_0.put(request_0)
    except BaseException:
        pass

def test_case_24():
    try:
        str_0 = "8;31:<oIs3\x0bn?C\\M1'd}"
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
        request_0 = module_0.Request(dict_0)
        var_0 = request_0.head(str_0)
    except BaseException:
        pass

def test_case_25():
    try:
        proxy_error_0 = module_0.ProxyError()
        str_0 = '/ '
        int_0 = -639
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(str_0, int_0)
        str_1 = '\ni0\x0bD \nX7?kFsq/1\x0c'
        unix_h_t_t_p_s_connection_0 = module_0.UnixHTTPSConnection(str_1)
        parse_result_dotted_dict_0 = module_0.ParseResultDottedDict()
        var_0 = s_s_l_validation_handler_0.make_context(unix_h_t_t_p_s_connection_0, parse_result_dotted_dict_0)
    except BaseException:
        pass

def test_case_26():
    try:
        float_0 = -702.72
        bool_0 = False
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(float_0, float_0, bool_0)
        missing_module_error_0 = None
        custom_h_t_t_p_s_handler_0 = module_0.CustomHTTPSHandler()
        var_0 = s_s_l_validation_handler_0.make_context(missing_module_error_0, custom_h_t_t_p_s_handler_0)
    except BaseException:
        pass

def test_case_27():
    try:
        str_0 = '+OwB"'
        list_0 = [str_0, str_0, str_0, str_0]
        int_0 = -2474
        unix_h_t_t_p_connection_0 = module_0.UnixHTTPConnection(int_0)
        var_0 = unix_h_t_t_p_connection_0.__call__(*list_0)
        bytes_0 = b'\x86}\xdd\xe2\xf4z4\x0ey\xfe|\xe5\x14\xba\xf8\x19\xf9'
        dict_0 = {str_0: bytes_0}
        s_s_l_validation_error_0 = module_0.SSLValidationError(*list_0, **dict_0)
    except BaseException:
        pass

def test_case_28():
    try:
        str_0 = 'IS%s}A\\(\t:0'
        int_0 = 1235
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(str_0, int_0)
        var_0 = s_s_l_validation_handler_0.http_request(s_s_l_validation_handler_0)
    except BaseException:
        pass

def test_case_29():
    try:
        dict_0 = None
        str_0 = '|SfFW>*JzP9:\t['
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(dict_0, dict_0, str_0)
        var_0 = s_s_l_validation_handler_0.get_ca_certs()
    except BaseException:
        pass

def test_case_30():
    try:
        parse_result_dotted_dict_0 = None
        var_0 = module_0.get_channel_binding_cert_hash(parse_result_dotted_dict_0)
        int_0 = -1254
        str_0 = '#I(0(k&/"\x0blafRb=Yb{('
        str_1 = 'Ii'
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(str_0, str_1)
        var_1 = s_s_l_validation_handler_0.validate_proxy_response(int_0)
    except BaseException:
        pass

def test_case_31():
    try:
        dict_0 = {}
        var_0 = module_0.prepare_multipart(dict_0)
        int_0 = -3572
        list_0 = []
        tuple_0 = ()
        request_0 = module_0.Request(list_0, tuple_0, int_0)
        str_0 = 'File does not exist, used empty file: %s'
        var_1 = request_0.get(str_0)
    except BaseException:
        pass

def test_case_32():
    try:
        h_t_t_p_s_client_auth_handler_0 = module_0.HTTPSClientAuthHandler()
        no_s_s_l_error_0 = module_0.NoSSLError()
        dict_0 = {}
        parse_result_dotted_dict_0 = module_0.ParseResultDottedDict()
        str_0 = 'A'
        request_0 = module_0.Request()
        var_0 = module_0.get_channel_binding_cert_hash(str_0)
        list_0 = [dict_0, var_0, dict_0]
        var_1 = request_0.patch(list_0)
    except BaseException:
        pass

def test_case_33():
    try:
        unix_h_t_t_p_connection_0 = None
        s_s_l_validation_error_0 = module_0.SSLValidationError()
        bytes_0 = b'\xca\xbfp\xdb\xc8\x89\x16S\x9c@\n'
        var_0 = module_0.maybe_add_ssl_handler(unix_h_t_t_p_connection_0, s_s_l_validation_error_0, bytes_0)
        str_0 = 'disable'
        dict_0 = {str_0: str_0}
        request_0 = module_0.Request(dict_0)
        str_1 = 'm7M}9'
        var_1 = request_0.options(str_1)
    except BaseException:
        pass

def test_case_34():
    try:
        custom_h_t_t_p_s_handler_0 = module_0.CustomHTTPSHandler()
        str_0 = ''
        str_1 = 'a%qqA\n'
        parse_result_dotted_dict_0 = None
        dict_0 = {str_1: custom_h_t_t_p_s_handler_0, str_0: custom_h_t_t_p_s_handler_0, str_1: parse_result_dotted_dict_0}
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(custom_h_t_t_p_s_handler_0, str_0, dict_0)
        var_0 = s_s_l_validation_handler_0.make_context(parse_result_dotted_dict_0, dict_0)
    except BaseException:
        pass

def test_case_35():
    try:
        connection_error_0 = module_0.ConnectionError()
        str_0 = 'jz?|UeQg&W)C&=v'
        dict_0 = {str_0: connection_error_0, str_0: connection_error_0}
        var_0 = module_0.prepare_multipart(dict_0)
    except BaseException:
        pass

def test_case_36():
    try:
        dict_0 = {}
        request_0 = module_0.Request(dict_0)
        str_0 = ';,o&k~:OcHud<+[?'
        parse_result_dotted_dict_0 = module_0.ParseResultDottedDict(**dict_0)
        h_t_t_p_s_client_auth_handler_0 = module_0.HTTPSClientAuthHandler()
        unix_h_t_t_p_handler_0 = module_0.UnixHTTPHandler(h_t_t_p_s_client_auth_handler_0, **dict_0)
        bytes_0 = b'\xea\xcf\xc7\xac(\x8d\xb6\x11\xc8\xadX\x98\x02\x85'
        h_t_t_p_s_client_auth_handler_1 = module_0.HTTPSClientAuthHandler(str_0)
        s_s_l_validation_handler_0 = module_0.SSLValidationHandler(bytes_0, h_t_t_p_s_client_auth_handler_1)
        var_0 = s_s_l_validation_handler_0.validate_proxy_response(parse_result_dotted_dict_0, unix_h_t_t_p_handler_0)
    except BaseException:
        pass

def test_case_37():
    try:
        int_0 = 16
        request_0 = module_0.Request()
        str_0 = 'POST'
        var_0 = request_0.open(str_0, str_0, str_0, int_0)
    except BaseException:
        pass

def test_case_38():
    try:
        dict_0 = None
        str_0 = '|SfFW>*JzP9:\t['
        proxy_error_0 = None
        list_0 = [dict_0, proxy_error_0, str_0, str_0]
        unix_h_t_t_p_connection_0 = module_0.UnixHTTPConnection(list_0)
        s_s_l_validation_error_0 = module_0.SSLValidationError()
        set_0 = {proxy_error_0}
        var_0 = module_0.open_url(unix_h_t_t_p_connection_0, s_s_l_validation_error_0, unix_h_t_t_p_connection_0, proxy_error_0, proxy_error_0, set_0)
    except BaseException:
        pass

def test_case_39():
    try:
        dict_0 = {}
        list_0 = [dict_0, dict_0, dict_0, dict_0]
        unix_h_t_t_p_s_connection_0 = module_0.UnixHTTPSConnection(list_0)
        missing_module_error_0 = module_0.MissingModuleError(dict_0, unix_h_t_t_p_s_connection_0)
        list_1 = [missing_module_error_0, missing_module_error_0, unix_h_t_t_p_s_connection_0]
        no_s_s_l_error_0 = module_0.NoSSLError(*list_1)
        str_0 = 'HmJl'
        custom_h_t_t_p_s_handler_0 = module_0.CustomHTTPSHandler()
        dict_1 = {missing_module_error_0: missing_module_error_0}
        s_s_l_validation_error_0 = module_0.SSLValidationError(**dict_0)
        int_0 = 824
        var_0 = module_0.open_url(no_s_s_l_error_0, str_0, str_0, list_1, custom_h_t_t_p_s_handler_0, dict_1, s_s_l_validation_error_0, int_0, dict_1)
    except BaseException:
        pass

def test_case_40():
    try:
        custom_h_t_t_p_s_handler_0 = None
        set_0 = {custom_h_t_t_p_s_handler_0, custom_h_t_t_p_s_handler_0, custom_h_t_t_p_s_handler_0, custom_h_t_t_p_s_handler_0}
        str_0 = '.t0kzy'
        var_0 = module_0.build_ssl_validation_error(custom_h_t_t_p_s_handler_0, set_0, str_0)
    except BaseException:
        pass

def test_case_41():
    try:
        dict_0 = {}
        request_0 = module_0.Request(dict_0)
        parse_result_dotted_dict_0 = module_0.ParseResultDottedDict(**dict_0)
        var_0 = request_0.delete(parse_result_dotted_dict_0, **dict_0)
    except BaseException:
        pass

def test_case_42():
    try:
        s_s_l_validation_error_0 = module_0.SSLValidationError()
        str_0 = 't@:H$`JqWZh;'
        bool_0 = True
        unix_h_t_t_p_connection_0 = module_0.UnixHTTPConnection(bool_0)
        list_0 = [s_s_l_validation_error_0, str_0, unix_h_t_t_p_connection_0, unix_h_t_t_p_connection_0]
        no_s_s_l_error_0 = module_0.NoSSLError(*list_0)
        dict_0 = {}
        tuple_0 = (str_0, unix_h_t_t_p_connection_0, no_s_s_l_error_0, dict_0)
        var_0 = module_0.build_ssl_validation_error(s_s_l_validation_error_0, tuple_0, dict_0, tuple_0)
    except BaseException:
        pass

def test_case_43():
    try:
        parse_result_dotted_dict_0 = None
        unix_h_t_t_p_connection_0 = module_0.UnixHTTPConnection(parse_result_dotted_dict_0)
        str_0 = '/\x0bh{0S4t;Z,'
        proxy_error_0 = module_0.ProxyError()
        float_0 = 754.344473
        bytes_0 = b'\xd2{\x81\x7f\x9f_L\x15\x8f\xfcQ\xecm\xea;\xe8b3N'
        custom_h_t_t_p_s_handler_0 = module_0.CustomHTTPSHandler(bytes_0)
        list_0 = [custom_h_t_t_p_s_handler_0, parse_result_dotted_dict_0]
        var_0 = module_0.fetch_file(unix_h_t_t_p_connection_0, str_0, parse_result_dotted_dict_0, proxy_error_0, float_0, list_0)
    except BaseException:
        pass

def test_case_44():
    try:
        str_0 = 'https://www.google.com'
        bool_0 = True
        str_1 = '.{KZ:c%Pbrt8#V'
        unix_h_t_t_p_handler_0 = None
        dict_0 = {str_1: bool_0}
        set_0 = set()
        int_0 = 600
        proxy_error_0 = module_0.ProxyError()
        list_0 = [bool_0, int_0, str_1]
        connection_error_0 = module_0.ConnectionError(*list_0)
        str_2 = "@{ 7w']W<?\t_ah\\>)rN"
        float_0 = 326.0
        request_0 = module_0.Request(dict_0, set_0, unix_h_t_t_p_handler_0, str_0, connection_error_0, str_2, float_0, connection_error_0)
        var_0 = request_0.head(set_0)
    except BaseException:
        pass

def test_case_45():
    try:
        str_0 = 'https://www.google.com/'
        var_0 = module_1.urlopen(str_0)
    except BaseException:
        pass

def test_case_46():
    try:
        str_0 = 'https://www.google.com'
        bool_0 = False
        var_0 = module_0.maybe_add_ssl_handler(str_0, bool_0)
        str_1 = '.{KZ:c%Pbrt8#,V'
        unix_h_t_t_p_handler_0 = None
        str_2 = "T\\{?_vC'"
        dict_0 = {str_2: var_0}
        set_0 = set()
        int_0 = 600
        proxy_error_0 = module_0.ProxyError()
        list_0 = [bool_0, int_0, str_1]
        parse_result_dotted_dict_0 = module_0.ParseResultDottedDict()
        var_1 = parse_result_dotted_dict_0.as_list()
        connection_error_0 = module_0.ConnectionError(*list_0)
        str_3 = "@{ 7w']W<?\t_ah\\>)rN"
        float_0 = 326.0
        request_0 = module_0.Request(dict_0, set_0, int_0, proxy_error_0, connection_error_0, str_3, float_0, connection_error_0)
        var_2 = request_0.head(unix_h_t_t_p_handler_0)
    except BaseException:
        pass