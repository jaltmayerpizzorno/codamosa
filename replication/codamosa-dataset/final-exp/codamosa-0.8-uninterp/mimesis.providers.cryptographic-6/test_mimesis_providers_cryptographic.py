# Automatically generated by Pynguin.
import mimesis.providers.cryptographic as module_0

def test_case_0():
    cryptographic_0 = module_0.Cryptographic()
    str_0 = cryptographic_0.hash()

def test_case_1():
    cryptographic_0 = module_0.Cryptographic()
    str_0 = cryptographic_0.hash()
    var_0 = cryptographic_0.token_urlsafe()
    list_0 = []
    str_1 = cryptographic_0.mnemonic_phrase()
    cryptographic_1 = module_0.Cryptographic(*list_0)
    var_1 = cryptographic_0.uuid()
    str_2 = cryptographic_0.hash()
    dict_0 = {}
    cryptographic_2 = module_0.Cryptographic(**dict_0)
    var_2 = cryptographic_2.token_urlsafe()
    str_3 = cryptographic_0.hash()
    var_3 = cryptographic_0.token_urlsafe()
    bool_0 = True
    var_4 = cryptographic_2.uuid(bool_0)
    var_5 = cryptographic_0.uuid()
    str_4 = cryptographic_0.hash()
    cryptographic_3 = module_0.Cryptographic()
    str_5 = cryptographic_3.token_hex()
    str_6 = cryptographic_0.mnemonic_phrase()
    str_7 = cryptographic_0.hash()
    cryptographic_4 = module_0.Cryptographic()
    str_8 = cryptographic_4.token_hex()

def test_case_2():
    cryptographic_0 = module_0.Cryptographic()
    int_0 = 402
    bytes_0 = cryptographic_0.token_bytes(int_0)
    str_0 = cryptographic_0.mnemonic_phrase()

def test_case_3():
    int_0 = 16777215
    cryptographic_0 = module_0.Cryptographic()
    str_0 = cryptographic_0.token_hex(int_0)
    bytes_0 = cryptographic_0.token_bytes()
    str_1 = cryptographic_0.hash()

def test_case_4():
    cryptographic_0 = module_0.Cryptographic()
    cryptographic_1 = module_0.Cryptographic()
    str_0 = cryptographic_1.hash()
    str_1 = cryptographic_1.token_hex()
    int_0 = 786
    int_1 = 2599
    str_2 = cryptographic_0.mnemonic_phrase()
    str_3 = cryptographic_0.token_hex(int_1)
    str_4 = cryptographic_1.token_hex(int_0)
    cryptographic_2 = module_0.Cryptographic()
    str_5 = cryptographic_0.mnemonic_phrase(int_0, str_4)
    bytes_0 = cryptographic_1.token_bytes(int_0)
    cryptographic_3 = module_0.Cryptographic()
    str_6 = cryptographic_1.hash()
    cryptographic_4 = module_0.Cryptographic()
    cryptographic_5 = module_0.Cryptographic()
    str_7 = cryptographic_2.hash()
    int_2 = -969
    str_8 = cryptographic_2.mnemonic_phrase(int_2)
    str_9 = cryptographic_1.mnemonic_phrase()
    bool_0 = True
    var_0 = cryptographic_4.uuid(bool_0)