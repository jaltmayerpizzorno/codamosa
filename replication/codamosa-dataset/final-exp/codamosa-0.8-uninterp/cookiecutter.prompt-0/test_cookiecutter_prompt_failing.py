# Automatically generated by Pynguin.
import cookiecutter.prompt as module_0
import collections as module_1

def test_case_0():
    try:
        bytes_0 = b'\xc3<DW@4\x1c"G5\x13\x88C'
        set_0 = set()
        var_0 = module_0.read_user_variable(bytes_0, set_0)
    except BaseException:
        pass

def test_case_1():
    try:
        list_0 = None
        set_0 = set()
        var_0 = module_0.read_user_yes_no(list_0, set_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'v||eI0)m|%I5e'
        var_0 = module_0.read_repo_password(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'6\xa3\xb6|\x005/\x8b\xf7\xde\xc6w1c)'
        list_0 = []
        var_0 = module_0.read_user_choice(bytes_0, list_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = None
        tuple_0 = None
        bool_0 = True
        dict_0 = None
        list_0 = [str_0]
        var_0 = module_0.prompt_choice_for_config(tuple_0, bool_0, dict_0, list_0, dict_0)
    except BaseException:
        pass

def test_case_5():
    try:
        list_0 = None
        str_0 = None
        var_0 = module_0.read_user_choice(list_0, str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        dict_0 = None
        var_0 = module_0.process_json(dict_0)
    except BaseException:
        pass

def test_case_7():
    try:
        ordered_dict_0 = module_1.OrderedDict()
        var_0 = module_0.read_user_dict(ordered_dict_0, ordered_dict_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = '"G6"01>J-w\x0cyC'
        var_0 = module_0.read_user_dict(str_0, str_0)
    except BaseException:
        pass

def test_case_9():
    try:
        int_0 = -488
        float_0 = -3250.579
        var_0 = module_0.render_variable(int_0, int_0, float_0)
    except BaseException:
        pass

def test_case_10():
    try:
        float_0 = -547.5795
        list_0 = [float_0, float_0]
        str_0 = 'wc8'
        var_0 = module_0.render_variable(float_0, list_0, str_0)
    except BaseException:
        pass

def test_case_11():
    try:
        bool_0 = False
        int_0 = 2996
        str_0 = ''
        bytes_0 = b'U@\x18^L\xe6_(\xb3\xcbj\xe9\n\xdd\xc0\xb5\x14\xbe\xca`'
        float_0 = 1709.717
        dict_0 = {bool_0: str_0, bytes_0: float_0, bool_0: float_0, bytes_0: bool_0}
        var_0 = module_0.prompt_choice_for_config(bool_0, int_0, int_0, str_0, dict_0)
    except BaseException:
        pass

def test_case_12():
    try:
        bytes_0 = None
        var_0 = module_0.prompt_for_config(bytes_0)
    except BaseException:
        pass

def test_case_13():
    try:
        complex_0 = None
        str_0 = 'w(=r|Z;~I:Z'
        bool_0 = False
        list_0 = [str_0, bool_0]
        var_0 = module_0.render_variable(complex_0, str_0, list_0)
    except BaseException:
        pass

def test_case_14():
    try:
        str_0 = 'WoSOco}~mISX'
        dict_0 = {str_0: str_0, str_0: str_0}
        var_0 = module_0.render_variable(str_0, dict_0, dict_0)
    except BaseException:
        pass

def test_case_15():
    try:
        str_0 = 'Directory within repo that holds cookiecutter.json file for advanced repositories with multi templates in it'
        tuple_0 = None
        str_1 = "J'roT4.nsbARhq|J3/*]"
        var_0 = module_0.render_variable(str_0, tuple_0, str_1)
        var_1 = module_0.read_repo_password(tuple_0)
    except BaseException:
        pass

def test_case_16():
    try:
        str_0 = None
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
        var_0 = module_0.render_variable(str_0, dict_0, dict_0)
        var_1 = module_0.read_user_yes_no(str_0, str_0)
    except BaseException:
        pass

def test_case_17():
    try:
        float_0 = -1219.38
        list_0 = []
        str_0 = 'vY8/h'
        var_0 = module_0.render_variable(float_0, list_0, str_0)
        str_1 = '^uvo(oQIT'
        var_1 = module_0.process_json(str_1)
    except BaseException:
        pass

def test_case_18():
    try:
        int_0 = 1245
        str_0 = '\ncookiecutter.replay.\n\n-------------------\n'
        str_1 = 'w'
        list_0 = [int_0, int_0, str_1]
        str_2 = 'Copying binary %s to %s without rendering'
        tuple_0 = (str_0, str_1, list_0, str_2)
        float_0 = -1920.531639
        str_3 = '\nMain entry point for the `cookiecutter` command.\n\nThe code in this module is also a good example of how to use Cookiecutter as a\nlibrary rather than a script.\n'
        dict_0 = None
        var_0 = module_0.prompt_choice_for_config(int_0, tuple_0, float_0, str_3, dict_0)
    except BaseException:
        pass

def test_case_19():
    try:
        str_0 = '"string"'
        var_0 = module_0.process_json(str_0)
    except BaseException:
        pass