# Automatically generated by Pynguin.
import sanic.utils as module_0
import pathlib as module_1

def test_case_0():
    try:
        str_0 = 'I'
        bool_0 = module_0.str_to_bool(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'n'
        bool_0 = module_0.str_to_bool(str_0)
        var_0 = module_0.load_module_from_file_location(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = None
        bool_0 = module_0.str_to_bool(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'tests/test_application/test_config.json'
        var_0 = module_0.load_module_from_file_location(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'E![`u7657*'
        var_0 = module_0.load_module_from_file_location(str_0, str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        bytes_0 = b'\xf0\t~\xcc'
        str_0 = "?!LG,1=5'v@`.a&4LI("
        var_0 = module_0.load_module_from_file_location(bytes_0, str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        path_0 = module_1.Path()
        var_0 = module_0.load_module_from_file_location(path_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'n'
        bool_0 = module_0.str_to_bool(str_0)
        str_1 = 'Improper websocket connection.'
        var_0 = module_0.load_module_from_file_location(str_1)
    except BaseException:
        pass

def test_case_8():
    try:
        path_0 = module_1.Path()
        str_0 = 'T'
        bool_0 = module_0.str_to_bool(str_0)
        str_1 = 'JB2r|K_MZW\\gpg5t7'
        var_0 = module_0.load_module_from_file_location(path_0, str_1)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = "{z0Y^v'#nS7'95 _!$r"
        var_0 = module_0.load_module_from_file_location(str_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = 'some_path/${some_env_var}'
        var_0 = module_0.load_module_from_file_location(str_0)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = 'tests/test_application/test_config.py'
        var_0 = module_0.load_module_from_file_location(str_0)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = './delete_me_A1.1.py'
        str_1 = 'w'
        list_0 = []
        var_0 = module_0.load_module_from_file_location(str_0, *list_0)
        list_1 = [str_0, str_1]
        dict_0 = {}
        var_1 = module_0.load_module_from_file_location(str_0, *list_1, **dict_0)
    except BaseException:
        pass