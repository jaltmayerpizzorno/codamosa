# Automatically generated by Pynguin.
import ansible.playbook.role.metadata as module_0

def test_case_0():
    try:
        bool_0 = False
        dict_0 = {}
        str_0 = 'Rz0gZ>\\'
        role_metadata_0 = module_0.RoleMetadata(str_0)
        var_0 = role_metadata_0.serialize()
        role_metadata_1 = module_0.RoleMetadata()
        var_1 = role_metadata_1.load(dict_0, str_0)
        role_metadata_2 = module_0.RoleMetadata(bool_0)
        set_0 = {role_metadata_2, bool_0}
        list_0 = [bool_0, bool_0, set_0]
        var_2 = role_metadata_2.deserialize(list_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = b'{\x82\xe2"s\x8a\xf5R<&@{\n\xcb\xfb\x9c'
        bool_0 = True
        dict_0 = {bool_0: bytes_0, bool_0: bytes_0, bool_0: bytes_0}
        role_metadata_0 = module_0.RoleMetadata()
        var_0 = role_metadata_0.load(bool_0, dict_0, dict_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'UMASK='
        float_0 = 2146.18
        dict_0 = {str_0: float_0, float_0: float_0}
        role_metadata_0 = module_0.RoleMetadata()
        bool_0 = None
        bool_1 = True
        var_0 = role_metadata_0.serialize()
        var_1 = role_metadata_0.load(bool_0, dict_0, bool_1)
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'\xa8\xacm\tI\x05\xbd\xc5\x8b\xacd\xcb'
        bool_0 = False
        role_metadata_0 = module_0.RoleMetadata(bool_0)
        var_0 = role_metadata_0.deserialize(bytes_0)
    except BaseException:
        pass

def test_case_4():
    try:
        dict_0 = {}
        role_metadata_0 = module_0.RoleMetadata()
        var_0 = role_metadata_0.deserialize(dict_0)
        str_0 = 'dependencies'
        bool_0 = False
        var_1 = {str_0: bool_0, str_0: dict_0, str_0: dict_0, str_0: str_0, str_0: dict_0}
        var_2 = role_metadata_0.load_data(var_1)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'dependencies'
        bool_0 = True
        str_1 = [str_0, str_0, str_0]
        var_0 = {str_0: bool_0, str_0: str_1}
        role_metadata_0 = module_0.RoleMetadata(bool_0)
        var_1 = role_metadata_0.load_data(var_0, var_0, var_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'dependencies'
        bool_0 = False
        var_0 = {str_0: bool_0, str_0: bool_0, str_0: bool_0, str_0: str_0, str_0: bool_0}
        role_metadata_0 = module_0.RoleMetadata(str_0)
        var_1 = role_metadata_0.load_data(var_0)
    except BaseException:
        pass

def test_case_7():
    try:
        role_metadata_0 = module_0.RoleMetadata()
        str_0 = 'dependencies'
        var_0 = {str_0: role_metadata_0, str_0: str_0, str_0: role_metadata_0}
        var_1 = role_metadata_0.load_data(var_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = 'allow_duplicates'
        str_1 = 'dependencies'
        bool_0 = False
        str_2 = [str_1, str_1, str_0]
        var_0 = {str_0: bool_0, str_1: str_2}
        var_1 = None
        role_metadata_0 = module_0.RoleMetadata(var_1)
        var_2 = role_metadata_0.load_data(var_0, var_1, var_1)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'allow_duplicates'
        str_1 = 'dependencies'
        bool_0 = True
        str_2 = 'role'
        str_3 = {str_2: str_2}
        str_4 = 'test_role2'
        str_5 = {str_2: str_4}
        str_6 = 'test_role3'
        str_7 = {str_2: str_6}
        str_8 = [str_3, str_5, str_7]
        var_0 = {str_0: bool_0, str_1: str_8}
        role_metadata_0 = module_0.RoleMetadata(str_3)
        var_1 = role_metadata_0.load_data(var_0, str_7, str_7)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = 'allow_duplicates'
        str_1 = 'dependencies'
        bool_0 = False
        str_2 = {str_1: str_1}
        str_3 = [str_2, str_2, str_0]
        var_0 = {str_0: bool_0, str_1: str_3}
        role_metadata_0 = module_0.RoleMetadata(bool_0)
        var_1 = role_metadata_0.load_data(var_0, var_0, var_0)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = 'allow_duplicates'
        str_1 = 'dependencies'
        bool_0 = False
        str_2 = ''
        str_3 = {}
        set_0 = set()
        str_4 = [str_3, str_1, set_0, str_2]
        var_0 = {str_0: bool_0, str_1: str_4}
        role_metadata_0 = module_0.RoleMetadata(str_3)
        var_1 = role_metadata_0.load_data(var_0, str_3, str_3)
    except BaseException:
        pass