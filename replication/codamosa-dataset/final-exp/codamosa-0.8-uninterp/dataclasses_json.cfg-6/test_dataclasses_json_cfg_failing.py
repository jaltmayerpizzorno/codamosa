# Automatically generated by Pynguin.
import dataclasses_json.cfg as module_0
import dataclasses_json.undefined as module_1
import marshmallow.fields as module_2

def test_case_0():
    try:
        str_0 = '`nc@cW]wMC78@-l0N9R'
        dict_0 = module_0.config(undefined=str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '`nc@cW]wMC78@-l0N9R'
        dict_0 = module_0.config(undefined=str_0, field_name=str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = "&@w1#5[$#gv\x0cV8Ed>_'"
        dict_0 = {str_0: str_0, str_0: str_0}
        global_config_0 = module_0._GlobalConfig()
        global_config_1 = module_0._GlobalConfig()
        dict_1 = module_0.config(mm_field=global_config_1, exclude=dict_0)
        exclude_0 = module_0.Exclude()
        set_0 = set()
        var_0 = exclude_0.<lambda>(set_0)
    except BaseException:
        pass

def test_case_3():
    try:
        undefined_0 = module_1.Undefined.RAISE
        set_0 = {undefined_0, undefined_0, undefined_0, undefined_0}
        str_0 = '?55T|Y=Ui1}S\r'
        bool_0 = None
        bool_1 = False
        bool_2 = False
        str_1 = '0x&9-f\x0ctq'
        str_2 = 'A'
        str_3 = 'xL"_{fp\\P.=4ty\\B'
        str_4 = '/f}E\x0c2W\nMed*iT\x0b'
        dict_0 = {str_0: str_1, str_1: str_0, str_2: str_3, str_2: str_4}
        field_0 = module_2.Field(allow_none=bool_0, load_only=bool_1, dump_only=bool_2, error_messages=dict_0)
        dict_1 = module_0.config(encoder=set_0, mm_field=str_0, letter_case=field_0, undefined=undefined_0, field_name=str_1)
        global_config_0 = module_0._GlobalConfig()
        str_5 = 'yxiO'
        dict_2 = {str_5: str_5}
        list_0 = []
        exclude_0 = module_0.Exclude(*list_0)
        var_0 = exclude_0.<lambda>(dict_2)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = '>q0Rjps<'
        float_0 = -2086.144
        field_0 = None
        dict_0 = module_0.config(decoder=float_0, mm_field=field_0, undefined=str_0, field_name=str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        dict_0 = module_0.config()
        str_0 = '>q0Rjps<'
        float_0 = -2086.1444
        field_0 = None
        dict_1 = module_0.config(decoder=float_0, mm_field=field_0, undefined=str_0, field_name=str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        dict_0 = {}
        none_type_0 = None
        dict_1 = module_0.config(dict_0, exclude=none_type_0)
        global_config_0 = module_0._GlobalConfig()
        list_0 = []
        exclude_0 = module_0.Exclude()
        var_0 = exclude_0.<lambda>(list_0)
    except BaseException:
        pass