# Automatically generated by Pynguin.
import sanic.response as module_0
import sanic.compat as module_1

def test_case_0():
    try:
        base_h_t_t_p_response_0 = module_0.BaseHTTPResponse()
        h_t_t_p_response_0 = module_0.json(base_h_t_t_p_response_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'deprecated'
        str_1 = 'ctx'
        h_t_t_p_response_0 = module_0.text(str_0, str_1)
        h_t_t_p_response_1 = module_0.json(h_t_t_p_response_0, str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = None
        str_1 = '\x0b{qP7:690\ne~^'
        h_t_t_p_response_0 = module_0.text(str_0, str_1)
    except BaseException:
        pass

def test_case_3():
    try:
        set_0 = set()
        h_t_t_p_response_0 = module_0.empty(set_0)
        bool_0 = True
        list_0 = [bool_0, bool_0, bool_0]
        str_0 = 'location of unix socket'
        streaming_h_t_t_p_response_0 = module_0.StreamingHTTPResponse(list_0, str_0)
        str_1 = '&\x0b+Nf\n\tfHu~W5\x0c\x0bie5'
        int_0 = 417
        h_t_t_p_response_1 = module_0.redirect(str_1, int_0)
    except BaseException:
        pass

def test_case_4():
    try:
        int_0 = None
        str_0 = 'K>R*m4"K[\nfFg8'
        header_0 = module_1.Header()
        str_1 = 'iPsN3 ?1\x0c'
        str_2 = '$^\r em_q*|\rpq=5i'
        h_t_t_p_response_0 = module_0.redirect(str_2)
        h_t_t_p_response_1 = module_0.json(int_0, str_0, header_0)
        base_h_t_t_p_response_0 = None
        list_0 = [base_h_t_t_p_response_0, base_h_t_t_p_response_0]
        var_0 = module_0.stream(base_h_t_t_p_response_0, str_1, list_0)
    except BaseException:
        pass

def test_case_5():
    try:
        callable_0 = None
        int_0 = -5223
        bytes_0 = b'\x1a\xf1i\xc5\xd0\xd0t'
        var_0 = module_0.stream(callable_0, int_0, bytes_0)
    except BaseException:
        pass