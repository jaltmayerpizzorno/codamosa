# Automatically generated by Pynguin.
import ansible.utils.context_objects as module_0

def test_case_0():
    try:
        bool_0 = True
        c_l_i_args_0 = module_0.CLIArgs(bool_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'foo'
        str_1 = '*bI'
        str_2 = 'bar'
        str_3 = 'blah'
        str_4 = {str_3: str_3}
        str_5 = {str_0: str_2, str_1: str_4}
        c_l_i_args_0 = module_0.CLIArgs(str_5)
        var_0 = CLIArgs(str_5)[str_1]
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'problem'
        float_0 = 363.0
        tuple_0 = (float_0,)
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: tuple_0}
        c_l_i_args_0 = module_0.CLIArgs(dict_0)
        a_b_c_singleton_0 = module_0._ABCSingleton(dict_0, tuple_0, c_l_i_args_0, dict_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'one'
        str_1 = 'three'
        str_2 = 'six'
        str_3 = 'twelve'
        str_4 = 'fourteen'
        str_5 = 'two'
        str_6 = 'four'
        str_7 = 'five'
        str_8 = [str_6, str_7]
        str_9 = 'seven'
        str_10 = 'eight'
        str_11 = 'ten'
        str_12 = 'eleven'
        str_13 = [str_11, str_12]
        str_14 = {str_9: str_10, str_9: str_13}
        str_15 = 'thirteen'
        str_16 = 'fifteen'
        str_17 = {str_0: str_5, str_1: str_8, str_2: str_14, str_3: str_15, str_4: str_16}
        c_l_i_args_0 = module_0.CLIArgs(str_17)
        var_0 = c_l_i_args_0[str_1]
        var_1 = c_l_i_args_0[str_2][str_15]
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'b'
        str_1 = 'c'
        int_0 = 1
        int_1 = 2
        int_2 = [int_0, int_1]
        var_0 = set(int_2)
        var_1 = {str_0: int_1, str_0: var_0, str_1: int_1}
        c_l_i_args_0 = module_0.CLIArgs(var_1)
        var_2 = c_l_i_args_0[str_0]
        var_3 = c_l_i_args_0[str_1]
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'b'
        str_1 = 'c'
        str_2 = ':%]_ '
        global_c_l_i_args_0 = module_0.GlobalCLIArgs(str_2)
        int_0 = 2
        var_0 = set(str_1)
        var_1 = {str_0: int_0, str_0: var_0, str_1: int_0}
        c_l_i_args_0 = module_0.CLIArgs(var_1)
        var_2 = c_l_i_args_0[str_0]
        var_3 = c_l_i_args_0[str_1]
    except BaseException:
        pass