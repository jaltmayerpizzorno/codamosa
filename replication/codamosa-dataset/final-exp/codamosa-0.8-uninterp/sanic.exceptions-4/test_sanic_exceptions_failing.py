# Automatically generated by Pynguin.
import sanic.exceptions as module_0

def test_case_0():
    try:
        int_0 = 200
        var_0 = module_0.abort(int_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = b'\x04\x90\xcajU'
        sanic_exception_0 = module_0.SanicException(bytes_0)
        payload_too_large_0 = module_0.PayloadTooLarge(sanic_exception_0)
        request_timeout_0 = None
        float_0 = 15.0
        unauthorized_0 = module_0.Unauthorized(sanic_exception_0, request_timeout_0, float_0)
        content_range_error_0 = module_0.ContentRangeError(payload_too_large_0, unauthorized_0)
    except BaseException:
        pass

def test_case_2():
    try:
        int_0 = -2334
        dict_0 = {}
        u_r_l_build_error_0 = module_0.URLBuildError(int_0, int_0, dict_0)
        str_0 = "Method '"
        dict_1 = {u_r_l_build_error_0: u_r_l_build_error_0}
        str_1 = 'S)y,<h`vE>X-MZgXQ'
        str_2 = '<!DOCTYPE html><html lang=en><meta charset=UTF-8><title>{title}</title>\n<style>{style}</style>\n<h1>{title}</h1><p>{text}\n{body}'
        dict_2 = {str_0: dict_1, str_0: str_0, str_1: int_0, str_2: str_1}
        header_expectation_failed_0 = module_0.HeaderExpectationFailed(dict_2)
        str_3 = '_method'
        load_file_exception_0 = module_0.LoadFileException(header_expectation_failed_0, str_3)
        not_found_0 = module_0.NotFound(u_r_l_build_error_0, load_file_exception_0)
        invalid_range_type_0 = module_0.InvalidRangeType(not_found_0, not_found_0)
    except BaseException:
        pass

def test_case_3():
    try:
        int_0 = 2588
        str_0 = '|H@B2Tv,vYqT'
        var_0 = module_0.abort(int_0, str_0)
    except BaseException:
        pass