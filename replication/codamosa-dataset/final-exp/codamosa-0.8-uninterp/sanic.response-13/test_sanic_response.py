# Automatically generated by Pynguin.
import sanic.response as module_0
import pathlib as module_1

def test_case_0():
    pass

def test_case_1():
    base_h_t_t_p_response_0 = module_0.BaseHTTPResponse()

def test_case_2():
    base_h_t_t_p_response_0 = module_0.BaseHTTPResponse()
    h_t_t_p_response_0 = module_0.raw(base_h_t_t_p_response_0)

def test_case_3():
    h_t_m_l_protocol_0 = None
    h_t_t_p_response_0 = module_0.html(h_t_m_l_protocol_0)

def test_case_4():
    pure_path_0 = module_1.PurePath()
    int_0 = -324
    streaming_h_t_t_p_response_0 = module_0.file_stream(pure_path_0, int_0)
    str_0 = 'ZcKO;y0GX`JF#E$\\B30-'
    h_t_t_p_response_0 = module_0.text(str_0, str_0)
    var_0 = pure_path_0.as_posix()
    h_t_t_p_response_1 = module_0.html(str_0)

def test_case_5():
    pure_path_0 = module_1.PurePath()
    streaming_h_t_t_p_response_0 = module_0.StreamingHTTPResponse(pure_path_0)
    str_0 = 'deprecated'
    dict_0 = {str_0: str_0}
    var_0 = module_0.stream(streaming_h_t_t_p_response_0, dict_0)
    h_t_m_l_protocol_0 = None
    str_1 = '2Ub?]t)*3Ri%8'
    h_t_t_p_response_0 = module_0.redirect(str_1)
    h_t_t_p_response_1 = module_0.html(h_t_m_l_protocol_0)

def test_case_6():
    str_0 = '._LE7cOFca?vR.Xrha'
    str_1 = 'c_+g]p<'
    dict_0 = {str_1: str_1, str_1: str_0, str_1: str_1}
    h_t_t_p_response_0 = module_0.html(str_1, dict_0)

def test_case_7():
    bytes_0 = b'\x80\xf6O8\xac\xe0\xa2_M\x9d0\x05\x96\x94\xf1\xd2\xceA'
    h_t_t_p_response_0 = module_0.html(bytes_0)

def test_case_8():
    base_h_t_t_p_response_0 = module_0.BaseHTTPResponse()
    callable_0 = None
    int_0 = 826
    dict_0 = {}
    str_0 = "mC'j;kW3og@wD^vCG1;"
    str_1 = '>L}fFJl3s\rPG0geW'
    str_2 = ',#'
    dict_1 = {str_1: int_0, str_2: int_0, str_1: str_1}
    streaming_h_t_t_p_response_0 = module_0.StreamingHTTPResponse(callable_0, int_0, dict_0, str_0, dict_1)
    base_h_t_t_p_response_0.send(base_h_t_t_p_response_0, streaming_h_t_t_p_response_0)
    h_t_t_p_response_0 = module_0.raw(base_h_t_t_p_response_0)

def test_case_9():
    callable_0 = None
    bytes_0 = b'^\xfb\x18M\xe3<\xf4\xc5f'
    str_0 = '" not found.'
    base_h_t_t_p_response_0 = module_0.BaseHTTPResponse()
    h_t_t_p_response_0 = module_0.html(str_0, base_h_t_t_p_response_0)
    str_1 = '\n    Render a response for the default FALLBACK exception handler.\n    '
    str_2 = '[!I!0e1phUVO^:I?'
    base_h_t_t_p_response_0.send()
    str_3 = 'q.H\x0cK'
    set_0 = None
    h_t_t_p_response_1 = module_0.empty(set_0)
    dict_0 = {str_0: str_0, str_1: str_0, str_2: str_1, str_3: callable_0}
    str_4 = '_&ULsHe+%c62(."@#;P'
    str_5 = '|}z.#e>rrz_H \'\\"'
    str_6 = '+<*kA\\U?YWJ*\n\x0b#;c\n'
    str_7 = '5'
    streaming_h_t_t_p_response_0 = module_0.StreamingHTTPResponse(callable_0, base_h_t_t_p_response_0)
    str_8 = 'xt'
    str_9 = 'zWg125'
    none_type_0 = None
    base_h_t_t_p_response_1 = module_0.BaseHTTPResponse()
    str_10 = None
    h_t_t_p_response_2 = module_0.raw(none_type_0, base_h_t_t_p_response_1, str_10)
    dict_1 = {str_4: str_5, str_9: str_6, str_7: str_4, str_8: str_9}
    h_t_t_p_response_3 = module_0.json(dict_0, dict_1)
    h_t_t_p_response_4 = module_0.empty()
    int_0 = 864
    str_11 = '4\n\nQhkSSyf`WT'
    var_0 = module_0.stream(callable_0, int_0, dict_1, str_11, bytes_0)