# Automatically generated by Pynguin.
import pypara.monetary as module_0
import decimal as module_1
import pypara.currencies as module_2

def test_case_0():
    pass

def test_case_1():
    list_0 = []
    none_money_0 = module_0.NoneMoney()
    money_0 = none_money_0.scalar_subtract(list_0)
    var_0 = money_0.__round__()
    money_1 = none_money_0.add(money_0)
    decimal_0 = module_1.Decimal()

def test_case_2():
    none_money_0 = module_0.NoneMoney()
    money_0 = none_money_0.negative()
    var_0 = money_0.__round__()
    bool_0 = money_0.gt(money_0)
    int_0 = 275
    money_1 = none_money_0.round(int_0)
    money_2 = money_0.positive()

def test_case_3():
    int_0 = -3348
    none_money_0 = module_0.NoneMoney()
    money_0 = none_money_0.scalar_subtract(int_0)
    none_money_1 = module_0.NoneMoney()

def test_case_4():
    none_money_0 = module_0.NoneMoney()
    none_price_0 = module_0.NonePrice()
    price_0 = none_price_0.negative()
    price_1 = price_0.__abs__()
    money_0 = none_money_0.negative()
    none_price_1 = module_0.NonePrice()
    var_0 = price_1.__round__()
    bytes_0 = b''
    list_0 = [bytes_0, bytes_0, bytes_0]
    some_price_0 = module_0.SomePrice(*list_0)
    price_2 = some_price_0.subtract(price_0)
    list_1 = []
    money_1 = money_0.__truediv__(list_1)
    price_3 = some_price_0.add(price_2)
    some_money_0 = module_0.SomeMoney(*list_0)
    money_2 = some_money_0.add(money_0)
    money_3 = some_money_0.add(money_2)

def test_case_5():
    decimal_0 = module_1.Decimal()
    str_0 = '9yS.$i8n)S3h7Ix.'
    str_1 = ':2'
    int_0 = 12
    currency_type_0 = module_2.CurrencyType.ALTERNATIVE
    decimal_1 = module_1.Decimal()
    int_1 = -1162
    currency_0 = module_2.Currency(str_0, str_1, int_0, currency_type_0, decimal_1, int_1)
    decimal_2 = currency_0.quantize(decimal_0)
    str_2 = '0b\x0ce]O'
    int_2 = 559
    currency_type_1 = module_2.CurrencyType.MONEY
    decimal_3 = module_1.Decimal()
    currency_1 = module_2.Currency(str_2, str_2, int_2, currency_type_1, decimal_3, int_2)
    decimal_4 = currency_1.quantize(decimal_2)
    none_money_0 = module_0.NoneMoney()
    money_0 = none_money_0.round()
    money_1 = money_0.with_qty(decimal_4)
    money_2 = money_1.positive()

def test_case_6():
    none_price_0 = module_0.NonePrice()
    price_0 = none_price_0.negative()
    price_1 = price_0.__abs__()
    var_0 = price_1.__round__()
    bytes_0 = b''
    list_0 = [bytes_0, bytes_0, bytes_0]
    some_price_0 = module_0.SomePrice(*list_0)
    price_2 = some_price_0.subtract(price_0)
    price_3 = some_price_0.add(price_2)
    bool_0 = some_price_0.lte(price_3)

def test_case_7():
    none_money_0 = module_0.NoneMoney()
    none_price_0 = module_0.NonePrice()
    price_0 = none_price_0.negative()
    money_0 = none_money_0.negative()
    var_0 = price_0.__round__()
    bytes_0 = b''
    list_0 = [none_price_0, none_money_0, bytes_0]
    some_price_0 = module_0.SomePrice(*list_0)
    price_1 = some_price_0.subtract(price_0)
    some_money_0 = module_0.SomeMoney(*list_0)
    bool_0 = price_0.gt(price_0)
    money_1 = some_money_0.add(money_0)
    money_2 = money_1.subtract(money_1)
    bool_1 = some_money_0.gte(money_0)
    bool_2 = some_price_0.lte(price_0)

def test_case_8():
    decimal_0 = module_1.Decimal()
    str_0 = '9yS.$i8n)S3h7Ix.'
    str_1 = ':2'
    int_0 = 12
    currency_type_0 = module_2.CurrencyType.ALTERNATIVE
    decimal_1 = module_1.Decimal()
    int_1 = -1162
    currency_0 = module_2.Currency(str_0, str_1, int_0, currency_type_0, decimal_1, int_1)
    decimal_2 = currency_0.quantize(decimal_0)
    str_2 = '0b\x0ce]O'
    int_2 = 559
    currency_type_1 = module_2.CurrencyType.MONEY
    decimal_3 = module_1.Decimal()
    currency_1 = module_2.Currency(str_2, str_2, int_2, currency_type_1, decimal_3, int_2)
    decimal_4 = currency_1.quantize(decimal_2)
    none_money_0 = module_0.NoneMoney()
    money_0 = none_money_0.round()
    money_1 = money_0.with_ccy(currency_0)
    money_2 = money_1.with_qty(decimal_1)
    money_3 = money_1.positive()

def test_case_9():
    none_money_0 = module_0.NoneMoney()
    none_price_0 = module_0.NonePrice()
    price_0 = none_price_0.abs()
    price_1 = price_0.__abs__()
    money_0 = none_money_0.negative()
    bool_0 = none_price_0.lt(price_1)
    none_price_1 = module_0.NonePrice()
    var_0 = price_1.__round__()
    bytes_0 = b''
    list_0 = [bytes_0, bytes_0, bytes_0]
    str_0 = '4\\:RU#D\r%hi4bFW\x0buE='
    bool_1 = price_1.as_boolean()
    some_price_0 = module_0.SomePrice(*list_0)
    price_2 = some_price_0.subtract(price_0)
    price_3 = some_price_0.add(price_2)
    bool_2 = some_price_0.is_equal(str_0)
    some_money_0 = module_0.SomeMoney(*list_0)
    money_1 = some_money_0.subtract(money_0)

def test_case_10():
    none_money_0 = module_0.NoneMoney()
    money_0 = none_money_0.negative()
    var_0 = money_0.__round__()
    bool_0 = money_0.gt(money_0)
    int_0 = 275
    money_1 = none_money_0.round(int_0)
    str_0 = 'Sk@1|P^eE@\n_oy:'
    money_2 = money_0.floor_divide(str_0)
    money_3 = none_money_0.subtract(money_2)
    money_4 = money_0.positive()

def test_case_11():
    none_money_0 = module_0.NoneMoney()
    money_0 = none_money_0.positive()
    none_price_0 = module_0.NonePrice()
    str_0 = 'd"D|'
    str_1 = 'NL;=C'
    str_2 = 'yK'
    dict_0 = {str_0: none_price_0, str_1: none_price_0, str_1: none_money_0, str_2: none_price_0}
    money_1 = none_price_0.times(dict_0)
    bytes_0 = b''
    list_0 = [bytes_0, bytes_0, bytes_0]
    str_3 = '4\\:RU#D\r%hi4b~W\x0buE='
    decimal_0 = None
    str_4 = '\n        Indicates if the code is a valid currency code.\n        '
    int_0 = 884
    currency_type_0 = module_2.CurrencyType.ALTERNATIVE
    currency_0 = module_2.Currency(str_4, str_3, int_0, currency_type_0, decimal_0, int_0)
    some_money_0 = module_0.SomeMoney(*list_0)
    bool_0 = some_money_0.lt(money_0)

def test_case_12():
    none_money_0 = module_0.NoneMoney()
    money_0 = none_money_0.negative()
    var_0 = money_0.__round__()
    int_0 = None
    none_price_0 = module_0.NonePrice()
    price_0 = none_price_0.scalar_add(int_0)
    bool_0 = money_0.gt(money_0)
    decimal_0 = module_1.Decimal()
    currency_type_0 = module_2.CurrencyType.MONEY
    decimal_1 = None
    money_1 = money_0.with_qty(decimal_0)
    money_2 = money_1.with_qty(decimal_1)
    str_0 = 'e>_\x0b'
    str_1 = '0}ok/O\r{\r['
    int_1 = 1222
    currency_0 = module_2.Currency(str_0, str_1, int_1, currency_type_0, decimal_0, int_0)
    none_money_1 = module_0.NoneMoney()
    money_3 = none_money_1.convert(currency_0)
    money_4 = money_3.__pos__()
    money_5 = money_2.positive()

def test_case_13():
    none_money_0 = module_0.NoneMoney()
    none_price_0 = module_0.NonePrice()
    price_0 = none_price_0.abs()
    price_1 = price_0.__abs__()
    money_0 = none_money_0.negative()
    bool_0 = none_price_0.lt(price_1)
    none_price_1 = module_0.NonePrice()
    var_0 = price_1.__round__()
    bytes_0 = b''
    list_0 = [bytes_0, bytes_0, bytes_0]
    some_price_0 = module_0.SomePrice(*list_0)
    price_2 = some_price_0.subtract(price_0)
    price_3 = some_price_0.add(price_2)

def test_case_14():
    none_money_0 = module_0.NoneMoney()
    none_price_0 = module_0.NonePrice()
    price_0 = none_price_0.negative()
    price_1 = price_0.__sub__(price_0)
    money_0 = none_money_0.negative()
    price_2 = price_0.__add__(price_1)
    bytes_0 = b'<'
    list_0 = [bytes_0, bytes_0, bytes_0]
    some_price_0 = module_0.SomePrice(*list_0)
    price_3 = some_price_0.subtract(price_0)
    price_4 = some_price_0.add(price_3)
    bool_0 = price_3.__gt__(price_4)
    bool_1 = some_price_0.lte(price_1)
    bool_2 = price_3.lt(price_4)
    price_5 = some_price_0.subtract(price_0)

def test_case_15():
    none_money_0 = module_0.NoneMoney()
    none_price_0 = module_0.NonePrice()
    price_0 = none_price_0.abs()
    price_1 = none_price_0.subtract(price_0)
    money_0 = none_money_0.negative()
    bool_0 = none_price_0.lt(price_1)
    none_price_1 = module_0.NonePrice()
    var_0 = price_1.__round__()
    bytes_0 = b''
    list_0 = [bytes_0, bytes_0, bytes_0]
    str_0 = '4:R$#D%hibFWuE='
    some_price_0 = module_0.SomePrice(*list_0)
    price_2 = some_price_0.subtract(price_0)
    price_3 = some_price_0.add(price_2)
    bool_1 = some_price_0.is_equal(str_0)

def test_case_16():
    none_money_0 = module_0.NoneMoney()
    int_0 = None
    none_price_0 = module_0.NonePrice()
    price_0 = none_price_0.abs()
    price_1 = price_0.__abs__()
    bool_0 = none_price_0.lt(price_1)
    none_price_1 = module_0.NonePrice()
    price_2 = none_price_1.scalar_add(int_0)
    var_0 = price_0.__round__()
    bytes_0 = b''
    list_0 = [bytes_0, bytes_0, bytes_0]
    some_price_0 = module_0.SomePrice(*list_0)
    price_3 = none_price_1.abs()
    var_1 = None
    price_4 = none_price_1.divide(var_1)
    money_0 = none_money_0.scalar_add(var_1)
    bool_1 = some_price_0.gt(price_2)

def test_case_17():
    none_price_0 = module_0.NonePrice()
    price_0 = none_price_0.negative()
    bytes_0 = b''
    list_0 = [bytes_0, bytes_0, bytes_0]
    some_price_0 = module_0.SomePrice(*list_0)
    price_1 = some_price_0.subtract(price_0)
    bool_0 = price_1.lt(price_0)
    bool_1 = price_1.lt(price_1)
    bool_2 = none_price_0.gte(price_1)
    none_money_0 = module_0.NoneMoney()
    tuple_0 = (none_money_0, none_money_0)
    price_2 = price_0.scalar_subtract(tuple_0)

def test_case_18():
    none_money_0 = module_0.NoneMoney()
    none_price_0 = module_0.NonePrice()
    price_0 = none_price_0.abs()
    price_1 = price_0.__abs__()
    money_0 = none_money_0.negative()
    bool_0 = none_price_0.lt(price_1)
    none_price_1 = module_0.NonePrice()
    var_0 = price_1.__round__()
    bytes_0 = b''
    list_0 = [bytes_0, bytes_0, bytes_0]
    str_0 = '4\\:RU#D\r%hi4bFW\x0buE='
    some_price_0 = module_0.SomePrice(*list_0)
    price_2 = some_price_0.subtract(price_0)
    price_3 = some_price_0.add(price_2)
    bool_1 = some_price_0.is_equal(str_0)
    some_money_0 = module_0.SomeMoney(*list_0)
    money_1 = some_money_0.subtract(money_0)

def test_case_19():
    none_price_0 = module_0.NonePrice()
    bool_0 = none_price_0.as_boolean()
    none_money_0 = module_0.NoneMoney()
    none_price_1 = module_0.NonePrice()
    price_0 = none_price_1.negative()
    money_0 = none_money_0.negative()
    var_0 = price_0.__round__()
    bytes_0 = b'\xd2'
    list_0 = [none_price_1, none_money_0, bytes_0]
    some_money_0 = module_0.SomeMoney(*list_0)
    money_1 = some_money_0.add(money_0)
    money_2 = money_0.subtract(money_0)
    bool_1 = some_money_0.gte(money_2)
    money_3 = money_1.add(money_2)
    money_4 = money_0.subtract(money_3)
    bool_2 = money_1.as_boolean()
    bool_3 = money_3.as_boolean()
    bool_4 = money_4.__gt__(money_4)

def test_case_20():
    int_0 = None
    none_price_0 = module_0.NonePrice()
    price_0 = none_price_0.scalar_add(int_0)
    bytes_0 = b''
    list_0 = [bytes_0, bytes_0, bytes_0]
    decimal_0 = module_1.Decimal()
    str_0 = '\x0b&y^'
    some_price_0 = module_0.SomePrice(*list_0)
    str_1 = '0}ok/O\r{\r['
    int_1 = -4817
    currency_type_0 = module_2.CurrencyType.ALTERNATIVE
    currency_0 = module_2.Currency(str_0, str_1, int_1, currency_type_0, decimal_0, int_0)
    dict_0 = {}
    some_money_0 = module_0.SomeMoney(*list_0, **dict_0)
    money_0 = some_money_0.with_ccy(currency_0)
    money_1 = money_0.add(money_0)

def test_case_21():
    none_money_0 = module_0.NoneMoney()
    none_price_0 = module_0.NonePrice()
    price_0 = none_price_0.abs()
    price_1 = price_0.negative()
    none_price_1 = module_0.NonePrice()
    var_0 = price_0.__round__()
    bytes_0 = b''
    list_0 = [bytes_0, bytes_0, bytes_0]
    decimal_0 = module_1.Decimal()
    int_0 = 97
    str_0 = '4\\:RU#D\r%hi4bFW\x0buE=.'
    some_price_0 = module_0.SomePrice(*list_0)
    price_2 = some_price_0.subtract(price_1)
    str_1 = '0}ok/O\r{\r['
    currency_type_0 = module_2.CurrencyType.ALTERNATIVE
    currency_0 = module_2.Currency(str_0, str_1, int_0, currency_type_0, decimal_0, int_0)
    dict_0 = {}
    some_money_0 = module_0.SomeMoney(*list_0, **dict_0)
    bool_0 = some_price_0.gte(price_2)
    price_3 = price_1.__pos__()

def test_case_22():
    none_money_0 = module_0.NoneMoney()
    none_price_0 = module_0.NonePrice()
    price_0 = none_price_0.negative()
    price_1 = price_0.__abs__()
    var_0 = price_1.__round__()
    bytes_0 = b''
    list_0 = [bytes_0, bytes_0, bytes_0]
    str_0 = '4\\:RU#hD\r%hi4b~W\x0buE='
    decimal_0 = None
    some_price_0 = module_0.SomePrice(*list_0)
    price_2 = some_price_0.subtract(price_0)
    price_3 = some_price_0.add(price_2)
    str_1 = '0}ok/O\r{['
    some_money_0 = module_0.SomeMoney(*list_0)
    bool_0 = some_price_0.lte(price_1)
    int_0 = None
    currency_type_0 = module_2.CurrencyType.CRYPTO
    currency_0 = module_2.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
    int_1 = -816
    currency_1 = module_2.Currency(str_0, str_1, int_0, currency_type_0, decimal_0, int_1)
    price_4 = some_price_0.with_ccy(currency_1)

def test_case_23():
    none_money_0 = module_0.NoneMoney()
    money_0 = none_money_0.negative()
    var_0 = money_0.__round__()
    int_0 = None
    none_price_0 = module_0.NonePrice()
    price_0 = none_price_0.abs()
    price_1 = price_0.__abs__()
    none_price_1 = module_0.NonePrice()
    none_price_2 = module_0.NonePrice()
    price_2 = none_price_2.scalar_add(int_0)
    price_3 = price_1.negative()
    bytes_0 = b'\x91D\x16\xa9(\xb0\xc7`x\x08'
    list_0 = [bytes_0, bytes_0, bytes_0]
    decimal_0 = module_1.Decimal()
    str_0 = '4\\:RU#D\r%hi4bFW\x0buE=.'
    price_4 = none_price_2.positive()
    money_1 = money_0.with_qty(decimal_0)
    str_1 = '\n        Returns a list of code/name tuples.\n        '
    int_1 = -4817
    currency_type_0 = module_2.CurrencyType.ALTERNATIVE
    int_2 = -139
    currency_0 = module_2.Currency(str_0, str_1, int_1, currency_type_0, decimal_0, int_2)
    dict_0 = {}
    none_money_1 = module_0.NoneMoney(**dict_0)
    some_money_0 = module_0.SomeMoney(*list_0)
    money_2 = money_1.positive()
    money_3 = some_money_0.add(money_2)
    bool_0 = some_money_0.is_equal(some_money_0)
    money_4 = money_2.__sub__(money_2)
    money_5 = money_1.add(money_4)

def test_case_24():
    none_money_0 = module_0.NoneMoney()
    none_price_0 = module_0.NonePrice()
    price_0 = none_price_0.abs()
    price_1 = price_0.__abs__()
    money_0 = none_money_0.negative()
    bool_0 = none_price_0.lt(price_1)
    none_price_1 = module_0.NonePrice()
    var_0 = price_1.__round__()
    bytes_0 = b''
    list_0 = [bytes_0, bytes_0, bytes_0]
    str_0 = '4\\:RU#D\r%hi4bFW\x0buE='
    some_price_0 = module_0.SomePrice(*list_0)
    price_2 = some_price_0.subtract(price_0)
    price_3 = some_price_0.add(price_2)
    bool_1 = some_price_0.is_equal(str_0)

def test_case_25():
    none_money_0 = module_0.NoneMoney()
    money_0 = none_money_0.negative()
    var_0 = money_0.__round__()
    int_0 = None
    none_price_0 = module_0.NonePrice()
    price_0 = none_price_0.abs()
    price_1 = price_0.__abs__()
    bool_0 = none_price_0.lt(price_1)
    none_price_1 = module_0.NonePrice()
    price_2 = none_price_1.scalar_add(int_0)
    bool_1 = money_0.gt(money_0)
    var_1 = price_0.__round__()
    bytes_0 = b''
    list_0 = [bytes_0, bytes_0, bytes_0]
    decimal_0 = module_1.Decimal()
    some_price_0 = module_0.SomePrice(*list_0)
    price_3 = some_price_0.subtract(price_1)
    price_4 = none_price_1.abs()
    money_1 = money_0.with_qty(decimal_0)
    price_5 = some_price_0.subtract(price_2)
    price_6 = some_price_0.add(price_5)
    bool_2 = some_price_0.is_equal(price_6)

def test_case_26():
    none_money_0 = module_0.NoneMoney()
    none_money_1 = module_0.NoneMoney()
    money_0 = none_money_1.negative()
    var_0 = money_0.__round__()
    none_price_0 = module_0.NonePrice()
    price_0 = none_price_0.abs()
    price_1 = price_0.__abs__()
    bool_0 = none_price_0.lt(price_1)
    none_price_1 = module_0.NonePrice()
    bool_1 = none_money_1.gte(money_0)
    price_2 = price_0.__abs__()
    var_1 = price_2.__round__()
    var_2 = money_0.__round__()
    bytes_0 = b''
    list_0 = [bytes_0, bytes_0, bytes_0]
    date_0 = None
    price_3 = price_1.with_dov(date_0)
    price_4 = price_3.subtract(price_2)
    money_1 = none_money_1.negative()
    some_price_0 = module_0.SomePrice(*list_0)
    price_5 = some_price_0.subtract(price_2)
    price_6 = none_price_1.round()
    price_7 = some_price_0.add(price_5)
    bool_2 = price_7.lt(price_0)
    some_money_0 = module_0.SomeMoney(*list_0)
    money_2 = some_money_0.add(money_0)
    money_3 = some_money_0.subtract(money_0)

def test_case_27():
    none_money_0 = module_0.NoneMoney()
    none_money_1 = module_0.NoneMoney()
    money_0 = none_money_1.negative()
    var_0 = money_0.__round__()
    none_price_0 = module_0.NonePrice()
    price_0 = none_price_0.positive()
    price_1 = price_0.__abs__()
    bool_0 = none_price_0.lt(price_1)
    none_price_1 = module_0.NonePrice()
    price_2 = price_0.__abs__()
    var_1 = price_2.__round__()
    var_2 = money_0.__round__()
    bytes_0 = b''
    list_0 = [bytes_0, bytes_0, bytes_0]
    price_3 = price_1.subtract(price_2)
    money_1 = none_money_1.negative()
    some_price_0 = module_0.SomePrice(*list_0)
    price_4 = some_price_0.subtract(price_2)
    price_5 = none_price_1.round()
    price_6 = some_price_0.add(price_4)
    bool_1 = price_6.lt(price_0)
    some_money_0 = module_0.SomeMoney(*list_0)
    str_0 = '-Gn$\x0bDz'
    price_7 = some_price_0.floor_divide(str_0)

def test_case_28():
    none_money_0 = module_0.NoneMoney()
    money_0 = none_money_0.negative()
    bytes_0 = b''
    list_0 = [bytes_0, bytes_0, bytes_0]
    some_price_0 = module_0.SomePrice(*list_0)
    some_money_0 = module_0.SomeMoney(*list_0)
    money_1 = some_money_0.add(money_0)
    money_2 = some_money_0.add(money_1)
    bool_0 = some_money_0.lte(money_1)

def test_case_29():
    money_0 = module_0.Money()
    bool_0 = money_0.__bool__()
    money_1 = money_0.__add__(money_0)

def test_case_30():
    none_money_0 = module_0.NoneMoney()
    money_0 = none_money_0.negative()
    bytes_0 = b'\xa9\xca\xb1gD|\x01\xc9*aX\xacn\xc4'
    list_0 = [bytes_0, bytes_0, bytes_0]
    some_money_0 = module_0.SomeMoney(*list_0)
    bool_0 = some_money_0.gt(money_0)
    some_price_0 = module_0.SomePrice(*list_0)
    money_1 = some_money_0.add(money_0)
    bool_1 = some_money_0.gte(money_1)
    bool_2 = money_1.__le__(money_0)
    bool_3 = some_money_0.lte(money_1)
    some_money_1 = module_0.SomeMoney(*list_0)
    some_money_2 = module_0.SomeMoney(*list_0)
    money_2 = some_money_2.add(money_0)
    bool_4 = some_money_2.lte(money_2)

def test_case_31():
    var_0 = None
    money_0 = module_0.Money()
    money_1 = money_0.__floordiv__(var_0)
    str_0 = '[z Cj'
    str_1 = '|x0V8\\['
    int_0 = None
    currency_type_0 = module_2.CurrencyType.MONEY
    decimal_0 = None
    currency_0 = module_2.Currency(str_0, str_1, int_0, currency_type_0, decimal_0, int_0)

def test_case_32():
    none_money_0 = module_0.NoneMoney()
    money_0 = none_money_0.negative()
    bytes_0 = b'\xa9\xca\xb1gD|\x01\xc9*aX\xacn\xc4'
    list_0 = [bytes_0, bytes_0, bytes_0]
    some_money_0 = module_0.SomeMoney(*list_0)
    bool_0 = some_money_0.gt(money_0)
    decimal_0 = None
    some_price_0 = module_0.SomePrice(*list_0)
    str_0 = '}ok/O\r{['
    some_money_1 = module_0.SomeMoney(*list_0)
    str_1 = "l'IdErPg#Un"
    int_0 = None
    currency_type_0 = module_2.CurrencyType.ALTERNATIVE
    int_1 = -760
    currency_0 = module_2.Currency(str_0, str_1, int_0, currency_type_0, decimal_0, int_1)
    money_1 = some_money_1.add(money_0)

def test_case_33():
    none_money_0 = module_0.NoneMoney()
    none_price_0 = module_0.NonePrice()
    price_0 = none_price_0.negative()
    money_0 = none_money_0.negative()
    var_0 = price_0.__round__()
    bytes_0 = b''
    list_0 = [none_price_0, none_money_0, bytes_0]
    some_price_0 = module_0.SomePrice(*list_0)
    price_1 = some_price_0.subtract(price_0)
    some_money_0 = module_0.SomeMoney(*list_0)
    bool_0 = price_0.gt(price_0)
    money_1 = some_money_0.add(money_0)
    bool_1 = money_0.lt(money_0)
    str_0 = 'MY]xz'
    price_2 = some_price_0.divide(str_0)