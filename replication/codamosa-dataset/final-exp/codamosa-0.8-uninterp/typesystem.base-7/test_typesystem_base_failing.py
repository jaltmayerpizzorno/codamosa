# Automatically generated by Pynguin.
import typesystem.base as module_0

def test_case_0():
    try:
        str_0 = "\\@'=0R&\r"
        message_0 = module_0.Message(text=str_0, key=str_0)
        list_0 = [message_0, message_0, message_0, message_0]
        validation_error_0 = module_0.ValidationError(messages=list_0)
        bool_0 = message_0.__eq__(str_0)
        bool_1 = message_0.__eq__(message_0)
        parse_error_0 = module_0.ParseError(code=validation_error_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = "\\@'=0R&\r"
        message_0 = module_0.Message(text=str_0, key=str_0)
        list_0 = [message_0, message_0, message_0, message_0]
        validation_error_0 = module_0.ValidationError(messages=list_0)
        parse_error_0 = module_0.ParseError(code=validation_error_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'S1'
        validation_error_0 = module_0.ValidationError(code=str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        validation_result_0 = module_0.ValidationResult()
        str_0 = 'K2cpH$#}'
        set_0 = set()
        message_0 = module_0.Message(text=str_0, code=str_0, position=set_0)
        base_error_0 = module_0.BaseError(text=message_0, code=str_0)
        var_0 = base_error_0.__getitem__(validation_result_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = ':S`h`'
        validation_error_0 = module_0.ValidationError(text=str_0, key=str_0)
        base_error_0 = module_0.BaseError(text=str_0)
        base_error_1 = module_0.BaseError(text=str_0, code=str_0, position=str_0)
        int_0 = base_error_1.__hash__()
        str_1 = base_error_0.__repr__()
        validation_result_0 = module_0.ValidationResult()
        int_1 = -1876
        var_0 = base_error_0.__getitem__(int_1)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = None
        message_0 = module_0.Message(text=str_0, key=str_0)
        list_0 = [message_0, message_0, message_0, message_0]
        base_error_0 = module_0.BaseError(messages=list_0)
        str_1 = base_error_0.__str__()
        int_0 = -2593
        position_0 = module_0.Position(int_0, int_0, int_0)
        message_1 = module_0.Message(text=str_0, start_position=position_0)
        bool_0 = message_1.__eq__(message_1)
        bytes_0 = b'\xaeL\xa0\xcc\xa6\x98I\xb8\x88=MD\x1a\x14\x98\x95Y\xc9'
        base_error_1 = module_0.BaseError(code=str_0, messages=bytes_0)
    except BaseException:
        pass

def test_case_6():
    try:
        validation_result_0 = module_0.ValidationResult()
        bool_0 = validation_result_0.__bool__()
        str_0 = ','
        optional_0 = None
        iterator_0 = validation_result_0.__iter__()
        int_0 = 2
        iterator_1 = validation_result_0.__iter__()
        str_1 = validation_result_0.__repr__()
        base_error_0 = module_0.BaseError(code=str_0, position=optional_0, messages=int_0)
    except BaseException:
        pass

def test_case_7():
    try:
        validation_result_0 = module_0.ValidationResult()
        str_0 = validation_result_0.__repr__()
        int_0 = 2367
        position_0 = module_0.Position(int_0, int_0, int_0)
        base_error_0 = module_0.BaseError(position=position_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = '_\x0bmy`kRzMC'
        str_1 = 'y4_NFz9\t'
        message_0 = module_0.Message(text=str_0, key=str_0, index=str_1)
    except BaseException:
        pass

def test_case_9():
    try:
        int_0 = 4
        int_1 = 839
        str_0 = 'W!Z'
        int_2 = -2350
        int_3 = -69
        position_0 = module_0.Position(int_1, int_2, int_3)
        message_0 = module_0.Message(text=str_0, key=int_0, position=position_0, start_position=position_0)
    except BaseException:
        pass

def test_case_10():
    try:
        validation_result_0 = module_0.ValidationResult()
        str_0 = '~0Q_*\x0bRTu7! .'
        int_0 = 914
        base_error_0 = module_0.BaseError(code=str_0, messages=int_0)
    except BaseException:
        pass

def test_case_11():
    try:
        int_0 = 1869
        validation_result_0 = module_0.ValidationResult(error=int_0)
        str_0 = None
        str_1 = '-))9I'
        list_0 = []
        base_error_0 = module_0.BaseError(text=str_0, key=str_1, messages=list_0)
    except BaseException:
        pass

def test_case_12():
    try:
        int_0 = 2
        int_1 = 197
        int_2 = -1921
        position_0 = module_0.Position(int_0, int_1, int_2)
        str_0 = 'ECpL#WiL1%unRk['
        message_0 = module_0.Message(text=str_0)
        list_0 = [message_0, message_0, message_0, message_0]
        base_error_0 = module_0.BaseError(position=position_0, messages=list_0)
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = 'datetime'
        int_0 = -1316
        int_1 = -336
        base_error_0 = module_0.BaseError(text=str_0)
        int_2 = 5165
        int_3 = -2744
        position_0 = module_0.Position(int_3, int_1, int_2)
        str_1 = base_error_0.__str__()
        message_0 = module_0.Message(text=str_0, start_position=position_0)
        bool_0 = message_0.__eq__(int_0)
        str_2 = '8qx#\\#Zr,`Ta7kcfo\\'
        bool_1 = position_0.__eq__(str_2)
        int_4 = 2802
        int_5 = -2401
        int_6 = 1
        position_1 = module_0.Position(int_4, int_5, int_6)
        str_3 = None
        message_1 = module_0.Message(text=str_1, code=str_0, key=str_3)
        str_4 = message_1.__repr__()
        iterator_0 = base_error_0.__iter__()
        validation_error_0 = module_0.ValidationError(text=str_0, key=int_6, messages=iterator_0)
    except BaseException:
        pass

def test_case_14():
    try:
        str_0 = ':S`h`'
        validation_error_0 = module_0.ValidationError(text=str_0, key=str_0)
        int_0 = 1019
        validation_result_0 = module_0.ValidationResult(error=validation_error_0)
        str_1 = validation_result_0.__repr__()
        base_error_0 = module_0.BaseError(text=str_0)
        str_2 = base_error_0.__repr__()
        validation_result_1 = module_0.ValidationResult()
        int_1 = 861
        position_0 = module_0.Position(int_0, int_0, int_1)
        str_3 = position_0.__repr__()
        base_error_1 = module_0.BaseError(text=str_3, position=position_0)
        bool_0 = base_error_1.__eq__(int_1)
        str_4 = position_0.__repr__()
        int_2 = -1876
        bool_1 = base_error_0.__eq__(str_4)
        bool_2 = position_0.__eq__(int_1)
        str_5 = position_0.__repr__()
        message_0 = module_0.Message(text=str_4, index=str_3)
        var_0 = base_error_0.__getitem__(int_2)
    except BaseException:
        pass

def test_case_15():
    try:
        str_0 = 'datetime'
        int_0 = -1316
        int_1 = -336
        base_error_0 = module_0.BaseError(text=str_0)
        int_2 = 5165
        int_3 = -2744
        position_0 = module_0.Position(int_2, int_0, int_3)
        str_1 = base_error_0.__str__()
        str_2 = '-\x0b4)=+|~V'
        int_4 = 2
        message_0 = module_0.Message(text=str_2, code=str_2, key=int_4)
        bool_0 = message_0.__eq__(position_0)
        int_5 = base_error_0.__hash__()
        bool_1 = position_0.__eq__(position_0)
        list_0 = base_error_0.messages(add_prefix=int_2)
        int_6 = 4
        int_7 = -1343
        position_1 = module_0.Position(int_6, int_1, int_7)
        message_1 = module_0.Message(text=str_2, position=position_1, end_position=position_1)
    except BaseException:
        pass

def test_case_16():
    try:
        str_0 = 'datetime'
        int_0 = -1316
        base_error_0 = module_0.BaseError(text=str_0)
        set_0 = {int_0, int_0}
        bytes_0 = b'\xf1\x14\x13\x89J\x13'
        validation_result_0 = module_0.ValidationResult(value=set_0, error=bytes_0)
    except BaseException:
        pass

def test_case_17():
    try:
        str_0 = 'datetime'
        int_0 = -1316
        int_1 = -336
        base_error_0 = module_0.BaseError(text=str_0)
        int_2 = 5165
        int_3 = -2744
        position_0 = module_0.Position(int_2, int_0, int_3)
        str_1 = base_error_0.__str__()
        int_4 = -1464
        position_1 = module_0.Position(int_4, int_3, int_2)
        str_2 = base_error_0.__str__()
        str_3 = 'choice'
        int_5 = -2979
        position_2 = module_0.Position(int_1, int_0, int_5)
        message_0 = module_0.Message(text=str_3, end_position=position_2)
        bool_0 = message_0.__eq__(int_4)
        str_4 = message_0.__repr__()
        list_0 = []
        base_error_1 = module_0.BaseError(messages=list_0)
    except BaseException:
        pass

def test_case_18():
    try:
        str_0 = 'code1'
        str_1 = 'def'
        message_0 = module_0.Message(text=str_0, code=str_0, key=str_1)
        message_1 = module_0.Message(text=str_0, code=str_0, key=str_1)
        message_2 = module_0.Message(text=str_0, code=str_0)
        bool_0 = message_0.__eq__(message_2)
        message_3 = module_0.Message(text=str_1, key=str_1)
        bool_1 = message_0.__eq__(message_3)
        bool_2 = message_1.__eq__(str_1)
        message_4 = module_0.Message(code=str_0, key=str_1)
    except BaseException:
        pass

def test_case_19():
    try:
        int_0 = -336
        str_0 = 'S0!l@/zxSDm`W%'
        int_1 = -628
        int_2 = 6
        int_3 = -3133
        position_0 = module_0.Position(int_1, int_2, int_3)
        message_0 = module_0.Message(text=str_0, key=str_0, position=position_0)
        list_0 = [message_0, message_0, message_0, message_0]
        base_error_0 = module_0.BaseError(messages=list_0)
        iterator_0 = base_error_0.__iter__()
        int_4 = 5165
        int_5 = -2744
        position_1 = module_0.Position(int_0, int_0, int_5)
        str_1 = base_error_0.__repr__()
        str_2 = base_error_0.__str__()
        bool_0 = base_error_0.__eq__(int_5)
        str_3 = '-\x0b4)=+|~V'
        str_4 = '\t<]K\ry'
        message_1 = module_0.Message(text=str_4, key=int_4, start_position=position_1, end_position=position_0)
        message_2 = module_0.Message(text=str_0, code=str_3, key=str_2)
        bool_1 = message_1.__eq__(int_4)
        int_6 = base_error_0.__hash__()
        float_0 = -817.948824
        var_0 = base_error_0.__getitem__(float_0)
    except BaseException:
        pass

def test_case_20():
    try:
        str_0 = 'abc'
        str_1 = 'code1'
        str_2 = 'def'
        message_0 = module_0.Message(text=str_0, code=str_1, key=str_2)
        message_1 = module_0.Message(text=str_0, code=str_1, key=str_2)
        bool_0 = message_0.__eq__(message_1)
        message_2 = module_0.Message(text=str_0, code=str_1)
        bool_1 = message_0.__eq__(message_2)
        message_3 = module_0.Message(text=str_0, key=str_2)
        bool_2 = message_0.__eq__(message_3)
        message_4 = module_0.Message(code=str_1, key=str_2)
    except BaseException:
        pass