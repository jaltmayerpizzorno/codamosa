# Automatically generated by Pynguin.
import ansible.module_utils.connection as module_0

def test_case_0():
    try:
        str_0 = '\x0bJM#dg]WB'
        connection_0 = None
        var_0 = module_0.write_to_file_descriptor(str_0, connection_0)
    except BaseException:
        pass

def test_case_1():
    try:
        tuple_0 = None
        int_0 = 1138
        var_0 = module_0.send_data(tuple_0, int_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'el'
        tuple_0 = (str_0,)
        set_0 = {tuple_0, tuple_0, str_0}
        str_1 = '*(Mn\t0R*U\x0clDt8^|\x0c:-;'
        list_0 = [set_0, str_1, str_1, tuple_0]
        str_2 = 'uv!\t91!B\x0bK4J<Yw"s\x0b'
        str_3 = 'ansible.modules.%s'
        dict_0 = {str_2: set_0, str_1: str_2, str_2: str_1, str_3: str_1}
        var_0 = module_0.send_data(list_0, dict_0)
    except BaseException:
        pass

def test_case_3():
    try:
        set_0 = None
        var_0 = module_0.recv_data(set_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = "Collections requirement entry should contain the key 'name' if it's requested from a Galaxy-like index server."
        connection_0 = module_0.Connection(str_0)
        str_1 = 'br\tDG5bV\n'
        tuple_0 = None
        var_0 = module_0.exec_command(str_1, tuple_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = '/usr/local/sbin'
        connection_0 = module_0.Connection(str_0)
        var_0 = module_0.recv_data(connection_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = None
        connection_0 = module_0.Connection(str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = '/tmp/test'
        connection_0 = module_0.Connection(str_0)
        var_0 = connection_0.__rpc__(str_0, *str_0, **connection_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = '/usr/local/sbin'
        connection_0 = module_0.Connection(str_0)
        var_0 = connection_0.__rpc__(connection_0)
    except BaseException:
        pass

def test_case_9():
    try:
        dict_0 = {}
        var_0 = module_0.request_builder(dict_0)
        dict_1 = {}
        str_0 = 'D\x0cM4\x0b>od2e,;(E6f\x0ceB'
        connection_0 = module_0.Connection(str_0)
        var_1 = connection_0.__getattr__(dict_1)
    except BaseException:
        pass

def test_case_10():
    try:
        bool_0 = False
        connection_0 = module_0.Connection(bool_0)
        var_0 = module_0.recv_data(connection_0)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = '/usr/local/sbin'
        bool_0 = True
        partial_0 = None
        var_0 = module_0.write_to_file_descriptor(bool_0, partial_0)
        connection_0 = module_0.Connection(str_0)
        var_1 = module_0.recv_data(connection_0)
    except BaseException:
        pass