# Automatically generated by Pynguin.
import typesystem.tokenize.tokenize_yaml as module_0

def test_case_0():
    try:
        str_0 = '[2h;Gr!=Z%PL3Yl'
        token_0 = module_0.tokenize_yaml(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = ''
        token_0 = module_0.tokenize_yaml(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b'\xa6_m\x98v\x97\x83(\xf8\x1a\xbe\xa0\x90{'
        token_0 = module_0.tokenize_yaml(bytes_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'\x0f \xccOn\x0e'
        complex_0 = None
        any_0 = module_0.validate_yaml(bytes_0, complex_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = ';Kms[a5U)M'
        field_0 = None
        any_0 = module_0.validate_yaml(str_0, field_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = "g>{F{'Y0_[INJH\x0bme$"
        token_0 = module_0.tokenize_yaml(str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = '---\nnote: This is a sample\nparameterM:\n    string: abc\n    number: 3.9\n    boeleaB: true\n    blank:\n    null: null\n    integer: 2\n'
        validation_error_0 = None
        any_0 = module_0.validate_yaml(str_0, validation_error_0)
    except BaseException:
        pass