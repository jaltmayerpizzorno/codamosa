# Automatically generated by Pynguin.
import sanic.utils as module_0
import pathlib as module_1

def test_case_0():
    try:
        str_0 = 'gF@eXHc!>5\nRp'
        bool_0 = module_0.str_to_bool(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '$RkD<bE]TdpFu=J)'
        var_0 = module_0.load_module_from_file_location(str_0, str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '*!B\x0bo.\\I'
        var_0 = module_0.load_module_from_file_location(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = None
        var_0 = module_0.load_module_from_file_location(str_0, str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'httponly'
        var_0 = module_0.load_module_from_file_location(str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        bytes_0 = b'\xd7j>('
        var_0 = module_0.load_module_from_file_location(bytes_0)
    except BaseException:
        pass

def test_case_6():
    try:
        path_0 = module_1.Path()
        var_0 = module_0.load_module_from_file_location(path_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'tests/app.py'
        var_0 = module_0.load_module_from_file_location(str_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = 'y'
        bool_0 = module_0.str_to_bool(str_0)
        str_1 = 'yes'
        bool_1 = module_0.str_to_bool(str_1)
        str_2 = 'yup'
        bool_2 = module_0.str_to_bool(str_2)
        str_3 = 'on'
        bool_3 = module_0.str_to_bool(str_3)
        str_4 = 'True'
        bool_4 = module_0.str_to_bool(str_4)
        str_5 = '1'
        bool_5 = module_0.str_to_bool(str_5)
        str_6 = 'n'
        bool_6 = module_0.str_to_bool(str_6)
        str_7 = 'no'
        bool_7 = module_0.str_to_bool(str_7)
        str_8 = 'nop'
        bool_8 = module_0.str_to_bool(str_8)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'tests/${test_test_test}/app.py'
        var_0 = module_0.load_module_from_file_location(str_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = '${PWD}/docker/docker-compose.yml'
        var_0 = module_0.load_module_from_file_location(str_0)
    except BaseException:
        pass