# Automatically generated by Pynguin.
import typesystem.schemas as module_0
import typesystem.fields as module_1

def test_case_0():
    pass

def test_case_1():
    schema_definitions_0 = module_0.SchemaDefinitions()

def test_case_2():
    str_0 = "EK_xr'9n?Y7g"
    dict_0 = {str_0: str_0}
    schema_definitions_0 = module_0.SchemaDefinitions(**dict_0)
    iterator_0 = schema_definitions_0.__iter__()

def test_case_3():
    schema_definitions_0 = module_0.SchemaDefinitions()
    str_0 = '9]\x0c\tB7'
    field_0 = module_1.Field(description=str_0)
    module_0.set_definitions(field_0, schema_definitions_0)

def test_case_4():
    schema_0 = module_0.Schema()

def test_case_5():
    list_0 = None
    list_1 = [list_0]
    schema_0 = module_0.Schema(*list_1)
    int_0 = schema_0.__len__()

def test_case_6():
    schema_0 = module_0.Schema()
    str_0 = schema_0.__repr__()

def test_case_7():
    schema_0 = module_0.Schema()
    bool_0 = schema_0.__eq__(schema_0)

def test_case_8():
    schema_0 = module_0.Schema()
    int_0 = schema_0.__len__()
    int_1 = schema_0.__len__()
    bool_0 = schema_0.__eq__(int_0)

def test_case_9():
    schema_0 = module_0.Schema()
    int_0 = schema_0.__len__()

def test_case_10():
    str_0 = 'W='
    reference_0 = module_0.Reference(str_0)
    schema_0 = module_0.Schema()
    str_1 = schema_0.__repr__()

def test_case_11():
    dict_0 = {}
    schema_0 = module_0.Schema(**dict_0)
    str_0 = 'c:'
    reference_0 = module_0.Reference(str_0)
    str_1 = schema_0.__repr__()
    any_0 = reference_0.serialize(schema_0)
    schema_definitions_0 = module_0.SchemaDefinitions()

def test_case_12():
    schema_0 = module_0.Schema()
    list_0 = [schema_0]
    schema_definitions_0 = module_0.SchemaDefinitions(*list_0)

def test_case_13():
    str_0 = 'n5\x0b\tB'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    list_0 = [dict_0]
    schema_0 = module_0.Schema(*list_0)
    str_1 = schema_0.__repr__()

def test_case_14():
    schema_definitions_0 = module_0.SchemaDefinitions()
    str_0 = 'A'
    reference_0 = module_0.Reference(str_0)
    schema_0 = module_0.Schema()
    str_1 = schema_0.__repr__()
    array_0 = module_1.Array(reference_0)
    module_0.set_definitions(array_0, schema_definitions_0)
    str_2 = 'a'
    reference_1 = {str_2: reference_0}
    object_0 = module_1.Object(properties=reference_1)
    module_0.set_definitions(object_0, schema_definitions_0)

def test_case_15():
    schema_definitions_0 = module_0.SchemaDefinitions()
    str_0 = 'A'
    reference_0 = module_0.Reference(str_0)
    array_0 = module_1.Array(reference_0)
    module_0.set_definitions(array_0, schema_definitions_0)
    object_0 = module_1.Object(properties=reference_0)