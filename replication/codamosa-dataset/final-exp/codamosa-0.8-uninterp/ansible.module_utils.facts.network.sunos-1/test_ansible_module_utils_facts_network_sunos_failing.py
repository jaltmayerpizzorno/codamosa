# Automatically generated by Pynguin.
import ansible.module_utils.facts.network.sunos as module_0

def test_case_0():
    try:
        bytes_0 = b'\x92\x9e\xc7\xd0]\x84\xce\\'
        str_0 = ')EB-\t7MObRv\n?;'
        bytes_1 = b'gk\xdb\x7fTu\x95m\xec\xf2d\xc3\xec:'
        sun_o_s_network_0 = module_0.SunOSNetwork(str_0, bytes_1)
        var_0 = sun_o_s_network_0.get_interfaces_info(bytes_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '\x0becST{]1zda'
        sun_o_s_network_collector_0 = module_0.SunOSNetworkCollector(str_0)
        int_0 = 296
        list_0 = [sun_o_s_network_collector_0, sun_o_s_network_collector_0, str_0, int_0]
        str_1 = 'l(@TszDLLBo+zI'
        bytes_0 = b'\x85nl\x076Z\xfa3-'
        sun_o_s_network_0 = module_0.SunOSNetwork(bytes_0, sun_o_s_network_collector_0)
        var_0 = sun_o_s_network_0.parse_interface_line(str_0, list_0, str_1)
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b'\x83\tS\x95/\x8d\x10\xed\xbe\xf0\xfb\x84\xc2\x8e\xe9k\xaa'
        set_0 = set()
        list_0 = [bytes_0, bytes_0]
        bool_0 = False
        float_0 = -2358.74
        sun_o_s_network_0 = module_0.SunOSNetwork(bool_0, float_0)
        var_0 = sun_o_s_network_0.parse_ether_line(bytes_0, set_0, list_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '["l`FsAO![fU}'
        str_1 = '^li:??F'
        bytes_0 = b'\x84~\x04\xb8\xdbG\x83,\x86\xc8/arIm'
        set_0 = {bytes_0, bytes_0}
        sun_o_s_network_0 = module_0.SunOSNetwork(set_0)
        int_0 = -466
        tuple_0 = (set_0,)
        tuple_1 = (sun_o_s_network_0, int_0, tuple_0, tuple_0)
        float_0 = -836.9458
        sun_o_s_network_1 = module_0.SunOSNetwork(float_0)
        var_0 = sun_o_s_network_1.parse_interface_line(str_1, bytes_0, tuple_1)
        bytes_1 = b'V0\x99E\xefX\xa0\xb5\xd6R4\x17'
        sun_o_s_network_2 = module_0.SunOSNetwork(sun_o_s_network_0, str_0)
        sun_o_s_network_3 = module_0.SunOSNetwork(int_0)
        str_2 = ',:'
        var_1 = sun_o_s_network_3.parse_ether_line(str_2, bytes_1, set_0)
    except BaseException:
        pass