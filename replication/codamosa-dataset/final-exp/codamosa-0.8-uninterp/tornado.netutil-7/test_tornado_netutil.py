# Automatically generated by Pynguin.
import tornado.netutil as module_0
import ssl as module_1
import socket as module_2

def test_case_0():
    pass

def test_case_1():
    str_0 = 'oEi%vz\x0bISsViW7~'
    socket_0 = module_0.bind_unix_socket(str_0)

def test_case_2():
    str_0 = 'oEi%Dvz\x0bISsViW7~'
    socket_0 = module_0.bind_unix_socket(str_0)
    s_s_l_context_0 = module_1.SSLContext()
    s_s_l_socket_0 = module_0.ssl_wrap_socket(socket_0, s_s_l_context_0)

def test_case_3():
    str_0 = 'Wagn^-Y\r|P^QJ\r_'
    bool_0 = module_0.is_valid_ip(str_0)

def test_case_4():
    str_0 = '9;U'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    s_s_l_context_0 = module_1.SSLContext(**dict_0)
    s_s_l_context_1 = module_0.ssl_options_to_context(s_s_l_context_0)
    s_s_l_context_2 = module_0.ssl_options_to_context(s_s_l_context_0)
    resolver_0 = module_0.Resolver()
    int_0 = -4919
    address_family_0 = module_2.AddressFamily.AF_ALG
    awaitable_0 = resolver_0.resolve(str_0, int_0, address_family_0)
    resolver_0.close()
    bool_0 = module_0.is_valid_ip(str_0)

def test_case_5():
    dict_0 = {}
    s_s_l_context_0 = module_0.ssl_options_to_context(dict_0)

def test_case_6():
    str_0 = ' EY2|Dh7o9qG'
    bool_0 = module_0.is_valid_ip(str_0)
    s_s_l_context_0 = module_1.SSLContext()
    s_s_l_context_1 = module_0.ssl_options_to_context(s_s_l_context_0)

def test_case_7():
    str_0 = 'oEi%vz\x0bISsViW7~'
    socket_0 = module_0.bind_unix_socket(str_0)
    s_s_l_context_0 = module_1.SSLContext()
    s_s_l_socket_0 = module_0.ssl_wrap_socket(socket_0, s_s_l_context_0)

def test_case_8():
    int_0 = 2023
    list_0 = module_0.bind_sockets(int_0)

def test_case_9():
    str_0 = '127.0.0.1'
    bool_0 = module_0.is_valid_ip(str_0)
    var_0 = print(bool_0)
    str_1 = '127.0.0.1.2'
    bool_1 = module_0.is_valid_ip(str_1)
    var_1 = print(bool_1)
    str_2 = '127.0'
    bool_2 = module_0.is_valid_ip(str_2)
    var_2 = print(bool_2)
    str_3 = '127.0.0.1:123'
    bool_3 = module_0.is_valid_ip(str_3)
    var_3 = print(bool_3)
    str_4 = ''
    bool_4 = module_0.is_valid_ip(str_4)
    var_4 = print(bool_4)
    var_5 = None
    bool_5 = module_0.is_valid_ip(var_5)
    var_6 = print(bool_5)
    str_5 = '\x00'
    bool_6 = module_0.is_valid_ip(str_5)
    var_7 = print(bool_6)
    str_6 = '::1'
    bool_7 = module_0.is_valid_ip(str_6)
    var_8 = print(bool_7)
    bool_8 = module_0.is_valid_ip(str_6)
    var_9 = print(bool_8)
    str_7 = ':::'
    bool_9 = module_0.is_valid_ip(str_7)
    var_10 = print(bool_9)