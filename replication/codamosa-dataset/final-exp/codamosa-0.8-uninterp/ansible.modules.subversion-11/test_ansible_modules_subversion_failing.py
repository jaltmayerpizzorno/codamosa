# Automatically generated by Pynguin.
import ansible.modules.subversion as module_0

def test_case_0():
    try:
        str_0 = '.'
        subversion_0 = module_0.Subversion(str_0, str_0, str_0, str_0, str_0, str_0, str_0, str_0)
        var_0 = subversion_0.update()
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = ''
        subversion_0 = module_0.Subversion(str_0, str_0, str_0, str_0, str_0, str_0, str_0, str_0)
        var_0 = subversion_0.update()
    except BaseException:
        pass

def test_case_2():
    try:
        float_0 = -83.4732
        list_0 = [float_0]
        list_1 = []
        bool_0 = False
        bytes_0 = b's\xd4$J'
        set_0 = set()
        int_0 = 1185
        subversion_0 = module_0.Subversion(float_0, list_0, list_1, bool_0, bytes_0, set_0, int_0, float_0)
        var_0 = subversion_0.is_svn_repo()
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = "Y'"
        subversion_0 = module_0.Subversion(str_0, str_0, str_0, str_0, str_0, str_0, str_0, str_0)
        var_0 = subversion_0.checkout()
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = "Y'"
        subversion_0 = module_0.Subversion(str_0, str_0, str_0, str_0, str_0, str_0, str_0, str_0)
        var_0 = subversion_0.export()
    except BaseException:
        pass

def test_case_5():
    try:
        bytes_0 = b'\xed\xd5\xd3\x84\\5\xf6t\x1b\xbb\x8f\xedW(\xb0\xc1'
        int_0 = -455
        bool_0 = True
        float_0 = 104.1971110178841
        subversion_0 = module_0.Subversion(int_0, int_0, int_0, bool_0, float_0, bytes_0, int_0, int_0)
        var_0 = subversion_0.switch()
    except BaseException:
        pass

def test_case_6():
    try:
        bool_0 = True
        list_0 = [bool_0, bool_0]
        str_0 = '\x0bD'
        bytes_0 = b'\x8c'
        bytes_1 = b'$\x84\t6:\xa8j+='
        dict_0 = {bytes_0: bool_0, bool_0: str_0, bool_0: bytes_0}
        str_1 = '/UXAOgyA$\t~'
        str_2 = ",fy|g3S\x0bH^]!@]4' <"
        str_3 = ';\n+7{EpL3i}Bq*Y1v0}D'
        tuple_0 = ()
        set_0 = {tuple_0, str_1, str_3}
        subversion_0 = module_0.Subversion(bytes_1, dict_0, str_1, str_2, list_0, str_3, set_0, set_0)
        var_0 = subversion_0.revert()
    except BaseException:
        pass

def test_case_7():
    try:
        bytes_0 = b'\x0e]\xb9\x92T\xf3\xda'
        str_0 = '__main__'
        float_0 = 87.6158
        set_0 = {float_0, bytes_0, bytes_0, float_0}
        dict_0 = {bytes_0: bytes_0}
        int_0 = 743
        bool_0 = True
        bool_1 = False
        subversion_0 = module_0.Subversion(bytes_0, str_0, str_0, set_0, dict_0, int_0, bool_0, bool_1)
        var_0 = subversion_0.needs_update()
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = 'u8x{4hBn\n!Z\rM3r7i'
        str_1 = '__main__'
        bytes_0 = None
        tuple_0 = (str_0, str_1, bytes_0)
        str_2 = 'Z.?Q(4qT)wmmi'
        float_0 = -927.20406
        str_3 = 'eK^?N_@n$!pGj@Z.$'
        bytes_1 = b'\xf2\x0f,'
        int_0 = 534
        str_4 = 'ansible.modules.subversion'
        dict_0 = {float_0: str_3, str_3: str_4, tuple_0: int_0}
        str_5 = '%DBb(^nhFe~~v'
        list_0 = [str_3, dict_0, bytes_0]
        subversion_0 = module_0.Subversion(str_4, dict_0, str_5, int_0, list_0, str_1, bytes_1, list_0)
        subversion_1 = module_0.Subversion(tuple_0, str_2, float_0, str_3, bytes_1, int_0, subversion_0, int_0)
        var_0 = subversion_1.get_remote_revision()
    except BaseException:
        pass

def test_case_9():
    try:
        float_0 = -83.4732
        list_0 = [float_0]
        list_1 = []
        bool_0 = False
        bytes_0 = b's\xd4$J'
        set_0 = set()
        int_0 = 1185
        float_1 = 60.0
        subversion_0 = module_0.Subversion(float_0, list_0, list_1, bool_0, bytes_0, set_0, int_0, float_1)
        var_0 = subversion_0.has_local_mods()
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = '&.'
        subversion_0 = module_0.Subversion(str_0, str_0, str_0, str_0, str_0, str_0, str_0, str_0)
        var_0 = subversion_0.export(str_0)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = '__main__'
        subversion_0 = module_0.Subversion(str_0, str_0, str_0, str_0, str_0, str_0, str_0, str_0)
        var_0 = subversion_0.checkout(subversion_0)
    except BaseException:
        pass