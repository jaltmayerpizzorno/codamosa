# Automatically generated by Pynguin.
import isort.exceptions as module_0
import builtins as module_1

def test_case_0():
    str_0 = 'Rs8\\M@3_ln\t=pGlc\t>'
    str_1 = 'p!E6Hg9[1OEeF\tEA\t'
    file_skipped_0 = module_0.FileSkipped(str_0, str_1)

def test_case_1():
    type_0 = None
    literal_sort_type_mismatch_0 = module_0.LiteralSortTypeMismatch(type_0, type_0)
    str_0 = '.6n^|.XL'
    invalid_settings_path_0 = module_0.InvalidSettingsPath(str_0)
    invalid_settings_path_1 = module_0.InvalidSettingsPath(str_0)

def test_case_2():
    str_0 = 'lddM.R\x0cM6'
    missing_section_0 = module_0.MissingSection(str_0, str_0)
    str_1 = 'fqL%9M2)XR'
    file_skip_setting_0 = module_0.FileSkipSetting(str_1)
    file_skip_setting_1 = module_0.FileSkipSetting(str_1)
    str_2 = ''
    existing_syntax_errors_0 = module_0.ExistingSyntaxErrors(str_2)
    str_3 = None
    missing_section_1 = module_0.MissingSection(str_3, str_3)

def test_case_3():
    str_0 = 'ast'
    file_skip_setting_0 = module_0.FileSkipSetting(str_0)
    str_1 = None
    introduced_syntax_errors_0 = module_0.IntroducedSyntaxErrors(str_1)
    str_2 = 'yzTWld@"'
    str_3 = '6CO4A)xWuOK"P'
    missing_section_0 = module_0.MissingSection(str_2, str_3)
    str_4 = '6+ffH>AUkz^O'
    existing_syntax_errors_0 = module_0.ExistingSyntaxErrors(str_4)

def test_case_4():
    i_sort_error_0 = module_0.ISortError()
    str_0 = 'dis'
    str_1 = 'WC)O?p*'
    invalid_settings_path_0 = module_0.InvalidSettingsPath(str_1)
    assignments_format_mismatch_0 = module_0.AssignmentsFormatMismatch(str_0)
    unsupported_encoding_0 = module_0.UnsupportedEncoding(str_0)
    file_skip_setting_0 = module_0.FileSkipSetting(str_0)
    formatting_plugin_does_not_exist_0 = module_0.FormattingPluginDoesNotExist(str_0)
    formatting_plugin_does_not_exist_1 = module_0.FormattingPluginDoesNotExist(str_0)
    file_skip_comment_0 = module_0.FileSkipComment(str_0)

def test_case_5():
    str_0 = 'knA FXH6_?Vu7v@cjUk9'
    exception_0 = module_1.Exception()
    literal_parsing_failure_0 = module_0.LiteralParsingFailure(str_0, exception_0)

def test_case_6():
    str_0 = 'unsupported_setting'
    str_1 = 'value'
    str_2 = 'source'
    str_3 = 'test_value'
    str_4 = 'test_source'
    str_5 = {str_1: str_3, str_2: str_4}
    str_6 = {str_0: str_5}
    unsupported_settings_0 = module_0.UnsupportedSettings(str_6)