# Automatically generated by Pynguin.
import ansible.plugins.action.wait_for_connection as module_0

def test_case_0():
    try:
        tuple_0 = None
        set_0 = {tuple_0}
        timed_out_exception_0 = None
        action_module_0 = module_0.ActionModule(set_0, set_0, timed_out_exception_0, timed_out_exception_0, timed_out_exception_0, set_0)
        str_0 = ':_;K2D+0(/['
        bool_0 = True
        bytes_0 = b'\xa6\xa0\x16\xa7\x9dT8\xf4.\xd5\xa2:\xaa\xd4'
        var_0 = action_module_0.do_until_success_or_timeout(action_module_0, bool_0, str_0, bytes_0)
    except BaseException:
        pass

def test_case_1():
    try:
        list_0 = []
        str_0 = '}ut|-T8wr]o+47h)6z@'
        dict_0 = {str_0: str_0}
        dict_1 = {str_0: str_0, str_0: dict_0, str_0: str_0}
        str_1 = 'Sends a DELETE request. Returns :class:`HTTPResponse` object.\n\n        :arg url: URL to request\n        :kwargs \\*\\*kwargs: Optional arguments that ``open`` takes.\n        :returns: HTTPResponse\n        '
        bytes_0 = b'\x8a&'
        list_1 = [dict_1, str_0, bytes_0, str_1]
        float_0 = -2894.318144
        action_module_0 = module_0.ActionModule(dict_0, dict_1, str_1, bytes_0, list_1, float_0)
        var_0 = action_module_0.run(list_0)
    except BaseException:
        pass

def test_case_2():
    try:
        tuple_0 = None
        set_0 = {tuple_0}
        timed_out_exception_0 = None
        action_module_0 = module_0.ActionModule(set_0, set_0, timed_out_exception_0, timed_out_exception_0, timed_out_exception_0, set_0)
        str_0 = '@A\t;lrILvA1ipbjSWavT'
        bool_0 = False
        bytes_0 = b'\xa6\xa0\x16\xa7\x9dT8\xf4.\xd5\xa2:\xaa\xd4'
        var_0 = action_module_0.do_until_success_or_timeout(action_module_0, bool_0, str_0, bytes_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'\x1f\x95\x8c\x1aE\xf6\x01\x810y\xbdf<'
        list_0 = [bytes_0, bytes_0, bytes_0]
        timed_out_exception_0 = module_0.TimedOutException(*list_0)
        list_1 = []
        float_0 = None
        tuple_0 = (float_0,)
        action_module_0 = None
        int_0 = 566
        int_1 = -91
        bytes_1 = b'\xa4'
        dict_0 = {bytes_1: list_1}
        action_module_1 = module_0.ActionModule(int_1, tuple_0, timed_out_exception_0, bytes_1, dict_0, tuple_0)
        var_0 = action_module_1.run(action_module_0, int_0)
    except BaseException:
        pass

def test_case_4():
    try:
        float_0 = 2.0
        int_0 = -1498
        bytes_0 = b'\xda\x04\x18\x88\xce5\xa3\x1bb\x87\x92\x04$\xde'
        set_0 = {bytes_0}
        str_0 = '\n0H\x0c9<]_'
        dict_0 = {str_0: int_0, str_0: int_0}
        list_0 = [str_0]
        action_module_0 = module_0.ActionModule(bytes_0, set_0, int_0, dict_0, str_0, list_0)
        var_0 = action_module_0.do_until_success_or_timeout(set_0, float_0, int_0, int_0)
    except BaseException:
        pass