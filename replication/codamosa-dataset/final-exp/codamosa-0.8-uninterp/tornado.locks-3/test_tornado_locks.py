# Automatically generated by Pynguin.
import tornado.locks as module_0
import tornado.ioloop as module_1
import datetime as module_2
import builtins as module_3

def test_case_0():
    pass

def test_case_1():
    lock_0 = module_0.Lock()

def test_case_2():
    event_0 = module_0.Event()
    event_0.set()

def test_case_3():
    lock_0 = module_0.Lock()
    event_0 = module_0.Event()
    event_0.set()
    str_0 = event_0.__repr__()

def test_case_4():
    lock_0 = module_0.Lock()
    event_0 = module_0.Event()
    event_0.set()
    str_0 = lock_0.__repr__()
    event_0.clear()
    event_0.clear()

def test_case_5():
    lock_0 = module_0.Lock()
    releasing_context_manager_0 = module_0._ReleasingContextManager(lock_0)
    releasing_context_manager_0.__enter__()
    event_0 = module_0.Event()
    event_0.set()

def test_case_6():
    lock_0 = module_0.Lock()
    str_0 = lock_0.__repr__()

def test_case_7():
    semaphore_0 = module_0.Semaphore()
    semaphore_0.release()

def test_case_8():
    lock_0 = module_0.Lock()
    releasing_context_manager_0 = module_0._ReleasingContextManager(lock_0)
    releasing_context_manager_0.__enter__()
    str_0 = 'waAmjs-OU,9a,-\n.'
    releasing_context_manager_1 = module_0._ReleasingContextManager(str_0)
    event_0 = module_0.Event()
    releasing_context_manager_2 = module_0._ReleasingContextManager(releasing_context_manager_0)
    event_1 = module_0.Event()
    releasing_context_manager_0.__enter__()
    event_0.set()
    str_1 = event_1.__repr__()

def test_case_9():
    event_0 = module_0.Event()
    event_0.set()
    event_0.set()

def test_case_10():
    int_0 = 0
    semaphore_0 = module_0.Semaphore(int_0)
    var_0 = repr(semaphore_0)

def test_case_11():
    lock_0 = module_0.Lock()
    event_0 = module_0.Event()
    event_0.set()
    lock_1 = module_0.Lock()
    lock_2 = module_0.Lock()
    semaphore_0 = module_0.Semaphore()
    semaphore_0.release()
    i_o_loop_0 = module_1.IOLoop()
    i_o_loop_1 = i_o_loop_0.instance()
    i_o_loop_2 = i_o_loop_1.instance()
    i_o_loop_3 = i_o_loop_2.instance()
    awaitable_0 = semaphore_0.acquire(i_o_loop_0)
    str_0 = lock_0.__repr__()
    str_1 = lock_2.__repr__()
    event_1 = module_0.Event()
    releasing_context_manager_0 = module_0._ReleasingContextManager(i_o_loop_0)
    releasing_context_manager_0.__enter__()

def test_case_12():
    lock_0 = module_0.Lock()
    event_0 = module_0.Event()
    event_0.set()
    lock_1 = module_0.Lock()
    lock_2 = module_0.Lock()
    i_o_loop_0 = module_1.IOLoop()
    str_0 = event_0.__repr__()
    i_o_loop_1 = i_o_loop_0.instance()
    i_o_loop_2 = i_o_loop_1.instance()
    condition_0 = module_0.Condition()
    str_1 = condition_0.__repr__()
    i_o_loop_3 = i_o_loop_2.instance()
    i_o_loop_4 = i_o_loop_1.instance()
    str_2 = lock_1.__repr__()
    condition_1 = module_0.Condition()
    condition_1.notify()
    condition_2 = module_0.Condition()
    awaitable_0 = condition_1.wait()
    condition_1.notify_all()
    lock_3 = module_0.Lock()
    releasing_context_manager_0 = module_0._ReleasingContextManager(lock_1)
    releasing_context_manager_1 = module_0._ReleasingContextManager(i_o_loop_4)
    time_0 = module_2.time()
    releasing_context_manager_2 = module_0._ReleasingContextManager(event_0)
    releasing_context_manager_3 = module_0._ReleasingContextManager(lock_0)
    releasing_context_manager_0.__enter__()

def test_case_13():
    lock_0 = module_0.Lock()
    event_0 = module_0.Event()
    event_0.set()
    lock_1 = module_0.Lock()
    lock_2 = module_0.Lock()
    semaphore_0 = module_0.Semaphore()
    semaphore_0.release()
    i_o_loop_0 = module_1.IOLoop()
    i_o_loop_1 = i_o_loop_0.instance()
    i_o_loop_2 = i_o_loop_1.instance()
    i_o_loop_3 = i_o_loop_2.instance()
    condition_0 = module_0.Condition()
    str_0 = condition_0.__repr__()
    i_o_loop_4 = i_o_loop_1.instance()
    i_o_loop_5 = i_o_loop_0.instance()
    awaitable_0 = semaphore_0.acquire()
    str_1 = lock_0.__repr__()
    condition_1 = module_0.Condition()
    condition_1.notify()
    condition_2 = module_0.Condition()
    float_0 = 587.28
    awaitable_1 = condition_2.wait(float_0)
    condition_1.notify_all()
    lock_3 = module_0.Lock()
    releasing_context_manager_0 = module_0._ReleasingContextManager(str_1)
    releasing_context_manager_1 = module_0._ReleasingContextManager(condition_1)
    dict_0 = {}
    time_0 = module_2.time(**dict_0)
    releasing_context_manager_2 = module_0._ReleasingContextManager(str_0)
    releasing_context_manager_3 = module_0._ReleasingContextManager(lock_0)
    releasing_context_manager_1.__enter__()

def test_case_14():
    lock_0 = module_0.Lock()
    event_0 = module_0.Event()
    event_0.set()
    lock_1 = module_0.Lock()
    lock_2 = module_0.Lock()
    i_o_loop_0 = module_1.IOLoop()
    str_0 = event_0.__repr__()
    i_o_loop_1 = i_o_loop_0.instance()
    condition_0 = module_0.Condition()
    str_1 = condition_0.__repr__()
    i_o_loop_2 = i_o_loop_0.instance()
    i_o_loop_3 = i_o_loop_1.instance()
    i_o_loop_4 = i_o_loop_3.instance()
    str_2 = lock_1.__repr__()
    condition_0.notify()
    float_0 = 3410.62
    awaitable_0 = lock_2.acquire()
    awaitable_1 = condition_0.wait(float_0)
    awaitable_2 = event_0.wait(float_0)
    awaitable_3 = lock_2.acquire()
    condition_1 = module_0.Condition()
    awaitable_4 = condition_1.wait()
    awaitable_5 = event_0.wait(float_0)
    condition_2 = module_0.Condition()
    condition_2.notify()
    condition_3 = module_0.Condition()
    condition_4 = module_0.Condition()
    condition_1.notify_all()
    lock_3 = module_0.Lock()
    lock_4 = module_0.Lock()
    lock_2.release()

def test_case_15():
    event_0 = module_0.Event()
    event_0.set()
    lock_0 = module_0.Lock()
    lock_1 = module_0.Lock()
    semaphore_0 = module_0.Semaphore()
    semaphore_0.__aenter__()
    semaphore_0.release()
    i_o_loop_0 = module_1.IOLoop()
    str_0 = event_0.__repr__()
    condition_0 = module_0.Condition()
    str_1 = condition_0.__repr__()
    i_o_loop_1 = i_o_loop_0.instance()
    i_o_loop_2 = i_o_loop_1.instance()
    i_o_loop_3 = i_o_loop_2.instance()
    awaitable_0 = semaphore_0.acquire()
    str_2 = lock_0.__repr__()
    condition_1 = module_0.Condition()
    float_0 = 3410.62
    awaitable_1 = lock_1.acquire()
    awaitable_2 = condition_0.wait(float_0)
    awaitable_3 = event_0.wait(float_0)
    int_0 = -81
    condition_0.notify(int_0)
    condition_2 = module_0.Condition()
    condition_0.notify_all()
    lock_2 = module_0.Lock()
    lock_1.release()
    releasing_context_manager_0 = module_0._ReleasingContextManager(str_0)
    object_0 = module_3.object()
    event_1 = module_0.Event()
    releasing_context_manager_1 = module_0._ReleasingContextManager(i_o_loop_1)
    releasing_context_manager_1.__enter__()

def test_case_16():
    lock_0 = module_0.Lock()
    event_0 = module_0.Event()
    event_0.set()
    lock_1 = module_0.Lock()
    lock_2 = module_0.Lock()
    semaphore_0 = module_0.Semaphore()
    semaphore_0.__aenter__()
    semaphore_0.release()
    i_o_loop_0 = module_1.IOLoop()
    str_0 = event_0.__repr__()
    i_o_loop_1 = i_o_loop_0.instance()
    i_o_loop_2 = i_o_loop_1.instance()
    condition_0 = module_0.Condition()
    str_1 = condition_0.__repr__()
    i_o_loop_3 = i_o_loop_0.instance()
    i_o_loop_4 = i_o_loop_0.instance()
    awaitable_0 = semaphore_0.acquire()
    str_2 = lock_0.__repr__()
    int_0 = -2530
    str_3 = event_0.__repr__()
    condition_0.notify(int_0)
    float_0 = 3410.62
    awaitable_1 = lock_2.acquire(float_0)
    awaitable_2 = condition_0.wait(float_0)
    awaitable_3 = event_0.wait()
    awaitable_4 = condition_0.wait()
    i_o_loop_4.start()
    awaitable_5 = event_0.wait(float_0)
    int_1 = -1380
    condition_0.notify(int_1)
    condition_1 = module_0.Condition()
    condition_2 = module_0.Condition()
    condition_2.notify_all()
    lock_3 = module_0.Lock()
    lock_1.release()
    event_1 = module_0.Event()
    releasing_context_manager_0 = module_0._ReleasingContextManager(awaitable_4)
    releasing_context_manager_1 = module_0._ReleasingContextManager(awaitable_1)
    releasing_context_manager_0.__enter__()