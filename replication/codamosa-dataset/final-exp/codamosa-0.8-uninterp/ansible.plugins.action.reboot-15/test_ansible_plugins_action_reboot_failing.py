# Automatically generated by Pynguin.
import ansible.plugins.action.reboot as module_0

def test_case_0():
    try:
        str_0 = "xg'!CDik[ bOi3qeQ"
        list_0 = [str_0, str_0, str_0]
        action_module_0 = module_0.ActionModule(*list_0)
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = -2790
        list_0 = [int_0, int_0, int_0, int_0, int_0, int_0]
        action_module_0 = module_0.ActionModule(*list_0)
        bool_0 = True
        var_0 = action_module_0.run_test_command(bool_0)
    except BaseException:
        pass

def test_case_2():
    try:
        int_0 = -2790
        list_0 = [int_0, int_0, int_0, int_0, int_0, int_0]
        action_module_0 = module_0.ActionModule(*list_0)
        bool_0 = True
        bytes_0 = b'\xc9?\xd7'
        var_0 = action_module_0.perform_reboot(bool_0, bytes_0)
    except BaseException:
        pass

def test_case_3():
    try:
        int_0 = -2790
        list_0 = [int_0, int_0, int_0, int_0, int_0, int_0]
        str_0 = ''
        float_0 = -5310.0
        action_module_0 = module_0.ActionModule(*list_0)
        var_0 = action_module_0.check_boot_time(str_0, float_0)
    except BaseException:
        pass

def test_case_4():
    try:
        int_0 = -2790
        list_0 = [int_0, int_0, int_0, int_0, int_0, int_0]
        action_module_0 = module_0.ActionModule(*list_0)
        var_0 = action_module_0.get_shutdown_command_args(list_0)
    except BaseException:
        pass

def test_case_5():
    try:
        int_0 = -2803
        list_0 = [int_0, int_0, int_0, int_0, int_0, int_0]
        action_module_0 = module_0.ActionModule(*list_0)
        var_0 = action_module_0.deprecated_args()
        list_1 = [action_module_0, action_module_0]
        var_1 = action_module_0.get_distribution(list_1)
    except BaseException:
        pass

def test_case_6():
    try:
        int_0 = -2803
        list_0 = [int_0, int_0, int_0, int_0, int_0, int_0]
        action_module_0 = module_0.ActionModule(*list_0)
        var_0 = action_module_0.deprecated_args()
        var_1 = action_module_0.get_system_boot_time(action_module_0)
    except BaseException:
        pass

def test_case_7():
    try:
        int_0 = -2803
        list_0 = [int_0, int_0, int_0, int_0, int_0, int_0]
        action_module_0 = module_0.ActionModule(*list_0)
        var_0 = action_module_0.deprecated_args()
        str_0 = 'YAML_COMMON_DICT_ERROR'
        bytes_0 = b'\xaeqB7d\xf4!\x7f'
        set_0 = {str_0, var_0}
        tuple_0 = (str_0, str_0, bytes_0, set_0)
        var_1 = action_module_0.do_until_success_or_timeout(tuple_0, int_0, set_0, str_0)
    except BaseException:
        pass

def test_case_8():
    try:
        int_0 = -2790
        list_0 = [int_0, int_0, int_0, int_0, int_0, int_0]
        action_module_0 = module_0.ActionModule(*list_0)
        var_0 = action_module_0.deprecated_args()
        int_1 = 2901
        var_1 = action_module_0.validate_reboot(int_1)
    except BaseException:
        pass

def test_case_9():
    try:
        int_0 = -2790
        list_0 = [int_0, int_0, int_0, int_0, int_0, int_0]
        action_module_0 = module_0.ActionModule(*list_0)
        var_0 = action_module_0.run()
    except BaseException:
        pass

def test_case_10():
    try:
        int_0 = -2083
        list_0 = [int_0, int_0, int_0, int_0, int_0, int_0]
        action_module_0 = module_0.ActionModule(*list_0)
        bool_0 = True
        str_0 = 'b@.H+\n'
        set_0 = {str_0, str_0}
        int_1 = 4799
        var_0 = action_module_0.deprecated_args()
        var_1 = action_module_0.do_until_success_or_timeout(int_1, bool_0, bool_0, set_0)
    except BaseException:
        pass

def test_case_11():
    try:
        int_0 = -2803
        list_0 = [int_0, int_0, int_0, int_0, int_0, int_0]
        action_module_0 = module_0.ActionModule(*list_0)
        bool_0 = True
        str_0 = 'YAML_COMMON_DICT_ERROR'
        set_0 = {str_0, str_0}
        int_1 = 4799
        bool_1 = False
        var_0 = action_module_0.do_until_success_or_timeout(int_1, bool_0, bool_1, set_0)
    except BaseException:
        pass

def test_case_12():
    try:
        int_0 = -2803
        list_0 = [int_0, int_0, int_0, int_0, int_0, int_0]
        action_module_0 = module_0.ActionModule(*list_0)
        var_0 = action_module_0.deprecated_args()
        bool_0 = True
        str_0 = 'YAML_COMMON_DICT_ERROR'
        timed_out_exception_0 = module_0.TimedOutException()
        float_0 = 2562.2
        dict_0 = {}
        var_1 = action_module_0.do_until_success_or_timeout(float_0, bool_0, str_0, list_0, dict_0)
    except BaseException:
        pass