# Automatically generated by Pynguin.
import flutes.iterator as module_0

def test_case_0():
    pass

def test_case_1():
    str_0 = 'QWAl?ky>nws+ I"$+i'
    lazy_list_0 = module_0.LazyList(str_0)
    var_0 = lazy_list_0.__iter__()

def test_case_2():
    bytes_0 = b'\xdb\xf4=\xcfW\xf1F\xfe2\xa6\xe2z~\x18pn\xf3\x8e'
    lazy_list_0 = module_0.LazyList(bytes_0)

def test_case_3():
    int_0 = 2
    int_1 = [int_0, int_0, int_0, int_0]
    lazy_list_0 = module_0.LazyList(int_1)
    var_0 = list(lazy_list_0)

def test_case_4():
    bool_0 = True
    list_0 = [bool_0]
    range_0 = module_0.Range(*list_0)
    var_0 = range_0.__getitem__(bool_0)

def test_case_5():
    float_0 = -2383.8891
    list_0 = [float_0, float_0, float_0]
    range_0 = module_0.Range(*list_0)
    iterator_0 = range_0.__iter__()
    range_1 = module_0.Range(*list_0)

def test_case_6():
    bool_0 = None
    set_0 = {bool_0, bool_0}
    map_list_0 = module_0.MapList(bool_0, set_0)

def test_case_7():
    var_0 = lambda x: x * x
    int_0 = 1
    int_1 = 2
    int_2 = 3
    int_3 = [int_0, int_1, int_2]
    map_list_0 = module_0.MapList(var_0, int_3)
    var_1 = map_list_0[:]
    var_2 = list(var_1)

def test_case_8():
    float_0 = 876.0
    int_0 = -2454
    str_0 = '@I\x0b`4>p\x0bb'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: int_0}
    iterator_0 = module_0.drop(int_0, dict_0)
    map_list_0 = module_0.MapList(float_0, iterator_0)
    iterator_1 = map_list_0.__iter__()

def test_case_9():
    int_0 = 10
    var_0 = range(int_0)
    int_1 = 3
    iterator_0 = module_0.chunk(int_1, var_0)
    var_1 = list(iterator_0)
    iterator_1 = module_0.chunk(int_1, var_0)
    var_2 = list(iterator_1)
    var_3 = list(iterator_0)

def test_case_10():
    var_0 = lambda s, x: x + s
    str_0 = 'a'
    str_1 = 'b'
    str_2 = 'c'
    str_3 = 'd'
    str_4 = [str_0, str_1, str_2, str_3]
    var_1 = module_0.scanl(var_0, str_4)
    var_2 = list(var_1)

def test_case_11():
    bool_0 = False
    bool_1 = True
    list_0 = [bool_0]
    range_0 = module_0.Range(*list_0)
    var_0 = range_0.__getitem__(bool_1)
    str_0 = '\x0c'
    iterator_0 = module_0.split_by(str_0, bool_0, separator=str_0)
    var_1 = list(range_0)

def test_case_12():
    int_0 = 5
    var_0 = range(int_0)
    iterator_0 = module_0.take(int_0, var_0)
    var_1 = list(iterator_0)

def test_case_13():
    bool_0 = True
    str_0 = '.'
    iterator_0 = module_0.split_by(str_0, bool_0, separator=str_0)
    var_0 = list(iterator_0)

def test_case_14():
    bool_0 = True
    str_0 = 'tVb<c?'
    iterator_0 = module_0.split_by(str_0, bool_0, separator=str_0)
    var_0 = list(iterator_0)

def test_case_15():
    bool_0 = False
    str_0 = '.'
    iterator_0 = module_0.split_by(str_0, bool_0, separator=str_0)
    var_0 = list(iterator_0)

def test_case_16():
    int_0 = -626
    var_0 = range(int_0)
    iterator_0 = module_0.drop_until(int_0, var_0)
    var_1 = list(iterator_0)

def test_case_17():
    int_0 = 2
    int_1 = [int_0, int_0, int_0, int_0]
    lazy_list_0 = module_0.LazyList(int_1)
    var_0 = list(lazy_list_0)
    var_1 = lazy_list_0.__len__()

def test_case_18():
    int_0 = -4
    int_1 = [int_0, int_0, int_0, int_0]
    lazy_list_0 = module_0.LazyList(int_1)
    var_0 = list(lazy_list_0)
    var_1 = lazy_list_0.__iter__()

def test_case_19():
    int_0 = 10
    var_0 = range(int_0)
    lazy_list_0 = module_0.LazyList(var_0)
    var_1 = lazy_list_0[:]
    var_2 = list(var_1)
    int_1 = 1
    var_3 = lazy_list_0[:int_1]
    var_4 = list(var_3)
    int_2 = 2
    var_5 = lazy_list_0[:int_2]
    var_6 = list(var_5)
    var_7 = lazy_list_0[int_1:int_2]
    var_8 = list(var_7)

def test_case_20():
    bool_0 = False
    str_0 = '.'
    list_0 = [str_0, bool_0]
    lazy_list_0 = module_0.LazyList(list_0)
    var_0 = lazy_list_0.__iter__()
    iterator_0 = module_0.split_by(str_0, bool_0, separator=str_0)
    var_1 = list(var_0)