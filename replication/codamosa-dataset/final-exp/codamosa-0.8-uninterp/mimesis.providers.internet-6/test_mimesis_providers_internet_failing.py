# Automatically generated by Pynguin.
import mimesis.providers.internet as module_0
import mimesis.enums as module_1

def test_case_0():
    try:
        internet_0 = module_0.Internet()
        str_0 = internet_0.mac_address()
        str_1 = internet_0.http_status_message()
        bool_0 = False
        list_0 = [bool_0, bool_0]
        var_0 = internet_0.stock_image(str_0)
        internet_1 = module_0.Internet(*list_0)
    except BaseException:
        pass

def test_case_1():
    try:
        layer_0 = module_1.Layer.NETWORK
        internet_0 = module_0.Internet()
        str_0 = internet_0.network_protocol(layer_0)
        str_1 = 'y<0U?G'
        internet_1 = module_0.Internet()
        i_pv4_address_0 = internet_1.ip_v4_object()
        str_2 = internet_1.http_method()
        int_0 = internet_1.http_status_code()
        str_3 = internet_1.http_method()
        var_0 = internet_1.hashtags()
        dict_0 = {str_1: str_1}
        var_1 = internet_1.stock_image(int_0)
        str_4 = internet_0.network_protocol(layer_0)
        str_5 = internet_1.http_method()
        str_6 = internet_0.ip_v4()
        internet_2 = module_0.Internet(**dict_0)
    except BaseException:
        pass

def test_case_2():
    try:
        internet_0 = module_0.Internet()
        str_0 = internet_0.ip_v6()
        int_0 = internet_0.port()
        str_1 = internet_0.http_status_message()
        bool_0 = True
        var_0 = internet_0.stock_image(int_0, int_0, str_1, bool_0)
    except BaseException:
        pass

def test_case_3():
    try:
        internet_0 = module_0.Internet()
        str_0 = internet_0.emoji()
        int_0 = 800
        int_1 = 573
        str_1 = 'wat er'
        i_pv6_address_0 = internet_0.ip_v6_object()
        str_2 = [str_1, str_1]
        bool_0 = True
        var_0 = internet_0.stock_image(int_0, int_1, str_2, bool_0)
    except BaseException:
        pass

def test_case_4():
    try:
        internet_0 = module_0.Internet()
        str_0 = internet_0.mac_address()
        layer_0 = module_1.Layer.APPLICATION
        str_1 = internet_0.image_placeholder()
        internet_1 = module_0.Internet()
        str_2 = internet_0.user_agent()
        port_range_0 = module_1.PortRange.EPHEMERAL
        int_0 = internet_1.port(port_range_0)
        str_3 = internet_1.top_level_domain(layer_0)
    except BaseException:
        pass

def test_case_5():
    try:
        internet_0 = module_0.Internet()
        str_0 = internet_0.http_method()
        internet_1 = module_0.Internet()
        str_1 = internet_1.http_method()
        internet_2 = module_0.Internet()
        int_0 = internet_2.port()
        str_2 = internet_2.mac_address()
        str_3 = internet_2.http_method()
        str_4 = internet_1.emoji()
        str_5 = internet_0.home_page()
        str_6 = internet_1.http_method()
        str_7 = internet_1.http_method()
        str_8 = internet_2.http_method()
        var_0 = internet_2.hashtags()
        i_pv4_address_0 = internet_1.ip_v4_object()
        str_9 = internet_2.content_type()
        str_10 = internet_1.emoji()
        str_11 = internet_1.image_placeholder(str_8, str_2)
        int_1 = internet_1.port()
        str_12 = internet_2.emoji()
        layer_0 = module_1.Layer.SESSION
        str_13 = internet_2.network_protocol(layer_0)
        i_pv4_address_1 = internet_1.ip_v4_object()
        str_14 = internet_2.user_agent()
        i_pv6_address_0 = internet_2.ip_v6_object()
        i_pv6_address_1 = internet_1.ip_v6_object()
        int_2 = internet_1.http_status_code()
        str_15 = internet_1.content_type()
        port_range_0 = None
        int_3 = internet_1.port(port_range_0)
    except BaseException:
        pass

def test_case_6():
    try:
        internet_0 = module_0.Internet()
        str_0 = internet_0.emoji()
        int_0 = 800
        int_1 = 573
        str_1 = 'PDWI`RoEV>3NunLv/'
        i_pv6_address_0 = internet_0.ip_v6_object()
        str_2 = [str_1, str_1]
        bool_0 = True
        var_0 = internet_0.stock_image(int_0, int_1, str_2, bool_0)
    except BaseException:
        pass