# Automatically generated by Pynguin.
import mimesis.providers.internet as module_0
import mimesis.enums as module_1

def test_case_0():
    try:
        float_0 = -560.94
        internet_0 = module_0.Internet()
        str_0 = internet_0.content_type(float_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'Unit test Internet.stock_image method.'
        internet_0 = module_0.Internet()
        int_0 = 480
        bool_0 = True
        var_0 = internet_0.stock_image(int_0, int_0, str_0, bool_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '^Zo/ '
        dict_0 = {}
        list_0 = [str_0]
        internet_0 = module_0.Internet(*list_0)
        i_pv4_address_0 = internet_0.ip_v4_object()
        internet_1 = module_0.Internet(**dict_0)
        i_pv4_address_1 = internet_1.ip_v4_object()
        str_1 = internet_1.network_protocol()
        port_range_0 = None
        layer_0 = module_1.Layer.PRESENTATION
        internet_2 = module_0.Internet()
        str_2 = internet_2.network_protocol(layer_0)
        list_1 = []
        internet_3 = module_0.Internet(*list_1)
        str_3 = internet_1.content_type()
        str_4 = internet_1.ip_v6()
        internet_4 = module_0.Internet()
        int_0 = internet_3.port(port_range_0)
    except BaseException:
        pass

def test_case_3():
    try:
        internet_0 = module_0.Internet()
        var_0 = internet_0.hashtags()
        int_0 = 402
        str_0 = '"E'
        list_0 = [str_0, str_0, str_0, str_0]
        bool_0 = True
        var_1 = internet_0.stock_image(int_0, int_0, list_0, bool_0)
    except BaseException:
        pass