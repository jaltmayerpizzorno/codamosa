# Automatically generated by Pynguin.
import ansible.plugins.loader as module_0

def test_case_0():
    try:
        var_0 = module_0.get_shell_plugin()
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = b'g$\xf38\xc5\xde\xc6\xb2\xb2:\xc6+J\xe9'
        plugin_load_context_0 = module_0.PluginLoadContext()
        var_0 = module_0.get_shell_plugin(bytes_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bool_0 = False
        dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
        list_0 = []
        plugin_path_context_0 = module_0.PluginPathContext(dict_0, list_0)
        var_0 = module_0.add_all_plugin_dirs(plugin_path_context_0)
        var_1 = module_0.get_shell_plugin()
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'csh'
        var_0 = module_0.get_shell_plugin(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        bool_0 = False
        str_0 = 'ssh_opts'
        float_0 = 0.0001
        plugin_loader_0 = None
        jinja2_loader_0 = module_0.Jinja2Loader(bool_0, str_0, float_0, plugin_loader_0)
        bytes_0 = b'yI\xf09\x14'
        str_1 = None
        dict_0 = {str_1: bytes_0, str_0: str_1}
        plugin_loader_1 = module_0.PluginLoader(jinja2_loader_0, bytes_0, dict_0, dict_0)
        bytes_1 = b'=\xc0\xda\x0f\xa5\xcb'
        var_0 = module_0.get_shell_plugin(plugin_loader_1, bytes_1)
    except BaseException:
        pass

def test_case_5():
    try:
        plugin_load_context_0 = module_0.PluginLoadContext()
        bytes_0 = b'D\x1a:lp\xbc\xe2\xdd\xa08'
        bool_0 = True
        var_0 = module_0.get_all_plugin_loaders()
        str_0 = 'F7\r5=vFVZUTJ_3o!J-:'
        list_0 = [bool_0, str_0]
        dict_0 = {}
        list_1 = []
        plugin_loader_0 = module_0.PluginLoader(bytes_0, dict_0, dict_0, list_1, dict_0)
        var_1 = plugin_loader_0.__setstate__(list_0)
    except BaseException:
        pass

def test_case_6():
    try:
        bool_0 = True
        str_0 = 'i'
        dict_0 = {}
        var_0 = module_0.get_shell_plugin(dict_0, str_0)
        list_0 = [var_0]
        bytes_0 = b'\xb3\xc7\xc0\x08\xe8\xbf\x1b\x98'
        str_1 = 'nvHB&h;)N'
        plugin_load_context_0 = module_0.PluginLoadContext()
        var_1 = plugin_load_context_0.nope(bool_0)
        dict_1 = {str_0: bytes_0, str_0: bytes_0, str_1: str_0}
        get_with_context_result_0 = None
        plugin_load_context_1 = module_0.PluginLoadContext()
        plugin_load_context_2 = module_0.PluginLoadContext()
        var_2 = plugin_load_context_2.record_deprecation(list_0, dict_1, plugin_load_context_1)
        bool_1 = True
        plugin_loader_0 = module_0.PluginLoader(bytes_0, get_with_context_result_0, str_0, bool_1, dict_1)
        var_3 = plugin_loader_0.print_paths()
        var_4 = module_0.get_shell_plugin(plugin_loader_0)
    except BaseException:
        pass

def test_case_7():
    try:
        var_0 = module_0.get_all_plugin_loaders()
        int_0 = 745
        bytes_0 = b'0\x8f\xd9\xefLG\x90c9\xcf\xb2\xc4L\xc6\xd80'
        dict_0 = {}
        plugin_path_context_0 = module_0.PluginPathContext(bytes_0, dict_0)
        int_1 = 667
        int_2 = 2332
        dict_1 = {}
        dict_2 = {int_2: int_0, plugin_path_context_0: int_2, bytes_0: dict_1}
        list_0 = []
        int_3 = 131072
        list_1 = [int_0, int_3]
        plugin_loader_0 = module_0.PluginLoader(int_0, plugin_path_context_0, int_1, dict_2, list_0, list_1)
        var_1 = plugin_loader_0.print_paths()
    except BaseException:
        pass

def test_case_8():
    try:
        bytes_0 = b'g\x82\xf3\xfc\xc5\xde\xc6\xb2\xb2:w+J\xe9'
        list_0 = [bytes_0]
        int_0 = 359
        plugin_load_context_0 = module_0.PluginLoadContext()
        list_1 = [plugin_load_context_0, plugin_load_context_0, int_0, plugin_load_context_0]
        plugin_loader_0 = module_0.PluginLoader(int_0, plugin_load_context_0, list_1, list_1, list_1)
        var_0 = plugin_loader_0.get_with_context(bytes_0, *list_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = '%s should be a list or None but is %s'
        str_1 = 'c'
        dict_0 = {str_0: str_0, str_1: str_1, str_1: str_0, str_0: str_0}
        bool_0 = True
        dict_1 = {bool_0: str_1, str_1: bool_0}
        float_0 = -2051.754
        int_0 = 150
        tuple_0 = (float_0, int_0, dict_0, int_0)
        plugin_load_context_0 = module_0.PluginLoadContext()
        float_1 = 1288.32
        str_2 = 'S)iB/'
        float_2 = -1621.01
        int_1 = 1445
        tuple_1 = (str_2, str_0, float_2, int_1)
        jinja2_loader_0 = module_0.Jinja2Loader(plugin_load_context_0, str_1, dict_0, float_1, tuple_1)
        var_0 = jinja2_loader_0.find_plugin(dict_1, tuple_0)
    except BaseException:
        pass

def test_case_10():
    try:
        int_0 = 3663
        bool_0 = False
        str_0 = 'UT}Z&L?51__GXQw_i;v'
        dict_0 = {str_0: bool_0, str_0: int_0}
        str_1 = 'w~DM<\tV{$>3#,!T k'
        bytes_0 = None
        jinja2_loader_0 = module_0.Jinja2Loader(bool_0, dict_0, str_1, bytes_0)
        plugin_load_context_0 = module_0.PluginLoadContext()
        var_0 = plugin_load_context_0.record_deprecation(int_0, jinja2_loader_0, bytes_0)
    except BaseException:
        pass

def test_case_11():
    try:
        bool_0 = False
        str_0 = 'ssh_opts'
        float_0 = 0.0001
        plugin_loader_0 = None
        jinja2_loader_0 = module_0.Jinja2Loader(bool_0, str_0, float_0, plugin_loader_0)
        bytes_0 = b'yI\xf09\x14'
        list_0 = [jinja2_loader_0, jinja2_loader_0, bytes_0]
        var_0 = jinja2_loader_0.all(*list_0)
    except BaseException:
        pass

def test_case_12():
    try:
        bool_0 = False
        str_0 = '/input/ansible/plugins/doc_fragments/windows'
        var_0 = module_0.get_shell_plugin(str_0, bool_0)
    except BaseException:
        pass

def test_case_13():
    try:
        plugin_load_context_0 = module_0.PluginLoadContext()
        str_0 = 'V6"i1'
        str_1 = '/input/ansible/plugins/shell/windows'
        str_2 = ''
        dict_0 = {str_2: str_2, str_2: str_0, str_2: str_0}
        var_0 = plugin_load_context_0.record_deprecation(str_0, str_1, dict_0)
    except BaseException:
        pass

def test_case_14():
    try:
        plugin_path_context_0 = None
        plugin_load_context_0 = module_0.PluginLoadContext()
        dict_0 = {plugin_path_context_0: plugin_path_context_0, plugin_path_context_0: plugin_load_context_0, plugin_load_context_0: plugin_load_context_0, plugin_path_context_0: plugin_path_context_0}
        tuple_0 = ()
        float_0 = 584.47408
        int_0 = -1703
        set_0 = set()
        jinja2_loader_0 = module_0.Jinja2Loader(tuple_0, float_0, int_0, set_0)
        int_1 = -3383
        str_0 = '/root/.ansible/plugins/doc_fragments/windows'
        bool_0 = False
        plugin_loader_0 = module_0.PluginLoader(jinja2_loader_0, int_1, str_0, bool_0)
        var_0 = plugin_loader_0.find_plugin_with_context(plugin_path_context_0, dict_0)
    except BaseException:
        pass

def test_case_15():
    try:
        str_0 = None
        str_1 = '.@x&'
        list_0 = [str_0]
        var_0 = module_0.get_shell_plugin(str_1, list_0)
    except BaseException:
        pass

def test_case_16():
    try:
        str_0 = 'V'
        list_0 = [str_0]
        var_0 = module_0.get_shell_plugin(str_0, list_0)
    except BaseException:
        pass

def test_case_17():
    try:
        int_0 = -3759
        bytes_0 = b'\rS;\xcc\xd3\x14\r\x999\xc6\xcb3\xc36_'
        float_0 = 2449.387821
        tuple_0 = ()
        list_0 = [tuple_0, int_0]
        int_1 = 2366
        dict_0 = {bytes_0: int_1, int_0: float_0, int_0: list_0}
        plugin_loader_0 = module_0.PluginLoader(int_0, bytes_0, float_0, tuple_0, list_0, dict_0)
        str_0 = '\n6Uql~7Ajgk$'
        str_1 = 'oNu^Lj/07$DuP'
        dict_1 = {str_0: dict_0, str_0: dict_0, str_1: str_0}
        var_0 = plugin_loader_0.__setstate__(dict_1)
        str_2 = 'U'
        str_3 = '# (%s) %s'
        dict_2 = {str_2: int_0, str_3: plugin_loader_0}
        get_with_context_result_0 = module_0.get_with_context_result(**dict_2)
    except BaseException:
        pass

def test_case_18():
    try:
        bool_0 = False
        str_0 = 'ansible.plugins.strategy'
        var_0 = module_0.get_shell_plugin(str_0, bool_0)
    except BaseException:
        pass

def test_case_19():
    try:
        str_0 = '\n    Globally hold a parsed copy of cli arguments.\n\n    Only one of these exist per program as it is for global context\n    '
        float_0 = -2151.991
        plugin_load_context_0 = module_0.PluginLoadContext()
        list_0 = [float_0, plugin_load_context_0, str_0, plugin_load_context_0]
        dict_0 = {str_0: float_0}
        var_0 = plugin_load_context_0.redirect(dict_0)
        bytes_0 = b'\xf5\xa9\xca0\x99'
        plugin_loader_0 = module_0.PluginLoader(float_0, float_0, list_0, bytes_0)
        list_1 = [str_0, str_0, plugin_loader_0, bytes_0]
        var_1 = plugin_loader_0.format_paths(list_1)
    except BaseException:
        pass

def test_case_20():
    try:
        bool_0 = False
        str_0 = '6'
        set_0 = {str_0, bool_0}
        plugin_load_context_0 = module_0.PluginLoadContext()
        dict_0 = {bool_0: set_0, plugin_load_context_0: plugin_load_context_0, bool_0: bool_0, str_0: str_0}
        bytes_0 = b'\n\xe2\xed\xde#`\x03w[]e\x87\xc6\x05'
        list_0 = [bytes_0, plugin_load_context_0, set_0, bytes_0]
        plugin_load_context_1 = module_0.PluginLoadContext()
        var_0 = plugin_load_context_1.record_deprecation(plugin_load_context_0, dict_0, list_0)
        list_1 = []
        var_1 = module_0.get_shell_plugin(set_0, list_1)
    except BaseException:
        pass

def test_case_21():
    try:
        str_0 = 'i'
        dict_0 = {}
        var_0 = module_0.get_shell_plugin(dict_0, str_0)
        bytes_0 = b'\xb3\xc7\xc0\x08\xe8\xbf\x1b\x98'
        str_1 = 'nvHB&h;)N'
        dict_1 = {str_0: bytes_0, str_0: bytes_0, str_1: str_0}
        get_with_context_result_0 = None
        str_2 = '_f[D3EWZ]H'
        bool_0 = False
        plugin_loader_0 = module_0.PluginLoader(bytes_0, get_with_context_result_0, str_2, bool_0, dict_1)
        tuple_0 = ()
        var_1 = plugin_loader_0.has_plugin(tuple_0)
        var_2 = module_0.get_shell_plugin(str_2)
    except BaseException:
        pass

def test_case_22():
    try:
        str_0 = 'i'
        dict_0 = {}
        var_0 = module_0.get_shell_plugin(dict_0, str_0)
        bytes_0 = b'\xb3\xc7\xc0\x08\xe8\xbf\x1b\x98'
        dict_1 = {str_0: bytes_0, str_0: bytes_0, str_0: str_0}
        get_with_context_result_0 = None
        bool_0 = True
        plugin_loader_0 = module_0.PluginLoader(bytes_0, get_with_context_result_0, str_0, bool_0, dict_1)
        tuple_0 = ()
        var_1 = plugin_loader_0.has_plugin(tuple_0, plugin_loader_0)
        var_2 = module_0.get_shell_plugin()
    except BaseException:
        pass

def test_case_23():
    try:
        bool_0 = True
        str_0 = 'i'
        dict_0 = {}
        var_0 = module_0.get_shell_plugin(dict_0, str_0)
        bytes_0 = b'\xb3\xc7\xc0\x08\xe8\xbf\x1b\x98'
        str_1 = 'nvHB&h;)N'
        dict_1 = {str_0: bytes_0, str_0: bytes_0, str_1: str_0}
        get_with_context_result_0 = None
        bool_1 = True
        plugin_loader_0 = module_0.PluginLoader(bytes_0, get_with_context_result_0, str_0, bool_1, dict_1)
        tuple_0 = ()
        var_1 = plugin_loader_0.has_plugin(tuple_0)
        str_2 = '/input/ansible/plugins/doc_fragments/windows'
        plugin_load_context_0 = module_0.PluginLoadContext()
        var_2 = plugin_load_context_0.nope(dict_1)
        int_0 = -864
        str_3 = None
        dict_2 = {tuple_0: var_1, tuple_0: plugin_load_context_0, str_2: bool_1, bool_1: int_0, str_3: str_3}
        list_0 = [dict_2]
        bytes_1 = None
        bool_2 = True
        float_0 = 127.650312
        jinja2_loader_0 = module_0.Jinja2Loader(bool_0, list_0, bytes_1, bool_2, float_0)
        var_3 = jinja2_loader_0.get(jinja2_loader_0, **dict_1)
    except BaseException:
        pass

def test_case_24():
    try:
        set_0 = set()
        float_0 = None
        bytes_0 = b''
        plugin_load_context_0 = module_0.PluginLoadContext()
        dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: plugin_load_context_0}
        int_0 = 2816
        plugin_path_context_0 = module_0.PluginPathContext(dict_0, int_0)
        str_0 = '*&)e`,'
        tuple_0 = (plugin_path_context_0,)
        set_1 = {plugin_load_context_0, plugin_load_context_0, tuple_0}
        bool_0 = False
        plugin_loader_0 = module_0.PluginLoader(bytes_0, plugin_path_context_0, str_0, set_1, bool_0)
        var_0 = plugin_loader_0.find_plugin(set_0, float_0)
    except BaseException:
        pass

def test_case_25():
    try:
        str_0 = 'i'
        dict_0 = {}
        var_0 = module_0.get_shell_plugin(dict_0, str_0)
        bytes_0 = b'\xb3\xc7\xc0\x08\xe8\xbf\x1b\x98'
        str_1 = 'nvHB&h;)N'
        dict_1 = {str_0: bytes_0, str_0: bytes_0, str_1: str_0}
        bool_0 = False
        str_2 = ':='
        plugin_load_context_0 = module_0.PluginLoadContext()
        str_3 = '|/CXu\t'
        set_0 = {var_0, str_2, str_1, bool_0}
        jinja2_loader_0 = module_0.Jinja2Loader(str_3, dict_1, dict_0, set_0)
        str_4 = 'Npi\x0c. @ut[|q>oFk{'
        var_1 = jinja2_loader_0.get(str_4, **dict_1)
    except BaseException:
        pass

def test_case_26():
    try:
        str_0 = 'ExamModule'
        str_1 = 'exam_module'
        str_2 = 'tests.integration.test_module_utils.exam_module'
        plugin_loader_0 = module_0.PluginLoader(str_0, str_1, str_2, str_1, str_1)
        var_0 = plugin_loader_0.get_with_context(str_1)
    except BaseException:
        pass