# Automatically generated by Pynguin.
import typesystem.schemas as module_0
import typesystem.fields as module_1
import builtins as module_2

def test_case_0():
    pass

def test_case_1():
    schema_definitions_0 = module_0.SchemaDefinitions()

def test_case_2():
    schema_0 = module_0.Schema()
    schema_definitions_0 = module_0.SchemaDefinitions()
    iterator_0 = schema_definitions_0.__iter__()

def test_case_3():
    schema_0 = module_0.Schema()
    str_0 = schema_0.__repr__()
    iterator_0 = schema_0.__iter__()
    schema_definitions_0 = module_0.SchemaDefinitions()
    schema_definitions_0.__setitem__(str_0, schema_0)
    int_0 = schema_definitions_0.__len__()
    str_1 = schema_0.__repr__()
    bool_0 = schema_0.__eq__(str_0)
    int_1 = schema_0.__len__()

def test_case_4():
    schema_0 = module_0.Schema()

def test_case_5():
    str_0 = '5Vt7\x0c`je.#Z#Z:t6q`'
    list_0 = [str_0]
    schema_0 = module_0.Schema(*list_0)

def test_case_6():
    schema_0 = module_0.Schema()
    str_0 = schema_0.__repr__()

def test_case_7():
    schema_0 = module_0.Schema()
    int_0 = schema_0.__len__()

def test_case_8():
    str_0 = 'Mark'
    reference_0 = module_0.Reference(str_0)

def test_case_9():
    dict_0 = {}
    schema_0 = module_0.Schema(**dict_0)
    str_0 = '2|oS" @\r{7u)KYawb?.'
    schema_definitions_0 = module_0.SchemaDefinitions()
    reference_0 = module_0.Reference(str_0, str_0)
    any_0 = reference_0.serialize(schema_0)

def test_case_10():
    float_0 = None
    list_0 = []
    schema_definitions_0 = module_0.SchemaDefinitions(*list_0)
    schema_definitions_0.__setitem__(float_0, float_0)
    schema_0 = module_0.Schema()
    bool_0 = schema_0.__eq__(list_0)

def test_case_11():
    schema_definitions_0 = module_0.SchemaDefinitions()
    field_0 = module_1.Field()
    module_0.set_definitions(field_0, schema_definitions_0)

def test_case_12():
    list_0 = []
    schema_0 = module_0.Schema(*list_0)
    bool_0 = schema_0.__eq__(schema_0)

def test_case_13():
    schema_0 = module_0.Schema()
    str_0 = schema_0.__repr__()
    list_0 = [schema_0]
    schema_1 = module_0.Schema(*list_0)
    str_1 = None
    reference_0 = module_0.Reference(str_0, list_0)
    any_0 = reference_0.serialize(str_1)

def test_case_14():
    str_0 = 'Schema'
    reference_0 = module_0.Reference(str_0)
    schema_definitions_0 = module_0.SchemaDefinitions()
    module_0.set_definitions(reference_0, schema_definitions_0)

def test_case_15():
    schema_0 = module_0.Schema()
    bool_0 = schema_0.__eq__(schema_0)
    list_0 = [schema_0]
    str_0 = 'jinja2.Markup'
    iterator_0 = schema_0.__iter__()
    iterator_1 = schema_0.__iter__()
    reference_0 = module_0.Reference(str_0)
    type_0 = module_2.type(*list_0)
    reference_1 = module_0.Reference(str_0, type_0)
    schema_1 = module_0.Schema(*list_0)
    any_0 = reference_1.validate(schema_1, strict=bool_0)