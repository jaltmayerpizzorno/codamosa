# Automatically generated by Pynguin.
import pymonet.either as module_0
import builtins as module_1

def test_case_0():
    pass

def test_case_1():
    bytes_0 = b'\xa2\t5\x86J\xb5\x8e\x7f\r\x0b\xac\x9c\xf6'
    right_0 = module_0.Right(bytes_0)

def test_case_2():
    var_0 = None
    either_0 = module_0.Either(var_0)
    bytes_0 = b'\xa2\t5\x86J\xb5\x8e\x7f\r\x0b\xac\x9c\xf6'
    object_0 = module_1.object()
    bool_0 = either_0.__eq__(object_0)
    right_0 = module_0.Right(bytes_0)

def test_case_3():
    float_0 = -2262.48633
    either_0 = module_0.Either(float_0)
    var_0 = either_0.to_box()
    var_1 = None
    str_0 = '[F:|)xNm!i#\r/.UdjYAs'
    left_0 = module_0.Left(var_1)
    var_2 = left_0.map(str_0)
    either_1 = module_0.Either(var_1)

def test_case_4():
    var_0 = None
    left_0 = module_0.Left(var_0)
    either_0 = module_0.Either(var_0)
    var_1 = either_0.to_try()
    right_0 = module_0.Right(left_0)
    left_1 = module_0.Left(right_0)

def test_case_5():
    callable_0 = None
    bytes_0 = b'Px>Pq\x91v\x02\xaa\xa5\xc9"'
    left_0 = module_0.Left(bytes_0)
    left_1 = module_0.Left(left_0)
    var_0 = left_1.map(callable_0)

def test_case_6():
    bool_0 = True
    either_0 = module_0.Either(bool_0)
    str_0 = '`BV;~+L>cq'
    bool_1 = True
    tuple_0 = (str_0, bool_1)
    list_0 = [tuple_0, bool_1, bool_1]
    left_0 = module_0.Left(list_0)
    var_0 = left_0.bind(either_0)
    either_1 = module_0.Either(var_0)
    var_1 = either_1.is_right()

def test_case_7():
    list_0 = []
    list_1 = []
    left_0 = module_0.Left(list_1)
    str_0 = 'G^U3fvk9E'
    right_0 = module_0.Right(str_0)
    var_0 = left_0.ap(list_0)

def test_case_8():
    var_0 = None
    either_0 = module_0.Either(var_0)
    right_0 = module_0.Right(var_0)
    bool_0 = right_0.is_left()
    bytes_0 = b'\xa2\t5\x86J\xb5\x8e\x7f\r\x0b\xac\x9c\xf6'
    object_0 = module_1.object()
    bool_1 = either_0.__eq__(object_0)
    right_1 = module_0.Right(bytes_0)
    left_0 = module_0.Left(var_0)
    bool_2 = left_0.is_left()
    var_1 = either_0.is_right()

def test_case_9():
    str_0 = 'left'
    left_0 = module_0.Left(str_0)
    str_1 = 'right'
    right_0 = module_0.Right(str_1)
    var_0 = left_0 == right_0
    var_1 = right_0 == right_0
    var_2 = left_0 == left_0

def test_case_10():
    str_0 = 'tv?4-<(&4a)f2X?=yf'
    set_0 = {str_0, str_0, str_0, str_0}
    int_0 = 593
    left_0 = module_0.Left(int_0)
    var_0 = left_0.bind(set_0)
    left_1 = module_0.Left(var_0)
    var_1 = left_1.to_maybe()
    bytes_0 = b'a\xd6\x0cW`\x1a`\xa3\xa2\xf2"\xc5d\x17'
    either_0 = module_0.Either(bytes_0)
    left_2 = module_0.Left(either_0)
    bool_0 = left_2.is_right()

def test_case_11():
    callable_0 = None
    bool_0 = False
    left_0 = module_0.Left(bool_0)
    var_0 = left_0.to_validation()
    left_1 = module_0.Left(left_0)
    var_1 = left_1.map(callable_0)

def test_case_12():
    var_0 = None
    either_0 = module_0.Either(var_0)
    right_0 = module_0.Right(var_0)
    bool_0 = right_0.is_left()
    object_0 = module_1.object()
    bool_1 = either_0.__eq__(object_0)