# Automatically generated by Pynguin.
import youtube_dl.aes as module_0
import youtube_dl.utils as module_1

def test_case_0():
    try:
        dict_0 = {}
        var_0 = module_0.shift_rows(dict_0)
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = 5498
        str_0 = '/O}Xkjw2fej6DM/n7E'
        var_0 = module_0.aes_cbc_decrypt(int_0, str_0, int_0)
    except BaseException:
        pass

def test_case_2():
    try:
        dict_0 = None
        list_0 = [dict_0, dict_0, dict_0]
        bool_0 = True
        set_0 = set()
        tuple_0 = (bool_0, set_0)
        str_0 = 'Otilde'
        var_0 = module_0.aes_cbc_encrypt(list_0, tuple_0, str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bool_0 = True
        set_0 = {bool_0, bool_0, bool_0}
        var_0 = module_0.aes_decrypt(bool_0, set_0)
    except BaseException:
        pass

def test_case_4():
    try:
        int_0 = 276
        var_0 = module_0.sub_bytes(int_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'O4kqXdVpPWsZi+lIPmJwSg=='
        var_0 = module_1.bytes_to_intlist(str_0)
        var_1 = module_0.aes_cbc_decrypt(var_0, var_0, str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        int_0 = -3200
        var_0 = module_0.rotate(int_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'O4kqXdVpPWsZi+lIPmJwSg=='
        var_0 = module_1.bytes_to_intlist(str_0)
        var_1 = module_0.aes_cbc_decrypt(str_0, var_0, str_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = 't3 !"DLAr'
        var_0 = module_0.mix_columns_inv(str_0)
    except BaseException:
        pass

def test_case_9():
    try:
        bool_0 = True
        var_0 = module_0.mix_columns_inv(bool_0)
    except BaseException:
        pass

def test_case_10():
    try:
        bytes_0 = b'\xe7r'
        var_0 = module_0.shift_rows_inv(bytes_0)
    except BaseException:
        pass

def test_case_11():
    try:
        set_0 = None
        var_0 = module_0.inc(set_0)
    except BaseException:
        pass

def test_case_12():
    try:
        bytes_0 = b'\xd2\x02\xc7\x00\xb8W\xbd\x93+\xd3@;|\xa4\xf6\x08'
        list_0 = []
        var_0 = module_0.inc(list_0)
        var_1 = module_0.shift_rows_inv(bytes_0)
        dict_0 = {}
        var_2 = module_0.shift_rows(dict_0)
    except BaseException:
        pass

def test_case_13():
    try:
        tuple_0 = ()
        str_0 = ">hlfU._5n'|T"
        var_0 = module_0.aes_decrypt(tuple_0, str_0)
        bool_0 = False
        complex_0 = None
        var_1 = module_0.rijndael_mul(complex_0, bool_0)
        str_1 = '\n9OJX=h2iBxG."$zc3'
        var_2 = module_0.key_schedule_core(tuple_0, str_1)
    except BaseException:
        pass