# Automatically generated by Pynguin.
import youtube_dl.downloader.f4m as module_0

def test_case_0():
    try:
        flv_reader_0 = module_0.FlvReader()
        var_0 = flv_reader_0.read_unsigned_int()
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = b'H\x08\xf2\xe7\xfc,\xe2Y\xa4C!\x82\x93\xdbK\xc7\xb6o'
        list_0 = [bytes_0]
        flv_reader_0 = module_0.FlvReader(*list_0)
        var_0 = flv_reader_0.read_abst()
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b't\x855n\xe6\xd0\xa6\xdc\xe1\xf7\xc7'
        list_0 = [bytes_0]
        flv_reader_0 = module_0.FlvReader(*list_0)
        var_0 = flv_reader_0.read_asrt()
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b"\xf4\x9c'X\xac'\x01\xea\x96\x0b\x89"
        list_0 = [bytes_0]
        flv_reader_0 = module_0.FlvReader(*list_0)
        var_0 = flv_reader_0.read_afrt()
    except BaseException:
        pass

def test_case_4():
    try:
        bool_0 = None
        var_0 = module_0.read_bootstrap_info(bool_0)
    except BaseException:
        pass

def test_case_5():
    try:
        bool_0 = False
        var_0 = module_0.build_fragments_list(bool_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'hD#dT@^,Wa:'
        bool_0 = True
        var_0 = module_0.write_unsigned_int(str_0, bool_0)
    except BaseException:
        pass

def test_case_7():
    try:
        flv_reader_0 = module_0.FlvReader()
        bytes_0 = b'\x7fk\xec\xc6\x03D\xc29\xa7G\xedb\xe1DI\xa6N\xf4[\x04'
        bool_0 = True
        str_0 = ' \r@bl3.'
        tuple_0 = (bytes_0, flv_reader_0, bool_0, str_0)
        var_0 = module_0.write_metadata_tag(flv_reader_0, tuple_0)
    except BaseException:
        pass

def test_case_8():
    try:
        list_0 = []
        var_0 = module_0.remove_encrypted_media(list_0)
        flv_reader_0 = module_0.FlvReader()
        var_1 = module_0.write_flv_header(flv_reader_0)
        var_2 = flv_reader_0.read_afrt()
    except BaseException:
        pass

def test_case_9():
    try:
        dict_0 = {}
        bytes_0 = None
        list_0 = [bytes_0, dict_0]
        bytes_1 = b'7\xd8\xc7\xe0:)?"\xcdVi'
        var_0 = module_0.write_metadata_tag(list_0, bytes_1)
    except BaseException:
        pass

def test_case_10():
    try:
        flv_reader_0 = module_0.FlvReader()
        var_0 = module_0.remove_encrypted_media(flv_reader_0)
        var_1 = flv_reader_0.read_asrt()
    except BaseException:
        pass

def test_case_11():
    try:
        flv_reader_0 = module_0.FlvReader()
        dict_0 = {}
        str_0 = '){Q]I};=jJ{A'
        set_0 = {str_0, str_0, str_0, str_0}
        list_0 = [set_0, str_0, set_0, set_0]
        f4m_f_d_0 = module_0.F4mFD(list_0, set_0)
        var_0 = f4m_f_d_0.real_download(flv_reader_0, dict_0)
    except BaseException:
        pass

def test_case_12():
    try:
        bytes_0 = b't\x855n\xe6\xa8\xa6\xdc\xe1\xf7\x00C'
        list_0 = [bytes_0]
        flv_reader_0 = module_0.FlvReader(*list_0)
        bool_0 = True
        dict_0 = None
        var_0 = module_0.write_metadata_tag(bool_0, dict_0)
        var_1 = flv_reader_0.read_asrt()
    except BaseException:
        pass

def test_case_13():
    try:
        bytes_0 = b'\xa1\x8b\xc4\x9dV\x8aV\x11t\xa2r'
        var_0 = module_0.read_bootstrap_info(bytes_0)
    except BaseException:
        pass

def test_case_14():
    try:
        bytes_0 = b'-8\xdfYe\x17\x00\t\xf9\xab\xc4v\x9bfB\xc7s'
        list_0 = [bytes_0]
        flv_reader_0 = module_0.FlvReader(*list_0)
        var_0 = flv_reader_0.read_asrt()
    except BaseException:
        pass