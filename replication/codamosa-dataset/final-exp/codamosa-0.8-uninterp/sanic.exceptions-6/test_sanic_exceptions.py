# Automatically generated by Pynguin.
import sanic.exceptions as module_0

def test_case_0():
    pass

def test_case_1():
    float_0 = -1099.855
    forbidden_0 = module_0.Forbidden(float_0)
    int_0 = -1363
    py_file_error_0 = module_0.PyFileError(float_0)
    header_not_found_0 = None
    list_0 = [int_0]
    unauthorized_0 = module_0.Unauthorized(list_0)
    unauthorized_1 = module_0.Unauthorized(header_not_found_0, unauthorized_0, py_file_error_0)

def test_case_2():
    header_not_found_0 = None
    service_unavailable_0 = module_0.ServiceUnavailable(header_not_found_0)
    list_0 = [header_not_found_0, service_unavailable_0, service_unavailable_0, header_not_found_0]
    request_timeout_0 = module_0.RequestTimeout(header_not_found_0, list_0)
    not_found_0 = module_0.NotFound(request_timeout_0)
    bool_0 = False
    bytes_0 = b'\x9c\xadA\x10\x9c\xc2.\xe7\x8c\xdc\xcf\n@l\x9e\xe9\xd2*5W'
    header_expectation_failed_0 = module_0.HeaderExpectationFailed(request_timeout_0, bytes_0)
    str_0 = "\t&$O=:^=?'IPU/\n\tk.S"
    str_1 = ',B1*Ja=bv=Z#3k'
    dict_0 = {str_0: header_expectation_failed_0, str_0: header_not_found_0, str_1: str_1}
    unauthorized_0 = module_0.Unauthorized(not_found_0, bool_0, **dict_0)
    unauthorized_1 = module_0.Unauthorized(unauthorized_0)
    header_expectation_failed_1 = module_0.HeaderExpectationFailed(service_unavailable_0, list_0)