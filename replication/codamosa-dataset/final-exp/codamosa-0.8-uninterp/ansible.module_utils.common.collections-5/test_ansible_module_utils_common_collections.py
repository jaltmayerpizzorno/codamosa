# Automatically generated by Pynguin.
import ansible.module_utils.common.collections as module_0

def test_case_0():
    immutable_dict_0 = module_0.ImmutableDict()

def test_case_1():
    set_0 = None
    immutable_dict_0 = module_0.ImmutableDict()
    var_0 = immutable_dict_0.__eq__(set_0)

def test_case_2():
    str_0 = 'N57KR<N!!qd[cHrnyHa'
    dict_0 = {str_0: str_0}
    immutable_dict_0 = module_0.ImmutableDict(**dict_0)
    var_0 = immutable_dict_0.__len__()

def test_case_3():
    immutable_dict_0 = module_0.ImmutableDict()
    list_0 = [immutable_dict_0]
    var_0 = immutable_dict_0.__eq__(list_0)

def test_case_4():
    immutable_dict_0 = module_0.ImmutableDict()
    var_0 = module_0.is_sequence(immutable_dict_0)
    var_1 = module_0.count(immutable_dict_0)
    bytes_0 = b'\xda\x06`)i\x83\xbf\xa5'
    set_0 = {immutable_dict_0, bytes_0, bytes_0}
    var_2 = module_0.is_string(set_0)
    list_0 = []
    var_3 = module_0.is_string(immutable_dict_0)
    immutable_dict_1 = module_0.ImmutableDict()
    var_4 = immutable_dict_1.difference(list_0)
    var_5 = immutable_dict_0.__hash__()

def test_case_5():
    int_0 = 1347
    var_0 = module_0.is_iterable(int_0)

def test_case_6():
    str_0 = 'insserv'
    immutable_dict_0 = module_0.ImmutableDict()
    dict_0 = {}
    var_0 = immutable_dict_0.__eq__(dict_0)
    var_1 = module_0.is_iterable(immutable_dict_0)
    var_2 = immutable_dict_0.__eq__(str_0)

def test_case_7():
    immutable_dict_0 = module_0.ImmutableDict()
    var_0 = module_0.is_sequence(immutable_dict_0)
    int_0 = 1347
    var_1 = module_0.is_iterable(int_0)

def test_case_8():
    str_0 = 'goto'
    float_0 = -195.0
    tuple_0 = (float_0,)
    str_1 = '+o2@Xm}\t'
    str_2 = '/J)L3Qo}o`kUFcvl:d'
    dict_0 = {str_0: tuple_0, str_1: float_0, str_2: str_2}
    var_0 = module_0.count(dict_0)

def test_case_9():
    str_0 = 'op^'
    str_1 = 'r_S,'
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_0, str_1: str_1}
    list_0 = []
    tuple_0 = ()
    var_0 = module_0.is_string(tuple_0)
    immutable_dict_0 = module_0.ImmutableDict()
    var_1 = immutable_dict_0.__repr__()
    immutable_dict_1 = module_0.ImmutableDict(**dict_0)
    var_2 = immutable_dict_1.difference(tuple_0)
    var_3 = immutable_dict_1.__repr__()
    immutable_dict_2 = module_0.ImmutableDict(*list_0)
    bool_0 = False
    list_1 = []
    var_4 = module_0.is_sequence(bool_0, list_1)
    var_5 = immutable_dict_2.difference(dict_0)
    var_6 = immutable_dict_2.__repr__()

def test_case_10():
    str_0 = 'missing'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    immutable_dict_0 = module_0.ImmutableDict(**dict_0)
    float_0 = -115.270669
    complex_0 = None
    bool_0 = True
    tuple_0 = (immutable_dict_0, float_0, complex_0, bool_0)
    var_0 = module_0.is_iterable(dict_0, tuple_0)
    immutable_dict_1 = module_0.ImmutableDict()
    var_1 = immutable_dict_1.__repr__()

def test_case_11():
    list_0 = None
    dict_0 = {list_0: list_0}
    list_1 = [dict_0, dict_0, list_0]
    str_0 = '&a+HsFha+`DQ#'
    str_1 = '~fY\t_<u2'
    str_2 = 'Kn<b\\SNV"e$aqb'
    dict_1 = {str_0: list_1, str_1: str_1, str_2: dict_0}
    var_0 = module_0.is_sequence(list_1, dict_1)

def test_case_12():
    bytes_0 = b'\x0ct\xafFF\xae\xa8\xe7%O_\xbd*\x03\xe2v\x07\x855\xbd'
    float_0 = -945.45
    list_0 = [bytes_0, bytes_0, bytes_0, float_0]
    immutable_dict_0 = module_0.ImmutableDict()
    str_0 = 'INTERPRETER_%s'
    str_1 = '([^A-Za-z0-9_])'
    var_0 = module_0.is_sequence(immutable_dict_0)
    list_1 = [str_1, float_0, float_0]
    var_1 = immutable_dict_0.__eq__(list_1)
    bool_0 = True
    var_2 = module_0.is_sequence(bool_0)
    set_0 = None
    var_3 = module_0.is_iterable(set_0)
    float_1 = 2518.70468
    var_4 = immutable_dict_0.__eq__(float_1)
    dict_0 = {var_3: float_0}
    var_5 = module_0.count(dict_0)
    immutable_dict_1 = module_0.ImmutableDict()
    var_6 = immutable_dict_1.__eq__(str_0)
    var_7 = immutable_dict_1.__len__()
    var_8 = module_0.count(list_0)
    var_9 = immutable_dict_0.__iter__()
    var_10 = immutable_dict_1.__hash__()
    var_11 = immutable_dict_1.__repr__()
    var_12 = immutable_dict_0.__repr__()
    dict_1 = {str_0: str_1, str_1: str_1}
    immutable_dict_2 = module_0.ImmutableDict(**dict_1)
    var_13 = immutable_dict_2.difference(list_1)
    var_14 = immutable_dict_2.__hash__()