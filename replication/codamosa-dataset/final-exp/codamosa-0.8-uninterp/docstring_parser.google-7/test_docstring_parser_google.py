# Automatically generated by Pynguin.
import docstring_parser.google as module_0

def test_case_0():
    pass

def test_case_1():
    google_parser_0 = module_0.GoogleParser()

def test_case_2():
    google_parser_0 = module_0.GoogleParser()
    str_0 = ')um#a[~:k\nw+'
    list_0 = [google_parser_0, google_parser_0, google_parser_0]
    section_0 = module_0.Section(*list_0)
    var_0 = google_parser_0.add_section(section_0)
    docstring_0 = module_0.parse(str_0)

def test_case_3():
    str_0 = 'Notes'
    docstring_0 = module_0.parse(str_0)

def test_case_4():
    str_0 = 'Parser for numpydoc raises sections.\n\n    E.g. any section that looks like this:\n        return_name : type\n            A description of this returned value\n        another_type\n            Return names are optional, types are required\n    '
    docstring_0 = module_0.parse(str_0)

def test_case_5():
    str_0 = 'Test\n\n        Arguments:\n            arg1: first arg\n            arg2 (str): second arg\n\n        Returns:\n            NoneType: no return value\n        '
    docstring_0 = module_0.parse(str_0)
    str_1 = None
    docstring_1 = module_0.parse(str_1)

def test_case_6():
    section_type_0 = module_0.SectionType.MULTIPLE
    str_0 = 'x>yJt6&bqAj`\n'
    str_1 = 'Example'
    dict_0 = {str_0: section_type_0, str_1: str_1, str_1: str_0}
    google_parser_0 = module_0.GoogleParser(dict_0)

def test_case_7():
    str_0 = 'Test\n\n        Arguments:\n            arg1: first arg\n            arg2 (str): second arg\n\n        Returns:\n            NoneType: no return value\n        '
    docstring_0 = module_0.parse(str_0)

def test_case_8():
    str_0 = 'Tst\n\n        Arguments:\n            arg1: first arg\n            arg2 (str): second arg\n\n        Returs:\n            NoneType: no return value\n        '
    docstring_0 = module_0.parse(str_0)

def test_case_9():
    google_parser_0 = module_0.GoogleParser()
    str_0 = '\n    Args:\n        param1 (str): Description of `param1`.\n        param2 (int, optional): Description of `param2`. Defaults to 42.\n            This description is multi-line.\n        *args: Description of `args`.\n        **kwargs: Description of `kwargs`.\n    '
    docstring_0 = google_parser_0.parse(str_0)

def test_case_10():
    none_type_0 = None
    bool_0 = False
    google_parser_0 = module_0.GoogleParser(none_type_0, bool_0)
    str_0 = '#H/,\x0c%\n00wSf;R{&T@*2'
    docstring_0 = google_parser_0.parse(str_0)

def test_case_11():
    str_0 = 'Test\n\n        Arguments:\n            arg1: fi6st arg\n            arg2 (str): second arg\n\n       Returns:\n            N:neType: no return value\n        '
    docstring_0 = module_0.parse(str_0)

def test_case_12():
    str_0 = 'Test\n\n        Arguments:\n            arg1: first arg\n            arg2 (str): second arg\n\n        Returns:\n         v  NoneType: no return value\n        '
    docstring_0 = module_0.parse(str_0)

def test_case_13():
    str_0 = 'Test\n\n        Arguments:\n            arg1: first arg\n            arg2 (str): second arg\n\n        Returns:\n         v  NoneType: no return value\n        '
    docstring_0 = module_0.parse(str_0)
    str_1 = 'Test\n\n       Arguments:\n            arg1: first arg\n            arg2 (str) second arg\n\n        Returns:\n            NoneType: no return value\n        '
    docstring_1 = module_0.parse(str_1)
    str_2 = 'BgTW9x,'
    docstring_2 = module_0.parse(str_2)
    google_parser_0 = module_0.GoogleParser()