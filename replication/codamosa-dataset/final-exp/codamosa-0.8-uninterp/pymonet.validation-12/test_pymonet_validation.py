# Automatically generated by Pynguin.
import pymonet.validation as module_0

def test_case_0():
    pass

def test_case_1():
    bool_0 = False
    int_0 = False
    validation_0 = module_0.Validation(bool_0, int_0)

def test_case_2():
    str_0 = '$6Wb\n5=>p.UG\\=o'
    int_0 = 2967
    float_0 = 651.282049
    set_0 = {int_0, int_0, float_0}
    list_0 = [float_0]
    validation_0 = module_0.Validation(set_0, list_0)
    var_0 = validation_0.__eq__(str_0)

def test_case_3():
    int_0 = -2013
    set_0 = {int_0}
    validation_0 = module_0.Validation(int_0, set_0)
    bool_0 = None
    validation_1 = module_0.Validation(bool_0, int_0)
    var_0 = validation_0.to_maybe()
    int_1 = -3791
    list_0 = [int_1]
    validation_2 = module_0.Validation(list_0, list_0)
    var_1 = validation_2.__str__()
    var_2 = validation_0.is_fail()

def test_case_4():
    bool_0 = False
    list_0 = []
    validation_0 = module_0.Validation(bool_0, list_0)
    float_0 = -852.58
    validation_1 = module_0.Validation(validation_0, float_0)
    str_0 = '7n96yHi)!'
    var_0 = validation_0.__eq__(str_0)
    dict_0 = {}
    validation_2 = module_0.Validation(dict_0, dict_0)
    var_1 = validation_2.__str__()

def test_case_5():
    str_0 = 'pwXt"FV\x0c4k"]_lO}}'
    validation_0 = module_0.Validation(str_0, str_0)
    var_0 = validation_0.is_success()

def test_case_6():
    int_0 = True
    str_0 = 'rG:(4uyfP\n_'
    validation_0 = module_0.Validation(int_0, str_0)
    var_0 = validation_0.is_fail()
    dict_0 = None
    bytes_0 = b'!\xd6\x13\x0c\x0b\xcf\x84h\x07\xac0$\xf4X\x8eS"\xb3K'
    validation_1 = module_0.Validation(dict_0, bytes_0)
    validation_2 = module_0.Validation(validation_1, validation_1)

def test_case_7():
    int_0 = 507
    bytes_0 = None
    set_0 = {int_0, bytes_0, bytes_0, int_0}
    validation_0 = module_0.Validation(int_0, set_0)
    list_0 = [validation_0, validation_0]
    tuple_0 = ()
    validation_1 = module_0.Validation(list_0, tuple_0)
    var_0 = validation_1.to_either()

def test_case_8():
    str_0 = "S[ fPiy#yS{'C+4-v\x0c=J"
    bool_0 = False
    list_0 = [str_0, bool_0]
    validation_0 = module_0.Validation(str_0, list_0)
    var_0 = validation_0.to_try()
    bool_1 = False
    list_1 = []
    validation_1 = module_0.Validation(bool_1, list_1)
    float_0 = 2059.657
    var_1 = validation_1.__eq__(float_0)
    var_2 = validation_1.to_box()
    var_3 = validation_1.to_box()
    bytes_0 = b'\xac\xd3P'
    validation_2 = module_0.Validation(validation_0, bytes_0)
    var_4 = validation_1.to_lazy()
    var_5 = validation_1.to_maybe()
    var_6 = validation_0.to_lazy()

def test_case_9():
    bool_0 = False
    int_0 = False
    validation_0 = module_0.Validation(bool_0, int_0)
    var_0 = validation_0.to_lazy()