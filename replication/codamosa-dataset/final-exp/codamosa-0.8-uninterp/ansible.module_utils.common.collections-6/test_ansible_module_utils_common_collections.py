# Automatically generated by Pynguin.
import ansible.module_utils.common.collections as module_0

def test_case_0():
    immutable_dict_0 = module_0.ImmutableDict()

def test_case_1():
    list_0 = []
    immutable_dict_0 = module_0.ImmutableDict()
    var_0 = immutable_dict_0.__eq__(list_0)

def test_case_2():
    list_0 = []
    immutable_dict_0 = module_0.ImmutableDict(*list_0)
    var_0 = immutable_dict_0.__len__()
    immutable_dict_1 = module_0.ImmutableDict()
    var_1 = immutable_dict_1.__len__()

def test_case_3():
    immutable_dict_0 = module_0.ImmutableDict()
    var_0 = immutable_dict_0.__eq__(immutable_dict_0)
    list_0 = []
    var_1 = immutable_dict_0.__eq__(list_0)

def test_case_4():
    list_0 = []
    str_0 = 'Fx'
    str_1 = ' remove facts that can override internal keys or otherwise deemed unsafe '
    dict_0 = {str_0: list_0, str_1: str_1}
    immutable_dict_0 = module_0.ImmutableDict(*list_0, **dict_0)
    var_0 = immutable_dict_0.__len__()
    float_0 = -97.475622
    var_1 = module_0.is_string(float_0)
    list_1 = []
    immutable_dict_1 = module_0.ImmutableDict(*list_1)
    var_2 = immutable_dict_1.__repr__()
    dict_1 = {var_2: immutable_dict_1}
    var_3 = immutable_dict_1.difference(dict_1)

def test_case_5():
    str_0 = ',#[1*n_#;)B\x0bNhtCl[F'
    list_0 = [str_0, str_0]
    bool_0 = False
    var_0 = module_0.is_sequence(list_0, bool_0)

def test_case_6():
    immutable_dict_0 = module_0.ImmutableDict()
    var_0 = immutable_dict_0.__len__()
    set_0 = {var_0, immutable_dict_0}
    var_1 = module_0.count(set_0)
    list_0 = [set_0, var_1, set_0]
    bytes_0 = b'\x92\xa2\xbb#f\xf2\x1b\x8b'
    float_0 = 1753.796386
    set_1 = {float_0, immutable_dict_0, float_0, var_0, float_0}
    int_0 = 10
    var_2 = module_0.is_string(int_0)
    tuple_0 = (bytes_0, float_0, set_1, immutable_dict_0)
    var_3 = module_0.is_sequence(list_0, tuple_0)
    immutable_dict_1 = module_0.ImmutableDict()

def test_case_7():
    int_0 = 1999
    str_0 = 'Nicz\x0c TL'
    str_1 = 'P7'
    dict_0 = {str_0: int_0, str_0: int_0, str_1: str_1}
    immutable_dict_0 = module_0.ImmutableDict(**dict_0)
    var_0 = immutable_dict_0.difference(str_1)
    bool_0 = False
    tuple_0 = (bool_0,)
    var_1 = module_0.is_string(tuple_0)
    str_2 = 'UXuC3wTw4JBo/U_'
    str_3 = 'wYoCu\x0brX\ny'
    dict_1 = {str_2: int_0, str_3: str_3}
    var_2 = immutable_dict_0.__eq__(dict_1)
    var_3 = immutable_dict_0.__repr__()
    list_0 = []
    set_0 = set()
    tuple_1 = (list_0, set_0)
    var_4 = module_0.is_iterable(tuple_1)
    list_1 = []
    immutable_dict_1 = module_0.ImmutableDict(*list_1)
    var_5 = immutable_dict_0.__eq__(str_2)
    var_6 = module_0.count(set_0)
    str_4 = 'paramiko is not installed: %s'
    var_7 = module_0.is_iterable(int_0, str_4)
    var_8 = module_0.is_string(bool_0)

def test_case_8():
    int_0 = 1999
    str_0 = 'Nicz\x0c TL'
    str_1 = 'P7'
    dict_0 = {str_0: int_0, str_0: int_0, str_1: str_1}
    immutable_dict_0 = module_0.ImmutableDict(**dict_0)
    var_0 = immutable_dict_0.difference(str_1)
    bool_0 = False
    var_1 = immutable_dict_0.difference(dict_0)
    tuple_0 = (bool_0,)
    var_2 = module_0.is_string(tuple_0)
    str_2 = 'UXuC3wTw4JBo/U_'
    str_3 = 'wYoCu\x0brX\ny'
    dict_1 = {str_2: int_0, str_3: str_3}
    var_3 = immutable_dict_0.__eq__(dict_1)
    var_4 = immutable_dict_0.__repr__()
    list_0 = []
    set_0 = set()
    tuple_1 = (list_0, set_0)
    var_5 = module_0.is_iterable(tuple_1)
    bytes_0 = b'F\xa5\x88\x97}\x9d\x117'
    list_1 = []
    immutable_dict_1 = module_0.ImmutableDict(*list_1)
    var_6 = immutable_dict_1.difference(bytes_0)
    var_7 = immutable_dict_0.__eq__(str_2)
    var_8 = module_0.count(set_0)
    float_0 = 60.0
    var_9 = module_0.is_sequence(float_0)
    str_4 = 'paramiko is not installed: %s'
    var_10 = module_0.is_iterable(int_0, str_4)
    var_11 = immutable_dict_0.__len__()
    var_12 = module_0.is_string(bool_0)