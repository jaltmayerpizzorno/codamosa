# Automatically generated by Pynguin.
import ansible.module_utils.common.collections as module_0

def test_case_0():
    try:
        str_0 = 'Connection'
        dict_0 = {}
        immutable_dict_0 = module_0.ImmutableDict(**dict_0)
        var_0 = immutable_dict_0.__getitem__(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bool_0 = True
        immutable_dict_0 = module_0.ImmutableDict()
        var_0 = immutable_dict_0.__repr__()
        var_1 = module_0.count(bool_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bool_0 = True
        bool_1 = True
        dict_0 = {bool_0: bool_0, bool_1: bool_0, bool_0: bool_0}
        immutable_dict_0 = module_0.ImmutableDict()
        str_0 = '*HuDJ BeG<}(~\n#'
        var_0 = immutable_dict_0.__iter__()
        var_1 = module_0.is_string(str_0)
        var_2 = immutable_dict_0.__hash__()
        var_3 = immutable_dict_0.union(dict_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bool_0 = True
        var_0 = module_0.count(bool_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = ' -l "%s"'
        var_0 = module_0.count(str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        float_0 = -1372.328
        dict_0 = {}
        tuple_0 = (float_0, dict_0)
        tuple_1 = (tuple_0,)
        var_0 = module_0.count(tuple_1)
    except BaseException:
        pass

def test_case_6():
    try:
        immutable_dict_0 = module_0.ImmutableDict()
        bytes_0 = b'\xb9\x8a%Z(\x8fu\xe2\xb9\xa2\xdf\xef\xa1'
        var_0 = module_0.is_sequence(bytes_0)
    except BaseException:
        pass

def test_case_7():
    try:
        tuple_0 = None
        list_0 = [tuple_0, tuple_0]
        var_0 = module_0.count(list_0)
        immutable_dict_0 = module_0.ImmutableDict()
        var_1 = immutable_dict_0.__repr__()
        var_2 = immutable_dict_0.__repr__()
        str_0 = 'LO\r1>jkQNco.KXS\x0cWz'
        var_3 = immutable_dict_0.__len__()
        var_4 = immutable_dict_0.__hash__()
        var_5 = immutable_dict_0.union(str_0)
    except BaseException:
        pass

def test_case_8():
    try:
        int_0 = None
        dict_0 = None
        immutable_dict_0 = module_0.ImmutableDict()
        var_0 = immutable_dict_0.__eq__(dict_0)
        str_0 = 'gJ7WJ'
        str_1 = None
        str_2 = '(6&T[N)Wek'
        dict_1 = {str_0: str_0, str_1: int_0, str_2: str_2, str_1: str_2}
        var_1 = module_0.is_iterable(dict_0)
        immutable_dict_1 = module_0.ImmutableDict(**dict_1)
    except BaseException:
        pass