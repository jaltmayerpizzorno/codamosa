# Automatically generated by Pynguin.
import sanic.utils as module_0
import pathlib as module_1

def test_case_0():
    try:
        str_0 = '9oXKgpHt'
        bool_0 = module_0.str_to_bool(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '/k4'
        var_0 = module_0.load_module_from_file_location(str_0, str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = "+C\rMMEZ]?+B')ot"
        var_0 = module_0.load_module_from_file_location(str_0, str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        path_0 = None
        var_0 = module_0.load_module_from_file_location(path_0)
    except BaseException:
        pass

def test_case_4():
    try:
        bytes_0 = b'\xf1\x1a\x1a\xbbL\x1e8\xadlA\xd3\xb8\xd4r$'
        list_0 = [bytes_0]
        var_0 = module_0.load_module_from_file_location(bytes_0, *list_0)
    except BaseException:
        pass

def test_case_5():
    try:
        path_0 = module_1.Path()
        var_0 = module_0.load_module_from_file_location(path_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = '$B'
        var_0 = module_0.load_module_from_file_location(str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = "4T}'.)nf"
        var_0 = module_0.load_module_from_file_location(str_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = 'y'
        bool_0 = module_0.str_to_bool(str_0)
        str_1 = 'JEV<^4|0|$)b%\nSNIZ'
        bool_1 = module_0.str_to_bool(str_1)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = '<div class=tb-header>{exc_name}: {exc_value}</div><div class=tb-wrapper>{frame_html}</div>'
        str_1 = 'f'
        bool_0 = module_0.str_to_bool(str_1)
        var_0 = module_0.load_module_from_file_location(str_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = '/some/path/${SANIC_ENV_VAR_2}'
        var_0 = module_0.load_module_from_file_location(str_0)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = 'test/test_utils/test_config.py'
        var_0 = module_0.load_module_from_file_location(str_0)
    except BaseException:
        pass