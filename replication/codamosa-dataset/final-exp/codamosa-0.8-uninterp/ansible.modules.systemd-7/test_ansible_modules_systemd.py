# Automatically generated by Pynguin.
import ansible.modules.systemd as module_0

def test_case_0():
    pass

def test_case_1():
    int_0 = 1677
    list_0 = [int_0, int_0, int_0, int_0]
    var_0 = module_0.request_was_ignored(list_0)

def test_case_2():
    str_0 = 'Jm+;pI/NK['
    var_0 = module_0.parse_systemctl_show(str_0)

def test_case_3():
    var_0 = module_0.main()

def test_case_4():
    str_0 = 'Jm=;pI/N!['
    var_0 = module_0.parse_systemctl_show(str_0)

def test_case_5():
    str_0 = 'Og\r:b/7=q}E|t'
    int_0 = -3421
    tuple_0 = (int_0, str_0)
    var_0 = module_0.request_was_ignored(tuple_0)
    var_1 = module_0.parse_systemctl_show(str_0)
    var_2 = module_0.request_was_ignored(str_0)
    var_3 = module_0.main()
    var_4 = module_0.main()
    var_5 = module_0.main()
    var_6 = module_0.main()

def test_case_6():
    str_0 = '{\n        path=/usr/bin/bluetoothd ;\n        argv[]=/usr/bin/bluetoothd -C ;\n        ignore_errors=no ;\n        start_time=[n/a] ;\n        stop_time=[n/a] ;\n        pid=0 ;\n        code=(null) ;\n        status=0/0\n    }'
    str_1 = 'ExecStart='
    var_0 = str_1 + str_0
    var_1 = [var_0]
    var_2 = module_0.parse_systemctl_show(var_1)

def test_case_7():
    str_0 = ''
    var_0 = module_0.request_was_ignored(str_0)
    str_1 = '='
    var_1 = module_0.request_was_ignored(str_1)
    str_2 = '=foo'
    var_2 = module_0.request_was_ignored(str_2)
    var_3 = module_0.request_was_ignored(str_0)
    str_3 = 'foo=bar'
    var_4 = module_0.request_was_ignored(str_3)
    str_4 = 'ignoring request'
    var_5 = module_0.request_was_ignored(str_4)
    str_5 = 'ignoring command'
    var_6 = module_0.request_was_ignored(str_5)
    str_6 = 'foo ignoring request'
    var_7 = module_0.request_was_ignored(str_6)
    str_7 = 'foo ignoring command'
    var_8 = module_0.request_was_ignored(str_7)
    str_8 = 'ignoring request bar'
    var_9 = module_0.request_was_ignored(str_8)

def test_case_8():
    str_0 = 'ExecStart='
    var_0 = str_0 + str_0
    var_1 = [var_0]
    var_2 = module_0.parse_systemctl_show(var_1)

def test_case_9():
    str_0 = '{'
    str_1 = 'ExecStPrt='
    var_0 = str_1 + str_0
    set_0 = {var_0, str_1, str_1}
    var_1 = module_0.parse_systemctl_show(set_0)