# Automatically generated by Pynguin.
import ansible.module_utils.facts.hardware.openbsd as module_0

def test_case_0():
    try:
        float_0 = -4821.22376
        open_b_s_d_hardware_0 = module_0.OpenBSDHardware(float_0)
        bytes_0 = b''
        open_b_s_d_hardware_1 = module_0.OpenBSDHardware(bytes_0)
        list_0 = [open_b_s_d_hardware_1]
        open_b_s_d_hardware_2 = module_0.OpenBSDHardware(open_b_s_d_hardware_0, list_0)
        var_0 = open_b_s_d_hardware_2.populate()
    except BaseException:
        pass

def test_case_1():
    try:
        bool_0 = True
        open_b_s_d_hardware_0 = module_0.OpenBSDHardware(bool_0)
        open_b_s_d_hardware_1 = module_0.OpenBSDHardware(open_b_s_d_hardware_0)
        var_0 = open_b_s_d_hardware_1.get_memory_facts()
    except BaseException:
        pass

def test_case_2():
    try:
        float_0 = -3492.118
        open_b_s_d_hardware_collector_0 = module_0.OpenBSDHardwareCollector(float_0)
        bool_0 = True
        open_b_s_d_hardware_0 = module_0.OpenBSDHardware(open_b_s_d_hardware_collector_0, bool_0)
        var_0 = open_b_s_d_hardware_0.get_uptime_facts()
    except BaseException:
        pass

def test_case_3():
    try:
        int_0 = -745
        open_b_s_d_hardware_0 = module_0.OpenBSDHardware(int_0)
        var_0 = open_b_s_d_hardware_0.get_processor_facts()
    except BaseException:
        pass

def test_case_4():
    try:
        float_0 = 0.1
        list_0 = [float_0, float_0, float_0, float_0]
        str_0 = '2&oRube bR\x0c=Ir<s'
        open_b_s_d_hardware_0 = module_0.OpenBSDHardware(list_0, str_0)
        var_0 = open_b_s_d_hardware_0.get_device_facts()
    except BaseException:
        pass

def test_case_5():
    try:
        bytes_0 = b'8\x07p\x06\x13\x00\xae<\xf2k\x97\xf4bx\xed\xf9'
        open_b_s_d_hardware_0 = module_0.OpenBSDHardware(bytes_0)
        var_0 = open_b_s_d_hardware_0.get_dmi_facts()
    except BaseException:
        pass