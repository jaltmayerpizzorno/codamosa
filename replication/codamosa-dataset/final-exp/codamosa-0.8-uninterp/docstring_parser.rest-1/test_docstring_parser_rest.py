# Automatically generated by Pynguin.
import docstring_parser.rest as module_0

def test_case_0():
    pass

def test_case_1():
    str_0 = '\n    Summary line.\n\n    Extended description.\n\n    :param arg1: The first argument.\n    :type arg1: str\n    :param arg2: The second argument.\n    :type arg2: int, optional\n    :returns: description of return value\n    :rtype: bool\n    :raises keyError: raises an exception\n    '
    docstring_0 = module_0.parse(str_0)

def test_case_2():
    str_0 = 'yuVMh|\n(PPq=|BO<%c'
    docstring_0 = module_0.parse(str_0)

def test_case_3():
    str_0 = '\n       this is the first line\n       this is the second line\n\n       :raises: ValueError\n       :param name: parameter description\n       :type name: str\n       :returns: returns description\n       :rtype: str\n\n       this is the third line\n       this is the fourth line\n\n       :param name2: parameter description\n       :type name2: str\n       :raises ValueError: this is the raised exception description\n\n       this is the fifth line\n\n    '
    docstring_0 = module_0.parse(str_0)

def test_case_4():
    str_0 = ''
    docstring_0 = module_0.parse(str_0)

def test_case_5():
    str_0 = 'X^dE;1Nb/5W\x0c'
    docstring_0 = module_0.parse(str_0)

def test_case_6():
    str_0 = '0Mk\n '
    docstring_0 = module_0.parse(str_0)

def test_case_7():
    str_0 = '    '
    docstring_0 = module_0.parse(str_0)

def test_case_8():
    str_0 = 'Single line doc.\n    :arg int a: int parameter\n    :yields int: (int)\n    :returns: int\n    '
    docstring_0 = module_0.parse(str_0)

def test_case_9():
    str_0 = '\n    A short description.\n\n    A long description.\n\n    :param str table: A database table name.\n    :returns: A database connection string.\n    '
    docstring_0 = module_0.parse(str_0)

def test_case_10():
    str_0 = '    This function does something.\n\n    :param foo: The foo.\n    :type foo: str, optional\n    :param quux: The quux defaults to 3.\n    :type quux: int, optional\n    :param bar: The bar, optional\n    :returns: The return value.\n    :rtype: int\n    '
    docstring_0 = module_0.parse(str_0)