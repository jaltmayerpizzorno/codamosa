# Automatically generated by Pynguin.
import ansible.playbook.helpers as module_0

def test_case_0():
    try:
        tuple_0 = ()
        float_0 = -961.467
        bool_0 = False
        var_0 = module_0.load_list_of_blocks(tuple_0, float_0, bool_0, tuple_0, tuple_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bool_0 = False
        int_0 = 27
        bytes_0 = b'i\xfe\x1f\x9e\x1d\xdaR\x13_\xd2\xb3\x998k'
        var_0 = module_0.load_list_of_tasks(bool_0, int_0, bytes_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'collection-imports'
        list_0 = [str_0, str_0, str_0]
        set_0 = set()
        bytes_0 = b',$\x91'
        var_0 = module_0.load_list_of_blocks(list_0, set_0, bytes_0, set_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '68~IEu/)P 5iCpMV\x0c{A'
        list_0 = []
        bool_0 = None
        int_0 = 1140
        float_0 = -10.7
        set_0 = {int_0, float_0, str_0}
        tuple_0 = ()
        float_1 = -399.99
        var_0 = module_0.load_list_of_tasks(list_0, set_0, tuple_0, set_0, float_1)
        bool_1 = False
        dict_0 = {int_0: str_0, float_0: bool_1, int_0: bool_0}
        var_1 = module_0.load_list_of_roles(list_0, bool_0, tuple_0)
        var_2 = module_0.load_list_of_blocks(dict_0, tuple_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = '68~IEu/)P 5iCpMV\x0c{A'
        list_0 = []
        bool_0 = None
        int_0 = 1140
        float_0 = -10.7
        set_0 = {int_0, float_0, str_0}
        tuple_0 = ()
        float_1 = -399.99
        bool_1 = False
        dict_0 = {int_0: str_0, tuple_0: str_0, float_0: bool_1, float_1: set_0, int_0: bool_0}
        tuple_1 = (int_0, float_0, dict_0)
        var_0 = module_0.load_list_of_roles(list_0, bool_0, tuple_1)
        var_1 = module_0.load_list_of_blocks(dict_0, tuple_1)
    except BaseException:
        pass

def test_case_5():
    try:
        bool_0 = False
        set_0 = {bool_0}
        str_0 = ''
        var_0 = module_0.load_list_of_roles(bool_0, set_0, bool_0, str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        bool_0 = True
        list_0 = [bool_0, bool_0]
        dict_0 = None
        set_0 = {dict_0, dict_0, dict_0}
        str_0 = ''
        bytes_0 = b"\xdf\xf1\x87\x07'\xb5[m\x86s\xe5\x9b\x0b\xb6\x96Z\x02_"
        var_0 = module_0.load_list_of_roles(list_0, set_0, str_0, bytes_0)
    except BaseException:
        pass

def test_case_7():
    try:
        set_0 = None
        bool_0 = True
        str_0 = 'i'
        var_0 = module_0.load_list_of_blocks(set_0, bool_0, str_0)
        bytes_0 = b'?'
        list_0 = [set_0, str_0, bytes_0, str_0]
        str_1 = '0gxpx?x`^l+>\x0b'
        str_2 = "2v329buA'pY{m;j,^"
        var_1 = module_0.load_list_of_blocks(list_0, str_1, str_2)
    except BaseException:
        pass

def test_case_8():
    try:
        var_0 = {}
        var_1 = {}
        var_2 = [var_0, var_1]
        int_0 = 1
        var_3 = None
        bool_0 = False
        var_4 = module_0.load_list_of_tasks(var_2, int_0, var_3, var_3, var_3, bool_0, var_3, var_3)
    except BaseException:
        pass

def test_case_9():
    try:
        set_0 = None
        bool_0 = False
        str_0 = ']T='
        str_1 = '_t9rm'
        float_0 = None
        dict_0 = {set_0: str_0, str_1: str_0}
        list_0 = [dict_0, dict_0]
        str_2 = 's`a:i.UU'
        dict_1 = {float_0: str_2}
        var_0 = module_0.load_list_of_blocks(list_0, str_2, bool_0, bool_0, dict_1, dict_1)
    except BaseException:
        pass

def test_case_10():
    try:
        bool_0 = True
        str_0 = '_terms'
        dict_0 = {str_0: str_0, str_0: str_0}
        list_0 = [dict_0]
        str_1 = 's\x0b`a:i.UU'
        var_0 = module_0.load_list_of_blocks(list_0, str_1, bool_0, bool_0, dict_0, dict_0)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = 'include.yaml'
        var_0 = dict(include=str_0)
        str_1 = 'shell'
        str_2 = {str_1: str_0}
        var_1 = [str_2, str_2, var_0]
        bool_0 = True
        var_2 = module_0.load_list_of_tasks(var_1, str_2, str_2, str_2, str_2, bool_0, str_2, str_2)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = 'include.yaml'
        var_0 = dict(include=str_0)
        str_1 = 'shell'
        str_2 = {str_1: str_0}
        var_1 = [str_2, str_2, var_0]
        bool_0 = False
        var_2 = module_0.load_list_of_tasks(var_1, str_2, str_2, str_2, str_2, bool_0, str_2, str_2)
    except BaseException:
        pass

def test_case_13():
    try:
        set_0 = None
        list_0 = [set_0, set_0]
        bool_0 = False
        str_0 = '%uddgk0*(C!]46NQ@;-'
        var_0 = module_0.load_list_of_blocks(list_0, bool_0, str_0, bool_0)
        bool_1 = False
        str_1 = ']9TV=&'
        str_2 = '?LvuT'
        float_0 = None
        dict_0 = {str_2: str_1, str_2: str_1}
        list_1 = [dict_0, dict_0]
        str_3 = ''
        dict_1 = {float_0: str_3, set_0: str_2}
        var_1 = module_0.load_list_of_blocks(list_1, str_3, bool_1, bool_1, dict_1, dict_1)
    except BaseException:
        pass

def test_case_14():
    try:
        str_0 = 'block'
        int_0 = 0
        int_1 = 1
        int_2 = [int_0, int_1]
        int_3 = {str_0: int_2}
        int_4 = [int_3]
        var_0 = None
        bool_0 = False
        var_1 = module_0.load_list_of_tasks(int_4, var_0, var_0, var_0, var_0, bool_0, var_0, var_0)
    except BaseException:
        pass