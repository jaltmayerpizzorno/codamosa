# Automatically generated by Pynguin.
import dataclasses_json.core as module_0
import decimal as module_1

def test_case_0():
    try:
        field_override_0 = module_0.FieldOverride()
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'i_iK*z\x0b$4TSng=9*'
        extended_encoder_0 = module_0._ExtendedEncoder(check_circular=str_0)
        var_0 = extended_encoder_0.default(str_0)
        dict_0 = {str_0: var_0, str_0: str_0}
        var_1 = extended_encoder_0.default(dict_0)
        var_2 = extended_encoder_0.default(extended_encoder_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'i_iK*z\x0b$4TSng=9*'
        extended_encoder_0 = module_0._ExtendedEncoder(check_circular=str_0)
        var_0 = extended_encoder_0.default(str_0)
        var_1 = extended_encoder_0.default(extended_encoder_0)
    except BaseException:
        pass

def test_case_3():
    try:
        extended_encoder_0 = module_0._ExtendedEncoder()
        var_0 = extended_encoder_0.default(extended_encoder_0)
    except BaseException:
        pass

def test_case_4():
    try:
        int_0 = False
        extended_encoder_0 = module_0._ExtendedEncoder()
        bool_0 = False
        decimal_0 = module_1.Decimal()
        var_0 = extended_encoder_0.default(decimal_0)
        str_0 = '}pL[S:,l8'
        set_0 = {int_0, int_0, str_0}
        bytes_0 = b'\x8b\xbbx\xc0\xe4\xe3\xf5\x0e{\xce\xe0}\xd1\xde\x1f\x9eV!'
        list_0 = None
        extended_encoder_1 = module_0._ExtendedEncoder(ensure_ascii=list_0, check_circular=int_0)
        extended_encoder_2 = module_0._ExtendedEncoder(ensure_ascii=str_0, sort_keys=set_0, indent=bytes_0)
        var_1 = extended_encoder_2.default(bool_0)
    except BaseException:
        pass