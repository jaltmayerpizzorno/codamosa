# Automatically generated by Pynguin.
import pymonet.maybe as module_0
import builtins as module_1

def test_case_0():
    pass

def test_case_1():
    str_0 = None
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)

def test_case_2():
    object_0 = module_1.object()
    str_0 = "m$/}Su''\r0"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    bool_1 = maybe_0.__eq__(object_0)

def test_case_3():
    str_0 = 'jBwUi1uZA?]IT=5\x0ci'
    set_0 = set()
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)
    var_0 = maybe_0.map(str_0)

def test_case_4():
    var_0 = None
    str_0 = 'T'
    str_1 = 'XE'
    tuple_0 = (str_0, str_1)
    list_0 = [str_1]
    int_0 = True
    tuple_1 = (tuple_0, list_0, int_0, str_1)
    bool_0 = True
    maybe_0 = module_0.Maybe(tuple_1, bool_0)
    var_1 = maybe_0.bind(var_0)

def test_case_5():
    var_0 = None
    bool_0 = True
    maybe_0 = module_0.Maybe(var_0, bool_0)
    str_0 = "N8>|'"
    set_0 = {bool_0, var_0, str_0, var_0}
    var_1 = maybe_0.map(str_0)
    str_1 = 'p]T_d;U#fG'
    str_2 = 'c'
    maybe_1 = module_0.Maybe(var_0, bool_0)
    var_2 = maybe_0.to_box()
    dict_0 = {str_0: set_0, str_0: str_0, str_1: str_0, str_2: set_0}
    var_3 = maybe_0.to_try()
    maybe_2 = module_0.Maybe(var_0, bool_0)
    var_4 = maybe_0.ap(dict_0)

def test_case_6():
    callable_0 = None
    int_0 = 1792
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0.filter(callable_0)

def test_case_7():
    bytes_0 = b''
    int_0 = -2155
    str_0 = "D\\hv()'1t(P%5'a;ZbE!"
    bool_0 = False
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.get_or_else(int_0)
    str_1 = 'U}L7'
    object_0 = module_1.object()
    tuple_0 = (str_1, object_0)
    bool_1 = True
    maybe_1 = module_0.Maybe(tuple_0, bool_1)
    var_1 = maybe_1.filter(bytes_0)
    bytes_1 = b"'_"
    var_2 = maybe_1.bind(bytes_1)

def test_case_8():
    bytes_0 = b'\xcb\x9b\xb2\x81x=\r\xab\xd5/\xe6'
    var_0 = None
    list_0 = [var_0]
    bool_0 = True
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_1 = maybe_0.get_or_else(bytes_0)

def test_case_9():
    tuple_0 = ()
    bool_0 = True
    object_0 = module_1.object()
    float_0 = -1097.29
    set_0 = {bool_0, float_0}
    list_0 = [tuple_0, bool_0, set_0]
    bool_1 = None
    maybe_0 = module_0.Maybe(list_0, bool_1)
    list_1 = [list_0]
    var_0 = maybe_0.get_or_else(tuple_0)
    maybe_1 = module_0.Maybe(list_1, bool_0)
    var_1 = maybe_1.filter(maybe_0)
    bool_2 = False
    maybe_2 = module_0.Maybe(list_0, bool_2)
    bool_3 = maybe_2.__eq__(object_0)
    maybe_3 = module_0.Maybe(tuple_0, bool_0)
    var_2 = maybe_3.to_lazy()
    var_3 = maybe_2.to_either()
    var_4 = maybe_3.to_validation()

def test_case_10():
    tuple_0 = ()
    bool_0 = True
    object_0 = module_1.object()
    float_0 = -1097.29
    set_0 = {bool_0, float_0}
    list_0 = [tuple_0, bool_0, set_0]
    list_1 = [list_0]
    maybe_0 = module_0.Maybe(list_1, bool_0)
    var_0 = maybe_0.filter(maybe_0)
    maybe_1 = module_0.Maybe(list_0, bool_0)
    bool_1 = maybe_1.__eq__(object_0)
    maybe_2 = module_0.Maybe(tuple_0, bool_0)
    var_1 = maybe_2.to_lazy()
    var_2 = maybe_1.to_either()
    var_3 = maybe_2.to_validation()

def test_case_11():
    float_0 = 1758.6
    object_0 = module_1.object()
    float_1 = 146.2947
    bool_0 = False
    maybe_0 = module_0.Maybe(float_1, bool_0)
    bool_1 = maybe_0.__eq__(object_0)
    list_0 = [float_0]
    bool_2 = False
    maybe_1 = module_0.Maybe(list_0, bool_2)
    bool_3 = False
    maybe_2 = module_0.Maybe(float_0, bool_3)
    var_0 = maybe_2.to_box()

def test_case_12():
    float_0 = -925.609601
    dict_0 = {}
    bool_0 = True
    object_0 = module_1.object()
    list_0 = [float_0, dict_0, dict_0]
    maybe_0 = module_0.Maybe(list_0, bool_0)
    var_0 = maybe_0.map(object_0)
    maybe_1 = module_0.Maybe(dict_0, bool_0)
    var_1 = maybe_1.get_or_else(float_0)
    var_2 = maybe_1.to_box()

def test_case_13():
    bytes_0 = b')\x1e\xc53\xa2~\x9e\xbb\x05'
    bool_0 = True
    maybe_0 = module_0.Maybe(bytes_0, bool_0)
    var_0 = maybe_0.to_try()

def test_case_14():
    tuple_0 = ()
    bool_0 = True
    object_0 = module_1.object()
    float_0 = -1097.29
    set_0 = {bool_0, float_0}
    list_0 = [tuple_0, bool_0, set_0]
    bool_1 = None
    maybe_0 = module_0.Maybe(list_0, bool_1)
    list_1 = [list_0]
    var_0 = maybe_0.get_or_else(tuple_0)
    maybe_1 = module_0.Maybe(list_1, bool_0)
    var_1 = maybe_1.filter(maybe_0)
    bool_2 = False
    maybe_2 = module_0.Maybe(list_0, bool_2)
    bool_3 = maybe_2.__eq__(object_0)
    maybe_3 = module_0.Maybe(tuple_0, bool_0)
    var_2 = maybe_3.to_lazy()
    var_3 = maybe_2.to_either()
    var_4 = maybe_2.to_validation()

def test_case_15():
    float_0 = 1442.42
    bool_0 = True
    maybe_0 = module_0.Maybe(float_0, bool_0)
    maybe_1 = module_0.Maybe(maybe_0, bool_0)
    var_0 = maybe_1.to_validation()

def test_case_16():
    int_0 = 1
    bool_0 = False
    maybe_0 = module_0.Maybe(int_0, bool_0)
    maybe_1 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0 == maybe_1
    maybe_2 = module_0.Maybe(int_0, bool_0)
    int_1 = 2
    maybe_3 = module_0.Maybe(int_1, bool_0)
    var_1 = maybe_2 == maybe_3
    maybe_4 = module_0.Maybe(int_0, bool_0)
    bool_1 = True
    maybe_5 = module_0.Maybe(int_1, bool_1)
    var_2 = maybe_4 == maybe_5
    bool_2 = True
    maybe_6 = module_0.Maybe(bool_1, bool_2)
    maybe_7 = module_0.Maybe(int_1, bool_0)
    var_3 = maybe_6 == maybe_7
    var_4 = var_1 or var_2 or var_3

def test_case_17():
    int_0 = 1
    bool_0 = True
    maybe_0 = module_0.Maybe(int_0, bool_0)
    maybe_1 = module_0.Maybe(int_0, bool_0)
    var_0 = maybe_0 == maybe_1
    maybe_2 = module_0.Maybe(int_0, bool_0)
    int_1 = 2
    maybe_3 = module_0.Maybe(int_1, bool_0)
    var_1 = maybe_2 == maybe_3
    maybe_4 = module_0.Maybe(int_0, bool_0)
    bool_1 = True
    maybe_5 = module_0.Maybe(int_1, bool_1)
    var_2 = maybe_4 == maybe_5
    bool_2 = True
    maybe_6 = module_0.Maybe(bool_1, bool_2)
    maybe_7 = module_0.Maybe(int_1, bool_0)
    var_3 = maybe_6 == maybe_2
    var_4 = var_1 or var_2 or var_3