# Automatically generated by Pynguin.
import pymonet.maybe as module_0
import builtins as module_1

def test_case_0():
    try:
        list_0 = []
        var_0 = None
        bool_0 = False
        var_1 = None
        maybe_0 = module_0.Maybe(var_1, bool_0)
        maybe_1 = module_0.Maybe(list_0, bool_0)
        maybe_2 = module_0.Maybe(maybe_1, bool_0)
        bool_1 = False
        maybe_3 = module_0.Maybe(maybe_2, bool_1)
        var_2 = maybe_3.map(var_0)
    except BaseException:
        pass

def test_case_1():
    try:
        set_0 = None
        bool_0 = False
        list_0 = [bool_0, bool_0, bool_0, bool_0]
        maybe_0 = module_0.Maybe(list_0, bool_0)
        list_1 = [set_0, set_0]
        var_0 = maybe_0.bind(list_1)
    except BaseException:
        pass

def test_case_2():
    try:
        int_0 = False
        bool_0 = False
        maybe_0 = module_0.Maybe(int_0, bool_0)
        var_0 = maybe_0.to_try()
        bytes_0 = b'\xcb\xdfaK\xb9\xf8\xcc\n\xbe{\xfd\xac\xb1\xe9'
        var_1 = maybe_0.ap(bytes_0)
    except BaseException:
        pass

def test_case_3():
    try:
        list_0 = []
        object_0 = module_1.object(*list_0)
        bool_0 = False
        maybe_0 = module_0.Maybe(object_0, bool_0)
        tuple_0 = ()
        maybe_1 = module_0.Maybe(tuple_0, bool_0)
        var_0 = maybe_1.to_lazy()
        var_1 = maybe_0.to_lazy()
        var_2 = maybe_0.to_try()
        var_3 = maybe_0.to_try()
        tuple_1 = (list_0, list_0)
        bool_1 = True
        maybe_2 = module_0.Maybe(tuple_1, bool_1)
        var_4 = maybe_2.map(bool_1)
        var_5 = maybe_0.to_try()
        var_6 = maybe_1.ap(tuple_0)
    except BaseException:
        pass

def test_case_4():
    try:
        int_0 = True
        bool_0 = False
        maybe_0 = module_0.Maybe(int_0, bool_0)
        var_0 = maybe_0.to_try()
        str_0 = 'UM.lL>+#m/'
        int_1 = 294
        bool_1 = True
        tuple_0 = (maybe_0, str_0, int_1, bool_1)
        var_1 = maybe_0.filter(tuple_0)
    except BaseException:
        pass

def test_case_5():
    try:
        int_0 = 2
        bool_0 = True
        maybe_0 = module_0.Maybe(int_0, bool_0)
        var_0 = maybe_0.filter(maybe_0)
        bool_1 = False
        maybe_1 = module_0.Maybe(int_0, bool_1)
        var_1 = maybe_1.filter(maybe_1)
    except BaseException:
        pass