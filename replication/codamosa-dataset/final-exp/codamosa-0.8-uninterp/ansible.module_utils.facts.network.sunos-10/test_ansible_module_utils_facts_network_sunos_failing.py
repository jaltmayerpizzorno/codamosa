# Automatically generated by Pynguin.
import ansible.module_utils.facts.network.sunos as module_0

def test_case_0():
    try:
        int_0 = 1183
        bytes_0 = b'\x19{s\xb9z\xff\xb8m'
        tuple_0 = (bytes_0,)
        dict_0 = {tuple_0: tuple_0, tuple_0: bytes_0, bytes_0: bytes_0}
        sun_o_s_network_0 = module_0.SunOSNetwork(dict_0)
        var_0 = sun_o_s_network_0.get_interfaces_info(int_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = ''
        list_0 = [str_0, str_0]
        set_0 = {str_0}
        str_1 = '\x0b]8lz_v~7\t\x0cC/M\n>'
        str_2 = 'groupadd'
        sun_o_s_network_0 = module_0.SunOSNetwork(str_2)
        var_0 = sun_o_s_network_0.parse_interface_line(list_0, set_0, str_1)
    except BaseException:
        pass

def test_case_2():
    try:
        list_0 = []
        sun_o_s_network_collector_0 = None
        bytes_0 = b'x!\xcd%\x18P\x8e\xf8\x99\x95]'
        dict_0 = {sun_o_s_network_collector_0: bytes_0, sun_o_s_network_collector_0: bytes_0}
        tuple_0 = (sun_o_s_network_collector_0, dict_0)
        bool_0 = False
        str_0 = "'(gbG^Z${P'%Gj}sdE="
        sun_o_s_network_0 = module_0.SunOSNetwork(bool_0, str_0)
        var_0 = sun_o_s_network_0.parse_ether_line(list_0, tuple_0, list_0)
    except BaseException:
        pass

def test_case_3():
    try:
        sun_o_s_network_collector_0 = module_0.SunOSNetworkCollector()
        str_0 = 'Q R"}WY'
        bool_0 = False
        str_1 = 'C'
        tuple_0 = (sun_o_s_network_collector_0, bool_0, str_1)
        bytes_0 = b'\xbegg\xc3\xfd8k\xa1 \x89'
        sun_o_s_network_0 = module_0.SunOSNetwork(tuple_0, bytes_0)
        bytes_1 = b'\t&\xa6O5[2\x97\x15'
        list_0 = [bytes_1, sun_o_s_network_0, bool_0, str_0]
        float_0 = 787.14
        sun_o_s_network_1 = module_0.SunOSNetwork(float_0)
        var_0 = sun_o_s_network_1.parse_ether_line(str_0, sun_o_s_network_0, list_0)
    except BaseException:
        pass