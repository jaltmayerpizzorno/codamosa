# Automatically generated by Pynguin.
import ansible.utils.collection_loader._collection_finder as module_0

def test_case_0():
    try:
        bytes_0 = b'\xf1'
        ansible_collection_pkg_loader_0 = module_0._AnsibleCollectionPkgLoader(bytes_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'ansible_collections.test_collection'
        ansible_collection_pkg_loader_base_0 = module_0._AnsibleCollectionPkgLoaderBase(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = "'G&S1\x0bh:',k 7@"
        ansible_collection_loader_0 = None
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder(ansible_collection_loader_0)
        ansible_collection_pkg_loader_0 = module_0._AnsibleCollectionPkgLoader(str_0, ansible_collection_finder_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'ansible_collections.foo'
        ansible_collection_root_pkg_loader_0 = module_0._AnsibleCollectionRootPkgLoader(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'ansible_collections.test.test.test'
        float_0 = 5509.545141
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
        var_0 = ansible_collection_finder_0.find_module(str_0, float_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'asible.fo.bar.baz'
        ansible_internal_redirect_loader_0 = module_0._AnsibleInternalRedirectLoader(str_0, str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'ansible.foo.bar.baz'
        ansible_internal_redirect_loader_0 = module_0._AnsibleInternalRedirectLoader(str_0, str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'ns.coll'
        ansible_collection_ref_0 = module_0.AnsibleCollectionRef(str_0, str_0, str_0, str_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = '3s.tc-ll'
        ansible_collection_ref_0 = module_0.AnsibleCollectionRef(str_0, str_0, str_0, str_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'ansible_collections.test.test.test'
        ansible_collection_pkg_loader_base_0 = module_0._AnsibleCollectionPkgLoaderBase(str_0, str_0)
        str_1 = 'Cache updated'
        ansible_collection_finder_0 = None
        int_0 = 914
        ansible_collection_ref_0 = module_0.AnsibleCollectionRef(str_1, ansible_collection_finder_0, ansible_collection_finder_0, int_0)
    except BaseException:
        pass

def test_case_10():
    try:
        tuple_0 = ()
        str_0 = 'x-@"54F`)-pnv\n0'
        ansible_path_hook_finder_0 = module_0._AnsiblePathHookFinder(tuple_0, str_0)
        str_1 = 'Z5'
        tuple_1 = ()
        bytes_0 = b''
        ansible_path_hook_finder_1 = module_0._AnsiblePathHookFinder(tuple_1, bytes_0)
        var_0 = ansible_path_hook_finder_1.__repr__()
        ansible_path_hook_finder_2 = module_0._AnsiblePathHookFinder(str_1, ansible_path_hook_finder_1)
        var_1 = ansible_path_hook_finder_0.find_module(ansible_path_hook_finder_0)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = '>=uF8.PsWu~'
        ansible_collection_n_s_pkg_loader_0 = module_0._AnsibleCollectionNSPkgLoader(str_0)
    except BaseException:
        pass

def test_case_12():
    try:
        bool_0 = True
        str_0 = '@HrHXvtwRZ;Dg_f'
        ansible_path_hook_finder_0 = module_0._AnsiblePathHookFinder(bool_0, str_0)
        var_0 = ansible_path_hook_finder_0.__repr__()
        str_1 = 'ansible_collections.test.test.test'
        float_0 = 5509.545141
        str_2 = '0.001'
        var_1 = ansible_path_hook_finder_0.iter_modules(str_2)
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
        var_2 = ansible_collection_finder_0.find_module(str_1, float_0)
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = 'ns.coll'
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
        str_1 = 'module'
        str_2 = ''
        var_0 = ansible_collection_finder_0.find_module(str_2)
        float_0 = 1053.0
        ansible_path_hook_finder_0 = module_0._AnsiblePathHookFinder(float_0, ansible_collection_finder_0)
        ansible_collection_ref_0 = module_0.AnsibleCollectionRef(str_0, str_0, str_1, str_1)
    except BaseException:
        pass

def test_case_14():
    try:
        str_0 = ',h)/`\tBC'
        tuple_0 = (str_0,)
        tuple_1 = None
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder(tuple_0, tuple_1)
        str_1 = 'p}9M +z(\\'
        int_0 = 824
        var_0 = ansible_collection_finder_0.find_module(str_1, int_0)
        dict_0 = {str_0: ansible_collection_finder_0, tuple_0: str_0, tuple_0: ansible_collection_finder_0}
        var_1 = ansible_collection_finder_0.set_playbook_paths(dict_0)
        tuple_2 = ()
        bytes_0 = b''
        ansible_path_hook_finder_0 = module_0._AnsiblePathHookFinder(tuple_2, bytes_0)
        ansible_path_hook_finder_1 = module_0._AnsiblePathHookFinder(str_0, ansible_path_hook_finder_0)
        list_0 = []
        ansible_collection_pkg_loader_base_0 = module_0._AnsibleCollectionPkgLoaderBase(list_0)
    except BaseException:
        pass

def test_case_15():
    try:
        str_0 = 'ansible_collections'
        tuple_0 = (str_0,)
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder(tuple_0)
        str_1 = 'p}uzX\\'
        int_0 = 824
        var_0 = ansible_collection_finder_0.find_module(str_1, int_0)
        dict_0 = {str_0: ansible_collection_finder_0, tuple_0: str_0, tuple_0: ansible_collection_finder_0}
        var_1 = ansible_collection_finder_0.set_playbook_paths(dict_0)
        tuple_1 = ()
        bytes_0 = b'O'
        ansible_path_hook_finder_0 = module_0._AnsiblePathHookFinder(tuple_1, bytes_0)
    except BaseException:
        pass

def test_case_16():
    try:
        str_0 = 'ansible_collections.test.test.test'
        str_1 = '/tes/test/tet'
        str_2 = [str_1]
        ansible_collection_pkg_loader_base_0 = module_0._AnsibleCollectionPkgLoaderBase(str_0, str_2)
        var_0 = ansible_collection_pkg_loader_base_0.load_module(ansible_collection_pkg_loader_base_0)
    except BaseException:
        pass

def test_case_17():
    try:
        str_0 = 'ansible_collections.test.test.test'
        ansible_collection_pkg_loader_base_0 = module_0._AnsibleCollectionPkgLoaderBase(str_0, str_0)
        dict_0 = {str_0: str_0, ansible_collection_pkg_loader_base_0: str_0, ansible_collection_pkg_loader_base_0: str_0}
        var_0 = ansible_collection_pkg_loader_base_0.get_source(dict_0)
    except BaseException:
        pass

def test_case_18():
    try:
        str_0 = 'ansible_collections.test.test.test'
        ansible_collection_pkg_loader_base_0 = module_0._AnsibleCollectionPkgLoaderBase(str_0, str_0)
        var_0 = ansible_collection_pkg_loader_base_0.get_data(str_0)
    except BaseException:
        pass

def test_case_19():
    try:
        str_0 = 'ansible_collections.test.test.test'
        ansible_collection_pkg_loader_base_0 = module_0._AnsibleCollectionPkgLoaderBase(str_0, str_0)
        var_0 = ansible_collection_pkg_loader_base_0.load_module(str_0)
        bool_0 = True
        var_1 = ansible_collection_pkg_loader_base_0.iter_modules(bool_0)
        ansible_collection_n_s_pkg_loader_0 = None
        var_2 = ansible_collection_pkg_loader_base_0.get_data(ansible_collection_n_s_pkg_loader_0)
    except BaseException:
        pass

def test_case_20():
    try:
        str_0 = 'ansible_collections.test.test.test'
        ansible_collection_pkg_loader_base_0 = module_0._AnsibleCollectionPkgLoaderBase(str_0, str_0)
        var_0 = ansible_collection_pkg_loader_base_0.load_module(str_0)
        bool_0 = True
        var_1 = ansible_collection_pkg_loader_base_0.iter_modules(bool_0)
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
        ansible_collection_finder_1 = module_0._AnsibleCollectionFinder()
        var_2 = ansible_collection_pkg_loader_base_0.is_package(ansible_collection_finder_1)
    except BaseException:
        pass

def test_case_21():
    try:
        int_0 = 3
        float_0 = 1141.826262
        ansible_path_hook_finder_0 = module_0._AnsiblePathHookFinder(int_0, float_0)
        str_0 = "failed to setup file stream for fetch '%s': %s"
        var_0 = ansible_path_hook_finder_0.find_module(str_0)
        set_0 = {int_0, ansible_path_hook_finder_0, float_0}
        int_1 = 867
        ansible_internal_redirect_loader_0 = module_0._AnsibleInternalRedirectLoader(set_0, int_1)
    except BaseException:
        pass

def test_case_22():
    try:
        str_0 = 'ansible_collections.test.test.test'
        ansible_collection_pkg_loader_base_0 = module_0._AnsibleCollectionPkgLoaderBase(str_0, str_0)
        ansible_collection_n_s_pkg_loader_0 = module_0._AnsibleCollectionNSPkgLoader(str_0)
    except BaseException:
        pass

def test_case_23():
    try:
        str_0 = 'ansible_collections'
        tuple_0 = (str_0,)
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder(tuple_0)
        int_0 = 824
        var_0 = ansible_collection_finder_0.find_module(str_0, int_0)
    except BaseException:
        pass

def test_case_24():
    try:
        str_0 = 'ansible_collections.test.testtest'
        float_0 = 5509.545141
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
        var_0 = ansible_collection_finder_0.find_module(str_0, float_0)
    except BaseException:
        pass

def test_case_25():
    try:
        str_0 = 'ansible_collections.test.test.test'
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
        ansible_collection_pkg_loader_0 = module_0._AnsibleCollectionPkgLoader(str_0)
    except BaseException:
        pass

def test_case_26():
    try:
        bool_0 = True
        str_0 = '@rHXvtwRZ;Dg_f'
        ansible_path_hook_finder_0 = module_0._AnsiblePathHookFinder(bool_0, str_0)
        var_0 = ansible_path_hook_finder_0.__repr__()
        str_1 = 'ansible_collections.test.test.test'
        bool_1 = True
        var_1 = ansible_path_hook_finder_0.iter_modules(bool_1)
        ansible_collection_n_s_pkg_loader_0 = None
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
        var_2 = ansible_collection_finder_0.find_module(str_1, ansible_collection_n_s_pkg_loader_0)
    except BaseException:
        pass