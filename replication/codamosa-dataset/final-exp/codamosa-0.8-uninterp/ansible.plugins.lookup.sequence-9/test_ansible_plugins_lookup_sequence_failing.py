# Automatically generated by Pynguin.
import ansible.plugins.lookup.sequence as module_0

def test_case_0():
    try:
        lookup_module_0 = module_0.LookupModule()
        str_0 = '1-10'
        var_0 = lookup_module_0.run(str_0, lookup_module_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bool_0 = False
        list_0 = [bool_0]
        str_0 = ' &0F\t/NxQJLhL'
        lookup_module_0 = module_0.LookupModule(str_0)
        var_0 = lookup_module_0.parse_kv_args(list_0)
    except BaseException:
        pass

def test_case_2():
    try:
        lookup_module_0 = module_0.LookupModule()
        str_0 = '02'
        var_0 = lookup_module_0.run(str_0, lookup_module_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = ''
        dict_0 = {str_0: str_0}
        int_0 = 1768
        list_0 = [int_0]
        lookup_module_0 = module_0.LookupModule(list_0)
        var_0 = lookup_module_0.run(dict_0, dict_0)
    except BaseException:
        pass

def test_case_4():
    try:
        bytes_0 = b'\xdf\x96{#\xafe\x1dz\x0f\xb4\xcdq^+\xad '
        str_0 = '(?i)^#\\s*ansiblerequires\\s+-powershell\\s+((Ansible\\.ModuleUtils\\.[\\w\\.]+)|(ansible_collections\\.\\w+\\.\\w+\\.plugins\\.module_utils\\.[\\w\\.]+)|(\\.[\\w\\.]+))(?P<optional>\\s+-Optional){0,1}'
        lookup_module_0 = module_0.LookupModule()
        var_0 = lookup_module_0.run(bytes_0, str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        lookup_module_0 = module_0.LookupModule()
        str_0 = '02'
        str_1 = [str_0, str_0, str_0, str_0, str_0, str_0, str_0]
        var_0 = lookup_module_0.run(str_1, lookup_module_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = '93:";sOE\r;Ig3Q'
        list_0 = [str_0]
        float_0 = 1458.0
        tuple_0 = ()
        lookup_module_0 = module_0.LookupModule(tuple_0)
        var_0 = lookup_module_0.run(list_0, float_0)
    except BaseException:
        pass

def test_case_7():
    try:
        lookup_module_0 = module_0.LookupModule()
        str_0 = 'start=1 end=5 stride=1 format=test%d'
        str_1 = [str_0]
        var_0 = lookup_module_0.run(str_1, lookup_module_0)
        str_2 = '_tart=5 end=1 stride=-E format=test%d'
        str_3 = [str_2]
        var_1 = lookup_module_0.run(str_3, var_0)
    except BaseException:
        pass

def test_case_8():
    try:
        lookup_module_0 = module_0.LookupModule()
        str_0 = 'start=1 end=5 stride=1 format=test%'
        str_1 = [str_0]
        var_0 = lookup_module_0.run(str_1, lookup_module_0)
    except BaseException:
        pass

def test_case_9():
    try:
        lookup_module_0 = module_0.LookupModule()
        str_0 = '01-0'
        str_1 = [str_0, str_0, str_0, lookup_module_0, str_0, str_0, str_0, lookup_module_0]
        var_0 = lookup_module_0.run(str_1, lookup_module_0)
    except BaseException:
        pass

def test_case_10():
    try:
        lookup_module_0 = module_0.LookupModule()
        str_0 = 'start=1 count=4'
        str_1 = [str_0]
        var_0 = {}
        var_1 = lookup_module_0.run(str_1, var_0)
        str_2 = 'start=1 end=5 count=4'
        str_3 = [str_2]
        var_2 = {}
        var_3 = lookup_module_0.run(str_3, var_2)
    except BaseException:
        pass