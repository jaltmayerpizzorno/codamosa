# Automatically generated by Pynguin.
import ansible.parsing.yaml.objects as module_0

def test_case_0():
    pass

def test_case_1():
    float_0 = 895.0
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(float_0)
    var_0 = ansible_vault_encrypted_unicode_0.isdecimal()

def test_case_2():
    str_0 = 'this is a test'
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(str_0)
    var_0 = ansible_vault_encrypted_unicode_0.is_encrypted()

def test_case_3():
    list_0 = []
    list_1 = []
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(list_1)
    var_0 = ansible_vault_encrypted_unicode_0.__ne__(list_0)

def test_case_4():
    ansible_mapping_0 = module_0.AnsibleMapping()
    list_0 = [ansible_mapping_0, ansible_mapping_0, ansible_mapping_0, ansible_mapping_0]
    ansible_unicode_0 = module_0.AnsibleUnicode()
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(ansible_unicode_0)
    var_0 = ansible_vault_encrypted_unicode_0.is_encrypted()
    ansible_vault_encrypted_unicode_1 = module_0.AnsibleVaultEncryptedUnicode(list_0)
    var_1 = ansible_vault_encrypted_unicode_1.__reversed__()

def test_case_5():
    str_0 = 'Братанская русь'
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(str_0)
    ansible_vault_encrypted_unicode_1 = module_0.AnsibleVaultEncryptedUnicode(ansible_vault_encrypted_unicode_0)

def test_case_6():
    str_0 = '4UzB6+@CjlV{h'
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(str_0)
    var_0 = ansible_vault_encrypted_unicode_0.__unicode__()

def test_case_7():
    int_0 = 40
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(int_0)
    var_0 = ansible_vault_encrypted_unicode_0.__hash__()

def test_case_8():
    bool_0 = False
    float_0 = -1.9346873191204992
    set_0 = {float_0, bool_0}
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(set_0)
    str_0 = 't3&\\b7'
    int_0 = -1006
    set_1 = {int_0}
    ansible_vault_encrypted_unicode_1 = module_0.AnsibleVaultEncryptedUnicode(set_1)
    var_0 = ansible_vault_encrypted_unicode_1.__reversed__()
    var_1 = ansible_vault_encrypted_unicode_1.is_encrypted()
    ansible_base_y_a_m_l_object_0 = module_0.AnsibleBaseYAMLObject()
    ansible_vault_encrypted_unicode_2 = module_0.AnsibleVaultEncryptedUnicode(ansible_base_y_a_m_l_object_0)
    var_2 = ansible_vault_encrypted_unicode_1.__ge__(str_0)

def test_case_9():
    bool_0 = False
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(bool_0)
    var_0 = ansible_vault_encrypted_unicode_0.__len__()

def test_case_10():
    list_0 = []
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(list_0)
    var_0 = ansible_vault_encrypted_unicode_0.capitalize()

def test_case_11():
    ansible_unicode_0 = module_0.AnsibleUnicode()
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(ansible_unicode_0)
    var_0 = ansible_vault_encrypted_unicode_0.isalpha()

def test_case_12():
    str_0 = '(Advu'
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(str_0)
    var_0 = ansible_vault_encrypted_unicode_0.isidentifier()

def test_case_13():
    bytes_0 = b'\xeb\x1c\x85\x15=+'
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(bytes_0)
    var_0 = ansible_vault_encrypted_unicode_0.islower()

def test_case_14():
    int_0 = -937
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(int_0)
    var_0 = ansible_vault_encrypted_unicode_0.isnumeric()

def test_case_15():
    tuple_0 = ()
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(tuple_0)
    var_0 = ansible_vault_encrypted_unicode_0.isprintable()

def test_case_16():
    list_0 = []
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(list_0)
    var_0 = ansible_vault_encrypted_unicode_0.isupper()

def test_case_17():
    ansible_base_y_a_m_l_object_0 = module_0.AnsibleBaseYAMLObject()
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(ansible_base_y_a_m_l_object_0)
    var_0 = ansible_vault_encrypted_unicode_0.rstrip()

def test_case_18():
    bool_0 = None
    bytes_0 = b'\x1e\xf6\xc4\xf8"\xa9\x88\xf7F\'w|\x80^A\x8eM'
    tuple_0 = (bool_0, bytes_0, bool_0)
    list_0 = [tuple_0]
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(list_0)
    ansible_vault_encrypted_unicode_1 = module_0.AnsibleVaultEncryptedUnicode(ansible_vault_encrypted_unicode_0)
    var_0 = ansible_vault_encrypted_unicode_1.strip()

def test_case_19():
    str_0 = 'IDi-hj'
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(str_0)
    var_0 = ansible_vault_encrypted_unicode_0.swapcase()

def test_case_20():
    float_0 = 1.0
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(float_0)
    var_0 = ansible_vault_encrypted_unicode_0.title()

def test_case_21():
    bytes_0 = b'1\nl\x04\xd8K'
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(bytes_0)
    var_0 = ansible_vault_encrypted_unicode_0.istitle()

def test_case_22():
    str_0 = 'this is a test'
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(str_0)
    set_0 = {str_0, ansible_vault_encrypted_unicode_0, str_0, str_0}
    ansible_vault_encrypted_unicode_1 = module_0.AnsibleVaultEncryptedUnicode(set_0)

def test_case_23():
    bool_0 = False
    int_0 = -1006
    set_0 = {int_0, bool_0}
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(set_0)
    var_0 = ansible_vault_encrypted_unicode_0.__reversed__()
    var_1 = ansible_vault_encrypted_unicode_0.is_encrypted()
    list_0 = [bool_0, var_1, bool_0, bool_0, bool_0]
    ansible_vault_encrypted_unicode_1 = module_0.AnsibleVaultEncryptedUnicode(list_0)
    ansible_vault_encrypted_unicode_2 = module_0.AnsibleVaultEncryptedUnicode(ansible_vault_encrypted_unicode_1)
    var_2 = ansible_vault_encrypted_unicode_2.__unicode__()
    var_3 = ansible_vault_encrypted_unicode_2.expandtabs()
    var_4 = ansible_vault_encrypted_unicode_1.lower()

def test_case_24():
    list_0 = []
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(list_0)
    var_0 = ansible_vault_encrypted_unicode_0.split()

def test_case_25():
    bytes_0 = b'\xa8\x80\xfc\x94<'
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(bytes_0)
    var_0 = ansible_vault_encrypted_unicode_0.isspace()

def test_case_26():
    str_0 = 'm(YHa1@F)'
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(str_0)
    set_0 = {str_0, ansible_vault_encrypted_unicode_0, str_0, str_0}
    var_0 = ansible_vault_encrypted_unicode_0.__ne__(set_0)
    var_1 = ansible_vault_encrypted_unicode_0.split()
    var_2 = ansible_vault_encrypted_unicode_0.is_encrypted()
    ansible_mapping_0 = module_0.AnsibleMapping()
    ansible_vault_encrypted_unicode_1 = module_0.AnsibleVaultEncryptedUnicode(ansible_mapping_0)
    var_3 = ansible_vault_encrypted_unicode_1.__add__(ansible_vault_encrypted_unicode_0)
    ansible_vault_encrypted_unicode_2 = module_0.AnsibleVaultEncryptedUnicode(ansible_mapping_0)
    dict_0 = {}
    ansible_vault_encrypted_unicode_3 = module_0.AnsibleVaultEncryptedUnicode(dict_0)
    ansible_vault_encrypted_unicode_4 = module_0.AnsibleVaultEncryptedUnicode(ansible_vault_encrypted_unicode_3)
    var_4 = ansible_vault_encrypted_unicode_1.__ne__(ansible_vault_encrypted_unicode_4)

def test_case_27():
    dict_0 = {}
    str_0 = 'NY\x0cCjH'
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(str_0)
    var_0 = ansible_vault_encrypted_unicode_0.isalpha()
    str_1 = "''c1V#QeV w-|h?,9l"
    ansible_vault_encrypted_unicode_1 = module_0.AnsibleVaultEncryptedUnicode(str_1)
    ansible_sequence_0 = module_0.AnsibleSequence(**dict_0)
    var_1 = ansible_vault_encrypted_unicode_1.isascii()
    var_2 = ansible_vault_encrypted_unicode_1.isprintable()
    var_3 = ansible_vault_encrypted_unicode_1.swapcase()
    ansible_vault_encrypted_unicode_2 = module_0.AnsibleVaultEncryptedUnicode(dict_0)
    var_4 = ansible_vault_encrypted_unicode_1.isdigit()
    var_5 = ansible_vault_encrypted_unicode_0.__add__(str_0)
    var_6 = ansible_vault_encrypted_unicode_2.__radd__(ansible_sequence_0)

def test_case_28():
    str_0 = 'this is a test'
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(str_0)

def test_case_29():
    str_0 = 'NY\x0cCjH'
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(str_0)
    var_0 = ansible_vault_encrypted_unicode_0.isalpha()
    str_1 = "''c1V#QeV w-|h?,9l"
    ansible_vault_encrypted_unicode_1 = module_0.AnsibleVaultEncryptedUnicode(str_1)
    var_1 = ansible_vault_encrypted_unicode_1.isascii()
    var_2 = ansible_vault_encrypted_unicode_1.isprintable()
    var_3 = ansible_vault_encrypted_unicode_1.swapcase()
    var_4 = ansible_vault_encrypted_unicode_1.isdigit()
    var_5 = ansible_vault_encrypted_unicode_0.__add__(str_0)
    complex_0 = None
    list_0 = []
    ansible_vault_encrypted_unicode_2 = module_0.AnsibleVaultEncryptedUnicode(list_0)
    str_2 = '<ansible.parsing.yaml.objects.AnsibleBaseYAMLObject object at 0x7ff317683340>\n'
    ansible_vault_encrypted_unicode_3 = module_0.AnsibleVaultEncryptedUnicode(complex_0)
    var_6 = ansible_vault_encrypted_unicode_3.__radd__(str_2)

def test_case_30():
    bool_0 = False
    str_0 = '\r$6m'
    dict_0 = {str_0: bool_0}
    float_0 = 0.5
    set_0 = {float_0, bool_0}
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(set_0)
    var_0 = ansible_vault_encrypted_unicode_0.__eq__(dict_0)
    str_1 = 't3&\\b7'
    ansible_vault_encrypted_unicode_1 = module_0.AnsibleVaultEncryptedUnicode(set_0)
    var_1 = ansible_vault_encrypted_unicode_1.__reversed__()
    var_2 = ansible_vault_encrypted_unicode_1.is_encrypted()
    list_0 = [bool_0, var_2, bool_0, bool_0, bool_0]
    ansible_vault_encrypted_unicode_2 = module_0.AnsibleVaultEncryptedUnicode(list_0)
    ansible_vault_encrypted_unicode_3 = module_0.AnsibleVaultEncryptedUnicode(ansible_vault_encrypted_unicode_2)
    var_3 = ansible_vault_encrypted_unicode_3.__unicode__()
    var_4 = ansible_vault_encrypted_unicode_3.__repr__()
    ansible_base_y_a_m_l_object_0 = module_0.AnsibleBaseYAMLObject()
    ansible_vault_encrypted_unicode_4 = module_0.AnsibleVaultEncryptedUnicode(ansible_base_y_a_m_l_object_0)
    var_5 = ansible_vault_encrypted_unicode_3.__ge__(str_1)
    var_6 = ansible_vault_encrypted_unicode_2.lower()
    var_7 = ansible_vault_encrypted_unicode_3.__unicode__()
    ansible_sequence_0 = module_0.AnsibleSequence()
    ansible_mapping_0 = module_0.AnsibleMapping(**dict_0)
    var_8 = ansible_vault_encrypted_unicode_3.__le__(ansible_vault_encrypted_unicode_1)

def test_case_31():
    bool_0 = False
    int_0 = -1006
    set_0 = {int_0, bool_0}
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(set_0)
    var_0 = ansible_vault_encrypted_unicode_0.__reversed__()
    var_1 = ansible_vault_encrypted_unicode_0.is_encrypted()
    var_2 = ansible_vault_encrypted_unicode_0.__unicode__()
    ansible_base_y_a_m_l_object_0 = module_0.AnsibleBaseYAMLObject()
    ansible_vault_encrypted_unicode_1 = module_0.AnsibleVaultEncryptedUnicode(ansible_base_y_a_m_l_object_0)
    var_3 = ansible_vault_encrypted_unicode_1.lower()
    ansible_sequence_0 = module_0.AnsibleSequence()
    var_4 = ansible_vault_encrypted_unicode_0.__gt__(ansible_vault_encrypted_unicode_0)

def test_case_32():
    str_0 = 'm(YHa1@F)'
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(str_0)
    set_0 = {str_0, ansible_vault_encrypted_unicode_0, str_0, str_0}
    var_0 = ansible_vault_encrypted_unicode_0.__ne__(set_0)
    var_1 = ansible_vault_encrypted_unicode_0.split()
    str_1 = '/W)Ft wkp'
    str_2 = '({\'oy63WrnK[SKR\': ":?meW\'vHOx=Uj]-uy3"},)'
    str_3 = 'gM:\rBD*!p'
    dict_0 = {str_1: str_1, str_2: str_2, str_0: set_0, str_3: var_0}
    ansible_mapping_0 = module_0.AnsibleMapping(**dict_0)
    ansible_vault_encrypted_unicode_1 = module_0.AnsibleVaultEncryptedUnicode(ansible_mapping_0)
    var_2 = ansible_vault_encrypted_unicode_1.__repr__()
    list_0 = None
    var_3 = ansible_vault_encrypted_unicode_0.count(ansible_vault_encrypted_unicode_0, list_0)

def test_case_33():
    bytes_0 = b'foo'
    ansible_vault_encrypted_unicode_0 = module_0.AnsibleVaultEncryptedUnicode(bytes_0)
    str_0 = 'foo'
    var_0 = ansible_vault_encrypted_unicode_0.__len__()
    var_1 = ansible_vault_encrypted_unicode_0.__contains__(str_0)
    var_2 = ansible_vault_encrypted_unicode_0.__contains__(str_0)
    str_1 = '<ansible.parsing.yaml.objects.AnsibleBaseYAMLObject object at 0x7ff317683340>'
    var_3 = ansible_vault_encrypted_unicode_0.__contains__(str_1)
    var_4 = ansible_vault_encrypted_unicode_0.__contains__(str_1)
    str_2 = 'f'
    var_5 = ansible_vault_encrypted_unicode_0.__contains__(str_2)
    var_6 = ansible_vault_encrypted_unicode_0.__contains__(str_2)
    str_3 = 'o'
    var_7 = ansible_vault_encrypted_unicode_0.__contains__(str_3)
    var_8 = ansible_vault_encrypted_unicode_0.__contains__(str_3)
    str_4 = 'bar'
    var_9 = ansible_vault_encrypted_unicode_0.__contains__(str_4)
    var_10 = ansible_vault_encrypted_unicode_0.__contains__(str_4)
    str_5 = 'UEy'
    ansible_vault_encrypted_unicode_1 = module_0.AnsibleVaultEncryptedUnicode(str_5)
    var_11 = ansible_vault_encrypted_unicode_1.__contains__(ansible_vault_encrypted_unicode_0)