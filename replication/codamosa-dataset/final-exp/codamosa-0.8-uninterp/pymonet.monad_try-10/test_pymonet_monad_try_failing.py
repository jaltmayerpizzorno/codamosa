# Automatically generated by Pynguin.
import pymonet.monad_try as module_0

def test_case_0():
    try:
        int_0 = 1491
        float_0 = 374.5
        bool_0 = False
        bytes_0 = b'\x9f\x1a\x997\xcbf\x91\xac\xf5->\x15w'
        list_0 = [float_0, float_0, int_0, int_0]
        try_0 = module_0.Try(list_0, bool_0)
        var_0 = try_0.map(bytes_0)
        bool_1 = try_0.__eq__(bytes_0)
        bool_2 = try_0.__eq__(try_0)
        try_1 = module_0.Try(float_0, bool_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = b'\xee\xd2\xff\xf80]\xfd'
        int_0 = -1457
        bool_0 = True
        try_0 = module_0.Try(int_0, bool_0)
        var_0 = try_0.map(bytes_0)
    except BaseException:
        pass

def test_case_2():
    try:
        float_0 = -2106.0
        bool_0 = True
        dict_0 = {}
        try_0 = module_0.Try(dict_0, bool_0)
        var_0 = try_0.bind(float_0)
    except BaseException:
        pass

def test_case_3():
    try:
        int_0 = None
        dict_0 = {int_0: int_0, int_0: int_0}
        tuple_0 = (dict_0,)
        bytes_0 = b'\xd2\xa2F\xa2\xc91\x1b\x07\xc7x\x9b\xc4dR\x93\xfc\x12a\x9b'
        list_0 = [tuple_0, bytes_0, tuple_0, tuple_0]
        bool_0 = True
        try_0 = module_0.Try(list_0, bool_0)
        var_0 = try_0.on_success(tuple_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'Tgm`b x$>r'
        bool_0 = False
        try_0 = module_0.Try(str_0, bool_0)
        str_1 = try_0.__str__()
        var_0 = try_0.get()
        float_0 = None
        var_1 = try_0.filter(float_0)
        dict_0 = {var_0: float_0}
        bool_1 = try_0.__eq__(dict_0)
        var_2 = try_0.on_fail(float_0)
    except BaseException:
        pass

def test_case_5():
    try:
        dict_0 = {}
        bool_0 = True
        try_0 = module_0.Try(bool_0, bool_0)
        var_0 = try_0.filter(dict_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'WL|3'
        bool_0 = False
        try_0 = module_0.Try(str_0, bool_0)
        str_1 = try_0.__str__()
        int_0 = 1491
        float_0 = 374.5
        bool_1 = False
        bytes_0 = b'\x9f\x1a\x997\xcbf\x91\xac\xf5->\x15w'
        list_0 = [float_0, float_0, int_0, int_0]
        try_1 = module_0.Try(list_0, bool_1)
        bool_2 = try_1.__eq__(bytes_0)
        bool_3 = try_0.__eq__(try_1)
        try_2 = module_0.Try(float_0, bool_1)
    except BaseException:
        pass