# Automatically generated by Pynguin.
import ansible.module_utils.common.dict_transformations as module_0

def test_case_0():
    try:
        float_0 = 3416.7844
        var_0 = module_0.camel_dict_to_snake_dict(float_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = b'\xf5\xdfb\xa7\x13'
        list_0 = []
        str_0 = ''
        var_0 = module_0.snake_dict_to_camel_dict(list_0, str_0)
        dict_0 = {str_0: str_0, bytes_0: str_0}
        var_1 = module_0.snake_dict_to_camel_dict(dict_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '.cs'
        dict_0 = {str_0: str_0}
        var_0 = module_0.dict_merge(str_0, dict_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'\\\xb3\xa2\xc08$~\x81x\x10\xf4\x1d\x1cfR\x96*\x02\x16\xa4'
        bool_0 = None
        str_0 = 'h1F]P3s!0u*9w'
        var_0 = module_0.dict_merge(bool_0, str_0)
        var_1 = module_0.camel_dict_to_snake_dict(bytes_0)
    except BaseException:
        pass

def test_case_4():
    try:
        int_0 = -162
        var_0 = module_0.recursive_diff(int_0, int_0)
    except BaseException:
        pass

def test_case_5():
    try:
        int_0 = -360
        dict_0 = {int_0: int_0}
        str_0 = '%'
        var_0 = module_0.camel_dict_to_snake_dict(dict_0, str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        float_0 = None
        dict_0 = {float_0: float_0, float_0: float_0, float_0: float_0}
        var_0 = module_0.camel_dict_to_snake_dict(dict_0, float_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'Vc/n%C6KtE@=t-'
        str_1 = 'dQk%M YS\r]QyH[m\n(f'
        dict_0 = {str_0: str_0, str_0: str_1, str_1: str_1}
        int_0 = 674
        str_2 = '6!jF5?\tFZ&"7'
        var_0 = module_0.dict_merge(str_2, int_0)
        str_3 = ' kgtXuf`khzV]a=[ud^>'
        var_1 = module_0.dict_merge(str_3, dict_0)
    except BaseException:
        pass

def test_case_8():
    try:
        bytes_0 = None
        dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
        dict_1 = {}
        var_0 = module_0.recursive_diff(dict_0, dict_1)
    except BaseException:
        pass