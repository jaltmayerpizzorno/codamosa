# Automatically generated by Pynguin.
import sanic.cookies as module_0

def test_case_0():
    try:
        str_0 = 'V'
        cookie_jar_0 = module_0.CookieJar(str_0)
        var_0 = cookie_jar_0.__delitem__(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '^Dq"?>2a>c1!'
        bytes_0 = b'\xd8\x97\x14\xe5\xee\xb4a\xe2c'
        set_0 = {bytes_0}
        cookie_jar_0 = module_0.CookieJar(set_0)
        var_0 = cookie_jar_0.__delitem__(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'foo'
        str_1 = 'bar'
        cookie_0 = module_0.Cookie(str_0, str_1)
        var_0 = str(cookie_0)
        var_1 = str(cookie_0)
        var_2 = str(cookie_0)
        var_3 = str(cookie_0)
        var_4 = str(cookie_0)
        set_0 = set()
        var_5 = cookie_0.encode(set_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '/?.+'
        cookie_jar_0 = module_0.CookieJar(str_0)
        str_1 = 'path'
        bool_0 = False
        var_0 = cookie_jar_0.__setitem__(str_1, bool_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'path'
        str_1 = 'am2'
        cookie_0 = module_0.Cookie(str_1, str_0)
        var_0 = cookie_0.__str__()
        str_2 = 'exre'
        str_3 = 'C2'
        var_1 = cookie_0.__setitem__(str_2, str_3)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'name1'
        str_1 = 'value1'
        cookie_0 = module_0.Cookie(str_0, str_1)
        str_2 = 'expires'
        str_3 = 'x'
        var_0 = cookie_0.__setitem__(str_2, str_3)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'name1'
        cookie_0 = module_0.Cookie(str_0, str_0)
        var_0 = cookie_0.__str__()
        str_1 = "Test'case 1: FAILED"
        tuple_0 = ()
        cookie_jar_0 = module_0.CookieJar(tuple_0)
        var_1 = print(cookie_0)
        str_2 = 'am2'
        cookie_1 = module_0.Cookie(str_2, str_1)
        str_3 = 'max-age'
        float_0 = 99.92
        var_2 = cookie_0.__setitem__(str_3, float_0)
    except BaseException:
        pass