# Automatically generated by Pynguin.
import ansible.parsing.yaml.constructor as module_0
import ansible.parsing.vault as module_1
import yaml.nodes as module_2

def test_case_0():
    try:
        ansible_constructor_0 = module_0.AnsibleConstructor()
        str_0 = ''
        var_0 = ansible_constructor_0.construct_mapping(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bool_0 = False
        str_0 = 'http'
        int_0 = 381
        ansible_constructor_0 = module_0.AnsibleConstructor(str_0, int_0)
        var_0 = ansible_constructor_0.construct_yaml_str(bool_0)
    except BaseException:
        pass

def test_case_2():
    try:
        int_0 = 865
        str_0 = 'h[Q'
        ansible_constructor_0 = module_0.AnsibleConstructor(int_0, str_0)
        ansible_constructor_1 = module_0.AnsibleConstructor()
        var_0 = ansible_constructor_1.construct_vault_encrypted_unicode(ansible_constructor_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'D\xcb\xac\xbd\xc7\xbf\x85\xb8\x86'
        ansible_constructor_0 = module_0.AnsibleConstructor()
        var_0 = ansible_constructor_0.construct_yaml_unsafe(bytes_0)
    except BaseException:
        pass

def test_case_4():
    try:
        float_0 = 3223.4683952412133
        int_0 = -2781
        ansible_constructor_0 = module_0.AnsibleConstructor(float_0, int_0)
        str_0 = 's\x0c@'
        ansible_constructor_1 = module_0.AnsibleConstructor(str_0)
        vault_lib_0 = module_1.VaultLib()
        mapping_node_0 = module_2.MappingNode(vault_lib_0, ansible_constructor_1, ansible_constructor_0)
        var_0 = ansible_constructor_1.construct_yaml_unsafe(mapping_node_0)
    except BaseException:
        pass

def test_case_5():
    try:
        float_0 = 3223.4683952412133
        list_0 = [float_0]
        list_1 = [list_0, list_0]
        dict_0 = {}
        bool_0 = True
        mapping_node_0 = module_2.MappingNode(list_1, dict_0, bool_0)
        ansible_constructor_0 = module_0.AnsibleConstructor()
        tuple_0 = (mapping_node_0, ansible_constructor_0)
        ansible_constructor_1 = module_0.AnsibleConstructor()
        var_0 = ansible_constructor_1.construct_yaml_map(tuple_0)
        int_0 = -2774
        ansible_constructor_2 = module_0.AnsibleConstructor(float_0, int_0)
        str_0 = 's\x0c@'
        ansible_constructor_3 = module_0.AnsibleConstructor(str_0)
        vault_lib_0 = module_1.VaultLib()
        ansible_constructor_4 = None
        list_2 = [float_0, ansible_constructor_4, ansible_constructor_2, ansible_constructor_3]
        ansible_constructor_5 = module_0.AnsibleConstructor(list_2)
        var_1 = ansible_constructor_3.construct_yaml_unsafe(mapping_node_0)
    except BaseException:
        pass

def test_case_6():
    try:
        ansible_constructor_0 = module_0.AnsibleConstructor()
        str_0 = 'You can use validate_certs=False if you do not need to confirm the servers identity but this is unsafe and not recommended. Paths checked for this platform: %s.'
        dict_0 = {str_0: str_0}
        var_0 = ansible_constructor_0.construct_yaml_map(dict_0)
        vault_lib_0 = module_1.VaultLib()
        vault_lib_1 = module_1.VaultLib()
        list_0 = [var_0]
        float_0 = 1.0
        mapping_node_0 = module_2.MappingNode(list_0, list_0, float_0)
        var_1 = ansible_constructor_0.construct_yaml_unsafe(mapping_node_0)
    except BaseException:
        pass