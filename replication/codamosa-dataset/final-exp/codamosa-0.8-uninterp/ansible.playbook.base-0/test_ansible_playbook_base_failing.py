# Automatically generated by Pynguin.
import ansible.playbook.base as module_0
import ansible.playbook.attribute as module_1

def test_case_0():
    try:
        bytes_0 = b'E\x9a\xeb\xa4\xfa}A\xb0 \xcf'
        set_0 = {bytes_0, bytes_0}
        field_attribute_base_0 = module_0.FieldAttributeBase()
        var_0 = field_attribute_base_0.load_data(set_0)
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = 586
        field_attribute_base_0 = module_0.FieldAttributeBase()
        int_1 = -6696
        str_0 = 'MacOS(X'
        list_0 = [int_1, int_0]
        list_1 = [str_0, int_0, str_0, list_0]
        tuple_0 = (int_1, str_0, list_1)
        var_0 = field_attribute_base_0.load_data(int_0, field_attribute_base_0, tuple_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'rcv2"B'
        field_attribute_base_0 = module_0.FieldAttributeBase()
        var_0 = field_attribute_base_0.post_validate(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        field_attribute_base_0 = module_0.FieldAttributeBase()
        field_attribute_base_1 = module_0.FieldAttributeBase()
        var_0 = field_attribute_base_1.from_attrs(field_attribute_base_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'DummyValue'
        field_attribute_0 = module_1.FieldAttribute()
        field_attribute_base_0 = module_0.FieldAttributeBase()
        var_0 = field_attribute_base_0.dump_attrs()
        str_1 = 'name'
        var_1 = field_attribute_base_0.get_validated_value(str_1, field_attribute_0, str_0, str_1)
        list_0 = None
        var_2 = field_attribute_base_0.deserialize(list_0)
    except BaseException:
        pass

def test_case_5():
    try:
        field_attribute_base_0 = module_0.FieldAttributeBase()
        field_attribute_0 = module_1.FieldAttribute()
        field_attribute_base_1 = module_0.FieldAttributeBase()
        var_0 = field_attribute_base_1.squash()
        var_1 = field_attribute_base_0.get_ds()
        int_0 = -552
        var_2 = field_attribute_base_1.dump_me(int_0)
        field_attribute_base_2 = module_0.FieldAttributeBase()
        var_3 = field_attribute_base_0.get_variable_manager()
        field_attribute_base_3 = module_0.FieldAttributeBase()
        var_4 = field_attribute_base_2.copy()
        var_5 = field_attribute_base_1.get_ds()
        var_6 = field_attribute_base_0.get_ds()
        bytes_0 = b'L\xa2\xb0\x96\x01\x90!%\x1e'
        var_7 = field_attribute_base_2.deserialize(bytes_0)
    except BaseException:
        pass

def test_case_6():
    try:
        set_0 = set()
        field_attribute_base_0 = module_0.FieldAttributeBase()
        field_attribute_base_1 = module_0.FieldAttributeBase()
        var_0 = field_attribute_base_1.load_data(set_0, field_attribute_base_0)
        var_1 = field_attribute_base_1.get_ds()
        field_attribute_base_2 = module_0.FieldAttributeBase()
        var_2 = field_attribute_base_0.get_ds()
        var_3 = field_attribute_base_2.squash()
        var_4 = field_attribute_base_2.serialize()
        var_5 = field_attribute_base_1.copy()
        base_0 = module_0.Base()
        var_6 = base_0.get_search_path()
        field_attribute_base_3 = module_0.FieldAttributeBase()
        var_7 = field_attribute_base_3.dump_attrs()
        var_8 = field_attribute_base_2.deserialize(field_attribute_base_2)
    except BaseException:
        pass

def test_case_7():
    try:
        set_0 = set()
        field_attribute_base_0 = module_0.FieldAttributeBase()
        var_0 = field_attribute_base_0.get_ds()
        field_attribute_base_1 = module_0.FieldAttributeBase()
        var_1 = field_attribute_base_0.dump_me()
        var_2 = field_attribute_base_0.squash()
        field_attribute_base_2 = module_0.FieldAttributeBase()
        var_3 = field_attribute_base_2.load_data(set_0, field_attribute_base_1)
        var_4 = field_attribute_base_2.get_ds()
        field_attribute_base_3 = module_0.FieldAttributeBase()
        var_5 = field_attribute_base_0.squash()
        var_6 = field_attribute_base_2.serialize()
        field_attribute_base_4 = module_0.FieldAttributeBase()
        var_7 = field_attribute_base_2.validate()
        var_8 = field_attribute_base_0.copy()
        base_0 = module_0.Base()
        var_9 = base_0.get_search_path()
    except BaseException:
        pass

def test_case_8():
    try:
        field_attribute_base_0 = module_0.FieldAttributeBase()
        var_0 = field_attribute_base_0.serialize()
        base_meta_0 = None
        str_0 = '\x0ciw/Y>'
        dict_0 = {str_0: str_0, str_0: field_attribute_base_0, str_0: str_0, str_0: base_meta_0}
        var_1 = field_attribute_base_0.load_data(base_meta_0, dict_0)
    except BaseException:
        pass