# Automatically generated by Pynguin.
import ansible.module_utils.api as module_0

def test_case_0():
    try:
        bytes_0 = b"\x90\xbc\xb7\x82'\xfaX\x90D@"
        var_0 = module_0.basic_auth_argument_spec()
        list_0 = [bytes_0, var_0]
        var_1 = module_0.rate_limit_argument_spec(list_0)
    except BaseException:
        pass

def test_case_1():
    try:
        var_0 = module_0.rate_limit_argument_spec()
        var_1 = module_0.rate_limit_argument_spec()
        var_2 = module_0.retry_argument_spec()
        var_3 = module_0.rate_limit_argument_spec()
        str_0 = 'g'
        var_4 = module_0.retry_argument_spec(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        var_0 = module_0.rate_limit()
        bytes_0 = b'z)G\xc7\x97\xee"#\xa5\xda)\x18\xc4\x9fQS,l\x08'
        set_0 = {bytes_0, var_0}
        bytes_1 = b'-iJ+x\x16\xb3!\x05\xf8\xe3\x8d\xc4\x14\xf5 5\xc8'
        float_0 = None
        bool_0 = False
        tuple_0 = (bool_0,)
        tuple_1 = (bytes_1, float_0, tuple_0)
        bytes_2 = b'\xb9\x81\xa2\xd1O'
        float_1 = None
        set_1 = {float_1, float_0, bytes_2, tuple_1}
        tuple_2 = (tuple_1, bytes_1, bytes_2, set_1)
        var_1 = module_0.generate_jittered_backoff(set_0, tuple_2)
        var_2 = module_0.basic_auth_argument_spec(bytes_0)
    except BaseException:
        pass

def test_case_3():
    try:
        var_0 = module_0.rate_limit_argument_spec()
        var_1 = module_0.rate_limit()
        int_0 = -2350
        var_2 = module_0.generate_jittered_backoff(int_0)
        str_0 = ')\x0cm]No>8iXQu[24.mn'
        str_1 = '^F\rma<'
        var_3 = module_0.retry_never(str_1)
        var_4 = module_0.rate_limit_argument_spec()
        str_2 = '(1)?~g2LAz'
        var_5 = module_0.generate_jittered_backoff(str_2)
        var_6 = module_0.retry_never(str_0)
        list_0 = []
        var_7 = module_0.rate_limit(int_0, list_0)
    except BaseException:
        pass

def test_case_4():
    try:
        var_0 = module_0.retry()
        str_0 = '\\9Q|'
        var_1 = module_0.retry_never(str_0)
        var_2 = module_0.generate_jittered_backoff()
        var_3 = module_0.rate_limit()
        bytes_0 = b'\xd9\x99R\xa0X2'
        var_4 = module_0.retry_with_delays_and_condition(bytes_0)
        int_0 = 1666
        var_5 = module_0.retry_never(int_0)
        str_1 = '%prog <host-pattern> [options]'
        var_6 = module_0.retry_argument_spec()
        set_0 = {var_2}
        str_2 = ''
        var_7 = module_0.retry_never(str_2)
        tuple_0 = (set_0,)
        int_1 = 86
        var_8 = module_0.rate_limit_argument_spec()
        var_9 = module_0.retry_with_delays_and_condition(tuple_0)
        dict_0 = {int_1: var_0}
        tuple_1 = (str_1, tuple_0, int_1, dict_0)
        var_10 = module_0.rate_limit(tuple_1)
        var_11 = module_0.generate_jittered_backoff()
        dict_1 = {}
        var_12 = module_0.generate_jittered_backoff(dict_1)
        var_13 = module_0.retry_never(tuple_0)
        var_14 = module_0.rate_limit_argument_spec()
        var_15 = module_0.retry()
        var_16 = module_0.basic_auth_argument_spec()
        var_17 = module_0.rate_limit_argument_spec(set_0)
    except BaseException:
        pass