# Automatically generated by Pynguin.
import tornado.auth as module_0

def test_case_0():
    try:
        open_id_mixin_0 = module_0.OpenIdMixin()
        open_id_mixin_0.authenticate_redirect()
    except BaseException:
        pass

def test_case_1():
    try:
        open_id_mixin_0 = module_0.OpenIdMixin()
        async_h_t_t_p_client_0 = open_id_mixin_0.get_auth_http_client()
    except BaseException:
        pass

def test_case_2():
    try:
        o_auth_mixin_0 = module_0.OAuthMixin()
        async_h_t_t_p_client_0 = o_auth_mixin_0.get_auth_http_client()
    except BaseException:
        pass

def test_case_3():
    try:
        o_auth2_mixin_0 = module_0.OAuth2Mixin()
        o_auth2_mixin_0.authorize_redirect()
    except BaseException:
        pass

def test_case_4():
    try:
        o_auth_mixin_0 = module_0.OAuthMixin()
        o_auth2_mixin_0 = module_0.OAuth2Mixin()
        async_h_t_t_p_client_0 = o_auth2_mixin_0.get_auth_http_client()
    except BaseException:
        pass

def test_case_5():
    try:
        open_id_mixin_0 = module_0.OpenIdMixin()
        str_0 = '_tt_tmp = %s'
        open_id_mixin_0.authenticate_redirect(str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = None
        list_0 = [str_0, str_0, str_0, str_0]
        o_auth2_mixin_0 = module_0.OAuth2Mixin()
        o_auth2_mixin_0.authorize_redirect(list_0)
    except BaseException:
        pass

def test_case_7():
    try:
        open_id_mixin_0 = module_0.OpenIdMixin()
        auth_error_0 = module_0.AuthError()
        str_0 = ''
        str_1 = '_T'
        o_auth2_mixin_0 = module_0.OAuth2Mixin()
        o_auth2_mixin_0.authorize_redirect(str_0, str_0, str_0, str_1)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = "Called when the HTTP headers have been received and parsed.\n\n        :arg start_line: a `.RequeMtStartLine` or `.ResponseStartLine`\n            depending on whether this is a client or server message.\n        :arg headers: a `.HTTPHeaders` instance.\n\n        Some `.HTTPConnecti'n` methods can only be called during\n        ``headers_received``.\n\n        May return a `.Future`; if it does the body will not be read\n        until it is done.\n        "
        dict_0 = {}
        dict_1 = {}
        open_id_mixin_0 = module_0.OpenIdMixin(**dict_1)
        twitter_mixin_0 = module_0.TwitterMixin()
        any_0 = twitter_mixin_0.twitter_request(str_0, dict_0)
        o_auth2_mixin_0 = module_0.OAuth2Mixin()
        o_auth2_mixin_0.authorize_redirect(str_0, str_0, str_0, dict_0, str_0)
    except BaseException:
        pass