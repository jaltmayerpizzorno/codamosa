# Automatically generated by Pynguin.
import pypara.monetary as module_0
import pypara.currencies as module_1
import decimal as module_2
import datetime as module_3

def test_case_0():
    try:
        dict_0 = {}
        list_0 = [dict_0, dict_0, dict_0]
        dict_1 = {}
        none_money_0 = module_0.NoneMoney(**dict_1)
        money_0 = none_money_0.round()
        some_money_0 = module_0.SomeMoney(*list_0)
        money_1 = some_money_0.round()
    except BaseException:
        pass

def test_case_1():
    try:
        dict_0 = {}
        list_0 = [dict_0, dict_0, dict_0]
        dict_1 = {}
        none_money_0 = module_0.NoneMoney(**dict_1)
        money_0 = none_money_0.positive()
        some_money_0 = module_0.SomeMoney(*list_0)
        money_1 = some_money_0.subtract(money_0)
        money_2 = some_money_0.add(money_1)
    except BaseException:
        pass

def test_case_2():
    try:
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.positive()
        money_1 = money_0.__pos__()
        dict_0 = {}
        none_money_1 = module_0.NoneMoney(**dict_0)
        bool_0 = none_money_0.lt(money_1)
        some_money_0 = module_0.SomeMoney()
    except BaseException:
        pass

def test_case_3():
    try:
        float_0 = -251.674
        list_0 = [float_0, float_0, float_0]
        some_price_0 = module_0.SomePrice(*list_0)
        float_1 = some_price_0.as_float()
        str_0 = 'd~-cdC]'
        none_money_0 = module_0.NoneMoney()
        str_1 = 'CurrencyType'
        int_0 = -1738
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        currency_0 = module_1.Currency(str_0, str_1, int_0, currency_type_0, decimal_0, int_0)
        bool_0 = False
        money_0 = none_money_0.with_qty(decimal_0)
        var_0 = money_0.__round__(int_0)
        money_1 = money_0.add(money_0)
        none_price_0 = module_0.NonePrice()
        monetary_operation_exception_0 = module_0.MonetaryOperationException()
        price_0 = none_price_0.positive()
        some_money_0 = module_0.SomeMoney(*list_0)
        monetary_operation_exception_1 = module_0.MonetaryOperationException()
        list_1 = [bool_0, none_money_0, monetary_operation_exception_1, str_1]
        var_1 = currency_0.__gt__(list_1)
        money_2 = some_money_0.floor_divide(monetary_operation_exception_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'd~-cdC]'
        none_money_0 = module_0.NoneMoney()
        str_1 = 'CurrencyType'
        int_0 = -1726
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        currency_0 = module_1.Currency(str_0, str_1, int_0, currency_type_0, decimal_0, int_0)
        bool_0 = False
        money_0 = none_money_0.convert(currency_0, bool_0)
        money_1 = none_money_0.abs()
        var_0 = money_1.__round__()
        money_2 = money_1.add(money_1)
        money_3 = money_2.__abs__()
        date_0 = module_3.date()
    except BaseException:
        pass

def test_case_5():
    try:
        none_money_0 = module_0.NoneMoney()
        none_price_0 = module_0.NonePrice()
        int_0 = none_price_0.as_integer()
    except BaseException:
        pass

def test_case_6():
    try:
        float_0 = -238.94720140922774
        list_0 = [float_0, float_0, float_0]
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.abs()
        none_price_1 = module_0.NonePrice()
        price_1 = none_price_1.subtract(price_0)
        some_price_0 = module_0.SomePrice(*list_0)
        float_1 = some_price_0.as_float()
        str_0 = 'd~-cdC]'
        none_money_0 = module_0.NoneMoney()
        str_1 = 'CurrencyType'
        int_0 = -1738
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        money_0 = none_money_0.divide(str_0)
        money_1 = none_money_0.subtract(money_0)
        int_1 = 2932
        currency_0 = module_1.Currency(str_1, str_1, int_0, currency_type_0, decimal_0, int_1)
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_0 = some_money_0.gte(money_1)
        price_2 = some_price_0.positive()
        bool_1 = price_2.__gt__(price_2)
        price_3 = some_price_0.subtract(price_2)
        bool_2 = price_2.gte(price_2)
        price_4 = some_price_0.convert(currency_0)
    except BaseException:
        pass

def test_case_7():
    try:
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.abs()
        money_1 = money_0.__pos__()
        float_0 = -1750.019
        list_0 = [float_0]
        decimal_0 = module_2.Decimal(*list_0)
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.with_qty(decimal_0)
        bytes_0 = b'\xdbJ\xeeB\xe2'
        list_1 = [bytes_0, bytes_0, bytes_0]
        date_0 = module_3.date(*list_1)
    except BaseException:
        pass

def test_case_8():
    try:
        float_0 = -255.952
        none_price_0 = module_0.NonePrice()
        money_0 = none_price_0.times(float_0)
        int_0 = -3292
        price_0 = none_price_0.abs()
        price_1 = price_0.__floordiv__(int_0)
        money_1 = money_0.positive()
        money_2 = money_1.negative()
        money_3 = money_0.abs()
        str_0 = 'Uzbekistan Sum'
        currency_type_0 = module_1.CurrencyType.ALTERNATIVE
        decimal_0 = module_2.Decimal()
        none_price_1 = module_0.NonePrice()
        bool_0 = none_price_0.as_boolean()
        list_0 = [currency_type_0, money_3, money_3]
        dict_0 = {str_0: money_0, str_0: currency_type_0}
        some_price_0 = module_0.SomePrice(*list_0, **dict_0)
    except BaseException:
        pass

def test_case_9():
    try:
        none_money_0 = module_0.NoneMoney()
        price_0 = None
        none_price_0 = module_0.NonePrice()
        price_1 = none_price_0.subtract(price_0)
    except BaseException:
        pass

def test_case_10():
    try:
        dict_0 = {}
        list_0 = [dict_0, dict_0, dict_0]
        dict_1 = {}
        none_money_0 = module_0.NoneMoney(**dict_1)
        str_0 = 'VB$:|<-7l[<8Fl\n|'
        str_1 = 'Z2(PrZW'
        int_0 = 1160
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        currency_0 = module_1.Currency(str_0, str_1, int_0, currency_type_0, decimal_0, int_0)
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.convert(currency_0)
        money_0 = none_money_0.round()
        some_money_0 = module_0.SomeMoney(*list_0)
        money_1 = some_money_0.round()
    except BaseException:
        pass

def test_case_11():
    try:
        none_money_0 = module_0.NoneMoney()
        date_0 = None
        money_0 = none_money_0.with_dov(date_0)
        bool_0 = none_money_0.as_boolean()
        str_0 = 'ju"gMMV>W]Y~5'
        decimal_0 = module_2.Decimal()
        list_0 = [date_0]
        str_1 = '*:.u[,7BB\\O'
        str_2 = '1{)'
        dict_0 = {str_1: bool_0, str_2: str_2, str_2: str_0}
        some_price_0 = module_0.SomePrice(*list_0, **dict_0)
    except BaseException:
        pass

def test_case_12():
    try:
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.abs()
        money_1 = money_0.__pos__()
        float_0 = -1750.019
        list_0 = [float_0]
        decimal_0 = module_2.Decimal(*list_0)
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.with_qty(decimal_0)
        bytes_0 = b'\xdbJ\xeeB\xe2'
        list_1 = [bytes_0, bytes_0, bytes_0]
        bool_0 = none_money_0.is_equal(price_0)
        date_0 = module_3.date(*list_1)
    except BaseException:
        pass

def test_case_13():
    try:
        dict_0 = {}
        list_0 = [dict_0, dict_0, dict_0]
        dict_1 = {}
        none_money_0 = module_0.NoneMoney(**dict_1)
        str_0 = 'VB$:|<-7l[<8Fl\n|'
        str_1 = 'Z2(PrZW'
        int_0 = 1160
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        currency_0 = module_1.Currency(str_0, str_1, int_0, currency_type_0, decimal_0, int_0)
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.convert(currency_0)
        money_0 = none_money_0.round()
        some_money_0 = module_0.SomeMoney(*list_0)
        str_2 = '\n    Provides a *defined* price object model.\n    '
        incompatible_currency_error_0 = module_0.IncompatibleCurrencyError(currency_0, currency_0, str_2)
        some_price_0 = module_0.SomePrice(*list_0, **dict_1)
        price_1 = some_price_0.scalar_subtract(incompatible_currency_error_0)
    except BaseException:
        pass

def test_case_14():
    try:
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.abs()
        money_1 = money_0.__pos__()
        float_0 = -1750.019
        list_0 = [float_0]
        decimal_0 = module_2.Decimal(*list_0)
        none_price_0 = module_0.NonePrice()
        decimal_1 = None
        price_0 = none_price_0.with_qty(decimal_1)
        bytes_0 = b'\xdbJ\xeeB\xe2'
        bool_0 = none_price_0.is_equal(float_0)
        list_1 = [bytes_0, bytes_0, bytes_0]
        date_0 = module_3.date(*list_1)
    except BaseException:
        pass

def test_case_15():
    try:
        float_0 = -251.674
        list_0 = [float_0, float_0, float_0]
        some_price_0 = module_0.SomePrice(*list_0)
        float_1 = some_price_0.as_float()
        str_0 = 'd~-cdC]'
        none_money_0 = module_0.NoneMoney()
        str_1 = 'CurrencyType'
        int_0 = -1726
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        currency_0 = module_1.Currency(str_0, str_1, int_0, currency_type_0, decimal_0, int_0)
        bool_0 = False
        money_0 = none_money_0.convert(currency_0, bool_0)
        money_1 = none_money_0.abs()
        int_1 = -5565
        money_2 = money_1.scalar_subtract(int_1)
        var_0 = money_1.__round__()
        money_3 = money_0.__abs__()
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.multiply(int_0)
        date_0 = module_3.date()
    except BaseException:
        pass

def test_case_16():
    try:
        float_0 = -238.94720140922774
        list_0 = [float_0, float_0, float_0]
        some_price_0 = module_0.SomePrice(*list_0)
        float_1 = some_price_0.as_float()
        str_0 = 'd~-cdC]'
        none_money_0 = module_0.NoneMoney()
        int_0 = -1738
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        money_0 = none_money_0.divide(str_0)
        money_1 = none_money_0.subtract(money_0)
        decimal_1 = module_2.Decimal()
        int_1 = 2932
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_1, int_1)
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_0 = some_money_0.gte(money_1)
        price_0 = some_price_0.abs()
        bool_1 = price_0.__gt__(price_0)
        price_1 = price_0.add(price_0)
        var_0 = None
        price_2 = price_1.subtract(price_0)
        price_3 = price_2.multiply(var_0)
    except BaseException:
        pass

def test_case_17():
    try:
        none_price_0 = module_0.NonePrice()
        float_0 = none_price_0.as_float()
    except BaseException:
        pass

def test_case_18():
    try:
        none_money_0 = module_0.NoneMoney()
        date_0 = None
        money_0 = none_money_0.with_dov(date_0)
        bool_0 = none_money_0.as_boolean()
        str_0 = 'ju"gMMV>W]Y~5'
        bool_1 = none_money_0.gte(money_0)
        decimal_0 = module_2.Decimal()
        list_0 = [date_0]
        str_1 = '*:.u[,7BB\\O'
        str_2 = '1{)'
        dict_0 = {str_1: bool_0, str_2: str_2, str_2: str_0}
        some_price_0 = module_0.SomePrice(*list_0, **dict_0)
    except BaseException:
        pass

def test_case_19():
    try:
        dict_0 = {}
        list_0 = [dict_0, dict_0, dict_0]
        dict_1 = {}
        none_money_0 = module_0.NoneMoney(**dict_1)
        str_0 = 'VB$:|<-7l[<8Fl\n|'
        str_1 = 'Z2(PrZW'
        int_0 = 1160
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        currency_0 = module_1.Currency(str_0, str_1, int_0, currency_type_0, decimal_0, int_0)
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.convert(currency_0)
        price_1 = price_0.abs()
        some_money_0 = module_0.SomeMoney(*list_0, **dict_1)
        some_price_0 = module_0.SomePrice(*list_0)
        money_0 = some_price_0.times(some_money_0)
    except BaseException:
        pass

def test_case_20():
    try:
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.abs()
        var_0 = money_0.__round__()
        money_1 = money_0.add(money_0)
        none_price_0 = module_0.NonePrice()
        money_2 = money_1.__abs__()
        price_0 = none_price_0.multiply(money_1)
        date_0 = module_3.date()
    except BaseException:
        pass

def test_case_21():
    try:
        float_0 = -255.952
        none_price_0 = module_0.NonePrice()
        money_0 = none_price_0.times(float_0)
        str_0 = None
        int_0 = 78
        currency_type_0 = module_1.CurrencyType.CRYPTO
        decimal_0 = module_2.Decimal()
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        price_0 = none_price_0.with_ccy(currency_0)
        int_1 = -3292
        price_1 = none_price_0.abs()
        price_2 = price_1.__floordiv__(int_1)
        money_1 = money_0.positive()
        money_2 = money_1.negative()
        var_0 = None
        money_3 = money_1.scalar_subtract(var_0)
        money_4 = money_0.abs()
        decimal_1 = module_2.Decimal()
        dict_0 = None
        none_price_1 = module_0.NonePrice()
        bool_0 = none_price_1.as_boolean()
        some_price_0 = module_0.SomePrice(**dict_0)
    except BaseException:
        pass

def test_case_22():
    try:
        float_0 = -238.94720140922774
        list_0 = [float_0, float_0, float_0]
        some_price_0 = module_0.SomePrice(*list_0)
        float_1 = some_price_0.as_float()
        str_0 = 'd~-cdC]'
        none_money_0 = module_0.NoneMoney()
        str_1 = 'CurrencyType'
        int_0 = -1738
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        money_0 = none_money_0.divide(str_0)
        money_1 = none_money_0.subtract(money_0)
        decimal_1 = module_2.Decimal()
        int_1 = 2932
        currency_0 = module_1.Currency(str_1, str_1, int_0, currency_type_0, decimal_1, int_1)
        bool_0 = True
        money_2 = none_money_0.convert(currency_0, bool_0)
        bool_1 = money_2.__le__(money_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_2 = some_money_0.gte(money_1)
        bool_3 = True
        price_0 = some_price_0.abs()
        bool_4 = price_0.__gt__(price_0)
        price_1 = price_0.__pos__()
        price_2 = some_price_0.subtract(price_1)
        price_3 = some_price_0.convert(currency_0, bool_3)
    except BaseException:
        pass

def test_case_23():
    try:
        float_0 = -238.94720140922774
        list_0 = [float_0, float_0, float_0]
        some_price_0 = module_0.SomePrice(*list_0)
        float_1 = some_price_0.as_float()
        none_money_0 = module_0.NoneMoney()
        var_0 = None
        price_0 = some_price_0.floor_divide(var_0)
    except BaseException:
        pass

def test_case_24():
    try:
        none_money_0 = module_0.NoneMoney()
        float_0 = none_money_0.as_float()
    except BaseException:
        pass

def test_case_25():
    try:
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.negative()
        var_0 = money_0.__round__()
        money_1 = money_0.add(money_0)
        int_0 = money_0.as_integer()
    except BaseException:
        pass

def test_case_26():
    try:
        var_0 = None
        float_0 = -238.94720140922774
        list_0 = [float_0, float_0, float_0]
        some_price_0 = module_0.SomePrice(*list_0)
        float_1 = some_price_0.as_float()
        str_0 = 'd~-cdC]'
        none_money_0 = module_0.NoneMoney()
        decimal_0 = module_2.Decimal()
        money_0 = none_money_0.divide(str_0)
        money_1 = none_money_0.subtract(money_0)
        decimal_1 = module_2.Decimal()
        price_0 = some_price_0.abs()
        price_1 = price_0.divide(var_0)
    except BaseException:
        pass

def test_case_27():
    try:
        float_0 = -238.94720140922774
        list_0 = [float_0, float_0, float_0]
        some_price_0 = module_0.SomePrice(*list_0)
        decimal_0 = module_2.Decimal()
        decimal_1 = module_2.Decimal()
        none_price_0 = module_0.NonePrice()
        monetary_operation_exception_0 = module_0.MonetaryOperationException()
        price_0 = none_price_0.positive()
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.floor_divide(monetary_operation_exception_0)
    except BaseException:
        pass

def test_case_28():
    try:
        float_0 = -251.674
        list_0 = [float_0, float_0, float_0]
        some_price_0 = module_0.SomePrice(*list_0)
        float_1 = some_price_0.as_float()
        none_money_0 = module_0.NoneMoney()
        int_0 = -1738
        money_0 = none_money_0.negative()
        var_0 = money_0.__round__(int_0)
        money_1 = money_0.add(money_0)
        monetary_operation_exception_0 = module_0.MonetaryOperationException()
        some_money_0 = module_0.SomeMoney(*list_0)
        money_2 = some_money_0.floor_divide(monetary_operation_exception_0)
    except BaseException:
        pass

def test_case_29():
    try:
        float_0 = -238.94720140922774
        list_0 = [float_0, float_0, float_0]
        some_price_0 = module_0.SomePrice(*list_0)
        float_1 = some_price_0.as_float()
        none_money_0 = module_0.NoneMoney()
        str_0 = 'CurrencyType'
        int_0 = -1738
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        int_1 = 12
        money_0 = none_money_0.scalar_add(int_1)
        str_1 = None
        currency_0 = module_1.Currency(str_0, str_1, int_0, currency_type_0, decimal_0, int_1)
        bool_0 = None
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.multiply(money_0)
        price_1 = some_price_0.subtract(price_0)
        price_2 = price_1.convert(currency_0, bool_0)
    except BaseException:
        pass

def test_case_30():
    try:
        float_0 = -251.674
        list_0 = [float_0, float_0, float_0]
        some_price_0 = module_0.SomePrice(*list_0)
        none_money_0 = module_0.NoneMoney()
        int_0 = -1738
        decimal_0 = module_2.Decimal()
        money_0 = none_money_0.abs()
        some_money_0 = module_0.SomeMoney(*list_0)
        money_1 = some_money_0.abs()
        var_0 = money_0.__round__(int_0)
        money_2 = money_0.add(money_0)
        none_price_0 = module_0.NonePrice()
        monetary_operation_exception_0 = module_0.MonetaryOperationException()
        price_0 = none_price_0.positive()
        some_money_1 = module_0.SomeMoney(*list_0)
        money_3 = some_money_1.floor_divide(monetary_operation_exception_0)
    except BaseException:
        pass

def test_case_31():
    try:
        float_0 = -247.2493559641386
        list_0 = [float_0, float_0, float_0]
        some_price_0 = module_0.SomePrice(*list_0)
        str_0 = 'd~-cdC]'
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        int_0 = 2932
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        price_0 = some_price_0.positive()
        bool_0 = price_0.gte(price_0)
        price_1 = some_price_0.convert(currency_0)
    except BaseException:
        pass

def test_case_32():
    try:
        dict_0 = {}
        list_0 = [dict_0, dict_0, dict_0]
        dict_1 = {}
        none_money_0 = module_0.NoneMoney(**dict_1)
        money_0 = none_money_0.round()
        some_money_0 = module_0.SomeMoney(*list_0)
        var_0 = None
        money_1 = some_money_0.scalar_subtract(var_0)
    except BaseException:
        pass

def test_case_33():
    try:
        float_0 = -251.674
        list_0 = [float_0, float_0, float_0]
        some_price_0 = module_0.SomePrice(*list_0)
        float_1 = some_price_0.as_float()
        str_0 = 'd~-cdC]'
        none_money_0 = module_0.NoneMoney()
        str_1 = 'CurrencyType'
        int_0 = -1738
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        currency_0 = module_1.Currency(str_0, str_1, int_0, currency_type_0, decimal_0, int_0)
        bool_0 = False
        money_0 = none_money_0.abs()
        var_0 = money_0.__round__(int_0)
        money_1 = money_0.abs()
        money_2 = money_0.add(money_0)
        none_price_0 = module_0.NonePrice()
        monetary_operation_exception_0 = module_0.MonetaryOperationException()
        price_0 = none_price_0.positive()
        monetary_operation_exception_1 = module_0.MonetaryOperationException()
        list_1 = [bool_0, none_money_0, monetary_operation_exception_1, str_1]
        var_1 = currency_0.__gt__(list_1)
        price_1 = none_price_0.multiply(list_0)
        bool_1 = price_1.__lt__(price_1)
        dict_0 = {}
        date_0 = module_3.date(**dict_0)
    except BaseException:
        pass

def test_case_34():
    try:
        float_0 = -238.94720140922774
        list_0 = [float_0, float_0, float_0]
        some_price_0 = module_0.SomePrice(*list_0)
        float_1 = some_price_0.as_float()
        str_0 = 'd&-cdC]'
        none_money_0 = module_0.NoneMoney()
        str_1 = 'CurrencyType'
        currency_type_0 = module_1.CurrencyType.ALTERNATIVE
        decimal_0 = module_2.Decimal()
        money_0 = none_money_0.divide(str_0)
        money_1 = none_money_0.subtract(money_0)
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.negative()
        int_0 = 2932
        currency_0 = module_1.Currency(str_1, str_1, int_0, currency_type_0, decimal_0, int_0)
        bool_0 = some_price_0.is_equal(price_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_1 = some_money_0.gte(money_1)
        price_1 = price_0.add(price_0)
        money_2 = some_money_0.with_ccy(currency_0)
        price_2 = some_price_0.abs()
        bool_2 = price_2.__le__(price_1)
        bool_3 = price_1.__gt__(price_1)
        price_3 = some_price_0.negative()
        price_4 = some_price_0.subtract(price_3)
        price_5 = price_2.__neg__()
        bool_4 = price_1.gte(price_5)
        price_6 = price_5.floor_divide(price_4)
    except BaseException:
        pass

def test_case_35():
    try:
        float_0 = -251.674
        list_0 = [float_0, float_0, float_0]
        some_price_0 = module_0.SomePrice(*list_0)
        none_money_0 = module_0.NoneMoney()
        decimal_0 = module_2.Decimal()
        money_0 = none_money_0.abs()
        some_money_0 = module_0.SomeMoney(*list_0)
        money_1 = some_money_0.with_qty(decimal_0)
    except BaseException:
        pass

def test_case_36():
    try:
        float_0 = -238.94720140922774
        list_0 = [float_0, float_0, float_0]
        some_price_0 = module_0.SomePrice(*list_0)
        float_1 = some_price_0.as_float()
        str_0 = 'd~-cdC]'
        none_money_0 = module_0.NoneMoney()
        str_1 = 'CurrencyType'
        currency_type_0 = module_1.CurrencyType.ALTERNATIVE
        decimal_0 = module_2.Decimal()
        money_0 = none_money_0.divide(str_0)
        money_1 = none_money_0.subtract(money_0)
        int_0 = 2932
        int_1 = -1426
        currency_0 = module_1.Currency(str_1, str_0, int_1, currency_type_0, decimal_0, int_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_0 = some_money_0.gte(money_1)
        price_0 = some_price_0.positive()
        bool_1 = price_0.__gt__(price_0)
        var_0 = None
        money_2 = none_money_0.scalar_subtract(var_0)
        price_1 = price_0.__sub__(price_0)
        price_2 = price_1.__add__(price_0)
        price_3 = some_price_0.scalar_add(var_0)
    except BaseException:
        pass

def test_case_37():
    try:
        price_0 = module_0.Price()
        list_0 = []
        bool_0 = price_0.gt(price_0)
        str_0 = 'Naira'
        dict_0 = {str_0: str_0}
        date_0 = module_3.date(*list_0, **dict_0)
    except BaseException:
        pass

def test_case_38():
    try:
        float_0 = -238.94720140922774
        list_0 = [float_0, float_0, float_0]
        some_price_0 = module_0.SomePrice(*list_0)
        float_1 = some_price_0.as_float()
        none_money_0 = module_0.NoneMoney()
        str_0 = 'CurrncGTyp`'
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        int_0 = 2932
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        price_0 = some_price_0.abs()
        price_1 = some_price_0.subtract(price_0)
        bool_0 = price_0.gte(price_0)
        price_2 = some_price_0.convert(currency_0, bool_0)
    except BaseException:
        pass

def test_case_39():
    try:
        dict_0 = {}
        list_0 = [dict_0, dict_0, dict_0]
        dict_1 = {}
        none_money_0 = module_0.NoneMoney(**dict_1)
        bool_0 = True
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.scalar_subtract(bool_0)
        money_0 = none_money_0.negative()
        some_money_0 = module_0.SomeMoney(*list_0)
        money_1 = some_money_0.add(money_0)
        money_2 = money_1.multiply(some_money_0)
    except BaseException:
        pass

def test_case_40():
    try:
        float_0 = -238.94720140922774
        list_0 = [float_0, float_0, float_0]
        some_price_0 = module_0.SomePrice(*list_0)
        float_1 = some_price_0.as_float()
        none_money_0 = module_0.NoneMoney()
        price_0 = some_price_0.round()
        bool_0 = some_price_0.lt(price_0)
        money_0 = module_0.Money()
        float_2 = money_0.__float__()
        money_1 = money_0.abs()
    except BaseException:
        pass

def test_case_41():
    try:
        float_0 = -238.94720140922774
        list_0 = [float_0, float_0, float_0]
        some_price_0 = module_0.SomePrice(*list_0)
        float_1 = some_price_0.as_float()
        str_0 = 'CurrencyType'
        int_0 = -1742
        currency_type_0 = module_1.CurrencyType.MONEY
        price_0 = some_price_0.round()
        bool_0 = some_price_0.lt(price_0)
        decimal_0 = module_2.Decimal()
        price_1 = some_price_0.round()
        price_2 = some_price_0.add(price_0)
        bool_1 = some_price_0.gt(price_2)
        decimal_1 = module_2.Decimal()
        price_3 = some_price_0.with_qty(decimal_1)
        some_money_0 = module_0.SomeMoney(*list_0)
        price_4 = some_price_0.abs()
        price_5 = price_4.add(price_0)
        price_6 = some_price_0.subtract(price_2)
        str_1 = ',Ue{AqEA4x@"'
        int_1 = -2962
        money_0 = some_money_0.negative()
        currency_0 = module_1.Currency(str_0, str_1, int_1, currency_type_0, decimal_0, int_0)
        price_7 = some_price_0.abs()
        money_1 = money_0.add(money_0)
        money_2 = money_1.subtract(money_0)
        price_8 = some_price_0.convert(currency_0, bool_0)
    except BaseException:
        pass

def test_case_42():
    try:
        float_0 = -238.94720140922774
        list_0 = [float_0, float_0, float_0]
        some_price_0 = module_0.SomePrice(*list_0)
        float_1 = some_price_0.as_float()
        str_0 = 'd~-cdC]'
        price_0 = some_price_0.negative()
        price_1 = some_price_0.add(price_0)
        price_2 = some_price_0.add(price_1)
        none_money_0 = module_0.NoneMoney()
        str_1 = 'CurrencyType'
        int_0 = -1738
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        money_0 = none_money_0.divide(str_0)
        money_1 = none_money_0.subtract(money_0)
        decimal_1 = module_2.Decimal()
        int_1 = 2950
        currency_0 = module_1.Currency(str_1, str_1, int_0, currency_type_0, decimal_1, int_1)
        price_3 = some_price_0.abs()
        bool_0 = price_3.__gt__(price_3)
        money_2 = money_1.abs()
        price_4 = price_3.__pos__()
        price_5 = some_price_0.subtract(price_4)
        price_6 = price_4.__abs__()
        price_7 = price_6.scalar_subtract(none_money_0)
    except BaseException:
        pass

def test_case_43():
    try:
        float_0 = -238.94720140922774
        list_0 = [float_0, float_0, float_0]
        some_price_0 = module_0.SomePrice(*list_0)
        float_1 = some_price_0.as_float()
        str_0 = 'd~-cdC]'
        none_money_0 = module_0.NoneMoney()
        str_1 = 'CurrencyType'
        int_0 = -1714
        currency_type_0 = module_1.CurrencyType.ALTERNATIVE
        decimal_0 = module_2.Decimal()
        money_0 = none_money_0.divide(str_0)
        money_1 = none_money_0.subtract(money_0)
        int_1 = 2932
        currency_0 = module_1.Currency(str_1, str_1, int_0, currency_type_0, decimal_0, int_1)
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_0 = some_money_0.gte(money_1)
        int_2 = some_price_0.as_integer()
        price_0 = some_price_0.positive()
        bool_1 = price_0.__gt__(price_0)
        price_1 = price_0.add(price_0)
        money_2 = some_money_0.with_ccy(currency_0)
        bool_2 = price_1.__eq__(money_0)
        price_2 = some_price_0.abs()
        bool_3 = price_2.__le__(price_1)
        bool_4 = price_1.__gt__(price_1)
        price_3 = some_price_0.negative()
        price_4 = some_price_0.subtract(price_3)
        bool_5 = price_1.gte(price_4)
        price_5 = some_price_0.abs()
        price_6 = some_price_0.with_ccy(currency_0)
        price_7 = some_price_0.subtract(price_6)
    except BaseException:
        pass

def test_case_44():
    try:
        float_0 = -238.94720140922774
        list_0 = [float_0, float_0, float_0]
        some_price_0 = module_0.SomePrice(*list_0)
        float_1 = some_price_0.as_float()
        none_money_0 = module_0.NoneMoney()
        str_0 = 'CurrncGTyp`'
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        int_0 = 2932
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = none_money_0.round()
        money_1 = some_money_0.divide(int_0)
    except BaseException:
        pass

def test_case_45():
    try:
        float_0 = -238.94720140922774
        list_0 = [float_0, float_0, float_0]
        some_price_0 = module_0.SomePrice(*list_0)
        float_1 = some_price_0.as_float()
        none_money_0 = module_0.NoneMoney()
        str_0 = 'CurrencyType'
        int_0 = -1742
        currency_type_0 = module_1.CurrencyType.MONEY
        price_0 = some_price_0.round()
        bool_0 = some_price_0.lt(price_0)
        money_0 = none_money_0.divide(str_0)
        decimal_0 = module_2.Decimal()
        price_1 = some_price_0.add(price_0)
        bool_1 = money_0.gt(money_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        money_1 = some_money_0.add(money_0)
        price_2 = some_price_0.abs()
        price_3 = price_2.add(price_0)
        price_4 = some_price_0.subtract(price_1)
        bool_2 = money_1.__lt__(money_0)
        bool_3 = price_3.__eq__(bool_1)
        str_1 = ',Ue{AqEA4x@"'
        int_1 = -2962
        currency_0 = module_1.Currency(str_0, str_1, int_1, currency_type_0, decimal_0, int_0)
        bool_4 = some_money_0.lte(money_1)
        price_5 = some_price_0.abs()
        bool_5 = some_money_0.gt(money_1)
        money_2 = money_1.add(money_1)
        money_3 = money_2.subtract(money_1)
        money_4 = some_money_0.positive()
        money_5 = money_1.subtract(money_4)
        bool_6 = True
        price_6 = some_price_0.convert(currency_0, bool_6)
    except BaseException:
        pass

def test_case_46():
    try:
        dict_0 = {}
        list_0 = [dict_0, dict_0, dict_0]
        dict_1 = {}
        none_money_0 = module_0.NoneMoney(**dict_1)
        money_0 = none_money_0.positive()
        some_money_0 = module_0.SomeMoney(*list_0)
        money_1 = some_money_0.subtract(money_0)
        money_2 = some_money_0.negative()
    except BaseException:
        pass

def test_case_47():
    try:
        none_money_0 = module_0.NoneMoney()
        decimal_0 = module_2.Decimal()
        currency_0 = None
        money_0 = module_0.Money()
        money_1 = money_0.convert(currency_0)
    except BaseException:
        pass

def test_case_48():
    try:
        float_0 = -238.94720140922774
        list_0 = [float_0, float_0, float_0]
        some_price_0 = module_0.SomePrice(*list_0)
        float_1 = some_price_0.as_float()
        none_money_0 = module_0.NoneMoney()
        str_0 = 'CurrencyType'
        int_0 = -1738
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        decimal_1 = module_2.Decimal()
        int_1 = 2932
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_1, int_1)
        price_0 = some_price_0.abs()
        bool_0 = price_0.__gt__(price_0)
        none_price_0 = module_0.NonePrice()
        price_1 = none_price_0.convert(currency_0)
        bool_1 = price_1.__gt__(price_0)
        price_2 = price_1.__add__(price_0)
        price_3 = some_price_0.subtract(price_2)
        bool_2 = price_0.gte(price_1)
        some_price_1 = module_0.SomePrice()
    except BaseException:
        pass

def test_case_49():
    try:
        float_0 = -238.94720140922774
        list_0 = [float_0, float_0, float_0]
        str_0 = 'd~-cdC]'
        none_money_0 = module_0.NoneMoney()
        str_1 = 'CurrencyType'
        int_0 = -1714
        currency_type_0 = module_1.CurrencyType.ALTERNATIVE
        decimal_0 = module_2.Decimal()
        money_0 = none_money_0.divide(str_0)
        money_1 = none_money_0.subtract(money_0)
        int_1 = 2932
        currency_0 = module_1.Currency(str_1, str_1, int_0, currency_type_0, decimal_0, int_1)
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_0 = some_money_0.gte(money_1)
        money_2 = some_money_0.with_ccy(currency_0)
        money_3 = money_2.add(money_2)
        money_4 = money_3.round(int_1)
        bool_1 = True
        money_5 = some_money_0.convert(currency_0, bool_1)
    except BaseException:
        pass

def test_case_50():
    try:
        money_0 = module_0.Money()
        money_1 = money_0.negative()
    except BaseException:
        pass

def test_case_51():
    try:
        float_0 = -238.94720140922774
        list_0 = [float_0, float_0, float_0]
        some_price_0 = module_0.SomePrice(*list_0)
        float_1 = some_price_0.as_float()
        none_money_0 = module_0.NoneMoney()
        str_0 = 'CurrencyType'
        currency_type_0 = module_1.CurrencyType.ALTERNATIVE
        decimal_0 = module_2.Decimal()
        money_0 = none_money_0.divide(str_0)
        money_1 = none_money_0.subtract(money_0)
        int_0 = 2932
        str_1 = "#*rD'"
        int_1 = 1434
        currency_0 = module_1.Currency(str_0, str_1, int_0, currency_type_0, decimal_0, int_1)
        price_0 = module_0.Price()
        price_1 = price_0.with_ccy(currency_0)
        currency_1 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_0 = some_money_0.gte(money_1)
        price_2 = some_price_0.abs()
        bool_1 = price_2.__gt__(price_2)
        price_3 = some_price_0.subtract(price_2)
        bool_2 = price_2.gte(price_2)
        price_4 = some_price_0.convert(currency_0)
    except BaseException:
        pass

def test_case_52():
    try:
        float_0 = -238.94720140922774
        list_0 = [float_0, float_0, float_0]
        some_price_0 = module_0.SomePrice(*list_0)
        float_1 = some_price_0.as_float()
        str_0 = 'd~-cdC]'
        none_money_0 = module_0.NoneMoney()
        str_1 = 'CurrencyType'
        currency_type_0 = module_1.CurrencyType.ALTERNATIVE
        decimal_0 = module_2.Decimal()
        money_0 = none_money_0.divide(str_0)
        money_1 = none_money_0.subtract(money_0)
        int_0 = 2932
        str_2 = "#*rD'"
        int_1 = 1434
        str_3 = '9-.pS3"!\x0cVhR6'
        str_4 = '8\n:5jiU$\x0c'
        currency_0 = module_1.Currency(str_3, str_4, int_1, currency_type_0, decimal_0, int_0)
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.with_ccy(currency_0)
        bool_0 = some_price_0.lt(price_0)
        currency_1 = module_1.Currency(str_1, str_2, int_0, currency_type_0, decimal_0, int_1)
        price_1 = module_0.Price()
        price_2 = price_1.with_ccy(currency_1)
        currency_2 = module_1.Currency(str_1, str_1, int_0, currency_type_0, decimal_0, int_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_1 = some_money_0.gte(money_1)
        price_3 = some_price_0.abs()
        bool_2 = price_3.__gt__(price_3)
        price_4 = some_price_0.subtract(price_3)
        bool_3 = price_3.gte(price_3)
        bool_4 = True
        price_5 = some_price_0.convert(currency_2, bool_4)
    except BaseException:
        pass

def test_case_53():
    try:
        float_0 = -238.94720140922774
        list_0 = [float_0, float_0, float_0]
        some_price_0 = module_0.SomePrice(*list_0)
        float_1 = some_price_0.as_float()
        none_money_0 = module_0.NoneMoney()
        str_0 = 'CurrencyType'
        currency_type_0 = module_1.CurrencyType.ALTERNATIVE
        decimal_0 = module_2.Decimal()
        money_0 = none_money_0.negative()
        money_1 = none_money_0.subtract(money_0)
        int_0 = 2932
        str_1 = "#*rD'"
        int_1 = 1434
        currency_0 = module_1.Currency(str_0, str_1, int_0, currency_type_0, decimal_0, int_1)
        price_0 = module_0.Price()
        price_1 = price_0.with_ccy(currency_0)
        var_0 = None
        price_2 = price_0.divide(var_0)
    except BaseException:
        pass

def test_case_54():
    try:
        float_0 = -238.94720140922774
        list_0 = [float_0, float_0, float_0]
        some_price_0 = module_0.SomePrice(*list_0)
        float_1 = some_price_0.as_float()
        str_0 = 'd~-cdC]'
        none_money_0 = module_0.NoneMoney()
        decimal_0 = module_2.Decimal()
        money_0 = none_money_0.divide(str_0)
        money_1 = none_money_0.subtract(money_0)
        price_0 = module_0.Price()
        price_1 = some_price_0.abs()
        price_2 = price_0.with_qty(decimal_0)
        date_0 = module_3.date()
    except BaseException:
        pass

def test_case_55():
    try:
        float_0 = -238.94720140922774
        list_0 = [float_0, float_0, float_0]
        some_price_0 = module_0.SomePrice(*list_0)
        float_1 = some_price_0.as_float()
        str_0 = 'd~-cdC]'
        none_money_0 = module_0.NoneMoney()
        str_1 = 'CurrencyType'
        int_0 = -1714
        currency_type_0 = module_1.CurrencyType.ALTERNATIVE
        decimal_0 = module_2.Decimal()
        money_0 = none_money_0.divide(str_0)
        none_price_0 = module_0.NonePrice()
        price_0 = some_price_0.positive()
        money_1 = money_0.__sub__(money_0)
        int_1 = 4
        price_1 = price_0.__abs__()
        price_2 = price_0.floor_divide(str_0)
        currency_0 = module_1.Currency(str_1, str_1, int_0, currency_type_0, decimal_0, int_1)
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_0 = some_money_0.gte(money_1)
        money_2 = some_money_0.with_ccy(currency_0)
        price_3 = some_price_0.negative()
        bool_1 = price_3.__lt__(price_3)
        price_4 = some_price_0.subtract(price_3)
        money_3 = money_0.__floordiv__(currency_type_0)
        bool_2 = price_4.gte(price_3)
        bool_3 = money_2.__gt__(money_1)
        money_4 = money_2.__sub__(money_2)
        money_5 = money_2.add(money_2)
        money_6 = money_5.round(int_1)
        money_7 = some_money_0.negative()
        none_type_0 = None
        bool_4 = False
        price_5 = some_price_0.convert(currency_0, none_type_0, bool_4)
    except BaseException:
        pass

def test_case_56():
    try:
        float_0 = -238.94720140922774
        list_0 = [float_0, float_0, float_0]
        some_price_0 = module_0.SomePrice(*list_0)
        float_1 = some_price_0.as_float()
        str_0 = 'd~-cdC]'
        none_money_0 = module_0.NoneMoney()
        str_1 = 'CurrencyType'
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        money_0 = none_money_0.divide(str_0)
        money_1 = none_money_0.subtract(money_0)
        int_0 = 2932
        str_2 = "#*rD'"
        int_1 = 1434
        str_3 = '9-.pS3"!\x0cVhR6'
        str_4 = '8\n:5jiU$\x0c'
        currency_0 = module_1.Currency(str_3, str_4, int_1, currency_type_0, decimal_0, int_0)
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.with_ccy(currency_0)
        bool_0 = some_price_0.lt(price_0)
        currency_1 = module_1.Currency(str_1, str_2, int_0, currency_type_0, decimal_0, int_1)
        price_1 = module_0.Price()
        price_2 = price_1.with_ccy(currency_1)
        currency_2 = module_1.Currency(str_1, str_1, int_0, currency_type_0, decimal_0, int_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_1 = some_money_0.gte(money_1)
        bool_2 = price_0.__gt__(price_1)
        price_3 = some_price_0.subtract(price_0)
        bool_3 = price_1.gte(price_2)
        str_5 = 'G~f/Ccp!IF}0SwC) wW'
        int_2 = 334
        int_3 = 1286
        currency_3 = module_1.Currency(str_0, str_5, int_2, currency_type_0, decimal_0, int_3)
        monetary_operation_exception_0 = module_0.MonetaryOperationException(*list_0)
        price_4 = some_price_0.convert(currency_3, monetary_operation_exception_0)
    except BaseException:
        pass

def test_case_57():
    try:
        money_0 = None
        int_0 = 1773
        int_1 = -434
        list_0 = [int_0, int_0, int_1]
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_0 = some_money_0.lte(money_0)
    except BaseException:
        pass

def test_case_58():
    try:
        float_0 = -238.94720140922774
        list_0 = [float_0, float_0, float_0]
        some_price_0 = module_0.SomePrice(*list_0)
        float_1 = some_price_0.as_float()
        str_0 = 'd~-cdC]'
        none_money_0 = module_0.NoneMoney()
        str_1 = 'CurrencyType'
        currency_type_0 = module_1.CurrencyType.ALTERNATIVE
        decimal_0 = module_2.Decimal()
        money_0 = none_money_0.divide(str_0)
        money_1 = none_money_0.subtract(money_0)
        int_0 = 2932
        str_2 = "#*rD'"
        int_1 = 1434
        str_3 = '9-.pS3"!\x0cVhR6'
        str_4 = '8\n:5jiU$\x0c'
        currency_0 = module_1.Currency(str_3, str_4, int_1, currency_type_0, decimal_0, int_0)
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.with_ccy(currency_0)
        bool_0 = some_price_0.lt(price_0)
        currency_1 = module_1.Currency(str_1, str_2, int_0, currency_type_0, decimal_0, int_1)
        price_1 = module_0.Price()
        price_2 = price_1.with_ccy(currency_1)
        currency_2 = module_1.Currency(str_1, str_1, int_0, currency_type_0, decimal_0, int_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_1 = some_money_0.gte(money_1)
        price_3 = some_price_0.abs()
        bool_2 = price_1.__gt__(price_0)
        price_4 = some_price_0.subtract(price_3)
        bool_3 = price_4.gte(price_1)
    except BaseException:
        pass

def test_case_59():
    try:
        float_0 = -238.94720140922774
        list_0 = [float_0, float_0, float_0]
        some_price_0 = module_0.SomePrice(*list_0)
        float_1 = some_price_0.as_float()
        str_0 = 'd~-cdC]'
        none_money_0 = module_0.NoneMoney()
        str_1 = 'CurrencyType'
        int_0 = -1714
        currency_type_0 = module_1.CurrencyType.ALTERNATIVE
        decimal_0 = module_2.Decimal()
        money_0 = none_money_0.divide(str_0)
        money_1 = none_money_0.subtract(money_0)
        int_1 = 2932
        currency_0 = module_1.Currency(str_1, str_1, int_0, currency_type_0, decimal_0, int_1)
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_0 = some_money_0.gte(money_1)
        price_0 = some_price_0.positive()
        bool_1 = price_0.__gt__(price_0)
        price_1 = price_0.add(price_0)
        money_2 = some_money_0.with_ccy(currency_0)
        price_2 = some_price_0.abs()
        bool_2 = price_1.__gt__(price_1)
        price_3 = some_price_0.negative()
        price_4 = some_price_0.subtract(price_3)
        bool_3 = price_1.gte(price_4)
        money_3 = money_2.round()
        bool_4 = money_0.as_boolean()
        money_4 = some_money_0.scalar_add(money_2)
    except BaseException:
        pass

def test_case_60():
    try:
        float_0 = -238.94720140922774
        list_0 = [float_0, float_0, float_0]
        some_price_0 = module_0.SomePrice(*list_0)
        float_1 = some_price_0.as_float()
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.abs()
        bool_0 = some_price_0.gt(price_0)
        str_0 = 'd~-cdC]'
        none_money_0 = module_0.NoneMoney()
        str_1 = 'CurrencyType'
        currency_type_0 = module_1.CurrencyType.ALTERNATIVE
        decimal_0 = module_2.Decimal()
        money_0 = none_money_0.divide(str_0)
        money_1 = none_money_0.subtract(money_0)
        int_0 = 2932
        str_2 = "#*rD'"
        int_1 = 1434
        str_3 = '9-.pS3"!\x0cVhR6'
        str_4 = '8\n:5jiU$\x0c'
        currency_0 = module_1.Currency(str_3, str_4, int_1, currency_type_0, decimal_0, int_0)
        none_price_1 = module_0.NonePrice()
        price_1 = none_price_1.with_ccy(currency_0)
        bool_1 = some_price_0.lt(price_1)
        currency_1 = module_1.Currency(str_1, str_2, int_0, currency_type_0, decimal_0, int_1)
        price_2 = module_0.Price()
        price_3 = price_2.with_ccy(currency_1)
        currency_2 = module_1.Currency(str_1, str_1, int_0, currency_type_0, decimal_0, int_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_2 = some_money_0.gte(money_1)
        price_4 = some_price_0.abs()
        bool_3 = price_4.__gt__(price_4)
        price_5 = some_price_0.subtract(price_4)
        bool_4 = price_4.gte(price_4)
        price_6 = some_price_0.convert(currency_2)
    except BaseException:
        pass

def test_case_61():
    try:
        price_0 = module_0.Price()
        bool_0 = price_0.gt(price_0)
        price_1 = price_0.negative()
    except BaseException:
        pass

def test_case_62():
    try:
        float_0 = -238.94720140922774
        list_0 = [float_0, float_0, float_0]
        some_price_0 = module_0.SomePrice(*list_0)
        float_1 = some_price_0.as_float()
        str_0 = 'd~-cdC]'
        none_money_0 = module_0.NoneMoney()
        decimal_0 = module_2.Decimal()
        money_0 = none_money_0.divide(str_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_0 = some_money_0.gte(money_0)
        price_0 = some_price_0.abs()
        bool_1 = money_0.__bool__()
        bool_2 = price_0.__gt__(price_0)
        price_1 = some_price_0.subtract(price_0)
        bool_3 = some_money_0.lte(money_0)
        some_price_1 = module_0.SomePrice()
    except BaseException:
        pass

def test_case_63():
    try:
        price_0 = module_0.Price()
        bool_0 = price_0.gt(price_0)
        price_1 = price_0.__sub__(price_0)
        price_2 = price_1.__pos__()
    except BaseException:
        pass

def test_case_64():
    try:
        float_0 = -238.94720140922774
        list_0 = [float_0, float_0, float_0]
        some_price_0 = module_0.SomePrice(*list_0)
        float_1 = some_price_0.as_float()
        str_0 = 'd&-cdC]'
        none_money_0 = module_0.NoneMoney()
        str_1 = 'CurrencyType'
        int_0 = -1714
        currency_type_0 = module_1.CurrencyType.ALTERNATIVE
        decimal_0 = module_2.Decimal()
        money_0 = none_money_0.divide(str_0)
        money_1 = none_money_0.subtract(money_0)
        int_1 = 2932
        currency_0 = module_1.Currency(str_1, str_1, int_0, currency_type_0, decimal_0, int_1)
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_0 = some_money_0.gte(money_1)
        price_0 = some_price_0.positive()
        price_1 = price_0.add(price_0)
        money_2 = some_money_0.with_ccy(currency_0)
        price_2 = some_price_0.abs()
        bool_1 = price_2.__le__(price_1)
        bool_2 = price_1.__gt__(price_1)
        price_3 = some_price_0.negative()
        price_4 = price_0.with_ccy(currency_0)
        bool_3 = price_1.gte(price_4)
    except BaseException:
        pass

def test_case_65():
    try:
        float_0 = -238.94720140922774
        list_0 = [float_0, float_0, float_0]
        some_price_0 = module_0.SomePrice(*list_0)
        float_1 = some_price_0.as_float()
        str_0 = 'd~-cdC]'
        none_money_0 = module_0.NoneMoney()
        str_1 = 'CurrencyType'
        int_0 = -1714
        currency_type_0 = module_1.CurrencyType.ALTERNATIVE
        decimal_0 = module_2.Decimal()
        money_0 = none_money_0.divide(str_0)
        money_1 = none_money_0.subtract(money_0)
        int_1 = 2932
        currency_0 = module_1.Currency(str_1, str_1, int_0, currency_type_0, decimal_0, int_1)
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_0 = some_money_0.gte(money_1)
        money_2 = some_money_0.with_ccy(currency_0)
        price_0 = some_price_0.abs()
        price_1 = some_price_0.negative()
        price_2 = some_price_0.subtract(price_0)
        money_3 = money_0.__floordiv__(currency_type_0)
        str_2 = '*1\nv=L\x0b'
        money_4 = money_2.__floordiv__(str_2)
        price_3 = price_0.__sub__(price_2)
        bool_1 = price_0.gte(price_1)
        money_5 = money_2.__sub__(money_2)
        money_6 = money_2.add(money_2)
        money_7 = money_6.round(int_1)
        date_0 = None
        price_4 = some_price_0.convert(currency_0, date_0)
    except BaseException:
        pass

def test_case_66():
    try:
        float_0 = -238.94720140922774
        list_0 = [float_0, float_0, float_0]
        int_0 = -1742
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        some_money_0 = module_0.SomeMoney(*list_0)
        str_0 = ',Ue{AqEA4x@"'
        int_1 = -2962
        money_0 = some_money_0.negative()
        currency_0 = module_1.Currency(str_0, str_0, int_1, currency_type_0, decimal_0, int_0)
        money_1 = some_money_0.convert(currency_0)
    except BaseException:
        pass

def test_case_67():
    try:
        float_0 = -238.94720140922774
        list_0 = [float_0, float_0, float_0]
        none_money_0 = module_0.NoneMoney()
        int_0 = -1742
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        decimal_1 = module_2.Decimal()
        some_money_0 = module_0.SomeMoney(*list_0)
        str_0 = ',Ue{AqEA4x@"'
        int_1 = -2962
        money_0 = some_money_0.negative()
        currency_0 = module_1.Currency(str_0, str_0, int_1, currency_type_0, decimal_0, int_0)
        money_1 = money_0.add(money_0)
        money_2 = some_money_0.convert(currency_0)
    except BaseException:
        pass

def test_case_68():
    try:
        float_0 = -238.94720140922774
        list_0 = [float_0, float_0, float_0]
        some_price_0 = module_0.SomePrice(*list_0)
        float_1 = some_price_0.as_float()
        str_0 = 'd&-cdC]'
        none_money_0 = module_0.NoneMoney()
        str_1 = 'CurrencyType'
        int_0 = -1714
        currency_type_0 = module_1.CurrencyType.ALTERNATIVE
        decimal_0 = module_2.Decimal()
        money_0 = none_money_0.divide(str_0)
        money_1 = none_money_0.subtract(money_0)
        int_1 = 2932
        currency_0 = module_1.Currency(str_1, str_1, int_0, currency_type_0, decimal_0, int_1)
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_0 = some_money_0.gte(money_1)
        price_0 = some_price_0.with_qty(decimal_0)
        price_1 = price_0.add(price_0)
        money_2 = some_money_0.with_ccy(currency_0)
        bool_1 = price_0.__eq__(price_1)
        price_2 = some_price_0.abs()
        bool_2 = price_1.__le__(price_0)
        bool_3 = price_1.__gt__(price_0)
        price_3 = some_price_0.negative()
        price_4 = None
        price_5 = some_price_0.subtract(price_4)
    except BaseException:
        pass

def test_case_69():
    try:
        float_0 = -238.94720140922774
        list_0 = [float_0, float_0, float_0]
        some_price_0 = module_0.SomePrice(*list_0)
        float_1 = some_price_0.as_float()
        none_money_0 = module_0.NoneMoney()
        str_0 = 'CurrencyType'
        int_0 = -1714
        currency_type_0 = module_1.CurrencyType.ALTERNATIVE
        decimal_0 = module_2.Decimal()
        money_0 = none_money_0.abs()
        money_1 = none_money_0.subtract(money_0)
        int_1 = 2932
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_1)
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_0 = some_money_0.gte(money_1)
        price_0 = some_price_0.positive()
        bool_1 = price_0.__gt__(price_0)
        price_1 = price_0.add(price_0)
        money_2 = some_money_0.with_ccy(currency_0)
        price_2 = some_price_0.abs()
        price_3 = some_price_0.with_ccy(currency_0)
        bool_2 = price_2.__le__(price_3)
    except BaseException:
        pass

def test_case_70():
    try:
        price_0 = module_0.Price()
        price_1 = price_0.round()
    except BaseException:
        pass

def test_case_71():
    try:
        float_0 = -238.94720140922774
        list_0 = [float_0, float_0, float_0]
        some_price_0 = module_0.SomePrice(*list_0)
        str_0 = 'CurrencyType'
        int_0 = -1738
        currency_type_0 = module_1.CurrencyType.ALTERNATIVE
        decimal_0 = module_2.Decimal()
        int_1 = 2932
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_1)
        some_money_0 = module_0.SomeMoney(*list_0)
        price_0 = some_price_0.with_qty(decimal_0)
        bool_0 = price_0.__gt__(price_0)
        price_1 = price_0.add(price_0)
        money_0 = some_money_0.with_ccy(currency_0)
        price_2 = some_price_0.abs()
        bool_1 = price_2.__le__(price_1)
        bool_2 = price_1.__gt__(price_1)
        price_3 = some_price_0.negative()
        price_4 = some_price_0.subtract(price_2)
        float_1 = some_money_0.as_float()
        price_5 = price_2.__sub__(price_4)
        bool_3 = price_0.gte(price_3)
        int_2 = -1714
        price_6 = some_price_0.abs()
        money_1 = money_0.add(money_0)
        money_2 = money_1.round(int_2)
        none_type_0 = None
        price_7 = some_price_0.convert(currency_0, none_type_0)
    except BaseException:
        pass

def test_case_72():
    try:
        int_0 = -3227
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.floor_divide(int_0)
        price_1 = module_0.Price()
        bool_0 = price_1.gt(price_1)
        bool_1 = price_1.__eq__(bool_0)
        price_2 = price_1.negative()
    except BaseException:
        pass

def test_case_73():
    try:
        float_0 = -238.9472
        list_0 = [float_0, float_0, float_0]
        some_price_0 = module_0.SomePrice(*list_0)
        float_1 = some_price_0.as_float()
        none_money_0 = module_0.NoneMoney()
        str_0 = 'pFba-3aK[[4L86SS5'
        int_0 = -1705
        price_0 = some_price_0.abs()
        currency_type_0 = module_1.CurrencyType.ALTERNATIVE
        decimal_0 = module_2.Decimal()
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        price_1 = some_price_0.with_qty(decimal_0)
        bool_0 = price_1.__gt__(price_1)
        price_2 = price_1.add(price_1)
        money_0 = some_money_0.with_ccy(currency_0)
        price_3 = price_2.divide(decimal_0)
        bool_1 = price_2.__eq__(money_0)
        price_4 = some_price_0.abs()
        bool_2 = price_4.__le__(price_2)
        price_5 = some_price_0.add(price_3)
        price_6 = some_price_0.subtract(price_4)
        bool_3 = price_1.gte(price_5)
        bool_4 = none_money_0.gt(money_0)
        money_1 = money_0.add(money_0)
        money_2 = money_1.subtract(money_1)
        bool_5 = False
        price_7 = some_price_0.convert(currency_0, bool_5)
    except BaseException:
        pass

def test_case_74():
    try:
        float_0 = -238.94720140922774
        list_0 = [float_0, float_0, float_0]
        some_price_0 = module_0.SomePrice(*list_0)
        float_1 = some_price_0.as_float()
        none_money_0 = module_0.NoneMoney()
        str_0 = 'CurrencyType'
        currency_type_0 = module_1.CurrencyType.ALTERNATIVE
        decimal_0 = module_2.Decimal()
        int_0 = 2932
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        price_0 = some_price_0.positive()
        price_1 = price_0.add(price_0)
        money_0 = some_money_0.with_ccy(currency_0)
        bool_0 = price_1.__eq__(money_0)
        price_2 = some_price_0.negative()
        bool_1 = price_2.__le__(price_1)
        bool_2 = price_1.__gt__(price_1)
        price_3 = some_price_0.negative()
        price_4 = some_price_0.subtract(price_2)
        price_5 = price_2.__sub__(price_4)
        int_1 = None
        price_6 = some_price_0.round(int_1)
        bool_3 = price_0.gte(price_3)
        bool_4 = some_money_0.gt(money_0)
    except BaseException:
        pass

def test_case_75():
    try:
        float_0 = -238.94720140922774
        list_0 = [float_0, float_0, float_0]
        some_price_0 = module_0.SomePrice(*list_0)
        float_1 = some_price_0.as_float()
        str_0 = 'CurrencyType'
        currency_type_0 = module_1.CurrencyType.ALTERNATIVE
        decimal_0 = module_2.Decimal()
        int_0 = 2932
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.with_ccy(currency_0)
        price_0 = some_price_0.negative()
        bool_0 = price_0.__gt__(price_0)
        bool_1 = some_money_0.gte(money_0)
    except BaseException:
        pass

def test_case_76():
    try:
        float_0 = -238.94720140922774
        list_0 = [float_0, float_0, float_0]
        some_price_0 = module_0.SomePrice(*list_0)
        float_1 = some_price_0.as_float()
        str_0 = 'd~-cdC]'
        none_money_0 = module_0.NoneMoney()
        str_1 = 'CurrencyType'
        int_0 = -1714
        currency_type_0 = module_1.CurrencyType.ALTERNATIVE
        decimal_0 = module_2.Decimal()
        money_0 = none_money_0.divide(str_0)
        money_1 = none_money_0.subtract(money_0)
        int_1 = 2932
        currency_0 = module_1.Currency(str_1, str_1, int_0, currency_type_0, decimal_0, int_1)
        some_money_0 = module_0.SomeMoney(*list_0)
        date_0 = None
        price_0 = some_price_0.with_dov(date_0)
        bool_0 = some_money_0.gte(money_1)
        money_2 = some_money_0.with_ccy(currency_0)
        price_1 = some_price_0.abs()
        str_2 = None
        int_2 = -924
        currency_1 = module_1.Currency(str_1, str_2, int_2, currency_type_0, decimal_0, int_0)
        bool_1 = price_1.gt(price_1)
        some_price_1 = module_0.SomePrice(*list_0)
        price_2 = some_price_1.abs()
        bool_2 = some_money_0.gt(money_0)
        money_3 = money_1.add(money_0)
        money_4 = money_1.subtract(money_1)
        bool_3 = some_price_1.is_equal(price_1)
        date_1 = module_3.date()
    except BaseException:
        pass

def test_case_77():
    try:
        float_0 = -238.94720140922774
        list_0 = [float_0, float_0, float_0]
        some_price_0 = module_0.SomePrice(*list_0)
        float_1 = some_price_0.as_float()
        str_0 = 'd~-cdC]'
        none_money_0 = module_0.NoneMoney()
        str_1 = 'CurrencyType'
        int_0 = -1714
        currency_type_0 = module_1.CurrencyType.ALTERNATIVE
        decimal_0 = module_2.Decimal()
        money_0 = none_money_0.divide(str_0)
        money_1 = none_money_0.subtract(money_0)
        int_1 = 2932
        currency_0 = module_1.Currency(str_1, str_1, int_0, currency_type_0, decimal_0, int_1)
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_0 = some_money_0.gte(money_1)
        money_2 = some_money_0.with_ccy(currency_0)
        price_0 = some_price_0.abs()
        price_1 = some_price_0.negative()
        price_2 = some_price_0.subtract(price_0)
        money_3 = money_0.__floordiv__(currency_type_0)
        price_3 = price_0.__sub__(price_2)
        bool_1 = price_0.gte(price_1)
        bool_2 = money_2.__gt__(money_1)
        money_4 = money_2.__sub__(money_2)
        bool_3 = some_money_0.gt(money_3)
        money_5 = some_money_0.subtract(money_2)
    except BaseException:
        pass

def test_case_78():
    try:
        float_0 = -238.94720140922774
        list_0 = [float_0, float_0, float_0]
        some_price_0 = module_0.SomePrice(*list_0)
        float_1 = some_price_0.as_float()
        str_0 = 'd~-cdC]'
        none_money_0 = module_0.NoneMoney()
        str_1 = 'CurrencyType'
        int_0 = -1714
        currency_type_0 = module_1.CurrencyType.ALTERNATIVE
        decimal_0 = module_2.Decimal()
        money_0 = none_money_0.round(int_0)
        money_1 = none_money_0.subtract(money_0)
        int_1 = 2932
        currency_0 = module_1.Currency(str_1, str_1, int_0, currency_type_0, decimal_0, int_1)
        some_money_0 = module_0.SomeMoney(*list_0)
        money_2 = some_money_0.divide(str_0)
        money_3 = none_money_0.subtract(money_2)
        bool_0 = some_money_0.gte(money_1)
        money_4 = some_money_0.with_ccy(currency_0)
        price_0 = some_price_0.abs()
        price_1 = some_price_0.negative()
        price_2 = some_price_0.subtract(price_0)
        money_5 = money_0.__floordiv__(currency_type_0)
        price_3 = price_0.__sub__(price_2)
        bool_1 = price_0.gte(price_1)
        money_6 = money_4.__sub__(money_4)
        money_7 = money_4.add(money_4)
        money_8 = money_7.round(int_1)
        bool_2 = none_money_0.is_equal(money_0)
        price_4 = some_price_0.convert(currency_0)
    except BaseException:
        pass

def test_case_79():
    try:
        float_0 = -238.94720140922774
        list_0 = [float_0, float_0, float_0]
        some_price_0 = module_0.SomePrice(*list_0)
        float_1 = some_price_0.as_float()
        none_money_0 = module_0.NoneMoney()
        str_0 = 'CurrencyType'
        int_0 = -1714
        currency_type_0 = module_1.CurrencyType.ALTERNATIVE
        decimal_0 = module_2.Decimal()
        money_0 = none_money_0.round(int_0)
        money_1 = none_money_0.subtract(money_0)
        int_1 = 2932
        currency_0 = module_1.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_1)
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_0 = some_money_0.gte(money_1)
        money_2 = some_money_0.with_ccy(currency_0)
        price_0 = some_price_0.abs()
        price_1 = some_price_0.negative()
        price_2 = some_price_0.subtract(price_0)
        bool_1 = price_1.gte(price_0)
        bool_2 = some_money_0.lte(money_2)
    except BaseException:
        pass

def test_case_80():
    try:
        float_0 = -238.94720140922774
        list_0 = [float_0, float_0, float_0]
        some_price_0 = module_0.SomePrice(*list_0)
        float_1 = some_price_0.as_float()
        none_money_0 = module_0.NoneMoney()
        str_0 = 'CurrencyType'
        int_0 = -1742
        currency_type_0 = module_1.CurrencyType.MONEY
        price_0 = some_price_0.round()
        bool_0 = some_price_0.lt(price_0)
        money_0 = none_money_0.divide(str_0)
        decimal_0 = module_2.Decimal()
        price_1 = some_price_0.add(price_0)
        bool_1 = money_0.as_boolean()
        bool_2 = money_0.gt(money_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        money_1 = some_money_0.add(money_0)
        price_2 = some_price_0.abs()
        price_3 = price_2.add(price_0)
        price_4 = some_price_0.subtract(price_1)
        bool_3 = money_1.__lt__(money_0)
        bool_4 = price_3.__eq__(bool_2)
        str_1 = ',Ue{AqEA4x@"'
        int_1 = -2962
        currency_0 = module_1.Currency(str_0, str_1, int_1, currency_type_0, decimal_0, int_0)
        bool_5 = price_2.gt(price_2)
        price_5 = some_price_0.abs()
        bool_6 = some_money_0.gt(money_0)
        money_2 = money_1.add(money_1)
        money_3 = money_2.subtract(money_1)
        var_0 = price_4.__round__(int_0)
        money_4 = some_money_0.convert(currency_0)
    except BaseException:
        pass

def test_case_81():
    try:
        float_0 = -238.94720140922774
        list_0 = [float_0, float_0, float_0]
        str_0 = 'd~-cdC]'
        none_money_0 = module_0.NoneMoney()
        str_1 = 'CurrencyType'
        int_0 = -1714
        currency_type_0 = module_1.CurrencyType.ALTERNATIVE
        decimal_0 = module_2.Decimal()
        money_0 = none_money_0.divide(str_0)
        money_1 = none_money_0.subtract(money_0)
        int_1 = 2932
        currency_0 = module_1.Currency(str_1, str_1, int_0, currency_type_0, decimal_0, int_1)
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_0 = some_money_0.gte(money_1)
        money_2 = some_money_0.with_ccy(currency_0)
        bool_1 = some_money_0.is_equal(money_2)
        money_3 = money_0.__floordiv__(currency_type_0)
        money_4 = money_2.__sub__(money_2)
        money_5 = money_2.add(money_2)
        money_6 = money_5.round(int_1)
        bool_2 = True
        money_7 = some_money_0.convert(currency_0, bool_2)
    except BaseException:
        pass

def test_case_82():
    try:
        float_0 = -238.94720140922774
        list_0 = [float_0, float_0, float_0]
        some_price_0 = module_0.SomePrice(*list_0)
        float_1 = some_price_0.as_float()
        none_money_0 = module_0.NoneMoney()
        str_0 = 'CurrencyType'
        int_0 = -1742
        currency_type_0 = module_1.CurrencyType.MONEY
        price_0 = some_price_0.round()
        bool_0 = some_price_0.lt(price_0)
        money_0 = none_money_0.divide(str_0)
        decimal_0 = module_2.Decimal()
        price_1 = some_price_0.positive()
        bool_1 = money_0.gt(money_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        money_1 = some_money_0.add(money_0)
        price_2 = price_1.add(price_0)
        price_3 = some_price_0.subtract(price_1)
        bool_2 = price_2.__eq__(bool_1)
        str_1 = ',Ue{AqEA4x@"'
        int_1 = -2962
        currency_0 = module_1.Currency(str_0, str_1, int_1, currency_type_0, decimal_0, int_0)
        bool_3 = price_1.gt(price_1)
        price_4 = some_price_0.abs()
        bool_4 = some_money_0.gt(money_0)
        money_2 = money_1.add(money_1)
        bool_5 = money_2.__lt__(money_2)
        money_3 = money_2.convert(currency_0)
    except BaseException:
        pass

def test_case_83():
    try:
        money_0 = module_0.Money()
        money_1 = money_0.__add__(money_0)
        money_2 = money_0.subtract(money_0)
    except BaseException:
        pass

def test_case_84():
    try:
        float_0 = -238.94720140922774
        list_0 = [float_0, float_0, float_0]
        some_price_0 = module_0.SomePrice(*list_0)
        float_1 = some_price_0.as_float()
        str_0 = 'd~-cdC]'
        none_money_0 = module_0.NoneMoney()
        str_1 = 'CurrencyType'
        int_0 = -1714
        currency_type_0 = module_1.CurrencyType.ALTERNATIVE
        decimal_0 = module_2.Decimal()
        money_0 = none_money_0.divide(str_0)
        money_1 = none_money_0.subtract(money_0)
        int_1 = 2932
        currency_0 = module_1.Currency(str_1, str_1, int_0, currency_type_0, decimal_0, int_1)
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_0 = some_money_0.gte(money_1)
        money_2 = some_money_0.with_ccy(currency_0)
        price_0 = some_price_0.negative()
        bool_1 = some_money_0.is_equal(money_2)
        bool_2 = price_0.__lt__(price_0)
        money_3 = some_money_0.with_ccy(currency_0)
        price_1 = price_0.__sub__(price_0)
        bool_3 = price_1.gte(price_0)
        money_4 = money_2.__sub__(money_2)
        str_2 = '}kR<HS'
        int_2 = -2654
        int_3 = -1235
        currency_1 = module_1.Currency(str_2, str_2, int_2, currency_type_0, decimal_0, int_3)
        price_2 = some_price_0.abs()
        bool_4 = some_money_0.lt(money_2)
    except BaseException:
        pass

def test_case_85():
    try:
        float_0 = -238.94720140922774
        list_0 = [float_0, float_0, float_0]
        some_price_0 = module_0.SomePrice(*list_0)
        float_1 = some_price_0.as_float()
        none_money_0 = module_0.NoneMoney()
        str_0 = 'CurrencyType'
        int_0 = -1742
        currency_type_0 = module_1.CurrencyType.MONEY
        price_0 = some_price_0.round()
        bool_0 = some_price_0.lt(price_0)
        money_0 = none_money_0.divide(str_0)
        decimal_0 = module_2.Decimal()
        price_1 = some_price_0.add(price_0)
        bool_1 = money_0.gt(money_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        money_1 = some_money_0.add(money_0)
        price_2 = some_price_0.abs()
        price_3 = some_price_0.subtract(price_1)
        bool_2 = money_1.__lt__(money_0)
        bool_3 = price_3.__eq__(bool_1)
        int_1 = -2962
        currency_0 = module_1.Currency(str_0, str_0, int_1, currency_type_0, decimal_0, int_0)
        money_2 = none_money_0.add(money_1)
        bool_4 = some_money_0.lte(money_2)
        price_4 = some_price_0.abs()
        bool_5 = money_2.__eq__(bool_4)
        bool_6 = some_money_0.gt(money_1)
        money_3 = money_1.add(money_1)
        money_4 = money_3.subtract(money_1)
        money_5 = money_2.add(money_3)
        money_6 = money_4.convert(currency_0)
    except BaseException:
        pass

def test_case_86():
    try:
        float_0 = -238.94720140922774
        list_0 = [float_0, float_0, float_0]
        some_price_0 = module_0.SomePrice(*list_0)
        float_1 = some_price_0.as_float()
        none_money_0 = module_0.NoneMoney()
        str_0 = 'CurrencyType'
        int_0 = -1742
        currency_type_0 = module_1.CurrencyType.MONEY
        price_0 = some_price_0.round()
        bool_0 = some_price_0.lt(price_0)
        money_0 = none_money_0.divide(str_0)
        decimal_0 = module_2.Decimal()
        price_1 = some_price_0.add(price_0)
        bool_1 = money_0.gt(money_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        money_1 = some_money_0.add(money_0)
        price_2 = price_1.positive()
        price_3 = price_2.add(price_0)
        price_4 = some_price_0.subtract(price_1)
        bool_2 = money_1.__lt__(money_0)
        bool_3 = price_3.__eq__(bool_1)
        str_1 = ',Ue{AqEA4x@"'
        int_1 = -2962
        currency_0 = module_1.Currency(str_0, str_1, int_1, currency_type_0, decimal_0, int_0)
        date_0 = None
        money_2 = some_money_0.with_dov(date_0)
        bool_4 = price_2.gt(price_2)
        price_5 = some_price_0.abs()
        int_2 = 3
        bool_5 = some_money_0.gt(money_0)
        money_3 = money_0.add(money_0)
        money_4 = some_money_0.round(int_2)
    except BaseException:
        pass

def test_case_87():
    try:
        var_0 = None
        money_0 = module_0.Money()
        money_1 = money_0.divide(var_0)
    except BaseException:
        pass

def test_case_88():
    try:
        float_0 = -238.94720140922774
        list_0 = [float_0, float_0, float_0]
        some_price_0 = module_0.SomePrice(*list_0)
        float_1 = some_price_0.as_float()
        none_money_0 = module_0.NoneMoney()
        str_0 = 'CurrencyType'
        currency_type_0 = module_1.CurrencyType.MONEY
        price_0 = some_price_0.round()
        bool_0 = some_price_0.lt(price_0)
        money_0 = none_money_0.divide(str_0)
        decimal_0 = module_2.Decimal()
        bool_1 = some_price_0.gt(price_0)
        bool_2 = money_0.gt(money_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        money_1 = some_money_0.add(money_0)
        price_1 = some_price_0.abs()
        price_2 = price_1.add(price_0)
        price_3 = some_price_0.subtract(price_2)
        money_2 = module_0.Money()
        bool_3 = money_2.__lt__(money_1)
        bool_4 = price_0.__eq__(money_1)
        int_0 = -2962
        int_1 = 2135
        currency_0 = module_1.Currency(str_0, str_0, int_1, currency_type_0, decimal_0, int_0)
        bool_5 = price_2.gt(price_3)
        price_4 = some_price_0.abs()
        str_1 = 'Trim the currency name'
        complex_0 = None
        tuple_0 = (money_1, price_0, str_1, complex_0)
        money_3 = none_money_0.floor_divide(tuple_0)
        bool_6 = some_money_0.gt(money_3)
        money_4 = money_3.add(money_3)
        money_5 = money_1.subtract(money_2)
    except BaseException:
        pass

def test_case_89():
    try:
        float_0 = -238.94720140922774
        list_0 = [float_0, float_0, float_0]
        some_price_0 = module_0.SomePrice(*list_0)
        none_money_0 = module_0.NoneMoney()
        str_0 = 'CurrencyType'
        int_0 = -1742
        currency_type_0 = module_1.CurrencyType.MONEY
        price_0 = some_price_0.round()
        bool_0 = some_price_0.lt(price_0)
        money_0 = none_money_0.divide(str_0)
        decimal_0 = module_2.Decimal()
        price_1 = some_price_0.add(price_0)
        bool_1 = some_price_0.gt(price_1)
        some_money_0 = module_0.SomeMoney(*list_0)
        money_1 = some_money_0.add(money_0)
        price_2 = some_price_0.abs()
        price_3 = price_2.add(price_0)
        price_4 = some_price_0.subtract(price_1)
        bool_2 = money_1.__lt__(money_0)
        bool_3 = price_3.__eq__(bool_1)
        str_1 = ',Ue{AqEA4x@"'
        int_1 = -2962
        currency_0 = module_1.Currency(str_0, str_1, int_1, currency_type_0, decimal_0, int_0)
        bool_4 = price_2.gt(price_2)
        price_5 = some_price_0.abs()
        bool_5 = some_money_0.gt(money_0)
        int_2 = some_money_0.as_integer()
        money_2 = money_1.add(money_1)
        money_3 = money_2.subtract(money_1)
        price_6 = some_price_0.convert(currency_0)
    except BaseException:
        pass

def test_case_90():
    try:
        float_0 = -238.94720140922774
        list_0 = [float_0, float_0, float_0]
        some_price_0 = module_0.SomePrice(*list_0)
        float_1 = some_price_0.as_float()
        none_money_0 = module_0.NoneMoney()
        int_0 = -1742
        currency_type_0 = module_1.CurrencyType.ALTERNATIVE
        price_0 = some_price_0.round()
        bool_0 = some_price_0.lt(price_0)
        money_0 = none_money_0.abs()
        decimal_0 = module_2.Decimal()
        price_1 = some_price_0.add(price_0)
        bool_1 = money_0.gt(money_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        money_1 = some_money_0.add(money_0)
        price_2 = some_price_0.abs()
        price_3 = price_0.add(price_1)
        bool_2 = money_1.__lt__(money_0)
        bool_3 = price_3.__eq__(bool_1)
        int_1 = -2962
        str_0 = None
        currency_0 = module_1.Currency(str_0, str_0, int_1, currency_type_0, decimal_0, int_0)
        price_4 = price_3.with_ccy(currency_0)
        bool_4 = price_4.gt(price_0)
    except BaseException:
        pass

def test_case_91():
    try:
        price_0 = module_0.Price()
        none_price_0 = module_0.NonePrice()
        price_1 = none_price_0.subtract(price_0)
        some_money_0 = module_0.SomeMoney()
    except BaseException:
        pass

def test_case_92():
    try:
        float_0 = -238.94720140922774
        list_0 = [float_0, float_0, float_0]
        none_money_0 = module_0.NoneMoney()
        str_0 = 'CurrencyType'
        int_0 = -1742
        currency_type_0 = module_1.CurrencyType.MONEY
        money_0 = none_money_0.abs()
        decimal_0 = module_2.Decimal()
        bool_0 = money_0.gt(money_0)
        some_money_0 = module_0.SomeMoney(*list_0)
        money_1 = some_money_0.add(money_0)
        bool_1 = money_1.__lt__(money_0)
        str_1 = ',Ue{AqEA4x@"'
        int_1 = -2962
        currency_0 = module_1.Currency(str_0, str_1, int_1, currency_type_0, decimal_0, int_0)
        money_2 = module_0.Money()
        money_3 = money_2.add(money_0)
    except BaseException:
        pass

def test_case_93():
    try:
        float_0 = -238.94720140922774
        list_0 = [float_0, float_0, float_0]
        some_price_0 = module_0.SomePrice(*list_0)
        float_1 = some_price_0.as_float()
        none_money_0 = module_0.NoneMoney()
        str_0 = 'CurrencyType'
        int_0 = -1742
        currency_type_0 = module_1.CurrencyType.MONEY
        price_0 = some_price_0.round()
        bool_0 = some_price_0.lt(price_0)
        money_0 = none_money_0.abs()
        price_1 = price_0.add(price_0)
        decimal_0 = module_2.Decimal()
        price_2 = some_price_0.add(price_0)
        bool_1 = money_0.gt(money_0)
        int_1 = 2933
        some_money_0 = module_0.SomeMoney(*list_0)
        money_1 = some_money_0.add(money_0)
        date_0 = None
        none_price_0 = module_0.NonePrice()
        price_3 = none_price_0.with_dov(date_0)
        price_4 = some_price_0.abs()
        price_5 = price_4.add(price_0)
        price_6 = some_price_0.subtract(price_2)
        bool_2 = money_1.__lt__(money_0)
        bool_3 = price_5.__eq__(bool_1)
        str_1 = ',Ue{AqEA4x@"'
        currency_0 = module_1.Currency(str_0, str_1, int_1, currency_type_0, decimal_0, int_0)
        bool_4 = price_4.gt(price_4)
        bool_5 = some_money_0.lte(money_1)
        price_7 = some_price_0.abs()
        money_2 = money_1.add(money_1)
        money_3 = money_0.subtract(money_1)
        price_8 = some_price_0.convert(currency_0, bool_4)
    except BaseException:
        pass

def test_case_94():
    try:
        float_0 = -238.94720140922774
        list_0 = [float_0, float_0, float_0]
        some_price_0 = module_0.SomePrice(*list_0)
        float_1 = some_price_0.as_float()
        none_money_0 = module_0.NoneMoney()
        str_0 = 'CurrencyType'
        currency_type_0 = module_1.CurrencyType.MONEY
        price_0 = some_price_0.round()
        bool_0 = some_price_0.lt(price_0)
        money_0 = none_money_0.divide(str_0)
        decimal_0 = module_2.Decimal()
        price_1 = some_price_0.add(price_0)
        list_1 = [currency_type_0, list_0, currency_type_0]
        some_price_1 = module_0.SomePrice(*list_1)
        price_2 = some_price_1.add(price_0)
    except BaseException:
        pass

def test_case_95():
    try:
        price_0 = module_0.Price()
        bool_0 = price_0.gt(price_0)
        price_1 = price_0.__abs__()
        list_0 = [price_0, price_0, bool_0]
        none_price_0 = module_0.NonePrice(*list_0)
    except BaseException:
        pass

def test_case_96():
    try:
        list_0 = []
        dict_0 = {}
        price_0 = module_0.Price(*list_0, **dict_0)
        price_1 = price_0.add(price_0)
    except BaseException:
        pass

def test_case_97():
    try:
        money_0 = module_0.Money()
        money_1 = money_0.__sub__(money_0)
        float_0 = money_0.as_float()
    except BaseException:
        pass

def test_case_98():
    try:
        float_0 = -238.94720140922774
        list_0 = [float_0, float_0, float_0]
        some_price_0 = module_0.SomePrice(*list_0)
        float_1 = some_price_0.as_float()
        none_money_0 = module_0.NoneMoney()
        dict_0 = {}
        price_0 = module_0.Price()
        money_0 = price_0.times(dict_0)
    except BaseException:
        pass

def test_case_99():
    try:
        float_0 = -238.94720140922774
        list_0 = [float_0, float_0, float_0]
        some_price_0 = module_0.SomePrice(*list_0)
        float_1 = some_price_0.as_float()
        none_money_0 = module_0.NoneMoney()
        str_0 = 'CurrencyType'
        int_0 = -1742
        currency_type_0 = module_1.CurrencyType.MONEY
        price_0 = some_price_0.round()
        bool_0 = some_price_0.lt(price_0)
        money_0 = none_money_0.divide(str_0)
        decimal_0 = module_2.Decimal()
        price_1 = some_price_0.add(price_0)
        bool_1 = some_price_0.gt(price_1)
        bool_2 = money_0.gt(money_0)
        decimal_1 = module_2.Decimal()
        price_2 = some_price_0.with_qty(decimal_1)
        some_money_0 = module_0.SomeMoney(*list_0)
        money_1 = some_money_0.add(money_0)
        price_3 = some_price_0.abs()
        price_4 = price_3.add(price_0)
        price_5 = some_price_0.subtract(price_1)
        bool_3 = money_1.__lt__(money_0)
        bool_4 = price_4.__eq__(bool_2)
        str_1 = ',Ue{AqEA4x@"'
        int_1 = -2962
        money_2 = some_money_0.negative()
        currency_0 = module_1.Currency(str_0, str_1, int_1, currency_type_0, decimal_0, int_0)
        money_3 = none_money_0.add(money_1)
        bool_5 = some_money_0.lte(money_0)
        price_6 = some_price_0.abs()
        bool_6 = some_money_0.gt(money_3)
        money_4 = some_money_0.with_ccy(currency_0)
        money_5 = money_2.add(money_4)
    except BaseException:
        pass

def test_case_100():
    try:
        price_0 = module_0.Price()
        float_0 = price_0.as_float()
    except BaseException:
        pass

def test_case_101():
    try:
        money_0 = module_0.Money()
        float_0 = money_0.__float__()
        money_1 = money_0.abs()
    except BaseException:
        pass

def test_case_102():
    try:
        money_0 = module_0.Money()
        float_0 = money_0.__float__()
        money_1 = money_0.positive()
    except BaseException:
        pass

def test_case_103():
    try:
        price_0 = module_0.Price()
        price_1 = price_0.abs()
    except BaseException:
        pass

def test_case_104():
    try:
        money_0 = module_0.Money()
        bool_0 = money_0.lt(money_0)
        money_1 = module_0.Money()
        some_price_0 = module_0.SomePrice()
    except BaseException:
        pass

def test_case_105():
    try:
        money_0 = module_0.Money()
        int_0 = money_0.as_integer()
    except BaseException:
        pass

def test_case_106():
    try:
        money_0 = module_0.Money()
        money_1 = money_0.__pos__()
        str_0 = '~"Ic,w:],Gr#WJo'
        list_0 = [str_0, money_1, str_0, money_1]
        dict_0 = None
        decimal_0 = module_2.Decimal(*list_0, **dict_0)
    except BaseException:
        pass

def test_case_107():
    try:
        float_0 = -238.94720140922774
        list_0 = [float_0, float_0, float_0]
        some_price_0 = module_0.SomePrice(*list_0)
        float_1 = some_price_0.as_float()
        none_money_0 = module_0.NoneMoney()
        str_0 = 'p~@skOp4(\x0bk6g!T'
        str_1 = 'QC>We,Pm<=C]`T '
        int_0 = 3256
        currency_type_0 = module_1.CurrencyType.MONEY
        decimal_0 = module_2.Decimal()
        int_1 = 1203
        currency_0 = module_1.Currency(str_0, str_1, int_0, currency_type_0, decimal_0, int_1)
        price_0 = some_price_0.with_ccy(currency_0)
        bool_0 = some_price_0.lt(price_0)
    except BaseException:
        pass

def test_case_108():
    try:
        list_0 = []
        dict_0 = {}
        price_0 = module_0.Price(*list_0, **dict_0)
        price_1 = price_0.__pos__()
        price_2 = price_0.abs()
    except BaseException:
        pass

def test_case_109():
    try:
        var_0 = None
        dict_0 = {}
        money_0 = module_0.Money(**dict_0)
        money_1 = money_0.multiply(var_0)
    except BaseException:
        pass