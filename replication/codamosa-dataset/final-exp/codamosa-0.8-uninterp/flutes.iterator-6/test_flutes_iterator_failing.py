# Automatically generated by Pynguin.
import flutes.iterator as module_0

def test_case_0():
    try:
        bytes_0 = None
        str_0 = 'edKSz_ur{dP_aCbBBW'
        dict_0 = {str_0: bytes_0, str_0: bytes_0}
        list_0 = [bytes_0, bytes_0]
        var_0 = module_0.scanr(bytes_0, dict_0, *list_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = b'F\xf0\x8bO\xb1\xd0'
        str_0 = ')N^z\\_Uqs|*amS%6?JB'
        lazy_list_0 = module_0.LazyList(str_0)
        list_0 = [bytes_0]
        var_0 = module_0.scanr(bytes_0, lazy_list_0, *list_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b'\xba\xc4s5\x03\xc4\xba\x13\x8c\x04\xda\xe2-\x9e6\x1c'
        lazy_list_0 = module_0.LazyList(bytes_0)
        var_0 = lazy_list_0.__len__()
    except BaseException:
        pass

def test_case_3():
    try:
        range_0 = module_0.Range()
    except BaseException:
        pass

def test_case_4():
    try:
        int_0 = 2
        var_0 = lambda item: item * int_0
        int_1 = 4
        var_1 = range(int_1)
        var_2 = list(var_1)
        map_list_0 = module_0.MapList(var_0, var_2)
        int_2 = 1
        var_3 = slice(int_2, int_1)
        var_4 = map_list_0[var_3]
    except BaseException:
        pass

def test_case_5():
    try:
        int_0 = 862
        list_0 = [int_0, int_0, int_0]
        range_0 = module_0.Range(*list_0)
        iterator_0 = range_0.__iter__()
        list_1 = [int_0]
        map_list_0 = module_0.MapList(iterator_0, list_1)
        iterator_1 = map_list_0.__iter__()
        var_0 = map_list_0.__getitem__(range_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = '7^9#$<nmN]|jtpF'
        list_0 = [str_0, str_0, str_0, str_0]
        range_0 = module_0.Range(*list_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = '7^9#$<nmN]|jtpF'
        str_1 = 'a(kxA\n~?$:Fp'
        lazy_list_0 = module_0.LazyList(str_0)
        var_0 = lazy_list_0.__getitem__(str_1)
    except BaseException:
        pass

def test_case_8():
    try:
        float_0 = -149.812717
        str_0 = '8IISG'
        lazy_list_0 = module_0.LazyList(str_0)
        var_0 = lazy_list_0.__iter__()
        var_1 = lazy_list_0.__getitem__(float_0)
    except BaseException:
        pass

def test_case_9():
    try:
        complex_0 = None
        str_0 = '_'
        lazy_list_0 = module_0.LazyList(str_0)
        var_0 = lazy_list_0.__getitem__(complex_0)
    except BaseException:
        pass

def test_case_10():
    try:
        set_0 = set()
        str_0 = '%=]mK\x0ciTy\t?.c%7(TBfq'
        map_list_0 = module_0.MapList(set_0, str_0)
        iterator_0 = map_list_0.__iter__()
        lazy_list_0 = module_0.LazyList(iterator_0)
        sequence_0 = None
        map_list_1 = module_0.MapList(lazy_list_0, sequence_0)
        bytes_0 = b'\x9e\x96}dRx\xdc)\x0b+k:w$\x1ad>x\xea\t'
        var_0 = module_0.scanr(map_list_1, bytes_0)
    except BaseException:
        pass

def test_case_11():
    try:
        int_0 = 862
        list_0 = [int_0, int_0, int_0]
        range_0 = module_0.Range(*list_0)
        iterator_0 = range_0.__iter__()
        list_1 = [int_0]
        map_list_0 = module_0.MapList(iterator_0, list_1)
        iterator_1 = map_list_0.__iter__()
        float_0 = 0.1
        list_2 = [float_0, float_0]
        dict_0 = {int_0: int_0}
        var_0 = module_0.scanr(list_2, dict_0)
        str_0 = 'YrmMfP('
        lazy_list_0 = module_0.LazyList(str_0)
        int_1 = range_0.__next__()
    except BaseException:
        pass

def test_case_12():
    try:
        int_0 = 388
        str_0 = 'I<\tU4o?}@+z<;+s$R'
        iterator_0 = module_0.drop_until(int_0, str_0)
        iterator_1 = module_0.split_by(iterator_0)
        lazy_list_0 = module_0.LazyList(iterator_1)
        var_0 = lazy_list_0.__getitem__(int_0)
    except BaseException:
        pass

def test_case_13():
    try:
        dict_0 = {}
        list_0 = [dict_0, dict_0]
        callable_0 = None
        bool_0 = False
        iterable_0 = None
        iterator_0 = module_0.split_by(iterable_0)
        int_0 = None
        tuple_0 = (int_0,)
        tuple_1 = (bool_0, iterator_0, tuple_0)
        map_list_0 = module_0.MapList(callable_0, tuple_1)
        var_0 = module_0.scanr(list_0, map_list_0)
    except BaseException:
        pass

def test_case_14():
    try:
        iterator_0 = None
        int_0 = 4215
        dict_0 = {}
        iterator_1 = module_0.take(int_0, dict_0)
        lazy_list_0 = module_0.LazyList(iterator_1)
        var_0 = lazy_list_0.__getitem__(iterator_0)
    except BaseException:
        pass

def test_case_15():
    try:
        int_0 = -2761
        str_0 = 'WJ\x0bx^{%u(\t5tBOV_6n'
        list_0 = [int_0, int_0]
        range_0 = module_0.Range(*list_0)
        var_0 = range_0.__getitem__(str_0)
    except BaseException:
        pass

def test_case_16():
    try:
        int_0 = 3
        int_1 = 10
        var_0 = range(int_1)
        iterator_0 = module_0.chunk(int_0, var_0)
        var_1 = list(iterator_0)
        int_2 = 0
        int_3 = 10
        var_2 = range(int_3)
        iterator_1 = module_0.chunk(int_2, var_2)
        var_3 = list(iterator_1)
    except BaseException:
        pass

def test_case_17():
    try:
        int_0 = 3
        int_1 = 10
        var_0 = range(int_1)
        iterator_0 = module_0.take(int_0, var_0)
        var_1 = list(iterator_0)
        var_2 = range(int_0)
        var_3 = list(var_2)
        int_2 = 0
        var_4 = range(int_2)
        iterator_1 = module_0.take(int_0, var_4)
        var_5 = list(iterator_1)
        int_3 = -1
        int_4 = 10
        var_6 = range(int_4)
        iterator_2 = module_0.take(int_3, var_6)
        var_7 = list(iterator_2)
    except BaseException:
        pass

def test_case_18():
    try:
        str_0 = 'a'
        str_1 = 'b'
        str_2 = 'c'
        str_3 = 'd'
        str_4 = 'e'
        int_0 = 0
        iterator_0 = module_0.drop(int_0, str_3)
        var_0 = list(iterator_0)
        str_5 = [str_0, str_1, str_2, str_3, str_4]
        iterator_1 = module_0.drop(int_0, str_5)
        var_1 = list(iterator_1)
        int_1 = 6
        iterator_2 = module_0.drop(int_1, str_5)
        var_2 = list(iterator_2)
        int_2 = -1513
        int_3 = -3313
        int_4 = 4
        int_5 = [int_2, int_2, int_3, int_4, int_1, int_1]
        iterator_3 = module_0.drop(int_5, int_5)
        var_3 = list(iterator_3)
    except BaseException:
        pass

def test_case_19():
    try:
        int_0 = 3
        str_0 = 'a'
        str_1 = 'b'
        str_2 = 'c'
        str_3 = 'd'
        str_4 = 'e'
        str_5 = [str_0, str_1, str_2, str_3, str_4]
        iterator_0 = module_0.drop(int_0, str_5)
        var_0 = list(iterator_0)
        int_1 = 0
        str_6 = [str_0, str_1, str_2, str_3, str_4]
        iterator_1 = module_0.drop(int_1, str_6)
        var_1 = list(iterator_1)
        int_2 = 5
        str_7 = [str_0, str_1, str_2, str_3, str_4]
        iterator_2 = module_0.drop(int_2, str_7)
        var_2 = list(iterator_2)
        str_8 = [str_0, str_1, str_2, str_3, str_4]
        iterator_3 = module_0.drop(int_0, str_8)
        var_3 = list(iterator_3)
        int_3 = 7
        int_4 = 8
        int_5 = 4
        int_6 = [int_0, int_3, int_4, int_5, int_2, int_4]
        iterator_4 = module_0.drop(int_0, int_6)
        var_4 = list(iterator_4)
        int_7 = -1
        str_9 = [str_0, str_1, str_2, str_3, str_4]
        iterator_5 = module_0.drop(int_7, str_9)
        var_5 = list(iterator_5)
    except BaseException:
        pass

def test_case_20():
    try:
        int_0 = -29
        var_0 = lambda x: x == int_0
        var_1 = []
        iterator_0 = module_0.drop_until(var_0, var_1)
        var_2 = list(iterator_0)
        bool_0 = False
        var_3 = lambda x: x == iterator_0
        var_4 = [bool_0, int_0, int_0, int_0]
        iterator_1 = module_0.drop_until(var_3, var_4)
        var_5 = list(iterator_1)
    except BaseException:
        pass

def test_case_21():
    try:
        int_0 = 3
        int_1 = 10
        var_0 = range(int_1)
        iterator_0 = module_0.take(int_0, var_0)
        var_1 = list(iterator_0)
        var_2 = range(int_0)
        var_3 = list(var_2)
        iterator_1 = module_0.take(int_0, int_1)
        var_4 = list(iterator_1)
    except BaseException:
        pass

def test_case_22():
    try:
        int_0 = 3
        var_0 = range(int_0)
        iterator_0 = module_0.chunk(int_0, var_0)
        var_1 = list(iterator_0)
        range_0 = module_0.Range()
    except BaseException:
        pass

def test_case_23():
    try:
        int_0 = 3
        str_0 = 'a'
        str_1 = 'b'
        str_2 = 'c'
        str_3 = 'd'
        str_4 = 'e'
        str_5 = [str_0, str_1, str_2, str_3, str_4]
        iterator_0 = module_0.drop(int_0, str_5)
        var_0 = list(iterator_0)
        int_1 = 0
        str_6 = [str_0, str_1, str_2, str_3, str_4]
        iterator_1 = module_0.drop(int_1, str_6)
        var_1 = list(iterator_1)
        int_2 = 5
        str_7 = [str_0, str_1, str_2, str_3, str_4]
        iterator_2 = module_0.drop(int_2, str_7)
        var_2 = list(iterator_2)
        int_3 = 6
        str_8 = [str_0, str_1, str_2, str_3, str_4]
        iterator_3 = module_0.drop(int_3, str_8)
        var_3 = list(iterator_3)
        iterator_4 = module_0.drop(int_0, int_1)
        var_4 = list(iterator_4)
    except BaseException:
        pass

def test_case_24():
    try:
        bool_0 = True
        str_0 = '.'
        iterator_0 = module_0.split_by(str_0, bool_0, separator=str_0)
        var_0 = list(iterator_0)
        int_0 = 45
        iterator_1 = module_0.split_by(int_0, criterion=int_0)
        var_1 = list(iterator_1)
    except BaseException:
        pass

def test_case_25():
    try:
        bool_0 = False
        str_0 = 'a'
        iterator_0 = module_0.split_by(str_0, bool_0, separator=str_0)
        var_0 = list(iterator_0)
        dict_0 = {iterator_0: bool_0, bool_0: iterator_0}
        lazy_list_0 = module_0.LazyList(dict_0)
        var_1 = lazy_list_0.__getitem__(iterator_0)
    except BaseException:
        pass

def test_case_26():
    try:
        int_0 = 3
        int_1 = [int_0, int_0, int_0, int_0]
        lazy_list_0 = module_0.LazyList(int_1)
        var_0 = list(lazy_list_0)
        str_0 = '\\Z|1U4'
        var_1 = lazy_list_0.__getitem__(str_0)
    except BaseException:
        pass

def test_case_27():
    try:
        int_0 = 3041
        iterable_0 = None
        iterator_0 = module_0.chunk(int_0, iterable_0)
        int_1 = [int_0, int_0, int_0]
        lazy_list_0 = module_0.LazyList(int_1)
        var_0 = lazy_list_0.__iter__()
        var_1 = list(var_0)
        float_0 = -1.0050829860448602
        map_list_0 = module_0.MapList(int_0, float_0)
        list_0 = [iterator_0, var_1, int_0, int_1]
        list_1 = [map_list_0, list_0, var_1]
        range_0 = module_0.Range(*list_1)
    except BaseException:
        pass