# Automatically generated by Pynguin.
import httpie.cli.dicts as module_0
import pathlib as module_1
import httpie.sessions as module_2

def test_case_0():
    try:
        iterable_0 = None
        str_0 = 'hw/_&;%R'
        request_headers_dict_0 = module_0.RequestHeadersDict()
        int_0 = 883
        str_1 = 'Y7u?'
        dict_0 = {str_0: int_0, str_0: int_0, str_0: iterable_0, str_1: str_1}
        path_0 = module_1.Path(**dict_0)
        session_0 = module_2.get_httpie_session(path_0, str_0, str_1, str_0)
        var_0 = session_0.update_headers(request_headers_dict_0)
        session_1 = module_2.Session(str_0)
        set_0 = {str_0, str_0, str_0}
        list_0 = [set_0, set_0, str_0, str_0]
        path_1 = module_1.Path(*list_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'E/T'
        dict_0 = None
        dict_1 = {str_0: str_0, str_0: str_0, str_0: str_0, dict_0: dict_0}
        dict_2 = {str_0: dict_1}
        request_headers_dict_0 = module_0.RequestHeadersDict(**dict_2)
        session_0 = module_2.Session(str_0)
        var_0 = session_0.update_headers(request_headers_dict_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '%@;x/;d>RSqEz$rZ'
        bytes_0 = None
        str_1 = 'FILE'
        str_2 = 'm9hYF"3_\nuaAzC&,Q~/H'
        dict_0 = {str_0: bytes_0, str_1: bytes_0, str_1: str_1, str_2: str_0}
        request_headers_dict_0 = module_0.RequestHeadersDict(**dict_0)
        path_0 = module_1.Path()
        str_3 = 'nzxCx":cL'
        session_0 = module_2.get_httpie_session(path_0, str_3, str_3, str_3)
        var_0 = session_0.update_headers(request_headers_dict_0)
        str_4 = 'byt\rs;d-'
        str_5 = 'r3d'
        str_6 = 'verbase'
        dict_1 = {str_4: str_4, str_4: str_4, str_5: str_4, str_6: str_4}
        request_headers_dict_1 = module_0.RequestHeadersDict(**dict_1)
        path_1 = module_1.Path()
        str_7 = "L5'"
        str_8 = '[m+'
        session_1 = module_2.get_httpie_session(path_1, str_7, str_6, str_8)
        var_1 = session_1.update_headers(request_headers_dict_1)
        var_2 = session_1.update_headers(request_headers_dict_1)
        var_3 = session_1.update_headers(request_headers_dict_1)
        request_headers_dict_2 = module_0.RequestHeadersDict()
        list_0 = []
        var_4 = path_1.chmod(list_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'Host'
        str_1 = 'example.com'
        str_2 = (str_0, str_1)
        str_3 = 'User-Agent'
        str_4 = 'HTTPie/1.0.2'
        str_5 = (str_3, str_4)
        str_6 = 'Accept-Encoding'
        str_7 = 'gzip, deflate'
        str_8 = (str_6, str_7)
        str_9 = 'Accept'
        str_10 = '*/*'
        str_11 = (str_9, str_10)
        str_12 = 'Content-Length'
        str_13 = '18'
        str_14 = (str_12, str_13)
        str_15 = 'Content-Type'
        str_16 = (str_15, str_10)
        str_17 = 'If-Modified-Since'
        str_18 = 'Mon, 27 Jul 2009 01:15:26 GMT'
        str_19 = (str_17, str_18)
        str_20 = 'Cookie'
        str_21 = 'name=value; name_two=value_two'
        str_22 = (str_20, str_21)
        str_23 = [str_2, str_5, str_8, str_11, str_11, str_14, str_16, str_19, str_22]
        request_headers_dict_0 = module_0.RequestHeadersDict(str_23)
        str_24 = '/tmp/foo'
        session_0 = module_2.Session(str_24)
        var_0 = session_0.update_headers(request_headers_dict_0)
        var_1 = session_0[str_2]
    except BaseException:
        pass