# Automatically generated by Pynguin.
import httpie.context as module_0
import httpie.output.formatters.colors as module_1
import pygments.formatters.terminal256 as module_2

def test_case_0():
    try:
        environment_0 = module_0.Environment()
        color_formatter_0 = module_1.ColorFormatter(environment_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'aplic\x0btion/xhtml+x_l'
        str_1 = '{}'
        optional_0 = module_1.get_lexer(str_0, str_1)
        bool_0 = True
        terminal256_formatter_0 = module_2.Terminal256Formatter()
        optional_1 = module_1.get_lexer(str_0, bool_0, terminal256_formatter_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '{\n  "id": 1,\n  "name": "A green door",\n  "price": 12.50,\n  "tags": ["home", "green"]\n}'
        str_1 = 'appli1a_Oion/jsoU'
        bool_0 = True
        optional_0 = module_1.get_lexer(str_1, bool_0, str_0)
        str_2 = 'json'
        optional_1 = module_1.get_lexer(str_2)
    except BaseException:
        pass

def test_case_3():
    try:
        environment_0 = module_0.Environment()
        str_0 = 'format_options'
        terminal256_formatter_0 = module_2.Terminal256Formatter()
        dict_0 = {str_0: terminal256_formatter_0, str_0: terminal256_formatter_0, str_0: str_0}
        float_0 = 1895.599292
        color_formatter_0 = module_1.ColorFormatter(environment_0, dict_0, float_0, **dict_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'application/json'
        solarized256_style_0 = module_1.Solarized256Style()
        str_1 = '_o{/</Km\x0b '
        optional_0 = module_1.get_lexer(str_0, str_1)
        optional_1 = module_1.get_lexer(str_1)
        environment_0 = module_0.Environment()
        str_2 = 'format_options'
        terminal256_formatter_0 = module_2.Terminal256Formatter()
        dict_0 = {str_2: terminal256_formatter_0, str_0: terminal256_formatter_0}
        color_formatter_0 = module_1.ColorFormatter(environment_0, **dict_0)
        str_3 = '--session-read-only'
        type_0 = color_formatter_0.get_style_class(str_3)
        simplified_h_t_t_p_lexer_0 = module_1.SimplifiedHTTPLexer()
        str_4 = '1czrb1sm6 By'
        set_0 = set()
        optional_2 = module_1.get_lexer(str_4, set_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'application/json'
        str_1 = '_o{/</Km\x0b '
        optional_0 = module_1.get_lexer(str_1)
        optional_1 = module_1.get_lexer(str_1)
        environment_0 = module_0.Environment()
        str_2 = 'format_options'
        dict_0 = {str_2: str_2}
        color_formatter_0 = module_1.ColorFormatter(environment_0, **dict_0)
        str_3 = color_formatter_0.format_headers(str_0)
        solarized256_style_0 = module_1.Solarized256Style()
        terminal256_formatter_0 = module_2.Terminal256Formatter()
        dict_1 = {str_2: terminal256_formatter_0, str_0: terminal256_formatter_0}
        float_0 = 1895.599292
        bytes_0 = b'T\x0c\x1aEjplU\x12V\x1a*'
        optional_2 = module_1.get_lexer(str_1, bytes_0)
        color_formatter_1 = module_1.ColorFormatter(environment_0, dict_1, float_0, **dict_1)
    except BaseException:
        pass