# Automatically generated by Pynguin.
import ansible.template.native_helpers as module_0

def test_case_0():
    try:
        dict_0 = {}
        str_0 = '`\\E_6*awu\t;\\!H$O'
        var_0 = module_0.ansible_native_concat(str_0)
        var_1 = module_0.ansible_native_concat(dict_0)
        var_2 = module_0.ansible_native_concat(dict_0)
        list_0 = [dict_0, dict_0, var_2, var_2]
        var_3 = module_0.ansible_native_concat(list_0)
        var_4 = module_0.ansible_native_concat(dict_0)
        str_1 = ' Y'
        var_5 = module_0.ansible_native_concat(str_1)
        str_2 = None
        var_6 = module_0.ansible_native_concat(str_2)
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = b'\xcbQH\xcc\t\x98'
        str_0 = ''
        dict_0 = {bytes_0: str_0, str_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
        var_0 = module_0.ansible_native_concat(dict_0)
        dict_1 = {str_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, str_0: bytes_0}
        set_0 = {bytes_0, bytes_0, str_0}
        complex_0 = None
        tuple_0 = (complex_0, complex_0)
        tuple_1 = (dict_1, bytes_0, complex_0, tuple_0)
        var_1 = module_0.ansible_native_concat(tuple_1)
        var_2 = module_0.ansible_native_concat(set_0)
        var_3 = module_0.ansible_native_concat(dict_1)
        var_4 = module_0.ansible_native_concat(dict_1)
        set_1 = {var_3, bytes_0, var_3}
        bytes_1 = b'-\x8e E\xcc\xb7\x0f9\x1ca/\xbf\x06['
        var_5 = module_0.ansible_native_concat(bytes_1)
        var_6 = module_0.ansible_native_concat(dict_1)
        tuple_2 = (str_0,)
        set_2 = set()
        var_7 = module_0.ansible_native_concat(set_2)
        var_8 = module_0.ansible_native_concat(tuple_2)
        var_9 = module_0.ansible_native_concat(set_1)
        var_10 = module_0.ansible_native_concat(set_2)
        int_0 = -1886
        var_11 = module_0.ansible_native_concat(int_0)
    except BaseException:
        pass