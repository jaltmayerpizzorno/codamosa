# Automatically generated by Pynguin.
import ansible.plugins.inventory.toml as module_0

def test_case_0():
    try:
        dict_0 = {}
        var_0 = module_0.toml_dumps(dict_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = b'pflSYQ\xc8\xa7\x01\xb61\r'
        dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
        inventory_module_0 = module_0.InventoryModule()
        var_0 = inventory_module_0.verify_file(dict_0)
        list_0 = []
        var_1 = module_0.convert_yaml_objects_to_native(list_0)
        inventory_module_1 = module_0.InventoryModule()
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = "4}^ZWOIW'"
        var_0 = module_0.convert_yaml_objects_to_native(str_0)
        float_0 = 513.8507214212602
        inventory_module_0 = module_0.InventoryModule()
        var_1 = inventory_module_0.parse(str_0, float_0, float_0)
    except BaseException:
        pass

def test_case_3():
    try:
        inventory_module_0 = module_0.InventoryModule()
        int_0 = None
        var_0 = inventory_module_0.parse(inventory_module_0, int_0, inventory_module_0)
    except BaseException:
        pass

def test_case_4():
    try:
        inventory_module_0 = module_0.InventoryModule()
        tuple_0 = ()
        list_0 = [tuple_0, inventory_module_0, tuple_0, tuple_0]
        inventory_module_1 = module_0.InventoryModule()
        float_0 = -912.474
        var_0 = module_0.convert_yaml_objects_to_native(float_0)
        dict_0 = {inventory_module_0: tuple_0}
        var_1 = module_0.convert_yaml_objects_to_native(dict_0)
        var_2 = inventory_module_0.verify_file(list_0)
        set_0 = set()
        list_1 = [set_0, dict_0]
        var_3 = module_0.convert_yaml_objects_to_native(list_1)
        bytes_0 = b'\xae\x11jbJ\x91\xfa\x1b\x9a\x91\xf8\xc6\xd7g'
        inventory_module_2 = module_0.InventoryModule()
        inventory_module_3 = module_0.InventoryModule()
        var_4 = inventory_module_3.parse(set_0, float_0, bytes_0)
    except BaseException:
        pass