# Automatically generated by Pynguin.
import ansible.utils._junit_xml as module_0
import datetime as module_1

def test_case_0():
    try:
        str_0 = 'Y>}.aCr:'
        test_suite_0 = module_0.TestSuite(str_0, str_0, str_0, str_0, str_0)
        element_0 = test_suite_0.get_xml_element()
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '3>#oG?LQ$V_23T.'
        test_error_0 = module_0.TestError()
        dict_0 = {}
        test_suite_0 = module_0.TestSuite(str_0, str_0, dict_0)
        element_0 = test_suite_0.get_xml_element()
        dict_1 = {}
        tuple_0 = (dict_0,)
        list_0 = [test_error_0]
        str_1 = 'show'
        test_failure_0 = module_0.TestFailure(str_1)
        test_failure_1 = module_0.TestFailure()
        list_1 = [test_failure_0, test_failure_1, test_failure_1]
        test_case_0 = module_0.TestCase(str_0, dict_1, str_0, tuple_0, list_0, list_1, str_1)
        element_1 = test_case_0.get_xml_element()
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '3>#oG?LQ$V_23T.'
        test_error_0 = module_0.TestError()
        list_0 = [test_error_0, test_error_0, test_error_0]
        dict_0 = {}
        test_suite_0 = module_0.TestSuite(str_0, str_0, dict_0)
        element_0 = test_suite_0.get_xml_element()
        bool_0 = True
        test_case_0 = module_0.TestCase(str_0, str_0, list_0, bool_0)
        str_1 = 'PX]\\j N5'
        set_0 = set()
        test_failure_0 = module_0.TestFailure(str_1, str_1)
        str_2 = 's" 1O\n\x0bcX.SH(r?]B{3'
        test_failure_1 = module_0.TestFailure(str_2)
        list_1 = [test_failure_0, test_failure_1, test_failure_0, test_failure_0]
        test_case_1 = module_0.TestCase(str_1, bool_0, str_0, str_1, set_0, list_0, list_1, str_2, str_2)
        element_1 = test_case_1.get_xml_element()
        datetime_0 = module_1.datetime()
    except BaseException:
        pass

def test_case_3():
    try:
        test_error_0 = module_0.TestError()
        list_0 = [test_error_0, test_error_0, test_error_0]
        dict_0 = {}
        str_0 = None
        str_1 = '\n        Method for options validation to use in \'load_data\' for TaskInclude and HandlerTaskInclude\n        since they share the same validations. It is not named \'validate_options\' on purpose\n        to prevent confusion with \'_validate_*" methods. Note that the task passed might be changed\n        as a side-effect of this method.\n        '
        test_case_0 = module_0.TestCase(str_1, list_0, str_0)
        list_1 = [test_case_0]
        test_suite_0 = module_0.TestSuite(str_0, str_0, str_1, dict_0, list_1, str_1, str_1)
        element_0 = test_suite_0.get_xml_element()
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = '3>#oG?LQ$V_23T.'
        test_error_0 = module_0.TestError()
        dict_0 = {}
        list_0 = None
        test_suite_0 = module_0.TestSuite(str_0, str_0, str_0, dict_0, list_0, str_0)
        element_0 = test_suite_0.get_xml_element()
    except BaseException:
        pass