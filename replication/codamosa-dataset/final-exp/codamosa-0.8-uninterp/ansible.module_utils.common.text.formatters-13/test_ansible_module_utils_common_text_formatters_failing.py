# Automatically generated by Pynguin.
import ansible.module_utils.common.text.formatters as module_0

def test_case_0():
    try:
        str_0 = 'Galaxy import warning message: %s'
        var_0 = module_0.human_to_bytes(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '4aCcd'
        var_0 = module_0.human_to_bytes(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        float_0 = 1694.0842
        int_0 = None
        dict_0 = {float_0: int_0, float_0: int_0}
        var_0 = module_0.bytes_to_human(int_0, dict_0)
    except BaseException:
        pass

def test_case_3():
    try:
        tuple_0 = None
        str_0 = 'Y`-Y?NY[R;i+FT`QlV>'
        var_0 = module_0.bytes_to_human(tuple_0, tuple_0, str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        int_0 = 1728
        str_0 = 'c!jl'
        var_0 = module_0.lenient_lowercase(str_0)
        str_1 = 'spberRA>Hk{q'
        bytes_0 = b'\xb1+0,\xc5\x83\xa5'
        var_1 = module_0.lenient_lowercase(bytes_0)
        var_2 = module_0.bytes_to_human(int_0, str_1)
        bytes_1 = b'\n\xa0\xac'
        list_0 = [str_0, var_0]
        str_2 = 'Z'
        var_3 = module_0.bytes_to_human(bytes_1, list_0, str_2)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = '1B'
        var_0 = module_0.human_to_bytes(str_0)
        var_1 = module_0.human_to_bytes(str_0)
        str_1 = '1BYTE'
        var_2 = module_0.human_to_bytes(str_1)
        str_2 = '1byte'
        var_3 = module_0.human_to_bytes(str_2)
        str_3 = '1bit'
        var_4 = module_0.human_to_bytes(str_3)
    except BaseException:
        pass