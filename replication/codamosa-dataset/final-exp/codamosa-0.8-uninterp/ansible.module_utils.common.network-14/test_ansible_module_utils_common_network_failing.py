# Automatically generated by Pynguin.
import ansible.module_utils.common.network as module_0

def test_case_0():
    try:
        bytes_0 = b'L\xd95\xef\x1c3\xc2'
        list_0 = None
        var_0 = module_0.to_subnet(bytes_0, list_0)
    except BaseException:
        pass

def test_case_1():
    try:
        float_0 = 1.5
        str_0 = 'Mq5pfkN0/QkS>VXH_J\t'
        var_0 = module_0.to_subnet(float_0, str_0, str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        float_0 = 1.5
        bool_0 = False
        var_0 = module_0.is_netmask(bool_0)
        set_0 = {bool_0, float_0, float_0}
        var_1 = module_0.to_subnet(set_0, bool_0)
    except BaseException:
        pass

def test_case_3():
    try:
        float_0 = 566.8
        var_0 = module_0.is_netmask(float_0)
        list_0 = None
        bool_0 = True
        var_1 = module_0.to_subnet(list_0, bool_0)
    except BaseException:
        pass

def test_case_4():
    try:
        float_0 = -2075.59549
        var_0 = module_0.to_netmask(float_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = '!4gSW\x0c2(g,nJ\\'
        bytes_0 = b'\xe2\x08'
        list_0 = [str_0, bytes_0]
        var_0 = module_0.to_netmask(list_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = "M$\n'\x0bXK[K+Y"
        var_0 = module_0.to_bits(str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        int_0 = 1281
        var_0 = module_0.is_mac(int_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = 'Mq5pf$N0/QkS>VXH_J\t'
        bool_0 = False
        var_0 = module_0.is_netmask(bool_0)
        var_1 = module_0.to_subnet(str_0, bool_0)
    except BaseException:
        pass