# Automatically generated by Pynguin.
import ansible.vars.reserved as module_0

def test_case_0():
    try:
        str_0 = ":x! a>qP|<\\(\x0c'%"
        list_0 = [str_0, str_0, str_0]
        var_0 = module_0.warn_if_reserved(list_0)
        int_0 = 1490
        str_1 = 'vu'
        var_1 = module_0.warn_if_reserved(int_0, str_1)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'pt\t*,*\x0bs'
        tuple_0 = (str_0,)
        float_0 = 501.4773
        var_0 = module_0.is_reserved_name(float_0)
        var_1 = module_0.warn_if_reserved(tuple_0)
        str_1 = '\n    name: list\n    author: Ansible Core Team\n    version_added: "2.0"\n    short_description: simply returns what it is given.\n    description:\n      - this is mostly a noop, to be used as a with_list loop when you dont want the content transformed in any way.\n'
        int_0 = -1261
        bytes_0 = b']\x88!\x0fB\x10\x04t\n\xe8^\xc5\x12+w'
        str_2 = 'The metadata contains unexpected key types: {0}'
        str_3 = 'eeev\x0cuW-g>@M'
        list_0 = [str_2, str_2, str_3]
        var_2 = module_0.warn_if_reserved(bytes_0, list_0)
        str_4 = 'Invalid host name supplied, expected a string but got %s for %s'
        var_3 = module_0.warn_if_reserved(str_4, str_2)
        tuple_1 = (str_1, str_1, int_0)
        var_4 = module_0.warn_if_reserved(tuple_1)
        bytes_1 = b"\x80\xb5\x15(\xd1\xe7'\xb1\xcd\x0e\xd7\xc2)\xdd\x06\xeb\x05\xbd\xf4m"
        var_5 = module_0.is_reserved_name(bytes_1)
        int_1 = None
        var_6 = module_0.get_reserved_names(int_1)
        str_5 = 'A@<ki((Z>'
        dict_0 = {str_5: var_5}
        var_7 = module_0.warn_if_reserved(tuple_1, dict_0)
        var_8 = module_0.warn_if_reserved(float_0)
    except BaseException:
        pass