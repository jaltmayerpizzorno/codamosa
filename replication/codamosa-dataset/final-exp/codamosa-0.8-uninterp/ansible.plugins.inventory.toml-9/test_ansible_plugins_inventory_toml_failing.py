# Automatically generated by Pynguin.
import ansible.plugins.inventory.toml as module_0
import ansible.utils.display as module_1

def test_case_0():
    try:
        bool_0 = False
        dict_0 = {}
        inventory_module_0 = module_0.InventoryModule()
        var_0 = inventory_module_0.verify_file(dict_0)
        var_1 = module_0.toml_dumps(bool_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bool_0 = True
        set_0 = {bool_0}
        var_0 = module_0.convert_yaml_objects_to_native(set_0)
    except BaseException:
        pass

def test_case_2():
    try:
        complex_0 = None
        list_0 = [complex_0, complex_0]
        var_0 = module_0.convert_yaml_objects_to_native(list_0)
    except BaseException:
        pass

def test_case_3():
    try:
        set_0 = set()
        display_0 = module_1.Display()
        inventory_module_0 = module_0.InventoryModule()
        var_0 = inventory_module_0.parse(set_0, display_0, set_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = None
        list_0 = [str_0, str_0, str_0, str_0]
        list_1 = [list_0, str_0, list_0, str_0]
        inventory_module_0 = module_0.InventoryModule()
        inventory_module_1 = module_0.InventoryModule()
        var_0 = inventory_module_0.verify_file(list_1)
        dict_0 = {str_0: inventory_module_0}
        var_1 = inventory_module_0.verify_file(str_0)
        set_0 = set()
        var_2 = module_0.convert_yaml_objects_to_native(set_0)
        var_3 = module_0.convert_yaml_objects_to_native(dict_0)
        bool_0 = True
        tuple_0 = ()
        var_4 = inventory_module_0.parse(bool_0, tuple_0, bool_0)
    except BaseException:
        pass