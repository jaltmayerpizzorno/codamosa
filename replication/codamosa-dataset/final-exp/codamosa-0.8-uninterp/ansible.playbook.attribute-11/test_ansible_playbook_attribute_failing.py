# Automatically generated by Pynguin.
import ansible.playbook.attribute as module_0

def test_case_0():
    try:
        list_0 = None
        str_0 = "I.[j7H-'"
        set_0 = {str_0}
        bytes_0 = b'\xd9'
        int_0 = 844
        bytes_1 = b'\x98\xd6\xd7<\xe0\xcf\x05/\xfc\x03\r\x1c\xd1\xa6\xac?'
        list_1 = [bytes_0, set_0]
        attribute_0 = module_0.Attribute(int_0, bytes_1, list_1)
        bool_0 = None
        tuple_0 = (list_1, set_0, bool_0)
        str_1 = 'OGJTmd\n6'
        attribute_1 = module_0.Attribute(bytes_0, attribute_0, tuple_0, str_1, str_1)
        float_0 = -1792.517
        int_1 = None
        field_attribute_0 = module_0.FieldAttribute(int_1)
        attribute_2 = module_0.Attribute(str_0, tuple_0, float_0)
        float_1 = 1811.29
        int_2 = -341
        str_2 = '!1v$[ I\x0c'
        set_1 = {str_1, bytes_1, str_1, str_2}
        str_3 = 'Your ssh client does not spport accept_newhostkey option, therefore it cannot be used.'
        field_attribute_1 = module_0.FieldAttribute(tuple_0, float_1, list_0, int_2, list_1, set_1, str_3)
        attribute_3 = module_0.Attribute(float_0, attribute_2, field_attribute_1, tuple_0, tuple_0, str_3)
        attribute_4 = module_0.Attribute(set_0, attribute_1)
        bool_1 = False
        var_0 = attribute_3.__ne__(bool_1)
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = None
        dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
        int_1 = -2047
        str_0 = 'urlsplit'
        attribute_0 = module_0.Attribute(int_1, str_0)
        var_0 = attribute_0.__lt__(dict_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '_xFE\rZ{tQ_\x0ceq:I'
        bool_0 = False
        str_1 = '_P'
        str_2 = '{)}/@a\tl_&]4'
        attribute_0 = module_0.Attribute()
        str_3 = 't(F4D&pwP\\913,R^|8st'
        float_0 = 1671.0
        set_0 = {str_2, bool_0}
        bool_1 = True
        dict_0 = {str_0: str_0}
        attribute_1 = module_0.Attribute(float_0, set_0, bool_1, dict_0)
        attribute_2 = module_0.Attribute(str_1, str_2, attribute_0, str_3, attribute_1)
        var_0 = attribute_2.__gt__(dict_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'vars file %s was not found'
        bytes_0 = None
        int_0 = -4225
        bool_0 = False
        field_attribute_0 = module_0.FieldAttribute(bool_0, int_0)
        int_1 = 2154
        set_0 = {str_0, bytes_0}
        attribute_0 = module_0.Attribute(bytes_0, set_0, int_0)
        var_0 = attribute_0.__le__(int_1)
    except BaseException:
        pass

def test_case_4():
    try:
        int_0 = 1476
        str_0 = 'validate_certs'
        float_0 = 0.1
        int_1 = 3732
        attribute_0 = module_0.Attribute(str_0, float_0, int_1)
        var_0 = attribute_0.__ge__(int_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'list'
        bool_0 = False
        field_attribute_0 = module_0.FieldAttribute(str_0, bool_0, bool_0)
    except BaseException:
        pass

def test_case_6():
    try:
        dict_0 = None
        int_0 = -1564
        tuple_0 = ()
        bytes_0 = b'\x18\xf2'
        attribute_0 = module_0.Attribute(tuple_0, bytes_0, dict_0, dict_0)
        var_0 = attribute_0.__eq__(int_0)
    except BaseException:
        pass