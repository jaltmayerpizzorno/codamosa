# Automatically generated by Pynguin.
import ansible.module_utils.facts.network.generic_bsd as module_0

def test_case_0():
    try:
        float_0 = 100.0
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(float_0)
        var_0 = generic_bsd_ifconfig_network_0.populate()
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '\x0cKYP'
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(str_0)
        var_0 = generic_bsd_ifconfig_network_0.get_default_interfaces(generic_bsd_ifconfig_network_0)
    except BaseException:
        pass

def test_case_2():
    try:
        set_0 = set()
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(set_0)
        var_0 = generic_bsd_ifconfig_network_0.get_interfaces_info(generic_bsd_ifconfig_network_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '.5\\[V%'
        list_0 = []
        dict_0 = {}
        tuple_0 = (list_0, list_0, dict_0, str_0)
        bytes_0 = b'%\xcd\xf7\x101\xbf\x16\xd3\xfb?g\xcd\xdcz\x18U'
        int_0 = 1517
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(int_0)
        float_0 = 0.0001
        tuple_1 = (generic_bsd_ifconfig_network_0, float_0)
        generic_bsd_ifconfig_network_1 = module_0.GenericBsdIfconfigNetwork(list_0, tuple_1)
        var_0 = generic_bsd_ifconfig_network_1.parse_options_line(str_0, tuple_0, bytes_0)
    except BaseException:
        pass

def test_case_4():
    try:
        bytes_0 = b'\xcd\xad\x8d\xd4\xa2\xb2\xe2\xb2kI\xe7\x0c%J;\xa5V\xd7\xca{'
        bool_0 = False
        int_0 = 1415
        int_1 = 3610
        dict_0 = {int_1: int_1, int_1: int_1, int_1: int_1}
        list_0 = [dict_0]
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(list_0)
        var_0 = generic_bsd_ifconfig_network_0.parse_ether_line(bytes_0, bool_0, int_0)
    except BaseException:
        pass

def test_case_5():
    try:
        var_0 = {}
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(var_0)
        str_0 = 'iN4'
        str_1 = '10.0.0.1'
        str_2 = {str_0: str_1}
        float_0 = -3.9674569297519118
        var_1 = generic_bsd_ifconfig_network_0.parse_media_line(str_0, str_2, float_0)
    except BaseException:
        pass

def test_case_6():
    try:
        float_0 = 100.0
        set_0 = set()
        list_0 = []
        str_0 = '<7*-h-'
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(list_0, str_0)
        bool_0 = True
        str_1 = ' Register a file object for a set of events to monitor. '
        complex_0 = None
        tuple_0 = (str_1, bool_0, complex_0)
        list_1 = [bool_0, tuple_0]
        generic_bsd_ifconfig_network_1 = module_0.GenericBsdIfconfigNetwork(list_1)
        generic_bsd_ifconfig_network_2 = module_0.GenericBsdIfconfigNetwork(bool_0, generic_bsd_ifconfig_network_1)
        var_0 = generic_bsd_ifconfig_network_2.parse_status_line(float_0, set_0, generic_bsd_ifconfig_network_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'f<JTCSpIg5I*M9~O`!M'
        bool_0 = True
        tuple_0 = ()
        float_0 = 2024.38957
        bytes_0 = b'd\xb7\xa6\xab\xf7\xc3\x06\xba2\x7fZ'
        float_1 = 4518.48748
        list_0 = [float_1, bytes_0, bytes_0]
        dict_0 = {bytes_0: list_0, str_0: float_1, float_1: str_0, bool_0: bool_0}
        list_1 = [bool_0]
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(list_1)
        var_0 = generic_bsd_ifconfig_network_0.parse_lladdr_line(list_0, dict_0, float_0)
        list_2 = []
        set_0 = {tuple_0}
        bytes_1 = b'B\xfcr\x06\x15\xd2\xcb\xda\xc3I\x9c\xf8\xe5 \x97\x1a\xce%'
        generic_bsd_ifconfig_network_1 = module_0.GenericBsdIfconfigNetwork(bytes_1)
        var_1 = generic_bsd_ifconfig_network_1.parse_lladdr_line(tuple_0, set_0, list_2)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = '3j\rRHY/b)wXx5^o'
        bool_0 = True
        set_0 = {bool_0, bool_0, bool_0, bool_0}
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(str_0)
        var_0 = generic_bsd_ifconfig_network_0.parse_inet_line(str_0, bool_0, set_0)
    except BaseException:
        pass

def test_case_9():
    try:
        float_0 = 1000.0
        str_0 = 'scopeid'
        set_0 = {float_0}
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(set_0)
        var_0 = generic_bsd_ifconfig_network_0.parse_inet6_line(str_0, float_0, float_0)
    except BaseException:
        pass

def test_case_10():
    try:
        bytes_0 = b'\n\xe1\xf4\xb6L\xe5\xfe\xdd\xcb?E'
        bool_0 = True
        int_0 = 2599
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(int_0)
        var_0 = generic_bsd_ifconfig_network_0.parse_tunnel_line(bytes_0, bool_0, bool_0)
    except BaseException:
        pass

def test_case_11():
    try:
        int_0 = -2052
        list_0 = [int_0]
        int_1 = 8
        bool_0 = False
        set_0 = set()
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(set_0)
        list_1 = [generic_bsd_ifconfig_network_0, set_0, set_0, generic_bsd_ifconfig_network_0]
        bytes_0 = b"`'y&Y\xef"
        str_0 = '~0g!w\\,T}o['
        var_0 = generic_bsd_ifconfig_network_0.parse_unknown_line(bytes_0, str_0, set_0)
        generic_bsd_ifconfig_network_1 = module_0.GenericBsdIfconfigNetwork(list_1)
        var_1 = generic_bsd_ifconfig_network_1.parse_inet6_line(list_0, int_1, bool_0)
    except BaseException:
        pass

def test_case_12():
    try:
        list_0 = None
        tuple_0 = (list_0,)
        str_0 = 'u~jJi%\x0bjW<F\x0c[hky'
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(str_0)
        var_0 = generic_bsd_ifconfig_network_0.get_options(tuple_0)
    except BaseException:
        pass

def test_case_13():
    try:
        var_0 = {}
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(var_0)
        str_0 = 'Xd0ess'
        dict_0 = {generic_bsd_ifconfig_network_0: str_0, generic_bsd_ifconfig_network_0: str_0}
        var_1 = generic_bsd_ifconfig_network_0.detect_type_media(dict_0)
        var_2 = generic_bsd_ifconfig_network_0.get_default_interfaces(generic_bsd_ifconfig_network_0)
    except BaseException:
        pass

def test_case_14():
    try:
        bytes_0 = b'\xcd\xad\x8d\xd4\xa2\xb2\xe2\xb2kI\xe7\x0c%J;\xa5V\xd7\xca{'
        int_0 = 1415
        int_1 = 3610
        list_0 = [bytes_0, bytes_0, int_0]
        float_0 = 0.1
        tuple_0 = (list_0, float_0)
        set_0 = {int_0}
        tuple_1 = (bytes_0, int_1)
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(tuple_1, tuple_1)
        var_0 = generic_bsd_ifconfig_network_0.parse_nd6_line(tuple_0, tuple_0, set_0)
    except BaseException:
        pass

def test_case_15():
    try:
        list_0 = None
        dict_0 = {list_0: list_0, list_0: list_0, list_0: list_0, list_0: list_0}
        list_1 = [dict_0, dict_0, list_0]
        complex_0 = None
        float_0 = 537.46
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(float_0)
        var_0 = generic_bsd_ifconfig_network_0.parse_inet6_line(list_1, complex_0, list_1)
    except BaseException:
        pass

def test_case_16():
    try:
        str_0 = '.!'
        bytes_0 = b'd\xb0\x19'
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(bytes_0)
        var_0 = generic_bsd_ifconfig_network_0.parse_interface_line(str_0)
    except BaseException:
        pass

def test_case_17():
    try:
        str_0 = 'M7H0?TxbMc'
        set_0 = set()
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(set_0)
        str_1 = '%s of %s'
        float_0 = -429.27
        var_0 = generic_bsd_ifconfig_network_0.parse_inet_line(str_0, str_1, float_0)
    except BaseException:
        pass

def test_case_18():
    try:
        float_0 = -2075.584832
        int_0 = 3600
        bool_0 = True
        set_0 = {float_0}
        bytes_0 = b'a\xf76\x13\x90\x81Zs\xc6\x95\xdc\xc3\xd7\xf2\x83\x11F'
        dict_0 = {bytes_0: bytes_0}
        bool_1 = None
        list_0 = []
        str_0 = '3omHG?"I_%PO7\nKr'
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(list_0, str_0)
        var_0 = generic_bsd_ifconfig_network_0.parse_ether_line(bytes_0, dict_0, bool_1)
        generic_bsd_ifconfig_network_1 = module_0.GenericBsdIfconfigNetwork(int_0)
        generic_bsd_ifconfig_network_2 = module_0.GenericBsdIfconfigNetwork(bool_0)
        generic_bsd_ifconfig_network_3 = module_0.GenericBsdIfconfigNetwork(generic_bsd_ifconfig_network_2)
        str_1 = '>&eSo>Lb5:!'
        tuple_0 = (generic_bsd_ifconfig_network_3,)
        set_1 = {int_0, bool_0}
        generic_bsd_ifconfig_network_4 = module_0.GenericBsdIfconfigNetwork(set_0)
        var_1 = generic_bsd_ifconfig_network_4.merge_default_interface(tuple_0, set_1, generic_bsd_ifconfig_network_2)
        generic_bsd_ifconfig_network_5 = module_0.GenericBsdIfconfigNetwork(set_0)
        var_2 = generic_bsd_ifconfig_network_5.parse_inet6_line(str_1, tuple_0, tuple_0)
    except BaseException:
        pass

def test_case_19():
    try:
        int_0 = 3592
        str_0 = 'bsa,y\x0cb'
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(int_0)
        str_1 = 'uGl43C'
        var_0 = generic_bsd_ifconfig_network_0.parse_interface_line(str_1)
        int_1 = 2890
        list_0 = None
        complex_0 = None
        var_1 = generic_bsd_ifconfig_network_0.merge_default_interface(str_0, list_0, complex_0)
        bytes_0 = b'\xa9\xd5G\x06\x08\xf4\x9ce\xea\x95\xa0\xd2'
        str_2 = 'v4'
        bytes_1 = None
        str_3 = '/i,ANeX5<G?BIC)=V0#'
        tuple_0 = None
        dict_0 = {complex_0: var_0, bytes_1: str_2, int_0: int_1, bytes_0: tuple_0}
        tuple_1 = (bytes_0, str_3, dict_0)
        float_0 = 974.356
        float_1 = -1615.909
        var_2 = generic_bsd_ifconfig_network_0.parse_inet_line(tuple_1, float_0, float_1)
    except BaseException:
        pass

def test_case_20():
    try:
        var_0 = {}
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(var_0)
        str_0 = 'lo0'
        str_1 = {str_0: str_0}
        str_2 = [str_1]
        str_3 = {str_0: str_2}
        str_4 = {str_0: str_3}
        str_5 = 'interface'
        str_6 = {str_5: str_0}
        var_1 = generic_bsd_ifconfig_network_0.merge_default_interface(str_6, str_4, str_6)
    except BaseException:
        pass

def test_case_21():
    try:
        var_0 = {}
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(var_0)
        str_0 = 'lo0'
        str_1 = 'iN4'
        str_2 = {str_0: str_1}
        str_3 = {str_1: str_1}
        str_4 = {str_0: str_3}
        var_1 = generic_bsd_ifconfig_network_0.merge_default_interface(str_2, str_4, str_1)
        str_5 = 'interface'
        str_6 = {str_5: str_0}
        var_2 = generic_bsd_ifconfig_network_0.merge_default_interface(str_6, str_4, str_1)
    except BaseException:
        pass

def test_case_22():
    try:
        var_0 = {}
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(var_0)
        str_0 = 'iN4'
        str_1 = 'address'
        str_2 = '10.0.0.1'
        str_3 = {str_1: str_2}
        float_0 = 1.3787552903423228
        var_1 = generic_bsd_ifconfig_network_0.parse_media_line(str_1, str_3, float_0)
        str_4 = [str_3]
        str_5 = {str_0: str_4}
        var_2 = {}
        var_3 = generic_bsd_ifconfig_network_0.merge_default_interface(var_2, str_5, str_0)
        str_6 = 'interface'
        str_7 = {str_6: str_3}
        var_4 = generic_bsd_ifconfig_network_0.merge_default_interface(str_7, str_5, str_0)
    except BaseException:
        pass

def test_case_23():
    try:
        var_0 = {}
        generic_bsd_ifconfig_network_0 = module_0.GenericBsdIfconfigNetwork(var_0)
        str_0 = 'lo'
        str_1 = 'address'
        str_2 = {str_1: str_1}
        str_3 = [str_2]
        str_4 = {str_1: str_3}
        str_5 = {str_0: str_4}
        var_1 = generic_bsd_ifconfig_network_0.merge_default_interface(str_2, str_5, str_3)
        str_6 = 'interface'
        str_7 = {str_6: str_0}
        var_2 = generic_bsd_ifconfig_network_0.merge_default_interface(str_7, str_5, str_5)
    except BaseException:
        pass