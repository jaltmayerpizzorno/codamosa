# Automatically generated by Pynguin.
import typesystem.tokenize.tokens as module_0
import builtins as module_1

def test_case_0():
    try:
        dict_0 = {}
        list_0 = [dict_0, dict_0, dict_0, dict_0]
        int_0 = 306
        str_0 = 'v5)\r|VFxf54[~b\n]j?'
        scalar_token_0 = module_0.ScalarToken(list_0, int_0, int_0, str_0)
        dict_token_0 = module_0.DictToken(*list_0)
        list_1 = [dict_token_0, dict_0]
        int_1 = -790
        int_2 = -695
        token_0 = module_0.Token(str_0, int_1, int_2)
        token_1 = token_0.lookup(list_1)
    except BaseException:
        pass

def test_case_1():
    try:
        dict_0 = {}
        int_0 = -2053
        list_token_0 = module_0.ListToken(dict_0, int_0, int_0)
        list_0 = [dict_0, dict_0, dict_0, dict_0]
        int_1 = 306
        str_0 = 'v5)\r|VFxf54[~b\n]j?'
        token_0 = module_0.Token(dict_0, int_1, int_0)
        bool_0 = token_0.__eq__(str_0)
        dict_token_0 = module_0.DictToken(*list_0)
        list_1 = [dict_token_0, dict_0]
        bool_1 = token_0.__eq__(dict_0)
        int_2 = -790
        int_3 = -3669
        token_1 = module_0.Token(list_1, int_3, int_2)
        list_2 = [int_3]
        token_2 = token_1.lookup_key(list_2)
    except BaseException:
        pass

def test_case_2():
    try:
        bool_0 = False
        list_0 = [bool_0]
        list_1 = [bool_0, list_0, bool_0, list_0]
        list_2 = []
        dict_0 = {}
        list_3 = [dict_0, dict_0]
        int_0 = 0
        token_0 = module_0.Token(list_3, int_0, int_0)
        token_1 = token_0.lookup(list_2)
        token_2 = token_1.lookup(list_1)
    except BaseException:
        pass

def test_case_3():
    try:
        float_0 = -4001.324
        int_0 = 4
        int_1 = 6
        list_token_0 = module_0.ListToken(float_0, int_0, int_1)
        list_0 = [list_token_0, int_1]
        list_1 = None
        set_0 = {list_1, list_1, list_1}
        int_2 = 369
        token_0 = module_0.Token(set_0, int_2, int_2)
        token_1 = token_0.lookup_key(list_0)
    except BaseException:
        pass

def test_case_4():
    try:
        dict_0 = {}
        list_0 = [dict_0, dict_0, dict_0, dict_0]
        dict_token_0 = module_0.DictToken(*list_0)
        list_1 = module_1.list(**dict_0)
        int_0 = -2393
        int_1 = None
        token_0 = module_0.Token(list_0, int_1, int_0)
        token_1 = token_0.lookup_key(list_1)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'value'
        int_0 = 0
        token_0 = module_0.Token(str_0, int_0, int_0)
        bool_0 = token_0.__eq__(int_0)
        bool_1 = token_0.__eq__(token_0)
    except BaseException:
        pass

def test_case_6():
    try:
        list_0 = []
        int_0 = -434
        int_1 = -2500
        scalar_token_0 = module_0.ScalarToken(list_0, int_0, int_1)
        any_0 = scalar_token_0.__hash__()
    except BaseException:
        pass

def test_case_7():
    try:
        dict_token_0 = module_0.DictToken()
    except BaseException:
        pass

def test_case_8():
    try:
        tuple_0 = None
        str_0 = ';?P5'
        int_0 = 274
        str_1 = 'Md(]dZU`'
        token_0 = module_0.Token(str_0, int_0, int_0, str_1)
        bool_0 = token_0.__eq__(tuple_0)
        dict_0 = {str_1: str_0}
        list_0 = [dict_0, dict_0, dict_0, dict_0]
        str_2 = token_0.__repr__()
        dict_token_0 = module_0.DictToken(*list_0)
    except BaseException:
        pass

def test_case_9():
    try:
        bool_0 = True
        int_0 = 0
        scalar_token_0 = module_0.ScalarToken(bool_0, int_0, bool_0)
        bool_1 = False
        scalar_token_1 = module_0.ScalarToken(bool_1, bool_1, bool_0)
        var_0 = bool_0 == scalar_token_1
        scalar_token_2 = module_0.ScalarToken(bool_0, bool_1, bool_0)
        scalar_token_3 = module_0.ScalarToken(bool_0, bool_1, bool_0)
        int_1 = 2
        scalar_token_4 = module_0.ScalarToken(bool_0, bool_1, int_1)
        scalar_token_5 = module_0.ScalarToken(bool_0, bool_1, bool_0)
        var_1 = scalar_token_4 == scalar_token_5
        scalar_token_6 = module_0.ScalarToken(bool_0, bool_0, bool_0)
        scalar_token_7 = module_0.ScalarToken(bool_0, bool_1, bool_0)
        var_2 = [scalar_token_7, var_0, scalar_token_4]
        list_token_0 = module_0.ListToken(var_2, bool_1, bool_0)
        var_3 = []
        list_token_1 = module_0.ListToken(var_3, bool_1, bool_0)
        var_4 = list_token_0 == list_token_1
    except BaseException:
        pass