# Automatically generated by Pynguin.
import isort.format as module_0
import pathlib as module_1

def test_case_0():
    pass

def test_case_1():
    str_0 = 'aetypes'
    bool_0 = True
    var_0 = module_0.create_terminal_printer(bool_0)
    str_1 = module_0.format_simplified(str_0)

def test_case_2():
    str_0 = 'nVqWl>6VN\n9oO=!RL4(k'
    str_1 = module_0.format_natural(str_0)

def test_case_3():
    str_0 = '#.)/x'
    str_1 = '\x0b$~,RQ`+\t@8'
    dict_0 = {str_1: str_1}
    str_2 = module_0.format_simplified(str_0)
    path_0 = module_1.Path(**dict_0)
    basic_printer_0 = module_0.BasicPrinter()
    bool_0 = False
    var_0 = module_0.show_unified_diff(file_input=str_0, file_output=str_1, file_path=path_0, color_output=bool_0)
    str_3 = module_0.format_natural(str_0)
    basic_printer_1 = module_0.BasicPrinter()
    str_4 = '}uY?4hD@1`hj_f_d[ p'
    basic_printer_1.success(str_4)
    str_5 = ' (|vKE?rIv3o'
    str_6 = module_0.format_natural(str_5)

def test_case_4():
    str_0 = 'rfc822'
    str_1 = 'import_headings'
    path_0 = module_1.Path()
    bool_0 = True
    var_0 = module_0.show_unified_diff(file_input=str_1, file_output=str_1, file_path=path_0, color_output=bool_0)
    basic_printer_0 = module_0.BasicPrinter()
    basic_printer_0.diff_line(str_0)
    basic_printer_0.success(str_0)
    str_2 = module_0.remove_whitespace(str_0)

def test_case_5():
    basic_printer_0 = module_0.BasicPrinter()

def test_case_6():
    str_0 = '1 4rbI8r,R,4'
    colorama_printer_0 = module_0.ColoramaPrinter()
    basic_printer_0 = module_0.BasicPrinter()
    str_1 = module_0.format_simplified(str_0)
    basic_printer_0.success(str_0)

def test_case_7():
    basic_printer_0 = module_0.BasicPrinter()
    str_0 = None
    str_1 = ' s~'
    basic_printer_0.success(str_1)
    basic_printer_0.error(str_0)
    str_2 = '\\QTk9%V{yB+H'
    basic_printer_0.success(str_2)

def test_case_8():
    colorama_printer_0 = module_0.ColoramaPrinter()

def test_case_9():
    str_0 = ' encountered an error ('
    colorama_printer_0 = module_0.ColoramaPrinter()
    colorama_printer_0.diff_line(str_0)

def test_case_10():
    bool_0 = True
    var_0 = module_0.create_terminal_printer(bool_0)

def test_case_11():
    str_0 = 'w<r{ 57-;qt6'
    bytes_0 = b'\x1a\x0f\x19\xf8\xf4\xc7\xc2\x9b\x1au\xf9\x1c}\xa3$\xd0\xb3'
    basic_printer_0 = module_0.BasicPrinter(bytes_0)
    basic_printer_0.error(str_0)
    str_1 = '7\n{1(x$j\tNIo_K'
    str_2 = 'E@J`uBSO'
    str_3 = module_0.remove_whitespace(str_1, str_2)
    colorama_printer_0 = module_0.ColoramaPrinter()
    str_4 = '\x0bI]RL2'
    str_5 = module_0.format_natural(str_4)
    bool_0 = None
    var_0 = module_0.create_terminal_printer(bool_0)

def test_case_12():
    bool_0 = False
    var_0 = module_0.create_terminal_printer(bool_0)
    str_0 = '@D=V2`HO1'
    str_1 = module_0.format_simplified(str_0)
    str_2 = '7Z=3&~"rp\\\n9'
    str_3 = module_0.remove_whitespace(str_2)
    str_4 = module_0.format_natural(str_2)
    basic_printer_0 = module_0.BasicPrinter()
    basic_printer_0.diff_line(str_4)
    basic_printer_0.success(str_1)
    str_5 = module_0.format_simplified(str_0)

def test_case_13():
    str_0 = 'i!sU*wlzdT\x0bq*L@Pr:p_'
    str_1 = module_0.format_natural(str_0)
    path_0 = module_1.Path()
    basic_printer_0 = module_0.BasicPrinter()
    text_i_o_0 = None
    colorama_printer_0 = module_0.ColoramaPrinter(text_i_o_0)
    str_2 = None
    str_3 = colorama_printer_0.style_text(str_2)
    str_4 = ',]VVmF5\n'
    str_5 = colorama_printer_0.style_text(str_4, str_0)
    bool_0 = True
    var_0 = module_0.show_unified_diff(file_input=str_0, file_output=str_5, file_path=path_0, color_output=bool_0)
    str_6 = module_0.format_natural(str_1)
    basic_printer_1 = module_0.BasicPrinter(text_i_o_0)
    str_7 = None
    basic_printer_1.success(str_7)
    str_8 = 'sre_constants'
    str_9 = module_0.format_natural(str_8)

def test_case_14():
    str_0 = 'i!sU*wlzdT\x0bq*L@Pr:p_'
    str_1 = module_0.format_natural(str_0)
    str_2 = 're<0V8.H8'
    path_0 = module_1.Path()
    basic_printer_0 = module_0.BasicPrinter()
    text_i_o_0 = None
    colorama_printer_0 = module_0.ColoramaPrinter(text_i_o_0)
    colorama_printer_1 = module_0.ColoramaPrinter(text_i_o_0)
    str_3 = 'z9\x0bbXG\r<\n^*.N'
    str_4 = colorama_printer_0.style_text(str_3, str_1)
    colorama_printer_2 = module_0.ColoramaPrinter(text_i_o_0)
    colorama_printer_2.diff_line(str_4)
    str_5 = module_0.format_natural(str_3)
    str_6 = "| 3~'0X~_D^W{bHr>v"
    colorama_printer_2.diff_line(str_6)
    bool_0 = False
    var_0 = module_0.create_terminal_printer(bool_0, text_i_o_0)
    str_7 = module_0.format_simplified(str_1)
    str_8 = colorama_printer_1.style_text(str_2, str_4)
    bool_1 = True
    var_1 = module_0.create_terminal_printer(bool_1, text_i_o_0)
    str_9 = 'EGE>B6wB'
    str_10 = module_0.format_natural(str_9)
    basic_printer_1 = module_0.BasicPrinter()
    str_11 = 'G/a!'
    basic_printer_1.success(str_11)

def test_case_15():
    str_0 = "Xj'q~YH|WyUH?z%7|N c"
    basic_printer_0 = module_0.BasicPrinter()
    basic_printer_0.success(str_0)
    str_1 = "Causes all non-indented imports to float to the top of the file having its imports sorted (immediately below the top of file comment).\nThis can be an excellent shortcut for collecting imports every once in a while when you place them in the middle of a file to avoid context switching.\n\n*NOTE*: It currently doesn't work with cimports and introduces some extra over-head and a performance penalty."
    colorama_printer_0 = module_0.ColoramaPrinter()
    str_2 = '3hF&}cs*+7u!`'
    colorama_printer_0.diff_line(str_2)
    bool_0 = True
    colorama_printer_0.diff_line(str_0)
    colorama_printer_0.diff_line(str_2)
    str_3 = '*Xe8(z`oB='
    str_4 = colorama_printer_0.style_text(str_3)
    colorama_printer_0.diff_line(str_3)
    str_5 = module_0.format_natural(str_1)
    str_6 = 'bsddb'
    var_0 = module_0.create_terminal_printer(bool_0)
    str_7 = module_0.format_simplified(str_5)
    colorama_printer_1 = module_0.ColoramaPrinter()
    basic_printer_1 = module_0.BasicPrinter()
    str_8 = "'SsX!m,;F(B!Y&-q}X*>"
    basic_printer_2 = module_0.BasicPrinter()
    basic_printer_0.success(str_8)
    str_9 = module_0.format_natural(str_6)

def test_case_16():
    str_0 = "Xj'q~YH|WyUH?z%7|N c"
    basic_printer_0 = module_0.BasicPrinter()
    basic_printer_0.success(str_0)
    str_1 = "Causes all non-indented imports to float to the top of the file having its imports sorted (immediately below the top of file comment).\nThis can be an excellent shortcut for collecting imports every once in a while when you place them in the middle of a file to avoid context switching.\n\n*NOTE*: It currently doesn't work with cimports and introduces some extra over-head and a performance penalty."
    colorama_printer_0 = module_0.ColoramaPrinter()
    str_2 = '3hF&}cs*+7u!`'
    colorama_printer_0.diff_line(str_2)
    bool_0 = True
    str_3 = 'jR\n[ejn-QJd|9%0KBGXH'
    colorama_printer_0.diff_line(str_3)
    colorama_printer_0.diff_line(str_2)
    str_4 = '*Xe8(z`oB='
    str_5 = colorama_printer_0.style_text(str_4)
    colorama_printer_0.diff_line(str_3)
    str_6 = module_0.format_natural(str_1)
    str_7 = 'bsddb'
    colorama_printer_0.diff_line(str_7)
    var_0 = module_0.create_terminal_printer(bool_0)
    str_8 = 'L^Ml_U4YFN<'
    str_9 = module_0.format_simplified(str_8)
    str_10 = colorama_printer_0.style_text(str_1)
    colorama_printer_0.diff_line(str_6)
    str_11 = module_0.format_natural(str_1)
    basic_printer_1 = module_0.BasicPrinter()
    str_12 = module_0.format_natural(str_11)