# Automatically generated by Pynguin.
import ansible.modules.subversion as module_0

def test_case_0():
    try:
        var_0 = None
        subversion_0 = module_0.Subversion(var_0, var_0, var_0, var_0, var_0, var_0, var_0, var_0)
        var_1 = subversion_0.needs_update()
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = b'\x0e6\xd9\x9b\xcb\x1f\xb8\xcc\x84\xf2:[\x00bU\xbdl\xd6\xed'
        set_0 = {bytes_0, bytes_0}
        tuple_0 = (set_0,)
        float_0 = -3247.641951
        str_0 = '`bc"X\']vRYp@6Pc'
        subversion_0 = module_0.Subversion(bytes_0, tuple_0, float_0, str_0, tuple_0, bytes_0, float_0, str_0)
        var_0 = subversion_0.is_svn_repo()
    except BaseException:
        pass

def test_case_2():
    try:
        var_0 = None
        subversion_0 = module_0.Subversion(var_0, var_0, var_0, var_0, var_0, var_0, var_0, var_0)
        var_1 = subversion_0.is_svn_repo()
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '2/`t}Q*N(L\x0bCSOpC*X'
        str_1 = 'Including module_utils file %s'
        dict_0 = {str_0: str_1, str_1: str_0, str_0: str_1, str_1: str_0}
        float_0 = 1.0
        bool_0 = None
        bytes_0 = b'\x01'
        list_0 = []
        set_0 = {str_0}
        tuple_0 = ()
        float_1 = 0.1
        subversion_0 = module_0.Subversion(bool_0, dict_0, bytes_0, list_0, set_0, tuple_0, float_1, dict_0)
        tuple_1 = (dict_0, float_0, subversion_0, str_1)
        bytes_1 = b'\xbc\x8b\xa0\x86\xb8\x18~;\xb2\x04U\nO\x07\xdaW\xb5W'
        bytes_2 = b'\x18\xdf\xf5\xd4\x11\xa8m\xe1\x9age\xf4\x1d\x0b\xffd,Q\x0c\x8c'
        subversion_1 = module_0.Subversion(tuple_1, bool_0, set_0, subversion_0, bytes_1, set_0, bool_0, bytes_2)
        var_0 = subversion_1.checkout()
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'aSO^5HBV\x0b\nPyg'
        int_0 = -1498
        bool_0 = True
        str_1 = '.mJT)d>hWVke\\\tqVh b'
        bool_1 = True
        list_0 = [bool_1, bool_0, str_1]
        bytes_0 = b'<\xe8\x1d\x0e\xad\x19\xb0R\xa4\xee4\x17\x8c\xed\xb7T'
        set_0 = None
        tuple_0 = (bool_1, list_0, bytes_0, set_0)
        dict_0 = {}
        str_2 = 'X<>v;&'
        int_1 = -1004
        subversion_0 = module_0.Subversion(int_0, bool_0, str_1, tuple_0, dict_0, str_2, int_1, bool_1)
        var_0 = subversion_0.checkout(str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        var_0 = None
        subversion_0 = module_0.Subversion(var_0, var_0, var_0, var_0, var_0, var_0, var_0, var_0)
        var_1 = subversion_0.export()
    except BaseException:
        pass

def test_case_6():
    try:
        bytes_0 = b'\xa3\x95\xc1'
        int_0 = -2229
        int_1 = -298
        bool_0 = False
        str_0 = "#K=\x0bGk6'{mI@;0"
        str_1 = 'rG+'
        dict_0 = {}
        list_0 = [bool_0, bytes_0, dict_0]
        bytes_1 = b'kW\x1d\xcb\xbe|\x0e\xf3 \xa40\x8d\x11`8\x94\xe0g}'
        tuple_0 = (list_0, bytes_1)
        str_2 = ')M(xRyn6MC[^0NZb\r'
        tuple_1 = (dict_0, tuple_0, str_2)
        str_3 = '__main__'
        subversion_0 = module_0.Subversion(int_0, int_1, bool_0, str_0, str_1, tuple_1, dict_0, str_3)
        var_0 = subversion_0.switch()
    except BaseException:
        pass

def test_case_7():
    try:
        bool_0 = None
        float_0 = 3537.74
        set_0 = {bool_0, float_0, bool_0, bool_0}
        list_0 = [set_0]
        bool_1 = False
        bytes_0 = b'\xe4Et\x8f\x169\xf2\xe7\xe0\xfa'
        subversion_0 = module_0.Subversion(set_0, list_0, bool_1, bytes_0, set_0, float_0, bytes_0, set_0)
        var_0 = subversion_0.update()
    except BaseException:
        pass

def test_case_8():
    try:
        bytes_0 = b'\xa3\x95\xc1'
        bool_0 = False
        list_0 = [bool_0, bool_0, bytes_0]
        int_0 = 1230
        str_0 = 'x#'
        float_0 = 4091.759308
        bool_1 = False
        dict_0 = {bool_0: bytes_0, float_0: bool_0, bool_1: bytes_0}
        set_0 = {bool_1}
        subversion_0 = module_0.Subversion(list_0, int_0, str_0, float_0, dict_0, dict_0, set_0, dict_0)
        var_0 = subversion_0.revert()
    except BaseException:
        pass

def test_case_9():
    try:
        int_0 = 32700
        bool_0 = True
        tuple_0 = (bool_0,)
        bytes_0 = b'\xf0\xa5\x01\xb7\x10'
        str_0 = 'wxw3uGQ)z_J+x2CWX'
        str_1 = ')C]'
        bool_1 = False
        dict_0 = {bytes_0: bool_0, bytes_0: bytes_0, str_1: int_0, str_0: str_1}
        list_0 = []
        subversion_0 = module_0.Subversion(int_0, tuple_0, bytes_0, str_0, str_1, bool_1, dict_0, list_0)
        set_0 = {tuple_0, bool_0}
        bytes_1 = b'\xa0\x98!;'
        float_0 = 0.0001
        subversion_1 = module_0.Subversion(subversion_0, tuple_0, subversion_0, set_0, bytes_1, list_0, float_0, set_0)
        var_0 = subversion_1.get_remote_revision()
    except BaseException:
        pass

def test_case_10():
    try:
        set_0 = set()
        bool_0 = False
        float_0 = -2780.904911
        str_0 = 'Z_kKXX6FR9r|\r(?\r'
        int_0 = 1341
        subversion_0 = module_0.Subversion(set_0, set_0, bool_0, float_0, str_0, bool_0, int_0, float_0)
        var_0 = subversion_0.has_local_mods()
    except BaseException:
        pass

def test_case_11():
    try:
        var_0 = None
        subversion_0 = module_0.Subversion(var_0, var_0, var_0, var_0, var_0, var_0, var_0, var_0)
        var_1 = subversion_0.export(subversion_0)
    except BaseException:
        pass