# Automatically generated by Pynguin.
import ansible.playbook.block as module_0
import ansible.playbook.role as module_1

def test_case_0():
    try:
        float_0 = 0.1
        bytes_0 = b'\xdf5\x00\xe4m\x91\xa2\x87kM\xd2\xc7\xc6\xae\x88\x1c\x90'
        block_0 = module_0.Block(bytes_0)
        var_0 = block_0.__eq__(float_0)
    except BaseException:
        pass

def test_case_1():
    try:
        block_0 = module_0.Block()
        var_0 = block_0.get_first_parent_include()
        str_0 = ']8@\r(s;wz%y'
        var_1 = block_0.set_loader(str_0)
        var_2 = block_0.get_vars()
        str_1 = '&J{p93'
        var_3 = block_0.__ne__(str_1)
    except BaseException:
        pass

def test_case_2():
    try:
        float_0 = 0.5
        int_0 = 30
        block_0 = None
        bytes_0 = b'\x9d\x95'
        block_1 = module_0.Block(int_0, bytes_0)
        var_0 = block_1.is_block(block_0)
        str_0 = 'chv<\x0cx-e'
        complex_0 = None
        dict_0 = {int_0: str_0, complex_0: float_0}
        block_2 = module_0.Block(int_0, str_0, int_0, dict_0)
        var_1 = block_2.get_vars()
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'jD|\x030\xb9~R|d\x18`\xec:\xf9\xf9\x95@\xe8\x87'
        tuple_0 = (bytes_0,)
        block_0 = module_0.Block(tuple_0, bytes_0)
        var_0 = block_0.serialize()
    except BaseException:
        pass

def test_case_4():
    try:
        int_0 = 453
        bytes_0 = b'\xdaT\x03\xd7k\xc2\xeb\x00\xb4\t\xf1,yG_\x97'
        str_0 = 'R=< '
        str_1 = 'WINRM OPEN SHELL: %s'
        tuple_0 = ()
        block_0 = module_0.Block(int_0)
        tuple_1 = (tuple_0, block_0)
        bool_0 = False
        int_1 = 2852
        tuple_2 = (tuple_1, bool_0, int_1)
        block_1 = module_0.Block(tuple_2)
        block_2 = module_0.Block(str_1, block_1, str_0)
        var_0 = block_2.all_parents_static()
        float_0 = 2.0
        dict_0 = {bytes_0: bytes_0, str_0: str_0, float_0: float_0}
        bytes_1 = b'\x00'
        block_3 = module_0.Block(dict_0, float_0, bytes_1)
        var_1 = block_3.set_loader(int_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'U,1{uO<\\XF1O'
        list_0 = [str_0, str_0, str_0, str_0]
        float_0 = -993.0
        block_0 = module_0.Block(list_0, float_0, list_0)
        var_0 = block_0.serialize()
    except BaseException:
        pass

def test_case_6():
    try:
        int_0 = -797
        list_0 = [int_0, int_0]
        block_0 = module_0.Block()
        var_0 = block_0.has_tasks()
        dict_0 = {}
        tuple_0 = (int_0, list_0, dict_0)
        str_0 = '0242ac11-001f-7e8c-6c5b-00000000078'
        block_1 = module_0.Block(tuple_0, tuple_0, int_0, block_0)
        bool_0 = False
        block_2 = module_0.Block()
        var_1 = block_2.set_loader(bool_0)
        var_2 = block_1.get_first_parent_include()
        var_3 = block_1.is_block(str_0)
        var_4 = block_1.get_include_params()
        var_5 = block_1.get_include_params()
        var_6 = block_1.all_parents_static()
        bytes_0 = b'\xaa'
        block_3 = module_0.Block(list_0, bytes_0, block_0)
        var_7 = block_3.serialize()
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = '\\\\(\\d+)'
        block_0 = module_0.Block(str_0, str_0)
        var_0 = block_0.all_parents_static()
    except BaseException:
        pass

def test_case_8():
    try:
        bool_0 = True
        str_0 = "e\r(+5n'C!)"
        block_0 = module_0.Block(bool_0, str_0)
        var_0 = block_0.get_first_parent_include()
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = ''
        dict_0 = {str_0: str_0, str_0: str_0}
        str_1 = 'g%UYz</i+TXN\x0b5'
        block_0 = module_0.Block()
        block_1 = module_0.Block(str_1)
        var_0 = block_1.get_include_params()
        bool_0 = True
        block_2 = module_0.Block(bool_0)
        list_0 = [dict_0, str_1, block_1]
        var_1 = block_1.load(list_0, bool_0, block_2)
    except BaseException:
        pass

def test_case_10():
    try:
        tuple_0 = ()
        block_0 = module_0.Block(tuple_0)
        bytes_0 = b'\x00T\x95\xa4\xa7'
        var_0 = block_0.set_loader(bytes_0)
        var_1 = block_0.serialize()
        dict_0 = {var_0: var_0, var_0: var_0, bytes_0: var_1, bytes_0: block_0}
        float_0 = 1000.0
        var_2 = block_0.load(tuple_0, dict_0, float_0)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = '~&gr@"DER"=%'
        list_0 = [str_0, str_0, str_0]
        bytes_0 = b'\x8f\xeeOg\xb4&M\xf1\xb9OrO\xba\xe6J'
        bool_0 = False
        float_0 = 670.9
        dict_0 = {str_0: str_0, bool_0: bytes_0, float_0: bytes_0}
        block_0 = module_0.Block(bytes_0, bool_0, dict_0)
        var_0 = block_0.set_loader(list_0)
    except BaseException:
        pass

def test_case_12():
    try:
        block_0 = module_0.Block()
        var_0 = block_0.get_include_params()
        float_0 = 991.9492
        str_0 = ';J[0'
        block_1 = module_0.Block(float_0, str_0)
        var_1 = block_1.copy()
    except BaseException:
        pass

def test_case_13():
    try:
        dict_0 = {}
        str_0 = 'U(ri>}u%s1'
        str_1 = 'M{1;i\\/'
        str_2 = '/rztyic{r\\h~W>[(;N'
        bool_0 = False
        block_0 = module_0.Block(dict_0, bool_0)
        var_0 = block_0.is_block(str_2)
        int_0 = -2103
        block_1 = module_0.Block(str_0, str_1, int_0)
        block_2 = module_0.Block(block_1)
        var_1 = block_2.copy()
        block_3 = module_0.Block(dict_0, block_2)
        var_2 = block_3.serialize()
        var_3 = block_1.all_parents_static()
    except BaseException:
        pass

def test_case_14():
    try:
        bytes_0 = b'vW\xd5\xc4M\x9b}\xa2\xb1\xce\x17}\xbdG \xd2K\xbe'
        role_0 = module_1.Role(bytes_0)
        set_0 = set()
        list_0 = [set_0, role_0]
        block_0 = module_0.Block(role_0, set_0, list_0)
        var_0 = block_0.serialize()
    except BaseException:
        pass

def test_case_15():
    try:
        int_0 = -797
        list_0 = [int_0, int_0]
        dict_0 = {}
        tuple_0 = (int_0, list_0, dict_0)
        str_0 = '0242ac11-001f-7e8c-6c5b-00000000078'
        tuple_1 = (tuple_0, dict_0)
        block_0 = module_0.Block()
        block_1 = module_0.Block(tuple_0, tuple_1, int_0, block_0)
        bool_0 = False
        block_2 = module_0.Block()
        var_0 = block_2.set_loader(bool_0)
        var_1 = block_1.get_first_parent_include()
        var_2 = block_1.is_block(str_0)
        var_3 = block_1.get_include_params()
        var_4 = block_1.get_include_params()
        var_5 = block_1.all_parents_static()
        var_6 = block_0.serialize()
        set_0 = set()
        float_0 = 2345.02944
        var_7 = block_0.is_block(float_0)
        var_8 = block_1.filter_tagged_tasks(set_0)
        var_9 = block_1.copy()
        bytes_0 = b',\xc7\xfb\xeb\xdb\x02iUT`\xab\x13`\xd5\xa8'
        block_3 = module_0.Block(bytes_0)
        var_10 = block_3.copy(float_0)
        str_1 = 'filtering new block on tags'
        var_11 = block_0.deserialize(str_1)
    except BaseException:
        pass