# Automatically generated by Pynguin.
import ansible.module_utils.facts.system.distribution as module_0

def test_case_0():
    pass

def test_case_1():
    distribution_fact_collector_0 = module_0.DistributionFactCollector()
    var_0 = distribution_fact_collector_0.collect(distribution_fact_collector_0)

def test_case_2():
    distribution_fact_collector_0 = module_0.DistributionFactCollector()
    list_0 = [distribution_fact_collector_0, distribution_fact_collector_0]
    distribution_fact_collector_1 = module_0.DistributionFactCollector(list_0)
    str_0 = '}Qt!s@FKSa}a1X[G'
    bool_0 = True
    dict_0 = {str_0: distribution_fact_collector_1, str_0: distribution_fact_collector_0, str_0: bool_0, bool_0: str_0}
    int_0 = -753
    float_0 = 229.0
    distribution_files_0 = module_0.DistributionFiles(float_0)
    var_0 = distribution_files_0.parse_distribution_file_Slackware(list_0, str_0, dict_0, int_0)

def test_case_3():
    int_0 = 267
    str_0 = 'V\x0cfVP|/`b4'
    bytes_0 = b"d\xc2\x0e\x8c*\xba\xea'"
    distribution_0 = None
    float_0 = -1567.6682
    distribution_files_0 = module_0.DistributionFiles(float_0)
    var_0 = distribution_files_0.parse_distribution_file_OpenWrt(int_0, str_0, bytes_0, distribution_0)
    float_1 = -184.3487
    str_1 = 'No[jpw\r5;R<\x0c['
    bool_0 = True
    int_1 = -45
    tuple_0 = (str_1, bool_0, int_1)
    distribution_fact_collector_0 = module_0.DistributionFactCollector(tuple_0)
    var_1 = distribution_fact_collector_0.collect(float_1)

def test_case_4():
    str_0 = 'p2m\x0bd'
    distribution_files_0 = module_0.DistributionFiles(str_0)
    dict_0 = {distribution_files_0: str_0, distribution_files_0: distribution_files_0}
    set_0 = {distribution_files_0}
    distribution_fact_collector_0 = module_0.DistributionFactCollector()
    var_0 = distribution_files_0.parse_distribution_file_Mandriva(dict_0, set_0, distribution_fact_collector_0, set_0)

def test_case_5():
    int_0 = -1162
    str_0 = '--skip-broken'
    bool_0 = True
    float_0 = 888.917
    distribution_files_0 = module_0.DistributionFiles(float_0)
    var_0 = distribution_files_0.parse_distribution_file_Coreos(int_0, int_0, str_0, bool_0)

def test_case_6():
    str_0 = 'Wc.4|5h&\x0bW1r)P)'
    list_0 = []
    tuple_0 = ()
    bool_0 = None
    distribution_files_0 = module_0.DistributionFiles(tuple_0)
    var_0 = distribution_files_0.parse_distribution_file_ClearLinux(str_0, list_0, tuple_0, bool_0)

def test_case_7():
    str_0 = 'pd@t09ybOy'
    str_1 = 'f"7\r(QwdxJu#m3MT*\r'
    list_0 = [str_0, str_0, str_0]
    str_2 = None
    list_1 = []
    distribution_files_0 = module_0.DistributionFiles(list_1)
    var_0 = distribution_files_0.parse_distribution_file_CentOS(str_0, str_1, list_0, str_2)
    set_0 = set()
    str_3 = 'x\tK)"$8~'
    float_0 = -2014.37369
    distribution_files_1 = None
    dict_0 = {str_2: float_0, str_3: var_0, float_0: var_0, distribution_files_1: distribution_files_0}
    distribution_0 = module_0.Distribution(dict_0)
    var_1 = distribution_files_0.parse_distribution_file_Coreos(set_0, str_3, float_0, distribution_0)

def test_case_8():
    str_0 = 'E{T^HZ)8'
    distribution_0 = module_0.Distribution(str_0)
    var_0 = distribution_0.get_distribution_FreeBSD()

def test_case_9():
    list_0 = None
    dict_0 = None
    set_0 = {dict_0, dict_0, dict_0}
    set_1 = set()
    distribution_files_0 = module_0.DistributionFiles(set_1)
    var_0 = distribution_files_0.parse_distribution_file_Flatcar(list_0, dict_0, dict_0, set_0)

def test_case_10():
    int_0 = -850
    int_1 = -1162
    str_0 = '--skip-broken'
    bool_0 = True
    float_0 = 888.917
    distribution_files_0 = module_0.DistributionFiles(float_0)
    str_1 = '|]g411WI<K`9\x0b3'
    tuple_0 = ()
    distribution_files_1 = module_0.DistributionFiles(tuple_0)
    distribution_0 = module_0.Distribution(distribution_files_1)
    var_0 = distribution_files_0.parse_distribution_file_Debian(float_0, str_1, distribution_0, distribution_0)
    var_1 = distribution_files_0.parse_distribution_file_Coreos(int_0, int_1, str_0, bool_0)

def test_case_11():
    distribution_fact_collector_0 = None
    tuple_0 = (distribution_fact_collector_0,)
    distribution_files_0 = module_0.DistributionFiles(tuple_0)
    bool_0 = False
    bytes_0 = b'L \xb7\x1fU\xd0\xbdR\xe3o\x96D'
    distribution_0 = module_0.Distribution(bytes_0)
    tuple_1 = (distribution_files_0, bool_0, distribution_0)
    str_0 = 'GK7lV^F'
    tuple_2 = (tuple_1, distribution_files_0, distribution_0, str_0)
    set_0 = {tuple_2, bytes_0}
    str_1 = 'coreos'
    str_2 = '4\n_/&I8f%;Y'
    tuple_3 = ()
    distribution_1 = module_0.Distribution(tuple_3)
    distribution_files_1 = module_0.DistributionFiles(distribution_1)
    var_0 = distribution_files_1.parse_distribution_file_NA(set_0, str_1, str_2, tuple_0)