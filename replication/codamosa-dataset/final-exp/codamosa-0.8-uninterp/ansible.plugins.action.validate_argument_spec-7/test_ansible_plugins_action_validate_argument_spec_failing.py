# Automatically generated by Pynguin.
import ansible.plugins.action.validate_argument_spec as module_0

def test_case_0():
    try:
        dict_0 = None
        float_0 = -2949.0
        float_1 = -3187.813
        tuple_0 = (float_1,)
        list_0 = [tuple_0, tuple_0]
        int_0 = 1810
        str_0 = '_!aa"uF'
        bytes_0 = b'\x18~\xdc77\x81\xb9\xea.1v\x7f7\xf6'
        action_module_0 = module_0.ActionModule(list_0, tuple_0, int_0, str_0, int_0, bytes_0)
        var_0 = action_module_0.get_args_from_task_vars(dict_0, float_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'J'
        bool_0 = False
        int_0 = -2996
        dict_0 = {}
        action_module_0 = module_0.ActionModule(str_0, str_0, bool_0, int_0, str_0, dict_0)
        var_0 = action_module_0.run()
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '>S)A5b'
        bytes_0 = b'l\xee\xbd\x93\x04\xdd\x85\x9eh\x91\x87k\xd9\xf3\xf4\xdb'
        int_0 = -3727
        list_0 = [int_0]
        str_1 = 'OR.F@(!H.S|`k2/'
        bytes_1 = b'\xd36\x17-\xab\xd4\xc8QfR\x85e\x13'
        str_2 = 's2'
        tuple_0 = (str_2,)
        set_0 = set()
        bytes_2 = b'\xf2\x14z)\x1a\xc3\xa2{\x14\xe4&\xcc\x14\xa8*\xf2'
        str_3 = 'qfD#xZ|kSM|3# h'
        action_module_0 = module_0.ActionModule(str_1, bytes_1, tuple_0, set_0, bytes_2, str_3)
        tuple_1 = (action_module_0,)
        bool_0 = False
        str_4 = 'j2u{m;o~/n (U~/?'
        str_5 = '5$hlfE,57YsZj>R'
        action_module_1 = module_0.ActionModule(list_0, tuple_1, bool_0, str_4, action_module_0, str_5)
        var_0 = action_module_1.run(str_0, bytes_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'J'
        bool_0 = False
        set_0 = None
        dict_0 = {bool_0: set_0, set_0: set_0, set_0: set_0, bool_0: bool_0}
        list_0 = [str_0]
        float_0 = -3029.2
        bytes_0 = b'\x98B\xd2\xc5\xe4\xea\xde\x1a\n\xf4\xc3"4^\xe9\xe3\x0b'
        bool_1 = False
        tuple_0 = (bool_1,)
        bool_2 = False
        action_module_0 = module_0.ActionModule(float_0, bytes_0, tuple_0, bool_2, bytes_0, bytes_0)
        list_1 = [bool_0, bool_1, str_0]
        bytes_1 = b'\xdcs\xb4{\x05\xf0'
        action_module_1 = module_0.ActionModule(action_module_0, action_module_0, action_module_0, list_1, bytes_1, tuple_0)
        var_0 = action_module_1.get_args_from_task_vars(dict_0, list_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = ',\x0brL9I'
        bool_0 = False
        set_0 = None
        dict_0 = {bool_0: set_0, set_0: set_0, set_0: set_0, bool_0: bool_0}
        list_0 = [set_0, str_0]
        float_0 = -3029.2
        bytes_0 = b'\x98B\xd2\xc5\xe4\xea\xde\x1a\n\xf4\xc3"4^\xe9\xe3\x0b'
        bool_1 = False
        tuple_0 = (bool_1,)
        bool_2 = False
        action_module_0 = module_0.ActionModule(float_0, bytes_0, tuple_0, bool_2, bytes_0, bytes_0)
        list_1 = [bool_0, bool_1, str_0]
        bytes_1 = b'\xdcs\xb4{\x05\xf0'
        action_module_1 = module_0.ActionModule(action_module_0, action_module_0, action_module_0, list_1, bytes_1, tuple_0)
        var_0 = action_module_1.get_args_from_task_vars(dict_0, list_0)
    except BaseException:
        pass