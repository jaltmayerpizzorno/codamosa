# Automatically generated by Pynguin.
import ansible.module_utils.facts.hardware.freebsd as module_0

def test_case_0():
    try:
        free_b_s_d_hardware_collector_0 = module_0.FreeBSDHardwareCollector()
        int_0 = 50
        free_b_s_d_hardware_0 = module_0.FreeBSDHardware(int_0)
        var_0 = free_b_s_d_hardware_0.populate()
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = b'\xed\xe5\x8a'
        free_b_s_d_hardware_0 = module_0.FreeBSDHardware(bytes_0)
        var_0 = free_b_s_d_hardware_0.get_device_facts()
        var_1 = free_b_s_d_hardware_0.get_cpu_facts()
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b'+\xf0?[\x05\xe8\x02\x9c&\x13\x99))\xeeuGx\x98'
        list_0 = [bytes_0]
        free_b_s_d_hardware_0 = module_0.FreeBSDHardware(list_0)
        var_0 = free_b_s_d_hardware_0.get_device_facts()
        var_1 = free_b_s_d_hardware_0.get_memory_facts()
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'\xed\xe5\x8a'
        free_b_s_d_hardware_0 = module_0.FreeBSDHardware(bytes_0)
        var_0 = free_b_s_d_hardware_0.get_device_facts()
        var_1 = free_b_s_d_hardware_0.get_uptime_facts()
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'TASK: %s'
        bytes_0 = b'\x93`S'
        free_b_s_d_hardware_collector_0 = module_0.FreeBSDHardwareCollector(str_0, bytes_0)
        free_b_s_d_hardware_0 = module_0.FreeBSDHardware(free_b_s_d_hardware_collector_0)
        var_0 = free_b_s_d_hardware_0.get_dmi_facts()
    except BaseException:
        pass