# Automatically generated by Pynguin.
import flutils.codecs.b64 as module_0
import collections as module_1
import codecs as module_2

def test_case_0():
    try:
        str_0 = 'PX/>Hk<QN7jDN'
        tuple_0 = module_0.encode(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        complex_0 = None
        str_0 = "[j'CA}D"
        tuple_0 = module_0.encode(str_0)
        tuple_1 = module_0.decode(complex_0)
    except BaseException:
        pass

def test_case_2():
    try:
        byte_string_0 = None
        tuple_0 = module_0.decode(byte_string_0)
    except BaseException:
        pass

def test_case_3():
    try:
        dict_0 = {}
        str_0 = '_C3X=&}'
        user_string_0 = module_1.UserString(str_0)
        tuple_0 = module_0.decode(dict_0, user_string_0)
        str_1 = None
        tuple_1 = module_0.encode(str_1)
    except BaseException:
        pass

def test_case_4():
    try:
        module_0.register()
        bytes_0 = b'3\xb1'
        tuple_0 = module_0.decode(bytes_0)
        str_0 = 'normalize_path'
        tuple_1 = module_0.encode(str_0, str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'tuF;2\\i2\t@H2FT!8-'
        var_0 = module_2.getdecoder(str_0)
    except BaseException:
        pass