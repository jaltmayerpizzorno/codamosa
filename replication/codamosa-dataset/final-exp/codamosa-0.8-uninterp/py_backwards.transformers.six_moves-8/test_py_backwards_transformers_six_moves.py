# Automatically generated by Pynguin.
import py_backwards.transformers.six_moves as module_0
import typed_ast._ast3 as module_1

def test_case_0():
    pass

def test_case_1():
    float_0 = 4976.32759
    bool_0 = True
    tuple_0 = None
    tuple_1 = (tuple_0,)
    float_1 = -1016.02
    set_0 = {tuple_1}
    moved_attribute_0 = module_0.MovedAttribute(tuple_1, float_1, set_0)
    dict_0 = None
    str_0 = 'uses_fragment'
    bytes_0 = b'~\xd3Q\xbc%\x97\xdfi&\xda\xff\xb2y'
    str_1 = '#}<'
    bytes_1 = b':1\xea\xfat\xe6|g'
    moved_attribute_1 = module_0.MovedAttribute(dict_0, str_0, bytes_0, str_1, bytes_1)
    str_2 = 'copy_reg'
    str_3 = 'cWTaj|C;L]NP\x0cT3'
    dict_1 = {str_3: float_0}
    moved_module_0 = module_0.MovedModule(bool_0, str_2, dict_1)
    a_s_t_0 = module_1.AST()
    set_1 = set()
    bool_1 = False
    moved_attribute_2 = module_0.MovedAttribute(bool_0, set_1, a_s_t_0, bool_1)
    float_2 = 2256.0
    bytes_2 = None
    moved_attribute_3 = module_0.MovedAttribute(a_s_t_0, float_2, bytes_2)
    moved_attribute_4 = module_0.MovedAttribute(float_0, moved_module_0, moved_attribute_3, moved_module_0)
    a_s_t_1 = module_1.AST()
    six_moves_transformer_0 = module_0.SixMovesTransformer(a_s_t_1)
    moved_module_1 = module_0.MovedModule(moved_attribute_4, moved_module_0)
    tuple_2 = (six_moves_transformer_0,)
    moved_module_2 = module_0.MovedModule(moved_attribute_4, tuple_2)