# Automatically generated by Pynguin.
import ansible.modules.subversion as module_0

def test_case_0():
    try:
        str_0 = 'RD/Ch\\9P'
        subversion_0 = module_0.Subversion(str_0, str_0, str_0, str_0, str_0, str_0, str_0, str_0)
        var_0 = subversion_0.checkout()
    except BaseException:
        pass

def test_case_1():
    try:
        var_0 = None
        subversion_0 = module_0.Subversion(var_0, var_0, var_0, var_0, var_0, var_0, var_0, var_0)
        var_1 = subversion_0.get_remote_revision()
    except BaseException:
        pass

def test_case_2():
    try:
        set_0 = set()
        tuple_0 = (set_0,)
        int_0 = 1272
        dict_0 = {}
        bytes_0 = b'G\xdd\xde\xac\xba{\xe6\x05o\xe7|\xe0\xa8\xd0W\xa1\x02\xf8\xd6\xcb'
        bool_0 = True
        str_0 = '?ja}w'
        list_0 = [set_0]
        tuple_1 = (str_0, list_0, bool_0)
        bytes_1 = b'f\xce\xff\xc3\xf8b\xe6K\xa6,'
        subversion_0 = module_0.Subversion(tuple_0, int_0, dict_0, bytes_0, bool_0, tuple_1, int_0, bytes_1)
        var_0 = subversion_0.is_svn_repo()
    except BaseException:
        pass

def test_case_3():
    try:
        set_0 = set()
        tuple_0 = (set_0,)
        int_0 = 1272
        dict_0 = {}
        bytes_0 = b'G\xdd\xde\xac\xba{\xe6\x05o\xe7|\xe0\xa8\xd0W\xa1\x02\xf8\xd6\xcb'
        bool_0 = True
        str_0 = '?ja}w'
        list_0 = [set_0]
        tuple_1 = (str_0, list_0, bool_0)
        bytes_1 = b'f\xce\xff\xc3\xf8b\xe6K\xa6,'
        subversion_0 = module_0.Subversion(tuple_0, int_0, dict_0, bytes_0, bool_0, tuple_1, int_0, bytes_1)
        str_1 = 'b`S'
        str_2 = '89FV6]#u'
        subversion_1 = module_0.Subversion(int_0, dict_0, set_0, bool_0, int_0, str_1, str_2, tuple_0)
        var_0 = subversion_1.export()
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = '5t2hr'
        int_0 = 1779
        str_1 = "agetqdl1\rShr}\nJuy'"
        list_0 = [str_0]
        float_0 = 816.0
        int_1 = 12
        bool_0 = False
        str_2 = 'fNJ[\x0cpg'
        bytes_0 = b'\xd9\xb5\xf9x'
        str_3 = 'access_token'
        subversion_0 = module_0.Subversion(str_1, list_0, float_0, int_1, bool_0, str_2, bytes_0, str_3)
        var_0 = subversion_0.export(int_0)
    except BaseException:
        pass

def test_case_5():
    try:
        bytes_0 = b'78\xea\xfeU\xcb\x1f\x1c'
        dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
        float_0 = 1771.0
        tuple_0 = (bytes_0, dict_0, float_0)
        str_0 = 'J^^)qQ'
        bytes_1 = b'H\x0bYH\xe8\x84d'
        bytes_2 = b'\xb3\x8a`xF\xdd\xa5\xe7\x02\xde\xe1UQ'
        bool_0 = True
        bool_1 = True
        str_1 = '\nmQ:Um-H'
        subversion_0 = module_0.Subversion(str_0, bytes_1, str_0, float_0, bytes_2, bool_0, bool_1, str_1)
        str_2 = '$]8Gn<Vlq@WyoE'
        bool_2 = False
        int_0 = None
        bytes_3 = b"\xd9P'\x83\xcd+\x04\x93\xd7\x15\xca[\x9aM\x1e\x91\xf5"
        subversion_1 = module_0.Subversion(str_2, dict_0, bool_2, bool_1, dict_0, int_0, bytes_3, tuple_0)
        var_0 = subversion_0.switch()
    except BaseException:
        pass

def test_case_6():
    try:
        float_0 = 1000.0
        int_0 = 125
        str_0 = 'value of %s must be one of: %s, got: %s'
        list_0 = [int_0, int_0, str_0]
        str_1 = '$gy0so.Y2(dacW(bTz\n:'
        set_0 = set()
        subversion_0 = module_0.Subversion(float_0, int_0, list_0, int_0, str_1, set_0, set_0, float_0)
        var_0 = subversion_0.update()
    except BaseException:
        pass

def test_case_7():
    try:
        bytes_0 = b'[S\xd6\x80\xbe\x04\xf6\xea;\x15Z$C\xec\xe3'
        float_0 = -1734.0
        bool_0 = True
        bool_1 = True
        float_1 = 2317.883524
        int_0 = -741
        tuple_0 = ()
        tuple_1 = (bool_1, bool_0, tuple_0)
        list_0 = [tuple_1, bool_1, bool_1, bool_0]
        subversion_0 = module_0.Subversion(bytes_0, float_0, bool_0, bool_1, float_1, int_0, tuple_1, list_0)
        var_0 = subversion_0.revert()
    except BaseException:
        pass

def test_case_8():
    try:
        bytes_0 = b'\xbe\x82\xde6\xcf\xdf'
        str_0 = 'ansible.modules.subversion'
        dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: str_0}
        bool_0 = True
        bytes_1 = b'U\xad,H\xd3\x8e\x14@$#\xfc\x9b\x0f'
        subversion_0 = module_0.Subversion(bytes_0, dict_0, dict_0, bool_0, bytes_1, str_0, bool_0, bytes_0)
        var_0 = subversion_0.needs_update()
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'R/CK\\P'
        subversion_0 = module_0.Subversion(str_0, str_0, str_0, str_0, str_0, str_0, str_0, str_0)
        var_0 = subversion_0.has_local_mods()
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = 'RD/CK\\9P'
        subversion_0 = module_0.Subversion(str_0, str_0, str_0, str_0, str_0, str_0, str_0, str_0)
        var_0 = subversion_0.checkout(subversion_0)
    except BaseException:
        pass