# Automatically generated by Pynguin.
import ansible.plugins.inventory.advanced_host_list as module_0

def test_case_0():
    try:
        inventory_module_0 = module_0.InventoryModule()
        list_0 = []
        set_0 = set()
        str_0 = ':ix[aU,\rPd#'
        var_0 = inventory_module_0.verify_file(str_0)
        var_1 = inventory_module_0.parse(list_0, set_0, str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        inventory_module_0 = module_0.InventoryModule()
        var_0 = inventory_module_0.verify_file(inventory_module_0)
    except BaseException:
        pass

def test_case_2():
    try:
        inventory_module_0 = module_0.InventoryModule()
        var_0 = None
        str_0 = 'localhost'
        var_1 = inventory_module_0.parse(str_0, var_0, str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        int_0 = -2691
        float_0 = 2220.0
        inventory_module_0 = module_0.InventoryModule()
        var_0 = inventory_module_0.parse(int_0, float_0, float_0)
    except BaseException:
        pass

def test_case_4():
    try:
        inventory_module_0 = module_0.InventoryModule()
        var_0 = None
        str_0 = '[V\x0c<4X'
        var_1 = inventory_module_0.parse(str_0, var_0, str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        inventory_module_0 = module_0.InventoryModule()
        var_0 = None
        str_0 = ',Zy0\x0c\x0c@hy*7W8gd|$'
        var_1 = inventory_module_0.parse(str_0, var_0, str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        bool_0 = True
        list_0 = [bool_0, bool_0]
        inventory_module_0 = module_0.InventoryModule()
        inventory_module_1 = module_0.InventoryModule()
        str_0 = ''
        var_0 = inventory_module_1.parse(list_0, str_0, str_0)
        list_1 = []
        set_0 = set()
        str_1 = '"%'
        var_1 = inventory_module_1.parse(list_1, set_0, str_1)
    except BaseException:
        pass

def test_case_7():
    try:
        inventory_module_0 = module_0.InventoryModule()
        var_0 = None
        str_0 = '\n[ERROR]: %s'
        var_1 = inventory_module_0.parse(str_0, var_0, str_0)
    except BaseException:
        pass