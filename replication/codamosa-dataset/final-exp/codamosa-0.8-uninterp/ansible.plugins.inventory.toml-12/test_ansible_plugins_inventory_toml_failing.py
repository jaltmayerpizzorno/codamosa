# Automatically generated by Pynguin.
import ansible.plugins.inventory.toml as module_0

def test_case_0():
    try:
        str_0 = None
        var_0 = module_0.toml_dumps(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        dict_0 = {}
        var_0 = module_0.convert_yaml_objects_to_native(dict_0)
        inventory_module_0 = module_0.InventoryModule()
        float_0 = 420.0
        inventory_module_1 = module_0.InventoryModule()
        var_1 = inventory_module_1.verify_file(float_0)
        list_0 = []
        inventory_module_2 = module_0.InventoryModule()
        var_2 = inventory_module_0.verify_file(list_0)
        float_1 = 60.0
        var_3 = module_0.toml_dumps(float_1)
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b'W\xf0`@B\xd8V\xa2\x0e\xc2ai'
        inventory_module_0 = module_0.InventoryModule()
        var_0 = inventory_module_0.verify_file(inventory_module_0)
        list_0 = [bytes_0]
        var_1 = module_0.convert_yaml_objects_to_native(list_0)
        var_2 = module_0.convert_yaml_objects_to_native(bytes_0)
        tuple_0 = ()
        float_0 = -3216.9279
        set_0 = {float_0, tuple_0}
        str_0 = 'TYPE'
        var_3 = inventory_module_0.parse(set_0, str_0, str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bool_0 = False
        inventory_module_0 = module_0.InventoryModule()
        var_0 = inventory_module_0.parse(bool_0, inventory_module_0, bool_0)
    except BaseException:
        pass

def test_case_4():
    try:
        inventory_module_0 = module_0.InventoryModule()
        str_0 = '\tX++GcPm9'
        dict_0 = {str_0: str_0}
        bytes_0 = b'\x9ana'
        inventory_module_1 = module_0.InventoryModule()
        var_0 = inventory_module_1.verify_file(bytes_0)
        int_0 = -3655
        inventory_module_2 = module_0.InventoryModule()
        var_1 = module_0.convert_yaml_objects_to_native(dict_0)
        inventory_module_3 = module_0.InventoryModule()
        var_2 = module_0.toml_dumps(int_0)
    except BaseException:
        pass