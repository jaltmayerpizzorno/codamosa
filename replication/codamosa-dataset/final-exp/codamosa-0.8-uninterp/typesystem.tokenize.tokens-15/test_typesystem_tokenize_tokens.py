# Automatically generated by Pynguin.
import typesystem.tokenize.tokens as module_0

def test_case_0():
    pass

def test_case_1():
    dict_0 = {}
    list_0 = [dict_0, dict_0, dict_0, dict_0]
    dict_token_0 = module_0.DictToken(*list_0)

def test_case_2():
    str_0 = ''
    int_0 = -881
    int_1 = 1775
    token_0 = module_0.Token(str_0, int_0, int_1)
    str_1 = token_0.__repr__()
    int_2 = -1380
    int_3 = -1753
    scalar_token_0 = module_0.ScalarToken(int_1, int_2, int_3)
    any_0 = scalar_token_0.__hash__()

def test_case_3():
    int_0 = 1
    int_1 = 0
    int_2 = 3
    scalar_token_0 = module_0.ScalarToken(int_0, int_1, int_2)
    scalar_token_1 = module_0.ScalarToken(int_0, int_1, int_2)
    scalar_token_2 = module_0.ScalarToken(int_0, int_1, int_2)
    scalar_token_3 = module_0.ScalarToken(int_0, int_1, int_2)
    int_3 = 2
    scalar_token_4 = module_0.ScalarToken(int_3, int_1, int_2)
    var_0 = scalar_token_3 == scalar_token_4
    scalar_token_5 = module_0.ScalarToken(int_0, int_0, int_2)
    scalar_token_6 = module_0.ScalarToken(int_0, int_1, int_2)
    var_1 = scalar_token_5 == scalar_token_6
    int_4 = 4
    scalar_token_7 = module_0.ScalarToken(int_0, int_1, int_4)
    scalar_token_8 = module_0.ScalarToken(int_0, int_1, int_2)
    var_2 = scalar_token_7 == scalar_token_8