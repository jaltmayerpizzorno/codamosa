# Automatically generated by Pynguin.
import typing as module_0
import requests_toolbelt.multipart.encoder as module_1
import httpie.uploads as module_2
import httpie.cli.dicts as module_3
import requests.models as module_4

def test_case_0():
    pass

def test_case_1():
    iterable_0 = None
    list_0 = []
    i_o_0 = module_0.IO()
    var_0 = i_o_0.__enter__()
    multipart_encoder_0 = module_1.MultipartEncoder(list_0, var_0)
    chunked_upload_stream_0 = module_2.ChunkedUploadStream(iterable_0, multipart_encoder_0)

def test_case_2():
    list_0 = []
    multipart_encoder_0 = module_1.MultipartEncoder(list_0)
    chunked_multipart_upload_stream_0 = module_2.ChunkedMultipartUploadStream(multipart_encoder_0)
    iterable_0 = chunked_multipart_upload_stream_0.__iter__()
    str_0 = 'J0^BJ"Z]G]O[(Ajee'
    bytes_0 = b'\x07;\x11\x82\x8c\xf1\x1a4\xdd\xd4\xf6z\xee\xda\xb9V\x10'
    var_0 = module_2.prepare_request_body(str_0, bytes_0, bytes_0)
    iterable_1 = chunked_multipart_upload_stream_0.__iter__()
    iterable_2 = chunked_multipart_upload_stream_0.__iter__()
    iterable_3 = chunked_multipart_upload_stream_0.__iter__()

def test_case_3():
    bytes_0 = b'\x932'
    callable_0 = None
    var_0 = module_2.prepare_request_body(bytes_0, callable_0)

def test_case_4():
    float_0 = -1979.13084
    bytes_0 = b'\xec\x00\xf3\xae{\xaf\x85'
    request_data_dict_0 = None
    var_0 = module_2.prepare_request_body(bytes_0, request_data_dict_0)
    callable_0 = None
    dict_0 = {}
    multipart_request_data_dict_0 = module_3.MultipartRequestDataDict(**dict_0)
    tuple_0 = module_2.get_multipart_data_and_content_type(multipart_request_data_dict_0)
    chunked_upload_stream_0 = module_2.ChunkedUploadStream(float_0, callable_0)
    multipart_request_data_dict_1 = module_3.MultipartRequestDataDict()
    dict_1 = None
    chunked_upload_stream_1 = module_2.ChunkedUploadStream(dict_1, callable_0)
    iterable_0 = chunked_upload_stream_0.__iter__()
    callable_1 = None
    iterable_1 = chunked_upload_stream_0.__iter__()
    int_0 = -2079
    str_0 = 'fy\rgI~mFC{:7Bu\\J'
    var_1 = module_2.prepare_request_body(bytes_0, callable_1, int_0, str_0)
    tuple_1 = module_2.get_multipart_data_and_content_type(multipart_request_data_dict_1)

def test_case_5():
    set_0 = None
    str_0 = 'Rb6\\?\tgGcE=I'
    dict_0 = {str_0: str_0, str_0: set_0}
    request_data_dict_0 = module_3.RequestDataDict(**dict_0)
    multipart_encoder_0 = module_1.MultipartEncoder(request_data_dict_0)
    tuple_0 = None
    optional_0 = None
    chunked_multipart_upload_stream_0 = module_2.ChunkedMultipartUploadStream(multipart_encoder_0)
    var_0 = module_2.prepare_request_body(multipart_encoder_0, tuple_0, optional_0, chunked_multipart_upload_stream_0)
    chunked_multipart_upload_stream_1 = module_2.ChunkedMultipartUploadStream(multipart_encoder_0)
    chunked_multipart_upload_stream_2 = module_2.ChunkedMultipartUploadStream(multipart_encoder_0)

def test_case_6():
    multipart_request_data_dict_0 = module_3.MultipartRequestDataDict()
    str_0 = '--multipart'
    tuple_0 = module_2.get_multipart_data_and_content_type(multipart_request_data_dict_0, str_0)

def test_case_7():
    multipart_request_data_dict_0 = module_3.MultipartRequestDataDict()
    str_0 = 'tls1.2'
    tuple_0 = module_2.get_multipart_data_and_content_type(multipart_request_data_dict_0, str_0, str_0)

def test_case_8():
    bytes_0 = b'4 \x1a\xa3.@\xbbH\x07\xe1\xbfp\x06\xd5'
    int_0 = 150
    chunked_upload_stream_0 = module_2.ChunkedUploadStream(bytes_0, int_0)
    iterable_0 = chunked_upload_stream_0.__iter__()
    callable_0 = None
    str_0 = 'l/H%<UjB'
    var_0 = module_2.prepare_request_body(str_0, callable_0, int_0, bytes_0, iterable_0)
    iterable_1 = None
    callable_1 = None
    chunked_upload_stream_1 = module_2.ChunkedUploadStream(iterable_1, callable_1)
    chunked_upload_stream_2 = module_2.ChunkedUploadStream(iterable_1, callable_1)
    prepared_request_0 = module_4.PreparedRequest()