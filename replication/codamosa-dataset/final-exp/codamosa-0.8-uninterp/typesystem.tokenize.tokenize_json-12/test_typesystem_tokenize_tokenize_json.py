# Automatically generated by Pynguin.
import typesystem.tokenize.tokenize_json as module_0
import typesystem.tokenize.tokens as module_1

def test_case_0():
    pass

def test_case_1():
    str_0 = '{"name": "Carol", "age": 42}'
    token_0 = module_0.tokenize_json(str_0)

def test_case_2():
    str_0 = '{"a": "alpha", "beta": 2, "gama": [1, 2, 3]}'
    token_0 = module_0.tokenize_json(str_0)
    var_0 = type(token_0)
    token_1 = module_0.tokenize_json(str_0)

def test_case_3():
    str_0 = 'true'
    token_0 = module_0.tokenize_json(str_0)
    token_1 = module_0.tokenize_json(str_0)

def test_case_4():
    str_0 = '["foo", {"bar":["baz", null, 1.0, 2]}]'
    token_0 = module_0.tokenize_json(str_0)
    token_1 = module_0.tokenize_json(str_0)

def test_case_5():
    str_0 = 'true'
    token_0 = module_0.tokenize_json(str_0)
    bool_0 = True
    int_0 = 0
    int_1 = 3
    scalar_token_0 = module_1.ScalarToken(bool_0, int_0, int_1, str_0)
    str_1 = 'false'
    token_1 = module_0.tokenize_json(str_1)
    bool_1 = False
    int_2 = 4
    scalar_token_1 = module_1.ScalarToken(bool_1, bool_1, int_2, str_1)
    str_2 = 'null'
    token_2 = module_0.tokenize_json(str_2)
    var_0 = None
    scalar_token_2 = module_1.ScalarToken(var_0, bool_1, int_1, str_2)
    str_3 = '3'
    token_3 = module_0.tokenize_json(str_3)
    scalar_token_3 = module_1.ScalarToken(int_1, bool_1, bool_0, str_3)
    str_4 = '3.14'
    token_4 = module_0.tokenize_json(str_4)
    float_0 = 3.14
    scalar_token_4 = module_1.ScalarToken(float_0, bool_1, int_2, str_4)

def test_case_6():
    str_0 = '{}'
    token_0 = module_0.tokenize_json(str_0)
    token_1 = module_0.tokenize_json(str_0)

def test_case_7():
    str_0 = 'Basic validation'
    var_0 = print(str_0)
    str_1 = '{\n        "key1": "str_value",\n        "key2": "key1"\n    }'
    token_0 = module_0.tokenize_json(str_1)

def test_case_8():
    str_0 = '{"a":2}'
    token_0 = module_0.tokenize_json(str_0)

def test_case_9():
    str_0 = '{}'
    token_0 = module_0.tokenize_json(str_0)
    str_1 = '{}'
    token_1 = module_0.tokenize_json(str_1)
    str_2 = '{"a" : 1}'
    token_2 = module_0.tokenize_json(str_2)