# Automatically generated by Pynguin.
import ansible.plugins.shell.powershell as module_0

def test_case_0():
    try:
        str_0 = '|_'
        dict_0 = {str_0: str_0}
        dict_1 = {}
        shell_module_0 = module_0.ShellModule()
        var_0 = shell_module_0.env_prefix()
        list_0 = [dict_1, str_0, dict_1, str_0]
        shell_module_1 = module_0.ShellModule()
        var_1 = shell_module_1.checksum(dict_0, *list_0, **dict_1)
        dict_2 = {}
        shell_module_2 = module_0.ShellModule()
        var_2 = shell_module_2.path_has_trailing_slash(dict_2)
    except BaseException:
        pass

def test_case_1():
    try:
        bool_0 = None
        list_0 = [bool_0, bool_0]
        shell_module_0 = module_0.ShellModule()
        var_0 = shell_module_0.join_path(*list_0)
        set_0 = {bool_0}
        float_0 = None
        bool_1 = True
        tuple_0 = (float_0, set_0, bool_1)
        shell_module_1 = module_0.ShellModule()
        var_1 = shell_module_1.mkdtemp(set_0, tuple_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b'x<\xc9\xa3j\x91=D#\xd9S\x00(o'
        shell_module_0 = module_0.ShellModule()
        var_0 = shell_module_0.get_remote_filename(bytes_0)
    except BaseException:
        pass

def test_case_3():
    try:
        shell_module_0 = module_0.ShellModule()
        shell_module_1 = module_0.ShellModule()
        float_0 = -1742.32
        var_0 = shell_module_0.get_remote_filename(float_0)
    except BaseException:
        pass

def test_case_4():
    try:
        list_0 = None
        shell_module_0 = module_0.ShellModule()
        var_0 = shell_module_0.path_has_trailing_slash(list_0)
    except BaseException:
        pass

def test_case_5():
    try:
        float_0 = -2768.6302
        list_0 = [float_0, float_0, float_0, float_0]
        shell_module_0 = module_0.ShellModule()
        var_0 = shell_module_0.exists(list_0)
        set_0 = {float_0}
        shell_module_1 = None
        shell_module_2 = module_0.ShellModule()
        var_1 = shell_module_2.chmod(set_0, shell_module_1)
    except BaseException:
        pass

def test_case_6():
    try:
        float_0 = 5227.3
        bytes_0 = b'L\xf1S\x92\xfbTf\x19\x91 \x14\xfd\xe5\x95|"'
        shell_module_0 = module_0.ShellModule()
        var_0 = shell_module_0.chown(float_0, bytes_0)
    except BaseException:
        pass

def test_case_7():
    try:
        shell_module_0 = module_0.ShellModule()
        shell_module_1 = module_0.ShellModule()
        var_0 = shell_module_1.exists(shell_module_0)
        bool_0 = True
        float_0 = 1079.355
        int_0 = -1286
        var_1 = shell_module_0.set_user_facl(bool_0, float_0, int_0)
    except BaseException:
        pass

def test_case_8():
    try:
        tuple_0 = ()
        shell_module_0 = module_0.ShellModule()
        var_0 = shell_module_0.remove(tuple_0, shell_module_0)
        str_0 = None
        set_0 = None
        shell_module_1 = module_0.ShellModule()
        bytes_0 = b'%\xab\x08r\x11\xd3\xb6@\xd6o\xa3\xde\xec7\x8eg\xad\x03'
        dict_0 = {set_0: str_0, tuple_0: str_0}
        var_1 = shell_module_1.build_module_command(bytes_0, dict_0, str_0)
    except BaseException:
        pass

def test_case_9():
    try:
        shell_module_0 = module_0.ShellModule()
        var_0 = shell_module_0.mkdtemp()
    except BaseException:
        pass

def test_case_10():
    try:
        shell_module_0 = module_0.ShellModule()
        str_0 = None
        set_0 = None
        shell_module_1 = module_0.ShellModule()
        var_0 = shell_module_1.remove(shell_module_1)
        var_1 = shell_module_1.build_module_command(str_0, set_0, set_0)
    except BaseException:
        pass

def test_case_11():
    try:
        tuple_0 = ()
        bool_0 = False
        float_0 = None
        shell_module_0 = module_0.ShellModule()
        var_0 = shell_module_0.wrap_for_exec(float_0)
        shell_module_1 = module_0.ShellModule()
        var_1 = shell_module_1.remove(tuple_0, bool_0)
        str_0 = None
        set_0 = None
        shell_module_2 = module_0.ShellModule()
        var_2 = shell_module_2.build_module_command(str_0, set_0, set_0)
    except BaseException:
        pass

def test_case_12():
    try:
        shell_module_0 = module_0.ShellModule()
        shell_module_1 = module_0.ShellModule()
        var_0 = shell_module_1.exists(shell_module_0)
        shell_module_2 = module_0.ShellModule()
        var_1 = shell_module_0.mkdtemp(shell_module_1)
    except BaseException:
        pass

def test_case_13():
    try:
        shell_module_0 = module_0.ShellModule()
        bool_0 = False
        str_0 = None
        shell_module_1 = module_0.ShellModule()
        bool_1 = True
        var_0 = shell_module_1.remove(bool_1)
        str_1 = 'hN'
        shell_module_2 = module_0.ShellModule()
        var_1 = shell_module_2.build_module_command(str_0, bool_0, str_1)
    except BaseException:
        pass

def test_case_14():
    try:
        shell_module_0 = module_0.ShellModule()
        var_0 = frozenset()
        str_0 = 'A-;4+eMa"\n'
        str_1 = '#!powershell'
        var_1 = None
        var_2 = shell_module_0.build_module_command(str_0, str_1, str_0, var_1)
        dict_0 = None
        str_2 = '8A/iU:,|'
        bytes_0 = b'\xc2Cm\xb6\xb2>6\xce\xdc\x19\xd5a'
        var_3 = shell_module_0.mkdtemp(dict_0, dict_0, bytes_0, bytes_0)
        list_0 = [str_2, var_1]
        var_4 = shell_module_0.get_remote_filename(list_0)
    except BaseException:
        pass

def test_case_15():
    try:
        shell_module_0 = module_0.ShellModule()
        str_0 = '/path/to/'
        var_0 = shell_module_0.path_has_trailing_slash(str_0)
        str_1 = '\\path\\to'
        var_1 = shell_module_0.path_has_trailing_slash(str_1)
    except BaseException:
        pass