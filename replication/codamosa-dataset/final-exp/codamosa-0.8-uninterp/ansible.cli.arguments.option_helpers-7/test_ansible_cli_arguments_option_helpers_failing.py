# Automatically generated by Pynguin.
import ansible.cli.arguments.option_helpers as module_0
import argparse as module_1

def test_case_0():
    try:
        str_0 = "T'2N&"
        sorting_help_formatter_0 = module_0.SortingHelpFormatter(str_0)
        var_0 = sorting_help_formatter_0.add_arguments(sorting_help_formatter_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = b'\x97\xf3,'
        dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
        list_0 = []
        tuple_0 = (dict_0, dict_0, list_0, dict_0)
        bool_0 = False
        unrecognized_argument_0 = module_0.UnrecognizedArgument(dict_0, tuple_0, list_0, bool_0)
        var_0 = module_0.add_subset_options(unrecognized_argument_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '\x0c'
        bool_0 = False
        int_0 = 2718
        sorting_help_formatter_0 = module_0.SortingHelpFormatter(bool_0, int_0)
        bool_1 = True
        set_0 = None
        tuple_0 = (set_0,)
        str_1 = 'dx\nl6OR'
        ansible_version_0 = module_0.AnsibleVersion(bool_1, tuple_0, str_1)
        unrecognized_argument_0 = module_0.UnrecognizedArgument(ansible_version_0, tuple_0)
        list_0 = []
        int_1 = 4089
        tuple_1 = (list_0, int_1)
        bytes_0 = b'\xa7\xcbI\xfb?'
        str_2 = 'tJd14W@GnX]]ob>sG'
        int_2 = 956
        unrecognized_argument_1 = module_0.UnrecognizedArgument(tuple_1, bytes_0, str_2, list_0, int_2)
        var_0 = unrecognized_argument_1.__call__(str_0, sorting_help_formatter_0, unrecognized_argument_0)
    except BaseException:
        pass

def test_case_3():
    try:
        int_0 = 879
        list_0 = []
        bytes_0 = b'K\xcb\xbc'
        prepend_list_action_0 = module_0.PrependListAction(int_0, list_0, bytes_0, bytes_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'P,$0}fN#'
        dict_0 = {str_0: str_0}
        list_0 = [str_0]
        ansible_version_0 = module_0.AnsibleVersion(dict_0, list_0, dict_0)
        sorting_help_formatter_0 = module_0.SortingHelpFormatter(list_0)
        prepend_list_action_0 = module_0.PrependListAction(ansible_version_0, list_0, sorting_help_formatter_0)
        var_0 = module_0.ensure_value(str_0, str_0, prepend_list_action_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'P,$0}fN#'
        dict_0 = {str_0: str_0}
        list_0 = [str_0]
        ansible_version_0 = module_0.AnsibleVersion(dict_0, list_0, dict_0)
        sorting_help_formatter_0 = module_0.SortingHelpFormatter(list_0)
        prepend_list_action_0 = module_0.PrependListAction(ansible_version_0, list_0, sorting_help_formatter_0)
        bool_0 = True
        int_0 = 3664
        bytes_0 = b'\xeb\x87\x8b\xa0I\xf0}\xdf\xf4\xfe:\xcf\xb0\xdf\xd5\x1a\xeb'
        float_0 = 2.0
        var_0 = prepend_list_action_0.__call__(bool_0, int_0, bytes_0, float_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'Error creating AnsibleVaultEncryptedUnicode, invalid vault (%s) provided'
        list_0 = [str_0, str_0]
        bytes_0 = None
        var_0 = module_0.ensure_value(str_0, list_0, bytes_0)
    except BaseException:
        pass

def test_case_7():
    try:
        var_0 = module_0.version()
        float_0 = 820.4361596521702
        bytes_0 = b'\x1c*0\xf7\x0e\x8e\xf0\x8d'
        int_0 = 0
        var_1 = module_0.unfrack_path(int_0)
        prepend_list_action_0 = module_0.PrependListAction(int_0, bytes_0, float_0)
        complex_0 = None
        var_2 = module_0.maybe_unfrack_path(complex_0)
        unrecognized_argument_0 = None
        var_3 = module_0.add_runas_prompt_options(unrecognized_argument_0)
    except BaseException:
        pass

def test_case_8():
    try:
        var_0 = module_0.version()
        ansible_version_0 = None
        var_1 = module_0.add_async_options(ansible_version_0)
    except BaseException:
        pass

def test_case_9():
    try:
        bytes_0 = b'\xb7\xe4\xe0z\xab`\xf2~$\x0f\x19u\x88z\xa47\x0c'
        list_0 = [bytes_0, bytes_0]
        var_0 = module_0.add_basedir_options(list_0)
    except BaseException:
        pass

def test_case_10():
    try:
        bytes_0 = b'\xa8t_v`r\xe5'
        sorting_help_formatter_0 = module_0.SortingHelpFormatter(bytes_0)
        dict_0 = {sorting_help_formatter_0: sorting_help_formatter_0, sorting_help_formatter_0: sorting_help_formatter_0, sorting_help_formatter_0: bytes_0}
        prepend_list_action_0 = None
        tuple_0 = (dict_0, prepend_list_action_0)
        var_0 = module_0.add_meta_options(tuple_0)
    except BaseException:
        pass

def test_case_11():
    try:
        int_0 = 1246
        bytes_0 = b'#f[\x05\x15d'
        tuple_0 = (int_0, bytes_0)
        dict_0 = {tuple_0: tuple_0, bytes_0: int_0}
        var_0 = module_0.add_module_options(dict_0)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = 'wp+1{@9'
        var_0 = module_0.version(str_0)
        bytes_0 = b'\x16G\xc0I%\xf5\xb8'
        float_0 = 47.01184
        list_0 = [float_0, float_0, var_0, bytes_0]
        var_1 = module_0.add_runas_options(list_0)
    except BaseException:
        pass

def test_case_13():
    try:
        bytes_0 = b'~h\xae\x9c9{\xd9\xed\x18\x1e`}8\xc4'
        var_0 = module_0.version()
        set_0 = {bytes_0, bytes_0}
        var_1 = module_0.add_runas_prompt_options(set_0)
    except BaseException:
        pass

def test_case_14():
    try:
        var_0 = module_0.unfrack_path()
        tuple_0 = ()
        var_1 = module_0.add_runtask_options(tuple_0)
    except BaseException:
        pass

def test_case_15():
    try:
        bytes_0 = b'\xbf\x11\x14'
        ansible_version_0 = None
        prepend_list_action_0 = None
        set_0 = {prepend_list_action_0, bytes_0, prepend_list_action_0, bytes_0}
        str_0 = ':^>2rsl1zX354y]W'
        tuple_0 = (str_0,)
        str_1 = '>oXdpUi[]'
        str_2 = 'n'
        unrecognized_argument_0 = module_0.UnrecognizedArgument(tuple_0, str_1, prepend_list_action_0, str_2)
        unrecognized_argument_1 = module_0.UnrecognizedArgument(ansible_version_0, set_0, unrecognized_argument_0)
        bool_0 = False
        int_0 = -3458
        bool_1 = None
        prepend_list_action_1 = module_0.PrependListAction(unrecognized_argument_1, ansible_version_0, bool_0, int_0, bool_1, set_0)
    except BaseException:
        pass

def test_case_16():
    try:
        str_0 = 'SL7EZ_yX9+/t\x0cy`;'
        set_0 = None
        sorting_help_formatter_0 = None
        str_1 = 'bRt++VIPAyk3h>>GY'
        int_0 = 59
        dict_0 = {str_0: str_0}
        float_0 = 789.113914
        bytes_0 = b'l\xe1+H\x02\xd5\xd8\xda \xf0\xac\xf5\xd0\x17\x96Q]\xe9\x16I'
        bool_0 = True
        ansible_version_0 = module_0.AnsibleVersion(str_0, bytes_0, bool_0, float_0)
        ansible_version_1 = module_0.AnsibleVersion(int_0, int_0, dict_0, float_0, ansible_version_0)
        var_0 = ansible_version_1.__call__(set_0, sorting_help_formatter_0, str_1)
    except BaseException:
        pass

def test_case_17():
    try:
        str_0 = None
        var_0 = module_0.version(str_0)
        float_0 = -1552.412
        var_1 = module_0.add_tasknoplay_options(float_0)
    except BaseException:
        pass

def test_case_18():
    try:
        ansible_version_0 = None
        set_0 = {ansible_version_0}
        int_0 = -1170
        sorting_help_formatter_0 = module_0.SortingHelpFormatter(set_0, int_0)
        var_0 = module_0.unfrack_path(sorting_help_formatter_0)
        tuple_0 = ()
        int_1 = -2359
        var_1 = module_0.version()
        float_0 = 1190.9689125256116
        float_1 = 833.0131171073218
        int_2 = 0
        var_2 = module_0.unfrack_path(int_2)
        int_3 = 499
        bytes_0 = b'O%N\x1b\x8a\x16i'
        prepend_list_action_0 = module_0.PrependListAction(int_3, bytes_0, float_0)
        str_0 = 'p\x0bJU3Q9|Ko4n<X'
        var_3 = sorting_help_formatter_0.add_arguments(tuple_0)
        set_1 = {int_1, float_1}
        dict_0 = {int_2: var_2}
        str_1 = 'b\\ Q(@8plt$'
        prepend_list_action_1 = module_0.PrependListAction(set_1, dict_0, str_0, str_1)
    except BaseException:
        pass

def test_case_19():
    try:
        tuple_0 = ()
        str_0 = 'u\x0cS/hR;t9'
        var_0 = module_0.create_base_parser(str_0)
        var_1 = module_0.version()
        sorting_help_formatter_0 = module_0.SortingHelpFormatter(tuple_0)
        var_2 = module_0.add_tasknoplay_options(sorting_help_formatter_0)
    except BaseException:
        pass

def test_case_20():
    try:
        int_0 = -2359
        str_0 = 'u\x0cS/hR;t9'
        var_0 = module_0.create_base_parser(str_0)
        var_1 = module_0.version()
        float_0 = 833.01
        bytes_0 = b'*\xf7\x8e\xf0\x8d'
        int_1 = 0
        var_2 = module_0.unfrack_path(int_1)
        prepend_list_action_0 = module_0.PrependListAction(int_1, bytes_0, float_0)
        set_0 = {int_0, float_0}
        str_1 = 'D}Y%T%'
        int_2 = 12
        sorting_help_formatter_0 = module_0.SortingHelpFormatter(str_1, int_2)
        var_3 = module_0.add_runas_prompt_options(set_0, sorting_help_formatter_0)
    except BaseException:
        pass

def test_case_21():
    try:
        int_0 = -2359
        str_0 = 'u\x0cS/hR;t9'
        int_1 = -684
        bool_0 = True
        set_0 = {bool_0, int_1, int_0}
        argument_parser_0 = module_1.ArgumentParser(int_1, set_0, str_0)
        var_0 = module_0.add_module_options(argument_parser_0)
        var_1 = module_0.create_base_parser(str_0)
        var_2 = module_0.version()
        float_0 = 833.01
        bytes_0 = b'*\xf7\x8e\xf0\x8d'
        int_2 = 0
        var_3 = module_0.unfrack_path(int_2)
        prepend_list_action_0 = module_0.PrependListAction(int_2, bytes_0, float_0)
        set_1 = {int_0, float_0}
        dict_0 = {int_2: var_3}
        str_1 = 'b\\ vQ(@8plt$'
        str_2 = 'uo!lwBk/r'
        list_0 = None
        unrecognized_argument_0 = module_0.UnrecognizedArgument(list_0, float_0, str_2)
        prepend_list_action_1 = module_0.PrependListAction(set_1, dict_0, str_1, str_1)
    except BaseException:
        pass

def test_case_22():
    try:
        int_0 = -2259
        float_0 = 833.846942426704
        sorting_help_formatter_0 = module_0.SortingHelpFormatter(int_0, float_0)
        var_0 = module_0.add_runtask_options(sorting_help_formatter_0)
    except BaseException:
        pass

def test_case_23():
    try:
        tuple_0 = ()
        str_0 = 'u\x0cS/hR;t9'
        var_0 = module_0.create_base_parser(str_0)
        var_1 = module_0.version()
        float_0 = 831.1634279154799
        bytes_0 = b'\xd3*\xf7\x8e\xf0\x8d'
        int_0 = 5
        var_2 = module_0.unfrack_path(int_0)
        prepend_list_action_0 = module_0.PrependListAction(int_0, bytes_0, float_0)
        set_0 = {int_0, float_0}
        str_1 = 'uo!lwBk/r'
        bytes_1 = b'?-r'
        sorting_help_formatter_0 = module_0.SortingHelpFormatter(bytes_1)
        str_2 = 'offline'
        dict_0 = {str_2: str_1}
        str_3 = '?'
        int_1 = 794
        prepend_list_action_1 = module_0.PrependListAction(sorting_help_formatter_0, dict_0, str_3, tuple_0, int_1)
        var_3 = module_0.create_base_parser(tuple_0, prepend_list_action_1)
        float_1 = -2140.18129
        var_4 = module_0.ensure_value(set_0, float_1, tuple_0)
    except BaseException:
        pass