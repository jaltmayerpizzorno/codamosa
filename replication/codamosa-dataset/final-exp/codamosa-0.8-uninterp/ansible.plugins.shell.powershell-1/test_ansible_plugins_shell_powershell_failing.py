# Automatically generated by Pynguin.
import ansible.plugins.shell.powershell as module_0

def test_case_0():
    try:
        shell_module_0 = module_0.ShellModule()
        list_0 = []
        shell_module_1 = module_0.ShellModule()
        var_0 = shell_module_1.join_path(*list_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'y-X\x0bvSNM4yeFr'
        shell_module_0 = module_0.ShellModule()
        var_0 = shell_module_0.path_has_trailing_slash(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        shell_module_0 = module_0.ShellModule()
        var_0 = shell_module_0.remove(shell_module_0)
        tuple_0 = None
        shell_module_1 = module_0.ShellModule()
        var_1 = shell_module_1.remove(tuple_0)
        bytes_0 = b'\xa7\x94\x01\x90\x0fW\x9f$#\x01\xd3\xc0\xeb\xd1'
        float_0 = 0.0001
        var_2 = shell_module_0.chmod(bytes_0, float_0)
    except BaseException:
        pass

def test_case_3():
    try:
        int_0 = 1664
        dict_0 = None
        shell_module_0 = module_0.ShellModule()
        var_0 = shell_module_0.chown(int_0, dict_0)
    except BaseException:
        pass

def test_case_4():
    try:
        float_0 = 0.2
        bool_0 = True
        str_0 = 'h.cfQ (M\n}EDN/\x0c\nj&'
        shell_module_0 = module_0.ShellModule()
        var_0 = shell_module_0.set_user_facl(float_0, bool_0, str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        tuple_0 = ()
        str_0 = '2A`/VdC]gL<j-vX*/[[:'
        str_1 = 'syAE(('
        dict_0 = {str_0: tuple_0, str_0: tuple_0, str_1: str_1, str_0: str_1}
        shell_module_0 = module_0.ShellModule()
        var_0 = shell_module_0.checksum(tuple_0, **dict_0)
        str_2 = "(o.f,'TF)"
        shell_module_1 = module_0.ShellModule()
        list_0 = [str_2, dict_0]
        var_1 = shell_module_1.remove(list_0, dict_0)
        var_2 = shell_module_1.mkdtemp()
    except BaseException:
        pass

def test_case_6():
    try:
        shell_module_0 = module_0.ShellModule()
        var_0 = shell_module_0.mkdtemp()
    except BaseException:
        pass

def test_case_7():
    try:
        float_0 = -1075.107
        shell_module_0 = module_0.ShellModule()
        shell_module_1 = module_0.ShellModule()
        var_0 = shell_module_0.wrap_for_exec(float_0)
        list_0 = [float_0]
        var_1 = shell_module_0.path_has_trailing_slash(list_0)
    except BaseException:
        pass

def test_case_8():
    try:
        tuple_0 = ()
        list_0 = [tuple_0, tuple_0]
        shell_module_0 = module_0.ShellModule()
        var_0 = shell_module_0.join_path(*list_0)
        str_0 = '2A`/VdC]gL<j-vX*/[[:'
        str_1 = 'syAE(('
        dict_0 = {str_0: tuple_0, str_0: tuple_0, str_1: str_1, str_0: str_1}
        shell_module_1 = module_0.ShellModule()
        var_1 = shell_module_1.checksum(tuple_0, **dict_0)
        str_2 = '9?LwzMs,|zg6A<|Y'
        str_3 = "(o.f,'TF)"
        str_4 = '9;Oo'
        dict_1 = {str_3: str_2, str_4: str_3}
        shell_module_2 = module_0.ShellModule()
        list_1 = [str_3, dict_1]
        var_2 = shell_module_2.remove(list_1, dict_1)
        var_3 = shell_module_2.mkdtemp()
    except BaseException:
        pass

def test_case_9():
    try:
        int_0 = 1140
        shell_module_0 = module_0.ShellModule()
        var_0 = shell_module_0.mkdtemp(int_0)
    except BaseException:
        pass

def test_case_10():
    try:
        bool_0 = None
        shell_module_0 = module_0.ShellModule()
        var_0 = shell_module_0.path_has_trailing_slash(bool_0)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = 'sg>S2p_~>OLk\n.\x0b/Ts4,'
        bytes_0 = None
        int_0 = 188
        shell_module_0 = module_0.ShellModule()
        shell_module_1 = module_0.ShellModule()
        var_0 = shell_module_1.mkdtemp(str_0, bytes_0, int_0, shell_module_0)
        str_1 = 'T\\\rP9Th}/Q!'
        list_0 = [str_1, str_1, str_1, str_1]
        shell_module_2 = module_0.ShellModule()
        var_1 = shell_module_2.checksum(str_1, *list_0)
        list_1 = [list_0, shell_module_2, var_1]
        var_2 = shell_module_2.wrap_for_exec(list_1)
        str_2 = 'F'
        dict_0 = {str_1: str_1, str_1: str_1, str_2: str_2, str_1: str_1}
        shell_module_3 = module_0.ShellModule()
        var_3 = shell_module_3.remove(dict_0)
        bytes_1 = None
        var_4 = shell_module_2.remove(str_2)
        shell_module_4 = module_0.ShellModule()
        shell_module_5 = module_0.ShellModule()
        dict_1 = {str_1: shell_module_5, bytes_1: shell_module_5}
        str_3 = '/B8;M>cmMVJ&z-4'
        var_5 = shell_module_4.checksum(str_3)
        var_6 = shell_module_5.env_prefix()
        var_7 = shell_module_5.wrap_for_exec(dict_1)
        var_8 = shell_module_5.join_path()
    except BaseException:
        pass

def test_case_12():
    try:
        shell_module_0 = module_0.ShellModule()
        var_0 = None
        str_0 = '#!bin'
        str_1 = './bin\x0bmodule'
        var_1 = shell_module_0.build_module_command(var_0, str_0, str_1, str_1)
        list_0 = None
        dict_0 = {shell_module_0: str_1}
        var_2 = shell_module_0.expand_user(list_0, dict_0)
        bool_0 = False
        str_2 = '\x0cwm9mlS"v.e'
        var_3 = shell_module_0.build_module_command(dict_0, bool_0, str_2)
    except BaseException:
        pass

def test_case_13():
    try:
        shell_module_0 = module_0.ShellModule()
        str_0 = '#!bin'
        var_0 = shell_module_0.build_module_command(str_0, str_0, str_0, str_0)
        var_1 = shell_module_0.path_has_trailing_slash(str_0)
    except BaseException:
        pass

def test_case_14():
    try:
        shell_module_0 = module_0.ShellModule()
        str_0 = '"\\\\server\\share\\"'
        var_0 = shell_module_0.path_has_trailing_slash(str_0)
    except BaseException:
        pass