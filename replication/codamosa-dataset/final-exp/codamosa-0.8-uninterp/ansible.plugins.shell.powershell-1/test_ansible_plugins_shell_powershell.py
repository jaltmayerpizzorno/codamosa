# Automatically generated by Pynguin.
import ansible.plugins.shell.powershell as module_0

def test_case_0():
    pass

def test_case_1():
    shell_module_0 = module_0.ShellModule()
    str_0 = ''
    str_1 = '#!powershell'
    dict_0 = {str_0: str_1}
    str_2 = 'S"gua\x0c'
    tuple_0 = (str_1, dict_0, str_2)
    dict_1 = {str_1: tuple_0}
    var_0 = shell_module_0.env_prefix(**dict_1)
    str_3 = '$env:ANSIBLE_MODULE_ARGS = "{\\"ANSIBLE_MODULE_ARGS\\":{\\"foo\\":\\"bar\\"}}"'
    var_1 = shell_module_0.build_module_command(str_3, str_1, str_0)

def test_case_2():
    shell_module_0 = module_0.ShellModule()
    str_0 = 't^a1T!c<AF'
    var_0 = shell_module_0.get_remote_filename(str_0)

def test_case_3():
    shell_module_0 = module_0.ShellModule()
    bool_0 = False
    var_0 = shell_module_0.remove(bool_0)

def test_case_4():
    bool_0 = None
    shell_module_0 = module_0.ShellModule()
    var_0 = shell_module_0.expand_user(bool_0)

def test_case_5():
    float_0 = 1872.6
    shell_module_0 = module_0.ShellModule()
    var_0 = shell_module_0.exists(float_0)

def test_case_6():
    int_0 = -3757
    shell_module_0 = module_0.ShellModule()
    var_0 = shell_module_0.checksum(int_0)

def test_case_7():
    shell_module_0 = module_0.ShellModule()
    str_0 = '$ev:ANSIBLE_MODUgE_ARGS = "{\\"ANSIBLE_MODULE_ARGS\\":{\\"fooI":\\bar\\"}}"'
    var_0 = shell_module_0.build_module_command(str_0, str_0, str_0)

def test_case_8():
    shell_module_0 = module_0.ShellModule()
    str_0 = 'helloworld'
    var_0 = shell_module_0.get_remote_filename(str_0)
    shell_module_1 = module_0.ShellModule()
    str_1 = 'helloworld.ps1'
    var_1 = shell_module_1.get_remote_filename(str_1)
    shell_module_2 = module_0.ShellModule()
    str_2 = 'helloworld.py'
    var_2 = shell_module_2.get_remote_filename(str_2)
    shell_module_3 = module_0.ShellModule()

def test_case_9():
    shell_module_0 = module_0.ShellModule()
    str_0 = ''
    var_0 = shell_module_0.build_module_command(str_0, str_0, str_0)

def test_case_10():
    shell_module_0 = module_0.ShellModule()
    str_0 = '~'
    var_0 = shell_module_0.expand_user(str_0)
    shell_module_1 = module_0.ShellModule()

def test_case_11():
    var_0 = None
    shell_module_0 = module_0.ShellModule()
    str_0 = '~'
    str_1 = ''
    var_1 = shell_module_0.expand_user(str_0, str_1)
    str_2 = '~\\file'
    var_2 = shell_module_0.expand_user(str_2, str_1)

def test_case_12():
    set_0 = set()
    str_0 = 'ternary'
    bool_0 = None
    str_1 = 'EzH'
    list_0 = [bool_0]
    tuple_0 = (str_0, bool_0, str_1, list_0)
    tuple_1 = (set_0, tuple_0)
    bytes_0 = b''
    shell_module_0 = module_0.ShellModule()
    var_0 = shell_module_0.expand_user(tuple_1, bytes_0)
    str_2 = "\n            Try\n            {\n                <ansible.plugins.shell.powershell.ShellModule object at 0x7fcb4fe50d90>\n                $tmp_path = [System.Environment]::ExpandEnvironmentVariables('<ansible.plugins.shell.powershell.ShellModule object at 0x7fcb54ea4a60>') $tmp = New-Item -Type Directory -Path $tmp_path -Name 'sg>S2p_~>OLk\n.\x0b/Ts4,' Write-Output -InputObject $tmp.FullName\n            }\n            Catch\n            {\n                $_obj = @{ failed = $true }\n                If ($_.Exception.GetType)\n                {\n                    $_obj.Add('msg', $_.Exception.Message)\n                }\n                Else\n                {\n                    $_obj.Add('msg', $_.ToString())\n                }\n                If ($_.InvocationInfo.PositionMessage)\n                {\n                    $_obj.Add('exception', $_.InvocationInfo.PositionMessage)\n                }\n                ElseIf ($_.ScriptStackTrace)\n                {\n                    $_obj.Add('exception', $_.ScriptStackTrace)\n                }\n                Try\n                {\n                    $_obj.Add('error_record', ($_ | ConvertTo-Json | ConvertFrom-Json))\n                }\n                Catch\n                {\n                }\n                Echo $_obj | ConvertTo-Json -Compress -Depth 99\n                Exit 1\n            }\n        "
    str_3 = '8D~\n@=9\r7aOcR'
    shell_module_1 = module_0.ShellModule()
    dict_0 = {str_3: str_3, str_2: str_2, str_2: str_2, str_3: str_2}
    shell_module_2 = module_0.ShellModule()
    str_4 = '#!b'
    var_1 = shell_module_1.checksum(str_4, **dict_0)
    shell_module_3 = module_0.ShellModule()
    var_2 = None
    str_5 = '#!erin'
    str_6 = './bijmd5lV'
    var_3 = shell_module_3.build_module_command(var_2, str_5, str_6, str_6)
    var_4 = shell_module_3.exists(str_4)
    list_1 = None
    dict_1 = {shell_module_3: str_6}
    var_5 = shell_module_3.expand_user(list_1, dict_1)
    str_7 = "]B.e$E'{JRL]FC/"
    var_6 = shell_module_0.path_has_trailing_slash(str_7)

def test_case_13():
    shell_module_0 = module_0.ShellModule()
    str_0 = '#!powershell'
    var_0 = shell_module_0.build_module_command(str_0, str_0, str_0)