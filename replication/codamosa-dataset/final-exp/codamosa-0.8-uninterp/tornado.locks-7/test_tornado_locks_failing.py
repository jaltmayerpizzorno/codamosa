# Automatically generated by Pynguin.
import tornado.locks as module_0
import builtins as module_1
import concurrent.futures._base as module_2
import tornado.ioloop as module_3
import datetime as module_4

def test_case_0():
    try:
        condition_0 = module_0.Condition()
    except BaseException:
        pass

def test_case_1():
    try:
        event_0 = module_0.Event()
        awaitable_0 = event_0.wait()
    except BaseException:
        pass

def test_case_2():
    try:
        event_0 = module_0.Event()
        str_0 = event_0.__repr__()
        releasing_context_manager_0 = module_0._ReleasingContextManager(event_0)
        list_0 = []
        base_exception_0 = module_1.BaseException(*list_0)
        traceback_0 = module_1.traceback()
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'$'
        semaphore_0 = module_0.Semaphore()
        semaphore_0.__aenter__()
        releasing_context_manager_0 = module_0._ReleasingContextManager(bytes_0)
        releasing_context_manager_0.__enter__()
        semaphore_1 = module_0.Semaphore()
        semaphore_1.release()
        int_0 = -637
        semaphore_2 = module_0.Semaphore(int_0)
    except BaseException:
        pass

def test_case_4():
    try:
        int_0 = -1700
        str_0 = 'dw[k"\x0cG6%o/(+z\r'
        base_exception_0 = None
        tuple_0 = ()
        releasing_context_manager_0 = module_0._ReleasingContextManager(int_0)
        releasing_context_manager_0.__exit__(str_0, base_exception_0, tuple_0)
    except BaseException:
        pass

def test_case_5():
    try:
        int_0 = -3145
        semaphore_0 = module_0.Semaphore()
        str_0 = semaphore_0.__repr__()
        bounded_semaphore_0 = module_0.BoundedSemaphore(int_0)
    except BaseException:
        pass

def test_case_6():
    try:
        semaphore_0 = module_0.Semaphore()
        semaphore_0.__aenter__()
        semaphore_1 = module_0.Semaphore()
        semaphore_1.release()
        event_0 = module_0.Event()
        event_0.clear()
        awaitable_0 = semaphore_1.acquire()
    except BaseException:
        pass

def test_case_7():
    try:
        int_0 = 6
        semaphore_0 = module_0.Semaphore(int_0)
        semaphore_0.__enter__()
    except BaseException:
        pass

def test_case_8():
    try:
        bounded_semaphore_0 = module_0.BoundedSemaphore()
        bounded_semaphore_0.release()
    except BaseException:
        pass

def test_case_9():
    try:
        lock_0 = module_0.Lock()
        lock_0.release()
    except BaseException:
        pass

def test_case_10():
    try:
        lock_0 = module_0.Lock()
        str_0 = lock_0.__repr__()
        condition_0 = module_0.Condition()
    except BaseException:
        pass

def test_case_11():
    try:
        bounded_semaphore_0 = module_0.BoundedSemaphore()
        lock_0 = module_0.Lock()
        awaitable_0 = lock_0.acquire()
    except BaseException:
        pass

def test_case_12():
    try:
        float_0 = 3285.0
        int_0 = 127
        semaphore_0 = module_0.Semaphore(int_0)
        lock_0 = module_0.Lock()
        lock_0.__exit__(float_0, semaphore_0, semaphore_0)
    except BaseException:
        pass

def test_case_13():
    try:
        future_0 = module_2.Future()
        i_o_loop_0 = module_3.IOLoop()
        i_o_loop_1 = i_o_loop_0.instance()
        i_o_loop_1.make_current()
        condition_0 = module_0.Condition()
        condition_0.notify_all()
        optional_0 = None
        semaphore_0 = module_0.Semaphore()
        semaphore_0.__exit__(future_0, i_o_loop_1, optional_0)
    except BaseException:
        pass

def test_case_14():
    try:
        int_0 = 3794
        semaphore_0 = module_0.Semaphore(int_0)
        str_0 = semaphore_0.__repr__()
        event_0 = module_0.Event()
        bool_0 = event_0.is_set()
        event_0.set()
        base_exception_0 = module_1.BaseException()
        none_type_0 = None
        event_1 = module_0.Event()
        str_1 = event_0.__repr__()
        awaitable_0 = event_1.wait(none_type_0)
    except BaseException:
        pass

def test_case_15():
    try:
        int_0 = 3794
        semaphore_0 = module_0.Semaphore(int_0)
        str_0 = semaphore_0.__repr__()
        event_0 = module_0.Event()
        bool_0 = event_0.is_set()
        event_0.set()
        event_0.set()
        base_exception_0 = module_1.BaseException()
        none_type_0 = None
        event_1 = module_0.Event()
        awaitable_0 = event_1.wait(none_type_0)
    except BaseException:
        pass

def test_case_16():
    try:
        i_o_loop_0 = module_3.IOLoop()
        i_o_loop_1 = i_o_loop_0.instance()
        condition_0 = module_0.Condition()
        condition_0.notify_all()
        selectable_0 = module_3._Selectable()
        condition_0.notify()
        base_exception_0 = module_1.BaseException()
        int_0 = -3840
        semaphore_0 = module_0.Semaphore(int_0)
    except BaseException:
        pass

def test_case_17():
    try:
        future_0 = module_2.Future()
        i_o_loop_0 = module_3.IOLoop()
        condition_0 = module_0.Condition()
        str_0 = condition_0.__repr__()
        i_o_loop_1 = i_o_loop_0.instance()
        i_o_loop_1.make_current()
        condition_1 = module_0.Condition()
        condition_1.notify_all()
        optional_0 = None
        semaphore_0 = module_0.Semaphore()
        semaphore_0.__exit__(future_0, i_o_loop_1, optional_0)
    except BaseException:
        pass

def test_case_18():
    try:
        lock_0 = module_0.Lock()
        i_o_loop_0 = module_3.IOLoop()
        awaitable_0 = lock_0.acquire()
        i_o_loop_1 = i_o_loop_0.instance()
        float_0 = 1226.471
        awaitable_1 = lock_0.acquire(float_0)
        condition_0 = module_0.Condition()
        semaphore_0 = module_0.Semaphore()
        awaitable_2 = semaphore_0.acquire()
        condition_0.notify_all()
        selectable_0 = module_3._Selectable()
        condition_1 = module_0.Condition()
        timedelta_0 = module_4.timedelta()
        condition_1.notify()
        releasing_context_manager_0 = module_0._ReleasingContextManager(lock_0)
        lock_0.__enter__()
    except BaseException:
        pass

def test_case_19():
    try:
        i_o_loop_0 = module_3.IOLoop()
        event_0 = module_0.Event()
        awaitable_0 = event_0.wait()
        semaphore_0 = module_0.Semaphore()
        semaphore_0.release()
        lock_0 = module_0.Lock()
        awaitable_1 = lock_0.acquire()
        semaphore_1 = module_0.Semaphore()
        condition_0 = module_0.Condition()
        str_0 = lock_0.__repr__()
        condition_0.notify()
        awaitable_2 = condition_0.wait()
        timedelta_0 = module_4.timedelta()
        awaitable_3 = condition_0.wait()
        int_0 = -1049
        event_0.set()
        condition_0.notify()
        lock_1 = module_0.Lock()
        awaitable_4 = lock_0.acquire()
        lock_0.release()
        semaphore_2 = module_0.Semaphore()
        str_1 = semaphore_0.__repr__()
        semaphore_3 = module_0.Semaphore(int_0)
    except BaseException:
        pass

def test_case_20():
    try:
        i_o_loop_0 = module_3.IOLoop()
        event_0 = module_0.Event()
        awaitable_0 = event_0.wait()
        semaphore_0 = module_0.Semaphore()
        semaphore_0.release()
        lock_0 = module_0.Lock()
        awaitable_1 = lock_0.acquire()
        condition_0 = module_0.Condition()
        semaphore_1 = module_0.Semaphore()
        awaitable_2 = semaphore_1.acquire()
        condition_0.notify_all()
        str_0 = condition_0.__repr__()
        condition_1 = module_0.Condition()
        str_1 = lock_0.__repr__()
        condition_0.notify()
        awaitable_3 = condition_1.wait()
        timedelta_0 = module_4.timedelta()
        awaitable_4 = condition_1.wait(timedelta_0)
        condition_1.notify()
        event_0.set()
        event_1 = module_0.Event()
        dict_0 = {str_0: lock_0, str_1: awaitable_4, str_0: event_1, str_0: awaitable_4}
        base_exception_0 = module_1.BaseException(**dict_0)
    except BaseException:
        pass

def test_case_21():
    try:
        i_o_loop_0 = module_3.IOLoop()
        event_0 = module_0.Event()
        awaitable_0 = event_0.wait()
        semaphore_0 = module_0.Semaphore()
        semaphore_0.release()
        lock_0 = module_0.Lock()
        awaitable_1 = lock_0.acquire()
        semaphore_1 = module_0.Semaphore()
        awaitable_2 = semaphore_1.acquire()
        condition_0 = module_0.Condition()
        str_0 = lock_0.__repr__()
        condition_0.notify()
        awaitable_3 = condition_0.wait()
        timedelta_0 = module_4.timedelta()
        awaitable_4 = condition_0.wait()
        int_0 = -1049
        condition_0.notify(int_0)
        event_0.set()
        condition_0.notify()
        lock_1 = module_0.Lock()
        awaitable_5 = lock_0.acquire()
        lock_0.release()
        semaphore_2 = module_0.Semaphore()
        str_1 = semaphore_0.__repr__()
        semaphore_3 = module_0.Semaphore(int_0)
    except BaseException:
        pass