# Automatically generated by Pynguin.
import sanic.response as module_0

def test_case_0():
    pass

def test_case_1():
    bool_0 = True
    h_t_t_p_response_0 = module_0.raw(bool_0)

def test_case_2():
    str_0 = None
    h_t_t_p_response_0 = module_0.html(str_0)

def test_case_3():
    pure_path_0 = None
    int_0 = -906
    var_0 = module_0.stream(pure_path_0, int_0)

def test_case_4():
    str_0 = 'this is a test'
    h_t_t_p_response_0 = module_0.json(str_0)

def test_case_5():
    str_0 = 'R:y6zryv!GfTKwO'
    h_t_t_p_response_0 = module_0.text(str_0)

def test_case_6():
    str_0 = 'L!O1@~oEq+nSKZ7c'
    str_1 = '_method'
    dict_0 = {str_0: str_1}
    h_t_t_p_response_0 = module_0.redirect(str_0, dict_0)
    base_h_t_t_p_response_0 = module_0.BaseHTTPResponse()

def test_case_7():
    bool_0 = False
    str_0 = ''
    base_h_t_t_p_response_0 = module_0.BaseHTTPResponse()
    h_t_t_p_response_0 = module_0.html(str_0)
    int_0 = -2097
    streaming_h_t_t_p_response_0 = module_0.file_stream(str_0, int_0)
    streaming_h_t_t_p_response_1 = module_0.StreamingHTTPResponse(bool_0)

def test_case_8():
    var_0 = lambda x: x
    int_0 = 200
    str_0 = 'content-type'
    str_1 = 'text/plain; charset=utf-8'
    str_2 = {str_0: str_1}
    str_3 = 'text/plain; charset=utf-8'
    streaming_h_t_t_p_response_0 = module_0.StreamingHTTPResponse(var_0, int_0, str_2, str_3, str_0)
    var_1 = streaming_h_t_t_p_response_0.send()
    var_2 = print(var_1)