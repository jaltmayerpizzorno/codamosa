# Automatically generated by Pynguin.
import sanic.response as module_0
import pathlib as module_1

def test_case_0():
    try:
        h_t_t_p_response_0 = module_0.empty()
        h_t_t_p_response_1 = module_0.json(h_t_t_p_response_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = None
        h_t_t_p_response_0 = module_0.html(str_0)
        h_t_t_p_response_1 = module_0.redirect(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        list_0 = []
        pure_path_0 = module_1.PurePath(*list_0)
        str_0 = '"Zap-i`bB32`'
        str_1 = 'j??k:Lt'
        dict_0 = {str_0: str_0, str_1: str_0, str_0: str_1}
        str_2 = 'Q(2\\h}W'
        var_0 = module_0.stream(pure_path_0, dict_0, str_2)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = None
        int_0 = None
        dict_0 = {str_0: str_0}
        h_t_t_p_response_0 = module_0.text(str_0, int_0, dict_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = '}UgXc^4Ls~cQG*'
        str_1 = 'c'
        h_t_m_l_protocol_0 = None
        streaming_h_t_t_p_response_0 = module_0.file_stream(str_1, str_0)
        base_h_t_t_p_response_0 = module_0.BaseHTTPResponse()
        list_0 = [h_t_m_l_protocol_0]
        var_0 = streaming_h_t_t_p_response_0.send(*list_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = '2u3f*'
        dict_0 = {str_0: str_0}
        str_1 = 'deprecated'
        var_0 = module_0.stream(dict_0, str_1)
        str_2 = '}UgXc^4Ls~cQG*'
        str_3 = ''
        dict_1 = {str_2: str_3}
        h_t_t_p_response_0 = module_0.HTTPResponse(dict_1, str_3)
        h_t_t_p_response_1 = module_0.HTTPResponse(h_t_t_p_response_0, dict_1)
        h_t_m_l_protocol_0 = None
        h_t_t_p_response_2 = module_0.text(str_0)
        h_t_t_p_response_3 = module_0.html(h_t_m_l_protocol_0, dict_1)
        str_4 = '(nB]HU"e~'
        int_0 = -1231
        h_t_t_p_response_4 = module_0.json(dict_1, int_0)
        str_5 = None
        streaming_h_t_t_p_response_0 = module_0.file_stream(str_4, int_0, str_5, str_0)
        int_1 = None
        h_t_t_p_response_5 = module_0.html(str_2, int_1)
        base_h_t_t_p_response_0 = module_0.BaseHTTPResponse()
        bool_0 = False
        str_6 = ''
        h_t_t_p_response_6 = module_0.redirect(str_4, dict_1, int_0)
        h_t_t_p_response_7 = module_0.html(str_6, int_0)
        base_h_t_t_p_response_1 = module_0.BaseHTTPResponse()
        base_h_t_t_p_response_1.send(bool_0)
        list_0 = [h_t_m_l_protocol_0]
        var_1 = streaming_h_t_t_p_response_0.send(*list_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'content-type'
        str_1 = '\tWZcYR/Df{z$'
        h_t_t_p_response_0 = module_0.text(str_0, str_1)
        str_2 = 'T\x0bYhi\x0b{GveG+=cp`c#\t'
        h_t_t_p_response_1 = module_0.raw(str_2)
        str_3 = 'RZ65$"/'
        int_0 = 822
        h_t_t_p_response_2 = module_0.HTTPResponse(int_0)
        h_t_t_p_response_3 = module_0.text(str_3, str_3)
        str_4 = ':uvSCI&.rUjcuw-\x0cQ&'
        str_5 = ''
        str_6 = '\nA|fv8Re{VI<># '
        list_0 = [str_5]
        str_7 = 'c6nte[t&type'
        str_8 = ';nIR/UbXSy'
        dict_0 = {str_7: str_8}
        streaming_h_t_t_p_response_0 = module_0.StreamingHTTPResponse(list_0, dict_0)
        dict_1 = {str_2: str_4, str_5: str_6}
        h_t_t_p_response_4 = module_0.empty(int_0, dict_1)
        int_1 = -2413
        http_0 = None
        str_9 = '\nK;^or+_ikybNp\x0b{k:iB'
        h_t_t_p_response_5 = module_0.text(str_3, int_1, http_0, str_9)
        int_2 = 64
        str_10 = 'Evq\n'
        optional_0 = None
        h_t_t_p_response_6 = module_0.json(http_0, optional_0)
        base_h_t_t_p_response_0 = module_0.BaseHTTPResponse()
        h_t_t_p_response_7 = module_0.json(str_3, int_2, str_3, str_10, base_h_t_t_p_response_0)
    except BaseException:
        pass