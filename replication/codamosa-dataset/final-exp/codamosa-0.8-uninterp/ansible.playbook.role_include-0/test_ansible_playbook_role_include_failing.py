# Automatically generated by Pynguin.
import ansible.playbook.role_include as module_0
import ansible.playbook.task_include as module_1
import ansible.playbook.role as module_2

def test_case_0():
    try:
        int_0 = -533
        include_role_0 = module_0.IncludeRole()
        var_0 = include_role_0.get_block_list(int_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'NXN'
        list_0 = [str_0]
        include_role_0 = module_0.IncludeRole(list_0)
        include_role_1 = module_0.IncludeRole(list_0, include_role_0)
        var_0 = include_role_1.get_name()
        var_1 = include_role_1.get_block_list()
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'DS>Up&}5K\r\x0bcv}\x0bEovg'
        set_0 = set()
        float_0 = 2198.6
        str_1 = 'subelements lookup expects a list of two or three items, '
        include_role_0 = module_0.IncludeRole(float_0, str_1)
        var_0 = include_role_0.load(str_0, set_0)
    except BaseException:
        pass

def test_case_3():
    try:
        int_0 = -447
        include_role_0 = module_0.IncludeRole(int_0)
        var_0 = include_role_0.get_include_params()
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'NXN'
        dict_0 = {}
        bytes_0 = b'\xc0\x8c\xea1U\xb8\xa5\x03m\x94\xbb\x06'
        include_role_0 = module_0.IncludeRole(dict_0, bytes_0)
        var_0 = include_role_0.copy()
        list_0 = [str_0]
        include_role_1 = module_0.IncludeRole(list_0)
        var_1 = include_role_0.get_include_params()
    except BaseException:
        pass

def test_case_5():
    try:
        bool_0 = False
        include_role_0 = module_0.IncludeRole(bool_0, bool_0)
        var_0 = include_role_0.get_include_params()
        var_1 = include_role_0.copy()
        var_2 = include_role_0.get_name()
        bytes_0 = b'\xe2\xa8^'
        float_0 = -229.432275
        int_0 = 12
        task_include_0 = module_1.TaskInclude()
        role_0 = module_2.Role(int_0)
        role_1 = module_2.Role(role_0)
        include_role_1 = module_0.IncludeRole(task_include_0, role_1, task_include_0)
        var_3 = include_role_1.get_include_params()
        include_role_2 = module_0.IncludeRole()
        str_0 = '%s/ansible %s %s -m %s -a "%s" all -l "%s"'
        include_role_3 = module_0.IncludeRole(str_0)
        var_4 = include_role_2.get_include_params()
        set_0 = {bytes_0}
        var_5 = include_role_0.get_include_params()
        tuple_0 = (int_0, set_0, set_0)
        list_0 = [int_0, float_0, bytes_0, int_0]
        var_6 = include_role_2.get_include_params()
        tuple_1 = ()
        tuple_2 = (tuple_1,)
        int_1 = -468
        include_role_4 = module_0.IncludeRole(tuple_2, int_1)
        var_7 = include_role_4.get_block_list(tuple_0, list_0, tuple_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'action'
        dict_0 = {str_0: str_0, str_0: str_0}
        block_0 = None
        task_include_0 = module_1.TaskInclude(block_0, dict_0)
        bytes_0 = b'H\xe2\xaf"l\xe0\xbc%\x9c\x1c0\xdfl\xbbv7\\\xc8\xd9'
        include_role_0 = module_0.IncludeRole(bytes_0)
        var_0 = include_role_0.load(dict_0, task_include_0)
    except BaseException:
        pass