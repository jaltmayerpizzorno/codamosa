# Automatically generated by Pynguin.
import string_utils.generation as module_0

def test_case_0():
    try:
        int_0 = -118
        str_0 = module_0.random_string(int_0)
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = -2886
        str_0 = module_0.secure_random_hex(int_0)
    except BaseException:
        pass

def test_case_2():
    try:
        int_0 = 831
        str_0 = module_0.secure_random_hex(int_0)
        int_1 = 3160
        generator_0 = module_0.roman_range(int_1, int_1)
    except BaseException:
        pass

def test_case_3():
    try:
        int_0 = -2105
        generator_0 = module_0.roman_range(int_0, int_0)
    except BaseException:
        pass

def test_case_4():
    try:
        int_0 = 10
        generator_0 = module_0.roman_range(int_0)
        var_0 = [i for i in generator_0]
        int_1 = None
        int_2 = 255
        generator_1 = module_0.roman_range(int_1, int_2)
    except BaseException:
        pass

def test_case_5():
    try:
        int_0 = 85
        str_0 = module_0.random_string(int_0)
        str_1 = module_0.secure_random_hex(int_0)
        int_1 = None
        str_2 = module_0.random_string(int_1)
    except BaseException:
        pass

def test_case_6():
    try:
        int_0 = 10
        str_0 = module_0.random_string(int_0)
        str_1 = module_0.random_string(int_0)
        int_1 = None
        str_2 = module_0.secure_random_hex(int_1)
    except BaseException:
        pass

def test_case_7():
    try:
        int_0 = 2
        generator_0 = module_0.roman_range(int_0)
        var_0 = list(generator_0)
        int_1 = 1
        generator_1 = module_0.roman_range(int_1, int_0, int_0)
    except BaseException:
        pass

def test_case_8():
    try:
        int_0 = 6
        generator_0 = module_0.roman_range(int_0)
        var_0 = list(generator_0)
        var_1 = len(var_0)
        int_1 = 1
        int_2 = 4734
        generator_1 = module_0.roman_range(int_1, int_0, int_2)
    except BaseException:
        pass

def test_case_9():
    try:
        int_0 = 3
        int_1 = 100
        str_0 = module_0.secure_random_hex(int_1)
        bool_0 = True
        bool_1 = True
        str_1 = module_0.uuid(bool_1)
        str_2 = module_0.uuid(bool_0)
        str_3 = module_0.uuid()
        int_2 = 341
        str_4 = module_0.uuid()
        int_3 = 1163
        str_5 = module_0.random_string(int_3)
        str_6 = module_0.random_string(int_2)
        int_4 = -3174
        generator_0 = module_0.roman_range(int_0, int_3, int_4)
    except BaseException:
        pass

def test_case_10():
    try:
        int_0 = 4
        generator_0 = module_0.roman_range(int_0)
        var_0 = list(generator_0)
        int_1 = 2
        generator_1 = module_0.roman_range(int_0, int_1)
        int_2 = 1
        var_1 = list(generator_0)
        int_3 = 13
        generator_2 = module_0.roman_range(int_3, int_0)
        var_2 = list(generator_2)
        int_4 = -1
        generator_3 = module_0.roman_range(int_0, int_2, int_4)
    except BaseException:
        pass

def test_case_11():
    try:
        int_0 = 10
        generator_0 = module_0.roman_range(int_0)
        var_0 = [i for i in generator_0]
        int_1 = -1
        generator_1 = module_0.roman_range(int_0, int_1)
    except BaseException:
        pass