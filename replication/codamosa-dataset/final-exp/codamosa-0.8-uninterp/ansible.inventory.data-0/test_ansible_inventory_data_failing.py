# Automatically generated by Pynguin.
import ansible.inventory.data as module_0

def test_case_0():
    try:
        str_0 = ')LuxJ~6:"4U#\\u5Z$?='
        inventory_data_0 = module_0.InventoryData()
        var_0 = inventory_data_0.deserialize(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        inventory_data_0 = module_0.InventoryData()
        inventory_data_1 = module_0.InventoryData()
        var_0 = inventory_data_1.add_group(inventory_data_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bool_0 = False
        inventory_data_0 = module_0.InventoryData()
        var_0 = inventory_data_0.reconcile_inventory()
        var_1 = inventory_data_0.add_group(bool_0)
    except BaseException:
        pass

def test_case_3():
    try:
        inventory_data_0 = module_0.InventoryData()
        str_0 = 'group1'
        var_0 = inventory_data_0.add_group(str_0)
        str_1 = 'host2'
        var_1 = inventory_data_0.add_host(str_1, str_0)
        bytes_0 = b'\xa3\x98BCC\x98Gg\n5'
        var_2 = inventory_data_0.add_host(bytes_0)
    except BaseException:
        pass

def test_case_4():
    try:
        set_0 = None
        tuple_0 = None
        inventory_data_0 = module_0.InventoryData()
        var_0 = inventory_data_0.add_host(set_0, tuple_0)
    except BaseException:
        pass

def test_case_5():
    try:
        int_0 = 2856
        inventory_data_0 = module_0.InventoryData()
        inventory_data_1 = module_0.InventoryData()
        var_0 = inventory_data_1.set_variable(int_0, int_0, inventory_data_0)
    except BaseException:
        pass

def test_case_6():
    try:
        inventory_data_0 = module_0.InventoryData()
        str_0 = 'test_grup'
        var_0 = inventory_data_0.add_group(str_0)
        str_1 = '\tst_host'
        var_1 = inventory_data_0.add_host(str_1)
        str_2 = 'test_group'
        var_2 = inventory_data_0.reconcile_inventory()
        var_3 = inventory_data_0.add_child(str_2, str_1)
    except BaseException:
        pass

def test_case_7():
    try:
        inventory_data_0 = module_0.InventoryData()
        var_0 = inventory_data_0.reconcile_inventory()
        inventory_data_1 = module_0.InventoryData()
        var_1 = inventory_data_1.reconcile_inventory()
        inventory_data_2 = module_0.InventoryData()
        var_2 = inventory_data_0.serialize()
        str_0 = 'all'
        var_3 = inventory_data_2.add_group(str_0)
        int_0 = 58
        var_4 = inventory_data_1.remove_group(int_0)
        var_5 = inventory_data_1.reconcile_inventory()
        bytes_0 = b''
        var_6 = inventory_data_1.remove_group(bytes_0)
        var_7 = inventory_data_0.get_groups_dict()
    except BaseException:
        pass

def test_case_8():
    try:
        inventory_data_0 = module_0.InventoryData()
        str_0 = 'host1'
        var_0 = inventory_data_0.add_host(str_0)
        str_1 = 'host2'
        var_1 = inventory_data_0.add_host(str_1)
        var_2 = inventory_data_0.hosts[str_1]
        var_3 = inventory_data_0.remove_host(var_2)
        str_2 = 'group1'
        var_4 = inventory_data_0.add_group(str_2)
        var_5 = inventory_data_0.add_child(str_2, str_0)
        var_6 = inventory_data_0.remove_group(str_2)
        var_7 = inventory_data_0.add_child(str_2, str_1)
    except BaseException:
        pass

def test_case_9():
    try:
        tuple_0 = ()
        inventory_data_0 = module_0.InventoryData()
        var_0 = inventory_data_0.serialize()
        inventory_data_1 = module_0.InventoryData()
        str_0 = '`TRVrw{du6SR8u7vnV'
        dict_0 = {inventory_data_0: tuple_0, inventory_data_0: str_0}
        var_1 = inventory_data_0.deserialize(dict_0)
        inventory_data_2 = module_0.InventoryData()
        int_0 = 80
        var_2 = inventory_data_1.remove_host(int_0)
    except BaseException:
        pass

def test_case_10():
    try:
        inventory_data_0 = module_0.InventoryData()
        str_0 = 'localhost'
        var_0 = inventory_data_0.add_host(str_0)
        var_1 = inventory_data_0.get_host(str_0)
        str_1 = '127.0.0.1'
        int_0 = 22
        var_2 = inventory_data_0.add_host(str_1, int_0)
    except BaseException:
        pass

def test_case_11():
    try:
        inventory_data_0 = module_0.InventoryData()
        str_0 = 'test_group'
        var_0 = inventory_data_0.add_group(str_0)
        var_1 = inventory_data_0.add_host(str_0)
        str_1 = 'test_group'
        var_2 = inventory_data_0.reconcile_inventory()
        var_3 = inventory_data_0.add_child(str_1, str_1)
    except BaseException:
        pass

def test_case_12():
    try:
        inventory_data_0 = module_0.InventoryData()
        str_0 = 'test_group'
        var_0 = inventory_data_0.add_group(str_0)
        str_1 = 'test_host'
        var_1 = inventory_data_0.reconcile_inventory()
        var_2 = inventory_data_0.add_host(str_1)
        str_2 = 'test_group'
        str_3 = 'test_bBt'
        var_3 = inventory_data_0.add_child(str_2, str_3)
    except BaseException:
        pass

def test_case_13():
    try:
        inventory_data_0 = module_0.InventoryData()
        str_0 = 'localhost'
        var_0 = inventory_data_0.add_host(str_0)
        var_1 = inventory_data_0.add_group(str_0)
        var_2 = inventory_data_0.serialize()
        inventory_data_1 = module_0.InventoryData()
        str_1 = 'localhose'
        var_3 = inventory_data_0.add_host(str_1, str_0)
        var_4 = inventory_data_0.reconcile_inventory()
        var_5 = inventory_data_0.reconcile_inventory()
        var_6 = inventory_data_0.get_host(str_0)
        var_7 = inventory_data_1.serialize()
        str_2 = 'lomcalhost'
        var_8 = inventory_data_0.add_group(str_2)
        inventory_data_2 = module_0.InventoryData()
        bool_0 = None
        var_9 = inventory_data_2.remove_host(bool_0)
    except BaseException:
        pass