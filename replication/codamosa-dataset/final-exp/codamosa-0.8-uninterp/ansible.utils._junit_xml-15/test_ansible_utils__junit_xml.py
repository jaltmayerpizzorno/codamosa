# Automatically generated by Pynguin.
import ansible.utils._junit_xml as module_0
import xml.etree.ElementTree as module_1

def test_case_0():
    pass

def test_case_1():
    test_failure_0 = module_0.TestFailure()

def test_case_2():
    test_error_0 = module_0.TestError()
    var_0 = test_error_0.__repr__()

def test_case_3():
    str_0 = 'TestCaseName'
    test_case_0 = module_0.TestCase(str_0)
    element_0 = test_case_0.get_xml_element()

def test_case_4():
    str_0 = 'bvMq\\OA&c?`%*,\t'
    test_suite_0 = module_0.TestSuite(str_0, str_0, str_0)
    element_0 = test_suite_0.get_xml_element()

def test_case_5():
    str_0 = 'suites'
    test_suites_0 = module_0.TestSuites(str_0)
    str_1 = test_suites_0.to_pretty_xml()

def test_case_6():
    str_0 = 'test output'
    test_failure_0 = module_0.TestFailure(str_0)
    element_0 = test_failure_0.get_xml_element()
    var_0 = module_1.tostring(element_0)

def test_case_7():
    str_0 = 'TestMethod'
    int_0 = 1
    str_1 = 'TestClass'
    str_2 = 'FAILED'
    float_0 = 0.5
    str_3 = 'this is an error'
    test_error_0 = module_0.TestError(str_2, str_3)
    test_error_1 = [test_error_0]
    str_4 = '2'
    str_5 = 'this is a failure'
    test_failure_0 = module_0.TestFailure(str_4, str_5)
    test_failure_1 = [test_failure_0]
    str_6 = 'Skipped message'
    str_7 = 'System out message'
    test_case_0 = module_0.TestCase(str_0, int_0, str_1, str_2, float_0, test_error_1, test_failure_1, str_6, str_7)
    element_0 = test_case_0.get_xml_element()
    var_0 = element_0.attrib
    var_1 = len(var_0)