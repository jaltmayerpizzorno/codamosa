# Automatically generated by Pynguin.
import ansible.utils._junit_xml as module_0
import datetime as module_1
import decimal as module_2

def test_case_0():
    try:
        str_0 = '['
        test_error_0 = module_0.TestError(str_0, str_0)
        list_0 = [test_error_0, test_error_0, test_error_0, test_error_0]
        bool_0 = False
        test_case_0 = module_0.TestCase(str_0, str_0, list_0, bool_0)
        element_0 = test_case_0.get_xml_element()
        str_1 = ':\tKL'
        test_failure_0 = module_0.TestFailure(str_1, str_1, str_1)
        datetime_0 = module_1.datetime()
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'vLUe8giz5Z8;'
        none_type_0 = None
        test_case_0 = module_0.TestCase(str_0, str_0, none_type_0)
        str_1 = 'emerg'
        str_2 = 'results queue empty'
        dict_0 = {str_2: str_1}
        test_suite_0 = module_0.TestSuite(str_1, str_0, str_1, dict_0, str_1)
        element_0 = test_suite_0.get_xml_element()
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '7m!AqY?.*t0l:VB!4f'
        int_0 = -1865
        str_1 = 'V1e|US>f^is[$p;Gpb_'
        bool_0 = True
        test_case_0 = module_0.TestCase(str_0, int_0, str_1, str_1, bool_0)
        element_0 = test_case_0.get_xml_element()
        test_suite_0 = None
        list_0 = [test_suite_0]
        dict_0 = {}
        test_error_0 = module_0.TestError(str_0)
        var_0 = test_error_0.__eq__(dict_0)
        test_suites_0 = module_0.TestSuites(str_0, list_0)
        float_0 = None
        var_1 = test_suites_0.__eq__(float_0)
        dict_1 = test_suites_0.get_attributes()
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'C\xe6W\xbco\xd2Fi\x81oR\xa4\x8da\x9c\xbd '
        test_failure_0 = module_0.TestFailure()
        var_0 = test_failure_0.__eq__(bytes_0)
        str_0 = 'j@/y_Tn?d'
        list_0 = []
        decimal_0 = module_2.Decimal(*list_0)
        test_error_0 = None
        list_1 = [test_error_0, test_error_0, test_error_0]
        test_case_0 = module_0.TestCase(str_0, decimal_0, str_0, str_0, decimal_0, list_1, str_0, str_0)
        element_0 = test_case_0.get_xml_element()
    except BaseException:
        pass

def test_case_4():
    try:
        test_error_0 = module_0.TestError()
        str_0 = '&O*_k\x0c!%%shx'
        test_error_1 = module_0.TestError(str_0, str_0)
        var_0 = test_error_1.__repr__()
        element_0 = test_error_0.get_xml_element()
        test_failure_0 = module_0.TestFailure()
        test_failure_1 = module_0.TestFailure()
        bytes_0 = None
        str_1 = '0'
        test_suite_0 = module_0.TestSuite(str_1, str_0, str_0, str_1)
        test_suite_1 = module_0.TestSuite(str_0, str_1, str_1, str_1)
        list_0 = [test_suite_1]
        test_suites_0 = module_0.TestSuites(str_0, list_0)
        var_1 = test_error_0.__eq__(test_suite_1)
        element_1 = test_suites_0.get_xml_element()
        var_2 = test_suite_1.__eq__(bytes_0)
        str_2 = 's3'
        test_error_2 = module_0.TestError()
        list_1 = [test_error_2, test_error_2, test_error_2]
        test_case_0 = module_0.TestCase(str_2, str_2, list_1)
        element_2 = test_case_0.get_xml_element()
        var_3 = test_failure_0.__repr__()
        element_3 = test_suite_1.get_xml_element()
        datetime_0 = module_1.datetime()
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = '7m!AqY?.*t0l:VB!4f'
        str_1 = 'V1e|US>f^is[$p;Gpb_'
        bool_0 = True
        int_0 = None
        test_case_0 = module_0.TestCase(str_0, int_0, str_1, str_1, bool_0)
        str_2 = '3bEohw7)8R4\x0b'
        var_0 = test_case_0.__eq__(str_2)
        element_0 = test_case_0.get_xml_element()
        dict_0 = {}
        test_error_0 = module_0.TestError(str_0)
        var_1 = test_error_0.__eq__(dict_0)
        bytes_0 = b'\x18a\xc7\x85-\x178\x1a\x13\xbc\xadm\xb7'
        test_failure_0 = module_0.TestFailure()
        var_2 = test_failure_0.__eq__(bytes_0)
        list_0 = []
        dict_1 = {}
        decimal_0 = module_2.Decimal(*list_0, **dict_1)
        test_suite_0 = module_0.TestSuite(str_0, str_0, str_2, str_0, dict_0, str_1)
        var_3 = test_error_0.__repr__()
        element_1 = test_suite_0.get_xml_element()
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'SywF*` )'
        test_error_0 = module_0.TestError()
        test_error_1 = module_0.TestError(str_0)
        list_0 = [test_error_0, test_error_0, test_error_0]
        test_case_0 = module_0.TestCase(str_0, str_0, list_0, str_0, str_0)
        element_0 = test_case_0.get_xml_element()
        str_1 = '&O*_k\x0c!%%shx'
        test_error_2 = module_0.TestError(str_1, str_1)
        var_0 = test_error_2.__repr__()
        element_1 = test_error_0.get_xml_element()
        test_failure_0 = module_0.TestFailure()
        test_failure_1 = module_0.TestFailure()
        bytes_0 = None
        str_2 = 'n4'
        str_3 = '0'
        test_suite_0 = module_0.TestSuite(str_3, str_0, str_2, str_3)
        element_2 = test_suite_0.get_xml_element()
        test_suite_1 = module_0.TestSuite(str_2, str_0, str_0, str_0)
        list_1 = [test_suite_1]
        test_suites_0 = module_0.TestSuites(str_1, list_1)
        var_1 = test_error_0.__eq__(test_suite_1)
        element_3 = test_suites_0.get_xml_element()
        var_2 = test_suite_1.__eq__(bytes_0)
        test_error_3 = module_0.TestError()
        str_4 = 'umask'
        str_5 = ';PNm:'
        dict_0 = {}
        test_suite_2 = module_0.TestSuite(str_4, str_5, str_4, str_1, test_suites_0, dict_0, str_0)
        element_4 = test_suite_2.get_xml_element()
    except BaseException:
        pass