# Automatically generated by Pynguin.
import blib2to3.pgen2.literals as module_0
import re as module_1

def test_case_0():
    try:
        str_0 = '7|qQx2d\te*%JM2"d'
        str_1 = module_0.evalString(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '"\\"\'\\\\`\\a\\b\\f\\n\\r\\t\\v\\0\\01\\011\\0111\\x01\\x011\\x1111\\u1234\\u01234\\u0001234\\U00001234"'
        module_0.test()
        module_0.test()
        module_0.test()
        str_1 = module_0.evalString(str_0)
        str_2 = module_0.evalString(str_1)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '\\\\(x.{0,2})'
        str_1 = '\\x41'
        var_0 = module_1.match(str_0, str_1)
        module_0.test()
        str_2 = module_0.escape(var_0)
        str_3 = '\\xa3'
        var_1 = module_1.match(str_0, str_3)
        str_4 = module_0.escape(var_1)
        str_5 = '\\x0A'
        var_2 = module_1.match(str_0, str_5)
        str_6 = module_0.escape(var_2)
        var_3 = module_1.match(str_0, str_1)
        str_7 = module_0.escape(var_3)
        str_8 = '\\\\(x.{0,2})'
        str_9 = '\\x'
        var_4 = module_1.match(str_8, str_9)
        str_10 = module_0.escape(var_4)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '"\\"\'\\\\`\\a\\b\\f\\n\\r\\t\\v\\0\\01\\011\\0111\\xq1\\x011\\x1111\\1234\\u01234\\u0001234\\U00001234"'
        str_1 = module_0.evalString(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = '|\\\\(x.{0,2})'
        str_1 = '\\xH@k'
        var_0 = module_1.match(str_0, str_1)
        module_0.test()
        str_2 = module_0.escape(var_0)
    except BaseException:
        pass

def test_case_5():
    try:
        module_0.test()
        module_0.test()
        module_0.test()
        module_0.test()
        str_0 = "'"
        str_1 = module_0.evalString(str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = '\\\\(.*)'
        var_0 = module_1.match(str_0, str_0)
        str_1 = module_0.escape(var_0)
    except BaseException:
        pass