# Automatically generated by Pynguin.
import ansible.inventory.manager as module_0
import ansible.errors as module_1

def test_case_0():
    pass

def test_case_1():
    float_0 = -18.31
    inventory_manager_0 = module_0.InventoryManager(float_0)
    var_0 = inventory_manager_0.list_hosts()

def test_case_2():
    set_0 = set()
    var_0 = module_0.split_host_pattern(set_0)

def test_case_3():
    str_0 = '/omS?x:9`'
    set_0 = {str_0, str_0, str_0, str_0}
    inventory_manager_0 = module_0.InventoryManager(str_0, set_0)
    var_0 = module_0.order_patterns(str_0)
    list_0 = [str_0]
    var_1 = inventory_manager_0.get_hosts(list_0)

def test_case_4():
    str_0 = '2)V3IN.8IJ*cttgnYk3'
    list_0 = [str_0, str_0, str_0, str_0]
    inventory_manager_0 = module_0.InventoryManager(list_0, list_0)

def test_case_5():
    str_0 = 'uQQ. "sHgYo-T\ruf'
    inventory_manager_0 = module_0.InventoryManager(str_0)

def test_case_6():
    bool_0 = False
    str_0 = '8'
    inventory_manager_0 = module_0.InventoryManager(bool_0, str_0)
    var_0 = inventory_manager_0.remove_restriction()

def test_case_7():
    str_0 = ";%T'(|6_\n0O+3vpMr<"
    bytes_0 = b'\x89\x93\xa3B\xc6\x9b@#\x9dS\xe6H?V\xda\t\x8d\x89\xab'
    inventory_manager_0 = module_0.InventoryManager(bytes_0)
    var_0 = inventory_manager_0.add_group(str_0)
    str_1 = 'sG;<"'
    str_2 = '[t<l>g7u9d77h[u'
    tuple_0 = (str_1, str_2)
    inventory_manager_1 = module_0.InventoryManager(tuple_0)
    var_1 = inventory_manager_1.clear_caches()

def test_case_8():
    bytes_0 = b'\x9a2\x9e\x0cF'
    float_0 = -1315.2009
    inventory_manager_0 = module_0.InventoryManager(float_0)
    var_0 = inventory_manager_0.list_hosts()
    inventory_manager_1 = module_0.InventoryManager(bytes_0)
    bytes_1 = b'\x0c\xc1\xa3\xa9\xe6\xcf\xea.\x12\x08 \xfc8\xec'
    var_1 = inventory_manager_0.subset(bytes_1)
    var_2 = inventory_manager_1.get_groups_dict()

def test_case_9():
    str_0 = 'uQQ. "sHgYo-T\ruf'
    inventory_manager_0 = module_0.InventoryManager(str_0)
    var_0 = inventory_manager_0.reconcile_inventory()

def test_case_10():
    bool_0 = False
    str_0 = '8'
    inventory_manager_0 = module_0.InventoryManager(bool_0, str_0)
    tuple_0 = None
    var_0 = inventory_manager_0.get_host(tuple_0)
    var_1 = inventory_manager_0.clear_pattern_cache()

def test_case_11():
    str_0 = 'localhost,'
    str_1 = 'another_host,'
    str_2 = [str_0, str_1]
    inventory_manager_0 = module_0.InventoryManager(str_0, str_2)
    var_0 = inventory_manager_0.parse_sources()

def test_case_12():
    float_0 = 3759.823425
    bool_0 = False
    inventory_manager_0 = module_0.InventoryManager(bool_0)
    var_0 = inventory_manager_0.parse_source(float_0)

def test_case_13():
    var_0 = None
    str_0 = 'localhost,'
    inventory_manager_0 = module_0.InventoryManager(var_0, str_0)

def test_case_14():
    str_0 = 'q9G('
    list_0 = [str_0, str_0]
    inventory_manager_0 = module_0.InventoryManager(str_0, list_0)
    var_0 = inventory_manager_0.refresh_inventory()

def test_case_15():
    tuple_0 = ()
    inventory_manager_0 = module_0.InventoryManager(tuple_0)
    var_0 = inventory_manager_0.parse_sources()
    float_0 = -159.9
    var_1 = inventory_manager_0.list_hosts(float_0)

def test_case_16():
    int_0 = -2922
    inventory_manager_0 = module_0.InventoryManager(int_0)
    var_0 = inventory_manager_0.list_groups()

def test_case_17():
    var_0 = None
    inventory_manager_0 = module_0.InventoryManager(var_0, var_0)
    str_0 = 'localhost'
    bool_0 = None
    var_1 = inventory_manager_0.restrict_to_hosts(bool_0)
    str_1 = '192.168.0.1'
    var_2 = inventory_manager_0.get_host(str_1)
    ansible_error_0 = module_1.AnsibleError()
    var_3 = inventory_manager_0.list_hosts(str_0)
    str_2 = 'foo[1]'
    var_4 = inventory_manager_0.list_hosts(str_2)

def test_case_18():
    float_0 = -2379.63539
    dict_0 = {}
    inventory_manager_0 = module_0.InventoryManager(dict_0)
    var_0 = inventory_manager_0.subset(float_0)

def test_case_19():
    str_0 = 'localhost,'
    inventory_manager_0 = module_0.InventoryManager(str_0)
    var_0 = None
    var_1 = inventory_manager_0.subset(var_0)
    var_2 = inventory_manager_0.subset(str_0)
    var_3 = inventory_manager_0._subset
    str_1 = '@/etc/hosts'
    var_4 = inventory_manager_0.subset(str_1)
    var_5 = inventory_manager_0._subset

def test_case_20():
    int_0 = -143
    inventory_manager_0 = module_0.InventoryManager(int_0)
    var_0 = inventory_manager_0.clear_pattern_cache()

def test_case_21():
    str_0 = '.\x0bw`bVU'
    var_0 = module_0.split_host_pattern(str_0)

def test_case_22():
    var_0 = None
    str_0 = 'host_list'
    str_1 = 'script'
    inventory_manager_0 = module_0.InventoryManager(var_0, str_0, str_1)
    int_0 = -1943
    bytes_0 = None
    tuple_0 = (int_0, bytes_0)
    tuple_1 = (int_0, tuple_0, tuple_0)
    var_1 = inventory_manager_0.get_hosts(tuple_1)
    var_2 = inventory_manager_0.hosts

def test_case_23():
    var_0 = []
    var_1 = module_0.order_patterns(var_0)
    str_0 = ''
    str_1 = [str_0, str_0]
    var_2 = module_0.order_patterns(str_1)
    str_2 = '&'
    str_3 = [str_0, str_0, str_2, str_2]
    var_3 = module_0.order_patterns(str_3)
    str_4 = [str_2, str_2]
    var_4 = module_0.order_patterns(str_4)
    str_5 = [str_0, str_2]
    var_5 = module_0.order_patterns(str_5)
    str_6 = '1'
    str_7 = [str_6]
    var_6 = module_0.order_patterns(str_7)
    str_8 = 'a'
    str_9 = 'b'
    str_10 = [str_8, str_9]
    var_7 = module_0.order_patterns(str_10)
    str_11 = [str_8, str_9, str_2]
    var_8 = module_0.order_patterns(str_11)
    str_12 = '!'
    str_13 = [str_8, str_9, str_2, str_12]
    var_9 = module_0.order_patterns(str_13)

def test_case_24():
    bytes_0 = b'v\x85F\xbb\r\xe8\xf6\xad\xf0\x01P\x8b2\x9bJ$J\xc8'
    list_0 = []
    inventory_manager_0 = module_0.InventoryManager(bytes_0, list_0, list_0)
    var_0 = inventory_manager_0.list_hosts()

def test_case_25():
    bool_0 = True
    int_0 = -210
    float_0 = -3183.3
    tuple_0 = (bool_0, int_0, int_0, float_0)
    inventory_manager_0 = module_0.InventoryManager(tuple_0)
    var_0 = inventory_manager_0.reconcile_inventory()
    float_1 = -171.828
    var_1 = inventory_manager_0.get_hosts(inventory_manager_0, float_1)
    var_2 = inventory_manager_0.list_groups()

def test_case_26():
    var_0 = None
    str_0 = 'localhost,'
    inventory_manager_0 = module_0.InventoryManager(var_0, str_0)
    str_1 = 'ident'
    var_1 = inventory_manager_0.get_host(str_1)
    str_2 = '127.0.0.1'
    ansible_error_0 = module_1.AnsibleError(str_2)
    bool_0 = True
    var_2 = inventory_manager_0.list_hosts(bool_0)
    var_3 = inventory_manager_0.list_hosts()
    var_4 = inventory_manager_0.list_hosts()

def test_case_27():
    list_0 = []
    set_0 = set()
    str_0 = 'kjfTc'
    bool_0 = True
    int_0 = -223
    float_0 = -3187.972618621379
    tuple_0 = (bool_0, int_0, int_0, float_0)
    inventory_manager_0 = module_0.InventoryManager(tuple_0)
    inventory_manager_1 = module_0.InventoryManager(tuple_0, str_0)
    str_1 = 'jRXBE6Q<K*U>,'
    float_1 = -171.828
    var_0 = inventory_manager_0.get_hosts(inventory_manager_0, float_1)
    var_1 = inventory_manager_0.subset(set_0)
    var_2 = inventory_manager_1.parse_source(list_0)
    str_2 = 'x'
    var_3 = inventory_manager_0.list_hosts(str_2)
    inventory_manager_2 = module_0.InventoryManager(list_0, str_1)
    dict_0 = {}
    var_4 = inventory_manager_2.subset(dict_0)
    var_5 = inventory_manager_1.reconcile_inventory()
    var_6 = inventory_manager_0.list_groups()
    var_7 = inventory_manager_2.refresh_inventory()
    str_3 = 'YW:!p;#G'
    var_8 = inventory_manager_1.list_hosts(str_3)
    var_9 = inventory_manager_0.list_hosts()
    var_10 = inventory_manager_2.list_hosts()
    var_11 = inventory_manager_0.list_hosts()
    var_12 = inventory_manager_1.restrict_to_hosts(list_0)

def test_case_28():
    list_0 = []
    set_0 = set()
    str_0 = 'jRXBE6Q<K*U>,'
    inventory_manager_0 = module_0.InventoryManager(list_0, str_0)
    dict_0 = {}
    var_0 = inventory_manager_0.reconcile_inventory()
    str_1 = 'YW:!p;#G'
    var_1 = inventory_manager_0.list_hosts(str_1)
    var_2 = inventory_manager_0.list_hosts()
    inventory_manager_1 = module_0.InventoryManager(list_0, str_1)
    var_3 = inventory_manager_1.list_hosts()
    var_4 = inventory_manager_1.list_hosts()
    inventory_manager_2 = module_0.InventoryManager(set_0, dict_0)

def test_case_29():
    list_0 = []
    str_0 = 'jRXBE6Q<K*U>,'
    inventory_manager_0 = module_0.InventoryManager(list_0, str_0)
    dict_0 = {}
    var_0 = inventory_manager_0.subset(dict_0)
    var_1 = inventory_manager_0.list_hosts()
    str_1 = 'XN)|zr\r&rh\x0bw?"'
    var_2 = inventory_manager_0.list_hosts(str_1)

def test_case_30():
    list_0 = []
    str_0 = 'kjfTc'
    str_1 = 'jRXBE6Q<K*U>,'
    inventory_manager_0 = module_0.InventoryManager(list_0, str_1)
    dict_0 = {}
    var_0 = inventory_manager_0.subset(dict_0)
    var_1 = inventory_manager_0.list_hosts()
    var_2 = inventory_manager_0.list_hosts(str_0)

def test_case_31():
    var_0 = None
    str_0 = 'localhost,'
    str_1 = 'another_host,'
    str_2 = [str_0, str_1]
    inventory_manager_0 = module_0.InventoryManager(var_0, str_2)
    var_1 = inventory_manager_0.parse_sources()

def test_case_32():
    list_0 = []
    str_0 = 'kjfTc'
    int_0 = None
    inventory_manager_0 = module_0.InventoryManager(int_0)
    str_1 = "S(P0)*?*'"
    inventory_manager_1 = module_0.InventoryManager(str_1, str_0)
    var_0 = inventory_manager_1.refresh_inventory()
    str_2 = 'jRXBE6Q<K*U>,'
    var_1 = inventory_manager_1.parse_source(list_0)
    inventory_manager_2 = module_0.InventoryManager(list_0, str_2)
    dict_0 = {}
    var_2 = inventory_manager_2.get_groups_dict()
    var_3 = inventory_manager_2.subset(dict_0)
    var_4 = inventory_manager_2.reconcile_inventory()
    var_5 = inventory_manager_2.refresh_inventory()
    str_3 = '&YW:!p;#G'
    var_6 = inventory_manager_2.list_hosts(str_3)
    var_7 = inventory_manager_2.list_hosts()
    bytes_0 = b'\xb6/\xd0\xeb\xde\xc5;\x00'
    var_8 = module_0.split_host_pattern(bytes_0)
    str_4 = 'H}%Ok@O$#Dac'
    inventory_manager_3 = module_0.InventoryManager(str_4, str_3, bytes_0)

def test_case_33():
    var_0 = None
    var_1 = []
    inventory_manager_0 = module_0.InventoryManager(var_0, var_1)
    str_0 = 'localhost'
    var_2 = inventory_manager_0.get_host(str_0)
    str_1 = 'foo'
    int_0 = 1
    dict_0 = {int_0: var_0}
    var_3 = inventory_manager_0.subset(dict_0)
    set_0 = {inventory_manager_0, var_2, var_3}
    int_1 = 9
    ansible_error_0 = module_1.AnsibleError(inventory_manager_0, set_0, int_1)
    var_4 = inventory_manager_0.parse_source(inventory_manager_0, ansible_error_0)
    var_5 = inventory_manager_0.get_host(str_1)
    str_2 = 'group1'
    var_6 = inventory_manager_0.get_host(str_0)
    ansible_error_1 = module_1.AnsibleError()
    bytes_0 = b'V\x99\xba\x81'
    var_7 = inventory_manager_0.parse_source(ansible_error_1, bytes_0)
    list_0 = [var_3, inventory_manager_0, str_0, str_0]
    var_8 = inventory_manager_0.list_hosts(list_0)
    var_9 = inventory_manager_0.list_hosts()
    var_10 = inventory_manager_0.list_hosts(str_2)

def test_case_34():
    list_0 = []
    set_0 = set()
    bool_0 = True
    int_0 = None
    inventory_manager_0 = module_0.InventoryManager(int_0)
    str_0 = "S(P0)*?*'"
    var_0 = inventory_manager_0.remove_restriction()
    str_1 = 'd^xX|+znIin,\x0b'
    inventory_manager_1 = module_0.InventoryManager(str_0, str_1)
    var_1 = inventory_manager_1.refresh_inventory()
    int_1 = -223
    float_0 = -3187.972618621379
    tuple_0 = (bool_0, int_1, int_1, float_0)
    inventory_manager_2 = module_0.InventoryManager(tuple_0)
    str_2 = 'jRXBE6Q<K*U>,'
    float_1 = 512.0
    var_2 = inventory_manager_2.get_hosts(inventory_manager_2, float_1)
    var_3 = inventory_manager_2.subset(set_0)
    var_4 = inventory_manager_1.parse_source(list_0)
    str_3 = 'x'
    var_5 = inventory_manager_2.list_hosts(str_3)
    inventory_manager_3 = module_0.InventoryManager(list_0, str_2)
    dict_0 = {}
    var_6 = inventory_manager_3.subset(dict_0)
    var_7 = inventory_manager_3.reconcile_inventory()
    var_8 = inventory_manager_2.refresh_inventory()
    str_4 = '~SrM\tV( cle!'
    var_9 = inventory_manager_2.list_hosts(str_4)
    var_10 = inventory_manager_3.list_hosts(list_0)
    var_11 = module_0.split_host_pattern(inventory_manager_2)
    inventory_manager_4 = module_0.InventoryManager(int_1)

def test_case_35():
    var_0 = None
    inventory_manager_0 = module_0.InventoryManager(var_0, var_0)
    str_0 = 'localhost'
    str_1 = 'foo'
    int_0 = 1
    str_2 = '192.168.0.1'
    dict_0 = {int_0: var_0}
    var_1 = inventory_manager_0.subset(dict_0)
    var_2 = inventory_manager_0.get_host(str_2)
    var_3 = inventory_manager_0.get_host(str_0)
    ansible_error_0 = module_1.AnsibleError()
    var_4 = inventory_manager_0.list_hosts(str_0)
    var_5 = inventory_manager_0.list_hosts(str_1)
    str_3 = 'foo[1]'
    var_6 = inventory_manager_0.list_hosts(str_3)