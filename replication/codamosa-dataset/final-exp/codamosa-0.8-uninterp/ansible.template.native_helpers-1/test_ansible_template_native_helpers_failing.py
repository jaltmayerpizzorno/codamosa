# Automatically generated by Pynguin.
import ansible.template.native_helpers as module_0
import jinja2.runtime as module_1
import ansible.utils.native_jinja as module_2

def test_case_0():
    try:
        bool_0 = False
        bytes_0 = b'A\x17\x10\x01f\xe6'
        var_0 = module_0.ansible_native_concat(bytes_0)
        float_0 = None
        dict_0 = {}
        str_0 = '\n        Returns a new RoleMetadata object based on the datastructure passed in.\n        '
        tuple_0 = (float_0, dict_0, str_0, str_0)
        set_0 = {str_0, bool_0, bytes_0, str_0}
        tuple_1 = (tuple_0, set_0, dict_0, bytes_0)
        var_1 = module_0.ansible_native_concat(tuple_1)
        var_2 = module_0.ansible_native_concat(bool_0)
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = 2
        set_0 = {int_0}
        var_0 = module_0.ansible_native_concat(set_0)
        var_1 = module_0.ansible_native_concat(int_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '--separate-git-dir=%s'
        list_0 = [str_0, str_0, str_0]
        str_1 = 'file already exists but file attributes changed'
        strict_undefined_0 = module_1.StrictUndefined()
        async_iterator_0 = strict_undefined_0.__aiter__()
        tuple_0 = (strict_undefined_0,)
        tuple_1 = (list_0, str_1, async_iterator_0, tuple_0)
        var_0 = module_0.ansible_native_concat(tuple_1)
    except BaseException:
        pass

def test_case_3():
    try:
        native_jinja_text_0 = module_2.NativeJinjaText()
        set_0 = {native_jinja_text_0, native_jinja_text_0, native_jinja_text_0}
        var_0 = module_0.ansible_native_concat(set_0)
        str_0 = None
        var_1 = module_0.ansible_native_concat(str_0)
    except BaseException:
        pass