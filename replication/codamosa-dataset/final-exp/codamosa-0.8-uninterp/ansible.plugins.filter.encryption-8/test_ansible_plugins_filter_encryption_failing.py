# Automatically generated by Pynguin.
import ansible.plugins.filter.encryption as module_0
import ansible.parsing.yaml.objects as module_1

def test_case_0():
    try:
        str_0 = 'passw0rd'
        var_0 = module_0.do_vault(str_0, str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = None
        set_0 = {str_0, str_0, str_0}
        list_0 = [str_0, str_0, str_0]
        list_1 = [set_0]
        var_0 = module_0.do_vault(str_0, set_0, list_0, list_1)
    except BaseException:
        pass

def test_case_2():
    try:
        filter_module_0 = module_0.FilterModule()
        filter_module_1 = module_0.FilterModule()
        bytes_0 = b'l\xa5I\xd8\xd97'
        var_0 = filter_module_1.filters()
        str_0 = '-$x!@;r#([ObDm:>]\x0b'
        var_1 = module_0.do_unvault(bytes_0, str_0)
        str_1 = 'passw0r"d'
        list_0 = [str_1, bytes_0]
        str_2 = '}px9O_SbP'
        list_1 = []
        var_2 = module_0.do_vault(list_0, str_2, list_1)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '$ANSIBLE_VAULT;1.1;AES256;ansible-vault-filter-default\n35326541324232353931393033353333346538346662363564333065633233633936656665626\n36562333963613734376663383039643061396166323834653537303736656664353637346536\n3433313136333239393361326238633764356365616465663336\n'
        var_0 = module_0.do_unvault(str_0, str_0, str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = '8ZVsG+o(:=aR`K '
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
        str_1 = '\x0b}QA=GQ+c'
        dict_1 = {str_1: str_1}
        list_0 = [dict_1]
        var_0 = module_0.do_unvault(dict_0, dict_1, list_0)
    except BaseException:
        pass

def test_case_5():
    try:
        set_0 = set()
        str_0 = "!GJALsabqX-+s'vR@"
        var_0 = module_0.do_unvault(set_0, str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'passw0rd'
        filter_module_0 = module_0.FilterModule()
        var_0 = filter_module_0.filters()
        var_1 = module_0.do_vault(str_0, str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        float_0 = -297.0
        ansible_vault_encrypted_unicode_0 = module_1.AnsibleVaultEncryptedUnicode(float_0)
        str_0 = 'sfH\x0cu`'
        str_1 = '.bt'
        var_0 = module_0.do_unvault(ansible_vault_encrypted_unicode_0, str_0, str_1)
    except BaseException:
        pass