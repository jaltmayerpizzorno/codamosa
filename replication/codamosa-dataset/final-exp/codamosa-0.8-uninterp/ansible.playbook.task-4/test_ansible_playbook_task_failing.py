# Automatically generated by Pynguin.
import ansible.playbook.task as module_0
import ansible.playbook.block as module_1

def test_case_0():
    try:
        str_0 = 'LLwqB'
        bool_0 = None
        list_0 = [str_0, bool_0]
        set_0 = {str_0}
        float_0 = 17.68729
        task_0 = module_0.Task(list_0, set_0, float_0)
        var_0 = task_0.get_vars()
    except BaseException:
        pass

def test_case_1():
    try:
        task_0 = module_0.Task()
        var_0 = task_0.preprocess_data(task_0)
    except BaseException:
        pass

def test_case_2():
    try:
        dict_0 = {}
        task_0 = module_0.Task()
        var_0 = task_0.load(dict_0)
    except BaseException:
        pass

def test_case_3():
    try:
        int_0 = -750
        task_0 = module_0.Task()
        var_0 = task_0.post_validate(int_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'FAILED_RESCUE'
        set_0 = set()
        list_0 = []
        task_0 = module_0.Task(list_0)
        var_0 = task_0.get_include_params()
        task_1 = module_0.Task(str_0, set_0)
        var_1 = task_1.get_include_params()
    except BaseException:
        pass

def test_case_5():
    try:
        bytes_0 = b'\x8d\x0cY\x81|`\xc0\xd3\\,n\xf1\\\xc7\x16n\x97\xa9\xdc'
        int_0 = -758
        task_0 = module_0.Task(bytes_0, int_0)
        var_0 = task_0.copy()
    except BaseException:
        pass

def test_case_6():
    try:
        float_0 = 847.25887
        task_0 = module_0.Task(float_0)
        var_0 = task_0.serialize()
    except BaseException:
        pass

def test_case_7():
    try:
        list_0 = []
        task_0 = module_0.Task(list_0)
        var_0 = task_0.get_name()
        int_0 = 1024
        bool_0 = False
        var_1 = task_0.set_loader(bool_0)
        task_1 = module_0.Task(int_0)
        var_2 = task_1.set_loader(list_0)
    except BaseException:
        pass

def test_case_8():
    try:
        task_0 = module_0.Task()
        var_0 = task_0.all_parents_static()
        str_0 = ';d'
        var_1 = task_0.deserialize(str_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'kG6|\x0b'
        float_0 = 847.25887
        task_0 = module_0.Task(float_0)
        var_0 = task_0.get_name()
        task_1 = module_0.Task(str_0)
        var_1 = task_1.all_parents_static()
    except BaseException:
        pass

def test_case_10():
    try:
        bytes_0 = b'*\x7f\xd64\x11Z\x9f\x18\xcc\x11\xd7\xde\x89\x8d\x82O\xc4'
        task_0 = module_0.Task(bytes_0)
        var_0 = task_0.get_first_parent_include()
    except BaseException:
        pass

def test_case_11():
    try:
        task_0 = module_0.Task()
        float_0 = -643.3031
        task_1 = module_0.Task(float_0, task_0)
        var_0 = task_1.get_name()
        str_0 = 'bi'
        str_1 = 'yukU-!:{;_r[y:h&?/*'
        dict_0 = {str_1: str_0, str_0: str_0, float_0: float_0, task_1: str_1}
        float_1 = -1710.0
        block_0 = module_1.Block()
        bytes_0 = b'z5'
        task_2 = module_0.Task()
        var_1 = task_2.load(dict_0, float_1, block_0, bytes_0)
    except BaseException:
        pass

def test_case_12():
    try:
        float_0 = -1866.394
        task_0 = module_0.Task(float_0, float_0)
        bytes_0 = b''
        task_1 = module_0.Task(bytes_0)
        var_0 = task_1.serialize()
        str_0 = 'xiU'
        float_1 = -1611.77
        task_2 = module_0.Task(float_1)
        var_1 = task_2.copy(str_0, str_0)
        str_1 = 'YO<Sx6Q/gCo>F9>t3&G'
        task_3 = module_0.Task()
        var_2 = task_3.serialize()
        var_3 = task_3.get_vars()
        var_4 = task_2.__repr__()
        task_4 = module_0.Task(str_1)
        var_5 = task_4.get_include_params()
    except BaseException:
        pass

def test_case_13():
    try:
        task_0 = module_0.Task()
        var_0 = task_0.serialize()
        float_0 = -643.3031
        task_1 = module_0.Task(float_0, task_0)
        tuple_0 = None
        var_1 = task_1.get_name()
        str_0 = 'yukU-!:{;_r[y:h&?/*'
        dict_0 = {str_0: tuple_0}
        var_2 = task_1.post_validate(dict_0)
    except BaseException:
        pass

def test_case_14():
    try:
        task_0 = module_0.Task()
        task_1 = module_0.Task(task_0)
        float_0 = -643.3031
        task_2 = module_0.Task(float_0, task_0)
        bool_0 = False
        list_0 = [float_0, bool_0, task_2, bool_0]
        var_0 = task_2.preprocess_data(list_0)
    except BaseException:
        pass

def test_case_15():
    try:
        block_0 = module_1.Block()
        task_0 = module_0.Task(block_0)
        var_0 = task_0.all_parents_static()
        task_1 = module_0.Task()
        task_2 = module_0.Task(task_1)
        float_0 = -643.3031
        task_3 = module_0.Task(float_0, task_1)
        var_1 = task_2.serialize()
        bool_0 = False
        list_0 = [float_0, bool_0, task_3, bool_0]
        var_2 = task_3.preprocess_data(list_0)
    except BaseException:
        pass

def test_case_16():
    try:
        task_0 = module_0.Task()
        task_1 = module_0.Task(task_0)
        float_0 = -643.3031
        bool_0 = False
        var_0 = task_0.serialize()
        list_0 = [float_0, bool_0, task_1, bool_0]
        dict_0 = {}
        tuple_0 = (dict_0,)
        var_1 = task_1.load(list_0, tuple_0)
    except BaseException:
        pass

def test_case_17():
    try:
        int_0 = -1211
        dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
        str_0 = 'gu'
        dict_1 = {str_0: str_0}
        task_0 = module_0.Task(dict_1)
        var_0 = task_0.deserialize(dict_0)
        task_1 = module_0.Task()
        var_1 = task_1.serialize()
        float_0 = -643.3031
        task_2 = module_0.Task(float_0, task_1)
        var_2 = task_2.load(task_0, task_0)
    except BaseException:
        pass

def test_case_18():
    try:
        float_0 = 1.5
        set_0 = {float_0, float_0}
        int_0 = 73
        task_0 = module_0.Task(set_0)
        var_0 = task_0.__repr__()
        dict_0 = {int_0: int_0}
        var_1 = task_0.deserialize(dict_0)
        var_2 = task_0.serialize()
    except BaseException:
        pass

def test_case_19():
    try:
        dict_0 = {}
        task_0 = module_0.Task()
        block_0 = module_1.Block(dict_0, dict_0, dict_0)
        task_1 = module_0.Task(block_0)
        var_0 = task_1.get_first_parent_include()
        str_0 = 'connecQion'
        task_2 = module_0.Task(str_0)
        str_1 = '}zch7`fSfqmZ'
        var_1 = task_1.__repr__()
        var_2 = task_2.__repr__()
        var_3 = task_0.load(str_1)
    except BaseException:
        pass

def test_case_20():
    try:
        task_0 = module_0.Task()
        var_0 = task_0.get_include_params()
        tuple_0 = ()
        task_1 = module_0.Task(tuple_0)
        var_1 = task_1.serialize()
        task_2 = module_0.Task()
        bytes_0 = b'\x9a'
        task_3 = module_0.Task(tuple_0, bytes_0)
        var_2 = task_3.serialize()
    except BaseException:
        pass

def test_case_21():
    try:
        str_0 = 'action'
        task_0 = module_0.Task()
        str_1 = 'local_action'
        str_2 = 'test'
        str_3 = {str_0: str_2}
        str_4 = {str_1: str_3}
        var_0 = task_0.all_parents_static()
        var_1 = task_0.preprocess_data(str_4)
    except BaseException:
        pass

def test_case_22():
    try:
        task_0 = module_0.Task()
        str_0 = 'action'
        str_1 = 'module'
        str_2 = 'test'
        str_3 = {str_1: str_2}
        str_4 = {str_0: str_3}
        var_0 = task_0.preprocess_data(str_4)
    except BaseException:
        pass

def test_case_23():
    try:
        task_0 = module_0.Task()
        str_0 = 'action'
        str_1 = 'module'
        str_2 = 'est'
        str_3 = {str_1: str_2, str_0: str_0}
        var_0 = task_0.preprocess_data(str_3)
        task_1 = module_0.Task()
        var_1 = task_1.all_parents_static()
        str_4 = 'HTTPSConnection'
        var_2 = task_0.preprocess_data(str_4)
    except BaseException:
        pass

def test_case_24():
    try:
        task_0 = module_0.Task()
        str_0 = 'rorm'
        str_1 = 'parent'
        str_2 = 'tags'
        str_3 = 'environment'
        str_4 = 'implicit'
        str_5 = 'when'
        str_6 = 'args'
        str_7 = 'action'
        str_8 = 'name'
        str_9 = 'version'
        str_10 = 'block_monitor'
        var_0 = None
        var_1 = {str_8: str_10, str_9: var_0}
        str_11 = 'block'
        str_12 = 'depth'
        str_13 = 'loop'
        var_2 = []
        int_0 = 3
        str_14 = 'block1'
        var_3 = {str_11: var_2, str_12: int_0, str_8: str_14, str_1: var_0, str_0: var_0, str_13: var_0}
        str_15 = 'always'
        str_16 = [str_15]
        str_17 = 'ANSIBLE_LOOKUP_PLUGINS'
        str_18 = '/Users/sforestier/.ansible/lookup_plugins'
        str_19 = {str_17: str_18}
        bool_0 = False
        str_20 = 'not update_class == "1"'
        var_4 = {}
        str_21 = 'include_role'
        str_22 = 'include role block_monitor'
        var_5 = {str_0: var_1, str_1: var_3, str_2: str_16, str_3: str_19, str_4: bool_0, str_5: str_20, str_6: var_4, str_7: str_21, str_8: str_22}
        var_6 = task_0.deserialize(var_5)
    except BaseException:
        pass