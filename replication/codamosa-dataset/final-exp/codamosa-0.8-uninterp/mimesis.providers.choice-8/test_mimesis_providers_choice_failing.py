# Automatically generated by Pynguin.
import mimesis.providers.choice as module_0

def test_case_0():
    try:
        float_0 = 4.3
        choice_0 = module_0.Choice()
        var_0 = choice_0.__call__(float_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bool_0 = True
        choice_0 = module_0.Choice()
        str_0 = '.works'
        dict_0 = {bool_0: str_0, str_0: choice_0, choice_0: bool_0}
        int_0 = None
        var_0 = choice_0.__call__(dict_0, int_0, bool_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'backout'
        choice_0 = module_0.Choice()
        choice_1 = module_0.Choice()
        var_0 = choice_0.__call__(str_0)
        int_0 = 2178
        var_1 = choice_0.__call__(int_0)
    except BaseException:
        pass

def test_case_3():
    try:
        list_0 = []
        choice_0 = module_0.Choice()
        choice_1 = module_0.Choice(*list_0)
        bytes_0 = b'\xdb\xfa\x01h]\xae'
        var_0 = choice_1.__call__(bytes_0)
        choice_2 = module_0.Choice()
        choice_3 = module_0.Choice()
        choice_4 = module_0.Choice()
        var_1 = choice_4.__call__(list_0)
    except BaseException:
        pass

def test_case_4():
    try:
        list_0 = []
        str_0 = '.sz'
        list_1 = [list_0, list_0, str_0, list_0]
        int_0 = 90
        bool_0 = True
        dict_0 = {}
        choice_0 = module_0.Choice(**dict_0)
        var_0 = choice_0.__call__(list_1, int_0, bool_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'cw +'
        choice_0 = module_0.Choice()
        var_0 = choice_0.__call__(str_0)
        str_1 = 'L\te'
        bool_0 = True
        choice_1 = module_0.Choice()
        var_1 = choice_1.__call__(str_1, bool_0)
        choice_2 = module_0.Choice()
        int_0 = -44
        choice_3 = module_0.Choice()
        bool_1 = True
        choice_4 = module_0.Choice()
        var_2 = choice_4.__call__(str_1, int_0, bool_1)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'cw +'
        choice_0 = module_0.Choice()
        var_0 = choice_0.__call__(str_0)
        str_1 = 'L\te'
        bool_0 = True
        choice_1 = module_0.Choice()
        var_1 = choice_1.__call__(str_1, bool_0)
        choice_2 = module_0.Choice()
        choice_3 = module_0.Choice()
        str_2 = '!\r>\t!9-\r\x0b#r0nFe:\x0cS\t'
        int_0 = 2192
        bool_1 = True
        var_2 = choice_2.__call__(str_2, int_0, bool_1)
    except BaseException:
        pass