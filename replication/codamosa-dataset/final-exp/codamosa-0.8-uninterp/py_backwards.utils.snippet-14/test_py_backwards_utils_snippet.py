# Automatically generated by Pynguin.
import typed_ast._ast3 as module_0
import py_backwards.utils.snippet as module_1
import typed_ast.ast3 as module_2

def test_case_0():
    pass

def test_case_1():
    a_s_t_0 = module_0.AST()
    iterable_0 = module_1.find_variables(a_s_t_0)

def test_case_2():
    class_def_0 = module_0.ClassDef()
    str_0 = None
    str_1 = '#\x0c8U'
    dict_0 = {str_0: str_0, str_1: str_0}
    variables_replacer_0 = module_1.VariablesReplacer(dict_0)
    class_def_1 = variables_replacer_0.visit_ClassDef(class_def_0)

def test_case_3():
    str_0 = '4ax\x0b2c'
    dict_0 = {str_0: str_0}
    function_def_0 = module_0.FunctionDef(**dict_0)
    str_1 = 'tkCommonDialog'
    a_s_t_0 = module_0.AST(**dict_0)
    except_handler_0 = module_0.ExceptHandler()
    str_2 = None
    dict_1 = {str_2: str_1, str_1: a_s_t_0}
    variables_replacer_0 = module_1.VariablesReplacer(dict_1)
    except_handler_1 = variables_replacer_0.visit_ExceptHandler(except_handler_0)
    iterable_0 = module_1.find_variables(a_s_t_0)
    function_def_1 = variables_replacer_0.visit_FunctionDef(function_def_0)

def test_case_4():
    str_0 = ',*y'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    name_0 = module_0.Name(**dict_0)
    str_1 = 'Tree changed:\n{}'
    a_s_t_0 = module_0.AST()
    dict_1 = {str_1: a_s_t_0, str_1: str_1}
    variables_replacer_0 = module_1.VariablesReplacer(dict_1)
    dict_2 = {}
    variables_replacer_1 = module_1.VariablesReplacer(dict_2)
    name_1 = variables_replacer_1.visit_Name(name_0)

def test_case_5():
    str_0 = '\nlet(x)\nx += 1\nlet(y)\ny -= 2\nz = x + y\n'
    var_0 = module_2.parse(str_0)
    iterable_0 = module_1.find_variables(var_0)
    var_1 = list(iterable_0)
    function_def_0 = module_0.FunctionDef()
    dict_0 = {}
    variables_replacer_0 = module_1.VariablesReplacer(dict_0)
    function_def_1 = variables_replacer_0.visit_FunctionDef(function_def_0)

def test_case_6():
    import_from_0 = None
    module_1.extend(import_from_0)
    attribute_0 = module_0.Attribute()
    str_0 = 'Mp-'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    variables_replacer_0 = module_1.VariablesReplacer(dict_0)
    attribute_1 = variables_replacer_0.visit_Attribute(attribute_0)
    variables_replacer_1 = module_1.VariablesReplacer(dict_0)

def test_case_7():
    keyword_0 = module_0.keyword()
    str_0 = None
    dict_0 = {str_0: str_0}
    variables_replacer_0 = module_1.VariablesReplacer(dict_0)
    keyword_1 = variables_replacer_0.visit_keyword(keyword_0)
    a_s_t_0 = module_0.AST()
    dict_1 = {str_0: a_s_t_0, str_0: str_0, str_0: a_s_t_0, str_0: str_0}
    variables_replacer_1 = module_1.VariablesReplacer(dict_1)
    module_1.extend_tree(a_s_t_0, dict_1)
    dict_2 = {str_0: str_0}
    module_1.extend_tree(a_s_t_0, dict_2)
    str_1 = '\nlet(x)\nx += 1\nlet(y)\ny -= 2\nz = x + y\n'
    var_0 = module_2.parse(str_1)
    iterable_0 = module_1.find_variables(var_0)
    var_1 = list(iterable_0)

def test_case_8():
    arg_0 = module_0.arg()
    dict_0 = {}
    variables_replacer_0 = module_1.VariablesReplacer(dict_0)
    arg_1 = variables_replacer_0.visit_arg(arg_0)
    str_0 = ''
    str_1 = "a8SQ'Q}%\x0c\x0cp0<8WO9X"
    a_s_t_0 = module_0.AST()
    list_0 = [a_s_t_0, a_s_t_0, a_s_t_0]
    dict_1 = {str_0: str_0, str_1: str_0, str_0: list_0}
    variables_replacer_1 = module_1.VariablesReplacer(dict_1)
    arg_2 = variables_replacer_1.visit_arg(arg_1)

def test_case_9():
    a_s_t_0 = module_0.AST()
    dict_0 = {}
    module_1.extend_tree(a_s_t_0, dict_0)

def test_case_10():
    callable_0 = None
    snippet_0 = module_1.snippet(callable_0)

def test_case_11():
    str_0 = '\nlet(x)\nx += 1\nlet(y)\ny -= 2\nz = x + y\n'
    var_0 = module_2.parse(str_0)
    iterable_0 = module_1.find_variables(var_0)
    module_1.extend(iterable_0)

def test_case_12():
    a_s_t_0 = module_0.AST()
    str_0 = '|gV\t}69fL'
    dict_0 = {str_0: str_0}
    module_1.extend_tree(a_s_t_0, dict_0)
    str_1 = '\nlet(x)\nx += 1\nlet(y)\ny -= 2\nz = x + y\n'
    var_0 = module_2.parse(str_1)
    iterable_0 = module_1.find_variables(var_0)
    var_1 = list(iterable_0)
    variables_replacer_0 = module_1.VariablesReplacer(dict_0)
    list_0 = [str_1, variables_replacer_0]
    dict_1 = {}
    import_from_0 = module_0.ImportFrom(*list_0, **dict_1)
    import_from_1 = variables_replacer_0.visit_ImportFrom(import_from_0)

def test_case_13():
    str_0 = '4ax\x0b2c'
    dict_0 = {str_0: str_0}
    function_def_0 = module_0.FunctionDef(**dict_0)
    str_1 = 'tkCommonDialog'
    a_s_t_0 = module_0.AST(**dict_0)
    str_2 = '{]QtTaJ%!%S'
    dict_1 = {str_0: a_s_t_0, str_2: str_1}
    module_1.extend_tree(a_s_t_0, dict_1)
    list_0 = [str_2, str_2, dict_0]
    except_handler_0 = module_0.ExceptHandler(*list_0)
    variables_replacer_0 = module_1.VariablesReplacer(dict_1)
    except_handler_1 = variables_replacer_0.visit_ExceptHandler(except_handler_0)
    variables_replacer_1 = module_1.VariablesReplacer(dict_1)
    except_handler_2 = variables_replacer_1.visit_ExceptHandler(except_handler_1)
    except_handler_3 = module_0.ExceptHandler()
    str_3 = None
    variables_replacer_2 = module_1.VariablesReplacer(dict_1)
    dict_2 = {str_3: str_1, str_1: a_s_t_0}
    variables_replacer_3 = module_1.VariablesReplacer(dict_2)
    except_handler_4 = variables_replacer_3.visit_ExceptHandler(except_handler_3)
    iterable_0 = module_1.find_variables(a_s_t_0)
    str_4 = None
    dict_3 = {str_1: str_1, str_1: str_1, str_4: str_4}
    import_from_0 = module_0.ImportFrom(*list_0, **dict_0)
    import_from_1 = variables_replacer_2.visit_ImportFrom(import_from_0)
    variables_replacer_4 = module_1.VariablesReplacer(dict_3)
    variables_replacer_5 = module_1.VariablesReplacer(dict_3)
    function_def_1 = variables_replacer_3.visit_FunctionDef(function_def_0)

def test_case_14():
    str_0 = '4ax\x0b2c'
    dict_0 = {str_0: str_0}
    function_def_0 = module_0.FunctionDef(**dict_0)
    str_1 = '*'
    a_s_t_0 = module_0.AST(**dict_0)
    str_2 = '{]QtTaJ%!%S'
    dict_1 = {str_0: a_s_t_0, str_2: str_1}
    module_1.extend_tree(a_s_t_0, dict_1)
    except_handler_0 = module_0.ExceptHandler()
    except_handler_1 = module_0.ExceptHandler()
    module_1.extend(except_handler_1)
    str_3 = None
    dict_2 = {str_3: str_1, str_1: a_s_t_0}
    variables_replacer_0 = module_1.VariablesReplacer(dict_2)
    function_def_1 = variables_replacer_0.visit_FunctionDef(function_def_0)
    except_handler_2 = variables_replacer_0.visit_ExceptHandler(except_handler_0)
    module_1.extend(except_handler_1)
    iterable_0 = module_1.find_variables(a_s_t_0)
    str_4 = None
    dict_3 = {str_1: str_1, str_1: str_1, str_4: str_4}
    variables_replacer_1 = module_1.VariablesReplacer(dict_3)
    variables_replacer_2 = module_1.VariablesReplacer(dict_2)
    name_0 = module_0.Name()
    name_1 = variables_replacer_0.visit_Name(name_0)
    name_2 = variables_replacer_1.visit_Name(name_1)
    name_3 = variables_replacer_1.visit_Name(name_2)
    name_4 = variables_replacer_1.visit_Name(name_3)
    name_5 = variables_replacer_0.visit_Name(name_4)
    function_def_2 = variables_replacer_2.visit_FunctionDef(function_def_0)

def test_case_15():
    str_0 = '\nlet(x)\nx += 1\nlet(y)\ny -= 2\nz = x + y\n'
    var_0 = module_2.parse(str_0)
    iterable_0 = module_1.find_variables(var_0)