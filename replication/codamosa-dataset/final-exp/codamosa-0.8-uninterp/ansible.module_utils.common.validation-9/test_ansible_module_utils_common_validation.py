# Automatically generated by Pynguin.
import ansible.module_utils.common.validation as module_0

def test_case_0():
    pass

def test_case_1():
    str_0 = 'Test the function check_type_bytes()'
    set_0 = set()
    var_0 = module_0.check_required_together(str_0, set_0, str_0)

def test_case_2():
    str_0 = '['
    var_0 = module_0.safe_eval(str_0)

def test_case_3():
    int_0 = -205
    var_0 = module_0.safe_eval(int_0)

def test_case_4():
    str_0 = '3'
    var_0 = module_0.safe_eval(str_0)

def test_case_5():
    str_0 = 'x{RC'
    bool_0 = False
    var_0 = module_0.check_required_together(str_0, str_0, bool_0)
    str_1 = 'z'
    float_0 = 767.8851
    var_1 = module_0.safe_eval(str_1, float_0, str_1)

def test_case_6():
    bytes_0 = b'\xee\x9a\xdct\xde\xb1xa\xa8'
    set_0 = set()
    var_0 = module_0.check_mutually_exclusive(bytes_0, set_0)

def test_case_7():
    dict_0 = {}
    bytes_0 = b'\xac\x1aS\xa5\xc4G.\xe4\x18\xc0\xe8'
    int_0 = -2036
    var_0 = module_0.check_required_one_of(dict_0, bytes_0, int_0)
    str_0 = '\x0bNj3}[)lblz#B9g=9i&'
    var_1 = module_0.check_type_dict(str_0)

def test_case_8():
    float_0 = -4768.0
    var_0 = module_0.check_missing_parameters(float_0)

def test_case_9():
    int_0 = 2862
    var_0 = module_0.check_type_path(int_0)

def test_case_10():
    float_0 = 60.0
    var_0 = module_0.check_type_list(float_0)
    str_0 = '+Nj3}[)lblz#B9g=9i&'
    var_1 = module_0.check_type_dict(str_0)

def test_case_11():
    str_0 = '+Nj3}[)lblz#B9g=9i&'
    var_0 = module_0.check_type_dict(str_0)

def test_case_12():
    str_0 = "You cannot use 'static' on an include with a loop"
    bool_0 = True
    var_0 = module_0.check_type_bool(bool_0)
    dict_0 = {str_0: str_0}
    list_0 = [dict_0, dict_0]
    dict_1 = {str_0: str_0}
    var_1 = module_0.check_required_by(dict_1, dict_1)
    var_2 = module_0.check_required_together(str_0, dict_0, list_0)

def test_case_13():
    int_0 = 3
    var_0 = module_0.check_type_int(int_0)

def test_case_14():
    float_0 = 1017.377257
    var_0 = module_0.check_type_float(float_0)

def test_case_15():
    float_0 = 1330.8154885661029
    var_0 = module_0.check_type_raw(float_0)

def test_case_16():
    int_0 = 19
    var_0 = module_0.check_type_bytes(int_0)

def test_case_17():
    set_0 = None
    tuple_0 = (set_0,)
    var_0 = module_0.check_type_jsonarg(tuple_0)
    str_0 = '\x0bNEj3}[)Wblz#B9g=9u&'
    var_1 = module_0.check_type_dict(str_0)

def test_case_18():
    str_0 = 'Z}x_7'
    var_0 = module_0.check_type_jsonarg(str_0)

def test_case_19():
    str_0 = '\x0bNj3[)lblz#B9g=i&'
    var_0 = module_0.check_type_dict(str_0)
    str_1 = None
    tuple_0 = ()
    var_1 = module_0.check_mutually_exclusive(str_1, tuple_0)

def test_case_20():
    set_0 = set()
    int_0 = -2126
    float_0 = 100.0
    bool_0 = None
    str_0 = 'ZOC_3F4q]v-)Cud@H,R'
    var_0 = module_0.check_required_if(bool_0, float_0, str_0)
    dict_0 = {float_0: float_0}
    var_1 = module_0.check_required_together(set_0, int_0, dict_0)

def test_case_21():
    str_0 = '['
    var_0 = module_0.safe_eval(str_0)
    str_1 = 'The configured collection path {0} does not exist.'
    dict_0 = {str_1: str_1}
    var_1 = module_0.check_type_dict(dict_0)

def test_case_22():
    str_0 = '\x0bNj3[)lblz#B9g=i&'
    var_0 = module_0.check_type_dict(str_0)
    str_1 = None
    bytes_0 = b'J2\x9d(g\xb5\x8dh'
    var_1 = module_0.check_required_together(str_1, bytes_0, bytes_0)

def test_case_23():
    set_0 = None
    var_0 = module_0.check_missing_parameters(set_0)
    float_0 = None
    bytes_0 = b';\x07\xb9\xd6\xc6\xfa\xc5\xb5>C'
    var_1 = module_0.check_required_by(float_0, bytes_0)

def test_case_24():
    str_0 = '\x0bNj3}[)lblz#B9g=9i&'
    tuple_0 = ()
    var_0 = module_0.check_required_if(tuple_0, str_0)

def test_case_25():
    int_0 = 19
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
    list_0 = [dict_0, dict_0]
    tuple_0 = (list_0,)
    int_1 = 1989
    str_0 = '5|Z~).(|R~(mid^A'
    var_0 = module_0.safe_eval(tuple_0, int_1, str_0)

def test_case_26():
    bool_0 = None
    set_0 = {bool_0}
    str_0 = 'Z-c{'
    tuple_0 = (set_0, str_0)
    dict_0 = {str_0: bool_0, str_0: str_0}
    list_0 = [bool_0, bool_0]
    str_1 = '0|6hHfH$_4DG<p'
    var_0 = module_0.check_required_together(str_1, list_0)
    str_2 = "*7l*q8H[soWBKw'Fo1"
    var_1 = module_0.check_required_if(dict_0, str_2, tuple_0)

def test_case_27():
    dict_0 = {}
    str_0 = '\\RWPl5tZf@/>1JKbH%*'
    var_0 = module_0.check_required_by(dict_0, dict_0, str_0)

def test_case_28():
    str_0 = 'import os'
    var_0 = module_0.safe_eval(str_0)

def test_case_29():
    var_0 = None
    var_1 = None
    var_2 = None
    var_3 = module_0.check_required_arguments(var_0, var_1, var_2)
    str_0 = 'o'
    str_1 = 'bar'
    str_2 = [str_0, str_1]
    list_0 = []
    str_3 = '^.*ziA4J! vQCk%7('
    var_4 = module_0.check_mutually_exclusive(list_0, str_3)
    var_5 = module_0.check_required_arguments(var_0, var_1, str_2)
    str_4 = 'test_param'
    str_5 = {str_4: str_0}
    var_6 = module_0.check_required_arguments(var_0, str_5, str_2)
    str_6 = 'test_param_required'
    str_7 = 'required'
    bool_0 = False
    bool_1 = {str_7: bool_0}
    bool_2 = {str_6: bool_1}
    var_7 = module_0.check_required_arguments(bool_2, str_5, str_2)

def test_case_30():
    var_0 = dict()
    var_1 = dict()
    str_0 = 'param1'
    var_2 = dict(requirement1=var_1, requirement2=var_0)
    var_3 = dict(requirement1=str_0, requirement2=str_0)
    var_4 = module_0.check_required_by(var_2, var_3)

def test_case_31():
    str_0 = 'key'
    str_1 = 'path'
    str_2 = 'state'
    str_3 = 'val'
    str_4 = '/path/to/file'
    str_5 = 'present'
    str_6 = {str_0: str_3, str_1: str_4, str_2: str_5}
    str_7 = (str_1,)
    bool_0 = False
    var_0 = [str_2, str_5, str_7, bool_0]
    var_1 = [var_0]
    var_2 = module_0.check_required_if(var_1, str_6)
    str_8 = {str_0: str_3, str_1: str_4}
    var_3 = module_0.check_required_if(var_1, str_8)
    str_9 = {str_0: str_3, str_1: str_4, str_2: str_4}
    var_4 = module_0.check_required_if(var_1, str_9)

def test_case_32():
    str_0 = 'a=1, b="foo,bar", c=3'
    var_0 = module_0.check_type_dict(str_0)
    list_0 = [str_0, str_0, str_0]
    var_1 = module_0.check_mutually_exclusive(list_0, list_0)
    var_2 = module_0.check_type_dict(str_0)

def test_case_33():
    var_0 = None
    dict_0 = {}
    float_0 = -1083.6459
    var_1 = module_0.check_required_by(dict_0, float_0, dict_0)
    bool_0 = False
    var_2 = module_0.check_type_int(bool_0)
    var_3 = None
    var_4 = None
    var_5 = module_0.check_required_arguments(var_0, var_3, var_4)
    str_0 = '2'
    str_1 = [str_0, str_0]
    var_6 = module_0.check_required_arguments(var_0, var_3, str_1)
    str_2 = 'test_param'
    str_3 = {str_2: str_0}
    var_7 = module_0.check_required_arguments(var_0, str_3, str_1)
    var_8 = module_0.check_type_path(bool_0)
    str_4 = 'required'
    bool_1 = True
    bytes_0 = b'\x15\xe6\xb4\x89\xbd\xf0~?\x08\x98'
    var_9 = module_0.check_type_path(bytes_0)
    bool_2 = {str_4: bool_1}
    bool_3 = {str_2: bool_2}
    var_10 = module_0.check_required_arguments(bool_3, str_3, str_1)

def test_case_34():
    str_0 = 'foo'
    var_0 = module_0.safe_eval(str_0, str_0)
    str_1 = 'foo.bar()'
    var_1 = module_0.safe_eval(str_1, str_1)
    str_2 = 'import datetime'
    var_2 = module_0.safe_eval(str_2, var_1)
    var_3 = module_0.safe_eval(str_0, var_2)
    str_3 = '[1, 2, 3]'
    var_4 = module_0.safe_eval(str_3, var_0)
    var_5 = module_0.safe_eval(str_3, var_3)

def test_case_35():
    str_0 = "You cannot use 'static' on an include with a loop"
    dict_0 = {str_0: str_0}
    list_0 = [dict_0, dict_0]
    str_1 = 'BB3'
    dict_1 = {str_1: str_1}
    var_0 = module_0.check_required_by(dict_1, dict_1)
    var_1 = module_0.check_required_together(str_0, dict_0, list_0)