# Automatically generated by Pynguin.
import ansible.module_utils.facts.ansible_collector as module_0

def test_case_0():
    try:
        float_0 = -3416.708594
        str_0 = '-'
        list_0 = [str_0, str_0]
        var_0 = module_0.get_ansible_collector(float_0, list_0)
    except BaseException:
        pass

def test_case_1():
    try:
        collector_meta_data_collector_0 = module_0.CollectorMetaDataCollector()
        dict_0 = {collector_meta_data_collector_0: collector_meta_data_collector_0}
        ansible_fact_collector_0 = module_0.AnsibleFactCollector(dict_0)
        set_0 = {collector_meta_data_collector_0, collector_meta_data_collector_0, collector_meta_data_collector_0, ansible_fact_collector_0}
        tuple_0 = None
        tuple_1 = (tuple_0,)
        var_0 = module_0.get_ansible_collector(set_0, ansible_fact_collector_0, tuple_1)
    except BaseException:
        pass

def test_case_2():
    try:
        collector_meta_data_collector_0 = module_0.CollectorMetaDataCollector()
        str_0 = 'S/8s{v)'
        set_0 = {str_0, collector_meta_data_collector_0, str_0, str_0, str_0}
        ansible_fact_collector_0 = module_0.AnsibleFactCollector(set_0, set_0, str_0)
        var_0 = ansible_fact_collector_0.collect(ansible_fact_collector_0, set_0)
    except BaseException:
        pass

def test_case_3():
    try:
        int_0 = 2768
        str_0 = None
        list_0 = [str_0, int_0, str_0, str_0]
        collector_meta_data_collector_0 = module_0.CollectorMetaDataCollector(list_0)
        var_0 = collector_meta_data_collector_0.collect()
        ansible_fact_collector_0 = module_0.AnsibleFactCollector()
        var_1 = module_0.get_ansible_collector(ansible_fact_collector_0, ansible_fact_collector_0, ansible_fact_collector_0, int_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = ''
        collector_meta_data_collector_0 = module_0.CollectorMetaDataCollector(str_0)
        var_0 = collector_meta_data_collector_0.collect()
        collector_meta_data_collector_1 = None
        var_1 = collector_meta_data_collector_0.collect()
        set_0 = {collector_meta_data_collector_1}
        list_0 = [str_0, set_0, var_0]
        collector_meta_data_collector_2 = module_0.CollectorMetaDataCollector(list_0)
        collector_meta_data_collector_3 = module_0.CollectorMetaDataCollector(set_0)
        ansible_fact_collector_0 = module_0.AnsibleFactCollector(collector_meta_data_collector_1)
        bytes_0 = b'\xa1-\x8aW\x9e\x80\xf7\xc1d\xc7\x02\\ \x82,'
        bool_0 = False
        str_1 = '}ACm}hQd6Ay6{'
        collector_meta_data_collector_4 = module_0.CollectorMetaDataCollector()
        dict_0 = {collector_meta_data_collector_3: str_1, collector_meta_data_collector_1: ansible_fact_collector_0, collector_meta_data_collector_3: str_1, collector_meta_data_collector_4: collector_meta_data_collector_1}
        str_2 = "IIcuf'O\nH#T,>\x0bH>h[Bw"
        var_2 = module_0.get_ansible_collector(bytes_0, bool_0, str_1, dict_0, bytes_0, str_2)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = '+y2u/Q,W\n'
        int_0 = 301
        str_1 = ''
        list_0 = [str_1, str_0, str_0]
        ansible_fact_collector_0 = module_0.AnsibleFactCollector(list_0)
        var_0 = module_0.get_ansible_collector(int_0, str_1, ansible_fact_collector_0)
    except BaseException:
        pass

def test_case_6():
    try:
        set_0 = set()
        float_0 = 516.572817
        set_1 = {float_0, float_0, float_0, float_0}
        str_0 = 'Subsystem'
        float_1 = 100.0
        collector_meta_data_collector_0 = module_0.CollectorMetaDataCollector(set_1)
        collector_meta_data_collector_1 = module_0.CollectorMetaDataCollector(set_1, str_0, float_1, collector_meta_data_collector_0)
        var_0 = collector_meta_data_collector_1.collect(set_0)
        ansible_fact_collector_0 = None
        str_1 = '\'\x0cx5N/E"+Syzn%'
        dict_0 = {ansible_fact_collector_0: ansible_fact_collector_0, ansible_fact_collector_0: ansible_fact_collector_0}
        bool_0 = True
        collector_meta_data_collector_2 = module_0.CollectorMetaDataCollector(bool_0)
        dict_1 = {}
        collector_meta_data_collector_3 = module_0.CollectorMetaDataCollector(collector_meta_data_collector_2, dict_1)
        var_1 = collector_meta_data_collector_3.collect(dict_0)
        float_2 = -254.5152
        var_2 = module_0.get_ansible_collector(str_1, float_2)
    except BaseException:
        pass

def test_case_7():
    try:
        collector_meta_data_collector_0 = module_0.CollectorMetaDataCollector()
        float_0 = -306.52999236772234
        str_0 = ''
        dict_0 = {float_0: float_0, collector_meta_data_collector_0: float_0, collector_meta_data_collector_0: collector_meta_data_collector_0, str_0: str_0, str_0: str_0, collector_meta_data_collector_0: float_0}
        set_0 = {str_0, str_0}
        ansible_fact_collector_0 = module_0.AnsibleFactCollector(dict_0, str_0, set_0)
        var_0 = ansible_fact_collector_0.collect(float_0, dict_0)
    except BaseException:
        pass

def test_case_8():
    try:
        collector_meta_data_collector_0 = module_0.CollectorMetaDataCollector()
        float_0 = -2408.566881446185
        str_0 = 'uha5_qrpt'
        dict_0 = {float_0: float_0, str_0: str_0, str_0: str_0, collector_meta_data_collector_0: float_0}
        bytes_0 = b'|\xe0V4\x01P\xed(a]\x9en\xe9\x82\xf9\x97'
        ansible_fact_collector_0 = module_0.AnsibleFactCollector(bytes_0, str_0)
        var_0 = collector_meta_data_collector_0.collect(collector_meta_data_collector_0)
        bytes_1 = b'\x1d\xae\xcc\xff>8\x00\xed\xc27\xe3\xd8sh\xa2'
        collector_meta_data_collector_1 = module_0.CollectorMetaDataCollector()
        set_0 = {bytes_1, str_0, str_0}
        var_1 = ansible_fact_collector_0.collect()
        collector_meta_data_collector_2 = module_0.CollectorMetaDataCollector()
        var_2 = collector_meta_data_collector_2.collect()
        ansible_fact_collector_1 = module_0.AnsibleFactCollector(dict_0, str_0, set_0)
        var_3 = ansible_fact_collector_1.collect(bytes_1, set_0)
    except BaseException:
        pass