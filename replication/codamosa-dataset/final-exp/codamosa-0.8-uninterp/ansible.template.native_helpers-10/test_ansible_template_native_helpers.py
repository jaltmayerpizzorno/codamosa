# Automatically generated by Pynguin.
import ansible.template.native_helpers as module_0
import ansible.parsing.yaml.objects as module_1

def test_case_0():
    pass

def test_case_1():
    str_0 = 'GB[E\x0bB\tg'
    var_0 = module_0.ansible_native_concat(str_0)

def test_case_2():
    str_0 = None
    set_0 = {str_0, str_0, str_0, str_0}
    var_0 = module_0.ansible_native_concat(set_0)

def test_case_3():
    str_0 = "X1'$~xW"
    str_1 = 'Eit ini++\n+V'
    bytes_0 = b'b\x05\xa4N\x04\x92\xf3\xa3\x0bE\x0b\xcd\xee`\xe2\x1c`F'
    var_0 = module_0.ansible_native_concat(str_1)
    str_2 = 'Ou'
    var_1 = module_0.ansible_native_concat(str_2)
    var_2 = module_0.ansible_native_concat(str_2)
    var_3 = module_0.ansible_native_concat(str_0)
    list_0 = [str_2]
    var_4 = module_0.ansible_native_concat(list_0)
    list_1 = [bytes_0]
    var_5 = module_0.ansible_native_concat(list_1)

def test_case_4():
    int_0 = 1
    int_1 = 2
    int_2 = 3
    int_3 = [int_0, int_1, int_2]
    var_0 = module_0.ansible_native_concat(int_3)
    str_0 = '|^BI"'
    ansible_vault_encrypted_unicode_0 = module_1.AnsibleVaultEncryptedUnicode(str_0)
    tuple_0 = (ansible_vault_encrypted_unicode_0,)
    var_1 = module_0.ansible_native_concat(tuple_0)
    str_1 = '2'
    var_2 = [int_0, str_1, int_2]
    var_3 = module_0.ansible_native_concat(var_2)