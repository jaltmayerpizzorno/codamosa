# Automatically generated by Pynguin.
import ansible.plugins.callback.junit as module_0

def test_case_0():
    try:
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_handler_task_start(callback_module_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'Q+QK8\x0bqxR{-DL-PR'
        callback_module_0 = module_0.CallbackModule()
        set_0 = {callback_module_0}
        var_0 = callback_module_0.v2_playbook_on_stats(str_0)
        var_1 = callback_module_0.v2_playbook_on_start(set_0)
    except BaseException:
        pass

def test_case_2():
    try:
        complex_0 = None
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_on_skipped(complex_0)
    except BaseException:
        pass

def test_case_3():
    try:
        set_0 = None
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_start(set_0)
    except BaseException:
        pass

def test_case_4():
    try:
        bool_0 = True
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_play_start(bool_0)
    except BaseException:
        pass

def test_case_5():
    try:
        bool_0 = False
        bytes_0 = b'\xca\xf4",\x9c!\na\x84\xaeX\x06\xfc\xd1IK\x9e\xb0'
        int_0 = 2435
        int_1 = 2958
        bytes_1 = b'\x89}Jhz\xd7uTn\x96\x1f\x8d\x1f\x87'
        task_data_0 = module_0.TaskData(bool_0, bytes_0, int_0, int_1, bytes_1)
        set_0 = {task_data_0, int_0, bool_0, bytes_1}
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_on_no_hosts(set_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'Q+QK8\x0bqxR{-DL-PR'
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_stats(str_0)
        float_0 = 4111.778
        int_0 = 1087
        bool_0 = False
        bool_1 = True
        tuple_0 = (bool_1,)
        str_1 = ':PTuo'
        host_data_0 = module_0.HostData(int_0, bool_0, tuple_0, str_1)
        str_2 = 'nzJ]9\x0c\x0cif[WO\x0cz'
        bool_2 = False
        list_0 = []
        host_data_1 = module_0.HostData(float_0, str_2, bool_2, list_0)
        var_1 = callback_module_0.v2_playbook_on_task_start(host_data_1, callback_module_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'r\x0b-\tpW*6 >nOX\x0c^x'
        callback_module_0 = module_0.CallbackModule()
        dict_0 = {str_0: str_0, str_0: str_0, callback_module_0: callback_module_0, str_0: callback_module_0}
        callback_module_1 = module_0.CallbackModule()
        var_0 = callback_module_1.v2_playbook_on_cleanup_task_start(dict_0)
    except BaseException:
        pass

def test_case_8():
    try:
        callback_module_0 = module_0.CallbackModule()
        dict_0 = {callback_module_0: callback_module_0}
        var_0 = callback_module_0.v2_runner_on_failed(dict_0, callback_module_0)
    except BaseException:
        pass

def test_case_9():
    try:
        callback_module_0 = module_0.CallbackModule()
        callback_module_1 = module_0.CallbackModule()
        str_0 = 'Pzg_'
        var_0 = callback_module_0.v2_runner_on_failed(str_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = 'f-utYT&rkT2'
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_include(str_0)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = '<imTf'
        float_0 = -2738.66019
        str_1 = 'vw\t'
        tuple_0 = (float_0, str_1, str_1)
        bytes_0 = b'\xa6\x19ga%'
        int_0 = 50
        bool_0 = False
        bytes_1 = b'\x0b\x9c\xe2['
        task_data_0 = module_0.TaskData(tuple_0, bytes_0, int_0, bool_0, bytes_1)
        var_0 = task_data_0.add_host(str_0)
    except BaseException:
        pass

def test_case_12():
    try:
        bool_0 = False
        list_0 = [bool_0, bool_0]
        callback_module_0 = module_0.CallbackModule()
        int_0 = 31
        set_0 = {int_0, callback_module_0}
        bool_1 = True
        float_0 = -381.95
        host_data_0 = module_0.HostData(set_0, bool_1, float_0, list_0)
        host_data_1 = module_0.HostData(callback_module_0, int_0, callback_module_0, host_data_0)
        str_0 = 'jlw7?'
        var_0 = callback_module_0.v2_runner_on_ok(str_0)
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = 'uuid'
        str_1 = 'naam '
        str_2 = 'path'
        str_3 = 'play'
        str_4 = 'action'
        task_data_0 = module_0.TaskData(str_0, str_1, str_2, str_3, str_4)
        str_5 = 'uuid1'
        str_6 = 'name1'
        str_7 = 'ok'
        str_8 = 'result1'
        host_data_0 = module_0.HostData(str_5, str_6, str_7, str_8)
        str_9 = 'uuid2'
        str_10 = 'name2'
        str_11 = 'failed'
        str_12 = 'result2'
        host_data_1 = module_0.HostData(str_9, str_10, str_11, str_12)
        str_13 = 'result3'
        host_data_2 = module_0.HostData(str_9, str_10, str_7, str_13)
        var_0 = task_data_0.add_host(host_data_0)
        var_1 = task_data_0.add_host(host_data_1)
        var_2 = task_data_0.add_host(host_data_2)
    except BaseException:
        pass