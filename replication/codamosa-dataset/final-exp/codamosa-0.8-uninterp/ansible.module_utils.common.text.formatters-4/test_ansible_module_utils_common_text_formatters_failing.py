# Automatically generated by Pynguin.
import ansible.module_utils.common.text.formatters as module_0

def test_case_0():
    try:
        int_0 = 1548
        var_0 = module_0.lenient_lowercase(int_0)
    except BaseException:
        pass

def test_case_1():
    try:
        float_0 = -242.2
        var_0 = module_0.human_to_bytes(float_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'ansible_play_name'
        dict_0 = {str_0: str_0, str_0: str_0}
        str_1 = 'Linux'
        var_0 = module_0.bytes_to_human(dict_0, str_1)
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'&'
        bool_0 = True
        dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bool_0: bytes_0}
        str_0 = 'a?'
        var_0 = module_0.lenient_lowercase(str_0)
        var_1 = module_0.bytes_to_human(dict_0, dict_0, str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        int_0 = 1208925819614629174706176
        var_0 = module_0.bytes_to_human(int_0)
        bytes_0 = None
        var_1 = module_0.lenient_lowercase(bytes_0)
    except BaseException:
        pass

def test_case_5():
    try:
        int_0 = 301
        str_0 = '4<Q%;'
        var_0 = module_0.human_to_bytes(int_0, str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        bool_0 = True
        str_0 = '1Mb'
        var_0 = module_0.human_to_bytes(str_0, bool_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = '1MB'
        var_0 = module_0.human_to_bytes(str_0)
        str_1 = '10M'
        var_1 = module_0.human_to_bytes(str_1)
        str_2 = '10MB'
        var_2 = module_0.human_to_bytes(str_2)
        str_3 = '1K'
        var_3 = module_0.human_to_bytes(str_3)
        str_4 = '1BX]'
        var_4 = module_0.human_to_bytes(str_4)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = '1B'
        float_0 = 271.6452864731154
        var_0 = module_0.bytes_to_human(float_0, float_0)
        var_1 = module_0.human_to_bytes(str_0)
        var_2 = module_0.human_to_bytes(str_0)
        int_0 = 606
        var_3 = module_0.human_to_bytes(int_0)
        bool_0 = True
        var_4 = module_0.human_to_bytes(str_0)
        str_1 = '4MqIb@a$gW{'
        var_5 = module_0.human_to_bytes(str_1, int_0, bool_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = '1M'
        str_1 = '1B'
        float_0 = 272.08
        int_0 = 951
        var_0 = module_0.bytes_to_human(float_0, int_0)
        float_1 = 936.359682
        var_1 = module_0.bytes_to_human(float_0, float_1)
        var_2 = module_0.human_to_bytes(str_1)
        var_3 = module_0.human_to_bytes(str_1)
        int_1 = 606
        var_4 = module_0.human_to_bytes(int_1)
        dict_0 = {float_1: str_0}
        str_2 = 'W5\rd)u7'
        str_3 = 'K'
        var_5 = module_0.bytes_to_human(dict_0, str_2, str_3)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = '1M'
        str_1 = '1B'
        var_0 = module_0.human_to_bytes(str_1)
        str_2 = '10M'
        set_0 = set()
        str_3 = '}a^w'
        var_1 = module_0.human_to_bytes(str_2, set_0, str_3)
        int_0 = 64
        var_2 = module_0.bytes_to_human(int_0)
        var_3 = module_0.human_to_bytes(var_2)
        int_1 = 606
        bool_0 = False
        var_4 = module_0.bytes_to_human(bool_0)
        var_5 = module_0.human_to_bytes(str_2)
        var_6 = module_0.human_to_bytes(int_1)
        bool_1 = False
        dict_0 = {str_2: var_0, str_0: str_0, var_3: str_1, bool_1: var_3}
        var_7 = module_0.lenient_lowercase(str_2)
        var_8 = module_0.lenient_lowercase(dict_0)
        str_4 = '10MB'
        var_9 = module_0.human_to_bytes(str_4)
        bytes_0 = b'\xc4\x81\xa3\xec\xd4\x07k\xd4\t9?\x1b)'
        int_2 = 1074
        var_10 = module_0.human_to_bytes(bytes_0, int_2)
    except BaseException:
        pass