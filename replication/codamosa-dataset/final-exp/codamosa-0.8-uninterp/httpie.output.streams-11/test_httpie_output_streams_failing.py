# Automatically generated by Pynguin.
import httpie.models as module_0
import httpie.output.streams as module_1
import httpie.output.processing as module_2

def test_case_0():
    try:
        int_0 = 1
        h_t_t_p_message_0 = module_0.HTTPMessage(int_0)
        base_stream_0 = module_1.BaseStream(h_t_t_p_message_0)
        conversion_0 = module_2.Conversion()
        iterable_0 = base_stream_0.iter_body()
    except BaseException:
        pass

def test_case_1():
    try:
        raw_stream_0 = module_1.RawStream()
    except BaseException:
        pass

def test_case_2():
    try:
        encoded_stream_0 = module_1.EncodedStream()
    except BaseException:
        pass

def test_case_3():
    try:
        conversion_0 = module_2.Conversion()
        str_0 = 'ssl3'
        optional_0 = conversion_0.get_converter(str_0)
        conversion_1 = module_2.Conversion()
        formatting_0 = None
        pretty_stream_0 = module_1.PrettyStream(conversion_1, formatting_0)
    except BaseException:
        pass

def test_case_4():
    try:
        h_t_t_p_message_0 = None
        optional_0 = None
        base_stream_0 = module_1.BaseStream(h_t_t_p_message_0, optional_0)
        str_0 = '@;g+%5sF-B@8#\\Rzo'
        list_0 = [str_0]
        formatting_0 = module_2.Formatting(list_0)
    except BaseException:
        pass

def test_case_5():
    try:
        h_t_t_p_message_0 = None
        base_stream_0 = module_1.BaseStream(h_t_t_p_message_0)
        bytes_0 = base_stream_0.get_headers()
    except BaseException:
        pass

def test_case_6():
    try:
        h_t_t_p_message_0 = None
        optional_0 = None
        optional_1 = None
        base_stream_0 = module_1.BaseStream(h_t_t_p_message_0, optional_0, optional_1)
    except BaseException:
        pass