# Automatically generated by Pynguin.
import ansible.plugins.action.pause as module_0

def test_case_0():
    try:
        float_0 = -5630.47893
        list_0 = [float_0, float_0]
        list_1 = [list_0]
        var_0 = module_0.timeout_handler(list_1, list_1)
    except BaseException:
        pass

def test_case_1():
    try:
        var_0 = module_0.is_interactive()
        ansible_timeout_exceeded_0 = module_0.AnsibleTimeoutExceeded()
        bool_0 = True
        var_1 = module_0.is_interactive(bool_0)
        var_2 = module_0.clear_line(ansible_timeout_exceeded_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b'\x8fEi\xa9\x01^\xc6x\xa7\xf0 \x18\x88'
        bool_0 = None
        dict_0 = {bool_0: bytes_0, bytes_0: bool_0, bytes_0: bool_0}
        set_0 = {bytes_0}
        list_0 = []
        action_module_0 = module_0.ActionModule(bytes_0, dict_0, dict_0, set_0, list_0, bool_0)
        var_0 = action_module_0.run()
    except BaseException:
        pass

def test_case_3():
    try:
        set_0 = None
        bytes_0 = b''
        str_0 = "Q|'Y\r;F\x0c@"
        set_1 = {str_0}
        set_2 = None
        dict_0 = {str_0: set_1, set_2: set_2, str_0: set_2, bytes_0: bytes_0}
        bool_0 = False
        list_0 = [bool_0]
        ansible_timeout_exceeded_0 = module_0.AnsibleTimeoutExceeded()
        int_0 = None
        complex_0 = None
        bytes_1 = b'z'
        str_1 = 'l._'
        action_module_0 = module_0.ActionModule(ansible_timeout_exceeded_0, int_0, complex_0, bytes_1, str_1, bytes_0)
        action_module_1 = module_0.ActionModule(bytes_0, str_0, dict_0, list_0, action_module_0, bytes_0)
        var_0 = module_0.is_interactive()
        list_1 = [set_0]
        ansible_timeout_exceeded_1 = module_0.AnsibleTimeoutExceeded(*list_1)
        str_2 = ''
        var_1 = action_module_0.run(bool_0, str_2)
    except BaseException:
        pass