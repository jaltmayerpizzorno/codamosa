# Automatically generated by Pynguin.
import ansible.utils.vars as module_0

def test_case_0():
    try:
        bytes_0 = b"\xec\x8bW\xc0\x98\xd0'U\xd8\xcaF"
        str_0 = ':N~'
        var_0 = module_0.merge_hash(bytes_0, str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        float_0 = 142.0
        set_0 = {float_0, float_0}
        var_0 = module_0.combine_vars(float_0, set_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = "}$<'Jajul<"
        int_0 = 25
        list_0 = [int_0]
        var_0 = module_0.load_options_vars(list_0)
        float_0 = 3079.644
        var_1 = module_0.combine_vars(str_0, int_0, float_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bool_0 = False
        var_0 = module_0.load_options_vars(bool_0)
        bool_1 = True
        tuple_0 = None
        str_0 = 'Jv#]<uedlS'
        var_1 = module_0.merge_hash(bool_1, tuple_0, str_0, tuple_0)
    except BaseException:
        pass

def test_case_4():
    try:
        var_0 = module_0.get_unique_id()
        bytes_0 = b'\xb4JjWH\xb1<\x89#\xfdG\x96J\x88B\xf9\xf4\x840\x9e'
        var_1 = module_0.load_extra_vars(bytes_0)
        str_0 = ' Runs <script> --host <hostname>, to determine addition1l hostLvariables '
        bytes_1 = b'\xc9\x0f\x0c\xdf\x1d*\xffL\xc7'
        dict_0 = {bytes_1: bytes_0, bytes_0: str_0, str_0: str_0}
        int_0 = None
        var_2 = module_0.load_options_vars(int_0)
        var_3 = module_0.merge_hash(bytes_1, bytes_0, dict_0)
    except BaseException:
        pass

def test_case_5():
    try:
        dict_0 = {}
        int_0 = 512
        list_0 = []
        var_0 = module_0.merge_hash(dict_0, int_0, list_0)
    except BaseException:
        pass

def test_case_6():
    try:
        var_0 = {}
        var_1 = {}
        var_2 = module_0.combine_vars(var_0, var_1)
        var_3 = dict()
        int_0 = 1
        var_4 = dict(a=int_0)
        var_5 = module_0.combine_vars(var_3, var_4)
        var_6 = dict(a=int_0)
        var_7 = dict(a=int_0)
        var_8 = dict()
        var_9 = module_0.combine_vars(var_7, var_8)
        var_10 = dict(a=int_0)
        var_11 = dict(a=int_0)
        var_12 = module_0.combine_vars(int_0, var_11)
    except BaseException:
        pass

def test_case_7():
    try:
        int_0 = 1
        int_1 = 2
        int_2 = {int_0: int_0}
        int_3 = {int_0: int_1}
        var_0 = module_0.merge_hash(int_2, int_3)
        int_4 = {int_0: int_0}
        int_5 = [int_0]
        var_1 = module_0.merge_hash(int_4, int_2)
        int_6 = [int_0]
        int_7 = {int_0: int_6}
        int_8 = [int_1]
        int_9 = {int_0: int_8}
        var_2 = module_0.merge_hash(int_7, int_9)
        int_10 = [int_0]
        int_11 = {int_0: int_10}
        int_12 = [int_1]
        int_13 = {int_0: int_12}
        bool_0 = False
        var_3 = module_0.merge_hash(int_11, int_13, bool_0)
        int_14 = [int_0]
        int_15 = {int_0: int_14}
        var_4 = module_0.merge_hash(int_15, int_5)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = '|2Q['
        int_0 = None
        float_0 = 2252.8116
        var_0 = module_0.load_extra_vars(float_0)
        list_0 = []
        var_1 = module_0._isidentifier_PY3(list_0)
        float_1 = -822.05016
        var_2 = module_0.load_options_vars(float_1)
        set_0 = {var_1, var_1, int_0, str_0}
        float_2 = -1149.0
        str_1 = ''
        var_3 = module_0._isidentifier_PY3(list_0)
        str_2 = 'u3K(4|AkWry9GdXWaT1'
        var_4 = module_0._isidentifier_PY3(str_2)
        var_5 = module_0.combine_vars(set_0, float_2, str_1)
    except BaseException:
        pass