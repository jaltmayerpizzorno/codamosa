# Automatically generated by Pynguin.
import ansible.utils.collection_loader._collection_finder as module_0

def test_case_0():
    try:
        str_0 = 'k~1+"\r0<%KeJ%D|9$'
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder(str_0)
        set_0 = set()
        ansible_collection_n_s_pkg_loader_0 = module_0._AnsibleCollectionNSPkgLoader(set_0)
    except BaseException:
        pass

def test_case_1():
    try:
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
        list_0 = [ansible_collection_finder_0, ansible_collection_finder_0]
        var_0 = ansible_collection_finder_0.find_module(list_0)
    except BaseException:
        pass

def test_case_2():
    try:
        float_0 = -345.6
        ansible_collection_pkg_loader_0 = module_0._AnsibleCollectionPkgLoader(float_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = ".Nyb)?'&|F\rq,?}I\ro"
        ansible_collection_n_s_pkg_loader_0 = module_0._AnsibleCollectionNSPkgLoader(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'socket_path'
        ansible_collection_pkg_loader_0 = module_0._AnsibleCollectionPkgLoader(str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'k~1+"\r0<%KeJ%D|9$'
        dict_0 = {}
        ansible_internal_redirect_loader_0 = module_0._AnsibleInternalRedirectLoader(str_0, dict_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'ansible.module_utils.network.common.utils'
        str_1 = ''
        ansible_internal_redirect_loader_0 = module_0._AnsibleInternalRedirectLoader(str_0, str_1)
    except BaseException:
        pass

def test_case_7():
    try:
        bytes_0 = b'\xfc\xd3'
        set_0 = {bytes_0}
        complex_0 = None
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder(set_0, complex_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = 'container=lxc'
        bytes_0 = b'm\xd7\xa32\xb7\x1fV\xb0=cW'
        ansible_collection_root_pkg_loader_0 = module_0._AnsibleCollectionRootPkgLoader(str_0, bytes_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'k~1+"\r0<%KeJ%D|9$'
        dict_0 = {}
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
        var_0 = ansible_collection_finder_0.set_playbook_paths(str_0)
        ansible_internal_redirect_loader_0 = module_0._AnsibleInternalRedirectLoader(str_0, dict_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = 'my.collection'
        ansible_collection_ref_0 = module_0.AnsibleCollectionRef(str_0, str_0, str_0, str_0)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = 'my.\nollection'
        ansible_collection_ref_0 = module_0.AnsibleCollectionRef(str_0, str_0, str_0, str_0)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = 'mycollection'
        var_0 = None
        str_1 = 'testmodule'
        str_2 = 'module'
        ansible_collection_ref_0 = module_0.AnsibleCollectionRef(str_0, var_0, str_1, str_2)
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = 'my.collection'
        var_0 = None
        str_1 = 'module'
        ansible_collection_ref_0 = module_0.AnsibleCollectionRef(str_0, var_0, str_0, str_1)
    except BaseException:
        pass

def test_case_14():
    try:
        str_0 = '|Z\tmM2^ZGTw{npB'
        float_0 = None
        ansible_collection_loader_0 = module_0._AnsibleCollectionLoader(str_0, float_0)
    except BaseException:
        pass

def test_case_15():
    try:
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
        str_0 = 'ansible'
        var_0 = ansible_collection_finder_0.find_module(str_0, ansible_collection_finder_0)
    except BaseException:
        pass

def test_case_16():
    try:
        var_0 = None
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
        str_0 = 'ansible'
        var_1 = ansible_collection_finder_0.find_module(str_0, var_0)
    except BaseException:
        pass

def test_case_17():
    try:
        str_0 = '/tmp'
        str_1 = 'ansible_collections.nsbl.test'
        ansible_collection_pkg_loader_base_0 = module_0._AnsibleCollectionPkgLoaderBase(str_1, str_0)
        var_0 = ansible_collection_pkg_loader_base_0.load_module(ansible_collection_pkg_loader_base_0)
    except BaseException:
        pass

def test_case_18():
    try:
        str_0 = 'ansible_collections.ansible.some_ns'
        ansible_collection_pkg_loader_base_0 = module_0._AnsibleCollectionPkgLoaderBase(str_0, str_0)
        list_0 = [str_0]
        var_0 = ansible_collection_pkg_loader_base_0.get_source(list_0)
    except BaseException:
        pass

def test_case_19():
    try:
        str_0 = 'ansible_collections.ansible.some_ns'
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
        var_0 = ansible_collection_finder_0.find_module(str_0)
    except BaseException:
        pass

def test_case_20():
    try:
        str_0 = 'ansible_collections.ansible.some_ns'
        str_1 = []
        ansible_collection_pkg_loader_base_0 = module_0._AnsibleCollectionPkgLoaderBase(str_0, str_1)
        int_0 = 1098
        var_0 = ansible_collection_pkg_loader_base_0.get_data(int_0)
    except BaseException:
        pass

def test_case_21():
    try:
        str_0 = 'ansible_collections.ansible.some_ns'
        str_1 = '/path/to/<parent'
        str_2 = [str_1]
        ansible_collection_pkg_loader_base_0 = module_0._AnsibleCollectionPkgLoaderBase(str_0, str_2)
        set_0 = set()
        var_0 = ansible_collection_pkg_loader_base_0.get_data(set_0)
    except BaseException:
        pass

def test_case_22():
    try:
        str_0 = 'ansible_collections.ansible.some_ns'
        list_0 = [str_0, str_0, str_0]
        complex_0 = None
        ansible_path_hook_finder_0 = module_0._AnsiblePathHookFinder(list_0, complex_0)
        ansible_collection_pkg_loader_base_0 = module_0._AnsibleCollectionPkgLoaderBase(str_0, str_0)
        ansible_collection_finder_0 = module_0._AnsibleCollectionFinder()
        ansible_collection_loader_0 = module_0._AnsibleCollectionLoader(str_0)
    except BaseException:
        pass

def test_case_23():
    try:
        str_0 = 'ansible_collections.ansible.some_ns'
        list_0 = [str_0, str_0]
        complex_0 = None
        ansible_path_hook_finder_0 = module_0._AnsiblePathHookFinder(list_0, complex_0)
        ansible_collection_pkg_loader_base_0 = module_0._AnsibleCollectionPkgLoaderBase(str_0, str_0)
        set_0 = {complex_0}
        var_0 = ansible_collection_pkg_loader_base_0.is_package(set_0)
    except BaseException:
        pass

def test_case_24():
    try:
        str_0 = 'ansible_collections.ansible.some_ns'
        ansible_collection_pkg_loader_base_0 = module_0._AnsibleCollectionPkgLoaderBase(str_0, str_0)
        ansible_collection_root_pkg_loader_0 = module_0._AnsibleCollectionRootPkgLoader(str_0, ansible_collection_pkg_loader_base_0)
    except BaseException:
        pass