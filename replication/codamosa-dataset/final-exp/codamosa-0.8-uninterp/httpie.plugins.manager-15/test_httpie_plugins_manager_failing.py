# Automatically generated by Pynguin.
import httpie.plugins.manager as module_0

def test_case_0():
    try:
        plugin_manager_0 = module_0.PluginManager()
        var_0 = plugin_manager_0.filter()
        var_1 = plugin_manager_0.__repr__()
        dict_0 = plugin_manager_0.get_auth_plugin_mapping()
        var_2 = plugin_manager_0.filter()
        list_0 = plugin_manager_0.get_auth_plugins()
        var_3 = plugin_manager_0.register()
        str_0 = 'G('
        type_0 = plugin_manager_0.get_auth_plugin(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        plugin_manager_0 = module_0.PluginManager()
        var_0 = plugin_manager_0.filter()
        list_0 = plugin_manager_0.get_transport_plugins()
        var_1 = plugin_manager_0.load_installed_plugins()
        dict_0 = plugin_manager_0.get_auth_plugin_mapping()
        type_0 = None
        list_1 = [type_0, type_0, type_0, type_0]
        var_2 = plugin_manager_0.unregister(list_1)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = None
        plugin_manager_0 = module_0.PluginManager()
        type_0 = plugin_manager_0.get_auth_plugin(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        plugin_manager_0 = module_0.PluginManager()
        plugin_manager_1 = module_0.PluginManager()
        var_0 = plugin_manager_1.__repr__()
        var_1 = plugin_manager_1.load_installed_plugins()
        plugin_manager_2 = module_0.PluginManager()
        plugin_manager_3 = module_0.PluginManager()
        dict_0 = plugin_manager_3.get_formatters_grouped()
        type_0 = None
        var_2 = plugin_manager_3.register()
        list_0 = [type_0]
        dict_1 = plugin_manager_3.get_auth_plugin_mapping()
        list_1 = plugin_manager_3.get_auth_plugins()
        var_3 = plugin_manager_3.register(*list_0)
        dict_2 = {}
        plugin_manager_4 = module_0.PluginManager(**dict_2)
        var_4 = plugin_manager_4.load_installed_plugins()
        list_2 = plugin_manager_3.get_transport_plugins()
    except BaseException:
        pass

def test_case_4():
    try:
        bytes_0 = b'8i\xa18.\xfc\xfe\x12\xab\xe2\xbeB\x1c\xe8'
        plugin_manager_0 = module_0.PluginManager()
        dict_0 = plugin_manager_0.get_formatters_grouped()
        list_0 = [bytes_0]
        plugin_manager_1 = module_0.PluginManager(*list_0)
        list_1 = plugin_manager_1.get_auth_plugins()
    except BaseException:
        pass