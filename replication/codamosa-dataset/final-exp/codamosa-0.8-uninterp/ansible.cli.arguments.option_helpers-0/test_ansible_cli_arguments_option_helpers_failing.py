# Automatically generated by Pynguin.
import ansible.cli.arguments.option_helpers as module_0
import argparse as module_1

def test_case_0():
    try:
        str_0 = 'CV4:'
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
        dict_1 = {str_0: str_0, str_0: str_0, str_0: dict_0, str_0: dict_0}
        list_0 = [str_0, dict_1, dict_1]
        float_0 = 845.051961
        unrecognized_argument_0 = None
        unrecognized_argument_1 = module_0.UnrecognizedArgument(list_0, dict_1, float_0, unrecognized_argument_0)
        unrecognized_argument_2 = module_0.UnrecognizedArgument(unrecognized_argument_1, unrecognized_argument_1)
        var_0 = module_0.maybe_unfrack_path(unrecognized_argument_2)
        var_1 = module_0.add_inventory_options(dict_1)
    except BaseException:
        pass

def test_case_1():
    try:
        bool_0 = True
        str_0 = 'Cannot delete user "%s".'
        float_0 = -2116.507213
        prepend_list_action_0 = module_0.PrependListAction(bool_0, str_0, float_0)
        bytes_0 = b'1\xae\xfa'
        var_0 = module_0.version(bytes_0)
        list_0 = [var_0]
        float_1 = 1181.999268
        int_0 = -2909
        ansible_version_0 = module_0.AnsibleVersion(list_0, float_1, list_0, bool_0, int_0)
        bytes_1 = b'\x14D~\x8f\x06\xa9\x06vd3'
        set_0 = set()
        unrecognized_argument_0 = module_0.UnrecognizedArgument(str_0, str_0, set_0)
        var_1 = unrecognized_argument_0.__call__(ansible_version_0, bytes_1, str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        int_0 = -1974
        bytes_0 = b'W\xa3\x9c\xb6,B\xb6^\xba'
        int_1 = 302
        list_0 = [int_1]
        int_2 = None
        int_3 = -1614
        tuple_0 = (int_2, int_3)
        prepend_list_action_0 = module_0.PrependListAction(int_0, bytes_0, list_0, tuple_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bool_0 = False
        str_0 = 'DC\x0c$'
        float_0 = -2116.507213
        prepend_list_action_0 = module_0.PrependListAction(bool_0, str_0, float_0)
        bytes_0 = b'\x14D~\x8f\x06\xa9\x06vd3'
        dict_0 = {}
        str_1 = 'xdG'
        tuple_0 = (dict_0, str_1, bytes_0, float_0)
        bytes_1 = b's<\xb7\x02\x80\x8b\xce'
        var_0 = prepend_list_action_0.__call__(bool_0, tuple_0, bytes_1)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = '\'b\x0cECxhE+,,D[I"k9\\'
        str_1 = 'K&#gMYk+J@%a\n3\ti!'
        float_0 = 2135.341903
        int_0 = 1785
        str_2 = 'EX!:'
        ansible_version_0 = module_0.AnsibleVersion(str_0, str_1, float_0, int_0, str_2)
        var_0 = module_0.add_basedir_options(ansible_version_0)
    except BaseException:
        pass

def test_case_5():
    try:
        bool_0 = True
        var_0 = module_0.add_check_options(bool_0)
    except BaseException:
        pass

def test_case_6():
    try:
        dict_0 = {}
        int_0 = 2730
        str_0 = 'kerberos'
        str_1 = '?\rUnW'
        bool_0 = True
        unrecognized_argument_0 = module_0.UnrecognizedArgument(str_1, bool_0)
        bytes_0 = b'\xff\xc4<\x9ee\xba\xe3.\x05-o\xac\x1a\xa2Z\xa3\x95'
        float_0 = 241.7
        list_0 = [float_0, int_0, bytes_0]
        unrecognized_argument_1 = module_0.UnrecognizedArgument(unrecognized_argument_0, bytes_0, list_0, bytes_0, list_0)
        tuple_0 = (str_0, unrecognized_argument_1)
        ansible_version_0 = module_0.AnsibleVersion(tuple_0, list_0, bool_0, bool_0, dict_0)
        unrecognized_argument_2 = module_0.UnrecognizedArgument(int_0, tuple_0, ansible_version_0)
        tuple_1 = (dict_0, unrecognized_argument_2, unrecognized_argument_1, list_0)
        var_0 = module_0.add_connect_options(tuple_1)
    except BaseException:
        pass

def test_case_7():
    try:
        list_0 = None
        var_0 = module_0.add_meta_options(list_0)
    except BaseException:
        pass

def test_case_8():
    try:
        list_0 = None
        sorting_help_formatter_0 = module_0.SortingHelpFormatter(list_0)
        var_0 = module_0.add_module_options(sorting_help_formatter_0)
    except BaseException:
        pass

def test_case_9():
    try:
        var_0 = module_0.version()
        int_0 = 0
        var_1 = module_0.add_output_options(int_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = '\\s?=\\s?|: '
        var_0 = module_0.add_tasknoplay_options(str_0)
    except BaseException:
        pass

def test_case_11():
    try:
        tuple_0 = ()
        dict_0 = None
        set_0 = {tuple_0, tuple_0, tuple_0, tuple_0}
        unrecognized_argument_0 = module_0.UnrecognizedArgument(set_0, tuple_0)
        str_0 = '_e3+\x0c\\!*}[5a`o*qx>'
        list_0 = [unrecognized_argument_0]
        bytes_0 = b'$\x1f\xc5b*c\xbeVn'
        ansible_version_0 = module_0.AnsibleVersion(str_0, list_0, bytes_0, tuple_0, list_0)
        bytes_1 = b'\xc1P\xdd\x10\x11\x12\xfe\x85]\xc3\xce~\xa3\xceN'
        unrecognized_argument_1 = module_0.UnrecognizedArgument(dict_0, unrecognized_argument_0, ansible_version_0, str_0, bytes_1, unrecognized_argument_0)
        bool_0 = True
        var_0 = module_0.add_subset_options(bool_0)
    except BaseException:
        pass

def test_case_12():
    try:
        bool_0 = True
        str_0 = 'Canno deMete user "%s\t.'
        bytes_0 = b'1\xae\xfa'
        var_0 = module_0.version(bytes_0)
        set_0 = set()
        unrecognized_argument_0 = module_0.UnrecognizedArgument(str_0, str_0, set_0)
        str_1 = 'O\x0b}IL'
        prepend_list_action_0 = module_0.PrependListAction(unrecognized_argument_0, unrecognized_argument_0, str_1, str_1, set_0, bool_0)
    except BaseException:
        pass

def test_case_13():
    try:
        var_0 = module_0.version()
        str_0 = '?!>!MNb$'
        var_1 = module_0.add_async_options(str_0)
    except BaseException:
        pass

def test_case_14():
    try:
        int_0 = -2416
        float_0 = 64.07688
        bool_0 = False
        dict_0 = None
        prepend_list_action_0 = module_0.PrependListAction(int_0, float_0, bool_0, dict_0)
    except BaseException:
        pass

def test_case_15():
    try:
        int_0 = -142
        tuple_0 = ()
        set_0 = {int_0, tuple_0}
        int_1 = -2457
        str_0 = 'A\x0cCP\ru;=M2S'
        float_0 = 512.0
        str_1 = '\n    A custom handler class for SSL validation.\n\n    Based on:\n    http://stackoverflow.com/questions/1087227/validate-ssl-certificates-with-python\n    http://techknack.net/python-urllib2-handlers/\n    '
        set_1 = {str_1, float_0, int_0}
        str_2 = 'FH#5'
        bool_0 = False
        int_2 = -1974
        list_0 = [bool_0, int_2, int_2, int_2]
        unrecognized_argument_0 = module_0.UnrecognizedArgument(str_1, set_1, str_2, list_0)
        dict_0 = {str_2: str_2}
        ansible_version_0 = module_0.AnsibleVersion(set_1, unrecognized_argument_0, dict_0)
        ansible_version_1 = module_0.AnsibleVersion(unrecognized_argument_0, ansible_version_0, dict_0)
        bool_1 = False
        str_3 = 'expire-cache'
        tuple_1 = (str_3,)
        ansible_version_2 = module_0.AnsibleVersion(float_0, ansible_version_1, bool_1, tuple_1, list_0)
        var_0 = ansible_version_2.__call__(set_0, int_1, str_0)
    except BaseException:
        pass

def test_case_16():
    try:
        bool_0 = True
        str_0 = 'Cannot delete user "%s".'
        var_0 = module_0.version()
        float_0 = -2116.507213
        prepend_list_action_0 = module_0.PrependListAction(bool_0, str_0, float_0)
        bytes_0 = b'1\xae\xfa'
        var_1 = module_0.version(bytes_0)
        var_2 = module_0.version()
        dict_0 = {float_0: float_0, bytes_0: var_1}
        sorting_help_formatter_0 = module_0.SortingHelpFormatter(dict_0)
        var_3 = module_0.add_basedir_options(sorting_help_formatter_0)
    except BaseException:
        pass

def test_case_17():
    try:
        bool_0 = False
        str_0 = 'Cannot delee user "%s".'
        float_0 = -2116.507213
        prepend_list_action_0 = module_0.PrependListAction(bool_0, str_0, float_0)
        bytes_0 = b'1\x8c\xfa'
        var_0 = module_0.version(bytes_0)
        list_0 = [var_0]
        float_1 = 1181.999268
        int_0 = -2909
        ansible_version_0 = module_0.AnsibleVersion(list_0, float_1, list_0, bool_0, int_0)
        set_0 = set()
        bool_1 = True
        var_1 = module_0.add_runas_prompt_options(bool_1, set_0)
    except BaseException:
        pass

def test_case_18():
    try:
        str_0 = '\x0c$Y+0mbnqZq[V'
        bool_0 = True
        float_0 = -2890.3668
        tuple_0 = ()
        dict_0 = {}
        namespace_0 = module_1.Namespace(**dict_0)
        list_0 = None
        ansible_version_0 = module_0.AnsibleVersion(str_0, bool_0, float_0, tuple_0, namespace_0, list_0)
        dict_1 = {ansible_version_0: namespace_0}
        bool_1 = True
        sorting_help_formatter_0 = module_0.SortingHelpFormatter(dict_1, bool_1)
        var_0 = module_0.add_async_options(sorting_help_formatter_0)
    except BaseException:
        pass

def test_case_19():
    try:
        bool_0 = False
        str_0 = 'Canno deMete user "%s\t.'
        float_0 = -1463.957479
        prepend_list_action_0 = module_0.PrependListAction(bool_0, str_0, float_0)
        bytes_0 = b'1\xae\xfa'
        var_0 = module_0.version(bytes_0)
        list_0 = []
        int_0 = -2922
        ansible_version_0 = module_0.AnsibleVersion(list_0, float_0, list_0, bool_0, int_0)
        bytes_1 = b'\x14D~\x8f\x06\xa9\x06vd3'
        set_0 = {int_0}
        unrecognized_argument_0 = module_0.UnrecognizedArgument(str_0, str_0, set_0)
        dict_0 = {float_0: float_0, bytes_0: var_0}
        str_1 = 'xdG'
        tuple_0 = (dict_0, str_1, bytes_1, float_0)
        str_2 = '!@~>\t'
        dict_1 = {str_2: str_0}
        str_3 = '\r-H6l[&7^-8tr'
        argument_parser_0 = module_1.ArgumentParser(dict_1, str_3, set_0, prepend_list_action_0)
        var_1 = module_0.add_async_options(argument_parser_0)
        var_2 = module_0.add_inventory_options(argument_parser_0)
        list_1 = []
        var_3 = prepend_list_action_0.__call__(tuple_0, prepend_list_action_0, list_1, float_0)
        str_4 = 'Xnu'
        prepend_list_action_1 = module_0.PrependListAction(unrecognized_argument_0, unrecognized_argument_0, str_4, str_4, set_0, bool_0)
    except BaseException:
        pass

def test_case_20():
    try:
        str_0 = 'Cannot deMete user "%s\t.'
        bytes_0 = b'1\xae\xfa'
        var_0 = module_0.version(bytes_0)
        float_0 = 1353.64138
        list_0 = []
        argument_parser_0 = module_1.ArgumentParser(float_0, list_0, bytes_0)
        set_0 = set()
        bool_0 = False
        argument_parser_1 = module_1.ArgumentParser(argument_parser_0, set_0, bool_0, str_0)
        var_1 = module_0.add_check_options(argument_parser_1)
        set_1 = set()
        unrecognized_argument_0 = module_0.UnrecognizedArgument(str_0, str_0, set_1)
        namespace_0 = module_1.Namespace()
        set_2 = set()
        str_1 = 'wj'
        prepend_list_action_0 = module_0.PrependListAction(namespace_0, set_2, str_1, namespace_0)
    except BaseException:
        pass

def test_case_21():
    try:
        tuple_0 = None
        list_0 = [tuple_0, tuple_0, tuple_0]
        list_1 = [tuple_0, tuple_0]
        argument_parser_0 = module_1.ArgumentParser(list_0, list_0, list_1)
        var_0 = module_0.add_connect_options(argument_parser_0)
        float_0 = -2100.3834066712907
        var_1 = module_0.add_subset_options(float_0)
    except BaseException:
        pass