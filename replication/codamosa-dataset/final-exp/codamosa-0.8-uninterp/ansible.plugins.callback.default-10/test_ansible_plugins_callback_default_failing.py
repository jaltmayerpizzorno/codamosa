# Automatically generated by Pynguin.
import ansible.plugins.callback.default as module_0

def test_case_0():
    try:
        callback_module_0 = module_0.CallbackModule()
        bool_0 = False
        str_0 = 'Y<^^"f\x0cE)'
        var_0 = callback_module_0.v2_playbook_on_notify(bool_0, str_0)
        var_1 = callback_module_0.v2_playbook_on_no_hosts_matched()
        callback_module_1 = module_0.CallbackModule()
        var_2 = callback_module_1.set_options()
    except BaseException:
        pass

def test_case_1():
    try:
        float_0 = 1719.8
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_on_failed(float_0)
    except BaseException:
        pass

def test_case_2():
    try:
        list_0 = []
        callback_module_0 = module_0.CallbackModule()
        callback_module_1 = module_0.CallbackModule()
        var_0 = callback_module_1.v2_playbook_on_notify(list_0, callback_module_0)
        callback_module_2 = module_0.CallbackModule()
        callback_module_3 = module_0.CallbackModule()
        bytes_0 = b'\x8a\xb0\xb0\xc4\x19\xf6r\x00*\xc1e\xa8\\`\xce\xcak\xcap\x12'
        var_1 = callback_module_2.v2_runner_on_ok(bytes_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = None
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_on_skipped(bytes_0)
    except BaseException:
        pass

def test_case_4():
    try:
        float_0 = 503.8
        set_0 = {float_0, float_0}
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_on_unreachable(set_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = "0e'A)it3\x0cKL)y|D::"
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_no_hosts_matched()
        var_1 = callback_module_0.v2_playbook_on_cleanup_task_start(str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        callback_module_0 = module_0.CallbackModule()
        tuple_0 = ()
        var_0 = callback_module_0.v2_playbook_on_task_start(callback_module_0, tuple_0)
    except BaseException:
        pass

def test_case_7():
    try:
        callback_module_0 = module_0.CallbackModule()
        bytes_0 = b'B\x87~#iiI\xb9\x8d\xac\x84\x0b\xf6'
        var_0 = callback_module_0.v2_playbook_on_cleanup_task_start(bytes_0)
    except BaseException:
        pass

def test_case_8():
    try:
        float_0 = 815.9
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_handler_task_start(float_0)
    except BaseException:
        pass

def test_case_9():
    try:
        bytes_0 = b'"\x9a\x99\xa1'
        str_0 = '=_:.pED~\x0c" II9}-^u`8'
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_on_start(bytes_0, str_0)
    except BaseException:
        pass

def test_case_10():
    try:
        callback_module_0 = module_0.CallbackModule()
        float_0 = -777.83
        var_0 = callback_module_0.v2_playbook_on_play_start(float_0)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = '-u]Z4 X>'
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_on_file_diff(str_0)
    except BaseException:
        pass

def test_case_12():
    try:
        callback_module_0 = module_0.CallbackModule()
        dict_0 = {}
        var_0 = callback_module_0.v2_runner_item_on_ok(dict_0)
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = '/etc/ansible/facts.d'
        int_0 = 2665
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_no_hosts_remaining()
        var_1 = callback_module_0.v2_playbook_on_notify(str_0, int_0)
        bytes_0 = b'\xad\x1a\x9a\xf6\xef\xf2\xa1q\xb7xw\xd0\x0830\xa7(\xbf\xf0'
        var_2 = callback_module_0.v2_runner_item_on_failed(bytes_0)
    except BaseException:
        pass

def test_case_14():
    try:
        bytes_0 = b'3\xe4\x17\x95tLB\xc3f\xfa\x0f\xbd\xfe'
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_item_on_skipped(bytes_0)
    except BaseException:
        pass

def test_case_15():
    try:
        int_0 = -1540
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_include(int_0)
    except BaseException:
        pass

def test_case_16():
    try:
        bool_0 = True
        set_0 = {bool_0, bool_0, bool_0, bool_0}
        tuple_0 = (set_0, set_0)
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_stats(tuple_0)
    except BaseException:
        pass

def test_case_17():
    try:
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_start(callback_module_0)
    except BaseException:
        pass

def test_case_18():
    try:
        str_0 = 'solaris'
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_on_async_poll(str_0)
    except BaseException:
        pass

def test_case_19():
    try:
        callback_module_0 = module_0.CallbackModule()
        bool_0 = None
        var_0 = callback_module_0.v2_runner_on_async_ok(bool_0)
    except BaseException:
        pass

def test_case_20():
    try:
        callback_module_0 = module_0.CallbackModule()
        callback_module_1 = module_0.CallbackModule()
        callback_module_2 = module_0.CallbackModule()
        int_0 = -1095
        str_0 = '--module-name'
        str_1 = 'qe\rx2E:(4_rMaf4N$PY-'
        tuple_0 = (callback_module_2, int_0, str_0, str_1)
        var_0 = callback_module_1.v2_runner_retry(tuple_0)
    except BaseException:
        pass

def test_case_21():
    try:
        str_0 = 'jBS+-Y\raASv\t'
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_on_async_failed(str_0)
    except BaseException:
        pass