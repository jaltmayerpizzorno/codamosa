# Automatically generated by Pynguin.
import ansible.cli.arguments.option_helpers as module_0
import argparse as module_1

def test_case_0():
    try:
        str_0 = '0#gX#h\te'
        dict_0 = {str_0: str_0}
        var_0 = module_0.create_base_parser(str_0, dict_0)
        str_1 = ':Q4Du%'
        bytes_0 = b'-\x18uR_\x06\xbc\xcb\xd0\x92'
        sorting_help_formatter_0 = module_0.SortingHelpFormatter(bytes_0)
        var_1 = sorting_help_formatter_0.add_arguments(str_1)
    except BaseException:
        pass

def test_case_1():
    try:
        var_0 = module_0.unfrack_path()
        bytes_0 = b''
        sorting_help_formatter_0 = None
        str_0 = 'YR/R=os[/C'
        int_0 = 2052
        sorting_help_formatter_1 = module_0.SortingHelpFormatter(int_0)
        set_0 = {var_0, bytes_0}
        dict_0 = {bytes_0: sorting_help_formatter_1}
        int_1 = -1320
        ansible_version_0 = module_0.AnsibleVersion(sorting_help_formatter_1, set_0, dict_0, set_0, int_1)
        var_1 = ansible_version_0.__call__(sorting_help_formatter_0, str_0, bytes_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b'i\x9b\xe7\xc5V\x1e'
        str_0 = "J%ihM\x0b-P'K"
        int_0 = None
        unrecognized_argument_0 = module_0.UnrecognizedArgument(bytes_0, bytes_0, str_0, int_0)
        var_0 = module_0.add_meta_options(unrecognized_argument_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'rwgxf/Hkbp}e7'
        int_0 = -208
        ansible_version_0 = None
        tuple_0 = (int_0, ansible_version_0)
        float_0 = None
        prepend_list_action_0 = module_0.PrependListAction(str_0, tuple_0, float_0)
        bool_0 = True
        dict_0 = {str_0: str_0, int_0: prepend_list_action_0, str_0: tuple_0}
        bool_1 = False
        str_1 = 'iOrjB2IVy u6#-4;BG'
        prepend_list_action_1 = module_0.PrependListAction(prepend_list_action_0, bool_0, dict_0, bool_1, str_1)
    except BaseException:
        pass

def test_case_4():
    try:
        float_0 = None
        dict_0 = {float_0: float_0, float_0: float_0, float_0: float_0}
        list_0 = [dict_0, float_0, dict_0, float_0]
        int_0 = -1850
        bytes_0 = b'\xcc\xe3ZgU\xbd\xc8vJ\t\xfe[\xcf\x19'
        bytes_1 = b'\x0b\xa5\xaeRn%'
        str_0 = "Error validating the server's certificate for %s: %s"
        dict_1 = {str_0: bytes_1, str_0: bytes_1}
        prepend_list_action_0 = module_0.PrependListAction(bytes_1, str_0, dict_1)
        var_0 = prepend_list_action_0.__call__(dict_0, list_0, int_0, bytes_0)
    except BaseException:
        pass

def test_case_5():
    try:
        int_0 = 0
        str_0 = 'j{'
        int_1 = 0
        var_0 = module_0.ensure_value(int_0, str_0, int_1)
    except BaseException:
        pass

def test_case_6():
    try:
        int_0 = -1236
        var_0 = module_0.add_verbosity_options(int_0)
    except BaseException:
        pass

def test_case_7():
    try:
        list_0 = []
        sorting_help_formatter_0 = module_0.SortingHelpFormatter(list_0)
        var_0 = module_0.add_async_options(sorting_help_formatter_0)
    except BaseException:
        pass

def test_case_8():
    try:
        sorting_help_formatter_0 = None
        var_0 = module_0.add_basedir_options(sorting_help_formatter_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'd\tp'
        var_0 = module_0.add_inventory_options(str_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = '*AR @\x0bL1\x0bcI1\x0cLiDD#'
        sorting_help_formatter_0 = module_0.SortingHelpFormatter(str_0)
        var_0 = module_0.add_output_options(sorting_help_formatter_0)
    except BaseException:
        pass

def test_case_11():
    try:
        float_0 = 4720.147745
        list_0 = [float_0, float_0, float_0, float_0]
        str_0 = 'xGHK^>@X&GnYY'
        dict_0 = None
        tuple_0 = (dict_0,)
        var_0 = module_0.version(tuple_0)
        unrecognized_argument_0 = module_0.UnrecognizedArgument(list_0, str_0, dict_0)
        var_1 = module_0.add_runas_options(unrecognized_argument_0)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = '}}4{Lo*#!Q2'
        var_0 = module_0.add_runas_prompt_options(str_0)
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = 'K|'
        dict_0 = {str_0: str_0, str_0: str_0}
        sorting_help_formatter_0 = module_0.SortingHelpFormatter(dict_0)
        var_0 = module_0.add_runtask_options(sorting_help_formatter_0)
    except BaseException:
        pass

def test_case_14():
    try:
        var_0 = module_0.version()
        int_0 = 12
        dict_0 = None
        list_0 = None
        float_0 = 1981.144
        sorting_help_formatter_0 = module_0.SortingHelpFormatter(float_0)
        ansible_version_0 = module_0.AnsibleVersion(dict_0, list_0, sorting_help_formatter_0)
        str_0 = "e'w~s"
        bool_0 = False
        unrecognized_argument_0 = module_0.UnrecognizedArgument(str_0, int_0, bool_0)
        ansible_version_1 = module_0.AnsibleVersion(dict_0, ansible_version_0, unrecognized_argument_0)
        set_0 = {unrecognized_argument_0, ansible_version_1, list_0}
        tuple_0 = ()
        tuple_1 = (set_0, set_0, tuple_0, set_0)
        str_1 = 'Y!Pqi8\x0b.:e];fkZk5'
        int_1 = 235
        ansible_version_2 = module_0.AnsibleVersion(dict_0, ansible_version_1, tuple_1, str_1, int_1, list_0, dict_0)
        var_1 = module_0.add_tasknoplay_options(ansible_version_2)
    except BaseException:
        pass

def test_case_15():
    try:
        float_0 = None
        set_0 = None
        ansible_version_0 = module_0.AnsibleVersion(float_0, set_0)
        sorting_help_formatter_0 = None
        str_0 = '\r|tf '
        list_0 = [str_0, str_0, str_0]
        unrecognized_argument_0 = module_0.UnrecognizedArgument(str_0, list_0)
        var_0 = unrecognized_argument_0.__call__(ansible_version_0, sorting_help_formatter_0, float_0)
    except BaseException:
        pass

def test_case_16():
    try:
        var_0 = module_0.version()
        dict_0 = {var_0: var_0}
        float_0 = 0.0001
        bytes_0 = b'/\x02\xd5o\x85*\x15\xe3'
        str_0 = 't%'
        unrecognized_argument_0 = module_0.UnrecognizedArgument(dict_0, float_0, bytes_0, str_0)
        str_1 = 'S7S;QM\x0brh\neq'
        list_0 = [bytes_0]
        bool_0 = False
        prepend_list_action_0 = module_0.PrependListAction(str_1, list_0, bool_0)
    except BaseException:
        pass

def test_case_17():
    try:
        int_0 = 5734
        var_0 = module_0.version(int_0)
        bytes_0 = b'\x1dT\x13|\xefX1\x84\xe19\x88\xb81\x05\x93\x1aL\xda\xca'
        bool_0 = False
        str_0 = 'gX_~'
        dict_0 = {}
        prepend_list_action_0 = module_0.PrependListAction(bool_0, str_0, str_0)
        set_0 = {str_0, int_0}
        int_1 = 619
        sorting_help_formatter_0 = module_0.SortingHelpFormatter(int_1)
        str_1 = 'uW`w'
        ansible_version_0 = module_0.AnsibleVersion(set_0, bytes_0, sorting_help_formatter_0, str_1)
        var_1 = prepend_list_action_0.__call__(bool_0, ansible_version_0, str_1)
        dict_1 = {}
        float_0 = 662.653
        tuple_0 = (sorting_help_formatter_0, sorting_help_formatter_0)
        var_2 = sorting_help_formatter_0.add_arguments(dict_0)
        list_0 = None
        unrecognized_argument_0 = module_0.UnrecognizedArgument(bytes_0, ansible_version_0, ansible_version_0, tuple_0)
        list_1 = [unrecognized_argument_0]
        unrecognized_argument_1 = module_0.UnrecognizedArgument(int_1, bytes_0, list_1)
        unrecognized_argument_2 = module_0.UnrecognizedArgument(tuple_0, list_0, unrecognized_argument_1)
        unrecognized_argument_3 = module_0.UnrecognizedArgument(float_0, unrecognized_argument_2, sorting_help_formatter_0)
        prepend_list_action_1 = module_0.PrependListAction(dict_1, dict_1, unrecognized_argument_3, prepend_list_action_0)
    except BaseException:
        pass

def test_case_18():
    try:
        int_0 = 5734
        var_0 = module_0.version(int_0)
        bytes_0 = b'\x1dT\x13|\xefX1\x84\xe19\x88\xb81\x05\x93\x1aL\xda\xca'
        bool_0 = False
        str_0 = 'gX_~'
        prepend_list_action_0 = module_0.PrependListAction(bool_0, str_0, str_0)
        set_0 = {str_0, int_0}
        sorting_help_formatter_0 = module_0.SortingHelpFormatter(int_0)
        str_1 = 'uW`w'
        ansible_version_0 = module_0.AnsibleVersion(set_0, bytes_0, sorting_help_formatter_0, str_1)
        var_1 = prepend_list_action_0.__call__(bool_0, ansible_version_0, str_1)
        dict_0 = {}
        float_0 = 662.653
        tuple_0 = (sorting_help_formatter_0, sorting_help_formatter_0)
        list_0 = None
        unrecognized_argument_0 = module_0.UnrecognizedArgument(bytes_0, ansible_version_0, ansible_version_0, tuple_0)
        list_1 = [unrecognized_argument_0]
        unrecognized_argument_1 = module_0.UnrecognizedArgument(int_0, bytes_0, list_1)
        unrecognized_argument_2 = module_0.UnrecognizedArgument(tuple_0, list_0, unrecognized_argument_1)
        unrecognized_argument_3 = module_0.UnrecognizedArgument(float_0, unrecognized_argument_2, sorting_help_formatter_0)
        prepend_list_action_1 = module_0.PrependListAction(dict_0, dict_0, unrecognized_argument_3, prepend_list_action_0)
    except BaseException:
        pass

def test_case_19():
    try:
        int_0 = 5718
        var_0 = module_0.version(int_0)
        bytes_0 = b'\x1dT\x13|\xefX1\x84\xe19\x88\xb81\x05\x93\x1aL\xda\xca'
        bool_0 = True
        str_0 = 'gX_~'
        list_0 = [bool_0, int_0, bool_0, int_0]
        dict_0 = {}
        argument_parser_0 = module_1.ArgumentParser(bytes_0, list_0, dict_0, list_0)
        var_1 = module_0.add_runas_prompt_options(argument_parser_0, argument_parser_0)
        set_0 = {str_0, int_0}
        var_2 = module_0.add_inventory_options(argument_parser_0)
        int_1 = 619
        sorting_help_formatter_0 = module_0.SortingHelpFormatter(int_1)
        bool_1 = True
        bytes_1 = b'SNT\xe2\x02\x8fy\xaf\x96'
        list_1 = [set_0]
        prepend_list_action_0 = module_0.PrependListAction(set_0, bool_1, bytes_1, bool_0, list_1, dict_0)
    except BaseException:
        pass

def test_case_20():
    try:
        int_0 = -1002
        var_0 = module_0.version(int_0)
        var_1 = module_0.version()
        bytes_0 = b'\x1dT\x13|\xefX1\x84\xe19\x88\xb81\x05\x93\x1aL\xda\xca'
        bool_0 = True
        str_0 = 'gX_~'
        list_0 = [bool_0, int_0, bool_0, int_0]
        prepend_list_action_0 = module_0.PrependListAction(bool_0, str_0, str_0)
        set_0 = {str_0, int_0}
        int_1 = 619
        sorting_help_formatter_0 = module_0.SortingHelpFormatter(int_1)
        str_1 = 'uW`w'
        ansible_version_0 = module_0.AnsibleVersion(set_0, bytes_0, sorting_help_formatter_0, str_1)
        var_2 = prepend_list_action_0.__call__(bool_0, ansible_version_0, str_0)
        tuple_0 = (prepend_list_action_0, prepend_list_action_0)
        var_3 = module_0.create_base_parser(sorting_help_formatter_0)
        ansible_version_1 = None
        bytes_1 = b'\x16o\x96\xe7\x87\xba\xa7*\x8au\x17\x1cD\xb7D\xf7z\xf3'
        var_4 = prepend_list_action_0.__call__(tuple_0, ansible_version_0, bytes_1)
        float_0 = -3188.661
        str_2 = 'cQU'
        prepend_list_action_1 = module_0.PrependListAction(ansible_version_1, float_0, str_2, tuple_0, list_0)
    except BaseException:
        pass

def test_case_21():
    try:
        int_0 = -1002
        var_0 = module_0.version(int_0)
        var_1 = module_0.version()
        bytes_0 = b'\x1dT\x13|\xefX1\x84\xe19\x88\xb81\x05\x93\x1aL\xda\xca'
        str_0 = '?J@5oEkNQLvzfh'
        bool_0 = False
        unrecognized_argument_0 = module_0.UnrecognizedArgument(str_0, bool_0, str_0)
        list_0 = [bool_0, int_0, bool_0, int_0]
        dict_0 = {}
        argument_parser_0 = module_1.ArgumentParser(bytes_0, list_0, dict_0, list_0)
        var_2 = module_0.add_runas_prompt_options(argument_parser_0, argument_parser_0)
        prepend_list_action_0 = module_0.PrependListAction(bool_0, str_0, str_0)
        set_0 = {str_0, int_0}
        var_3 = module_0.add_inventory_options(argument_parser_0)
        sorting_help_formatter_0 = module_0.SortingHelpFormatter(int_0)
        str_1 = 'uW`w'
        ansible_version_0 = module_0.AnsibleVersion(set_0, bytes_0, sorting_help_formatter_0, str_1)
        var_4 = prepend_list_action_0.__call__(bool_0, ansible_version_0, str_1)
        unrecognized_argument_1 = None
        tuple_0 = (prepend_list_action_0, prepend_list_action_0)
        var_5 = module_0.create_base_parser(sorting_help_formatter_0)
        ansible_version_1 = None
        float_0 = -3188.661
        str_2 = '?'
        prepend_list_action_1 = module_0.PrependListAction(ansible_version_1, float_0, str_2, tuple_0, list_0)
        list_1 = [unrecognized_argument_0]
        var_6 = ansible_version_0.__call__(tuple_0, list_1, unrecognized_argument_1, prepend_list_action_1)
    except BaseException:
        pass