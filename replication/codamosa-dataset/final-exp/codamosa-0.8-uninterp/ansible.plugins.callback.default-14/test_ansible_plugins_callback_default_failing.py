# Automatically generated by Pynguin.
import ansible.plugins.callback.default as module_0

def test_case_0():
    try:
        callback_module_0 = module_0.CallbackModule()
        str_0 = '5{D/'
        var_0 = callback_module_0.set_options(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_on_failed(callback_module_0)
    except BaseException:
        pass

def test_case_2():
    try:
        float_0 = -2683.995
        tuple_0 = ()
        str_0 = 'j\rL*UsnTX&[_[5'
        tuple_1 = (float_0, tuple_0, str_0)
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_on_skipped(tuple_1)
    except BaseException:
        pass

def test_case_3():
    try:
        tuple_0 = ()
        bool_0 = True
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_no_hosts_matched()
        callback_module_1 = module_0.CallbackModule()
        var_1 = callback_module_1.v2_playbook_on_notify(tuple_0, bool_0)
        callback_module_2 = module_0.CallbackModule()
        callback_module_3 = module_0.CallbackModule()
        var_2 = callback_module_3.v2_playbook_on_cleanup_task_start(tuple_0)
    except BaseException:
        pass

def test_case_4():
    try:
        tuple_0 = ()
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_no_hosts_remaining()
        callback_module_1 = module_0.CallbackModule()
        int_0 = 3680
        bool_0 = True
        callback_module_2 = module_0.CallbackModule()
        var_1 = callback_module_2.v2_playbook_on_notify(tuple_0, bool_0)
        var_2 = callback_module_2.v2_playbook_on_start(int_0)
    except BaseException:
        pass

def test_case_5():
    try:
        callback_module_0 = module_0.CallbackModule()
        dict_0 = None
        callback_module_1 = module_0.CallbackModule()
        var_0 = callback_module_1.v2_playbook_on_task_start(callback_module_0, dict_0)
    except BaseException:
        pass

def test_case_6():
    try:
        bool_0 = None
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_cleanup_task_start(bool_0)
    except BaseException:
        pass

def test_case_7():
    try:
        callback_module_0 = module_0.CallbackModule()
        list_0 = []
        var_0 = callback_module_0.v2_playbook_on_handler_task_start(list_0)
    except BaseException:
        pass

def test_case_8():
    try:
        tuple_0 = ()
        str_0 = ''
        bool_0 = True
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_notify(tuple_0, bool_0)
        callback_module_1 = module_0.CallbackModule()
        int_0 = -441
        callback_module_2 = module_0.CallbackModule()
        var_1 = callback_module_2.v2_runner_on_start(str_0, int_0)
    except BaseException:
        pass

def test_case_9():
    try:
        list_0 = None
        dict_0 = {list_0: list_0, list_0: list_0}
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_play_start(dict_0)
    except BaseException:
        pass

def test_case_10():
    try:
        float_0 = None
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_on_file_diff(float_0)
    except BaseException:
        pass

def test_case_11():
    try:
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_item_on_ok(callback_module_0)
    except BaseException:
        pass

def test_case_12():
    try:
        int_0 = 535000
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_item_on_failed(int_0)
    except BaseException:
        pass

def test_case_13():
    try:
        float_0 = None
        str_0 = ';`IIVU-U'
        bytes_0 = b'\x7f\xe5\t|4\xe8\xdc1V@\x0f\xe9\xb9E'
        tuple_0 = (float_0, str_0, bytes_0)
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_item_on_skipped(tuple_0)
    except BaseException:
        pass

def test_case_14():
    try:
        callback_module_0 = module_0.CallbackModule()
        bytes_0 = b'<\xcf\xe9\x97?\x12\x18\xc8\xfc\xafo\xdc9)\x9a\xccR\xfaD\xd5'
        callback_module_1 = module_0.CallbackModule()
        var_0 = callback_module_1.v2_playbook_on_include(bytes_0)
    except BaseException:
        pass

def test_case_15():
    try:
        callback_module_0 = module_0.CallbackModule()
        list_0 = [callback_module_0, callback_module_0, callback_module_0]
        var_0 = callback_module_0.v2_playbook_on_stats(list_0)
    except BaseException:
        pass

def test_case_16():
    try:
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_start(callback_module_0)
    except BaseException:
        pass

def test_case_17():
    try:
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_playbook_on_no_hosts_remaining()
        str_0 = 'b9s{"\nkDWRAJ&X7,+Q+'
        set_0 = {str_0, str_0}
        callback_module_1 = module_0.CallbackModule()
        var_1 = callback_module_1.v2_runner_retry(set_0)
    except BaseException:
        pass

def test_case_18():
    try:
        callback_module_0 = module_0.CallbackModule()
        str_0 = "pdV:?;0'DD@:~D"
        var_0 = callback_module_0.v2_runner_on_async_poll(str_0)
    except BaseException:
        pass

def test_case_19():
    try:
        bool_0 = True
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_on_async_ok(bool_0)
    except BaseException:
        pass

def test_case_20():
    try:
        float_0 = 248.6
        list_0 = [float_0, float_0]
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_on_async_failed(list_0)
    except BaseException:
        pass

def test_case_21():
    try:
        str_0 = None
        callback_module_0 = module_0.CallbackModule()
        var_0 = callback_module_0.v2_runner_on_ok(str_0)
    except BaseException:
        pass

def test_case_22():
    try:
        callback_module_0 = module_0.CallbackModule()
        bytes_0 = None
        var_0 = callback_module_0.v2_runner_on_unreachable(bytes_0)
    except BaseException:
        pass