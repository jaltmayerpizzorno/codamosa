# Automatically generated by Pynguin.
import ansible.utils.jsonrpc as module_0

def test_case_0():
    try:
        json_rpc_server_0 = module_0.JsonRpcServer()
        var_0 = json_rpc_server_0.header()
    except BaseException:
        pass

def test_case_1():
    try:
        json_rpc_server_0 = module_0.JsonRpcServer()
        var_0 = json_rpc_server_0.invalid_request()
    except BaseException:
        pass

def test_case_2():
    try:
        dict_0 = {}
        json_rpc_server_0 = module_0.JsonRpcServer(**dict_0)
        bool_0 = False
        str_0 = 'Bk&(1sbz2m4_#d9%\nO\n'
        tuple_0 = (bool_0, str_0)
        json_rpc_server_1 = module_0.JsonRpcServer()
        var_0 = json_rpc_server_1.parse_error(tuple_0)
    except BaseException:
        pass

def test_case_3():
    try:
        json_rpc_server_0 = module_0.JsonRpcServer()
        var_0 = json_rpc_server_0.invalid_params()
    except BaseException:
        pass

def test_case_4():
    try:
        json_rpc_server_0 = module_0.JsonRpcServer()
        var_0 = json_rpc_server_0.internal_error()
    except BaseException:
        pass

def test_case_5():
    try:
        json_rpc_server_0 = module_0.JsonRpcServer()
        str_0 = '{"jsonrpc": "2.0", "method": "_test", "params": [1,2,3,4,5], "id": 12}'
        var_0 = json_rpc_server_0.handle_request(str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        json_rpc_server_0 = module_0.JsonRpcServer()
        str_0 = '{"method": "rpc.my_method", "params": [], "id": 1}'
        var_0 = json_rpc_server_0.handle_request(str_0)
    except BaseException:
        pass