# Automatically generated by Pynguin.
import httpie.uploads as module_0
import requests_toolbelt.multipart.encoder as module_1
import httpie.cli.dicts as module_2
import requests.models as module_3
import typing as module_4

def test_case_0():
    try:
        bytes_0 = b'\x9c\x81+\xcd\xfe'
        callable_0 = None
        chunked_upload_stream_0 = module_0.ChunkedUploadStream(bytes_0, callable_0)
        iterable_0 = chunked_upload_stream_0.__iter__()
        multipart_encoder_0 = module_1.MultipartEncoder(iterable_0)
    except BaseException:
        pass

def test_case_1():
    try:
        multipart_request_data_dict_0 = module_2.MultipartRequestDataDict()
        str_0 = ''
        tuple_0 = module_0.get_multipart_data_and_content_type(multipart_request_data_dict_0, str_0)
        callable_0 = None
        var_0 = module_0.prepare_request_body(str_0, callable_0, multipart_request_data_dict_0, tuple_0)
        prepared_request_0 = module_3.PreparedRequest()
        list_0 = [prepared_request_0, prepared_request_0, prepared_request_0]
        i_o_0 = module_4.IO(*list_0)
    except BaseException:
        pass

def test_case_2():
    try:
        prepared_request_0 = module_3.PreparedRequest()
        bool_0 = False
        var_0 = module_0.compress_request(prepared_request_0, bool_0)
    except BaseException:
        pass

def test_case_3():
    try:
        list_0 = []
        multipart_encoder_0 = module_1.MultipartEncoder(list_0)
        str_0 = 'UDQ0:"I=oRX~\\,=q^~I'
        chunked_multipart_upload_stream_0 = module_0.ChunkedMultipartUploadStream(multipart_encoder_0)
        var_0 = module_0.prepare_request_body(multipart_encoder_0, str_0, chunked_multipart_upload_stream_0)
        multipart_encoder_1 = module_1.MultipartEncoder(chunked_multipart_upload_stream_0, multipart_encoder_0)
    except BaseException:
        pass

def test_case_4():
    try:
        request_data_dict_0 = module_2.RequestDataDict()
        callable_0 = None
        prepared_request_0 = module_3.PreparedRequest()
        set_0 = set()
        chunked_upload_stream_0 = module_0.ChunkedUploadStream(set_0, callable_0)
        iterable_0 = chunked_upload_stream_0.__iter__()
        var_0 = prepared_request_0.prepare_cookies(iterable_0)
        bool_0 = True
        list_0 = [bool_0, callable_0, bool_0, prepared_request_0]
        chunked_upload_stream_1 = module_0.ChunkedUploadStream(list_0, callable_0)
        var_1 = module_0.prepare_request_body(request_data_dict_0, chunked_upload_stream_1)
        var_2 = module_0.compress_request(prepared_request_0, bool_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = '|N_\t/,>5H'
        str_1 = ').'
        str_2 = 'wuo/6$\n77LOSs'
        dict_0 = {str_0: str_0, str_1: str_0, str_2: str_2}
        multipart_request_data_dict_0 = module_2.MultipartRequestDataDict(**dict_0)
        tuple_0 = module_0.get_multipart_data_and_content_type(multipart_request_data_dict_0, str_0, str_2)
        request_data_dict_0 = module_2.RequestDataDict()
        callable_0 = None
        prepared_request_0 = module_3.PreparedRequest()
        bytes_0 = b'\xc7\xfc9\xfc\x08P\t\xad\xb4</'
        int_0 = 255
        int_1 = 1338
        var_0 = module_0.prepare_request_body(str_0, bytes_0, int_0, int_1)
        bool_0 = True
        multipart_request_data_dict_1 = module_2.MultipartRequestDataDict()
        tuple_1 = module_0.get_multipart_data_and_content_type(multipart_request_data_dict_1)
        list_0 = [multipart_request_data_dict_1, request_data_dict_0, callable_0, bool_0, prepared_request_0]
        chunked_upload_stream_0 = module_0.ChunkedUploadStream(list_0, callable_0)
        var_1 = module_0.prepare_request_body(request_data_dict_0, chunked_upload_stream_0)
        multipart_encoder_0 = None
        callable_1 = None
        set_0 = set()
        int_2 = None
        multipart_encoder_1 = module_1.MultipartEncoder(set_0, int_2)
        var_2 = module_0.prepare_request_body(multipart_encoder_1, callable_1)
        int_3 = 30
        var_3 = module_0.prepare_request_body(str_2, callable_1, int_3, prepared_request_0)
        set_1 = set()
        var_4 = module_0.prepare_request_body(str_1, callable_1, int_3, set_1, str_0)
        iterable_0 = chunked_upload_stream_0.__iter__()
        tuple_2 = (multipart_encoder_0,)
        var_5 = module_0.prepare_request_body(multipart_encoder_1, callable_1, int_3, iterable_0, tuple_2)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = ').'
        request_data_dict_0 = module_2.RequestDataDict()
        prepared_request_0 = module_3.PreparedRequest()
        bytes_0 = b'\xc7\xfc9\xfc\x08P\t\xad\xb4</'
        int_0 = 1338
        var_0 = module_0.prepare_request_body(str_0, bytes_0, int_0, int_0)
        set_0 = {var_0}
        multipart_encoder_0 = module_1.MultipartEncoder(set_0, int_0)
    except BaseException:
        pass