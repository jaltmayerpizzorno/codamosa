# Automatically generated by Pynguin.
import ansible.module_utils.facts.network.aix as module_0

def test_case_0():
    try:
        str_0 = '8V257F\n2&(J@E~I`'
        bytes_0 = b'A\xf7\x05\x02\xb4+\x7fZ'
        a_i_x_network_0 = module_0.AIXNetwork(bytes_0)
        var_0 = a_i_x_network_0.get_default_interfaces(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = -1240
        dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
        str_0 = 'H'
        set_0 = {str_0}
        a_i_x_network_0 = module_0.AIXNetwork(str_0, set_0)
        var_0 = a_i_x_network_0.get_interfaces_info(dict_0)
    except BaseException:
        pass

def test_case_2():
    try:
        float_0 = 1103.3292
        dict_0 = None
        str_0 = 'obj must be a list of dicts or a nested dict'
        tuple_0 = (dict_0, str_0)
        tuple_1 = (tuple_0,)
        list_0 = [dict_0]
        bool_0 = False
        a_i_x_network_0 = module_0.AIXNetwork(bool_0)
        a_i_x_network_1 = module_0.AIXNetwork(a_i_x_network_0)
        a_i_x_network_2 = module_0.AIXNetwork(tuple_1, list_0)
        var_0 = a_i_x_network_2.parse_interface_line(float_0)
    except BaseException:
        pass

def test_case_3():
    try:
        list_0 = []
        set_0 = None
        int_0 = 5985
        bool_0 = True
        a_i_x_network_0 = module_0.AIXNetwork(int_0, bool_0)
        str_0 = 'ESTABLISH LOCAL CONNECTION FOR USER: {0}'
        var_0 = a_i_x_network_0.parse_interface_line(str_0)
        a_i_x_network_collector_0 = module_0.AIXNetworkCollector(list_0)
        a_i_x_network_1 = module_0.AIXNetwork(a_i_x_network_collector_0)
        tuple_0 = (set_0, a_i_x_network_0, a_i_x_network_1)
        a_i_x_network_2 = module_0.AIXNetwork(tuple_0)
        var_1 = a_i_x_network_2.get_interfaces_info(a_i_x_network_2)
    except BaseException:
        pass