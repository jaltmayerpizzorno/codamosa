# Automatically generated by Pynguin.
import ansible.playbook.block as module_0
import ansible.playbook.role as module_1

def test_case_0():
    try:
        str_0 = ">\x0b.'\x0cXpDi)GeK"
        bytes_0 = b'<\x10\x1d\x0c\xc9\xcf\x14\xf1sTTr\x98'
        block_0 = module_0.Block(str_0, bytes_0)
        var_0 = block_0.get_dep_chain()
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = ')#(?a&mU(yshs)'
        list_0 = [str_0, str_0]
        str_1 = ''
        role_0 = module_1.Role(str_1)
        block_0 = module_0.Block(role_0, role_0, role_0)
        bytes_0 = b')\x01\x04\xef\xa8Y\xeeR\x91\xc9\xd8\xde\x87'
        role_1 = module_1.Role(role_0, bytes_0, list_0)
        role_2 = module_1.Role(bytes_0)
        var_0 = block_0.__repr__()
        str_2 = '7f'
        var_1 = block_0.filter_tagged_tasks(str_2)
        var_2 = block_0.has_tasks()
        var_3 = block_0.has_tasks()
        var_4 = block_0.serialize()
    except BaseException:
        pass

def test_case_2():
    try:
        bool_0 = False
        tuple_0 = None
        block_0 = module_0.Block(bool_0, tuple_0)
        list_0 = [block_0, bool_0]
        block_1 = module_0.Block()
        var_0 = block_1.deserialize(list_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = ')5"{\r2\x0c?eKj!-X<4S'
        block_0 = module_0.Block(str_0)
        var_0 = block_0.get_include_params()
        var_1 = block_0.get_vars()
        var_2 = block_0.has_tasks()
        int_0 = -1872
        block_1 = module_0.Block(int_0)
        str_1 = '0242ac11-000f-9401-5ab7-0000000000ac'
        var_3 = block_1.deserialize(str_1)
    except BaseException:
        pass

def test_case_4():
    try:
        block_0 = module_0.Block()
        str_0 = "eQlN~;'>KVuT,d$."
        int_0 = 63
        str_1 = ':'
        var_0 = block_0.load(str_0, str_0, int_0, str_1)
    except BaseException:
        pass

def test_case_5():
    try:
        tuple_0 = ()
        int_0 = -1900
        bytes_0 = b"\xaf\xd7Z\x966'9B\xf4"
        tuple_1 = (int_0, bytes_0)
        bytes_1 = b'}\xc6\xe2~>\xfb,'
        block_0 = module_0.Block(int_0, tuple_1, bytes_1)
        var_0 = block_0.copy(tuple_0)
    except BaseException:
        pass

def test_case_6():
    try:
        dict_0 = {}
        int_0 = 1495
        bool_0 = False
        block_0 = module_0.Block(int_0, bool_0)
        block_1 = module_0.Block(dict_0, block_0)
        var_0 = block_1.has_tasks()
        str_0 = ')#(?a&mU(yshs)'
        list_0 = [str_0, str_0]
        tuple_0 = (str_0, list_0)
        role_0 = module_1.Role(str_0)
        block_2 = module_0.Block(role_0, role_0, role_0)
        bytes_0 = b')\x01\x04\xef\xa8Y\xeeR\x91\xc9\xd8\xde\x87'
        role_1 = module_1.Role(role_0, bytes_0, list_0)
        role_2 = module_1.Role(bytes_0)
        str_1 = 'f'
        var_1 = block_2.filter_tagged_tasks(str_1)
        var_2 = block_2.has_tasks()
        var_3 = block_2.set_loader(tuple_0)
        var_4 = block_2.get_dep_chain()
        var_5 = block_2.get_first_parent_include()
    except BaseException:
        pass

def test_case_7():
    try:
        bytes_0 = b'\x00\xc4\x13'
        list_0 = [bytes_0, bytes_0]
        block_0 = module_0.Block(list_0, list_0)
        var_0 = block_0.serialize()
    except BaseException:
        pass

def test_case_8():
    try:
        int_0 = 82
        bytes_0 = b'\xb3\x87j>m`\x00\xe0\xd9\xa4xE\x12\xcbN'
        block_0 = module_0.Block(int_0, bytes_0)
        var_0 = block_0.get_include_params()
    except BaseException:
        pass

def test_case_9():
    try:
        float_0 = 496.186
        list_0 = [float_0, float_0, float_0, float_0]
        block_0 = module_0.Block(float_0, list_0)
        var_0 = block_0.all_parents_static()
    except BaseException:
        pass

def test_case_10():
    try:
        bool_0 = False
        int_0 = -1046
        block_0 = module_0.Block(bool_0, bool_0, bool_0, int_0)
        var_0 = block_0.get_first_parent_include()
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = ''
        role_0 = module_1.Role(str_0)
        block_0 = module_0.Block(role_0, role_0, role_0)
        var_0 = block_0.serialize()
    except BaseException:
        pass

def test_case_12():
    try:
        set_0 = set()
        str_0 = '0242ac11-000f-9401-5ab7-000000005419'
        role_0 = module_1.Role(set_0, str_0)
        block_0 = module_0.Block(role_0, role_0)
        var_0 = block_0.serialize()
    except BaseException:
        pass

def test_case_13():
    try:
        int_0 = 2343
        list_0 = [int_0, int_0]
        bytes_0 = b'\xa6\x11)\x1c7l\x04\xab>\x93c\x84\xceG\xe8\n\xc9\xb9\xf6\r'
        bool_0 = False
        float_0 = 511.5455213645346
        str_0 = '0242ac11-000f-9401-5ab7-000000000039'
        block_0 = module_0.Block(float_0, str_0)
        block_1 = module_0.Block(list_0, bytes_0, bool_0, block_0)
        block_2 = module_0.Block()
        var_0 = block_1.serialize()
    except BaseException:
        pass

def test_case_14():
    try:
        bytes_0 = b'&M\xda\x87*'
        str_0 = 'sFy'
        block_0 = module_0.Block(bytes_0, str_0)
        var_0 = block_0.get_vars()
    except BaseException:
        pass

def test_case_15():
    try:
        dict_0 = {}
        list_0 = []
        float_0 = -3397.9
        block_0 = module_0.Block(float_0)
        list_1 = [block_0, float_0, block_0, block_0]
        block_1 = module_0.Block(list_1)
        var_0 = block_1.load(dict_0, list_0)
    except BaseException:
        pass

def test_case_16():
    try:
        float_0 = 2483.724
        role_0 = module_1.Role()
        bool_0 = True
        block_0 = module_0.Block(float_0, role_0, bool_0)
        var_0 = block_0.serialize()
    except BaseException:
        pass

def test_case_17():
    try:
        int_0 = 983
        dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: int_0}
        block_0 = module_0.Block(dict_0)
        block_1 = module_0.Block(int_0, block_0)
        var_0 = block_1.serialize()
        str_0 = '0242ac11-000f-9401-5ab7-00000000000b'
        block_2 = module_0.Block()
        var_1 = block_2.copy()
        int_1 = 2343
        var_2 = block_2.serialize()
        block_3 = module_0.Block(str_0)
        var_3 = block_3.get_first_parent_include()
        var_4 = block_0.__ne__(int_1)
    except BaseException:
        pass

def test_case_18():
    try:
        block_0 = module_0.Block()
        block_1 = module_0.Block()
        var_0 = block_1.get_dep_chain()
        var_1 = block_0.copy(var_0)
        str_0 = 'ansible_become_pass'
        var_2 = block_0.deserialize(str_0)
    except BaseException:
        pass

def test_case_19():
    try:
        bytes_0 = None
        bool_0 = None
        int_0 = -1293
        str_0 = None
        set_0 = {str_0, bytes_0, bytes_0}
        float_0 = -1666.601
        float_1 = 512.0
        dict_0 = {bool_0: int_0, bytes_0: set_0, bytes_0: float_1, str_0: bytes_0}
        tuple_0 = (float_0, dict_0)
        str_1 = '\n        Create a copy of this object and return it.\n        '
        role_0 = module_1.Role(str_1)
        tuple_1 = (set_0, bytes_0, tuple_0, role_0)
        block_0 = module_0.Block(int_0, str_0, tuple_1)
        list_0 = []
        block_1 = module_0.Block(block_0, tuple_0, block_0, list_0)
        tuple_2 = (block_1,)
        tuple_3 = (bool_0, tuple_2, block_0)
        block_2 = module_0.Block(tuple_3)
        var_0 = block_2.get_include_params()
        int_1 = None
        str_2 = '0242ac11-000f-9401-5ab7-000000002050'
        block_3 = module_0.Block(bytes_0, int_1, str_2)
        list_1 = [bytes_0]
        int_2 = -86
        var_1 = block_3.is_block(int_2)
        var_2 = block_3.set_loader(list_1)
    except BaseException:
        pass