# Automatically generated by Pynguin.
import ansible.playbook.role.definition as module_0
import ansible.parsing.yaml.objects as module_1

def test_case_0():
    try:
        list_0 = []
        role_definition_0 = module_0.RoleDefinition()
        var_0 = role_definition_0.load(list_0)
    except BaseException:
        pass

def test_case_1():
    try:
        role_definition_0 = module_0.RoleDefinition()
        var_0 = role_definition_0.preprocess_data(role_definition_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'my_role'
        role_definition_0 = module_0.RoleDefinition()
        var_0 = role_definition_0.preprocess_data(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        role_definition_0 = module_0.RoleDefinition()
        bool_0 = True
        var_0 = role_definition_0.preprocess_data(bool_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'role_name'
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
        role_definition_0 = module_0.RoleDefinition()
        var_0 = role_definition_0.preprocess_data(dict_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'Connection to proxy failed'
        int_0 = 29
        set_0 = None
        tuple_0 = (str_0, int_0, set_0)
        int_1 = 801
        dict_0 = {}
        str_1 = '$fs.Close()'
        role_definition_0 = module_0.RoleDefinition(int_1, dict_0, str_1)
        var_0 = role_definition_0.get_role_params()
        bytes_0 = b'NwS\x96 \x11U'
        float_0 = 0.5
        bool_0 = True
        tuple_1 = (tuple_0, float_0)
        tuple_2 = ()
        dict_1 = {set_0: str_0, int_0: str_0, bytes_0: set_0, tuple_1: tuple_2}
        int_2 = -2035
        role_definition_1 = module_0.RoleDefinition(dict_1, float_0, int_2)
        var_1 = role_definition_1.preprocess_data(bool_0)
    except BaseException:
        pass

def test_case_6():
    try:
        role_definition_0 = module_0.RoleDefinition()
        var_0 = role_definition_0.get_name(role_definition_0)
        var_1 = role_definition_0.get_name()
        str_0 = 'XQ!8*sq'
        var_2 = role_definition_0.get_name(str_0)
        int_0 = None
        var_3 = role_definition_0.get_name(int_0)
        list_0 = [str_0, str_0, var_0, role_definition_0]
        var_4 = role_definition_0.preprocess_data(list_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'ansible.plugins.test'
        int_0 = -1020
        dict_0 = {}
        role_definition_0 = module_0.RoleDefinition(dict_0)
        var_0 = role_definition_0.get_role_params()
        float_0 = -1180.14
        bytes_0 = b'\xbb5\xb7i\xea\xe7+\x9aOd\x95\xa5c\x93\x91\xe2\xa2k\x1f'
        role_definition_1 = module_0.RoleDefinition(int_0, float_0, bytes_0)
        var_1 = role_definition_1.get_role_params()
        var_2 = role_definition_1.get_role_path()
        role_definition_2 = module_0.RoleDefinition()
        var_3 = role_definition_2.preprocess_data(str_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = 'my_role'
        role_definition_0 = module_0.RoleDefinition()
        var_0 = dict(name=str_0)
        var_1 = role_definition_0.preprocess_data(var_0)
    except BaseException:
        pass

def test_case_9():
    try:
        role_definition_0 = module_0.RoleDefinition()
        var_0 = role_definition_0.get_name()
        var_1 = dict(name=role_definition_0)
        role_definition_1 = module_0.RoleDefinition()
        var_2 = role_definition_1.preprocess_data(var_1)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = '"'
        list_0 = []
        int_0 = 520
        role_definition_0 = module_0.RoleDefinition(str_0, list_0, int_0)
        var_0 = role_definition_0.get_name()
        var_1 = dict(name=str_0)
        var_2 = role_definition_0.get_role_params()
        var_3 = role_definition_0.preprocess_data(var_1)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = 'my_role'
        role_definition_0 = module_0.RoleDefinition()
        var_0 = role_definition_0.get_name()
        var_1 = dict(name=str_0)
        role_definition_1 = module_0.RoleDefinition()
        var_2 = role_definition_0.get_role_params()
        ansible_base_y_a_m_l_object_0 = module_1.AnsibleBaseYAMLObject()
        var_3 = role_definition_0.preprocess_data(ansible_base_y_a_m_l_object_0)
    except BaseException:
        pass