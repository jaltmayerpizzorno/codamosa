# Automatically generated by Pynguin.
import py_backwards.utils.snippet as module_0
import typed_ast.ast3 as module_1
import typed_ast._ast3 as module_2

def test_case_0():
    pass

def test_case_1():
    dict_0 = None
    variables_replacer_0 = module_0.VariablesReplacer(dict_0)

def test_case_2():
    str_0 = 'extend(vars)\n'
    var_0 = module_1.parse(str_0)
    str_1 = '8X3@"'
    str_2 = None
    dict_0 = {str_1: str_0, str_0: str_0, str_0: str_1, str_2: str_1}
    variables_replacer_0 = module_0.VariablesReplacer(dict_0)
    keyword_0 = module_2.keyword()
    keyword_1 = variables_replacer_0.visit_keyword(keyword_0)
    str_3 = 'vars'
    var_1 = var_0.body
    var_2 = {str_3: var_1}
    module_0.extend_tree(keyword_0, var_2)
    var_3 = module_1.dump(keyword_0)

def test_case_3():
    str_0 = 'keb~>%igmbxA,pN`1%~'
    dict_0 = {str_0: str_0, str_0: str_0}
    name_0 = module_2.Name(**dict_0)
    str_1 = '; "^)3U\'p;#'
    dict_1 = {str_1: str_1}
    variables_replacer_0 = module_0.VariablesReplacer(dict_1)
    name_1 = variables_replacer_0.visit_Name(name_0)

def test_case_4():
    str_0 = 'let(x); foo(x)'
    str_1 = ''
    list_0 = []
    dict_0 = {str_0: str_0, str_0: str_0, str_1: list_0, str_0: list_0}
    variables_replacer_0 = module_0.VariablesReplacer(dict_0)
    var_0 = module_1.parse(str_0)
    iterable_0 = module_0.find_variables(var_0)
    var_1 = list(iterable_0)
    function_def_0 = module_2.FunctionDef()
    function_def_1 = variables_replacer_0.visit_FunctionDef(function_def_0)
    function_def_2 = variables_replacer_0.visit_FunctionDef(function_def_1)

def test_case_5():
    str_0 = '6[Lu)#fYspZ(67\tX'
    list_0 = [str_0, str_0, str_0]
    attribute_0 = module_2.Attribute(*list_0)
    dict_0 = {}
    variables_replacer_0 = module_0.VariablesReplacer(dict_0)
    attribute_1 = variables_replacer_0.visit_Attribute(attribute_0)
    str_1 = 'M>T D?Ww-b^bUDe'
    str_2 = None
    dict_1 = {str_1: str_1, str_2: str_2}
    variables_replacer_1 = module_0.VariablesReplacer(dict_1)
    attribute_2 = variables_replacer_1.visit_Attribute(attribute_1)

def test_case_6():
    str_0 = 'Ve_`f+'
    dict_0 = {str_0: str_0}
    keyword_0 = module_2.keyword(**dict_0)
    str_1 = 'jg8#@}{cw~D\n*n'
    str_2 = None
    str_3 = '+mK>'
    dict_1 = {str_1: str_1, str_1: str_1, str_2: str_2, str_3: str_2}
    variables_replacer_0 = module_0.VariablesReplacer(dict_1)
    keyword_1 = variables_replacer_0.visit_keyword(keyword_0)

def test_case_7():
    str_0 = 'let(x); foo(x)'
    var_0 = module_1.parse(str_0)
    iterable_0 = module_0.find_variables(var_0)
    var_1 = list(iterable_0)
    dict_0 = {}
    variables_replacer_0 = module_0.VariablesReplacer(dict_0)
    list_0 = [str_0, var_0]
    alias_0 = module_2.alias(*list_0)
    alias_1 = variables_replacer_0.visit_alias(alias_0)

def test_case_8():
    a_s_t_0 = None
    list_0 = [a_s_t_0, a_s_t_0, a_s_t_0]
    except_handler_0 = module_2.ExceptHandler()
    str_0 = '$N6>\tRY,~lLp\t4M_1u8?'
    dict_0 = {str_0: list_0}
    variables_replacer_0 = module_0.VariablesReplacer(dict_0)
    except_handler_1 = variables_replacer_0.visit_ExceptHandler(except_handler_0)
    module_0.extend(list_0)

def test_case_9():
    callable_0 = None
    snippet_0 = module_0.snippet(callable_0)

def test_case_10():
    str_0 = 'let(x); foo(x)'
    var_0 = module_1.parse(str_0)
    iterable_0 = module_0.find_variables(var_0)

def test_case_11():
    a_s_t_0 = module_2.AST()
    dict_0 = {}
    module_0.extend_tree(a_s_t_0, dict_0)

def test_case_12():
    alias_0 = module_2.alias()
    module_0.let(alias_0)

def test_case_13():
    a_s_t_0 = module_2.AST()
    str_0 = 'foo'
    dict_0 = {str_0: a_s_t_0}
    module_0.extend_tree(a_s_t_0, dict_0)
    str_1 = 'let(x); foo(x)'
    var_0 = module_1.parse(str_1)
    iterable_0 = module_0.find_variables(var_0)
    var_1 = list(iterable_0)
    module_0.extend_tree(a_s_t_0, dict_0)
    str_2 = 'enable debug output'
    variables_replacer_0 = module_0.VariablesReplacer(dict_0)
    name_0 = module_2.Name()
    variables_replacer_1 = module_0.VariablesReplacer(dict_0)
    module_0.extend(str_2)
    name_1 = variables_replacer_1.visit_Name(name_0)
    list_0 = [str_1, var_0]
    alias_0 = module_2.alias(*list_0)
    alias_1 = variables_replacer_1.visit_alias(alias_0)

def test_case_14():
    str_0 = 'extend(abc)\nx = 123\nprint(x)'
    var_0 = module_1.parse(str_0)
    var_1 = module_1.parse(str_0)
    str_1 = 'abc'
    var_2 = {str_1: str_0}
    module_0.extend_tree(var_0, var_2)

def test_case_15():
    str_0 = 'let(x); oo(x)'
    var_0 = module_1.parse(str_0)
    iterable_0 = module_0.find_variables(var_0)
    str_1 = None
    list_0 = [str_0, var_0]
    alias_0 = module_2.alias(*list_0)
    dict_0 = {str_1: str_0, str_0: str_0}
    variables_replacer_0 = module_0.VariablesReplacer(dict_0)
    attribute_0 = module_2.Attribute()
    alias_1 = variables_replacer_0.visit_alias(alias_0)

def test_case_16():
    str_0 = 'let(x); oo(x)'
    var_0 = module_1.parse(str_0)
    iterable_0 = module_0.find_variables(var_0)
    var_1 = list(iterable_0)
    list_0 = [str_0]
    import_from_0 = module_2.ImportFrom(*list_0)
    str_1 = 'z}LJ\x0cQ'
    a_s_t_0 = None
    a_s_t_1 = module_2.AST()
    list_1 = [a_s_t_0, a_s_t_1, a_s_t_1, a_s_t_1]
    dict_0 = {str_1: list_1}
    variables_replacer_0 = module_0.VariablesReplacer(dict_0)
    import_from_1 = variables_replacer_0.visit_ImportFrom(import_from_0)
    str_2 = 'http.cookies'
    str_3 = ',uynYL/z61\x0c620a+b`\t4'
    dict_1 = {str_2: str_0, str_3: str_3, str_2: str_3}
    variables_replacer_1 = module_0.VariablesReplacer(dict_1)
    import_from_2 = variables_replacer_1.visit_ImportFrom(import_from_1)
    str_4 = None
    dict_2 = {}
    variables_replacer_2 = module_0.VariablesReplacer(dict_2)
    list_2 = [str_0, var_0]
    alias_0 = module_2.alias(*list_2)
    variables_replacer_3 = module_0.VariablesReplacer(dict_2)
    alias_1 = variables_replacer_3.visit_alias(alias_0)
    alias_2 = module_2.alias(*list_2)
    dict_3 = {str_4: str_0, str_0: str_0}
    variables_replacer_4 = module_0.VariablesReplacer(dict_3)
    alias_3 = variables_replacer_4.visit_alias(alias_2)
    attribute_0 = module_2.Attribute()
    attribute_1 = variables_replacer_4.visit_Attribute(attribute_0)
    attribute_2 = variables_replacer_3.visit_Attribute(attribute_1)
    attribute_3 = variables_replacer_3.visit_Attribute(attribute_2)
    alias_4 = variables_replacer_2.visit_alias(alias_0)