# Automatically generated by Pynguin.
import ansible.plugins.action.assert as module_0

def test_case_0():
    try:
        str_0 = 'Wg63\\nK*&#|?Urt^+Kl'
        bool_0 = False
        str_1 = 'submodule'
        float_0 = 1706.05042
        tuple_0 = (float_0, bool_0)
        action_module_0 = module_0.ActionModule(str_0, str_0, bool_0, str_1, bool_0, tuple_0)
        var_0 = action_module_0.run()
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = b'\xbe\xa9\x11\x00/<l\x06\x1b\xdfj\xb4\x03/\x8d\x19\x91\xa1W\xf4'
        float_0 = 1419.72418
        list_0 = []
        bytes_1 = b'\xa5\xc6\x98z\xe7\x93\xd0,\xa9\x8e\xd1'
        int_0 = 830
        str_0 = ' -l "%s"'
        str_1 = 'p4+@b}3qf989Sjw*c'
        int_1 = -1505
        str_2 = 'UTIq+iRyt,=PQ~6\x0cAjA!'
        action_module_0 = module_0.ActionModule(str_0, int_0, str_1, int_1, str_2, bytes_1)
        str_3 = 'DEHEY/XveYcna1^s#GyY'
        action_module_1 = module_0.ActionModule(bytes_1, int_0, int_0, action_module_0, str_3, list_0)
        dict_0 = {}
        tuple_0 = (action_module_1, list_0, dict_0)
        dict_1 = {}
        action_module_2 = module_0.ActionModule(list_0, tuple_0, dict_1, dict_1, str_2, action_module_1)
        var_0 = action_module_2.run(bytes_0, float_0)
    except BaseException:
        pass