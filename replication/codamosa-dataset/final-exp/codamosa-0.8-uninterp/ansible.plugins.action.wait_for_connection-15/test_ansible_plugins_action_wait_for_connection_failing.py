# Automatically generated by Pynguin.
import ansible.plugins.action.wait_for_connection as module_0

def test_case_0():
    try:
    except BaseException:
        pass

def test_case_1():
    try:
        list_0 = None
        dict_0 = {list_0: list_0}
        float_0 = 0.2
        bool_0 = None
        timed_out_exception_0 = module_0.TimedOutException()
        list_1 = None
        str_0 = '2\n\r0l%bsu0p^T|'
        str_1 = '\n        Fetch the list of items specified.\n        '
        int_0 = -2355
        action_module_0 = module_0.ActionModule(str_0, dict_0, dict_0, dict_0, str_1, int_0)
        bytes_0 = b'tS6\x01\xb9\x89\xe9\xf0\xd2\x03\xa8qzf\x9e'
        list_2 = [action_module_0, float_0]
        tuple_0 = (list_2,)
        tuple_1 = (float_0, bool_0, tuple_0)
        str_2 = 'O_vxN[FE/5w)'
        str_3 = ';<9&>xCMc+QI\x0cc` '
        dict_1 = {str_2: bytes_0, str_3: timed_out_exception_0, str_1: str_3}
        action_module_1 = module_0.ActionModule(action_module_0, timed_out_exception_0, bytes_0, tuple_1, dict_1, timed_out_exception_0)
        var_0 = action_module_1.run(list_1)
    except BaseException:
        pass

def test_case_2():
    try:
        timed_out_exception_0 = module_0.TimedOutException()
        list_0 = None
        list_1 = [timed_out_exception_0, list_0, timed_out_exception_0]
        list_2 = None
        bytes_0 = b'}H2\xef\xbe\xb1\xdb"#\xe2\x9d|P\x1cL\xb9i|N'
        str_0 = "\n    Convert a string of key/value items to a dict. If any free-form params\n    are found and the check_raw option is set to True, they will be added\n    to a new parameter called '_raw_params'. If check_raw is not enabled,\n    they will simply be ignored.\n    "
        str_1 = 'OYaL_4f/rF}Aj%!dx\x0c'
        dict_0 = {str_0: timed_out_exception_0, str_0: timed_out_exception_0, str_0: timed_out_exception_0, str_1: timed_out_exception_0}
        dict_1 = {}
        str_2 = 'dg|S5`]}2"#Ua'
        bool_0 = True
        float_0 = 2970.0
        str_3 = 'error processing module_util {0} loading redirected collection {1}: {2}'
        str_4 = ')-xU/~%$a~FTm.{o\x0c77'
        action_module_0 = None
        float_1 = 0.0001
        tuple_0 = (action_module_0, dict_0, float_1, dict_0)
        tuple_1 = (str_4, dict_1, tuple_0, dict_0)
        set_0 = {str_2, str_2, str_1}
        list_3 = [timed_out_exception_0]
        action_module_1 = module_0.ActionModule(float_0, str_3, tuple_1, dict_1, set_0, list_3)
        list_4 = []
        bool_1 = False
        tuple_2 = (action_module_0, list_3, list_4, bool_1)
        list_5 = [action_module_0, dict_1, tuple_2, float_0]
        action_module_2 = module_0.ActionModule(dict_0, dict_1, str_2, bool_0, action_module_1, list_5)
        var_0 = action_module_2.do_until_success_or_timeout(list_1, list_2, bytes_0, list_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'read_timeout_sec'
        list_0 = None
        dict_0 = {list_0: str_0}
        int_0 = None
        float_0 = -572.18
        str_1 = 'swdepot'
        str_2 = None
        str_3 = 'I,j\t/\x0b<eE'
        dict_1 = {str_1: dict_0, str_2: str_0, str_3: int_0, str_1: str_2}
        action_module_0 = module_0.ActionModule(str_0, list_0, dict_0, int_0, float_0, dict_1)
        dict_2 = None
        dict_3 = None
        str_4 = '?x& Bxv&yeHP3hB[Ef'
        bool_0 = False
        float_1 = 3072.57
        str_5 = ''
        list_1 = []
        timed_out_exception_0 = module_0.TimedOutException(*list_1)
        bool_1 = True
        action_module_1 = module_0.ActionModule(bool_0, str_2, float_1, str_5, timed_out_exception_0, bool_1)
        set_0 = set()
        str_6 = '{'
        tuple_0 = (str_6, dict_2)
        list_2 = [tuple_0, str_4]
        timed_out_exception_1 = module_0.TimedOutException(*list_2)
        action_module_2 = module_0.ActionModule(dict_2, dict_3, str_4, set_0, tuple_0, timed_out_exception_1)
        timed_out_exception_2 = module_0.TimedOutException(*list_2)
        bool_2 = False
        str_7 = '6'
        str_8 = 'fCWvo2mm='
        str_9 = 'basename'
        str_10 = ',</\x0b'
        dict_4 = {str_2: action_module_2, str_9: timed_out_exception_1, str_10: timed_out_exception_1}
        action_module_3 = module_0.ActionModule(list_2, str_7, str_8, dict_1, timed_out_exception_1, dict_4)
        var_0 = action_module_0.do_until_success_or_timeout(tuple_0, bool_2, tuple_0, action_module_3)
    except BaseException:
        pass

def test_case_4():
    try:
        timed_out_exception_0 = module_0.TimedOutException()
        tuple_0 = ()
        list_0 = [tuple_0, tuple_0]
        str_0 = 'i!#Av5CvKqG7x1'
        dict_0 = {str_0: tuple_0, str_0: tuple_0, str_0: str_0, str_0: list_0}
        bool_0 = False
        float_0 = -130.80946
        list_1 = [list_0, dict_0, tuple_0, bool_0]
        action_module_0 = module_0.ActionModule(tuple_0, list_0, dict_0, bool_0, float_0, list_1)
        var_0 = action_module_0.run(timed_out_exception_0)
    except BaseException:
        pass