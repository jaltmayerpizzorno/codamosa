# Automatically generated by Pynguin.
import ansible.vars.fact_cache as module_0

def test_case_0():
    try:
        fact_cache_0 = module_0.FactCache()
        var_0 = fact_cache_0.__iter__()
        str_0 = 'b_8o*v-CgQ}nwH\x0c'
        var_1 = fact_cache_0.__contains__(str_0)
        var_2 = fact_cache_0.keys()
        fact_cache_1 = module_0.FactCache()
        dict_0 = None
        var_3 = fact_cache_0.__getitem__(dict_0)
    except BaseException:
        pass

def test_case_1():
    try:
        fact_cache_0 = module_0.FactCache()
        var_0 = fact_cache_0.__len__()
        var_1 = fact_cache_0.keys()
        str_0 = 'xbZI0L|d3/*3'
        bool_0 = False
        list_0 = [var_0, fact_cache_0, bool_0]
        var_2 = fact_cache_0.__setitem__(str_0, list_0)
        var_3 = fact_cache_0.copy()
        str_1 = 'ansible_timeout'
        var_4 = fact_cache_0.first_order_merge(str_0, str_1)
    except BaseException:
        pass

def test_case_2():
    try:
        fact_cache_0 = module_0.FactCache()
        int_0 = 635
        var_0 = fact_cache_0.__delitem__(int_0)
    except BaseException:
        pass

def test_case_3():
    try:
        float_0 = 0.0
        list_0 = [float_0, float_0, float_0, float_0]
        fact_cache_0 = module_0.FactCache()
        var_0 = fact_cache_0.__contains__(list_0)
    except BaseException:
        pass

def test_case_4():
    try:
        fact_cache_0 = module_0.FactCache()
        var_0 = fact_cache_0.keys()
        var_1 = fact_cache_0.__len__()
        var_2 = fact_cache_0.copy()
        str_0 = 'xbZI0L|d3/*3'
        bool_0 = False
        list_0 = [var_1, fact_cache_0, bool_0]
        var_3 = fact_cache_0.__setitem__(str_0, list_0)
        var_4 = fact_cache_0.__iter__()
        var_5 = fact_cache_0.first_order_merge(str_0, str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        fact_cache_0 = module_0.FactCache()
        str_0 = '*\t'
        var_0 = fact_cache_0.first_order_merge(str_0, fact_cache_0)
        var_1 = fact_cache_0.first_order_merge(str_0, str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        fact_cache_0 = module_0.FactCache()
        var_0 = fact_cache_0.keys()
        var_1 = fact_cache_0.__len__()
        var_2 = fact_cache_0.copy()
        str_0 = 'xbZI0L|d3/*3'
        bool_0 = False
        list_0 = [var_1, fact_cache_0, bool_0]
        var_3 = fact_cache_0.__setitem__(str_0, list_0)
        var_4 = fact_cache_0.first_order_merge(str_0, str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        fact_cache_0 = module_0.FactCache()
        var_0 = fact_cache_0.keys()
        fact_cache_1 = module_0.FactCache()
    except BaseException:
        pass

def test_case_8():
    try:
        fact_cache_0 = module_0.FactCache()
        str_0 = '4<I'
        var_0 = fact_cache_0.flush()
        list_0 = [str_0, str_0]
        fact_cache_1 = module_0.FactCache(*list_0)
    except BaseException:
        pass

def test_case_9():
    try:
        fact_cache_0 = module_0.FactCache()
        str_0 = 'ip'
        var_0 = fact_cache_0.first_order_merge(str_0, str_0)
        var_1 = fact_cache_0.first_order_merge(str_0, str_0)
    except BaseException:
        pass