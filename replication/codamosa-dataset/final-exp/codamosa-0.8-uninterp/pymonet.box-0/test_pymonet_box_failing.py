# Automatically generated by Pynguin.
import pymonet.box as module_0

def test_case_0():
    try:
        int_0 = 7863
        str_0 = '5.,k}MP:S;+e_8@'
        dict_0 = {str_0: str_0}
        box_0 = module_0.Box(dict_0)
        var_0 = box_0.map(int_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'omb\nymssO=2j]}B'
        box_0 = module_0.Box(str_0)
        var_0 = box_0.to_maybe()
        callable_0 = None
        var_1 = box_0.bind(callable_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '_\n0d9-\x0bo%**xG'
        list_0 = [str_0]
        bytes_0 = b'\x9d\x94\xbe\x87 \xd6\xf6o5\x84s\x88\xaa'
        box_0 = module_0.Box(bytes_0)
        var_0 = box_0.ap(list_0)
    except BaseException:
        pass

def test_case_3():
    try:
        float_0 = -1443.0853
        tuple_0 = (float_0,)
        dict_0 = {float_0: float_0, tuple_0: float_0, float_0: float_0, float_0: float_0}
        box_0 = module_0.Box(dict_0)
        box_1 = module_0.Box(tuple_0)
        object_0 = None
        var_0 = box_1.to_try()
        dict_1 = {}
        var_1 = box_1.to_either()
        var_2 = None
        box_2 = module_0.Box(var_2)
        bool_0 = box_2.__eq__(object_0)
        var_3 = box_1.map(dict_1)
    except BaseException:
        pass