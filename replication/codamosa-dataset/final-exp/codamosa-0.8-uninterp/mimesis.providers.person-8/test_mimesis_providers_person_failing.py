# Automatically generated by Pynguin.
import mimesis.providers.person as module_0
import mimesis.enums as module_1

def test_case_0():
    try:
        person_0 = module_0.Person()
        int_0 = person_0.age()
        str_0 = person_0.height()
        str_1 = person_0.full_name()
        list_0 = [str_1, str_1, int_0]
        person_1 = module_0.Person(*list_0)
    except BaseException:
        pass

def test_case_1():
    try:
        person_0 = module_0.Person()
        str_0 = person_0.university()
        str_1 = person_0.identifier()
        str_2 = person_0.username()
        dict_0 = {str_0: str_0, str_2: person_0, str_2: person_0, person_0: str_0}
        int_0 = -3381
        int_1 = person_0.work_experience(int_0)
        str_3 = person_0.title(dict_0)
    except BaseException:
        pass

def test_case_2():
    try:
        person_0 = module_0.Person()
        int_0 = person_0.work_experience()
        bool_0 = False
        str_0 = person_0.full_name(bool_0)
    except BaseException:
        pass

def test_case_3():
    try:
        person_0 = module_0.Person()
        str_0 = person_0.views_on()
        str_1 = person_0.username(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        dict_0 = {}
        person_0 = module_0.Person(**dict_0)
        int_0 = 33
        str_0 = person_0.surname(int_0)
        str_1 = person_0.views_on()
        str_2 = person_0.height()
        str_3 = person_0.email()
        str_4 = person_0.nationality()
        list_0 = [str_4]
        list_1 = [list_0, person_0]
        person_1 = module_0.Person(*list_1)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'qF'
        dict_0 = {str_0: str_0}
        person_0 = module_0.Person()
        var_0 = person_0.sex()
        int_0 = person_0.weight()
        person_1 = module_0.Person(**dict_0)
    except BaseException:
        pass

def test_case_6():
    try:
        bool_0 = False
        person_0 = module_0.Person()
        int_0 = person_0.weight()
        str_0 = person_0.sexual_orientation(bool_0)
        person_1 = module_0.Person()
        gender_0 = module_1.Gender.FEMALE
        str_1 = person_0.name(gender_0)
        str_2 = person_1.views_on()
        str_3 = person_1.username(str_2)
    except BaseException:
        pass

def test_case_7():
    try:
        person_0 = module_0.Person()
        str_0 = person_0.occupation()
        bool_0 = False
        var_0 = person_0.gender(bool_0)
        str_1 = person_0.views_on()
        dict_0 = {person_0: person_0, person_0: person_0}
        bool_1 = True
        str_2 = person_0.sexual_orientation(bool_1)
        str_3 = 'XAG'
        str_4 = person_0.language()
        str_5 = person_0.occupation()
        str_6 = person_0.social_media_profile()
        str_7 = person_0.language()
        list_0 = [dict_0, dict_0, str_3]
        person_1 = module_0.Person(*list_0)
    except BaseException:
        pass

def test_case_8():
    try:
        person_0 = module_0.Person()
        str_0 = person_0.worldview()
        list_0 = [str_0]
        person_1 = module_0.Person(*list_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'sGz!J/vdsn:?_m'
        str_1 = '^2&d}\t'
        dict_0 = {str_0: str_0, str_1: str_0, str_1: str_1}
        list_0 = [dict_0]
        person_0 = module_0.Person()
        str_2 = person_0.university()
        person_1 = module_0.Person()
        str_3 = person_1.telephone(str_0)
        person_2 = module_0.Person(*list_0)
    except BaseException:
        pass

def test_case_10():
    try:
        person_0 = module_0.Person()
        str_0 = person_0.blood_type()
        str_1 = person_0.social_media_profile()
        str_2 = None
        str_3 = 'Vwr\t;5sX!Vzt'
        str_4 = person_0.telephone(str_2, str_3)
    except BaseException:
        pass

def test_case_11():
    try:
        person_0 = module_0.Person()
        int_0 = -1847
        str_0 = person_0.sexual_orientation()
        str_1 = person_0.title()
        int_1 = person_0.age(int_0)
        str_2 = person_0.identifier()
        var_0 = person_0.gender()
        str_3 = person_0.full_name()
        int_2 = person_0.work_experience(int_0)
        str_4 = person_0.occupation()
        str_5 = person_0.identifier()
        str_6 = person_0.political_views()
        str_7 = person_0.social_media_profile()
        title_type_0 = module_1.TitleType.ACADEMIC
        str_8 = person_0.telephone(str_3)
        list_0 = [title_type_0, title_type_0, title_type_0]
        person_1 = module_0.Person(*list_0)
    except BaseException:
        pass

def test_case_12():
    try:
        person_0 = module_0.Person()
        var_0 = person_0.gender()
        str_0 = person_0.surname()
        person_1 = module_0.Person()
        person_2 = module_0.Person()
        str_1 = person_2.full_name()
        var_1 = person_1.sex()
        bool_0 = True
        str_2 = person_0.full_name(bool_0)
    except BaseException:
        pass

def test_case_13():
    try:
        bool_0 = False
        person_0 = module_0.Person()
        int_0 = person_0.weight()
        str_0 = person_0.sexual_orientation(bool_0)
        str_1 = person_0.last_name()
        var_0 = person_0.first_name()
        var_1 = person_0.gender(bool_0)
        str_2 = person_0.language()
        bool_1 = False
        bool_2 = True
        var_2 = person_0.gender(bool_1, bool_2)
        list_0 = []
        var_3 = person_0.sex(*list_0)
        list_1 = [person_0, var_1, var_1]
        person_1 = module_0.Person(*list_1)
    except BaseException:
        pass