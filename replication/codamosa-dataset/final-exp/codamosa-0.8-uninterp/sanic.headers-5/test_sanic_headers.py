# Automatically generated by Pynguin.
import sanic.headers as module_0

def test_case_0():
    pass

def test_case_1():
    str_0 = 'form-data; name=upload; filename="file.txt"'
    tuple_0 = module_0.parse_content_header(str_0)
    tuple_1 = module_0.parse_content_header(str_0)
    tuple_2 = module_0.parse_content_header(str_0)
    tuple_3 = module_0.parse_content_header(str_0)

def test_case_2():
    str_0 = 'lJ,q\tAxmz69obz"'
    tuple_0 = module_0.parse_content_header(str_0)

def test_case_3():
    str_0 = '\n        Looks for prefixed environment variables and applies\n        them to the configuration if present. This is called automatically when\n        Sanic starts up to load environment variables into config.\n\n        It will automatically hyrdate the following types:\n\n        - ``int``\n        - ``float``\n        - ``bool``\n\n        Anything else will be imported as a ``str``.\n        '
    str_1 = module_0.fwd_normalize_address(str_0)

def test_case_4():
    str_0 = 'mO'
    tuple_0 = module_0.parse_host(str_0)

def test_case_5():
    str_0 = 'I\x0c~+;^/lV'
    tuple_0 = module_0.parse_host(str_0)

def test_case_6():
    str_0 = 'I\x0c~+;^/-V'
    str_1 = module_0.fwd_normalize_address(str_0)
    tuple_0 = module_0.parse_host(str_1)
    tuple_1 = module_0.parse_host(str_1)
    tuple_2 = module_0.parse_content_header(str_0)
    str_2 = module_0.fwd_normalize_address(str_0)
    tuple_3 = module_0.parse_content_header(str_2)
    tuple_4 = (tuple_1,)
    dict_0 = module_0.fwd_normalize(tuple_4)

def test_case_7():
    str_0 = 'for'
    str_1 = 'port'
    str_2 = 'hostname'
    str_3 = 'proto'
    str_4 = 'path'
    str_5 = '/path/to/file.jpg'
    str_6 = 'unknown'
    str_7 = (str_0, str_6)
    str_8 = 'invalid'
    str_9 = (str_1, str_8)
    str_10 = (str_6, str_2)
    str_11 = (str_3, str_3)
    str_12 = (str_4, str_5)
    str_13 = (str_7, str_9, str_10, str_11, str_12)
    dict_0 = module_0.fwd_normalize(str_13)

def test_case_8():
    str_0 = 'localhost:8080'
    tuple_0 = module_0.parse_host(str_0)
    str_1 = '127.0.0.1:3000'
    tuple_1 = module_0.parse_host(str_1)
    str_2 = '[::1]:3000'
    tuple_2 = module_0.parse_host(str_2)
    str_3 = 'example.com:3000'
    tuple_3 = module_0.parse_host(str_3)
    str_4 = 'localhost'
    tuple_4 = module_0.parse_host(str_4)
    str_5 = 'example.com'
    tuple_5 = module_0.parse_host(str_5)
    str_6 = '[::1]'
    tuple_6 = module_0.parse_host(str_6)
    str_7 = '[::1:5000'
    tuple_7 = module_0.parse_host(str_7)
    str_8 = '[::1]:[5000]'
    tuple_8 = module_0.parse_host(str_8)
    str_9 = '[::1]:p5000'
    tuple_9 = module_0.parse_host(str_9)