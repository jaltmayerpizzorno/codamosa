# Automatically generated by Pynguin.
import pymonet.validation as module_0

def test_case_0():
    pass

def test_case_1():
    int_0 = 2709
    list_0 = [int_0, int_0, int_0]
    validation_0 = module_0.Validation(int_0, list_0)
    var_0 = validation_0.is_success()

def test_case_2():
    list_0 = []
    float_0 = -2170.2
    complex_0 = None
    tuple_0 = (float_0, complex_0, list_0)
    validation_0 = module_0.Validation(list_0, tuple_0)
    var_0 = validation_0.to_maybe()
    tuple_1 = None
    str_0 = '\n        Transform Either to Maybe.\n\n        :returns: Maybe with previous value\n        :rtype: Maybe[A]\n        '
    validation_1 = module_0.Validation(tuple_1, str_0)
    var_1 = validation_1.is_success()
    int_0 = 2901
    var_2 = validation_1.is_fail()
    var_3 = validation_1.__eq__(int_0)
    tuple_2 = None
    str_1 = '%"t'
    validation_2 = module_0.Validation(str_0, str_1)
    var_4 = validation_2.is_fail()
    var_5 = validation_0.__eq__(validation_1)
    var_6 = validation_2.to_box()
    dict_0 = {tuple_2: float_0, var_2: str_0}
    validation_3 = module_0.Validation(dict_0, tuple_0)

def test_case_3():
    bytes_0 = b'\xcf\r&\xc1\x10\xad'
    bool_0 = True
    validation_0 = module_0.Validation(bool_0, bool_0)
    var_0 = validation_0.__eq__(bytes_0)

def test_case_4():
    float_0 = 2655.32
    list_0 = [float_0, float_0, float_0, float_0]
    validation_0 = module_0.Validation(float_0, list_0)
    var_0 = validation_0.is_fail()

def test_case_5():
    str_0 = '\t'
    float_0 = -493.0189
    validation_0 = module_0.Validation(str_0, float_0)
    var_0 = validation_0.to_box()
    list_0 = []
    tuple_0 = ()
    bool_0 = False
    int_0 = False
    dict_0 = {tuple_0: bool_0, int_0: bool_0}
    str_1 = 'YQ?FDBc\x0c#L'
    tuple_1 = (tuple_0, dict_0, str_1)
    validation_1 = module_0.Validation(list_0, tuple_1)
    var_1 = validation_1.to_either()
    var_2 = validation_1.to_either()

def test_case_6():
    str_0 = '~-J\rD-2\x0c%v'
    set_0 = {str_0}
    validation_0 = module_0.Validation(str_0, set_0)
    var_0 = validation_0.to_maybe()

def test_case_7():
    float_0 = -4394.3
    dict_0 = {}
    float_1 = 1176.932
    str_0 = 'zFTW"\':t\n\tom-[fwc '
    bytes_0 = b'\x0b\xea)<\xfd\x19\x01\xd6>\xa8\xaa!\xcf\x10)'
    validation_0 = module_0.Validation(bytes_0, dict_0)
    int_0 = None
    tuple_0 = (int_0,)
    tuple_1 = (str_0, validation_0, tuple_0)
    validation_1 = module_0.Validation(tuple_1, str_0)
    var_0 = validation_1.__eq__(float_1)
    validation_2 = module_0.Validation(float_0, dict_0)
    var_1 = validation_2.to_box()

def test_case_8():
    bytes_0 = b'\x0c\x93\xe6H\xa0x\x17\xf1\xd3r*\xc0\x16g\xef\x86\xc8\xa8\xb60'
    set_0 = {bytes_0, bytes_0, bytes_0}
    validation_0 = module_0.Validation(bytes_0, set_0)
    var_0 = validation_0.to_lazy()