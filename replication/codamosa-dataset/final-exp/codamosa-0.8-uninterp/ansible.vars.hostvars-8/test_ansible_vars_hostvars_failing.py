# Automatically generated by Pynguin.
import ansible.vars.hostvars as module_0

def test_case_0():
    try:
        bytes_0 = b'~\xf5]'
        float_0 = 0.001
        str_0 = '2F"5kBqRBa(6`'
        host_vars_0 = module_0.HostVars(bytes_0, float_0, str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        list_0 = []
        int_0 = -515
        list_1 = []
        int_1 = -704
        host_vars_vars_0 = module_0.HostVarsVars(list_1, int_1)
        float_0 = 1945.16
        host_vars_0 = module_0.HostVars(int_0, host_vars_vars_0, float_0)
        var_0 = host_vars_0.set_variable_manager(list_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'diff mode is currently %s'
        bool_0 = False
        str_1 = 'v8hw"t_\\tss'
        bool_1 = False
        host_vars_0 = None
        list_0 = [host_vars_0, bool_1]
        host_vars_vars_0 = module_0.HostVarsVars(bool_1, list_0)
        host_vars_1 = module_0.HostVars(str_1, host_vars_vars_0, host_vars_0)
        var_0 = host_vars_1.set_nonpersistent_facts(str_0, bool_0)
    except BaseException:
        pass

def test_case_3():
    try:
        int_0 = 10
        bytes_0 = b'\x84\x08'
        float_0 = 0.5
        host_vars_vars_0 = None
        tuple_0 = (float_0, host_vars_vars_0)
        dict_0 = {}
        host_vars_vars_1 = module_0.HostVarsVars(tuple_0, dict_0)
        str_0 = '7H :lwN3\\k8'
        host_vars_0 = module_0.HostVars(bytes_0, host_vars_vars_1, str_0)
        var_0 = host_vars_0.__deepcopy__(int_0)
    except BaseException:
        pass

def test_case_4():
    try:
        tuple_0 = ()
        str_0 = 'dY.$pJ|!RqU\rr'
        list_0 = [tuple_0]
        float_0 = -3147.4
        host_vars_vars_0 = module_0.HostVarsVars(list_0, float_0)
        var_0 = host_vars_vars_0.__getitem__(str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        int_0 = 1040
        str_0 = '8r,\t'
        int_1 = 389
        str_1 = 'PCC@<j5N\\B1]4=W'
        host_vars_vars_0 = module_0.HostVarsVars(int_1, str_1)
        host_vars_vars_1 = module_0.HostVarsVars(str_0, host_vars_vars_0)
        var_0 = host_vars_vars_1.__contains__(int_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'xljxz?;'
        set_0 = set()
        host_vars_vars_0 = module_0.HostVarsVars(str_0, set_0)
        var_0 = host_vars_vars_0.__len__()
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'S[c7~6lzt+/'
        set_0 = {str_0, str_0, str_0, str_0}
        host_vars_vars_0 = module_0.HostVarsVars(set_0, str_0)
        var_0 = host_vars_vars_0.__repr__()
    except BaseException:
        pass

def test_case_8():
    try:
        bytes_0 = b'g7oW\x93[wj\x1a\xfep\xd4\xc8$\x1a\x97\x12\xc0:'
        set_0 = set()
        list_0 = []
        int_0 = 32601
        str_0 = 'pF:\x0bdq\thI))VW|zfwq:'
        bool_0 = True
        str_1 = '*)OY6((\x0b;'
        host_vars_vars_0 = module_0.HostVarsVars(str_1, list_0)
        var_0 = host_vars_vars_0.__getitem__(bool_0)
        host_vars_vars_1 = module_0.HostVarsVars(int_0, str_0)
        str_2 = '[gBd'
        host_vars_0 = module_0.HostVars(set_0, str_2, bytes_0)
    except BaseException:
        pass

def test_case_9():
    try:
        int_0 = 5614
        int_1 = -3494
        host_vars_vars_0 = module_0.HostVarsVars(int_0, int_1)
        bool_0 = False
        dict_0 = {bool_0: bool_0}
        str_0 = ')h5s7$Srdl,}#vhN'
        tuple_0 = (bool_0, dict_0, str_0)
        float_0 = 60.0
        bytes_0 = b'\x14$\x18tn\xaf\x90E\x1d\x93\x9d\xc0\x03\x1f\xf7'
        int_2 = -545
        host_vars_vars_1 = module_0.HostVarsVars(bytes_0, int_2)
        list_0 = [str_0, tuple_0]
        host_vars_0 = module_0.HostVars(tuple_0, host_vars_vars_1, list_0)
        var_0 = host_vars_0.__getitem__(float_0)
    except BaseException:
        pass

def test_case_10():
    try:
        bool_0 = False
        bytes_0 = b'\xd6k\xc1o\xa0CM\x16 \xcc\xf0\xc5'
        host_vars_vars_0 = module_0.HostVarsVars(bool_0, bytes_0)
        bool_1 = False
        bool_2 = False
        host_vars_0 = module_0.HostVars(host_vars_vars_0, host_vars_vars_0, bool_2)
        var_0 = host_vars_0.__contains__(bool_1)
    except BaseException:
        pass

def test_case_11():
    try:
        bytes_0 = b'\x84\x08'
        float_0 = 0.5
        host_vars_vars_0 = None
        tuple_0 = (float_0, host_vars_vars_0)
        dict_0 = {}
        host_vars_vars_1 = module_0.HostVarsVars(tuple_0, dict_0)
        str_0 = '7H :lwN3\\k8'
        host_vars_0 = module_0.HostVars(bytes_0, host_vars_vars_1, str_0)
        var_0 = host_vars_0.__repr__()
    except BaseException:
        pass

def test_case_12():
    try:
        set_0 = set()
        float_0 = -1350.0658
        int_0 = -1462
        dict_0 = {int_0: int_0, int_0: float_0, int_0: set_0}
        int_1 = 50
        host_vars_vars_0 = module_0.HostVarsVars(int_1, set_0)
        str_0 = '~4]pu2O9aIRYigN3d!'
        host_vars_0 = module_0.HostVars(dict_0, host_vars_vars_0, str_0)
        var_0 = host_vars_0.__len__()
    except BaseException:
        pass

def test_case_13():
    try:
        bytes_0 = b'\x84\x08'
        float_0 = 0.5
        host_vars_vars_0 = None
        tuple_0 = (float_0, host_vars_vars_0)
        dict_0 = {}
        host_vars_vars_1 = module_0.HostVarsVars(tuple_0, dict_0)
        str_0 = '7H :lwN3\\k8'
        host_vars_0 = module_0.HostVars(bytes_0, host_vars_vars_1, str_0)
        var_0 = host_vars_0.set_inventory(host_vars_vars_1)
        var_1 = host_vars_0.__repr__()
    except BaseException:
        pass

def test_case_14():
    try:
        float_0 = 4047.4
        host_vars_0 = None
        host_vars_vars_0 = None
        host_vars_vars_1 = module_0.HostVarsVars(float_0, host_vars_vars_0)
        str_0 = '#XdmW*d'
        str_1 = 'human_readable() failed on bad input: %s'
        int_0 = None
        tuple_0 = (int_0,)
        tuple_1 = (str_0, str_1, tuple_0)
        host_vars_1 = module_0.HostVars(host_vars_0, host_vars_vars_1, tuple_1)
        str_2 = 'S\x0b jhKk>|tGHe'
        int_1 = None
        host_vars_vars_2 = module_0.HostVarsVars(str_2, int_1)
        dict_0 = {}
        bool_0 = None
        var_0 = host_vars_1.set_host_facts(bool_0, dict_0)
    except BaseException:
        pass

def test_case_15():
    try:
        int_0 = 10
        bytes_0 = b'\x84\x08'
        float_0 = 0.5
        host_vars_vars_0 = None
        tuple_0 = (float_0, host_vars_vars_0)
        dict_0 = {}
        host_vars_vars_1 = module_0.HostVarsVars(tuple_0, dict_0)
        str_0 = '7H :lwN3\\k8'
        host_vars_0 = module_0.HostVars(bytes_0, host_vars_vars_1, str_0)
        var_0 = host_vars_0.__deepcopy__(int_0)
        var_1 = host_vars_0.__setstate__(var_0)
    except BaseException:
        pass

def test_case_16():
    try:
        list_0 = []
        str_0 = '47\rI\x0c]i\x0bI;C9HK]?!'
        int_0 = 10
        bytes_0 = b'\x84\x08'
        float_0 = 0.5
        host_vars_vars_0 = None
        tuple_0 = (float_0, host_vars_vars_0)
        float_1 = 0.5
        host_vars_vars_1 = module_0.HostVarsVars(str_0, float_1)
        dict_0 = {}
        host_vars_vars_2 = module_0.HostVarsVars(tuple_0, dict_0)
        var_0 = host_vars_vars_2.__repr__()
        str_1 = '7H :lwN3\\k8'
        host_vars_0 = module_0.HostVars(bytes_0, host_vars_vars_2, str_1)
        bytes_1 = b'\xc2^\xec\xabX\xf7'
        var_1 = host_vars_0.set_host_variable(int_0, list_0, bytes_1)
    except BaseException:
        pass

def test_case_17():
    try:
        list_0 = []
        bytes_0 = b'\x84\x08'
        float_0 = 0.5
        host_vars_vars_0 = None
        tuple_0 = (float_0, host_vars_vars_0)
        host_vars_vars_1 = module_0.HostVarsVars(tuple_0, host_vars_vars_0)
        str_0 = '7H :lwN3\\k8'
        host_vars_0 = module_0.HostVars(bytes_0, host_vars_vars_1, str_0)
        var_0 = host_vars_0.__setstate__(list_0)
        str_1 = 'E\\=T8`-j@rSI@}n_'
        var_1 = host_vars_0.__deepcopy__(str_1)
        int_0 = 1597
        host_vars_1 = module_0.HostVars(list_0, list_0, int_0)
    except BaseException:
        pass