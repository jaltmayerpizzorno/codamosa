# Automatically generated by Pynguin.
import ansible.utils.unsafe_proxy as module_0
import ansible.utils.native_jinja as module_1

def test_case_0():
    ansible_unsafe_0 = module_0.AnsibleUnsafe()

def test_case_1():
    dict_0 = {}
    ansible_unsafe_bytes_0 = module_0.AnsibleUnsafeBytes(**dict_0)
    ansible_unsafe_text_0 = module_0.AnsibleUnsafeText(**dict_0)
    var_0 = ansible_unsafe_text_0.encode(**dict_0)
    var_1 = ansible_unsafe_bytes_0.decode()

def test_case_2():
    ansible_unsafe_text_0 = module_0.AnsibleUnsafeText()
    str_0 = 'WR6xk_tZ'
    var_0 = module_0.wrap_var(str_0)
    var_1 = ansible_unsafe_text_0.encode()

def test_case_3():
    str_0 = 'bar'
    str_1 = {str_0: str_0}
    var_0 = module_0.wrap_var(str_1)

def test_case_4():
    ansible_unsafe_text_0 = module_0.AnsibleUnsafeText()
    var_0 = module_0.wrap_var(ansible_unsafe_text_0)
    ansible_unsafe_bytes_0 = module_0.AnsibleUnsafeBytes()
    ansible_unsafe_text_1 = module_0.AnsibleUnsafeText()

def test_case_5():
    ansible_unsafe_text_0 = module_0.AnsibleUnsafeText()
    str_0 = 'WRY6xk_t'
    var_0 = module_0.wrap_var(str_0)

def test_case_6():
    var_0 = None
    var_1 = module_0.wrap_var(var_0)
    int_0 = 42
    var_2 = module_0.wrap_var(int_0)
    float_0 = 3.14
    var_3 = module_0.wrap_var(float_0)
    set_0 = set()
    var_4 = module_0.wrap_var(set_0)

def test_case_7():
    ansible_unsafe_text_0 = module_0.AnsibleUnsafeText()
    dict_0 = {}
    ansible_unsafe_0 = module_0.AnsibleUnsafe(**dict_0)
    ansible_unsafe_bytes_0 = module_0.AnsibleUnsafeBytes()
    ansible_unsafe_bytes_1 = module_0.AnsibleUnsafeBytes()
    str_0 = 'WR6xk_tZ'
    var_0 = module_0.wrap_var(str_0)
    list_0 = [ansible_unsafe_bytes_0, dict_0, ansible_unsafe_bytes_1]
    unsafe_proxy_0 = module_0.UnsafeProxy(*list_0)

def test_case_8():
    str_0 = 'foo'
    var_0 = module_0.wrap_var(str_0)
    bytes_0 = b'foo'
    var_1 = module_0.wrap_var(bytes_0)
    str_1 = 'bar'
    str_2 = {str_0: str_1}
    var_2 = module_0.wrap_var(str_2)
    var_3 = [bytes_0, str_1]
    var_4 = module_0.wrap_var(var_3)

def test_case_9():
    str_0 = 'foo'
    var_0 = module_0.wrap_var(str_0)
    bytes_0 = b'foo'
    var_1 = module_0.wrap_var(bytes_0)
    str_1 = 'bar'
    str_2 = {str_0: str_1}
    var_2 = module_0.wrap_var(str_2)
    native_jinja_text_0 = module_1.NativeJinjaText()
    var_3 = module_0.wrap_var(native_jinja_text_0)
    var_4 = [bytes_0, str_1]
    var_5 = module_0.wrap_var(var_4)