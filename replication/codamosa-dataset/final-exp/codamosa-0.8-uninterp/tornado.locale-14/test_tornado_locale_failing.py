# Automatically generated by Pynguin.
import tornado.locale as module_0
import gettext as module_1

def test_case_0():
    try:
        str_0 = 'htts://raw.githubusercontent.com/tornadoweb/torado/master/tornado/_locale_data/es_LA.csv'
        module_0.load_translations(str_0, str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = ''
        module_0.load_gettext_translations(str_0, str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        locale_0 = module_0.get()
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = ''
        locale_0 = module_0.Locale(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        locale_0 = module_0.get()
        int_0 = 1081
        bool_0 = False
        str_0 = locale_0.format_date(int_0, int_0, bool_0)
        str_1 = locale_0.list(locale_0)
    except BaseException:
        pass

def test_case_5():
    try:
        bytes_0 = b'\xc5\xd1C\x8e\xce\x16\xce\xfc\x035\x14:\xf9H\xda'
        locale_0 = module_0.get()
        str_0 = locale_0.list(bytes_0)
    except BaseException:
        pass

def test_case_6():
    try:
        iterable_0 = module_0.get_supported_locales()
        locale_0 = module_0.get()
        str_0 = locale_0.list(iterable_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = "f9.'r&D:"
        dict_0 = {str_0: str_0, str_0: str_0}
        list_0 = [str_0, str_0, str_0, str_0]
        locale_0 = module_0.get(*list_0)
        str_1 = locale_0.translate(str_0, dict_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = "rb<I'n%"
        str_1 = 'o`N^,jCBD*hi'
        int_0 = 2524
        str_2 = 'uLiJzU^'
        dict_0 = {}
        str_3 = 'J\x0c'
        str_4 = '&=!SN<^}}"W})u0BVP'
        dict_1 = {str_2: str_2, str_2: str_3, str_4: str_3}
        str_5 = 'iy'
        dict_2 = {str_2: dict_0, str_2: dict_1, str_5: dict_1, str_3: dict_1}
        c_s_v_locale_0 = module_0.CSVLocale(str_2, dict_2)
        str_6 = c_s_v_locale_0.pgettext(str_0, str_1, int_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = '(DqV?>Pl'
        str_1 = '\\G;)m0F'
        null_translations_0 = module_1.NullTranslations()
        gettext_locale_0 = module_0.GettextLocale(str_0, null_translations_0)
        str_2 = gettext_locale_0.translate(str_1, str_1)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = "\t!*+~g;~J3!xRqH\\p'nN"
        dict_0 = {str_0: str_0}
        str_1 = '9\rJE'
        null_translations_0 = module_1.NullTranslations()
        gettext_locale_0 = module_0.GettextLocale(str_1, null_translations_0)
        str_2 = gettext_locale_0.translate(str_0, str_0, dict_0)
        str_3 = 'Unrecognized option %r'
        locale_0 = module_0.Locale(str_3)
    except BaseException:
        pass

def test_case_11():
    try:
        locale_0 = module_0.get()
        int_0 = 1081
        bool_0 = True
        str_0 = locale_0.format_date(int_0, int_0, bool_0)
        str_1 = locale_0.friendly_number(int_0)
        str_2 = locale_0.list(locale_0)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = 'a.IL4'
        str_1 = 'Return'
        str_2 = '19{^MDyTAvm-uTzIl-3z'
        locale_0 = module_0.get()
        str_3 = locale_0.translate(str_0)
        str_4 = 'jz8ZTqws\x0cdQyCBxn37V'
        str_5 = '&e@^Jz2!wA-z>$7'
        dict_0 = None
        str_6 = 'May be overridden by subclasses to select SSL options.\n\n        By default includes a self-signed testing certificate.\n        '
        dict_1 = {str_5: dict_0, str_6: dict_0}
        str_7 = '/yD"u|<^^QC'
        null_translations_0 = module_1.NullTranslations()
        gettext_locale_0 = module_0.GettextLocale(str_7, null_translations_0)
        c_s_v_locale_0 = module_0.CSVLocale(str_4, dict_1)
        str_8 = c_s_v_locale_0.pgettext(str_2, str_2)
        str_9 = 'screen_name'
        dict_2 = None
        dict_3 = {str_9: str_0, str_9: str_9, str_1: dict_2, str_0: str_9}
        str_10 = 'Exception in Future %r after timeout'
        dict_4 = {}
        c_s_v_locale_1 = module_0.CSVLocale(str_10, dict_4)
        str_11 = c_s_v_locale_1.pgettext(str_0, str_1, dict_3)
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = 'iCvy6|&:a"Gn?b+McSr3'
        str_1 = "]F'wY _:Oj0Vk:Nu\t"
        str_2 = "CVL';L>r:D$4"
        list_0 = [str_2, str_2, str_2, str_2]
        null_translations_0 = module_1.NullTranslations(list_0)
        gettext_locale_0 = module_0.GettextLocale(str_2, null_translations_0)
        str_3 = gettext_locale_0.pgettext(str_0, str_1, str_0)
    except BaseException:
        pass

def test_case_14():
    try:
        str_0 = None
        module_0.load_gettext_translations(str_0, str_0)
    except BaseException:
        pass

def test_case_15():
    try:
        str_0 = 'OC8bX%`##q8'
        str_1 = "Y@.$# T'#WAd"
        iterable_0 = module_0.get_supported_locales()
        bool_0 = False
        str_2 = 'TV8BzwKY!7eU'
        module_0.set_default_locale(str_0)
        str_3 = ''
        str_4 = '?;xaxow,%j^^zcf}h\t'
        str_5 = '"3z\x0c!TY`]N"YG:A]UXgQ'
        str_6 = 'Called by libcurl when it wants to change the file descriptors\n        it cares about.\n        '
        dict_0 = {str_6: str_1}
        null_translations_0 = module_1.NullTranslations(dict_0)
        gettext_locale_0 = module_0.GettextLocale(str_5, null_translations_0)
        str_7 = gettext_locale_0.pgettext(str_3, str_4)
        list_0 = [str_2]
        locale_0 = module_0.get(*list_0)
        float_0 = None
        str_8 = locale_0.format_date(float_0, bool_0, bool_0)
    except BaseException:
        pass

def test_case_16():
    try:
        datetime_0 = None
        bool_0 = False
        locale_0 = module_0.get()
        bool_1 = locale_0.format_day(datetime_0, bool_0)
    except BaseException:
        pass

def test_case_17():
    try:
        str_0 = 'xsrf_cookie_version'
        str_1 = "Y@.$# TN'#WAd"
        iterable_0 = module_0.get_supported_locales()
        float_0 = -478.771165
        bool_0 = False
        str_2 = 'TV8BzwKY!7eU'
        list_0 = [str_2]
        locale_0 = module_0.get(*list_0)
        str_3 = locale_0.format_date(float_0, bool_0)
        dict_0 = {str_0: str_1}
        dict_1 = {str_0: dict_0, str_1: dict_0, str_0: dict_0}
        c_s_v_locale_0 = module_0.CSVLocale(str_0, dict_1)
        int_0 = -1476
        str_4 = locale_0.friendly_number(int_0)
        str_5 = 'fa_IR'
        c_s_v_locale_1 = module_0.CSVLocale(str_5, dict_1)
        int_1 = -2744
        str_6 = locale_0.friendly_number(int_1)
        int_2 = -374
        str_7 = locale_0.friendly_number(int_2)
        str_8 = locale_0.list(float_0)
    except BaseException:
        pass

def test_case_18():
    try:
        locale_0 = module_0.get()
        int_0 = 4820
        bool_0 = True
        str_0 = locale_0.format_date(int_0, int_0, bool_0)
        iterable_0 = module_0.get_supported_locales()
        str_1 = ',c[6\rH!OV\t&^'
        list_0 = [str_0, str_1]
        locale_1 = module_0.get(*list_0)
        int_1 = -1618
        str_2 = locale_0.format_date(int_0, int_1, bool_0, bool_0)
        str_3 = locale_0.list(str_2)
        str_4 = ''
        str_5 = locale_0.pgettext(str_2, str_4, int_0)
    except BaseException:
        pass