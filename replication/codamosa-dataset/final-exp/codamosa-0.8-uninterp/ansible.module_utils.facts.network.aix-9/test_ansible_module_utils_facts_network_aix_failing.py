# Automatically generated by Pynguin.
import ansible.module_utils.facts.network.aix as module_0

def test_case_0():
    try:
        int_0 = 16
        a_i_x_network_0 = module_0.AIXNetwork(int_0)
        str_0 = 'wP'
        str_1 = 'C@-/5!Dr\x0bnP,&uc~16'
        a_i_x_network_1 = module_0.AIXNetwork(str_1)
        var_0 = a_i_x_network_1.get_default_interfaces(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        a_i_x_network_collector_0 = module_0.AIXNetworkCollector()
        complex_0 = None
        bytes_0 = b'\xd5\x85\x9fP*V\x1d51'
        int_0 = 1447
        a_i_x_network_0 = module_0.AIXNetwork(int_0)
        a_i_x_network_1 = module_0.AIXNetwork(bytes_0)
        var_0 = a_i_x_network_1.get_interfaces_info(a_i_x_network_collector_0, complex_0)
    except BaseException:
        pass

def test_case_2():
    try:
        float_0 = -1697.895
        bytes_0 = b"'M\xd9\xc5>\xa6?\xaf\x85\xdd6$"
        list_0 = [bytes_0, bytes_0]
        a_i_x_network_0 = module_0.AIXNetwork(list_0)
        var_0 = a_i_x_network_0.parse_interface_line(float_0)
    except BaseException:
        pass

def test_case_3():
    try:
        float_0 = 3243.28516
        a_i_x_network_0 = None
        set_0 = {float_0, float_0, float_0, a_i_x_network_0}
        tuple_0 = ()
        list_0 = [tuple_0]
        bytes_0 = b'\xa0\xe5\xc2\xfd'
        tuple_1 = (set_0, tuple_0, list_0, bytes_0)
        tuple_2 = (set_0, tuple_1)
        a_i_x_network_1 = module_0.AIXNetwork(tuple_2)
        dict_0 = {}
        a_i_x_network_2 = module_0.AIXNetwork(dict_0)
        str_0 = 'o%ds}N'
        str_1 = 'RP9`'
        var_0 = a_i_x_network_2.parse_interface_line(str_1)
        var_1 = a_i_x_network_2.parse_interface_line(str_0)
        bytes_1 = b'\xc85\xef\x15\xa4\xae( #\x1e\xda(\xfa\xeb/\xda\xba\xaa\xed'
        a_i_x_network_3 = module_0.AIXNetwork(bytes_1)
        int_0 = -1353
        var_2 = a_i_x_network_2.get_default_interfaces(int_0)
    except BaseException:
        pass