# Automatically generated by Pynguin.
import pytutils.log as module_0

def test_case_0():
    try:
        var_0 = module_0.get_logger()
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = -979
        var_0 = module_0.configure(int_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'A lazy object that will replace itself in the appropriate scope.\n\n    This object sits, ready to create the real object the first time it is\n    needed.\n    '
        var_0 = module_0.get_config(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        var_0 = module_0.get_config()
    except BaseException:
        pass

def test_case_4():
    try:
        var_0 = module_0.get_logger()
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'test_logger_level'
        var_0 = module_0.get_logger(str_0)
        str_1 = 'A lazy object that will replace itself in the appropriate scope.\n\n    This object sits, ready to create the real object the first time it is\n    needed.\n    '
        var_1 = module_0.get_config(str_1)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'f&zi?r\\WlC8-$%R6'
        str_1 = '$o``%Yt%t\\V9_'
        dict_0 = {str_0: str_0, str_0: str_0, str_1: str_1}
        bytes_0 = b'1\x02\xa4\x16'
        list_0 = None
        tuple_0 = (dict_0, bytes_0, list_0, bytes_0)
        var_0 = module_0.configure(tuple_0)
    except BaseException:
        pass