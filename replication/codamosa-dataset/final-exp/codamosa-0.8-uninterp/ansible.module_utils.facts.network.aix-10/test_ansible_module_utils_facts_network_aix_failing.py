# Automatically generated by Pynguin.
import ansible.module_utils.facts.network.aix as module_0

def test_case_0():
    try:
        str_0 = 'd~|'
        bool_0 = False
        a_i_x_network_0 = module_0.AIXNetwork(bool_0)
        var_0 = a_i_x_network_0.get_default_interfaces(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        set_0 = set()
        bytes_0 = b'\x82\xfa\x812X\x91\xd86'
        str_0 = 's\x0b6#Y6'
        set_1 = {bytes_0, bytes_0, str_0}
        a_i_x_network_0 = module_0.AIXNetwork(set_1)
        var_0 = a_i_x_network_0.get_interfaces_info(set_0)
    except BaseException:
        pass

def test_case_2():
    try:
        a_i_x_network_collector_0 = module_0.AIXNetworkCollector()
        list_0 = []
        tuple_0 = (a_i_x_network_collector_0, a_i_x_network_collector_0, list_0)
        str_0 = 'GW^E94[dg;S%Q:m'
        float_0 = 4147.861
        a_i_x_network_0 = module_0.AIXNetwork(str_0, float_0)
        var_0 = a_i_x_network_0.parse_interface_line(tuple_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'hw.serialno'
        float_0 = 3472.8
        str_1 = 'g1g(k'
        bool_0 = True
        a_i_x_network_0 = module_0.AIXNetwork(bool_0)
        bytes_0 = b'\xe1#\x03\xc3\xfcZ\xd1}\xc6'
        tuple_0 = (a_i_x_network_0, bytes_0)
        tuple_1 = (str_1, tuple_0, str_1, float_0)
        a_i_x_network_1 = module_0.AIXNetwork(tuple_1)
        list_0 = [float_0]
        tuple_2 = (list_0,)
        dict_0 = {str_0: str_0, str_0: float_0}
        a_i_x_network_2 = module_0.AIXNetwork(dict_0)
        var_0 = a_i_x_network_2.parse_interface_line(tuple_2)
    except BaseException:
        pass

def test_case_4():
    try:
        float_0 = 4081.4
        float_1 = 0.1
        a_i_x_network_collector_0 = module_0.AIXNetworkCollector()
        set_0 = {float_0, float_0, float_0, float_0}
        str_0 = 'zGAj1]I%3:'
        int_0 = -411
        a_i_x_network_0 = module_0.AIXNetwork(int_0)
        var_0 = a_i_x_network_0.parse_interface_line(str_0)
        bytes_0 = b'\xde{[C'
        a_i_x_network_1 = module_0.AIXNetwork(set_0, bytes_0)
        var_1 = a_i_x_network_1.get_default_interfaces(float_1)
    except BaseException:
        pass