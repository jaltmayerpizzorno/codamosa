# Automatically generated by Pynguin.
import flutes.structure as module_0

def test_case_0():
    try:
        bool_0 = True
        var_0 = module_0.no_map_instance(bool_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = b''
        dict_0 = {}
        var_0 = module_0.no_map_instance(dict_0)
        list_0 = [bytes_0]
        var_1 = module_0.no_map_instance(list_0)
        complex_0 = None
        str_0 = '-G.jlD&2YBYkxB 8.'
        module_0.register_no_map_class(str_0)
        bool_0 = False
        var_2 = module_0.map_structure(complex_0, bool_0)
    except BaseException:
        pass

def test_case_2():
    try:
        set_0 = None
        list_0 = [set_0, set_0]
        bytes_0 = b'1\xc4\x12\xa6s\xf0\xe8\x7f\x134\xa8'
        dict_0 = {}
        var_0 = module_0.map_structure(bytes_0, dict_0)
        int_0 = -3670
        var_1 = module_0.map_structure_zip(list_0, int_0)
    except BaseException:
        pass

def test_case_3():
    try:
        set_0 = None
        var_0 = module_0.map_structure(set_0, set_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'n=wEM'
        var_0 = module_0.map_structure_zip(str_0, str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = None
        str_1 = 'y\x0c`8.-,D<7yxk'
        bool_0 = True
        list_0 = [str_0, str_0, str_0, bool_0]
        bytes_0 = b'\xb2\xfe\x84=\xe1\x05\x9a\xf9\x18r'
        var_0 = module_0.no_map_instance(bytes_0)
        var_1 = module_0.map_structure(str_1, list_0)
    except BaseException:
        pass

def test_case_6():
    try:
        dict_0 = {}
        var_0 = module_0.no_map_instance(dict_0)
        int_0 = -1515
        tuple_0 = None
        bytes_0 = b'\x82\x18K\xece\x82R\x11\xa2\x0b\x98\xf7|'
        tuple_1 = (int_0, tuple_0, bytes_0, int_0)
        var_1 = module_0.map_structure(dict_0, tuple_1)
    except BaseException:
        pass

def test_case_7():
    try:
        var_0 = None
        int_0 = 32776
        dict_0 = {var_0: int_0, var_0: int_0}
        list_0 = []
        list_1 = module_0.reverse_map(dict_0)
        str_0 = 'F[8y>>exzmA5+-2z'
        var_1 = module_0.no_map_instance(str_0)
        var_2 = module_0.map_structure(str_0, list_0)
        list_2 = module_0.reverse_map(dict_0)
        list_3 = [dict_0, str_0, str_0, var_1]
        float_0 = 1.0
        module_0.register_no_map_class(float_0)
        tuple_0 = (list_3, list_3)
        float_1 = 1753.5708
        var_3 = module_0.map_structure(float_1, tuple_0)
    except BaseException:
        pass

def test_case_8():
    try:
        var_0 = None
        int_0 = 32768
        int_1 = 125
        dict_0 = {var_0: int_0, var_0: int_1}
        str_0 = 'F[8y>>exzmA5+-2z'
        var_1 = module_0.no_map_instance(str_0)
        list_0 = module_0.reverse_map(dict_0)
        list_1 = [str_0, dict_0, str_0, str_0]
        tuple_0 = (list_1, list_1)
        var_2 = module_0.map_structure_zip(list_0, tuple_0)
    except BaseException:
        pass

def test_case_9():
    try:
        tuple_0 = ()
        set_0 = {tuple_0, tuple_0}
        var_0 = module_0.map_structure(tuple_0, set_0)
        bytes_0 = b'\x19\x98\x17\xdfU\t{Y\xa5\xf4`'
        str_0 = '+*Y0G:|K\tpp\te\nQ'
        dict_0 = {}
        tuple_1 = (str_0, dict_0)
        str_1 = "Qf4_fz0Ts\r)'"
        list_0 = [tuple_1, str_1]
        var_1 = module_0.map_structure_zip(bytes_0, list_0)
    except BaseException:
        pass

def test_case_10():
    try:
        tuple_0 = ()
        var_0 = module_0.no_map_instance(tuple_0)
        int_0 = 2
        list_0 = [int_0]
        set_0 = {var_0}
        var_1 = module_0.map_structure(list_0, set_0)
    except BaseException:
        pass

def test_case_11():
    try:
        bool_0 = True
        tuple_0 = ()
        list_0 = []
        int_0 = -929
        tuple_1 = (tuple_0, list_0, int_0)
        var_0 = module_0.map_structure_zip(bool_0, tuple_1)
    except BaseException:
        pass

def test_case_12():
    try:
        bool_0 = False
        float_0 = -1149.2
        var_0 = module_0.no_map_instance(float_0)
        dict_0 = {bool_0: bool_0}
        float_1 = 0.1
        tuple_0 = (float_1, dict_0, float_1)
        tuple_1 = (dict_0, tuple_0)
        list_0 = [dict_0]
        var_1 = module_0.map_structure_zip(tuple_1, list_0)
    except BaseException:
        pass

def test_case_13():
    try:
        int_0 = 3698
        dict_0 = {int_0: int_0}
        list_0 = module_0.reverse_map(dict_0)
        list_1 = []
        set_0 = set()
        set_1 = set()
        int_1 = None
        list_2 = [set_0, set_1, int_1]
        var_0 = module_0.map_structure_zip(list_1, list_2)
    except BaseException:
        pass

def test_case_14():
    try:
        str_0 = 'M4IL\tv-'
        bytes_0 = b'NY\x9f\xc4_\xfc\x1fjT\x1cZc\xe3\xb4'
        int_0 = 1983
        var_0 = None
        int_1 = 32768
        dict_0 = {bytes_0: int_0, var_0: int_0, var_0: int_1}
        list_0 = module_0.reverse_map(dict_0)
        var_1 = module_0.no_map_instance(str_0)
        str_1 = 'ZA23@8|cN90wi< FoR.'
        dict_1 = {int_1: var_0, int_0: str_1}
        list_1 = [var_1]
        var_2 = module_0.map_structure_zip(dict_1, list_1)
    except BaseException:
        pass

def test_case_15():
    try:
        tuple_0 = ()
        set_0 = {tuple_0, tuple_0}
        var_0 = module_0.map_structure(tuple_0, set_0)
        bytes_0 = None
        list_0 = [tuple_0]
        var_1 = module_0.map_structure_zip(bytes_0, list_0)
        list_1 = []
        str_0 = '\r|,X:(gR\\71C?'
        var_2 = module_0.no_map_instance(str_0)
        var_3 = module_0.map_structure(str_0, list_1)
        float_0 = 1.0
        var_4 = module_0.no_map_instance(float_0)
        bool_0 = True
        var_5 = module_0.no_map_instance(bool_0)
    except BaseException:
        pass

def test_case_16():
    try:
        bool_0 = None
        dict_0 = {}
        var_0 = None
        list_0 = [dict_0, var_0]
        var_1 = module_0.map_structure_zip(bool_0, list_0)
        str_0 = '5QL\x0c \rp6G\to0_]RoO'
        float_0 = 1365.1
        int_0 = 1177
        dict_1 = {var_0: int_0, var_0: int_0, var_0: int_0, var_0: int_0}
        list_1 = module_0.reverse_map(dict_1)
        module_0.register_no_map_class(float_0)
        set_0 = {str_0}
        module_0.register_no_map_class(set_0)
    except BaseException:
        pass