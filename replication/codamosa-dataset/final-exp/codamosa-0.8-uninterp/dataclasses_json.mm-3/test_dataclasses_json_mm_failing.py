# Automatically generated by Pynguin.
import dataclasses_json.mm as module_0

def test_case_0():
    try:
        schema_f_0 = module_0.SchemaF()
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = None
        str_0 = 'cls'
        str_1 = 'C'
        dict_0 = {str_0: bytes_0, str_1: bytes_0, str_1: str_1}
        list_0 = [dict_0]
        bool_0 = False
        bytes_1 = None
        str_2 = 'VA\tsEr:0~-Yg9X3Uh'
        dict_1 = {str_2: list_0, str_0: dict_0}
        iso_field_0 = module_0._IsoField(load_default=list_0, missing=str_1, attribute=str_0, dump_only=bool_0, metadata=bytes_1, **dict_1)
        tuple_0 = (bytes_0, list_0, iso_field_0)
        dict_2 = {}
        var_0 = module_0.schema(tuple_0, dict_2, iso_field_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bool_0 = False
        tuple_0 = None
        str_0 = '\n    DataClassJsonMixin is an ABC that functions as a Mixin.\n\n    As with other ABCs, it should not be instantiated directly.\n    '
        list_0 = [tuple_0]
        type_0 = module_0.build_schema(bool_0, tuple_0, str_0, list_0)
    except BaseException:
        pass

def test_case_3():
    try:
        float_0 = 776.2378543845032
        str_0 = 'da_k\ne'
        bool_0 = False
        var_0 = module_0.build_type(float_0, float_0, str_0, str_0, bool_0)
    except BaseException:
        pass

def test_case_4():
    try:
        iso_field_0 = module_0._IsoField()
        str_0 = '2019-07-17T20:52:14.684089'
        schema_f_0 = None
        bool_0 = False
        timestamp_field_0 = module_0._TimestampField(dump_default=iso_field_0, default=str_0, attribute=str_0, validate=schema_f_0, required=bool_0)
        var_0 = timestamp_field_0.serialize(str_0, str_0)
    except BaseException:
        pass