# Automatically generated by Pynguin.
import pysnooper.utils as module_0

def test_case_0():
    try:
        dict_0 = None
        var_0 = module_0.normalize_repr(dict_0)
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = None
        dict_0 = None
        str_0 = '> \\r\x0cXD|Z'
        dict_1 = {str_0: int_0}
        var_0 = module_0.truncate(dict_0, dict_1)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'hi'
        bytes_0 = b'\xc2\xb1\xb1@|\x80\xa1\xe0'
        set_0 = {str_0, bytes_0}
        var_0 = module_0.get_repr_function(bytes_0, set_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bool_0 = False
        var_0 = module_0.ensure_tuple(bool_0)
        bytes_0 = b't\xa3\x83\x89\xc7\x9d\x92;\xcfp\x97\xe4A\xb2\xf4\x13\xca'
        var_1 = module_0.get_shortish_repr(bytes_0)
        writable_stream_0 = module_0.WritableStream()
    except BaseException:
        pass

def test_case_4():
    try:
        bool_0 = True
        float_0 = 2483.0
        dict_0 = {}
        str_0 = ''
        int_0 = None
        var_0 = module_0.truncate(str_0, int_0)
        var_1 = module_0.get_repr_function(float_0, dict_0)
        var_2 = module_0.shitcode(bool_0)
    except BaseException:
        pass

def test_case_5():
    try:
        list_0 = None
        tuple_0 = ()
        int_0 = 94
        set_0 = {int_0, tuple_0}
        var_0 = module_0.get_shortish_repr(list_0, tuple_0, int_0, set_0)
        var_1 = module_0.ensure_tuple(list_0)
        str_0 = 'ivTE\tM*'
        var_2 = module_0.get_repr_function(tuple_0, str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'hell\x00o'
        var_0 = module_0.shitcode(str_0)
        float_0 = 3530.0
        var_1 = module_0.shitcode(float_0)
    except BaseException:
        pass