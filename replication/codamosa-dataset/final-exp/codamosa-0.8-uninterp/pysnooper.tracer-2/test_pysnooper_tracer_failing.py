# Automatically generated by Pynguin.
import pysnooper.tracer as module_0

def test_case_0():
    try:
        bool_0 = None
        str_0 = 'original_trace_functions'
        tracer_0 = module_0.Tracer(str_0)
        var_0 = tracer_0.__enter__()
        bool_1 = True
        str_1 = '\x0cYlyb?\x0cet?z,'
        str_2 = '~rY%v'
        dict_0 = {str_1: bool_0, str_2: bool_1, str_1: str_2}
        unavailable_source_0 = module_0.UnavailableSource(**dict_0)
    except BaseException:
        pass

def test_case_1():
    try:
        unavailable_source_0 = module_0.UnavailableSource()
        int_0 = 1669
        bool_0 = False
        tuple_0 = (bool_0,)
        var_0 = module_0.get_write_function(tuple_0, int_0)
    except BaseException:
        pass

def test_case_2():
    try:
        int_0 = 2370
        float_0 = 387.39
        str_0 = '/JZG~dQYqLxC"LBO~'
        str_1 = None
        dict_0 = {str_0: str_0, str_0: int_0, str_1: int_0}
        tracer_0 = module_0.Tracer(int_0, float_0, dict_0, float_0)
    except BaseException:
        pass

def test_case_3():
    try:
        int_0 = None
        float_0 = 741.6
        tracer_0 = module_0.Tracer(int_0, float_0)
    except BaseException:
        pass

def test_case_4():
    try:
        bool_0 = False
        float_0 = -2312.7
        str_0 = '__loader__'
        file_writer_0 = module_0.FileWriter(str_0, str_0)
        file_writer_1 = module_0.FileWriter(float_0, file_writer_0)
        var_0 = file_writer_1.write(bool_0)
    except BaseException:
        pass

def test_case_5():
    try:
        tracer_0 = module_0.Tracer()
        var_0 = tracer_0.__enter__()
        float_0 = -1802.485429
        tuple_0 = None
        bool_0 = False
        var_1 = tracer_0.__exit__(float_0, tuple_0, bool_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'original_trace_functions'
        tracer_0 = module_0.Tracer(str_0)
        var_0 = tracer_0.__call__(str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = '__name__'
        list_0 = [str_0, str_0, str_0]
        tracer_0 = module_0.Tracer(str_0, str_0, list_0, str_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = 'original_trace_functions'
        tracer_0 = module_0.Tracer(str_0)
        bytes_0 = b'#+\xe0r\x88\xff'
        tuple_0 = (bytes_0,)
        str_1 = '/input/pysnooper/tracer.py'
        file_writer_0 = module_0.FileWriter(tuple_0, str_1)
        tracer_1 = module_0.Tracer(file_writer_0, tuple_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'original_trace_functions'
        list_0 = None
        float_0 = None
        dict_0 = {str_0: float_0}
        dict_1 = {}
        tracer_0 = module_0.Tracer(list_0, dict_0, dict_1)
        var_0 = tracer_0.__enter__()
        var_1 = tracer_0.__call__(dict_1)
    except BaseException:
        pass