# Automatically generated by Pynguin.
import tornado.httpclient as module_0
import datetime as module_1
import tornado.httputil as module_2
import builtins as module_3
import concurrent.futures._base as module_4
import tornado.ioloop as module_5

def test_case_0():
    try:
        module_0.main()
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '__main__'
        h_t_t_p_client_0 = module_0.HTTPClient()
        h_t_t_p_response_0 = h_t_t_p_client_0.fetch(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        h_t_t_p_client_0 = module_0.HTTPClient()
        h_t_t_p_client_0.close()
        str_0 = 'J3is3s'
        h_t_t_p_client_0.close()
        h_t_t_p_response_0 = h_t_t_p_client_0.fetch(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = ''
        str_1 = '7LIEinSXwYt7%'
        float_0 = -2263.992074
        bool_0 = False
        int_0 = -1917
        h_t_t_p_request_0 = module_0.HTTPRequest(str_0, str_0, float_0, bool_0, int_0, str_0, bool_0, bool_0, bool_0, str_1, str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        module_0.main()
    except BaseException:
        pass

def test_case_5():
    try:
        h_t_t_p_client_0 = module_0.HTTPClient()
        str_0 = 'http://www.sina.com.cn/'
        h_t_t_p_response_0 = h_t_t_p_client_0.fetch(str_0)
        var_0 = h_t_t_p_response_0.body
        var_1 = print(var_0)
        h_t_t_p_client_0.close()
        list_0 = []
        time_0 = module_1.time(*list_0)
        h_t_t_p_client_1 = module_0.HTTPClient(time_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = '<rEW_IiEIqOD<M-</JE'
        none_type_0 = None
        none_type_1 = None
        none_type_2 = None
        bytes_0 = b'\x10\xb9'
        str_1 = '__main__'
        dict_0 = {str_0: str_0, str_1: bytes_0, str_0: str_1, str_0: str_0}
        h_t_t_p_request_0 = module_0.HTTPRequest(str_0, none_type_0, none_type_1, str_0, none_type_2, bytes_0, str_0, dict_0)
        float_0 = 60.0
        int_0 = -960
        h_t_t_p_response_0 = module_0.HTTPResponse(h_t_t_p_request_0, int_0, str_1, str_0, float_0)
        h_t_t_p_client_0 = module_0.HTTPClient()
        h_t_t_p_response_1 = h_t_t_p_client_0.fetch(str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = '<rEW_IiEIqOD<M-</JE'
        none_type_0 = None
        none_type_1 = None
        none_type_2 = None
        bytes_0 = b'\x10'
        str_1 = '__main__'
        dict_0 = {str_0: str_0, str_1: bytes_0, str_0: str_1, str_0: str_0}
        h_t_t_p_request_0 = module_0.HTTPRequest(str_0, none_type_0, none_type_1, str_0, none_type_2, bytes_0, str_0, dict_0)
        dict_1 = None
        float_0 = -1732.01499
        int_0 = -2301
        h_t_t_p_response_0 = module_0.HTTPResponse(h_t_t_p_request_0, int_0, str_1, float_0, float_0)
        type_0 = None
        h_t_t_p_client_0 = module_0.HTTPClient()
        str_2 = "'1R<"
        dict_2 = {str_1: dict_1, str_2: type_0, str_2: bytes_0, str_1: bytes_0}
        h_t_t_p_response_1 = h_t_t_p_client_0.fetch(h_t_t_p_request_0, **dict_2)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = '<rEW_IiEIqOD<M-</JE'
        h_t_t_p_request_0 = None
        int_0 = 6
        h_t_t_p_headers_0 = module_2.HTTPHeaders()
        int_1 = 2916
        none_type_0 = None
        h_t_t_p_response_0 = module_0.HTTPResponse(h_t_t_p_request_0, int_0, h_t_t_p_headers_0, int_1, str_0, none_type_0, str_0)
        h_t_t_p_response_0.rethrow()
    except BaseException:
        pass

def test_case_9():
    try:
        none_type_0 = None
        int_0 = 206
        set_0 = None
        h_t_t_p_client_error_0 = module_0.HTTPClientError(int_0, set_0)
        none_type_1 = None
        none_type_2 = None
        bytes_0 = b'\x10\xb9'
        str_0 = '__main__'
        h_t_t_p_client_0 = module_0.HTTPClient()
        h_t_t_p_client_0.close()
        dict_0 = {str_0: str_0, str_0: bytes_0, str_0: str_0, str_0: str_0}
        h_t_t_p_request_0 = module_0.HTTPRequest(str_0, none_type_0, none_type_1, str_0, none_type_2, bytes_0, str_0, dict_0)
        int_1 = -656
        dict_1 = None
        float_0 = -1721.7045025070158
        str_1 = '_Ml93}'
        dict_2 = {str_0: h_t_t_p_client_0, str_0: float_0, str_1: dict_1, str_1: dict_0}
        list_0 = [int_1, h_t_t_p_request_0, h_t_t_p_request_0, float_0]
        base_exception_0 = module_3.BaseException(*list_0)
        future_0 = module_4.Future()
        h_t_t_p_response_0 = module_0.HTTPResponse(h_t_t_p_request_0, int_0, dict_2, str_0, base_exception_0, future_0, str_1, float_0)
        h_t_t_p_client_1 = module_0.HTTPClient(**dict_2)
    except BaseException:
        pass

def test_case_10():
    try:
        i_o_loop_0 = module_5.IOLoop()
        bool_0 = True
        str_0 = 'fouD8]'
        async_h_t_t_p_client_0 = module_0.AsyncHTTPClient()
        async_h_t_t_p_client_0.initialize()
        str_1 = '!W'
        str_2 = 'O*(H@{\r6TNb=jP'
        dict_0 = {str_0: str_0, str_1: str_1, str_2: str_1}
        async_h_t_t_p_client_1 = module_0.AsyncHTTPClient(**dict_0)
        async_h_t_t_p_client_2 = async_h_t_t_p_client_1.__new__(i_o_loop_0, bool_0)
    except BaseException:
        pass