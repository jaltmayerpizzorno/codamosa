# Automatically generated by Pynguin.
import httpie.models as module_0
import httpie.output.streams as module_1
import httpie.output.processing as module_2

def test_case_0():
    try:
        list_0 = []
        h_t_t_p_message_0 = module_0.HTTPMessage(list_0)
        h_t_t_p_message_1 = module_0.HTTPMessage(h_t_t_p_message_0)
        base_stream_0 = module_1.BaseStream(h_t_t_p_message_1)
        bytes_0 = base_stream_0.get_headers()
    except BaseException:
        pass

def test_case_1():
    try:
        bool_0 = False
        h_t_t_p_message_0 = module_0.HTTPMessage(bool_0)
        base_stream_0 = module_1.BaseStream(h_t_t_p_message_0)
        iterable_0 = base_stream_0.iter_body()
    except BaseException:
        pass

def test_case_2():
    try:
        raw_stream_0 = module_1.RawStream()
    except BaseException:
        pass

def test_case_3():
    try:
        encoded_stream_0 = module_1.EncodedStream()
    except BaseException:
        pass

def test_case_4():
    try:
        conversion_0 = module_2.Conversion()
        formatting_0 = None
        pretty_stream_0 = module_1.PrettyStream(conversion_0, formatting_0)
    except BaseException:
        pass

def test_case_5():
    try:
        list_0 = []
        h_t_t_p_message_0 = module_0.HTTPMessage(list_0)
        base_stream_0 = module_1.BaseStream(h_t_t_p_message_0)
        bool_0 = None
        base_stream_1 = module_1.BaseStream(h_t_t_p_message_0, bool_0)
        bytes_0 = base_stream_0.get_headers()
    except BaseException:
        pass

def test_case_6():
    try:
        list_0 = []
        h_t_t_p_message_0 = module_0.HTTPMessage(list_0)
        bool_0 = False
        optional_0 = None
        base_stream_0 = module_1.BaseStream(h_t_t_p_message_0, bool_0, optional_0)
    except BaseException:
        pass