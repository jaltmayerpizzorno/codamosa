# Automatically generated by Pynguin.
import ansible.plugins.action.pause as module_0

def test_case_0():
    try:
        bool_0 = False
        set_0 = {bool_0}
        list_0 = []
        ansible_timeout_exceeded_0 = module_0.AnsibleTimeoutExceeded(*list_0)
        str_0 = 'h'
        action_module_0 = module_0.ActionModule(set_0, list_0, list_0, list_0, ansible_timeout_exceeded_0, str_0)
        var_0 = module_0.timeout_handler(set_0, ansible_timeout_exceeded_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bool_0 = False
        var_0 = module_0.clear_line(bool_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'whatever'
        str_1 = 'za1:)~:Y\\H\x0b\\0'
        dict_0 = {str_0: str_0, str_1: str_0, str_1: str_0, str_1: str_1}
        list_0 = [dict_0, dict_0]
        list_1 = [list_0, list_0]
        float_0 = 0.0
        int_0 = 1172
        action_module_0 = module_0.ActionModule(dict_0, list_0, dict_0, list_1, float_0, int_0)
        var_0 = action_module_0.run()
    except BaseException:
        pass

def test_case_3():
    try:
        dict_0 = {}
        bool_0 = True
        list_0 = [dict_0]
        list_1 = [bool_0, dict_0]
        str_0 = ''
        str_1 = 'v;R/J;?bvHq\\<=MR[}B'
        tuple_0 = ()
        str_2 = 'tm5lwx\\7.54'
        str_3 = 'z\rRzw;IpqY/E~&M'
        action_module_0 = module_0.ActionModule(list_0, str_1, tuple_0, str_2, tuple_0, str_3)
        var_0 = action_module_0.run(list_1, str_0)
    except BaseException:
        pass