# Automatically generated by Pynguin.
import ansible.module_utils.common.network as module_0

def test_case_0():
    try:
        bytes_0 = b''
        var_0 = module_0.to_ipv6_subnet(bytes_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'unicode_wrap'
        var_0 = module_0.to_masklen(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        float_0 = 339.32
        var_0 = module_0.to_netmask(float_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'Command "%s" could not handle archive.'
        dict_0 = {str_0: str_0}
        var_0 = module_0.to_subnet(str_0, dict_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'mimetype'
        var_0 = module_0.to_ipv6_network(str_0)
        int_0 = -5496
        var_1 = module_0.to_masklen(int_0)
    except BaseException:
        pass

def test_case_5():
    try:
        int_0 = -2198
        var_0 = module_0.to_bits(int_0)
    except BaseException:
        pass

def test_case_6():
    try:
        int_0 = -2110
        str_0 = ''
        var_0 = module_0.to_ipv6_subnet(str_0)
        str_1 = 'The plaintext provided from the prompt was empty, not encrypting'
        var_1 = module_0.to_ipv6_network(str_1)
        var_2 = module_0.is_masklen(int_0)
        bool_0 = True
        var_3 = module_0.to_netmask(bool_0)
        tuple_0 = None
        var_4 = module_0.to_ipv6_subnet(tuple_0)
    except BaseException:
        pass