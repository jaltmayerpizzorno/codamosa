# Automatically generated by Pynguin.
import flutes.structure as module_0

def test_case_0():
    pass

def test_case_1():
    int_0 = -551
    set_0 = {int_0, int_0, int_0}
    var_0 = module_0.no_map_instance(set_0)
    bool_0 = True
    int_1 = 1
    dict_0 = {bool_0: int_1}
    list_0 = module_0.reverse_map(dict_0)
    module_0.register_no_map_class(int_0)

def test_case_2():
    int_0 = 4470
    var_0 = module_0.no_map_instance(int_0)

def test_case_3():
    dict_0 = {}
    list_0 = [dict_0, dict_0, dict_0]
    tuple_0 = (dict_0, dict_0)
    var_0 = module_0.map_structure(list_0, tuple_0)

def test_case_4():
    tuple_0 = ()
    list_0 = [tuple_0, tuple_0]
    str_0 = '.y=69&z*CzC3+v#5 #'
    var_0 = module_0.map_structure_zip(str_0, list_0)

def test_case_5():
    tuple_0 = ()
    list_0 = [tuple_0, tuple_0]
    str_0 = '.y=69&z*CzC3+v#5 #'
    var_0 = module_0.map_structure_zip(str_0, list_0)
    int_0 = 0
    float_0 = 2211.0
    set_0 = {tuple_0, int_0, float_0}
    var_1 = module_0.map_structure(set_0, list_0)
    var_2 = module_0.no_map_instance(int_0)

def test_case_6():
    str_0 = ''
    set_0 = set()
    var_0 = module_0.map_structure(str_0, set_0)

def test_case_7():
    str_0 = '~'
    str_1 = ''
    int_0 = []
    int_1 = {str_0: int_0, str_1: int_0}
    int_2 = [int_1]
    var_0 = lambda xx, yy: xx + yy
    var_1 = module_0.map_structure_zip(var_0, int_2)