# Automatically generated by Pynguin.
import youtube_dl.downloader.f4m as module_0

def test_case_0():
    try:
        flv_reader_0 = module_0.FlvReader()
        var_0 = flv_reader_0.read_abst()
    except BaseException:
        pass

def test_case_1():
    try:
        flv_reader_0 = module_0.FlvReader()
        bytes_0 = b'\x8c\xc0\x84\xce5\x11~\xde'
        var_0 = module_0.write_metadata_tag(flv_reader_0, bytes_0)
        var_1 = flv_reader_0.read_unsigned_long_long()
    except BaseException:
        pass

def test_case_2():
    try:
        flv_reader_0 = None
        var_0 = module_0.read_bootstrap_info(flv_reader_0)
    except BaseException:
        pass

def test_case_3():
    try:
        flv_reader_0 = module_0.FlvReader()
        var_0 = flv_reader_0.read_string()
    except BaseException:
        pass

def test_case_4():
    try:
        bytes_0 = b'\x8b%\xaf\xcd\x0bj\xc2\x93S\xe8{.'
        list_0 = [bytes_0]
        flv_reader_0 = module_0.FlvReader(*list_0)
        var_0 = flv_reader_0.read_asrt()
    except BaseException:
        pass

def test_case_5():
    try:
        tuple_0 = ()
        var_0 = module_0.read_bootstrap_info(tuple_0)
    except BaseException:
        pass

def test_case_6():
    try:
        float_0 = 2268.166
        var_0 = module_0.build_fragments_list(float_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = '"qs{c^'
        float_0 = 2309.4978
        var_0 = module_0.write_metadata_tag(str_0, float_0)
    except BaseException:
        pass

def test_case_8():
    try:
        bool_0 = True
        var_0 = module_0.remove_encrypted_media(bool_0)
    except BaseException:
        pass

def test_case_9():
    try:
        int_0 = 3592
        var_0 = module_0.get_base_url(int_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = "'=uW'/ %Cdk1tKj`#zK"
        str_1 = 'o9J]'
        dict_0 = {str_0: str_0, str_1: str_1}
        list_0 = [dict_0, str_0, dict_0, dict_0]
        flv_reader_0 = module_0.FlvReader()
        bool_0 = True
        list_1 = [bool_0]
        f4m_f_d_0 = module_0.F4mFD(bool_0, list_1)
        bytes_0 = b'\\0o'
        f4m_f_d_1 = module_0.F4mFD(f4m_f_d_0, bytes_0)
        f4m_f_d_2 = module_0.F4mFD(flv_reader_0, f4m_f_d_1)
        str_2 = "E'i;or\\h8Kx?:BQ["
        f4m_f_d_3 = module_0.F4mFD(f4m_f_d_2, str_2)
        var_0 = f4m_f_d_3.real_download(dict_0, list_0)
    except BaseException:
        pass

def test_case_11():
    try:
        bytes_0 = b'\x06\xd9\xfed\xb5n\xb8\xaaX9\x00>C\xacfG\xe6L'
        var_0 = module_0.read_bootstrap_info(bytes_0)
    except BaseException:
        pass

def test_case_12():
    try:
        float_0 = 47.48
        var_0 = module_0.write_flv_header(float_0)
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = 'WVWYb-}Wh1'
        list_0 = [str_0]
        var_0 = module_0.write_unsigned_int_24(str_0, list_0)
    except BaseException:
        pass

def test_case_14():
    try:
        flv_reader_0 = module_0.FlvReader()
        str_0 = ''
        var_0 = module_0.write_metadata_tag(flv_reader_0, str_0)
        data_truncated_error_0 = module_0.DataTruncatedError()
        data_truncated_error_1 = module_0.DataTruncatedError()
        float_0 = 772.3
        tuple_0 = ()
        list_0 = [flv_reader_0, tuple_0, float_0, str_0]
        f4m_f_d_0 = module_0.F4mFD(list_0, tuple_0)
        var_1 = flv_reader_0.read_unsigned_long_long()
    except BaseException:
        pass

def test_case_15():
    try:
        bytes_0 = b'\x8b%\xaf\xcd\x0bj\xc2\x93S\xe8{.'
        list_0 = [bytes_0]
        data_truncated_error_0 = module_0.DataTruncatedError(*list_0)
        flv_reader_0 = module_0.FlvReader(*list_0)
        var_0 = flv_reader_0.read_afrt()
    except BaseException:
        pass

def test_case_16():
    try:
        bytes_0 = b'\x8b%\xaf\xcd\x0bj\xc2\x93S\xe8{.'
        list_0 = [bytes_0]
        flv_reader_0 = module_0.FlvReader(*list_0)
        var_0 = flv_reader_0.read_string()
    except BaseException:
        pass

def test_case_17():
    try:
        bytes_0 = b'\x8b%\xaf\xcd\x0bj\xc2\x93S\xe8{.'
        list_0 = [bytes_0]
        flv_reader_0 = module_0.FlvReader(*list_0)
        var_0 = flv_reader_0.read_abst()
    except BaseException:
        pass

def test_case_18():
    try:
        bytes_0 = b'\x8b%\xaf\xcd\x0bj\xc2\x93S\xe8{.'
        list_0 = [bytes_0]
        flv_reader_0 = module_0.FlvReader(*list_0)
        var_0 = module_0.write_flv_header(flv_reader_0)
        var_1 = flv_reader_0.read_afrt()
    except BaseException:
        pass

def test_case_19():
    try:
        bytes_0 = b"\xb28\x00\xfb]\xbb\x9f\xcb$n\x93*\xb6P\x16'\xf2\x0f\x0b\x05"
        list_0 = [bytes_0]
        flv_reader_0 = module_0.FlvReader(*list_0)
        var_0 = flv_reader_0.read_string()
        data_truncated_error_0 = module_0.DataTruncatedError(*list_0)
        int_0 = -2746
        var_1 = module_0.write_unsigned_int(data_truncated_error_0, int_0)
    except BaseException:
        pass

def test_case_20():
    try:
        str_0 = 'segments'
        str_1 = 'fragments'
        str_2 = 'v'
        str_3 = 'segment_run'
        int_0 = 1579
        int_1 = (int_0, int_0)
        int_2 = [int_1]
        int_3 = {str_3: int_2, str_3: int_2}
        int_4 = [int_3]
        str_4 = 'first'
        int_5 = {str_4: int_0}
        int_6 = [int_5]
        int_7 = {str_1: int_6}
        int_8 = [int_7]
        bool_0 = False
        var_0 = {str_0: int_4, str_1: int_8, str_2: bool_0}
        var_1 = module_0.build_fragments_list(var_0)
    except BaseException:
        pass