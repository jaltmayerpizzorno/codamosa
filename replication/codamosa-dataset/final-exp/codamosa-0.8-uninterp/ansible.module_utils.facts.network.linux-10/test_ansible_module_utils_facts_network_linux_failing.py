# Automatically generated by Pynguin.
import ansible.module_utils.facts.network.linux as module_0

def test_case_0():
    try:
        bool_0 = True
        bool_1 = False
        list_0 = [bool_1, bool_1]
        linux_network_0 = module_0.LinuxNetwork(list_0)
        var_0 = linux_network_0.populate(bool_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = b'\x18\xaa7\xf6\x1f'
        linux_network_collector_0 = module_0.LinuxNetworkCollector()
        linux_network_0 = module_0.LinuxNetwork(linux_network_collector_0)
        var_0 = linux_network_0.get_default_interfaces(bytes_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b'\x83\xbe2[U\x08\x18\xad'
        str_0 = 'Xu]XO6k\nd'
        linux_network_0 = module_0.LinuxNetwork(bytes_0, str_0)
        var_0 = linux_network_0.get_interfaces_info(linux_network_0, str_0, bytes_0)
    except BaseException:
        pass

def test_case_3():
    try:
        list_0 = []
        int_0 = 9
        linux_network_0 = module_0.LinuxNetwork(int_0)
        var_0 = linux_network_0.get_ethtool_data(list_0)
    except BaseException:
        pass

def test_case_4():
    try:
        bytes_0 = b'\x83\xbe2[U\x08\x18\xad'
        str_0 = 'Xux]XOrk\nd'
        linux_network_0 = module_0.LinuxNetwork(bytes_0, str_0)
        tuple_0 = ()
        set_0 = {str_0, str_0, str_0, str_0}
        var_0 = linux_network_0.get_default_interfaces(tuple_0, set_0)
    except BaseException:
        pass