# Automatically generated by Pynguin.
import typed_ast.ast3 as module_0
import py_backwards.utils.tree as module_1

def test_case_0():
    pass

def test_case_1():
    str_0 = 'foo'
    var_0 = module_0.parse(str_0)
    int_0 = 0
    var_1 = var_0.body[int_0]
    var_2 = var_1.value
    a_s_t_0 = module_1.get_parent(var_0, var_2)

def test_case_2():
    str_0 = 'a = 4 + 5\n'
    var_0 = module_0.parse(str_0)
    int_0 = 0
    var_1 = var_0.body[int_0]
    var_2 = var_1.value
    var_3 = var_1.value.left
    a_s_t_0 = module_1.get_parent(var_0, var_3)
    var_4 = var_1.value.right
    tuple_0 = module_1.get_non_exp_parent_and_index(a_s_t_0, a_s_t_0)

def test_case_3():
    str_0 = 'a = m + 5\n'
    var_0 = module_0.parse(str_0)
    int_0 = 0
    var_1 = var_0.body[int_0]
    var_2 = var_0.body[int_0]
    var_3 = var_2.value
    a_s_t_0 = module_1.get_parent(var_0, var_3)
    var_4 = var_1.value.left
    a_s_t_1 = module_1.get_parent(var_0, var_4)
    var_5 = a_s_t_1.__class__
    var_6 = var_2.value.right
    a_s_t_2 = module_1.get_parent(var_0, var_6)
    bool_0 = True
    a_s_t_3 = module_1.get_parent(a_s_t_1, a_s_t_0, bool_0)
    var_7 = a_s_t_2.__class__
    tuple_0 = module_1.get_non_exp_parent_and_index(a_s_t_1, a_s_t_2)

def test_case_4():
    str_0 = 'a = m + 5\n'
    var_0 = module_0.parse(str_0)
    int_0 = 0
    var_1 = var_0.body[int_0]
    var_2 = var_0.body[int_0]
    var_3 = var_2.value
    a_s_t_0 = module_1.get_parent(var_0, var_3)
    var_4 = var_1.value.left
    a_s_t_1 = module_1.get_parent(var_0, var_4)
    var_5 = a_s_t_1.__class__
    var_6 = var_2.value.right
    a_s_t_2 = module_1.get_parent(var_0, var_6)
    bool_0 = True
    a_s_t_3 = module_1.get_parent(a_s_t_1, a_s_t_0, bool_0)
    var_7 = int_0.__class__
    tuple_0 = module_1.get_non_exp_parent_and_index(a_s_t_1, a_s_t_2)
    module_1.replace_at(int_0, a_s_t_3, a_s_t_3)