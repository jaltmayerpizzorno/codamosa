# Automatically generated by Pynguin.
import ansible.module_utils.connection as module_0

def test_case_0():
    try:
        int_0 = -3007
        bytes_0 = None
        var_0 = module_0.write_to_file_descriptor(int_0, bytes_0)
    except BaseException:
        pass

def test_case_1():
    try:
        var_0 = ()
        str_0 = '_socket_path'
        str_1 = '/dev/null'
        str_2 = {str_0: str_1}
        var_1 = type(str_1, var_0, str_2)
        var_2 = module_0.exec_command(var_1, str_1)
        connection_0 = module_0.Connection(str_2)
        set_0 = set()
        connection_1 = module_0.Connection(set_0)
        bytes_0 = b'\xb3\x8f\xcb\x05\x94\xcf\x90\xbc\xa0J'
        tuple_0 = (bytes_0, set_0)
        var_3 = module_0.send_data(tuple_0, tuple_0)
    except BaseException:
        pass

def test_case_2():
    try:
        float_0 = 140.74
        var_0 = module_0.recv_data(float_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'at least one of filename or content must be provided'
        int_0 = 250
        var_0 = module_0.exec_command(str_0, int_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'Oct'
        connection_0 = module_0.Connection(str_0)
        var_0 = module_0.recv_data(connection_0)
    except BaseException:
        pass

def test_case_5():
    try:
        bool_0 = False
        connection_0 = module_0.Connection(bool_0)
        var_0 = module_0.recv_data(connection_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'kJ'
        list_0 = [str_0, str_0]
        list_1 = [list_0]
        str_1 = 'JPk|g\tKp7x\x0cRu=+'
        dict_0 = {str_1: str_1, str_1: str_1}
        set_0 = {str_1}
        list_2 = [str_1, set_0, set_0, set_0]
        connection_error_0 = module_0.ConnectionError(dict_0, *list_2)
        connection_0 = module_0.Connection(connection_error_0)
        var_0 = connection_0.__getattr__(list_1)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'E\x0c\\p]\rvYhXZ'
        list_0 = [str_0, str_0, str_0]
        connection_error_0 = module_0.ConnectionError(list_0, *list_0)
        str_1 = ']ho+d`k*et v\nD'
        connection_0 = module_0.Connection(str_1)
        bytes_0 = None
        connection_1 = module_0.Connection(bytes_0)
    except BaseException:
        pass

def test_case_8():
    try:
        bool_0 = False
        connection_0 = module_0.Connection(bool_0)
        list_0 = [bool_0, bool_0, bool_0, connection_0]
        var_0 = connection_0.__rpc__(list_0)
    except BaseException:
        pass

def test_case_9():
    try:
        bool_0 = True
        int_0 = -931
        var_0 = module_0.write_to_file_descriptor(bool_0, int_0)
        bool_1 = False
        connection_0 = module_0.Connection(bool_1)
        var_1 = module_0.recv_data(connection_0)
    except BaseException:
        pass

def test_case_10():
    try:
        var_0 = ()
        str_0 = '_socket_path'
        str_1 = '/dev/null'
        str_2 = {str_0: str_1, str_0: str_1, str_0: var_0}
        var_1 = type(str_1, var_0, str_2)
        var_2 = module_0.exec_command(var_1, str_1)
    except BaseException:
        pass