# Automatically generated by Pynguin.
import ansible.inventory.group as module_0

def test_case_0():
    try:
        list_0 = []
        list_1 = []
        group_0 = module_0.Group(list_1)
        var_0 = group_0.__setstate__(list_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '.q\n;bq"t*GJEl2C c'
        group_0 = module_0.Group()
        var_0 = group_0.add_child_group(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        group_0 = module_0.Group()
        var_0 = group_0.add_host(group_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 't+-HZBuJL<if7L;rxkB'
        group_0 = module_0.Group()
        var_0 = group_0.set_priority(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        group_0 = module_0.Group()
        group_1 = module_0.Group()
        group_2 = module_0.Group()
        var_0 = group_1.add_child_group(group_2)
        var_1 = group_1.get_hosts()
        var_2 = group_0.add_child_group(group_1)
        float_0 = 1000.0
        var_3 = group_1.remove_host(float_0)
    except BaseException:
        pass

def test_case_5():
    try:
        group_0 = module_0.Group()
        group_1 = module_0.Group()
        var_0 = group_0.add_child_group(group_1)
        var_1 = group_0.add_child_group(group_0)
    except BaseException:
        pass

def test_case_6():
    try:
        group_0 = module_0.Group()
        var_0 = group_0.get_vars()
        group_1 = module_0.Group()
        group_2 = module_0.Group()
        var_1 = group_1.add_child_group(group_2)
        var_2 = group_1.get_hosts()
        var_3 = group_0.add_child_group(group_1)
        var_4 = group_0.add_child_group(group_2)
        var_5 = group_0.clear_hosts_cache()
        float_0 = 1000.0
        var_6 = group_2.__getstate__()
        var_7 = group_1.remove_host(float_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = "~ +/qZ['g^O4\rU1&"
        group_0 = module_0.Group()
        var_0 = group_0.__repr__()
        group_1 = module_0.Group()
        var_1 = group_0.get_vars()
        var_2 = group_1.set_variable(str_0, group_0)
        var_3 = group_1.add_child_group(group_0)
        var_4 = group_0.get_vars()
        var_5 = group_0.__getstate__()
        var_6 = group_0.__getstate__()
        group_2 = module_0.Group()
        var_7 = group_0.serialize()
        var_8 = group_0.get_ancestors()
        var_9 = group_1.get_name()
        dict_0 = {}
        group_3 = module_0.Group()
        var_10 = group_3.__setstate__(dict_0)
        var_11 = group_2.get_hosts()
        var_12 = group_1.remove_host(group_1)
        var_13 = group_3.get_hosts()
        var_14 = group_1.__str__()
        group_4 = module_0.Group()
        var_15 = group_1.get_hosts()
        group_5 = module_0.Group()
        var_16 = group_1.add_host(group_5)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = "~ +/qZ['g^O4\rU1&"
        group_0 = module_0.Group()
        var_0 = group_0.__repr__()
        group_1 = module_0.Group()
        var_1 = group_0.get_vars()
        var_2 = group_1.set_variable(str_0, group_0)
        list_0 = None
        var_3 = group_0.set_priority(list_0)
        var_4 = group_1.add_child_group(group_0)
        var_5 = group_0.__getstate__()
        var_6 = group_0.__getstate__()
        var_7 = group_0.add_child_group(group_1)
    except BaseException:
        pass

def test_case_9():
    try:
        group_0 = module_0.Group()
        group_1 = module_0.Group()
        group_2 = module_0.Group()
        var_0 = group_1.add_child_group(group_2)
        var_1 = group_1.get_hosts()
        var_2 = group_0.add_child_group(group_1)
        var_3 = group_0.add_child_group(group_2)
        float_0 = 1000.0
        var_4 = group_1.remove_host(float_0)
    except BaseException:
        pass

def test_case_10():
    try:
        group_0 = module_0.Group()
        group_1 = module_0.Group()
        group_2 = module_0.Group()
        var_0 = group_1.add_child_group(group_2)
        var_1 = group_0.add_child_group(group_1)
        float_0 = 1000.0
        var_2 = group_1.remove_host(float_0)
    except BaseException:
        pass

def test_case_11():
    try:
        group_0 = module_0.Group()
        group_1 = module_0.Group()
        group_2 = module_0.Group()
        var_0 = group_1.add_child_group(group_2)
        var_1 = group_0.add_child_group(group_1)
        var_2 = group_0.add_child_group(group_1)
        str_0 = 'host'
        var_3 = group_0.add_host(str_0)
    except BaseException:
        pass