# Automatically generated by Pynguin.
import ansible.template.native_helpers as module_0
import jinja2.runtime as module_1
import ansible.utils.native_jinja as module_2
import ast as module_3

def test_case_0():
    try:
        bytes_0 = b'\xb7\xd0N\xab'
        int_0 = -3413
        list_0 = [int_0, int_0]
        bool_0 = False
        dict_0 = {bytes_0: bytes_0, int_0: int_0}
        tuple_0 = (bytes_0, list_0, bool_0, dict_0)
        var_0 = module_0.ansible_native_concat(tuple_0)
        str_0 = '\n    Creates a python datastructure from the given data, which can be either\n    a JSON or YAML string.\n    '
        tuple_1 = (int_0, str_0)
        var_1 = module_0.ansible_native_concat(tuple_1)
        var_2 = module_0.ansible_native_concat(int_0)
    except BaseException:
        pass

def test_case_1():
    try:
        float_0 = 1271.0
        tuple_0 = (float_0,)
        set_0 = {float_0, tuple_0, tuple_0}
        list_0 = [set_0, tuple_0]
        var_0 = module_0.ansible_native_concat(list_0)
        var_1 = module_0.ansible_native_concat(tuple_0)
        str_0 = 'zhn~Nd9aUq8pe'
        var_2 = module_0.ansible_native_concat(str_0)
        float_1 = 863.08
        var_3 = module_0.ansible_native_concat(float_1)
    except BaseException:
        pass

def test_case_2():
    try:
        bool_0 = False
        var_0 = module_0.ansible_native_concat(bool_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'foo'
        str_1 = 'bar'
        str_2 = [str_0, str_1]
        var_0 = module_0.ansible_native_concat(str_2)
        strict_undefined_0 = module_1.StrictUndefined()
        var_1 = [str_0, strict_undefined_0]
        var_2 = module_0.ansible_native_concat(var_1)
    except BaseException:
        pass

def test_case_4():
    try:
        native_jinja_text_0 = module_2.NativeJinjaText()
        set_0 = {native_jinja_text_0, native_jinja_text_0}
        var_0 = module_0.ansible_native_concat(set_0)
        float_0 = 1271.0
        tuple_0 = (float_0,)
        list_0 = None
        str_0 = 'OhGS a.\x0b$U'
        float_1 = -635.1875
        dict_0 = {str_0: float_1, str_0: float_1, str_0: tuple_0}
        str_1 = module_3.Str(*list_0, **dict_0)
    except BaseException:
        pass