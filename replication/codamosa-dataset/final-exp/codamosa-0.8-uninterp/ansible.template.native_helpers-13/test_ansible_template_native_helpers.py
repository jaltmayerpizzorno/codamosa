# Automatically generated by Pynguin.
import ansible.template.native_helpers as module_0
import ansible.parsing.yaml.objects as module_1

def test_case_0():
    pass

def test_case_1():
    str_0 = '^(-?\\d+)(s|m|h|d|w)?$'
    var_0 = module_0.ansible_native_concat(str_0)

def test_case_2():
    int_0 = 1099
    tuple_0 = (int_0,)
    var_0 = module_0.ansible_native_concat(tuple_0)

def test_case_3():
    tuple_0 = ()
    var_0 = module_0.ansible_native_concat(tuple_0)

def test_case_4():
    str_0 = '1:2!e$p((YQ5\x0c>P_I>Qi'
    list_0 = [str_0]
    var_0 = module_0.ansible_native_concat(list_0)

def test_case_5():
    dict_0 = {}
    ansible_vault_encrypted_unicode_0 = module_1.AnsibleVaultEncryptedUnicode(dict_0)
    tuple_0 = (ansible_vault_encrypted_unicode_0,)
    var_0 = module_0.ansible_native_concat(tuple_0)
    float_0 = 1260.2
    str_0 = '\n        actually execute the module code backend\n        '
    tuple_1 = (float_0, str_0)
    var_1 = module_0.ansible_native_concat(tuple_1)
    float_1 = 1264.878
    dict_1 = {float_1: float_1, float_1: float_1, float_1: float_1}
    str_1 = '\rP3NeklWc%>O^\rX_eGb'
    var_2 = module_0.ansible_native_concat(dict_1)
    var_3 = module_0.ansible_native_concat(str_1)
    var_4 = module_0.ansible_native_concat(str_1)
    dict_2 = {str_1: var_4}
    var_5 = module_0.ansible_native_concat(dict_2)