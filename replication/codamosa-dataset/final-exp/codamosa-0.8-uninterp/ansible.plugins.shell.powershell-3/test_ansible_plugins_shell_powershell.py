# Automatically generated by Pynguin.
import ansible.plugins.shell.powershell as module_0
import ansible.plugins.shell as module_1

def test_case_0():
    pass

def test_case_1():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    shell_module_0 = module_0.ShellModule()
    var_0 = shell_module_0.join_path(*list_0)

def test_case_2():
    shell_module_0 = module_0.ShellModule()
    str_0 = 'f?!'
    var_0 = shell_module_0.remove(str_0)

def test_case_3():
    str_0 = "i_IN1;l'Rq;%e7CirJ`"
    str_1 = ' helper function to bump a statistic '
    str_2 = ' .)'
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_0, str_2: str_2}
    list_0 = []
    str_3 = 'y['
    dict_1 = {str_2: str_1}
    tuple_0 = (list_0, str_3, dict_1)
    shell_module_0 = module_0.ShellModule()
    var_0 = shell_module_0.remove(dict_0, tuple_0)
    int_0 = 2351
    shell_module_1 = module_0.ShellModule()
    var_1 = shell_module_1.remove(int_0)

def test_case_4():
    complex_0 = None
    shell_module_0 = module_0.ShellModule()
    var_0 = shell_module_0.expand_user(complex_0)

def test_case_5():
    shell_base_0 = module_1.ShellBase()
    shell_module_0 = module_0.ShellModule()
    var_0 = shell_module_0.exists(shell_base_0)

def test_case_6():
    shell_base_0 = module_1.ShellBase()
    shell_module_0 = module_0.ShellModule()
    var_0 = shell_module_0.checksum(shell_base_0)

def test_case_7():
    shell_module_0 = module_0.ShellModule()
    str_0 = 'k%G[B"#8*(/'
    str_1 = '#!powershell'
    var_0 = shell_module_0.build_module_command(str_0, str_1, str_0, str_0)

def test_case_8():
    shell_module_0 = module_0.ShellModule()
    str_0 = ''
    var_0 = shell_module_0.build_module_command(str_0, str_0, str_0)

def test_case_9():
    str_0 = 'k>zsuXVM'
    str_1 = ''
    str_2 = 'clean'
    dict_0 = {str_0: str_0, str_1: str_0, str_2: str_0}
    shell_module_0 = module_0.ShellModule()
    var_0 = shell_module_0.wrap_for_exec(dict_0)

def test_case_10():
    shell_module_0 = module_0.ShellModule()
    str_0 = 'my_script.ps1'
    var_0 = shell_module_0.get_remote_filename(str_0)
    str_1 = 'my_script'
    var_1 = shell_module_0.get_remote_filename(str_1)

def test_case_11():
    shell_module_0 = module_0.ShellModule()
    str_0 = 'k%G[B"#8*(/'
    var_0 = shell_module_0.build_module_command(str_0, str_0, str_0, str_0)
    str_1 = '#!powershell'
    var_1 = shell_module_0.build_module_command(str_0, str_1, str_0, str_0)

def test_case_12():
    shell_module_0 = module_0.ShellModule()
    str_0 = ''
    var_0 = shell_module_0.build_module_command(str_0, str_0, str_0, str_0)
    str_1 = '#!powershell'
    var_1 = shell_module_0.build_module_command(str_0, str_1, str_0, str_0)
    str_2 = 'test.exe arg1 arg2'
    str_3 = '/tmp'
    var_2 = shell_module_0.build_module_command(str_0, str_0, str_2, str_3)

def test_case_13():
    shell_module_0 = module_0.ShellModule()
    str_0 = '~/test'
    var_0 = shell_module_0.expand_user(str_0)
    str_1 = '~\\test'
    var_1 = shell_module_0.expand_user(str_1)
    str_2 = '~'
    var_2 = shell_module_0.expand_user(str_2)

def test_case_14():
    shell_module_0 = module_0.ShellModule()
    bool_0 = False
    str_0 = '#!python'
    str_1 = '%s %s'
    str_2 = 'arg1'
    var_0 = (bool_0, str_2)
    var_1 = str_1 % var_0
    str_3 = ''
    var_2 = shell_module_0.build_module_command(str_3, str_0, var_1)

def test_case_15():
    shell_module_0 = module_0.ShellModule()
    str_0 = '#!powershell'
    var_0 = shell_module_0.build_module_command(str_0, str_0, str_0, str_0)
    int_0 = 256
    int_1 = -181
    var_1 = shell_module_0.expand_user(int_0, int_1)
    complex_0 = None
    var_2 = shell_module_0.expand_user(complex_0, complex_0)
    list_0 = [var_1, var_0, shell_module_0, str_0]
    var_3 = shell_module_0.expand_user(list_0, int_1)
    int_2 = 2394
    float_0 = -71.40527
    var_4 = shell_module_0.mkdtemp(complex_0, int_2, float_0, list_0)