# Automatically generated by Pynguin.
import ansible.plugins.shell.powershell as module_0

def test_case_0():
    pass

def test_case_1():
    str_0 = "A#v2h'<n$)5"
    str_1 = 'O_Us2\n;ax".+q'
    shell_module_0 = module_0.ShellModule()
    list_0 = [str_0]
    var_0 = shell_module_0.join_path(*list_0)
    var_1 = shell_module_0.get_remote_filename(str_1)

def test_case_2():
    shell_module_0 = module_0.ShellModule()
    str_0 = 'O_Us2\n;ax".+q'
    shell_module_1 = module_0.ShellModule()
    var_0 = shell_module_1.get_remote_filename(str_0)

def test_case_3():
    dict_0 = {}
    shell_module_0 = module_0.ShellModule()
    var_0 = shell_module_0.remove(dict_0)

def test_case_4():
    str_0 = ' Class to storing and retrieving local galaxy token '
    shell_module_0 = module_0.ShellModule()
    shell_module_1 = module_0.ShellModule()
    var_0 = shell_module_1.remove(str_0, shell_module_0)

def test_case_5():
    shell_module_0 = module_0.ShellModule()
    str_0 = '<ansible.plugins.shell.powershell.ShellModule object at 0x7f0456d60f40>'
    var_0 = shell_module_0.expand_user(str_0)

def test_case_6():
    shell_module_0 = module_0.ShellModule()
    var_0 = shell_module_0.exists(shell_module_0)

def test_case_7():
    shell_module_0 = module_0.ShellModule()
    str_0 = '/bGn/p`tho*'
    var_0 = shell_module_0.build_module_command(str_0, str_0, str_0)

def test_case_8():
    float_0 = -1887.417
    shell_module_0 = module_0.ShellModule()
    var_0 = shell_module_0.wrap_for_exec(float_0)

def test_case_9():
    shell_module_0 = module_0.ShellModule()
    str_0 = ''
    str_1 = '#!powershell'
    str_2 = 'hostname.exe'
    var_0 = shell_module_0.build_module_command(str_0, str_1, str_2)

def test_case_10():
    shell_module_0 = module_0.ShellModule()
    str_0 = '~'
    var_0 = shell_module_0.expand_user(str_0)
    str_1 = '~/test'
    var_1 = shell_module_0.expand_user(str_1)

def test_case_11():
    shell_module_0 = module_0.ShellModule()
    str_0 = '~'
    var_0 = shell_module_0.expand_user(str_0)
    str_1 = '~\\test'
    var_1 = shell_module_0.expand_user(str_1)
    str_2 = '~/test'
    var_2 = shell_module_0.expand_user(str_2)
    str_3 = 'test'
    var_3 = shell_module_0.expand_user(str_3)

def test_case_12():
    var_0 = None
    shell_module_0 = module_0.ShellModule()
    var_1 = frozenset()
    str_0 = '/tmp/file.sh'
    var_2 = shell_module_0.get_remote_filename(str_0)
    str_1 = '/tmp/file.exe'
    var_3 = shell_module_0.get_remote_filename(str_1)
    shell_module_1 = module_0.ShellModule()
    var_4 = shell_module_1.env_prefix()

def test_case_13():
    shell_module_0 = module_0.ShellModule()
    str_0 = '"abc=def"'
    var_0 = shell_module_0.expand_user(str_0)
    str_1 = '/bin/python'
    str_2 = 'test_module'
    var_1 = shell_module_0.build_module_command(str_0, str_1, str_2)

def test_case_14():
    str_0 = 'E"\x0ccgE1*+NuUFhv}'
    shell_module_0 = module_0.ShellModule()
    str_1 = 'test_module'
    int_0 = 29
    list_0 = [str_0]
    var_0 = shell_module_0.expand_user(int_0, list_0)
    var_1 = shell_module_0.build_module_command(str_1, str_1, str_1)
    var_2 = shell_module_0.exists(shell_module_0)
    shell_module_1 = module_0.ShellModule()
    float_0 = 1116.1
    bytes_0 = b'7l#'
    bool_0 = True
    shell_module_2 = module_0.ShellModule()
    var_3 = shell_module_2.mkdtemp(float_0, bytes_0, bool_0, list_0)

def test_case_15():
    str_0 = '#!/usr/bin/python'
    str_1 = '/usr/bin/python /some/module arg1 arg2 arg3'
    str_2 = '/some/module'
    shell_module_0 = module_0.ShellModule()
    str_3 = ''
    var_0 = shell_module_0.build_module_command(str_3, str_0, str_1, str_2)
    shell_module_1 = module_0.ShellModule()

def test_case_16():
    shell_module_0 = module_0.ShellModule()
    str_0 = "'~'"
    var_0 = shell_module_0.exists(str_0)