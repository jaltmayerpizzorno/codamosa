# Automatically generated by Pynguin.
import ansible.plugins.shell.powershell as module_0
import re as module_1

def test_case_0():
    try:
        shell_module_0 = module_0.ShellModule()
        var_0 = shell_module_0.env_prefix()
        var_1 = shell_module_0.mkdtemp()
    except BaseException:
        pass

def test_case_1():
    try:
        dict_0 = None
        shell_module_0 = module_0.ShellModule()
        var_0 = shell_module_0.path_has_trailing_slash(dict_0)
    except BaseException:
        pass

def test_case_2():
    try:
        set_0 = None
        shell_module_0 = module_0.ShellModule()
        list_0 = [set_0, shell_module_0]
        str_0 = '.)k@=mDqR\\pzP2\tQS'
        var_0 = shell_module_0.build_module_command(list_0, str_0, set_0)
        shell_module_1 = module_0.ShellModule()
        var_1 = shell_module_1.chmod(shell_module_0, set_0)
    except BaseException:
        pass

def test_case_3():
    try:
        list_0 = None
        str_0 = '6so'
        shell_module_0 = module_0.ShellModule()
        var_0 = shell_module_0.chown(list_0, str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        int_0 = -3245
        set_0 = {int_0}
        str_0 = "7E<SFZ`E6C/qIe'4XJkk"
        dict_0 = {str_0: int_0, str_0: int_0}
        shell_module_0 = module_0.ShellModule()
        var_0 = shell_module_0.set_user_facl(int_0, set_0, dict_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = '.~!*1hPp\nI'
        set_0 = {str_0, str_0}
        shell_module_0 = module_0.ShellModule()
        var_0 = shell_module_0.mkdtemp(set_0)
    except BaseException:
        pass

def test_case_6():
    try:
        shell_module_0 = module_0.ShellModule()
        set_0 = set()
        str_0 = 'fzzUj p:P\ra9'
        var_0 = shell_module_0.mkdtemp(set_0, str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        bytes_0 = b'\xb7M\x8c\x16\xe5\xa7\xc2\xfe\xe4A\x86\xeb\x10\x17\x87DR'
        shell_module_0 = module_0.ShellModule()
        var_0 = shell_module_0.checksum(bytes_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = '.~!*1hPp\nI'
        set_0 = {str_0, str_0, str_0, str_0}
        list_0 = [set_0, str_0]
        shell_module_0 = module_0.ShellModule()
        var_0 = shell_module_0.join_path(*list_0)
        shell_module_1 = module_0.ShellModule()
        var_1 = shell_module_1.mkdtemp(set_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = '\n            If (Test-Path -PathType Leaf \'(None, None, None)\')\n            {\n                $sp = new-object -TypeName System.Security.Cryptography.SHA1CryptoServiceProvider;\n                $fp = [System.IO.File]::Open(\'(None, None, None)\', [System.IO.Filemode]::Open, [System.IO.FileAccess]::Read);\n                [System.BitConverter]::ToString($sp.ComputeHash($fp)).Replace("-", "").ToLower();\n                $fp.Dispose();\n            }\n            ElseIf (Test-Path -PathType Container \'(None, None, None)\')\n            {\n                Write-Output "3";\n            }\n            Else\n            {\n                Write-Output "1";\n            }\n        '
        str_1 = None
        str_2 = None
        shell_module_0 = module_0.ShellModule()
        var_0 = shell_module_0.remove(str_1, str_2)
        shell_module_1 = module_0.ShellModule()
        str_3 = ''
        shell_module_2 = module_0.ShellModule()
        dict_0 = {str_3: shell_module_0, var_0: shell_module_1}
        int_0 = 3802
        var_1 = shell_module_1.build_module_command(dict_0, int_0, str_3)
        int_1 = -1791
        str_4 = 'hOsF'
        list_0 = [str_4, str_2, str_2, int_1]
        shell_module_3 = module_0.ShellModule()
        list_1 = [str_0, var_0]
        var_2 = shell_module_2.checksum(list_1)
        var_3 = shell_module_3.set_user_facl(int_1, str_4, list_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = 'test_host'
        shell_module_0 = module_0.ShellModule()
        bytes_0 = b'd\x0c\xbf\xd4$:\xb9\xde'
        set_0 = set()
        var_0 = shell_module_0.build_module_command(bytes_0, set_0, str_0)
    except BaseException:
        pass

def test_case_11():
    try:
        shell_module_0 = module_0.ShellModule()
        str_0 = '/'
        var_0 = shell_module_0.path_has_trailing_slash(str_0)
        str_1 = '/tmp/'
        var_1 = shell_module_0.path_has_trailing_slash(str_1)
        var_2 = shell_module_0.path_has_trailing_slash(str_1)
        str_2 = 'c:\\tmp'
        var_3 = shell_module_0.path_has_trailing_slash(str_2)
    except BaseException:
        pass

def test_case_12():
    try:
        shell_module_0 = module_0.ShellModule()
        str_0 = '#!powershell'
        str_1 = 'test.ps1'
        str_2 = 'env_string'
        bool_0 = True
        var_0 = shell_module_0.build_module_command(str_2, str_0, str_1, bool_0)
        str_3 = ';'
        var_1 = module_1.split(str_3)
    except BaseException:
        pass