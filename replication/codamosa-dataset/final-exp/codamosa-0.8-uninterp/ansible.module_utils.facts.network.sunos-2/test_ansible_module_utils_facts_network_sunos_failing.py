# Automatically generated by Pynguin.
import ansible.module_utils.facts.network.sunos as module_0

def test_case_0():
    try:
        str_0 = '9ePZ+X'
        sun_o_s_network_0 = module_0.SunOSNetwork(str_0)
        tuple_0 = (str_0, sun_o_s_network_0)
        str_1 = ']I%?'
        sun_o_s_network_1 = module_0.SunOSNetwork(str_1)
        sun_o_s_network_2 = module_0.SunOSNetwork(sun_o_s_network_1)
        var_0 = sun_o_s_network_2.get_interfaces_info(tuple_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'unable to connect to socket %s. See Troubleshooting socket path issues in the Network Debug and Troubleshooting Guide'
        set_0 = {str_0, str_0, str_0}
        list_0 = [set_0]
        int_0 = 500
        bytes_0 = b'x\xfat\x1b/\xb6Z\xf1\xe2@\xe6n\x98\xcd\xb2\xb3\xbb'
        str_1 = 'somebody cleverly deleted cowsay or something during the PB run.  heh.'
        bytes_1 = b'k w\xa0z\xb4\xa3\xd94PU[=\xfd1c7\xaf'
        sun_o_s_network_0 = module_0.SunOSNetwork(str_1, bytes_1)
        var_0 = sun_o_s_network_0.parse_ether_line(list_0, int_0, bytes_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '1K\\\\'
        sun_o_s_network_collector_0 = module_0.SunOSNetworkCollector()
        tuple_0 = (str_0, str_0)
        str_1 = ''
        list_0 = [str_0, str_1, tuple_0, str_0]
        bytes_0 = b'\x15\xd5\x05Z\xae]y:\xf5\x8c\rb@\x83\xb9'
        bytes_1 = b'\x8e*\xefk\x90[V\xc6h,\x8dk\xa4\xc9y\xff\x94'
        sun_o_s_network_0 = module_0.SunOSNetwork(bytes_1)
        var_0 = sun_o_s_network_0.parse_ether_line(list_0, bytes_0, list_0)
    except BaseException:
        pass

def test_case_3():
    try:
        sun_o_s_network_collector_0 = None
        sun_o_s_network_0 = module_0.SunOSNetwork(sun_o_s_network_collector_0)
        str_0 = '%s must be an all-ascii string.'
        str_1 = ' handler for template operations '
        var_0 = sun_o_s_network_0.parse_interface_line(str_0, str_0, str_1)
    except BaseException:
        pass