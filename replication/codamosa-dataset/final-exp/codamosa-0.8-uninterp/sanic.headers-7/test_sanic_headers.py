# Automatically generated by Pynguin.
import sanic.headers as module_0

def test_case_0():
    pass

def test_case_1():
    str_0 = 'application/json; charset="utf8"'
    tuple_0 = module_0.parse_content_header(str_0)

def test_case_2():
    str_0 = '#WfXPuk($+C1J3*L{!'
    str_1 = module_0.fwd_normalize_address(str_0)
    str_2 = ''
    tuple_0 = module_0.parse_content_header(str_2)

def test_case_3():
    str_0 = '2a fUj%'
    str_1 = module_0.fwd_normalize_address(str_0)
    str_2 = "&w'>[SU"
    str_3 = '_|>$w[r<mz~Ow0]:}P%!'
    str_4 = module_0.fwd_normalize_address(str_3)
    tuple_0 = module_0.parse_host(str_2)
    str_5 = ''
    dict_0 = module_0.fwd_normalize(str_5)

def test_case_4():
    str_0 = '8y,W~<{cd\r \x0b6'
    str_1 = module_0.fwd_normalize_address(str_0)

def test_case_5():
    str_0 = '('
    tuple_0 = module_0.parse_host(str_0)

def test_case_6():
    str_0 = '_send'
    str_1 = module_0.fwd_normalize_address(str_0)
    tuple_0 = module_0.parse_host(str_1)

def test_case_7():
    int_0 = 101
    str_0 = '$47Q:NBeEM\t'
    str_1 = '_send'
    str_2 = module_0.fwd_normalize_address(str_1)
    str_3 = module_0.fwd_normalize_address(str_0)
    list_0 = []
    bytes_0 = module_0.format_http1_response(int_0, list_0)

def test_case_8():
    str_0 = 'WebSocketConnection'
    tuple_0 = module_0.parse_host(str_0)

def test_case_9():
    str_0 = 'x-forwarded-for'
    str_1 = {str_0: str_0}
    str_2 = ''
    var_0 = ()
    str_3 = 'PROXIES_COUNT'
    str_4 = 'REAL_IP_HEADER'
    int_0 = 0
    var_1 = {str_3: int_0, str_4: str_0, str_4: str_0}
    var_2 = type(str_2, var_0, var_1)
    optional_0 = module_0.parse_xforwarded(str_1, var_2)

def test_case_10():
    str_0 = 'q#c>S,_|/I`7gb9Z3'
    tuple_0 = module_0.parse_host(str_0)
    str_1 = '192.168.0.1, 127.0.0.1'
    str_2 = {}
    tuple_1 = module_0.parse_content_header(str_1)
    var_0 = ()
    tuple_2 = module_0.parse_host(str_0)
    str_3 = 'PROXIES_COUNT'
    str_4 = 'FORWARDED_FOR_HEADER'
    str_5 = 'REAL_IP_HEADER'
    int_0 = 0
    var_1 = {str_3: int_0, str_4: str_2, str_5: str_2}
    var_2 = type(str_0, var_0, var_1)
    optional_0 = module_0.parse_xforwarded(str_2, var_2)

def test_case_11():
    str_0 = 'form-data; name=upload; filename="file.txt"'
    tuple_0 = module_0.parse_content_header(str_0)

def test_case_12():
    str_0 = '[::1]:8080'
    tuple_0 = module_0.parse_host(str_0)

def test_case_13():
    str_0 = 'by'
    str_1 = '1.1.1.1'
    str_2 = (str_0, str_1)
    str_3 = [str_2]
    dict_0 = module_0.fwd_normalize(str_3)
    str_4 = 'for'
    str_5 = (str_4, str_1)
    str_6 = [str_5]
    dict_1 = module_0.fwd_normalize(str_6)
    str_7 = (str_0, str_1)
    str_8 = '2.2.2.2'
    str_9 = (str_4, str_8)
    str_10 = [str_7, str_9]
    dict_2 = module_0.fwd_normalize(str_10)
    str_11 = (str_0, str_1)
    str_12 = (str_4, str_8)
    str_13 = 'proto'
    str_14 = 'tcp'
    str_15 = (str_13, str_14)
    str_16 = [str_11, str_12, str_15]
    dict_3 = module_0.fwd_normalize(str_16)