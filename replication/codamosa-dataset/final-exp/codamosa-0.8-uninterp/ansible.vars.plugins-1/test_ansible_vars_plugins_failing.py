# Automatically generated by Pynguin.
import ansible.vars.plugins as module_0
import ansible.inventory.host as module_1

def test_case_0():
    try:
        str_0 = 'HTTPSHakndler'
        var_0 = module_0.get_vars_from_inventory_sources(str_0, str_0, str_0, str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'KdYSZv'
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
        int_0 = -2506
        var_0 = module_0.get_plugin_vars(dict_0, int_0, str_0, str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bool_0 = False
        int_0 = 5986
        str_0 = '\x0bvU`vmY4"V'
        tuple_0 = ()
        bytes_0 = b''
        var_0 = module_0.get_plugin_vars(int_0, str_0, tuple_0, bytes_0)
        str_1 = 'సంకేతపదము'
        tuple_1 = None
        var_1 = module_0.get_plugin_vars(bool_0, str_1, bytes_0, tuple_1)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '8Mn1-!(n"=\'Sy0f'
        bool_0 = True
        float_0 = -1132.3648
        var_0 = module_0.get_plugin_vars(str_0, bool_0, float_0, float_0)
    except BaseException:
        pass

def test_case_4():
    try:
        tuple_0 = ()
        str_0 = 'ho,n)i+2\x0c'
        dict_0 = None
        bytes_0 = None
        bool_0 = True
        var_0 = module_0.get_plugin_vars(dict_0, bytes_0, bool_0, tuple_0)
        int_0 = None
        set_0 = {str_0, str_0, str_0}
        tuple_1 = ()
        var_1 = module_0.get_vars_from_inventory_sources(int_0, set_0, int_0, tuple_1)
        str_1 = 'KxBu,+ge'
        float_0 = 1308.6775841129295
        int_1 = 4881
        str_2 = '/'
        var_2 = module_0.get_vars_from_inventory_sources(int_1, str_2, float_0, str_1)
    except BaseException:
        pass

def test_case_5():
    try:
        bytes_0 = None
        dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
        str_0 = 'x557P/4 d'
        float_0 = -1.428628
        var_0 = module_0.get_vars_from_inventory_sources(dict_0, dict_0, str_0, float_0)
        str_1 = 'close_fds'
        bytes_1 = b'E\x00\n\xdb\x82)y\xf9'
        list_0 = [str_1, bytes_1]
        var_1 = module_0.get_vars_from_inventory_sources(str_1, bytes_1, bytes_1, list_0)
    except BaseException:
        pass

def test_case_6():
    try:
        dict_0 = None
        dict_1 = {dict_0: dict_0}
        float_0 = -140.0
        host_0 = module_1.Host(dict_1)
        list_0 = [host_0, dict_1]
        bytes_0 = b'\xaa\x88$E\xbfG\\\xa3\xd1\xb5\xd4n\x91'
        var_0 = module_0.get_vars_from_path(dict_1, float_0, list_0, bytes_0)
    except BaseException:
        pass