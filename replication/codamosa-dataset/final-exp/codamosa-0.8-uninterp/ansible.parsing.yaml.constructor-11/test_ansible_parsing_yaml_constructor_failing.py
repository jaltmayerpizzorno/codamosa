# Automatically generated by Pynguin.
import ansible.parsing.yaml.constructor as module_0
import ansible.parsing.yaml.objects as module_1
import yaml.nodes as module_2

def test_case_0():
    try:
        ansible_constructor_0 = module_0.AnsibleConstructor()
        float_0 = 2.0
        var_0 = ansible_constructor_0.construct_mapping(float_0, float_0)
    except BaseException:
        pass

def test_case_1():
    try:
        float_0 = 953.0
        bytes_0 = b'\xda\xe9\xca\x8e\xde\xfe \xeeXo\xa5\xcam\xae\xc3\x02G'
        ansible_constructor_0 = module_0.AnsibleConstructor(bytes_0)
        ansible_constructor_1 = module_0.AnsibleConstructor(ansible_constructor_0)
        var_0 = ansible_constructor_1.construct_yaml_str(float_0)
    except BaseException:
        pass

def test_case_2():
    try:
        ansible_constructor_0 = module_0.AnsibleConstructor()
        str_0 = 'c8X>Jz._X'
        var_0 = ansible_constructor_0.construct_vault_encrypted_unicode(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '2'
        ansible_constructor_0 = module_0.AnsibleConstructor()
        var_0 = ansible_constructor_0.construct_yaml_unsafe(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        bool_0 = False
        str_0 = '\r?7%.rT{]XWT< '
        str_1 = "g^|Mq'|@M0,];i"
        list_0 = [bool_0]
        ansible_constructor_0 = module_0.AnsibleConstructor(list_0)
        ansible_constructor_1 = module_0.AnsibleConstructor(str_1, ansible_constructor_0)
        var_0 = ansible_constructor_1.construct_mapping(str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'compressedraw'
        ansible_vault_encrypted_unicode_0 = module_1.AnsibleVaultEncryptedUnicode(str_0)
        mapping_node_0 = module_2.MappingNode(str_0, ansible_vault_encrypted_unicode_0)
        ansible_constructor_0 = module_0.AnsibleConstructor()
        var_0 = ansible_constructor_0.construct_yaml_unsafe(mapping_node_0)
    except BaseException:
        pass

def test_case_6():
    try:
        dict_0 = {}
        list_0 = []
        str_0 = 'ER[*V8/'
        str_1 = 'n/?'
        dict_1 = {str_0: list_0, str_0: str_0, str_1: str_1, str_0: str_1}
        ansible_constructor_0 = module_0.AnsibleConstructor(list_0, dict_1)
        var_0 = ansible_constructor_0.construct_yaml_seq(dict_0)
        ansible_constructor_1 = None
        mapping_node_0 = module_2.MappingNode(ansible_constructor_1, list_0)
        float_0 = -1621.1504327253826
        dict_2 = {float_0: float_0}
        ansible_constructor_2 = module_0.AnsibleConstructor(dict_2)
        var_1 = ansible_constructor_2.construct_yaml_unsafe(mapping_node_0)
    except BaseException:
        pass

def test_case_7():
    try:
        dict_0 = {}
        list_0 = []
        str_0 = 'ESR[*V8/'
        str_1 = 'n/?'
        dict_1 = {str_0: list_0, str_0: str_0, str_1: str_1, str_0: str_1}
        ansible_constructor_0 = module_0.AnsibleConstructor(list_0, dict_1)
        var_0 = ansible_constructor_0.construct_yaml_seq(dict_0)
        ansible_constructor_1 = None
        list_1 = [var_0, ansible_constructor_1, ansible_constructor_1, ansible_constructor_1]
        mapping_node_0 = module_2.MappingNode(ansible_constructor_1, list_1)
        ansible_constructor_2 = module_0.AnsibleConstructor(dict_0)
        var_1 = ansible_constructor_2.construct_yaml_unsafe(mapping_node_0)
    except BaseException:
        pass