# Automatically generated by Pynguin.
import ansible.playbook.role.include as module_0
import ansible.parsing.yaml.objects as module_1

def test_case_0():
    try:
        role_include_0 = module_0.RoleInclude()
        var_0 = role_include_0.load(role_include_0, role_include_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '`F>Pr1yF.lqU193XN'
        list_0 = []
        bytes_0 = b'b\x89\x01m.\xd9/\xe2\xd2\x08H\xf3\x9a\n'
        role_include_0 = module_0.RoleInclude(bytes_0)
        var_0 = role_include_0.load(str_0, list_0, str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'p'
        role_include_0 = module_0.RoleInclude()
        ansible_base_y_a_m_l_object_0 = module_1.AnsibleBaseYAMLObject()
        bool_0 = False
        int_0 = -355
        list_0 = [bool_0]
        var_0 = role_include_0.load(ansible_base_y_a_m_l_object_0, bool_0, int_0, str_0, list_0)
    except BaseException:
        pass

def test_case_3():
    try:
        int_0 = -1204
        dict_0 = {int_0: int_0}
        str_0 = 'GtDTrZ$IxmN_ '
        str_1 = 'vars_prompt'
        str_2 = '*2\njKvmeiB=Z%3o|J'
        str_3 = 'sjG<*v;p~^S $Z0zu'
        role_include_0 = module_0.RoleInclude(str_2, str_3)
        bool_0 = False
        tuple_0 = (bool_0,)
        role_include_1 = module_0.RoleInclude(str_1, tuple_0)
        role_include_2 = module_0.RoleInclude(int_0, dict_0, str_0, int_0)
        bytes_0 = b'\xc4L\xcf\xa7t\x8f\x97A\xf1J\xa9`\xd5\xb6{'
        str_4 = 'di`l'
        var_0 = role_include_1.load(dict_0, bytes_0, str_4)
    except BaseException:
        pass

def test_case_4():
    try:
        dict_0 = {}
        bool_0 = False
        int_0 = 1545
        role_include_0 = module_0.RoleInclude(bool_0, int_0)
        str_0 = '\n- name: Copy file with owner and permissions\n  ansible.builtin.copy:\n    src: /srv/myfiles/foo.conf\n    dest: /etc/foo.conf\n    owner: foo\n    group: foo\n    mode: \'0644\'\n\n- name: Copy file with owner and permission, using symbolic representation\n  ansible.builtin.copy:\n    src: /srv/myfiles/foo.conf\n    dest: /etc/foo.conf\n    owner: foo\n    group: foo\n    mode: u=rw,g=r,o=r\n\n- name: Another symbolic mode example, adding some permissions and removing others\n  ansible.builtin.copy:\n    src: /srv/myfiles/foo.conf\n    dest: /etc/foo.conf\n    owner: foo\n    group: foo\n    mode: u+rw,g-wx,o-rwx\n\n- name: Copy a new "ntp.conf" file into place, backing up the original if it differs from the copied version\n  ansible.builtin.copy:\n    src: /mine/ntp.conf\n    dest: /etc/ntp.conf\n    owner: root\n    group: root\n    mode: \'0644\'\n    backup: yes\n\n- name: Copy a new "sudoers" file into place, after passing validation with visudo\n  ansible.builtin.copy:\n    src: /mine/sudoers\n    dest: /etc/sudoers\n    validate: /usr/sbin/visudo -csf %s\n\n- name: Copy a "sudoers" file on the remote machine for editing\n  ansible.builtin.copy:\n    src: /etc/sudoers\n    dest: /etc/sudoers.edit\n    remote_src: yes\n    validate: /usr/sbin/visudo -csf %s\n\n- name: Copy using inline content\n  ansible.builtin.copy:\n    content: \'# This file was moved to /etc/other.conf\'\n    dest: /etc/mine.conf\n\n- name: If follow=yes, /path/to/file will be overwritten by contents of foo.conf\n  ansible.builtin.copy:\n    src: /etc/foo.conf\n    dest: /path/to/link  # link to /path/to/file\n    follow: yes\n\n- name: If follow=no, /path/to/link will become a file and be overwritten by contents of foo.conf\n  ansible.builtin.copy:\n    src: /etc/foo.conf\n    dest: /path/to/link  # link to /path/to/file\n    follow: no\n'
        list_0 = None
        tuple_0 = (role_include_0, list_0, dict_0)
        var_0 = role_include_0.load(str_0, tuple_0, dict_0)
    except BaseException:
        pass