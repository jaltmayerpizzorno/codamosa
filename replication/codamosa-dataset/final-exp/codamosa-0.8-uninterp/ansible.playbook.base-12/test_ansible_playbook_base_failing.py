# Automatically generated by Pynguin.
import ansible.playbook.base as module_0
import ansible.playbook.attribute as module_1

def test_case_0():
    try:
        field_attribute_base_0 = module_0.FieldAttributeBase()
        bytes_0 = b'\xc0\xf1r\xe2Tmb\x9b\\\xe2'
        var_0 = field_attribute_base_0.validate(bytes_0)
        var_1 = field_attribute_base_0.load_data(field_attribute_base_0)
    except BaseException:
        pass

def test_case_1():
    try:
        field_attribute_base_0 = module_0.FieldAttributeBase()
        str_0 = 'name_1'
        str_1 = 'string'
        str_2 = 'placeholder'
        bool_0 = True
        field_attribute_0 = module_1.FieldAttribute(str_1, str_2, bool_0)
        str_3 = 'value'
        var_0 = field_attribute_base_0.dump_attrs()
        var_1 = None
        var_2 = field_attribute_base_0.get_validated_value(str_0, field_attribute_0, str_3, var_1)
        str_4 = 'name_2'
        str_5 = 'G?dint'
        int_0 = 99
        field_attribute_1 = module_1.FieldAttribute(str_5, int_0, bool_0)
        str_6 = '123'
        var_3 = field_attribute_base_0.get_validated_value(str_4, field_attribute_1, str_6, var_1)
        list_0 = None
        var_4 = field_attribute_base_0.load_data(list_0, list_0)
    except BaseException:
        pass

def test_case_2():
    try:
        int_0 = 820
        list_0 = []
        bytes_0 = b''
        tuple_0 = (list_0, int_0, bytes_0)
        field_attribute_base_0 = module_0.FieldAttributeBase()
        var_0 = field_attribute_base_0.get_ds()
        field_attribute_base_1 = module_0.FieldAttributeBase()
        var_1 = field_attribute_base_1.load_data(int_0, tuple_0, field_attribute_base_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '[[&\nWK'
        field_attribute_base_0 = module_0.FieldAttributeBase()
        field_attribute_base_1 = module_0.FieldAttributeBase()
        var_0 = field_attribute_base_1.load_data(str_0, field_attribute_base_0)
    except BaseException:
        pass

def test_case_4():
    try:
        dict_0 = None
        field_attribute_base_0 = module_0.FieldAttributeBase()
        var_0 = field_attribute_base_0.post_validate(dict_0)
    except BaseException:
        pass

def test_case_5():
    try:
        field_attribute_base_0 = module_0.FieldAttributeBase()
        var_0 = field_attribute_base_0.get_ds()
        bytes_0 = None
        var_1 = field_attribute_base_0.from_attrs(bytes_0)
    except BaseException:
        pass

def test_case_6():
    try:
        field_attribute_base_0 = module_0.FieldAttributeBase()
        tuple_0 = ()
        var_0 = field_attribute_base_0.preprocess_data(tuple_0)
        var_1 = field_attribute_base_0.squash()
        base_0 = module_0.Base()
        var_2 = base_0.get_search_path()
        float_0 = -308.65
        var_3 = field_attribute_base_0.deserialize(float_0)
    except BaseException:
        pass

def test_case_7():
    try:
        field_attribute_base_0 = module_0.FieldAttributeBase()
        var_0 = field_attribute_base_0.get_loader()
        var_1 = field_attribute_base_0.dump_attrs()
        str_0 = ',hU28s<'
        str_1 = 'string'
        bool_0 = False
        field_attribute_0 = module_1.FieldAttribute(str_1, str_1, bool_0)
        str_2 = 'vlue'
        var_2 = field_attribute_base_0.get_ds()
        var_3 = None
        str_3 = '\nH'
        var_4 = field_attribute_base_0.squash()
        int_0 = 99
        field_attribute_1 = module_1.FieldAttribute(str_3, int_0, bool_0)
        var_5 = field_attribute_base_0.get_validated_value(str_1, field_attribute_1, str_2, var_3)
        var_6 = field_attribute_base_0.dump_attrs()
        list_0 = [str_0]
        var_7 = field_attribute_base_0.dump_me(list_0)
    except BaseException:
        pass

def test_case_8():
    try:
        field_attribute_base_0 = module_0.FieldAttributeBase()
        list_0 = []
        var_0 = field_attribute_base_0.load_data(list_0)
        var_1 = field_attribute_base_0.get_ds()
        var_2 = field_attribute_base_0.dump_me()
        var_3 = field_attribute_base_0.copy()
        var_4 = field_attribute_base_0.get_variable_manager()
        str_0 = 'tL,@3_>&"'
        dict_0 = {str_0: var_3, str_0: var_3}
        base_meta_0 = module_0.BaseMeta(**dict_0)
    except BaseException:
        pass

def test_case_9():
    try:
        field_attribute_base_0 = module_0.FieldAttributeBase()
        str_0 = 'string'
        bool_0 = True
        field_attribute_0 = module_1.FieldAttribute(str_0, str_0, bool_0)
        str_1 = 'value'
        var_0 = None
        var_1 = field_attribute_base_0.get_validated_value(str_1, field_attribute_0, str_1, var_0)
        str_2 = 'G?dint'
        int_0 = 99
        field_attribute_1 = module_1.FieldAttribute(str_2, int_0, bool_0)
        var_2 = field_attribute_base_0.get_validated_value(str_2, field_attribute_1, str_2, var_0)
        base_meta_0 = module_0.BaseMeta()
    except BaseException:
        pass

def test_case_10():
    try:
        field_attribute_base_0 = module_0.FieldAttributeBase()
        var_0 = field_attribute_base_0.dump_attrs()
        field_attribute_base_1 = module_0.FieldAttributeBase()
        str_0 = '_valid_attrs'
        var_1 = vars(field_attribute_base_1)
        var_2 = setattr(field_attribute_base_1, str_0, var_1)
        var_3 = field_attribute_base_1.copy()
    except BaseException:
        pass