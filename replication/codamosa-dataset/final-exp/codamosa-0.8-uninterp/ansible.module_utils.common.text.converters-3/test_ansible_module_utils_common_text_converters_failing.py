# Automatically generated by Pynguin.
import ansible.module_utils.common.text.converters as module_0

def test_case_0():
    try:
        int_0 = None
        tuple_0 = ()
        var_0 = module_0.to_bytes(int_0, tuple_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'simplerepr'
        var_0 = module_0.to_text(str_0, str_0, str_0, str_0)
        str_1 = 'pssth\tru'
        int_0 = 12
        var_1 = module_0.to_text(int_0, str_0, var_0, str_0)
        var_2 = module_0.to_text(int_0, str_1, var_1, str_1)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '\x0b2kb]oxu1{BeFV$'
        str_1 = 'G(!`<7%to\r&w]Qe^l\\'
        dict_0 = {str_0: str_0, str_1: str_0}
        list_0 = []
        var_0 = module_0.container_to_bytes(dict_0, list_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '\x0c'
        str_1 = '#k|^SqZ"Nb~ds[\\'
        list_0 = [str_0, str_0, str_1]
        bool_0 = None
        var_0 = module_0.container_to_text(list_0, bool_0)
        dict_0 = {str_0: str_0, str_1: str_1}
        list_1 = [dict_0, str_0]
        bytes_0 = b'\xdf;'
        var_1 = module_0.container_to_bytes(list_1, bytes_0)
    except BaseException:
        pass

def test_case_4():
    try:
        dict_0 = None
        dict_1 = {dict_0: dict_0, dict_0: dict_0}
        var_0 = module_0.container_to_bytes(dict_1)
        var_1 = module_0.to_bytes(dict_1)
        var_2 = module_0.to_text(dict_1)
        set_0 = {var_1}
        var_3 = module_0.jsonify(set_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = '\x0b#j\n5LKBnA'
        dict_0 = None
        float_0 = 1980.512745
        list_0 = [str_0, str_0, dict_0, float_0]
        var_0 = module_0.container_to_bytes(list_0)
        dict_1 = {dict_0: dict_0, dict_0: dict_0}
        var_1 = module_0.to_bytes(dict_1)
        var_2 = module_0.jsonify(dict_1)
        set_0 = {var_1}
        var_3 = module_0.jsonify(set_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = '#UyJ6,'
        bytes_0 = b'Ft\x1c-\x81\x9e\xa8\xb5\xe9\xfa\x94_\x8dp'
        dict_0 = {str_0: bytes_0, str_0: bytes_0, str_0: str_0}
        var_0 = module_0.to_bytes(bytes_0, dict_0)
        float_0 = 1424.9
        var_1 = module_0.jsonify(float_0)
        str_1 = 'Ta.cN2!VO'
        var_2 = module_0.to_text(float_0, str_1)
        list_0 = []
        var_3 = module_0.container_to_text(list_0)
        bool_0 = True
        var_4 = module_0.to_text(dict_0, float_0, bool_0, list_0)
    except BaseException:
        pass

def test_case_7():
    try:
        bytes_0 = b'Ft\x1c-\x81\x9e\xa8\xb5\xe9\xfa\x94_\x8dp'
        float_0 = 1424.9790533965183
        var_0 = module_0.jsonify(float_0)
        dict_0 = None
        dict_1 = {dict_0: dict_0}
        var_1 = module_0.to_bytes(dict_1)
        tuple_0 = ()
        var_2 = module_0.to_text(dict_1)
        var_3 = module_0.to_bytes(tuple_0, float_0, bytes_0, dict_1)
    except BaseException:
        pass

def test_case_8():
    try:
        dict_0 = None
        dict_1 = {dict_0: dict_0, dict_0: dict_0}
        var_0 = module_0.to_bytes(dict_1)
        var_1 = module_0.to_text(dict_1)
        set_0 = {var_0}
        var_2 = module_0.jsonify(set_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'test'
        var_0 = module_0.to_bytes(str_0)
        bytes_0 = b'test'
        var_1 = module_0.to_bytes(bytes_0)
        int_0 = 55296
        var_2 = chr(int_0)
        var_3 = str_0 + var_2
        var_4 = module_0.to_bytes(var_3)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = 'abc'
        str_1 = 'utf-8'
        var_0 = None
        str_2 = 'simplerepr'
        var_1 = module_0.to_text(str_0, str_1, var_0, str_2)
        var_2 = module_0.to_text(str_0, str_1, var_0, str_2)
        str_3 = 'strict'
        var_3 = module_0.to_text(str_0, str_1, var_0, str_3)
        var_4 = module_0.to_text(str_0, str_1, var_0, str_3)
        int_0 = 12
        var_5 = module_0.to_text(int_0, str_1, var_0, str_2)
        var_6 = module_0.to_text(int_0, str_1, var_0, str_2)
        var_7 = module_0.to_text(int_0, str_1, var_0, str_3)
    except BaseException:
        pass