# Automatically generated by Pynguin.
import youtube_dl.aes as module_0
import youtube_dl.utils as module_1

def test_case_0():
    try:
        list_0 = []
        str_0 = 'RLf\\]PYz}p:\\+M">Tq[3'
        set_0 = {str_0}
        var_0 = module_0.aes_cbc_decrypt(str_0, list_0, set_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = b'\xde\x0e9\xe7\x90\xa4WT\\\xd0\x1f\t\xbd0\\\xea='
        str_0 = '#{("b+ni_$wS'
        dict_0 = {}
        var_0 = module_0.aes_cbc_encrypt(bytes_0, str_0, dict_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b'n\xa0\x86'
        var_0 = module_0.key_expansion(bytes_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '!d6~eYns] LNRX[^9P@'
        var_0 = module_0.shift_rows(str_0)
        str_1 = '74%f.q*'
        var_1 = module_0.aes_decrypt(str_1, str_1)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = '音悦Tai'
        var_0 = module_0.rotate(str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = '0001020304050607080900b0c0d0e0f'
        var_0 = module_1.bytes_to_intlist(str_0)
        var_1 = module_0.key_expansion(var_0)
    except BaseException:
        pass

def test_case_6():
    try:
        set_0 = set()
        var_0 = module_0.mix_columns_inv(set_0)
    except BaseException:
        pass

def test_case_7():
    try:
        bytes_0 = b'D 3\x8b\x0e\x94y'
        var_0 = module_0.inc(bytes_0)
    except BaseException:
        pass

def test_case_8():
    try:
        bool_0 = False
        int_0 = None
        var_0 = module_0.rijndael_mul(bool_0, int_0)
        str_0 = '\\'
        dict_0 = {bool_0: str_0, bool_0: int_0}
        list_0 = [var_0, bool_0, var_0, var_0, bool_0]
        tuple_0 = (bool_0, str_0, list_0)
        var_1 = module_0.aes_cbc_decrypt(dict_0, list_0, tuple_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = '00020050607080900bc0e0e0'
        var_0 = module_1.bytes_to_intlist(str_0)
        var_1 = module_0.key_expansion(var_0)
    except BaseException:
        pass