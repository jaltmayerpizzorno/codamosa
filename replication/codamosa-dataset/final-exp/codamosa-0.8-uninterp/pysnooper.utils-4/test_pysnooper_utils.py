# Automatically generated by Pynguin.
import pysnooper.utils as module_0

def test_case_0():
    pass

def test_case_1():
    str_0 = None
    var_0 = module_0.get_shortish_repr(str_0)

def test_case_2():
    str_0 = 'm'
    var_0 = module_0.normalize_repr(str_0)

def test_case_3():
    bytes_0 = b'Q\xb0M\xa6/'
    var_0 = module_0.ensure_tuple(bytes_0)

def test_case_4():
    int_0 = 26
    var_0 = module_0.ensure_tuple(int_0)

def test_case_5():
    str_0 = 'abc'
    var_0 = module_0.shitcode(str_0)
    str_1 = 'ab\x7f'
    var_1 = module_0.shitcode(str_1)

def test_case_6():
    bool_0 = False
    str_0 = '.'
    var_0 = module_0.normalize_repr(str_0)
    bytes_0 = b'n(+F\x1a\xb6'
    writable_stream_0 = None
    list_0 = []
    var_1 = module_0.get_repr_function(writable_stream_0, list_0)
    var_2 = module_0.ensure_tuple(bool_0)
    list_1 = [var_1, bytes_0]
    var_3 = module_0.get_shortish_repr(list_1)
    var_4 = module_0.shitcode(var_3)
    var_5 = module_0.ensure_tuple(bytes_0)
    tuple_0 = (list_1, bytes_0)
    var_6 = module_0.get_repr_function(bytes_0, tuple_0)

def test_case_7():
    str_0 = '\x00\x01\x02\x03\x04'
    var_0 = module_0.shitcode(str_0)
    str_1 = '\x07'
    var_1 = module_0.shitcode(str_1)
    str_2 = '\x08'
    var_2 = module_0.shitcode(str_2)
    str_3 = '\x0e'
    var_3 = module_0.shitcode(str_3)
    var_4 = module_0.shitcode(str_0)
    str_4 = '\x10'
    var_5 = module_0.shitcode(str_4)

def test_case_8():
    str_0 = 'Më⌁no'
    var_0 = module_0.shitcode(str_0)
    str_1 = '\x00\x01\x02\x03\x04'
    var_1 = module_0.shitcode(str_1)
    str_2 = '\x07'
    var_2 = module_0.shitcode(str_2)
    str_3 = '\x08'
    var_3 = module_0.shitcode(str_3)
    str_4 = '\x0e'
    var_4 = module_0.shitcode(str_4)
    str_5 = '\x0f'
    var_5 = module_0.shitcode(str_5)

def test_case_9():
    str_0 = '.'
    var_0 = module_0.normalize_repr(str_0)
    bytes_0 = b'n\xe3F\x1a\xb6:'
    writable_stream_0 = None
    list_0 = []
    var_1 = module_0.get_repr_function(writable_stream_0, list_0)
    list_1 = [var_1, bytes_0]
    var_2 = module_0.get_shortish_repr(list_1)
    tuple_0 = (list_1, bytes_0)
    dict_0 = {}
    var_3 = module_0.get_shortish_repr(dict_0, tuple_0)