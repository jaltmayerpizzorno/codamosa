# Automatically generated by Pynguin.
import pymonet.either as module_0
import builtins as module_1

def test_case_0():
    pass

def test_case_1():
    var_0 = None
    right_0 = module_0.Right(var_0)

def test_case_2():
    list_0 = []
    object_0 = module_1.object(*list_0)
    str_0 = "RT\rOU^=N'bL"
    right_0 = module_0.Right(str_0)
    either_0 = module_0.Either(right_0)
    bool_0 = either_0.__eq__(object_0)

def test_case_3():
    str_0 = '4B'
    float_0 = 2139.83923
    object_0 = module_1.object()
    left_0 = module_0.Left(object_0)
    list_0 = [str_0, float_0, str_0, left_0]
    either_0 = module_0.Either(list_0)
    var_0 = either_0.to_lazy()
    either_1 = module_0.Either(str_0)
    var_1 = either_1.to_try()
    var_2 = None
    either_2 = module_0.Either(var_2)
    right_0 = module_0.Right(var_2)
    var_3 = right_0.to_validation()
    var_4 = either_2.to_lazy()
    right_1 = module_0.Right(var_2)
    var_5 = right_1.to_validation()
    either_3 = module_0.Either(var_2)
    var_6 = right_1.to_validation()

def test_case_4():
    bytes_0 = None
    list_0 = None
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, list_0: bytes_0}
    bytes_1 = b'\x135ZF\xf9\xcb\xe0\xce\x88\xe7n\xd67\xce'
    right_0 = module_0.Right(bytes_1)
    var_0 = right_0.to_maybe()
    bool_0 = right_0.is_left()
    left_0 = module_0.Left(dict_0)
    bool_1 = left_0.is_left()

def test_case_5():
    int_0 = 1
    left_0 = module_0.Left(int_0)
    right_0 = module_0.Right(int_0)
    left_1 = module_0.Left(int_0)
    right_1 = module_0.Right(int_0)
    var_0 = left_1 == right_1
    int_1 = -1494
    right_2 = module_0.Right(int_1)

def test_case_6():
    str_0 = '#HFF_M\riNx'
    right_0 = module_0.Right(str_0)
    bool_0 = right_0.is_left()

def test_case_7():
    int_0 = -1
    left_0 = module_0.Left(int_0)
    var_0 = lambda x: x
    var_1 = lambda x: x
    var_2 = left_0.case(var_0, var_1)
    int_1 = 1
    right_0 = module_0.Right(int_1)
    var_3 = lambda x: x
    var_4 = lambda x: x
    var_5 = right_0.case(var_3, var_4)

def test_case_8():
    str_0 = 'value'
    left_0 = module_0.Left(str_0)
    right_0 = module_0.Right(str_0)
    left_1 = module_0.Left(str_0)
    right_1 = module_0.Right(str_0)
    str_1 = 'other value'
    left_2 = module_0.Left(str_1)
    right_2 = module_0.Right(str_1)
    var_0 = left_0 == left_0
    var_1 = left_0 == right_0
    var_2 = left_0 == left_1
    var_3 = left_0 == left_2
    var_4 = right_0 == left_0
    var_5 = right_0 == right_0
    var_6 = right_0 == right_1
    var_7 = right_0 == var_0
    var_8 = right_0