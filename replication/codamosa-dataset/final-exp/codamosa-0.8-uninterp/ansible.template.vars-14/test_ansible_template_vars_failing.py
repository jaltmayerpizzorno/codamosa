# Automatically generated by Pynguin.
import ansible.template.vars as module_0

def test_case_0():
    try:
        tuple_0 = ()
        ansible_j2_vars_0 = module_0.AnsibleJ2Vars(tuple_0, tuple_0)
        var_0 = ansible_j2_vars_0.__contains__(tuple_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bool_0 = True
        bytes_0 = b'.'
        int_0 = 1012
        set_0 = {bool_0, int_0, bool_0}
        tuple_0 = (set_0,)
        ansible_j2_vars_0 = module_0.AnsibleJ2Vars(int_0, tuple_0)
        ansible_j2_vars_1 = module_0.AnsibleJ2Vars(bool_0, bytes_0, ansible_j2_vars_0)
        var_0 = ansible_j2_vars_1.__iter__()
    except BaseException:
        pass

def test_case_2():
    try:
        float_0 = -770.8112
        set_0 = {float_0}
        dict_0 = {float_0: float_0, float_0: set_0}
        ansible_j2_vars_0 = module_0.AnsibleJ2Vars(dict_0, float_0)
        var_0 = ansible_j2_vars_0.__len__()
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = ''
        tuple_0 = (str_0,)
        float_0 = 1072.606
        ansible_j2_vars_0 = module_0.AnsibleJ2Vars(str_0, float_0)
        var_0 = ansible_j2_vars_0.__getitem__(tuple_0)
    except BaseException:
        pass

def test_case_4():
    try:
        int_0 = None
        int_1 = -225
        int_2 = 86
        ansible_j2_vars_0 = module_0.AnsibleJ2Vars(int_1, int_2)
        var_0 = ansible_j2_vars_0.add_locals(int_0)
        str_0 = '\\R[_%n6$Wd1;19 '
        var_1 = ansible_j2_vars_0.__getitem__(str_0)
    except BaseException:
        pass