# Automatically generated by Pynguin.
import ansible.module_utils.common.text.converters as module_0

def test_case_0():
    try:
        float_0 = 647.05
        dict_0 = {}
        var_0 = module_0.container_to_bytes(float_0)
        tuple_0 = (float_0, dict_0)
        complex_0 = None
        bool_0 = False
        float_1 = -481.0
        var_1 = module_0.to_bytes(tuple_0, complex_0, bool_0, float_1)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '4wRlSI}ji'
        bytes_0 = b'\xc5\xdcb\xc9\xb6\x12p\xd4\xe3\x0b;\xb9\x96\x0c(S\xcd'
        var_0 = module_0.container_to_bytes(str_0, bytes_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'HfVl\tMupf^OP7$3F'
        bytes_0 = b'{\x83\xc8\x18\x000m\n\xdf;\x14\xf0'
        tuple_0 = ()
        dict_0 = {}
        var_0 = module_0.to_bytes(bytes_0, tuple_0, dict_0)
        bool_0 = False
        var_1 = module_0.to_bytes(str_0, bool_0)
    except BaseException:
        pass

def test_case_3():
    try:
        set_0 = set()
        var_0 = module_0.jsonify(set_0)
        float_0 = 647.05
        dict_0 = {}
        var_1 = module_0.container_to_bytes(float_0)
        tuple_0 = (float_0, dict_0)
        complex_0 = None
        bool_0 = False
        float_1 = -481.0
        var_2 = module_0.to_bytes(tuple_0, complex_0, bool_0, float_1)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = " |Wa'/_C2ToHE\x0bYw*xf"
        str_1 = None
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_1: str_0}
        int_0 = 2316
        bool_0 = True
        var_0 = module_0.container_to_text(dict_0, int_0, bool_0)
        list_0 = [int_0]
        float_0 = None
        tuple_0 = (float_0,)
        var_1 = module_0.container_to_bytes(tuple_0)
        var_2 = module_0.jsonify(list_0, **dict_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'thisis a unicode string'
        var_0 = module_0.to_text(str_0)
        bytes_0 = b'this is a byte string'
        int_0 = -1788
        dict_0 = {var_0: var_0}
        bool_0 = False
        var_1 = module_0.to_text(int_0, dict_0, bool_0, bytes_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'Hello'
        str_1 = 'passthru'
        dict_0 = {str_0: str_0, str_0: str_1, str_1: str_0}
        var_0 = module_0.container_to_bytes(dict_0)
        str_2 = 'ascii'
        var_1 = module_0.to_bytes(str_0, str_2)
        str_3 = 'ሴ'
        str_4 = 'surrogate_or_replace'
        bool_0 = False
        var_2 = module_0.to_text(bool_0)
        var_3 = module_0.to_bytes(str_3, str_2, str_4)
    except BaseException:
        pass

def test_case_7():
    try:
        dict_0 = None
        str_0 = '0}(\x0b{k;zP+-MDCq|LL ,'
        str_1 = "@\x0crtZTO'"
        dict_1 = {str_0: dict_0, str_0: str_0, str_1: dict_0}
        list_0 = [str_0, str_0, str_1]
        var_0 = module_0.jsonify(list_0, **dict_1)
    except BaseException:
        pass

def test_case_8():
    try:
        bytes_0 = b'\xber\x87\xed\x96\xbb\x84\xde\x91\xb4\x95'
        var_0 = module_0.to_text(bytes_0)
        set_0 = {var_0, bytes_0, var_0}
        var_1 = module_0.jsonify(set_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'Hello'
        str_1 = 'ascii'
        var_0 = module_0.to_bytes(str_0, str_1)
        str_2 = 'ሴ'
        str_3 = 'surrogate_or_replace'
        var_1 = module_0.to_bytes(str_2, str_1, str_3)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = 'strict'
        list_0 = [str_0, str_0, str_0, str_0]
        bool_0 = True
        str_1 = '=8nXBmTrsZ<CH2)%?u"\x0c'
        var_0 = module_0.to_bytes(list_0, bool_0, str_1, str_0)
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = '\ud800\udc00'
        var_0 = module_0.to_bytes(str_0)
    except BaseException:
        pass