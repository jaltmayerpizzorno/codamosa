# Automatically generated by Pynguin.
import ansible.playbook.task as module_0
import ansible.playbook.block as module_1
import ansible.playbook.role as module_2

def test_case_0():
    try:
        dict_0 = {}
        float_0 = 60.0
        task_0 = module_0.Task(dict_0, float_0)
        var_0 = task_0.__repr__()
    except BaseException:
        pass

def test_case_1():
    try:
        task_0 = module_0.Task()
        var_0 = task_0.load(task_0)
    except BaseException:
        pass

def test_case_2():
    try:
        task_0 = module_0.Task()
        dict_0 = {task_0: task_0, task_0: task_0, task_0: task_0, task_0: task_0}
        var_0 = task_0.preprocess_data(dict_0)
    except BaseException:
        pass

def test_case_3():
    try:
        task_0 = module_0.Task()
        var_0 = task_0.post_validate(task_0)
    except BaseException:
        pass

def test_case_4():
    try:
        set_0 = set()
        str_0 = None
        bytes_0 = b'\xd9\xa4\xe5I\xfa\xc2z)\x91\x8d\xc8+\x07\x07\xe3!\xbb\x86\xc9\xd4'
        set_1 = {str_0, str_0, bytes_0}
        list_0 = [set_1, bytes_0, set_1]
        tuple_0 = (set_1, list_0)
        task_0 = module_0.Task(tuple_0)
        var_0 = task_0.post_validate(set_0)
    except BaseException:
        pass

def test_case_5():
    try:
        bool_0 = True
        str_0 = '\noptions:\n  async_dir:\n    description:\n    - Directory in which ansible will keep async job information.\n    - Before Ansible 2.8, this was set to C(remote_tmp + "\\.ansible_async").\n    default: \'%USERPROFILE%\\.ansible_async\'\n    ini:\n    - section: powershell\n      key: async_dir\n    vars:\n    - name: ansible_async_dir\n    version_added: \'2.8\'\n  remote_tmp:\n    description:\n    - Temporary directory to use on targets when copying files to the host.\n    default: \'%TEMP%\'\n    ini:\n    - section: powershell\n      key: remote_tmp\n    vars:\n    - name: ansible_remote_tmp\n  set_module_language:\n    description:\n    - Controls if we set the locale for modules when executing on the\n      target.\n    - Windows only supports C(no) as an option.\n    type: bool\n    default: \'no\'\n    choices: [\'no\', False]\n  environment:\n    description:\n    - List of dictionaries of environment variables and their values to use when\n      executing commands.\n    type: list\n    default: [{}]\n'
        int_0 = -379
        float_0 = 4483.0
        dict_0 = {int_0: int_0, bool_0: str_0}
        task_0 = module_0.Task(dict_0, str_0)
        task_1 = module_0.Task(float_0)
        var_0 = task_1.copy()
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = None
        int_0 = 2707
        task_0 = module_0.Task(str_0, int_0)
        str_1 = ';1X'
        task_1 = module_0.Task()
        var_0 = task_1.copy(task_0, str_1)
        bytes_0 = b'\xa6\xc5x\x84\x08\x8d\xb9\x83ZY\xf3o\x9f\x15\xa4['
        task_2 = module_0.Task()
        bool_0 = False
        dict_0 = {bool_0: bytes_0, task_2: task_2, bool_0: task_2, bool_0: task_2}
        var_1 = task_2.serialize()
        var_2 = task_0.preprocess_data(dict_0)
    except BaseException:
        pass

def test_case_7():
    try:
        tuple_0 = None
        list_0 = [tuple_0, tuple_0, tuple_0, tuple_0]
        str_0 = 'j|hQP\x0b-"'
        int_0 = 3509
        task_0 = module_0.Task(str_0, int_0)
        var_0 = task_0.set_loader(list_0)
    except BaseException:
        pass

def test_case_8():
    try:
        float_0 = -682.32
        task_0 = module_0.Task(float_0)
        var_0 = task_0.all_parents_static()
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = '\n    Unit test for method get_vars of class Task\n    '
        task_0 = module_0.Task(str_0)
        var_0 = task_0.get_first_parent_include()
    except BaseException:
        pass

def test_case_10():
    try:
        float_0 = 3607.97964
        list_0 = [float_0, float_0]
        task_0 = module_0.Task(float_0, list_0)
        int_0 = 1007
        str_0 = "V`M'Xf2;C;L85Y\x0bU"
        task_1 = module_0.Task(str_0)
        task_2 = module_0.Task(task_1)
        var_0 = task_2.copy(int_0)
        float_1 = 3256.00093
        dict_0 = {float_1: float_1, float_1: float_1, float_1: float_1}
        task_3 = module_0.Task(dict_0)
        tuple_0 = ()
        var_1 = task_3.get_name(tuple_0)
        str_1 = '_none_'
        task_4 = module_0.Task()
        var_2 = task_4.deserialize(str_1)
    except BaseException:
        pass

def test_case_11():
    try:
        complex_0 = None
        task_0 = module_0.Task()
        task_1 = module_0.Task(task_0)
        var_0 = task_1.__repr__()
        float_0 = 700.0352235947562
        task_2 = module_0.Task(float_0)
        int_0 = 32600
        var_1 = task_1.get_vars()
        dict_0 = {task_2: int_0, float_0: complex_0}
        task_3 = module_0.Task()
        var_2 = task_3.get_vars()
        var_3 = task_2.deserialize(dict_0)
        task_4 = module_0.Task(int_0)
        var_4 = task_2.__repr__()
        var_5 = task_4.__repr__()
        var_6 = task_2.preprocess_data(dict_0)
    except BaseException:
        pass

def test_case_12():
    try:
        bytes_0 = b'\x1f,\xe0\xac\x91\\\xcdT\xccMF\x8b\x0c\xc7\x98O'
        int_0 = -377
        task_0 = module_0.Task(bytes_0, int_0)
        var_0 = task_0.serialize()
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = None
        int_0 = 2707
        task_0 = module_0.Task(str_0, int_0)
        str_1 = ';1X'
        task_1 = module_0.Task()
        var_0 = task_1.copy(task_0, str_1)
        bytes_0 = b'\xa6\xc5x\x84\x08\x8d\xb9\x83ZY\xf3o\x9f\x15\xa4['
        task_2 = module_0.Task()
        bool_0 = False
        var_1 = task_0.get_first_parent_include()
        dict_0 = {bool_0: bytes_0, task_2: task_2, bool_0: task_2, bool_0: task_2}
        str_2 = 'seen'
        var_2 = task_0.copy(str_2)
        var_3 = task_2.serialize()
        var_4 = task_0.preprocess_data(dict_0)
    except BaseException:
        pass

def test_case_14():
    try:
        task_0 = module_0.Task()
        int_0 = 570
        task_1 = module_0.Task(task_0, int_0)
        var_0 = task_1.get_include_params()
        str_0 = 'b'
        list_0 = [str_0]
        var_1 = task_0.copy(list_0)
        dict_0 = {}
        var_2 = task_1.deserialize(dict_0)
        var_3 = task_1.copy()
        var_4 = task_0.get_first_parent_include()
        task_2 = module_0.Task()
        var_5 = task_1.get_first_parent_include()
        var_6 = task_0.get_first_parent_include()
        float_0 = 60.0
        block_0 = module_1.Block(float_0)
        var_7 = task_1.serialize()
    except BaseException:
        pass

def test_case_15():
    try:
        str_0 = 'O!JVKR%i-'
        set_0 = {str_0}
        bool_0 = True
        int_0 = 598
        task_0 = module_0.Task(bool_0, bool_0, int_0)
        task_1 = module_0.Task(set_0, task_0)
        task_2 = module_0.Task()
        var_0 = task_2.serialize()
        var_1 = task_1.serialize()
    except BaseException:
        pass

def test_case_16():
    try:
        task_0 = module_0.Task()
        str_0 = 'CUSTOM STATS: '
        var_0 = dict(action=str_0, loop=str_0, loop_control=str_0, vars=str_0, when=str_0, tags=str_0, register=str_0, with_items=str_0, notify=str_0, rescue=str_0, always_run=str_0)
        var_1 = task_0.preprocess_data(var_0)
    except BaseException:
        pass

def test_case_17():
    try:
        task_0 = module_0.Task()
        var_0 = task_0.get_first_parent_include()
        task_1 = module_0.Task()
        var_1 = task_0.get_include_params()
        dict_0 = {}
        var_2 = task_0.preprocess_data(dict_0)
    except BaseException:
        pass

def test_case_18():
    try:
        str_0 = 'est'
        task_0 = module_0.Task()
        str_1 = {str_0: str_0, str_0: str_0, str_0: str_0}
        var_0 = dict(action=str_0, loop=str_0, loop_control=str_1, vars=str_1, when=str_1, tags=str_1, register=str_0, with_items=str_0, notify=str_0, rescue=str_0, always_run=str_0)
        var_1 = task_0.preprocess_data(var_0)
    except BaseException:
        pass

def test_case_19():
    try:
        task_0 = module_0.Task()
        str_0 = 'CUSHOMSTATS: '
        var_0 = dict(action=str_0, loop=str_0, loop_control=str_0, vars=str_0, when=str_0, tags=str_0, register=str_0, with_items=str_0, notify=str_0, rescue=str_0, always_run=task_0)
        var_1 = task_0.preprocess_data(var_0)
    except BaseException:
        pass

def test_case_20():
    try:
        complex_0 = None
        task_0 = module_0.Task()
        task_1 = module_0.Task(task_0)
        var_0 = task_1.__repr__()
        float_0 = 700.0352235947562
        task_2 = module_0.Task(float_0)
        int_0 = 32600
        var_1 = task_1.get_vars()
        dict_0 = {task_2: int_0, float_0: complex_0}
        var_2 = task_1.get_vars()
        var_3 = task_0.get_vars()
        var_4 = task_2.deserialize(dict_0)
        task_3 = module_0.Task(int_0)
        var_5 = task_2.__repr__()
        var_6 = task_3.__repr__()
        var_7 = task_2.__repr__()
        var_8 = task_2.serialize()
    except BaseException:
        pass

def test_case_21():
    try:
        bool_0 = False
        task_0 = module_0.Task()
        var_0 = task_0.copy()
        float_0 = 359.122266
        var_1 = task_0.set_loader(float_0)
        var_2 = task_0.copy()
        task_1 = module_0.Task(task_0)
        var_3 = task_1.serialize()
        var_4 = task_1.set_loader(bool_0)
        bytes_0 = b'AOU\xf4\xe3\xd3l\xb4q\x18\x9f\x9d\xa3\\'
        var_5 = task_1.get_name()
        tuple_0 = (bytes_0,)
        var_6 = task_0.get_name()
        var_7 = task_0.deserialize(tuple_0)
    except BaseException:
        pass

def test_case_22():
    try:
        float_0 = 3211.559176
        block_0 = module_1.Block(float_0)
        int_0 = -232
        str_0 = '8'
        task_0 = module_0.Task()
        var_0 = task_0.set_loader(str_0)
        role_0 = module_2.Role(int_0)
        task_1 = module_0.Task(block_0, role_0)
        var_1 = task_1.__repr__()
        tuple_0 = None
        list_0 = [tuple_0, tuple_0, tuple_0, tuple_0]
        str_1 = 'j|hQP\x0b-"'
        int_1 = 3509
        task_2 = module_0.Task(str_1, int_1)
        var_2 = task_2.set_loader(list_0)
    except BaseException:
        pass

def test_case_23():
    try:
        task_0 = module_0.Task()
        str_0 = 'b'
        list_0 = [str_0]
        float_0 = 446.4
        task_1 = module_0.Task(float_0)
        var_0 = task_1.get_name()
        var_1 = task_0.copy(list_0)
        var_2 = task_0.get_first_parent_include()
        var_3 = task_0.serialize()
        var_4 = task_1.__repr__()
        var_5 = task_0.get_vars()
        var_6 = task_0.get_include_params()
        task_2 = module_0.Task()
        var_7 = task_2.preprocess_data(var_3)
    except BaseException:
        pass