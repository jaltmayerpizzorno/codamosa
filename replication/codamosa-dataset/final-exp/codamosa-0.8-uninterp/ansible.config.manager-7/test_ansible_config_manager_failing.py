# Automatically generated by Pynguin.
import ansible.config.manager as module_0

def test_case_0():
    try:
        float_0 = -688.0329
        config_manager_0 = module_0.ConfigManager()
        float_1 = -662.9
        dict_0 = None
        bytes_0 = b'-\xd9K&\x0eH=\x8e"\x8c\xb2'
        bool_0 = False
        var_0 = config_manager_0.get_config_value(float_1, dict_0, float_0, bytes_0, bool_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bool_0 = True
        dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
        int_0 = 2826
        complex_0 = None
        tuple_0 = (bool_0, bool_0, int_0, complex_0)
        config_manager_0 = module_0.ConfigManager()
        var_0 = config_manager_0.get_config_value(bool_0, dict_0, tuple_0)
    except BaseException:
        pass

def test_case_2():
    try:
        int_0 = 1251
        config_manager_0 = module_0.ConfigManager()
        config_manager_1 = module_0.ConfigManager()
        var_0 = config_manager_1.get_config_value(int_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bool_0 = None
        config_manager_0 = module_0.ConfigManager()
        var_0 = config_manager_0.update_config_data()
        set_0 = {bool_0, bool_0, config_manager_0, bool_0}
        var_1 = module_0.get_config_type(set_0)
    except BaseException:
        pass

def test_case_4():
    try:
        config_manager_0 = module_0.ConfigManager()
        str_0 = "xdOcA'>5Tx\\H"
        var_0 = module_0.get_config_type(str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        var_0 = module_0.find_ini_config_file()
        setting_0 = module_0.Setting()
    except BaseException:
        pass

def test_case_6():
    try:
        config_manager_0 = module_0.ConfigManager()
        str_0 = 'list'
        list_0 = [str_0]
        config_manager_1 = module_0.ConfigManager(list_0)
    except BaseException:
        pass

def test_case_7():
    try:
        float_0 = 100.0
        set_0 = {float_0}
        config_manager_0 = module_0.ConfigManager(float_0, set_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = 'Tj7:6Z%W'
        var_0 = module_0.find_ini_config_file(str_0)
        config_manager_0 = module_0.ConfigManager()
        bool_0 = True
        bytes_0 = b'*\x05\xefun\x86\xb7\x1d\xd8\x13\x00\x80\x19\xe7\xba,wU\xe3\x8e'
        var_1 = config_manager_0.get_plugin_options(bool_0, bytes_0)
        float_0 = None
        set_0 = None
        list_0 = [str_0, bytes_0, bool_0, set_0]
        var_2 = config_manager_0.get_plugin_vars(float_0, list_0)
        setting_0 = module_0.Setting()
    except BaseException:
        pass

def test_case_9():
    try:
        bool_0 = False
        int_0 = 1251
        config_manager_0 = module_0.ConfigManager()
        var_0 = config_manager_0.get_plugin_vars(bool_0, int_0)
        str_0 = '!4!m! >s>P\\g"'
        dict_0 = {str_0: str_0}
        list_0 = [str_0, str_0, dict_0, dict_0]
        config_manager_1 = module_0.ConfigManager(dict_0, list_0)
    except BaseException:
        pass

def test_case_10():
    try:
        list_0 = None
        str_0 = '"i'
        var_0 = module_0.get_ini_config_value(list_0, str_0)
    except BaseException:
        pass

def test_case_11():
    try:
        dict_0 = {}
        config_manager_0 = module_0.ConfigManager(dict_0)
    except BaseException:
        pass

def test_case_12():
    try:
        config_manager_0 = module_0.ConfigManager()
        bool_0 = False
        config_manager_1 = module_0.ConfigManager(bool_0)
    except BaseException:
        pass

def test_case_13():
    try:
        config_manager_0 = module_0.ConfigManager()
        var_0 = config_manager_0.update_config_data()
        float_0 = 986.0
        var_1 = config_manager_0.update_config_data(float_0)
    except BaseException:
        pass

def test_case_14():
    try:
        dict_0 = None
        list_0 = [dict_0, dict_0, dict_0]
        config_manager_0 = module_0.ConfigManager()
        var_0 = config_manager_0.get_plugin_vars(dict_0, list_0)
        tuple_0 = ()
        var_1 = config_manager_0.get_configuration_definition(tuple_0)
        var_2 = config_manager_0.update_config_data()
        bytes_0 = b'\rl\xa1\\\xfd#E\\\xfd'
        dict_1 = None
        var_3 = module_0.get_ini_config_value(bytes_0, dict_1)
        tuple_1 = ()
        config_manager_1 = module_0.ConfigManager()
        list_1 = [config_manager_0, dict_1]
        plugin_0 = module_0.Plugin(*list_1)
        str_0 = 'default'
        var_4 = config_manager_1.get_config_value(tuple_1, list_1, str_0)
    except BaseException:
        pass

def test_case_15():
    try:
        int_0 = -850
        str_0 = 'ZM2?ock{[\tk=:AbI0'
        dict_0 = {str_0: int_0}
        bool_0 = False
        set_0 = {bool_0}
        config_manager_0 = module_0.ConfigManager()
        var_0 = config_manager_0.update_config_data(set_0, dict_0)
    except BaseException:
        pass

def test_case_16():
    try:
        bool_0 = False
        int_0 = 1275
        config_manager_0 = module_0.ConfigManager()
        var_0 = config_manager_0.get_plugin_vars(bool_0, int_0)
        str_0 = '!4!m! >s>P\\g"'
        dict_0 = {str_0: str_0}
        str_1 = 'wvEWu'
        var_1 = config_manager_0.get_configuration_definition(str_1)
        bytes_0 = b'\xcd'
        var_2 = module_0.get_ini_config_value(bytes_0, bytes_0)
        config_manager_1 = module_0.ConfigManager()
        var_3 = module_0.get_config_type(dict_0)
    except BaseException:
        pass

def test_case_17():
    try:
        str_0 = '(/'
        bool_0 = False
        int_0 = 1275
        config_manager_0 = module_0.ConfigManager()
        var_0 = config_manager_0.get_plugin_vars(bool_0, int_0)
        dict_0 = {str_0: str_0, str_0: str_0}
        var_1 = config_manager_0.update_config_data(dict_0)
    except BaseException:
        pass

def test_case_18():
    try:
        dict_0 = None
        list_0 = [dict_0, dict_0, dict_0]
        config_manager_0 = module_0.ConfigManager()
        var_0 = config_manager_0.get_plugin_vars(dict_0, list_0)
        float_0 = -2967.181
        bytes_0 = b'6j:s\x84O\xdc\x83Yz\xf1fl\x0f\tGi\x05'
        var_1 = config_manager_0.initialize_plugin_configuration_definitions(float_0, config_manager_0, bytes_0)
        var_2 = config_manager_0.update_config_data()
        bytes_1 = b'\xf3iuYa\x1b\xf9\xe5\xb3\xc4\xb5\xbaW\x145m\x81Z'
        int_0 = 2740
        var_3 = config_manager_0.get_plugin_options(config_manager_0, int_0)
        dict_1 = None
        var_4 = module_0.get_ini_config_value(bytes_1, dict_1)
        tuple_0 = ()
        config_manager_1 = module_0.ConfigManager()
        list_1 = [config_manager_0, dict_1]
        plugin_0 = module_0.Plugin(*list_1)
        var_5 = config_manager_1.get_configuration_definition(plugin_0, tuple_0, tuple_0)
        config_manager_2 = module_0.ConfigManager()
        var_6 = config_manager_0.get_config_value(dict_0, tuple_0)
    except BaseException:
        pass

def test_case_19():
    try:
        dict_0 = None
        list_0 = [dict_0, dict_0, dict_0]
        config_manager_0 = module_0.ConfigManager()
        var_0 = config_manager_0.get_plugin_vars(dict_0, list_0)
        float_0 = 1414.30774
        bytes_0 = b'6j:s\x84O\xdc\x83Yz\xf1fl\x0f\tGi\x05'
        var_1 = config_manager_0.initialize_plugin_configuration_definitions(float_0, config_manager_0, bytes_0)
        var_2 = config_manager_0.update_config_data()
        var_3 = config_manager_0.update_config_data()
        var_4 = config_manager_0.get_plugin_options(dict_0, dict_0, list_0)
        bytes_1 = b'\xf3iuYa\x1b\xf9\xe5\xb3\xc4\xb5\xbaW\x145m\x81Z'
        int_0 = 2737
        var_5 = config_manager_0.get_plugin_options(config_manager_0, int_0)
        dict_1 = None
        var_6 = module_0.get_ini_config_value(bytes_1, dict_1)
        var_7 = module_0.find_ini_config_file()
        bool_0 = False
        var_8 = config_manager_0.initialize_plugin_configuration_definitions(dict_0, bool_0, float_0)
        list_1 = [config_manager_0, dict_1]
        plugin_0 = module_0.Plugin(*list_1)
        var_9 = config_manager_0.get_configuration_definition(plugin_0, int_0)
        var_10 = module_0.get_ini_config_value(plugin_0, dict_0)
        set_0 = {var_1}
        bool_1 = False
        var_11 = config_manager_0.get_config_value(set_0, bool_1, list_1, config_manager_0)
    except BaseException:
        pass

def test_case_20():
    try:
        dict_0 = None
        list_0 = [dict_0, dict_0, dict_0]
        config_manager_0 = module_0.ConfigManager()
        var_0 = config_manager_0.get_plugin_vars(dict_0, list_0)
        bytes_0 = b'6j:s\x84O\xdc\x83Yz\xf1fl\x0f\tGi\x05'
        float_0 = None
        var_1 = config_manager_0.initialize_plugin_configuration_definitions(float_0, config_manager_0, bytes_0)
        var_2 = config_manager_0.update_config_data()
        var_3 = config_manager_0.update_config_data()
        bytes_1 = b'\xf3iuYa\x1b\xf9\xe5\xb3\xc4\xb5\xbaW\x145m\x81Z'
        int_0 = 2737
        var_4 = config_manager_0.get_plugin_options(config_manager_0, int_0)
        dict_1 = None
        var_5 = module_0.get_ini_config_value(bytes_1, dict_1)
        bool_0 = None
        list_1 = [bytes_1, list_0]
        var_6 = config_manager_0.initialize_plugin_configuration_definitions(bool_0, bytes_0, list_1)
        config_manager_1 = module_0.ConfigManager()
        list_2 = [config_manager_0, dict_1]
        plugin_0 = module_0.Plugin(*list_2)
        var_7 = config_manager_1.get_configuration_definition(plugin_0, int_0)
        float_1 = 1.5
        str_0 = None
        var_8 = config_manager_0.get_config_value(plugin_0, str_0, float_1)
    except BaseException:
        pass