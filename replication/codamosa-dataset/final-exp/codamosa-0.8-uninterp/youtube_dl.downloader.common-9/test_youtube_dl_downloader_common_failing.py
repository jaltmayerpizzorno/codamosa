# Automatically generated by Pynguin.
import youtube_dl.downloader.common as module_0

def test_case_0():
    try:
        str_0 = 'w]-]B0K:*<'
        bool_0 = False
        file_downloader_0 = module_0.FileDownloader(str_0, bool_0)
        var_0 = file_downloader_0.format_eta(bool_0)
        var_1 = file_downloader_0.try_utime(bool_0, str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        dict_0 = {}
        list_0 = []
        str_0 = 'ogAK^\x0bu_0W-p`n3xV{0,'
        file_downloader_0 = module_0.FileDownloader(list_0, str_0)
        var_0 = file_downloader_0.format_eta(dict_0)
    except BaseException:
        pass

def test_case_2():
    try:
        list_0 = None
        float_0 = -1125.198
        str_0 = 'gt'
        dict_0 = {str_0: str_0}
        file_downloader_0 = module_0.FileDownloader(str_0, dict_0)
        var_0 = file_downloader_0.format_seconds(float_0)
        str_1 = '\x0bt9F\rZ\\O'
        tuple_0 = ()
        tuple_1 = (tuple_0, dict_0)
        dict_1 = {tuple_0: var_0, float_0: str_1, str_0: list_0}
        var_1 = file_downloader_0.calc_speed(str_1, tuple_1, dict_1)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'noprogress'
        bool_0 = False
        bool_1 = {str_0: bool_0, str_0: str_0, str_0: bool_0}
        file_downloader_0 = module_0.FileDownloader(str_0, bool_1)
        str_1 = 'downloa0d_btes'
        str_2 = '+-DV'
        str_3 = 'tmpfilename'
        str_4 = 'status'
        str_5 = 'speed'
        int_0 = 1000
        str_6 = 'downloading'
        var_0 = {str_1: int_0, str_2: int_0, str_3: str_5, str_5: str_5, str_4: str_6, str_5: int_0, str_5: str_5}
        var_1 = file_downloader_0.report_progress(var_0)
    except BaseException:
        pass

def test_case_4():
    try:
        bytes_0 = b''
        set_0 = set()
        file_downloader_0 = module_0.FileDownloader(set_0, set_0)
        var_0 = file_downloader_0.format_retries(bytes_0)
    except BaseException:
        pass

def test_case_5():
    try:
        list_0 = None
        tuple_0 = ()
        bool_0 = True
        file_downloader_0 = module_0.FileDownloader(tuple_0, bool_0)
        var_0 = file_downloader_0.report_resuming_byte(list_0)
    except BaseException:
        pass

def test_case_6():
    try:
        int_0 = -1558
        float_0 = 817.442853
        list_0 = [float_0, float_0, float_0, float_0]
        file_downloader_0 = module_0.FileDownloader(float_0, list_0)
        var_0 = file_downloader_0.to_console_title(int_0)
    except BaseException:
        pass

def test_case_7():
    try:
        float_0 = -277.5613
        file_downloader_0 = module_0.FileDownloader(float_0, float_0)
        var_0 = file_downloader_0.trouble()
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = 'Xpkm'
        str_1 = '0as]_'
        str_2 = 'bsIh[9\\,X}r\x0bU'
        dict_0 = {str_0: str_0, str_1: str_1, str_0: str_1, str_2: str_0}
        str_3 = '$#WOKk<'
        set_0 = {str_3}
        float_0 = 648.0
        list_0 = [float_0]
        file_downloader_0 = module_0.FileDownloader(float_0, list_0)
        file_downloader_1 = module_0.FileDownloader(set_0, file_downloader_0)
        var_0 = file_downloader_1.report_warning(**dict_0)
    except BaseException:
        pass

def test_case_9():
    try:
        dict_0 = {}
        str_0 = None
        str_1 = None
        str_2 = 'NY\x0cK`{0gh]'
        dict_1 = {str_0: str_0, str_1: str_1, str_1: dict_0, str_2: str_0}
        str_3 = 'S]x}KM'
        file_downloader_0 = module_0.FileDownloader(dict_1, str_3)
        var_0 = file_downloader_0.report_error()
    except BaseException:
        pass

def test_case_10():
    try:
        float_0 = 766.9885
        float_1 = 10000000000.0
        tuple_0 = (float_1,)
        dict_0 = {tuple_0: tuple_0, tuple_0: float_1}
        str_0 = 'fa]66s'
        str_1 = None
        dict_1 = {str_0: tuple_0, str_1: float_1}
        file_downloader_0 = module_0.FileDownloader(dict_0, dict_1)
        var_0 = file_downloader_0.undo_temp_name(float_0)
    except BaseException:
        pass

def test_case_11():
    try:
        list_0 = []
        str_0 = ''
        bool_0 = True
        dict_0 = {bool_0: list_0}
        dict_1 = {}
        set_0 = {str_0, str_0}
        file_downloader_0 = module_0.FileDownloader(dict_1, set_0)
        var_0 = file_downloader_0.ytdl_filename(dict_0)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = 'w]-]B0K:**<'
        set_0 = None
        int_0 = 1063
        bool_0 = False
        str_1 = 'gYrZ~Ow\x0c?K'
        file_downloader_0 = module_0.FileDownloader(str_1, set_0)
        float_0 = 196.4779004973002
        var_0 = file_downloader_0.calc_eta(int_0, bool_0, file_downloader_0, float_0)
        complex_0 = None
        dict_0 = {complex_0: set_0, var_0: str_0, float_0: int_0, str_0: set_0}
        var_1 = file_downloader_0.report_destination(dict_0)
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = 'FN#rvZ\tBS7B'
        set_0 = {str_0, str_0}
        float_0 = 49.869518
        bool_0 = False
        file_downloader_0 = module_0.FileDownloader(float_0, bool_0)
        var_0 = file_downloader_0.report_progress(set_0)
    except BaseException:
        pass

def test_case_14():
    try:
        list_0 = None
        set_0 = None
        str_0 = '\x0bt9F\rZ\\O'
        list_1 = [set_0, str_0, list_0, list_0]
        bool_0 = True
        float_0 = -838.50981
        file_downloader_0 = module_0.FileDownloader(list_0, float_0)
        var_0 = file_downloader_0.report_retry(list_1, str_0, bool_0)
    except BaseException:
        pass

def test_case_15():
    try:
        bytes_0 = None
        str_0 = '-cdn'
        str_1 = 'YFm'
        dict_0 = {str_0: bytes_0, str_1: str_0}
        list_0 = [dict_0, str_0, dict_0]
        dict_1 = {bytes_0: bytes_0, bytes_0: list_0}
        list_1 = [dict_1, bytes_0, dict_1, str_0]
        float_0 = 1089.9505
        file_downloader_0 = module_0.FileDownloader(list_1, float_0)
        float_1 = 1504.08
        file_downloader_1 = module_0.FileDownloader(file_downloader_0, float_1)
        var_0 = file_downloader_1.report_unable_to_resume()
    except BaseException:
        pass

def test_case_16():
    try:
        var_0 = {}
        file_downloader_0 = module_0.FileDownloader(var_0, var_0)
        str_0 = '$H2{`CZbl'
        dict_0 = {}
        var_1 = file_downloader_0.download(str_0, dict_0)
    except BaseException:
        pass

def test_case_17():
    try:
        list_0 = None
        float_0 = -1523.3964
        str_0 = 'gt'
        dict_0 = {str_0: str_0}
        file_downloader_0 = module_0.FileDownloader(str_0, dict_0)
        var_0 = file_downloader_0.format_seconds(float_0)
        set_0 = None
        str_1 = '\x0bt9F\rZ\\O'
        list_1 = [set_0, str_1, list_0, list_0]
        bool_0 = True
        float_1 = -838.50981
        file_downloader_1 = module_0.FileDownloader(list_0, float_1)
        var_1 = file_downloader_1.report_retry(list_1, str_1, bool_0)
    except BaseException:
        pass

def test_case_18():
    try:
        var_0 = {}
        file_downloader_0 = module_0.FileDownloader(var_0, var_0)
        var_1 = file_downloader_0.download(file_downloader_0, file_downloader_0)
    except BaseException:
        pass

def test_case_19():
    try:
        bool_0 = False
        set_0 = {bool_0, bool_0, bool_0}
        list_0 = [bool_0, bool_0, set_0, bool_0]
        bool_1 = False
        int_0 = -1993
        file_downloader_0 = module_0.FileDownloader(bool_1, int_0)
        var_0 = file_downloader_0.to_stderr(list_0)
    except BaseException:
        pass

def test_case_20():
    try:
        set_0 = None
        str_0 = 'W|WZ2ln;#6U;._`B5>'
        file_downloader_0 = module_0.FileDownloader(str_0, set_0)
        float_0 = 209.0
        bytes_0 = b'!\xa8'
        var_0 = file_downloader_0.try_rename(bytes_0, float_0)
    except BaseException:
        pass

def test_case_21():
    try:
        str_0 = 'sube;'
        set_0 = {str_0}
        float_0 = -2101.0
        file_downloader_0 = module_0.FileDownloader(set_0, float_0)
        dict_0 = None
        str_1 = 'f"\tiR\x0bE'
        var_0 = file_downloader_0.calc_percent(dict_0, str_1)
    except BaseException:
        pass

def test_case_22():
    try:
        str_0 = 'redirect to «Известия. Главное» project page'
        dict_0 = {str_0: str_0}
        str_1 = '*Nd\x0cq9e_!$?UN<;'
        file_downloader_0 = module_0.FileDownloader(dict_0, str_1)
        str_2 = None
        int_0 = -995
        float_0 = -891.0
        str_3 = ''
        dict_1 = {str_0: int_0, str_0: str_0, int_0: float_0, str_3: str_3}
        tuple_0 = (dict_1,)
        float_1 = 238.47
        bytes_0 = b'o\xc9M\x1a\xb2\xf2 \xed!\xd2\x7f\xed\xfb\xdf'
        file_downloader_1 = module_0.FileDownloader(float_1, bytes_0)
        file_downloader_2 = module_0.FileDownloader(int_0, tuple_0)
        var_0 = file_downloader_2.calc_eta(bytes_0, str_2, file_downloader_0, str_2)
    except BaseException:
        pass

def test_case_23():
    try:
        str_0 = 'g0*iN?.AK)'
        bool_0 = False
        int_0 = 3115
        file_downloader_0 = module_0.FileDownloader(bool_0, int_0)
        var_0 = file_downloader_0.report_file_already_downloaded(str_0)
    except BaseException:
        pass

def test_case_24():
    try:
        str_0 = 'w]-]B0K:*<'
        str_1 = '-'
        set_0 = None
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_1, set_0: str_0}
        file_downloader_0 = module_0.FileDownloader(str_1, dict_0)
        list_0 = [file_downloader_0, str_0, str_1]
        var_0 = file_downloader_0.download(str_1, list_0)
    except BaseException:
        pass

def test_case_25():
    try:
        var_0 = None
        int_0 = -2953
        set_0 = {var_0, var_0}
        int_1 = 334
        file_downloader_0 = module_0.FileDownloader(set_0, int_1)
        var_1 = file_downloader_0.format_retries(int_0)
        str_0 = 'noprogress'
        bool_0 = False
        bool_1 = {str_0: bool_0}
        file_downloader_1 = module_0.FileDownloader(var_0, bool_1)
        int_2 = -412
        complex_0 = None
        float_0 = -1774.934978
        var_2 = file_downloader_0.calc_eta(int_2, complex_0, int_1, float_0)
        var_3 = file_downloader_1.slow_down(int_2, complex_0, int_2)
        str_1 = 'total_umte)'
        str_2 = 'tmpfilename'
        str_3 = 'filename'
        str_4 = 'status'
        str_5 = 'eta'
        int_3 = 100
        int_4 = 1000
        var_4 = {str_4: int_3, str_1: int_4, str_2: str_1, str_3: str_1, str_4: str_3, str_5: var_0, str_2: var_0}
        var_5 = file_downloader_1.report_progress(var_4)
        str_6 = '&A}xE,V"(ju-lR=C'
        str_7 = 'eta'
        str_8 = 'NPkwq\nFi[G'
        dict_0 = {str_6: var_0, str_3: int_3, str_7: str_7, str_8: complex_0}
        var_6 = file_downloader_1.download(str_6, dict_0)
    except BaseException:
        pass

def test_case_26():
    try:
        str_0 = 'w]-]B0K:*<'
        str_1 = '[CE7X'
        set_0 = None
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_1, set_0: str_0}
        file_downloader_0 = module_0.FileDownloader(str_1, dict_0)
        var_0 = file_downloader_0.try_rename(file_downloader_0, file_downloader_0)
        int_0 = 995
        var_1 = file_downloader_0.report_progress(int_0)
    except BaseException:
        pass

def test_case_27():
    try:
        var_0 = {}
        bytes_0 = b'\xf3\xeb'
        str_0 = None
        str_1 = "t'EmUbTl8>};g:60AK9"
        list_0 = [str_1]
        file_downloader_0 = module_0.FileDownloader(str_1, list_0)
        var_1 = file_downloader_0.try_utime(bytes_0, str_0)
        file_downloader_1 = module_0.FileDownloader(var_0, var_0)
        str_2 = "'o`*pw4?&^cRbr<=m"
        var_2 = file_downloader_1.temp_name(str_2)
        var_3 = file_downloader_1.download(file_downloader_1, file_downloader_1)
    except BaseException:
        pass

def test_case_28():
    try:
        str_0 = 'w]-]zB0K:*<'
        str_1 = '+gjx=}AFX\r5mW7P# }\\@'
        set_0 = None
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_1, set_0: str_0, set_0: str_1, set_0: set_0}
        file_downloader_0 = module_0.FileDownloader(str_1, dict_0)
        int_0 = 589
        float_0 = 0.001
        var_0 = file_downloader_0.best_block_size(int_0, float_0)
        str_2 = 'E'
        str_3 = "G]Xb3J$Mx'@)?UV\\"
        var_1 = file_downloader_0.try_rename(str_2, str_3)
    except BaseException:
        pass

def test_case_29():
    try:
        str_0 = '␣'
        bool_0 = True
        bool_1 = {str_0: bool_0}
        file_downloader_0 = module_0.FileDownloader(bool_0, bool_1)
        str_1 = 'downloaded_bytes'
        str_2 = 'tmpfilename'
        str_3 = 'filename'
        str_4 = 'status'
        str_5 = 'spee'
        int_0 = 4635
        int_1 = 1019
        str_6 = 'downloading'
        var_0 = {str_1: int_0, str_6: int_1, str_2: str_0, str_3: str_0, str_4: str_6, str_0: int_0, str_5: bool_1}
        var_1 = file_downloader_0.report_progress(var_0)
    except BaseException:
        pass

def test_case_30():
    try:
        str_0 = 'noprogress'
        bool_0 = False
        bool_1 = {str_0: bool_0, str_0: str_0, str_0: bool_0}
        file_downloader_0 = module_0.FileDownloader(str_0, bool_1)
        str_1 = 'downloa0d_btes'
        str_2 = 'status'
        int_0 = 883
        str_3 = 'downloading'
        var_0 = {str_1: int_0, str_3: int_0, str_1: str_1, str_1: str_1, str_2: str_3, str_1: int_0, str_1: str_1}
        var_1 = file_downloader_0.report_progress(var_0)
    except BaseException:
        pass

def test_case_31():
    try:
        var_0 = None
        str_0 = 'noprogress'
        bool_0 = False
        bool_1 = {str_0: bool_0}
        file_downloader_0 = module_0.FileDownloader(var_0, bool_1)
        str_1 = 'downloaded_bytes'
        str_2 = 'total_bytes'
        str_3 = 'status'
        str_4 = 'eta'
        str_5 = 'sSeed&'
        int_0 = 100
        int_1 = 2057
        str_6 = 'abc'
        str_7 = 'downloading'
        var_1 = {str_1: int_0, str_2: int_1, str_3: str_6, str_6: str_6, str_3: str_7, str_4: var_0, str_5: var_0}
        var_2 = file_downloader_0.report_progress(var_1)
    except BaseException:
        pass

def test_case_32():
    try:
        str_0 = 'noprogress'
        bool_0 = False
        bool_1 = {str_0: bool_0}
        file_downloader_0 = module_0.FileDownloader(str_0, bool_1)
        str_1 = 'downloa0d_btes'
        str_2 = '+-DV'
        str_3 = 'tmpfilename'
        str_4 = 'status'
        str_5 = 'eta'
        str_6 = 'speed'
        int_0 = 1000
        str_7 = 'downloading'
        var_0 = {str_1: int_0, str_2: int_0, str_3: str_5, str_6: str_5, str_4: str_7, str_5: int_0, str_6: str_6}
        var_1 = file_downloader_0.report_progress(var_0)
    except BaseException:
        pass

def test_case_33():
    try:
        int_0 = 2835
        int_1 = 941
        list_0 = [int_1]
        file_downloader_0 = module_0.FileDownloader(int_1, list_0)
        int_2 = 1352
        var_0 = file_downloader_0.format_seconds(int_2)
        bool_0 = True
        var_1 = file_downloader_0.best_block_size(bool_0, int_0)
        var_2 = file_downloader_0.report_unable_to_resume()
    except BaseException:
        pass

def test_case_34():
    try:
        var_0 = None
        str_0 = 'noprogress'
        bool_0 = False
        bool_1 = {str_0: bool_0}
        file_downloader_0 = module_0.FileDownloader(var_0, bool_1)
        str_1 = 'downloaed_byte'
        str_2 = 'total_bytes'
        str_3 = 'tmpfilename'
        str_4 = 'filename'
        str_5 = 'status'
        str_6 = 'eta'
        int_0 = 100
        int_1 = 1000
        str_7 = 'downloading'
        var_1 = {str_1: int_0, str_2: int_1, str_3: str_6, str_4: str_6, str_5: str_7, str_6: var_0, str_5: var_0}
        var_2 = file_downloader_0.report_progress(var_1)
        int_2 = 1
        var_3 = {str_1: int_0, str_2: int_1, str_3: str_2, str_4: str_2, str_5: str_7, str_6: int_2, str_4: var_0}
        var_4 = file_downloader_0.report_progress(var_3)
    except BaseException:
        pass

def test_case_35():
    try:
        dict_0 = None
        float_0 = 3583.795
        complex_0 = None
        bool_0 = True
        str_0 = None
        file_downloader_0 = module_0.FileDownloader(str_0, complex_0)
        bytes_0 = b'|%$\xeb\xec\xd8\x94\xb8@\x8bi\xfbk\xb6z\xc3Eg\x16'
        list_0 = [dict_0, bytes_0, file_downloader_0]
        var_0 = file_downloader_0.calc_speed(bool_0, float_0, list_0)
    except BaseException:
        pass