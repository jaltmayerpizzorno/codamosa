# Automatically generated by Pynguin.
import pypara.monetary as module_0
import decimal as module_1
import pypara.currencies as module_2
import datetime as module_3

def test_case_0():
    try:
        float_0 = 88.95815744787062
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.positive()
        money_1 = money_0.subtract(money_0)
        list_1 = []
        bool_0 = money_0.is_equal(money_0)
        none_price_0 = module_0.NonePrice(*list_1)
        price_0 = none_price_0.abs()
        decimal_0 = module_1.Decimal()
        money_2 = money_1.add(money_1)
        money_3 = some_money_0.abs()
        str_0 = '[wk+ORv7{*C\nZoWaH(}'
        currency_type_0 = None
        dict_0 = {}
        decimal_1 = module_1.Decimal(**dict_0)
        int_0 = None
        str_1 = 'WIR Franc'
        int_1 = -4139
        currency_0 = module_2.Currency(str_1, str_0, int_0, currency_type_0, decimal_1, int_1)
        money_4 = some_money_0.convert(currency_0)
    except BaseException:
        pass

def test_case_1():
    try:
        float_0 = 89.60950922441431
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.negative()
        money_1 = money_0.subtract(money_0)
        list_1 = []
        none_price_0 = module_0.NonePrice(*list_1)
        str_0 = '!>R=}\\'
        none_money_0 = module_0.NoneMoney()
        str_1 = '$w5XSs_E0LN6'
        currency_type_0 = None
        decimal_0 = module_1.Decimal()
        int_0 = None
        currency_0 = module_2.Currency(str_0, str_1, int_0, currency_type_0, decimal_0, int_0)
        money_2 = some_money_0.convert(currency_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = "\t'?%\r%f52H\x0cn(vlg+"
        list_0 = []
        none_price_0 = module_0.NonePrice(*list_0)
        price_0 = none_price_0.abs()
        price_1 = none_price_0.subtract(price_0)
        decimal_0 = module_1.Decimal()
        float_0 = 1483.85512
        money_0 = price_1.times(float_0)
        money_1 = money_0.__abs__()
        var_0 = money_1.__round__()
        str_1 = '\r\x0bOj'
        int_0 = -3047
        currency_type_0 = module_2.CurrencyType.ALTERNATIVE
        currency_0 = module_2.Currency(str_1, str_0, int_0, currency_type_0, decimal_0, int_0)
        float_1 = price_1.__float__()
    except BaseException:
        pass

def test_case_3():
    try:
        var_0 = None
        none_money_0 = module_0.NoneMoney()
        monetary_operation_exception_0 = module_0.MonetaryOperationException()
        list_0 = [none_money_0, none_money_0, monetary_operation_exception_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.round()
        price_1 = price_0.divide(var_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = "\t'?%\r%f52H\x0cn(vlg+"
        bool_0 = None
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.round()
        money_1 = money_0.__pos__()
        currency_type_0 = module_2.CurrencyType.METAL
        int_0 = 863
        bool_1 = money_0.__le__(money_0)
        currency_type_1 = module_2.CurrencyType.ALTERNATIVE
        decimal_0 = module_1.Decimal()
        int_1 = -627
        currency_0 = module_2.Currency(str_0, str_0, int_0, currency_type_1, decimal_0, int_1)
        none_money_1 = module_0.NoneMoney()
        money_2 = none_money_1.convert(currency_0)
        money_3 = money_2.scalar_add(currency_type_0)
        money_4 = money_3.__add__(money_1)
        money_5 = money_4.__truediv__(bool_0)
        some_money_0 = module_0.SomeMoney()
    except BaseException:
        pass

def test_case_5():
    try:
        float_0 = 89.60950922441431
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.positive()
        money_1 = money_0.subtract(money_0)
        list_1 = []
        none_price_0 = module_0.NonePrice(*list_1)
        price_0 = none_price_0.negative()
        price_1 = none_price_0.subtract(price_0)
        money_2 = money_1.__abs__()
        decimal_0 = module_1.Decimal()
        float_1 = 1483.85512
        money_3 = price_1.times(float_1)
        var_0 = None
        money_4 = money_3.scalar_add(var_0)
        money_5 = money_1.add(money_1)
        bool_0 = money_1.gt(money_1)
        var_1 = money_5.__round__()
    except BaseException:
        pass

def test_case_6():
    try:
        money_0 = None
        money_1 = module_0.Money()
        none_money_0 = module_0.NoneMoney()
        bool_0 = none_money_0.gte(money_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = "O?p3;@\nD2_i'{X[Be]"
        var_0 = None
        dict_0 = {}
        decimal_0 = module_1.Decimal(**dict_0)
        int_0 = -1736
        currency_type_0 = module_2.CurrencyType.MONEY
        decimal_1 = module_1.Decimal()
        int_1 = 416
        currency_0 = module_2.Currency(str_0, str_0, int_0, currency_type_0, decimal_1, int_1)
        decimal_2 = currency_0.quantize(decimal_0)
        str_1 = '2eY"yQmAb'
        int_2 = 1339
        currency_type_1 = module_2.CurrencyType.MONEY
        list_0 = []
        decimal_3 = module_1.Decimal(*list_0)
        int_3 = 2222
        currency_1 = module_2.Currency(str_0, str_1, int_2, currency_type_1, decimal_3, int_3)
        list_1 = []
        dict_1 = {}
        none_money_0 = module_0.NoneMoney(*list_1, **dict_1)
        money_0 = none_money_0.with_ccy(currency_1)
        money_1 = money_0.with_qty(decimal_2)
        money_2 = money_1.__floordiv__(var_0)
        some_price_0 = module_0.SomePrice(*list_0)
    except BaseException:
        pass

def test_case_8():
    try:
        none_price_0 = module_0.NonePrice()
        bool_0 = none_price_0.as_boolean()
        some_money_0 = module_0.SomeMoney()
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = '\x0c-l~/$*|'
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
        none_price_0 = module_0.NonePrice()
        bool_0 = none_price_0.is_equal(dict_0)
        none_price_1 = module_0.NonePrice()
        price_0 = none_price_1.positive()
        price_1 = price_0.floor_divide(dict_0)
        str_1 = 'n7P:^c'
        dict_1 = {str_0: str_0, str_1: str_0}
        date_0 = module_3.date(**dict_1)
    except BaseException:
        pass

def test_case_10():
    try:
        none_price_0 = module_0.NonePrice()
        float_0 = none_price_0.as_float()
    except BaseException:
        pass

def test_case_11():
    try:
        none_price_0 = module_0.NonePrice()
        decimal_0 = module_1.Decimal()
        price_0 = none_price_0.with_qty(decimal_0)
        var_0 = price_0.__round__()
        list_0 = [var_0]
        some_money_0 = module_0.SomeMoney(*list_0)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = "\t'?%\r%f52H\x0cn(vlg+"
        float_0 = 72.452
        dict_0 = {str_0: str_0, str_0: str_0, str_0: float_0}
        list_0 = []
        none_price_0 = module_0.NonePrice(*list_0)
        price_0 = none_price_0.abs()
        price_1 = price_0.__truediv__(dict_0)
        decimal_0 = module_1.Decimal()
        money_0 = price_1.times(float_0)
        money_1 = money_0.__floordiv__(decimal_0)
        var_0 = money_1.__round__()
        some_price_0 = module_0.SomePrice()
    except BaseException:
        pass

def test_case_13():
    try:
        float_0 = 89.6
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.negative()
        money_1 = money_0.subtract(money_0)
        list_1 = []
        money_2 = money_1.__abs__()
        bool_0 = some_money_0.gte(money_0)
        none_price_0 = module_0.NonePrice(*list_1)
        price_0 = none_price_0.abs()
        bool_1 = money_0.lte(money_0)
        price_1 = none_price_0.subtract(price_0)
        decimal_0 = module_1.Decimal()
        decimal_1 = module_1.Decimal()
        price_2 = none_price_0.round()
        money_3 = money_1.add(money_1)
        price_3 = price_0.positive()
        int_0 = -2425
        bool_2 = money_0.lte(money_3)
        var_0 = price_0.__round__(int_0)
        bool_3 = money_3.lt(money_0)
        some_price_0 = module_0.SomePrice(*list_0)
        bool_4 = some_price_0.gt(price_2)
        int_1 = money_3.__int__()
        int_2 = money_1.as_integer()
        some_price_1 = module_0.SomePrice(*list_0)
        bool_5 = price_3.lt(price_3)
        price_4 = some_price_0.subtract(price_1)
        price_5 = some_price_0.add(price_4)
        bool_6 = some_price_0.lt(price_4)
        bool_7 = price_4.__eq__(int_1)
        float_1 = money_0.as_float()
        money_4 = money_2.__floordiv__(money_0)
    except BaseException:
        pass

def test_case_14():
    try:
        str_0 = 'C0O'
        some_price_0 = None
        none_money_0 = module_0.NoneMoney()
        list_0 = [str_0, none_money_0, str_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        bool_0 = some_money_0.is_equal(none_money_0)
        money_0 = none_money_0.floor_divide(some_price_0)
        bool_1 = some_price_0.as_boolean()
    except BaseException:
        pass

def test_case_15():
    try:
        str_0 = '\x0c-l~/$*|'
        int_0 = -2330
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.multiply(int_0)
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
        none_price_1 = module_0.NonePrice()
        bool_0 = none_price_1.is_equal(dict_0)
        none_price_2 = module_0.NonePrice()
        price_1 = none_price_2.positive()
        price_2 = price_1.floor_divide(dict_0)
        str_1 = 'n7P:^c'
        dict_1 = {str_0: str_0, str_1: str_0}
        date_0 = module_3.date(**dict_1)
    except BaseException:
        pass

def test_case_16():
    try:
        incompatible_currency_error_0 = None
        none_money_0 = module_0.NoneMoney()
        money_0 = none_money_0.scalar_subtract(incompatible_currency_error_0)
        bool_0 = none_money_0.as_boolean()
        some_price_0 = module_0.SomePrice()
    except BaseException:
        pass

def test_case_17():
    try:
        str_0 = "\t'?%\r%f52H\x0cn(vlg+"
        float_0 = 72.452
        dict_0 = {str_0: str_0, str_0: str_0, str_0: float_0}
        list_0 = []
        none_price_0 = module_0.NonePrice(*list_0)
        price_0 = none_price_0.abs()
        price_1 = price_0.__truediv__(dict_0)
        decimal_0 = module_1.Decimal()
        float_1 = 1483.85512
        money_0 = price_1.times(float_1)
        money_1 = money_0.__floordiv__(decimal_0)
        var_0 = money_1.__round__()
        str_1 = ''
        int_0 = -2523
        currency_type_0 = module_2.CurrencyType.MONEY
        currency_0 = module_2.Currency(str_0, str_1, int_0, currency_type_0, decimal_0, int_0)
        var_1 = money_0.__round__()
        list_1 = [str_0, str_1, str_0, float_1]
        decimal_1 = currency_0.quantize(decimal_0)
        price_2 = price_1.positive()
        price_3 = price_0.__add__(price_2)
        some_price_0 = module_0.SomePrice(*list_1)
    except BaseException:
        pass

def test_case_18():
    try:
        money_0 = module_0.Money()
        var_0 = money_0.__round__()
    except BaseException:
        pass

def test_case_19():
    try:
        list_0 = []
        none_price_0 = module_0.NonePrice(*list_0)
        price_0 = none_price_0.abs()
        price_1 = none_price_0.subtract(price_0)
        decimal_0 = module_1.Decimal()
        float_0 = 1483.85512
        money_0 = price_1.times(float_0)
        var_0 = None
        money_1 = money_0.divide(var_0)
        money_2 = money_0.__mul__(var_0)
        money_3 = money_0.__floordiv__(decimal_0)
        var_1 = money_3.__round__()
        str_0 = 'Foreign exchange rate for '
        int_0 = -3047
        currency_type_0 = module_2.CurrencyType.ALTERNATIVE
        decimal_1 = module_1.Decimal()
        currency_0 = module_2.Currency(str_0, str_0, int_0, currency_type_0, decimal_1, int_0)
        some_price_0 = module_0.SomePrice()
    except BaseException:
        pass

def test_case_20():
    try:
        price_0 = None
        list_0 = []
        none_price_0 = module_0.NonePrice(*list_0)
        price_1 = none_price_0.scalar_subtract(price_0)
    except BaseException:
        pass

def test_case_21():
    try:
        str_0 = "\t'?%\r%f52H\x0cn(vlg+"
        float_0 = 72.452
        dict_0 = {str_0: str_0, str_0: str_0, str_0: float_0}
        list_0 = []
        none_price_0 = module_0.NonePrice(*list_0)
        price_0 = none_price_0.abs()
        price_1 = price_0.__truediv__(dict_0)
        decimal_0 = module_1.Decimal()
        float_1 = 1483.85512
        money_0 = price_1.times(float_1)
        money_1 = money_0.add(money_0)
        var_0 = money_1.__round__()
        decimal_1 = module_1.Decimal()
        some_price_0 = module_0.SomePrice()
    except BaseException:
        pass

def test_case_22():
    try:
        float_0 = 89.6
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.positive()
        money_1 = money_0.subtract(money_0)
        list_1 = []
        bool_0 = some_money_0.gte(money_0)
        none_price_0 = module_0.NonePrice(*list_1)
        price_0 = none_price_0.abs()
        bool_1 = money_0.lte(money_0)
        price_1 = none_price_0.subtract(price_0)
        decimal_0 = module_1.Decimal()
        decimal_1 = module_1.Decimal()
        money_2 = money_1.add(money_1)
        bool_2 = money_1.gt(money_1)
        price_2 = price_0.positive()
        currency_type_0 = module_2.CurrencyType.CRYPTO
        int_0 = 3
        str_0 = "s)'u;Dy\n"
        str_1 = '<J'
        currency_0 = module_2.Currency(str_0, str_1, int_0, currency_type_0, decimal_1, int_0)
        none_money_0 = module_0.NoneMoney()
        bool_3 = none_money_0.lt(money_0)
        bool_4 = True
        bool_5 = False
        int_1 = money_2.as_integer()
        str_2 = '\n        Debit postings of the journal entry.\n        '
        dict_0 = {bool_5: bool_4, bool_1: str_2}
        bool_6 = money_1.__lt__(money_0)
        money_3 = money_0.convert(currency_0, dict_0)
    except BaseException:
        pass

def test_case_23():
    try:
        float_0 = 88.95815744787062
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.positive()
        money_1 = money_0.subtract(money_0)
        list_1 = []
        bool_0 = money_0.is_equal(money_0)
        none_price_0 = module_0.NonePrice(*list_1)
        price_0 = none_price_0.abs()
        price_1 = none_price_0.subtract(price_0)
        decimal_0 = module_1.Decimal()
        money_2 = money_1.add(money_1)
        bool_1 = money_1.gt(money_1)
        bool_2 = none_price_0.lte(price_0)
        bool_3 = money_1.lte(money_1)
        bool_4 = money_1.lte(money_2)
        str_0 = 'W_:qa}6p`6\t 0H3'
        dict_0 = {str_0: float_0}
        decimal_1 = module_1.Decimal(**dict_0)
    except BaseException:
        pass

def test_case_24():
    try:
        var_0 = None
        int_0 = 2
        none_money_0 = module_0.NoneMoney()
        monetary_operation_exception_0 = module_0.MonetaryOperationException()
        list_0 = [none_money_0, none_money_0, monetary_operation_exception_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.multiply(int_0)
        price_1 = price_0.divide(var_0)
    except BaseException:
        pass

def test_case_25():
    try:
        list_0 = []
        none_price_0 = module_0.NonePrice(*list_0)
        price_0 = none_price_0.abs()
        price_1 = price_0.subtract(price_0)
        decimal_0 = module_1.Decimal()
        int_0 = price_0.__int__()
    except BaseException:
        pass

def test_case_26():
    try:
        str_0 = "\t'?%\r%f52H\x0cn(vlg+"
        float_0 = 72.452
        dict_0 = {str_0: str_0, str_0: str_0, str_0: float_0}
        list_0 = []
        none_price_0 = module_0.NonePrice(*list_0)
        price_0 = none_price_0.abs()
        price_1 = price_0.__truediv__(dict_0)
        decimal_0 = module_1.Decimal()
        float_1 = 1483.85512
        money_0 = price_1.times(float_1)
        money_1 = money_0.__neg__()
        var_0 = money_1.__round__()
        decimal_1 = module_1.Decimal()
        some_price_0 = module_0.SomePrice()
    except BaseException:
        pass

def test_case_27():
    try:
        int_0 = 2
        none_money_0 = module_0.NoneMoney()
        monetary_operation_exception_0 = module_0.MonetaryOperationException()
        list_0 = [none_money_0, none_money_0, monetary_operation_exception_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.multiply(int_0)
        price_1 = some_price_0.subtract(price_0)
    except BaseException:
        pass

def test_case_28():
    try:
        float_0 = 89.60950922441431
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.positive()
        money_1 = money_0.__neg__()
        list_1 = []
        none_price_0 = module_0.NonePrice(*list_1)
        price_0 = none_price_0.abs()
        price_1 = none_price_0.subtract(price_0)
        float_1 = 1483.85512
        money_2 = price_1.times(float_1)
        bool_0 = money_1.gt(money_1)
        bool_1 = money_2.lte(money_2)
        some_price_0 = module_0.SomePrice()
    except BaseException:
        pass

def test_case_29():
    try:
        list_0 = []
        none_price_0 = module_0.NonePrice(*list_0)
        price_0 = none_price_0.abs()
        price_1 = none_price_0.subtract(price_0)
        decimal_0 = module_1.Decimal()
        float_0 = 1483.85512
        money_0 = price_1.times(float_0)
        var_0 = None
        money_1 = price_1.times(var_0)
        money_2 = money_1.__neg__()
        int_0 = -1212
        var_1 = money_2.__round__(int_0)
        decimal_1 = module_1.Decimal(*list_0)
        some_price_0 = module_0.SomePrice()
    except BaseException:
        pass

def test_case_30():
    try:
        list_0 = []
        none_price_0 = module_0.NonePrice(*list_0)
        price_0 = none_price_0.abs()
        price_1 = none_price_0.subtract(price_0)
        decimal_0 = module_1.Decimal()
        str_0 = " are incompatible for operation '"
        str_1 = ''
        int_0 = 276
        currency_type_0 = None
        currency_0 = module_2.Currency(str_0, str_1, int_0, currency_type_0, decimal_0, int_0)
        date_0 = None
        price_2 = none_price_0.convert(currency_0, date_0)
        float_0 = 1483.85512
        money_0 = price_1.times(float_0)
        none_money_0 = module_0.NoneMoney()
        money_1 = none_money_0.negative()
        var_0 = None
        money_2 = money_0.__mul__(var_0)
        money_3 = money_0.__floordiv__(var_0)
        var_1 = money_3.__round__()
        str_2 = 'Foreign exchange rate for '
        bool_0 = money_0.lte(money_0)
        str_3 = '.='
        str_4 = 'z|Qh\\&}(p}9|'
        dict_0 = {str_2: var_0, str_3: str_2, str_2: money_0, str_4: list_0}
        decimal_1 = module_1.Decimal(**dict_0)
    except BaseException:
        pass

def test_case_31():
    try:
        none_money_0 = module_0.NoneMoney()
        float_0 = none_money_0.as_float()
    except BaseException:
        pass

def test_case_32():
    try:
        list_0 = []
        none_price_0 = module_0.NonePrice(*list_0)
        price_0 = none_price_0.abs()
        price_1 = none_price_0.subtract(price_0)
        decimal_0 = module_1.Decimal()
        float_0 = 1483.85512
        money_0 = price_1.times(float_0)
        var_0 = None
        money_1 = money_0.__mul__(var_0)
        money_2 = money_0.__floordiv__(var_0)
        bool_0 = money_2.gt(money_2)
        var_1 = money_2.__round__()
        str_0 = 'Foreign exchange rate for '
        bool_1 = money_0.lte(money_0)
        str_1 = '.='
        str_2 = 'z|Qh\\&}(p}9|'
        dict_0 = {str_0: var_0, str_1: str_0, str_0: money_0, str_2: list_0}
        decimal_1 = module_1.Decimal(**dict_0)
    except BaseException:
        pass

def test_case_33():
    try:
        list_0 = []
        none_price_0 = module_0.NonePrice(*list_0)
        price_0 = none_price_0.abs()
        price_1 = none_price_0.subtract(price_0)
        decimal_0 = module_1.Decimal()
        str_0 = " are incompatible for operation '"
        str_1 = ''
        int_0 = 276
        currency_type_0 = None
        currency_0 = module_2.Currency(str_0, str_1, int_0, currency_type_0, decimal_0, int_0)
        date_0 = None
        price_2 = price_1.negative()
        float_0 = 1483.85512
        money_0 = price_1.times(float_0)
        none_money_0 = module_0.NoneMoney()
        money_1 = none_money_0.with_dov(date_0)
        var_0 = None
        money_2 = money_0.__mul__(var_0)
        money_3 = money_0.__floordiv__(var_0)
        var_1 = money_3.__round__()
        str_2 = 'Foreign exchange rate for '
        bool_0 = money_0.lte(money_0)
        str_3 = '.='
        str_4 = 'z|Qh\\&}(p}9|'
        dict_0 = {str_2: var_0, str_3: str_2, str_2: money_0, str_4: list_0}
        decimal_1 = module_1.Decimal(**dict_0)
    except BaseException:
        pass

def test_case_34():
    try:
        list_0 = []
        none_price_0 = module_0.NonePrice(*list_0)
        price_0 = none_price_0.abs()
        price_1 = none_price_0.subtract(price_0)
        decimal_0 = module_1.Decimal()
        float_0 = 1483.85512
        money_0 = price_1.times(float_0)
        bool_0 = money_0.__eq__(list_0)
        var_0 = None
        money_1 = money_0.__mul__(var_0)
        money_2 = money_0.__floordiv__(decimal_0)
        var_1 = money_2.__round__()
        int_0 = money_2.as_integer()
    except BaseException:
        pass

def test_case_35():
    try:
        str_0 = "\t'?%\r%f52H\x0cn(vlg+"
        float_0 = 72.452
        price_0 = module_0.Price()
        price_1 = price_0.__neg__()
        dict_0 = {str_0: str_0, str_0: str_0, str_0: float_0}
        list_0 = []
        none_price_0 = module_0.NonePrice(*list_0)
        price_2 = none_price_0.abs()
        price_3 = price_2.__truediv__(dict_0)
        decimal_0 = module_1.Decimal()
        float_1 = 1483.85512
        money_0 = price_3.times(float_1)
        money_1 = money_0.__floordiv__(decimal_0)
        bool_0 = money_0.__eq__(str_0)
        var_0 = money_1.__round__()
        int_0 = -628
        str_1 = ''
        int_1 = -2523
        currency_type_0 = module_2.CurrencyType.MONEY
        currency_0 = module_2.Currency(str_0, str_1, int_1, currency_type_0, decimal_0, int_1)
        decimal_1 = currency_0.quantize(decimal_0)
        str_2 = '<A'
        str_3 = 'fAUkJyY}XupXC9'
        int_2 = None
        decimal_2 = module_1.Decimal()
        currency_1 = module_2.Currency(str_2, str_3, int_2, currency_type_0, decimal_2, int_0)
        str_4 = 'g3|.QZd3T'
        str_5 = 'G)rcTUUhqV.27'
        decimal_3 = currency_1.quantize(decimal_2)
        int_3 = 591
        currency_2 = module_2.Currency(str_4, str_5, int_0, currency_type_0, decimal_3, int_3)
        str_6 = ''
        dict_1 = {str_6: dict_0}
        str_7 = 'CC($.9;~"\x0b8x'
        price_4 = price_0.__mul__(str_7)
        some_price_0 = module_0.SomePrice(**dict_1)
    except BaseException:
        pass

def test_case_36():
    try:
        float_0 = 89.6
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.positive()
        money_1 = money_0.subtract(money_0)
        none_money_0 = module_0.NoneMoney()
        money_2 = none_money_0.scalar_subtract(money_0)
        money_3 = module_0.Money()
        bool_0 = money_0.gte(money_3)
    except BaseException:
        pass

def test_case_37():
    try:
        float_0 = 89.60950922441431
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.negative()
        money_1 = money_0.subtract(money_0)
        list_1 = []
        none_price_0 = module_0.NonePrice(*list_1)
        price_0 = none_price_0.abs()
        price_1 = none_price_0.subtract(price_0)
        decimal_0 = module_1.Decimal()
        money_2 = some_money_0.abs()
        var_0 = None
        money_3 = money_2.__mul__(var_0)
    except BaseException:
        pass

def test_case_38():
    try:
        list_0 = []
        none_price_0 = module_0.NonePrice(*list_0)
        price_0 = none_price_0.abs()
        price_1 = none_price_0.subtract(price_0)
        price_2 = None
        bool_0 = none_price_0.gt(price_2)
        decimal_0 = module_1.Decimal()
        float_0 = 1483.85512
        money_0 = price_1.times(float_0)
        var_0 = None
        money_1 = money_0.divide(var_0)
        money_2 = money_0.__mul__(var_0)
        money_3 = money_2.__floordiv__(var_0)
        int_0 = 3
        var_1 = money_0.__round__(int_0)
        int_1 = -3047
        decimal_1 = module_1.Decimal()
        str_0 = 'OTd#tEW3'
        str_1 = ''
        int_2 = -2139
        currency_type_0 = module_2.CurrencyType.METAL
        list_1 = []
        decimal_2 = module_1.Decimal(*list_1)
        currency_0 = module_2.Currency(str_0, str_1, int_2, currency_type_0, decimal_2, int_1)
        some_price_0 = module_0.SomePrice()
    except BaseException:
        pass

def test_case_39():
    try:
        float_0 = 89.60950922441431
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.positive()
        money_1 = money_0.subtract(money_0)
        list_1 = []
        none_price_0 = module_0.NonePrice(*list_1)
        str_0 = '!>R=}\\'
        none_money_0 = module_0.NoneMoney()
        money_2 = some_money_0.abs()
        str_1 = '[wk+ORv7{*C\nZoWaH(}'
        int_0 = 31
        currency_type_0 = None
        decimal_0 = module_1.Decimal()
        int_1 = None
        currency_0 = module_2.Currency(str_0, str_1, int_0, currency_type_0, decimal_0, int_1)
        money_3 = some_money_0.convert(currency_0)
    except BaseException:
        pass

def test_case_40():
    try:
        float_0 = 89.60950922441431
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.positive()
        money_1 = money_0.subtract(money_0)
        list_1 = []
        none_price_0 = module_0.NonePrice(*list_1)
        money_2 = money_1.add(money_1)
        var_0 = money_2.__round__()
    except BaseException:
        pass

def test_case_41():
    try:
        float_0 = 89.6
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.positive()
        decimal_0 = module_1.Decimal()
        money_1 = money_0.add(money_0)
        bool_0 = money_1.gt(money_1)
        int_0 = -2404
        currency_type_0 = module_2.CurrencyType.CRYPTO
        str_0 = '+K\x0bpa54xMT7]\r8OTY\x0cf+'
        int_1 = 3
        currency_0 = module_2.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_1)
        bool_1 = True
        money_2 = money_1.convert(currency_0, bool_1)
    except BaseException:
        pass

def test_case_42():
    try:
        float_0 = 89.6
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.positive()
        str_0 = 'u@0'
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.floor_divide(str_0)
        money_1 = money_0.subtract(money_0)
        list_1 = []
        bool_0 = some_money_0.gte(money_0)
        none_price_0 = module_0.NonePrice(*list_1)
        price_1 = none_price_0.abs()
        bool_1 = money_0.lte(money_0)
        monetary_operation_exception_0 = module_0.MonetaryOperationException()
        price_2 = none_price_0.scalar_subtract(monetary_operation_exception_0)
        price_3 = none_price_0.subtract(price_1)
        decimal_0 = module_1.Decimal()
        decimal_1 = module_1.Decimal()
        var_0 = None
        bool_2 = money_1.gt(money_0)
        money_2 = money_1.scalar_add(var_0)
    except BaseException:
        pass

def test_case_43():
    try:
        float_0 = 89.60950922441431
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.negative()
        money_1 = money_0.__neg__()
        list_1 = []
        none_price_0 = module_0.NonePrice(*list_1)
        price_0 = none_price_0.abs()
        currency_type_0 = module_2.CurrencyType.ALTERNATIVE
        money_2 = money_1.scalar_subtract(currency_type_0)
    except BaseException:
        pass

def test_case_44():
    try:
        float_0 = 89.6
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.positive()
        money_1 = money_0.subtract(money_0)
        list_1 = []
        bool_0 = some_money_0.gte(money_0)
        none_price_0 = module_0.NonePrice(*list_1)
        price_0 = none_price_0.abs()
        bool_1 = money_0.lte(money_0)
        price_1 = none_price_0.subtract(price_0)
        decimal_0 = module_1.Decimal()
        decimal_1 = module_1.Decimal()
        money_2 = money_0.add(money_0)
        str_0 = '*?zl1plfnGO'
        str_1 = '\x0c'
        int_0 = 679
        currency_type_0 = module_2.CurrencyType.ALTERNATIVE
        currency_0 = module_2.Currency(str_1, str_0, int_0, currency_type_0, decimal_0, int_0)
        money_3 = some_money_0.with_ccy(currency_0)
        bool_2 = money_0.gt(money_3)
    except BaseException:
        pass

def test_case_45():
    try:
        float_0 = 89.6
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.abs()
        money_1 = money_0.subtract(money_0)
        list_1 = []
        money_2 = money_1.__abs__()
        bool_0 = some_money_0.gte(money_0)
        none_price_0 = module_0.NonePrice(*list_1)
        price_0 = none_price_0.abs()
        bool_1 = money_0.lte(money_0)
        decimal_0 = module_1.Decimal()
        price_1 = none_price_0.round()
        money_3 = money_1.add(money_1)
        str_0 = '*?zl1plfnGO'
        price_2 = price_0.positive()
        int_0 = -2389
        currency_type_0 = module_2.CurrencyType.CRYPTO
        bool_2 = money_0.lte(money_3)
        var_0 = price_0.__round__(int_0)
        int_1 = 3
        bool_3 = money_3.lt(money_0)
        some_price_0 = module_0.SomePrice(*list_0)
        bool_4 = some_price_0.gt(price_1)
        currency_0 = module_2.Currency(str_0, str_0, int_1, currency_type_0, decimal_0, int_1)
        money_4 = some_money_0.divide(currency_0)
    except BaseException:
        pass

def test_case_46():
    try:
        float_0 = 89.6
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.positive()
        money_1 = money_0.subtract(money_0)
        list_1 = []
        bool_0 = some_money_0.gte(money_0)
        none_price_0 = module_0.NonePrice(*list_1)
        price_0 = none_price_0.abs()
        money_2 = money_1.__abs__()
        bool_1 = money_0.lte(money_0)
        price_1 = none_price_0.subtract(price_0)
        decimal_0 = module_1.Decimal()
        money_3 = money_1.add(money_1)
        money_4 = money_2.negative()
        money_5 = money_3.__pos__()
        currency_type_0 = module_2.CurrencyType.ALTERNATIVE
        money_6 = money_4.__floordiv__(currency_type_0)
    except BaseException:
        pass

def test_case_47():
    try:
        float_0 = 89.6
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.positive()
        money_1 = money_0.subtract(money_0)
        list_1 = []
        none_price_0 = module_0.NonePrice(*list_1)
        price_0 = none_price_0.abs()
        price_1 = none_price_0.subtract(price_0)
        decimal_0 = module_1.Decimal()
        var_0 = None
        money_2 = price_0.times(var_0)
        money_3 = money_0.add(money_2)
        var_1 = money_2.__round__()
        bool_0 = money_3.lte(money_3)
        decimal_1 = module_1.Decimal(*list_1)
        some_price_0 = module_0.SomePrice()
    except BaseException:
        pass

def test_case_48():
    try:
        str_0 = '.'
        int_0 = -1746
        currency_type_0 = module_2.CurrencyType.ALTERNATIVE
        decimal_0 = module_1.Decimal()
        currency_0 = module_2.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        list_0 = [currency_type_0, currency_type_0, currency_type_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.convert(currency_0)
    except BaseException:
        pass

def test_case_49():
    try:
        money_0 = module_0.Money()
        str_0 = 'e8>ad!hcbT{'
        bool_0 = money_0.__gt__(money_0)
        int_0 = -317
        currency_type_0 = module_2.CurrencyType.ALTERNATIVE
        list_0 = []
        decimal_0 = module_1.Decimal(*list_0)
        int_1 = 31
        currency_0 = module_2.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_1)
        dict_0 = {}
        some_price_0 = module_0.SomePrice(*list_0, **dict_0)
    except BaseException:
        pass

def test_case_50():
    try:
        float_0 = 89.60950922441431
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.negative()
        money_1 = money_0.subtract(money_0)
        list_1 = []
        none_price_0 = module_0.NonePrice(*list_1)
        price_0 = none_price_0.negative()
        price_1 = none_price_0.subtract(price_0)
        money_2 = money_1.__abs__()
        decimal_0 = module_1.Decimal()
        money_3 = some_money_0.with_qty(decimal_0)
    except BaseException:
        pass

def test_case_51():
    try:
        float_0 = 89.6
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.positive()
        money_1 = money_0.subtract(money_0)
        bool_0 = some_money_0.gte(money_0)
        decimal_0 = module_1.Decimal()
        str_0 = '*?zl1plfnGO'
        int_0 = -2404
        currency_type_0 = module_2.CurrencyType.CRYPTO
        str_1 = '+K\x0bpa54xMT7]\r8OTY\x0cf+'
        int_1 = 3
        currency_0 = module_2.Currency(str_0, str_1, int_0, currency_type_0, decimal_0, int_1)
        bool_1 = False
        money_2 = money_1.convert(currency_0, bool_1)
    except BaseException:
        pass

def test_case_52():
    try:
        price_0 = module_0.Price()
        price_1 = price_0.abs()
    except BaseException:
        pass

def test_case_53():
    try:
        bool_0 = False
        list_0 = [bool_0, bool_0, bool_0]
        some_price_0 = module_0.SomePrice(*list_0)
        int_0 = some_price_0.as_integer()
        decimal_0 = module_1.Decimal()
        price_0 = some_price_0.multiply(decimal_0)
        price_1 = price_0.positive()
        bool_1 = some_price_0.gt(price_1)
        some_price_1 = module_0.SomePrice()
    except BaseException:
        pass

def test_case_54():
    try:
        float_0 = 89.6
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.positive()
        money_1 = money_0.__neg__()
        list_1 = []
        bool_0 = some_money_0.gte(money_0)
        none_price_0 = module_0.NonePrice(*list_1)
        price_0 = none_price_0.abs()
        price_1 = none_price_0.subtract(price_0)
        decimal_0 = module_1.Decimal()
        float_1 = 1483.85512
        money_2 = price_1.times(float_1)
        bool_1 = money_1.lt(money_2)
        var_0 = money_0.__round__()
    except BaseException:
        pass

def test_case_55():
    try:
        float_0 = 89.6
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.positive()
        money_1 = money_0.subtract(money_0)
        list_1 = []
        bool_0 = some_money_0.gte(money_0)
        none_price_0 = module_0.NonePrice(*list_1)
        price_0 = none_price_0.abs()
        price_1 = none_price_0.subtract(price_0)
        decimal_0 = module_1.Decimal()
        dict_0 = {}
        decimal_1 = module_1.Decimal(*list_1, **dict_0)
        price_2 = module_0.Price()
        money_2 = price_2.times(list_1)
    except BaseException:
        pass

def test_case_56():
    try:
        float_0 = 89.6
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.positive()
        money_1 = money_0.subtract(money_0)
        list_1 = []
        bool_0 = some_money_0.gte(money_0)
        float_1 = money_1.__float__()
        none_price_0 = module_0.NonePrice(*list_1)
        price_0 = none_price_0.abs()
        price_1 = none_price_0.subtract(price_0)
        decimal_0 = module_1.Decimal()
        dict_0 = {}
        decimal_1 = module_1.Decimal(*list_1, **dict_0)
        money_2 = money_1.add(money_0)
        str_0 = '*?zl1plfnGO'
        bool_1 = money_2.gt(money_2)
        int_0 = -2404
        currency_type_0 = module_2.CurrencyType.CRYPTO
        str_1 = '+K\x0bpa54xMT7]\r8OTY\x0cf+'
        int_1 = 3
        currency_0 = module_2.Currency(str_0, str_1, int_0, currency_type_0, decimal_0, int_1)
        bool_2 = False
        int_2 = money_1.as_integer()
        money_3 = money_1.convert(currency_0, bool_2)
    except BaseException:
        pass

def test_case_57():
    try:
        float_0 = 89.6
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.abs()
        money_1 = money_0.subtract(money_0)
        list_1 = []
        bool_0 = some_money_0.gte(money_0)
        none_price_0 = module_0.NonePrice(*list_1)
        price_0 = none_price_0.abs()
        price_1 = none_price_0.subtract(price_0)
        decimal_0 = module_1.Decimal()
        float_1 = 1483.85512
        money_2 = price_1.times(float_1)
        bool_1 = money_1.lt(money_2)
        none_money_0 = module_0.NoneMoney()
        bool_2 = none_money_0.is_equal(none_price_0)
        money_3 = money_1.add(money_1)
        bool_3 = money_1.gt(money_1)
        bool_4 = money_1.gt(money_2)
        currency_type_0 = module_2.CurrencyType.CRYPTO
        str_0 = '+K\x0bpa54xMT7]\r8OTY\x0cf+'
        int_0 = 3
        str_1 = 'Rand'
        int_1 = -703
        decimal_1 = module_1.Decimal()
        currency_0 = module_2.Currency(str_0, str_1, int_1, currency_type_0, decimal_1, int_0)
        str_2 = "x^'W2$j"
        dict_0 = {str_2: money_1}
        date_0 = module_3.date(*list_0, **dict_0)
    except BaseException:
        pass

def test_case_58():
    try:
        float_0 = 89.6
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.positive()
        money_1 = money_0.subtract(money_0)
        list_1 = []
        bool_0 = some_money_0.gte(money_0)
        none_price_0 = module_0.NonePrice(*list_1)
        price_0 = none_price_0.abs()
        bool_1 = money_0.lte(money_0)
        price_1 = none_price_0.subtract(price_0)
        decimal_0 = module_1.Decimal()
        dict_0 = {}
        decimal_1 = module_1.Decimal()
        money_2 = money_1.add(money_1)
        bool_2 = money_1.gt(money_1)
        currency_type_0 = module_2.CurrencyType.CRYPTO
        int_0 = 3
        str_0 = 'x)Cp>\to\r]w#^G`RG'
        str_1 = '2g'
        int_1 = -49
        currency_0 = module_2.Currency(str_0, str_1, int_0, currency_type_0, decimal_0, int_1)
        money_3 = module_0.Money(**dict_0)
        money_4 = money_3.convert(currency_0, bool_2)
    except BaseException:
        pass

def test_case_59():
    try:
        float_0 = 89.6
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        price_0 = module_0.Price()
        price_1 = price_0.__neg__()
        money_0 = some_money_0.positive()
        money_1 = money_0.subtract(money_0)
        list_1 = []
        bool_0 = some_money_0.gte(money_0)
        none_price_0 = module_0.NonePrice(*list_1)
        price_2 = none_price_0.abs()
        bool_1 = money_0.lte(money_0)
        price_3 = none_price_0.subtract(price_2)
        decimal_0 = module_1.Decimal()
        decimal_1 = module_1.Decimal()
        var_0 = None
        money_2 = money_1.add(money_1)
        bool_2 = money_1.gt(money_1)
        price_4 = price_0.scalar_add(var_0)
    except BaseException:
        pass

def test_case_60():
    try:
        bool_0 = False
        list_0 = [bool_0, bool_0, bool_0]
        some_price_0 = module_0.SomePrice(*list_0)
        int_0 = some_price_0.as_integer()
        some_price_1 = module_0.SomePrice()
    except BaseException:
        pass

def test_case_61():
    try:
        float_0 = 89.6
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.positive()
        money_1 = money_0.subtract(money_0)
        list_1 = []
        bool_0 = some_money_0.gte(money_0)
        none_price_0 = module_0.NonePrice(*list_1)
        price_0 = none_price_0.abs()
        bool_1 = money_0.lte(money_0)
        var_0 = None
        none_money_0 = module_0.NoneMoney()
        money_2 = none_money_0.multiply(var_0)
        price_1 = none_price_0.subtract(price_0)
        decimal_0 = module_1.Decimal()
        decimal_1 = module_1.Decimal()
        money_3 = money_1.add(money_1)
        str_0 = '*?zl1plfnGO'
        str_1 = '$Eef!$<\x0bq+?E|g'
        bool_2 = money_1.gt(money_1)
        currency_type_0 = module_2.CurrencyType.CRYPTO
        str_2 = '<J'
        int_0 = None
        int_1 = -2219
        str_3 = 'Chilean Peso'
        int_2 = -18
        int_3 = None
        currency_0 = module_2.Currency(str_0, str_3, int_2, currency_type_0, decimal_1, int_3)
        money_4 = none_money_0.with_ccy(currency_0)
        bool_3 = some_money_0.gte(money_4)
        currency_1 = module_2.Currency(str_1, str_2, int_0, currency_type_0, decimal_1, int_1)
        money_5 = money_0.convert(currency_1)
    except BaseException:
        pass

def test_case_62():
    try:
        var_0 = None
        list_0 = [var_0, var_0, var_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.negative()
    except BaseException:
        pass

def test_case_63():
    try:
        float_0 = 89.6
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.positive()
        money_1 = money_0.subtract(money_0)
        list_1 = []
        bool_0 = some_money_0.gte(money_0)
        none_price_0 = module_0.NonePrice(*list_1)
        price_0 = none_price_0.abs()
        bool_1 = money_0.lte(money_0)
        price_1 = none_price_0.subtract(price_0)
        decimal_0 = module_1.Decimal()
        decimal_1 = module_1.Decimal()
        money_2 = money_1.add(money_1)
        price_2 = none_price_0.abs()
        str_0 = '$Eef!$<\x0bq+?E|g'
        bool_2 = money_1.gt(money_1)
        currency_type_0 = module_2.CurrencyType.CRYPTO
        str_1 = '00by~ m~4\x0cibC'
        int_0 = 3432
        int_1 = 0
        currency_0 = module_2.Currency(str_0, str_1, int_0, currency_type_0, decimal_0, int_1)
        int_2 = money_1.as_integer()
        some_price_0 = module_0.SomePrice(*list_0)
        bool_3 = some_price_0.lt(price_0)
        str_2 = '\n        Debit postings of the journal entry.\n        '
        float_1 = some_price_0.as_float()
        money_3 = money_0.convert(currency_0, str_2)
    except BaseException:
        pass

def test_case_64():
    try:
        none_money_0 = module_0.NoneMoney()
        price_0 = module_0.Price()
        price_1 = price_0.divide(none_money_0)
    except BaseException:
        pass

def test_case_65():
    try:
        money_0 = module_0.Money()
        bool_0 = money_0.__lt__(money_0)
        some_money_0 = module_0.SomeMoney()
    except BaseException:
        pass

def test_case_66():
    try:
        float_0 = 108.29342058115786
        list_0 = [float_0, float_0, float_0]
        int_0 = 4
        dict_0 = {}
        some_price_0 = module_0.SomePrice(*list_0, **dict_0)
        price_0 = some_price_0.floor_divide(int_0)
    except BaseException:
        pass

def test_case_67():
    try:
        float_0 = 89.6
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.positive()
        decimal_0 = None
        price_0 = module_0.Price()
        price_1 = price_0.with_qty(decimal_0)
        money_1 = money_0.subtract(money_0)
        list_1 = []
        bool_0 = some_money_0.gte(money_0)
        none_price_0 = module_0.NonePrice(*list_1)
        price_2 = none_price_0.abs()
        bool_1 = money_0.lte(money_0)
        price_3 = none_price_0.subtract(price_2)
        decimal_1 = module_1.Decimal()
        decimal_2 = module_1.Decimal()
        money_2 = money_1.add(money_1)
        bool_2 = money_1.gt(money_1)
        price_4 = price_2.positive()
        int_0 = -2404
        currency_type_0 = module_2.CurrencyType.CRYPTO
        int_1 = 3
        str_0 = "s)'u;Dy\n"
        str_1 = '<J'
        currency_0 = module_2.Currency(str_0, str_1, int_0, currency_type_0, decimal_2, int_1)
        int_2 = money_2.as_integer()
        some_price_0 = module_0.SomePrice(*list_0)
        bool_3 = some_price_0.lt(price_3)
        money_3 = money_1.convert(currency_0)
    except BaseException:
        pass

def test_case_68():
    try:
        float_0 = 89.6
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.positive()
        decimal_0 = None
        price_0 = module_0.Price()
        price_1 = price_0.with_qty(decimal_0)
        price_2 = price_0.positive()
    except BaseException:
        pass

def test_case_69():
    try:
        float_0 = 90.04590932860859
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.positive()
        money_1 = money_0.subtract(money_0)
        list_1 = []
        bool_0 = some_money_0.gte(money_0)
        none_price_0 = module_0.NonePrice(*list_1)
        price_0 = none_price_0.abs()
        bool_1 = money_0.lte(money_0)
        price_1 = none_price_0.subtract(price_0)
        decimal_0 = module_1.Decimal()
        decimal_1 = module_1.Decimal()
        money_2 = money_1.add(money_1)
        str_0 = '*?zl1plfnGO'
        bytes_0 = b'\xe5'
        price_2 = price_0.scalar_add(bytes_0)
        price_3 = price_0.positive()
        bool_2 = some_money_0.lt(money_0)
        int_0 = -2425
        var_0 = price_0.__round__(int_0)
        bool_3 = money_2.lt(money_0)
        some_price_0 = module_0.SomePrice(*list_0)
        price_4 = some_price_0.subtract(price_0)
        bool_4 = some_price_0.gt(price_4)
        int_1 = money_2.__int__()
        currency_type_0 = None
        currency_0 = module_2.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_1)
        int_2 = money_2.as_integer()
        price_5 = some_price_0.subtract(price_4)
        price_6 = some_price_0.positive()
        var_1 = None
        price_7 = price_6.__abs__()
        price_8 = price_7.divide(var_1)
    except BaseException:
        pass

def test_case_70():
    try:
        float_0 = 89.6
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.positive()
        decimal_0 = None
        price_0 = module_0.Price()
        price_1 = price_0.with_qty(decimal_0)
        money_1 = money_0.subtract(money_0)
        list_1 = []
        var_0 = None
        price_2 = price_0.__truediv__(var_0)
        bool_0 = some_money_0.gte(money_0)
        none_price_0 = module_0.NonePrice(*list_1)
        price_3 = none_price_0.abs()
        bool_1 = money_0.lte(money_0)
        price_4 = none_price_0.subtract(price_3)
        decimal_1 = module_1.Decimal()
        decimal_2 = module_1.Decimal()
        money_2 = money_1.add(money_1)
        bool_2 = money_1.gt(money_1)
        price_5 = price_3.positive()
        int_0 = -2404
        currency_type_0 = module_2.CurrencyType.CRYPTO
        int_1 = 3
        str_0 = "s)'u;Dy\n"
        str_1 = '<J'
        currency_0 = module_2.Currency(str_0, str_1, int_0, currency_type_0, decimal_2, int_1)
        int_2 = money_2.as_integer()
        some_price_0 = module_0.SomePrice(*list_0)
        bool_3 = some_price_0.lt(price_4)
        money_3 = money_2.convert(currency_0)
    except BaseException:
        pass

def test_case_71():
    try:
        float_0 = 89.6
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.positive()
        money_1 = money_0.subtract(money_0)
        list_1 = []
        bool_0 = some_money_0.gte(money_0)
        bool_1 = money_0.lte(money_0)
        decimal_0 = module_1.Decimal()
        decimal_1 = module_1.Decimal()
        var_0 = None
        money_2 = money_1.add(money_1)
        bool_2 = money_1.gt(money_1)
        int_0 = -2404
        none_money_0 = module_0.NoneMoney(*list_1)
        bool_3 = none_money_0.lte(money_0)
        currency_type_0 = module_2.CurrencyType.CRYPTO
        int_1 = 3
        str_0 = "s)'u;Dy\n"
        str_1 = '<J'
        currency_0 = module_2.Currency(str_0, str_1, int_0, currency_type_0, decimal_1, int_1)
        money_3 = none_money_0.scalar_subtract(var_0)
        money_4 = some_money_0.subtract(money_3)
        int_2 = money_2.as_integer()
        some_price_0 = module_0.SomePrice(*list_0)
        money_5 = money_1.convert(currency_0)
    except BaseException:
        pass

def test_case_72():
    try:
        none_price_0 = module_0.NonePrice()
        price_0 = module_0.Price()
        price_1 = price_0.__abs__()
        some_money_0 = module_0.SomeMoney()
    except BaseException:
        pass

def test_case_73():
    try:
        float_0 = 89.6
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.negative()
        money_1 = money_0.subtract(money_0)
        list_1 = []
        bool_0 = some_money_0.gte(money_0)
        none_price_0 = module_0.NonePrice(*list_1)
        price_0 = none_price_0.abs()
        bool_1 = money_0.lte(money_0)
        price_1 = none_price_0.subtract(price_0)
        decimal_0 = module_1.Decimal()
        decimal_1 = module_1.Decimal()
        price_2 = none_price_0.round()
        money_2 = money_1.__add__(money_0)
        str_0 = '$Eef!$<\x0bq+?E|g'
        bool_2 = money_1.gt(money_1)
        price_3 = price_0.positive()
        none_money_0 = module_0.NoneMoney(*list_1)
        bool_3 = some_money_0.as_boolean()
        bool_4 = none_money_0.lte(money_2)
        currency_type_0 = module_2.CurrencyType.CRYPTO
        int_0 = 3
        bool_5 = money_2.lt(money_1)
        str_1 = '<J'
        int_1 = -2491
        currency_0 = module_2.Currency(str_0, str_1, int_0, currency_type_0, decimal_1, int_1)
        int_2 = money_2.as_integer()
        some_price_0 = module_0.SomePrice(*list_0)
        price_4 = some_price_0.positive()
        price_5 = some_price_0.with_qty(decimal_0)
        bool_6 = some_price_0.lt(price_5)
        money_3 = money_0.convert(currency_0)
    except BaseException:
        pass

def test_case_74():
    try:
        float_0 = 1989.5159
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.positive()
        money_1 = money_0.subtract(money_0)
        list_1 = []
        bool_0 = some_money_0.gte(money_0)
        none_price_0 = module_0.NonePrice(*list_1)
        price_0 = none_price_0.abs()
        bool_1 = money_0.lte(money_0)
        price_1 = none_price_0.subtract(price_0)
        decimal_0 = module_1.Decimal()
        decimal_1 = module_1.Decimal()
        money_2 = money_1.add(money_1)
        str_0 = '*?zl1plfnGO'
        bool_2 = some_money_0.lt(money_0)
        int_0 = -2425
        currency_type_0 = module_2.CurrencyType.CRYPTO
        var_0 = price_0.__round__(int_0)
        int_1 = 3
        bool_3 = money_2.lt(money_0)
        some_price_0 = module_0.SomePrice(*list_0)
        price_2 = some_price_0.subtract(price_0)
        bool_4 = some_price_0.gt(price_2)
        str_1 = 'LRD'
        int_2 = -2235
        currency_0 = module_2.Currency(str_1, str_0, int_1, currency_type_0, decimal_1, int_2)
        price_3 = price_2.with_ccy(currency_0)
        price_4 = some_price_0.subtract(price_3)
    except BaseException:
        pass

def test_case_75():
    try:
        date_0 = None
        none_price_0 = module_0.NonePrice()
        price_0 = none_price_0.with_dov(date_0)
        some_price_0 = module_0.SomePrice()
    except BaseException:
        pass

def test_case_76():
    try:
        float_0 = 89.6
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.positive()
        none_money_0 = module_0.NoneMoney()
        money_1 = none_money_0.abs()
        money_2 = money_0.subtract(money_0)
        list_1 = []
        money_3 = money_2.__abs__()
        bool_0 = some_money_0.gte(money_0)
        none_price_0 = module_0.NonePrice(*list_1)
        price_0 = none_price_0.abs()
        bool_1 = money_0.lte(money_0)
        price_1 = none_price_0.subtract(price_0)
        decimal_0 = module_1.Decimal()
        decimal_1 = module_1.Decimal()
        price_2 = none_price_0.round()
        str_0 = '$Eef!$<\x0bq+?E|g'
        price_3 = price_0.positive()
        bool_2 = money_0.lte(money_1)
        int_0 = 3
        some_price_0 = module_0.SomePrice(*list_0)
        bool_3 = some_price_0.gt(price_2)
        currency_type_0 = None
        currency_0 = module_2.Currency(str_0, str_0, int_0, currency_type_0, decimal_1, int_0)
        int_1 = money_2.as_integer()
        some_price_1 = module_0.SomePrice(*list_0)
        price_4 = some_price_1.positive()
        price_5 = some_price_1.add(price_2)
        bool_4 = some_price_1.lt(price_4)
        bool_5 = price_4.__eq__(int_1)
        money_4 = money_2.convert(currency_0)
    except BaseException:
        pass

def test_case_77():
    try:
        float_0 = 89.6
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.positive()
        money_1 = money_0.subtract(money_0)
        list_1 = []
        bool_0 = some_money_0.gte(money_0)
        none_price_0 = module_0.NonePrice(*list_1)
        price_0 = none_price_0.abs()
        price_1 = none_price_0.subtract(price_0)
        decimal_0 = module_1.Decimal()
        decimal_1 = module_1.Decimal()
        price_2 = none_price_0.round()
        money_2 = money_1.add(money_1)
        money_3 = money_2.__neg__()
        bool_1 = money_2.lte(money_3)
        str_0 = '?zlplfnGO'
        price_3 = price_0.positive()
        bool_2 = money_0.lte(money_2)
        int_0 = 3
        bool_3 = money_2.lt(money_0)
        some_price_0 = module_0.SomePrice(*list_0)
        bool_4 = some_price_0.gt(price_2)
        int_1 = money_2.__int__()
        currency_type_0 = None
        currency_0 = module_2.Currency(str_0, str_0, int_0, currency_type_0, decimal_1, int_0)
        int_2 = money_1.as_integer()
        some_price_1 = module_0.SomePrice(*list_0)
        price_4 = some_price_0.subtract(price_1)
        price_5 = some_price_1.positive()
        price_6 = some_price_1.add(price_2)
        bool_5 = some_price_1.lt(price_5)
        price_7 = price_5.scalar_add(none_price_0)
    except BaseException:
        pass

def test_case_78():
    try:
        float_0 = 89.6
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.positive()
        money_1 = money_0.subtract(money_0)
        list_1 = []
        bool_0 = some_money_0.gte(money_0)
        none_price_0 = module_0.NonePrice(*list_1)
        price_0 = none_price_0.abs()
        bool_1 = money_0.lte(money_0)
        price_1 = none_price_0.subtract(price_0)
        decimal_0 = module_1.Decimal()
        decimal_1 = module_1.Decimal()
        money_2 = money_1.add(money_1)
        str_0 = '*?zl1plfnGO'
        price_2 = price_0.positive()
        bool_2 = money_0.lte(money_2)
        int_0 = 3
        bool_3 = money_2.lt(money_0)
        some_price_0 = module_0.SomePrice(*list_0)
        bool_4 = some_price_0.gt(price_2)
        int_1 = money_2.__int__()
        currency_type_0 = None
        currency_0 = module_2.Currency(str_0, str_0, int_0, currency_type_0, decimal_1, int_0)
        int_2 = money_1.as_integer()
        some_price_1 = module_0.SomePrice(*list_0)
        price_3 = some_price_1.subtract(price_0)
        price_4 = some_price_0.positive()
        price_5 = some_price_0.add(price_3)
        var_0 = None
        price_6 = price_4.scalar_subtract(var_0)
    except BaseException:
        pass

def test_case_79():
    try:
        str_0 = '3bq'
        int_0 = -1781
        currency_type_0 = module_2.CurrencyType.ALTERNATIVE
        decimal_0 = module_1.Decimal()
        currency_0 = module_2.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        list_0 = [currency_type_0, currency_type_0, currency_type_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.convert(currency_0)
    except BaseException:
        pass

def test_case_80():
    try:
        str_0 = "\t'?%\r%f52H\x0cn(vlg+"
        float_0 = 72.452
        price_0 = module_0.Price()
        price_1 = price_0.__neg__()
        dict_0 = {str_0: str_0, str_0: str_0, str_0: float_0}
        list_0 = []
        none_price_0 = module_0.NonePrice(*list_0)
        price_2 = none_price_0.abs()
        price_3 = price_2.__truediv__(dict_0)
        decimal_0 = module_1.Decimal()
        float_1 = 1483.85512
        money_0 = price_3.times(float_1)
        money_1 = money_0.__floordiv__(decimal_0)
        bool_0 = money_0.__eq__(str_0)
        var_0 = money_1.__round__()
        int_0 = -628
        str_1 = ''
        int_1 = -2523
        currency_type_0 = module_2.CurrencyType.MONEY
        currency_0 = module_2.Currency(str_0, str_1, int_1, currency_type_0, decimal_0, int_1)
        decimal_1 = currency_0.quantize(decimal_0)
        str_2 = '<A'
        str_3 = 'fAUkJyY}XupXC9'
        int_2 = None
        decimal_2 = module_1.Decimal()
        currency_1 = module_2.Currency(str_2, str_3, int_2, currency_type_0, decimal_2, int_0)
        str_4 = 'g3|.QZd3T'
        str_5 = 'G)rcTUUhqV.27'
        decimal_3 = currency_1.quantize(decimal_2)
        int_3 = 591
        currency_2 = module_2.Currency(str_4, str_5, int_0, currency_type_0, decimal_3, int_3)
        str_6 = ''
        dict_1 = {str_6: dict_0}
        str_7 = 'CC($.9;~"\x0b8x'
        price_4 = price_0.__mul__(str_7)
        bool_1 = price_0.__ge__(price_0)
        some_price_0 = module_0.SomePrice(**dict_1)
    except BaseException:
        pass

def test_case_81():
    try:
        float_0 = 89.6
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.abs()
        money_1 = money_0.subtract(money_0)
        list_1 = []
        money_2 = money_1.__abs__()
        bool_0 = some_money_0.gte(money_0)
        none_price_0 = module_0.NonePrice(*list_1)
        price_0 = none_price_0.abs()
        bool_1 = money_0.lte(money_0)
        decimal_0 = module_1.Decimal()
        decimal_1 = module_1.Decimal()
        price_1 = price_0.negative()
        money_3 = money_1.add(money_1)
        date_0 = None
        money_4 = money_1.with_dov(date_0)
        str_0 = '*?zl1plfnGO'
        price_2 = price_0.positive()
        int_0 = -2389
        currency_type_0 = module_2.CurrencyType.CRYPTO
        bool_2 = money_0.lte(money_3)
        var_0 = price_0.__round__(int_0)
        int_1 = 0
        bool_3 = money_3.lt(money_0)
        some_price_0 = module_0.SomePrice(*list_0)
        bool_4 = some_price_0.gt(price_1)
        int_2 = money_3.__int__()
        currency_type_1 = None
        currency_0 = module_2.Currency(str_0, str_0, int_1, currency_type_1, decimal_1, int_1)
        int_3 = money_1.as_integer()
        some_price_1 = module_0.SomePrice(*list_0)
        price_3 = some_price_1.subtract(price_1)
        price_4 = some_price_0.add(price_2)
        some_price_2 = module_0.SomePrice(*list_0)
        price_5 = some_price_2.subtract(price_4)
        bool_5 = price_1.__eq__(currency_type_0)
        money_5 = money_0.convert(currency_0)
    except BaseException:
        pass

def test_case_82():
    try:
        float_0 = 89.6
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        list_1 = []
        none_price_0 = module_0.NonePrice(*list_1)
        price_0 = none_price_0.abs()
        decimal_0 = module_1.Decimal()
        price_1 = none_price_0.round()
        str_0 = '*?zl1plfnGO'
        price_2 = price_0.positive()
        int_0 = -2389
        var_0 = price_0.__round__(int_0)
        int_1 = 3
        some_price_0 = module_0.SomePrice(*list_0)
        bool_0 = some_price_0.gt(price_1)
        currency_type_0 = None
        currency_0 = module_2.Currency(str_0, str_0, int_1, currency_type_0, decimal_0, int_1)
        price_3 = some_price_0.subtract(price_1)
        price_4 = some_price_0.add(price_2)
        some_price_1 = module_0.SomePrice(*list_0)
        bool_1 = some_price_1.gte(price_1)
        bool_2 = some_price_1.lt(price_3)
        price_5 = price_3.convert(currency_0)
    except BaseException:
        pass

def test_case_83():
    try:
        float_0 = 89.6
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.positive()
        money_1 = money_0.subtract(money_0)
        list_1 = []
        bool_0 = some_money_0.gte(money_0)
        none_price_0 = module_0.NonePrice(*list_1)
        price_0 = none_price_0.abs()
        bool_1 = money_0.lte(money_0)
        price_1 = none_price_0.subtract(price_0)
        decimal_0 = module_1.Decimal()
        decimal_1 = module_1.Decimal()
        price_2 = none_price_0.round()
        money_2 = money_1.add(money_1)
        str_0 = '*?zl1plfnGO'
        price_3 = price_0.positive()
        bool_2 = some_money_0.lt(money_0)
        int_0 = -2425
        var_0 = price_0.__round__(int_0)
        int_1 = 3
        bool_3 = money_2.lt(money_0)
        some_price_0 = module_0.SomePrice(*list_0)
        bool_4 = some_price_0.gt(price_2)
        int_2 = money_2.__int__()
        currency_type_0 = None
        currency_0 = module_2.Currency(str_0, str_0, int_1, currency_type_0, decimal_1, int_1)
        int_3 = money_1.as_integer()
        price_4 = some_price_0.with_ccy(currency_0)
        price_5 = some_price_0.positive()
        price_6 = some_price_0.add(price_4)
    except BaseException:
        pass

def test_case_84():
    try:
        monetary_operation_exception_0 = module_0.MonetaryOperationException()
        list_0 = [monetary_operation_exception_0, monetary_operation_exception_0]
        dict_0 = {}
        price_0 = module_0.Price(**dict_0)
        price_1 = price_0.scalar_subtract(list_0)
    except BaseException:
        pass

def test_case_85():
    try:
        float_0 = 89.6
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.abs()
        money_1 = money_0.subtract(money_0)
        list_1 = []
        money_2 = money_1.__abs__()
        str_0 = 'N.X\n9c4+L2GVc'
        money_3 = money_2.divide(str_0)
        bool_0 = some_money_0.gte(money_0)
        none_price_0 = module_0.NonePrice(*list_1)
        price_0 = none_price_0.abs()
        bool_1 = money_0.lte(money_0)
        decimal_0 = module_1.Decimal()
        price_1 = none_price_0.round()
        money_4 = money_1.add(money_1)
        str_1 = '*?zl1plfnGO'
        price_2 = price_0.positive()
        int_0 = -2389
        bool_2 = money_0.lte(money_4)
        var_0 = price_0.__round__(int_0)
        int_1 = 7
        bool_3 = money_4.lt(money_0)
        some_price_0 = module_0.SomePrice(*list_0)
        bool_4 = some_price_0.gt(price_1)
        int_2 = money_4.__int__()
        currency_type_0 = None
        currency_0 = module_2.Currency(str_1, str_1, int_1, currency_type_0, decimal_0, int_1)
        some_price_1 = module_0.SomePrice(*list_0)
        price_3 = some_price_1.subtract(price_1)
        price_4 = some_price_0.add(price_2)
        money_5 = money_4.__truediv__(int_1)
    except BaseException:
        pass

def test_case_86():
    try:
        float_0 = 89.6
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.positive()
        money_1 = money_0.subtract(money_0)
        list_1 = []
        bool_0 = some_money_0.gte(money_0)
        none_price_0 = module_0.NonePrice(*list_1)
        price_0 = none_price_0.abs()
        bool_1 = money_0.lte(money_0)
        price_1 = none_price_0.subtract(price_0)
        decimal_0 = module_1.Decimal()
        decimal_1 = module_1.Decimal()
        money_2 = money_1.add(money_1)
        str_0 = '*?zl1plfnGO'
        bytes_0 = b'\xe5'
        price_2 = price_0.scalar_add(bytes_0)
        price_3 = price_0.positive()
        bool_2 = some_money_0.lt(money_0)
        int_0 = -2425
        var_0 = price_0.__round__(int_0)
        bool_3 = money_2.lt(money_0)
        some_price_0 = module_0.SomePrice(*list_0)
        price_4 = some_price_0.subtract(price_0)
        bool_4 = some_price_0.gt(price_4)
        currency_type_0 = None
        currency_0 = module_2.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        int_1 = money_2.as_integer()
        price_5 = some_price_0.subtract(price_4)
        price_6 = some_price_0.positive()
        price_7 = price_5.with_ccy(currency_0)
        bool_5 = some_price_0.lt(price_7)
    except BaseException:
        pass

def test_case_87():
    try:
        money_0 = module_0.Money()
        money_1 = money_0.negative()
    except BaseException:
        pass

def test_case_88():
    try:
        set_0 = set()
        dict_0 = {}
        price_0 = module_0.Price(**dict_0)
        price_1 = price_0.__floordiv__(set_0)
        list_0 = []
        some_price_0 = module_0.SomePrice(*list_0)
    except BaseException:
        pass

def test_case_89():
    try:
        dict_0 = {}
        price_0 = module_0.Price(**dict_0)
        price_1 = price_0.__add__(price_0)
        list_0 = []
        some_price_0 = module_0.SomePrice(*list_0)
    except BaseException:
        pass

def test_case_90():
    try:
        price_0 = module_0.Price()
        price_1 = price_0.round()
    except BaseException:
        pass

def test_case_91():
    try:
        str_0 = '\n        Returns the currency identified by the code or raises lookup error.\n        '
        int_0 = -1729
        currency_type_0 = module_2.CurrencyType.ALTERNATIVE
        decimal_0 = module_1.Decimal()
        currency_0 = module_2.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_0)
        bool_0 = True
        list_0 = [currency_type_0, currency_type_0, currency_type_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.convert(currency_0, bool_0)
    except BaseException:
        pass

def test_case_92():
    try:
        var_0 = None
        int_0 = 2
        none_money_0 = module_0.NoneMoney()
        monetary_operation_exception_0 = module_0.MonetaryOperationException()
        list_0 = [none_money_0, none_money_0, monetary_operation_exception_0]
        some_price_0 = module_0.SomePrice(*list_0)
        price_0 = some_price_0.multiply(int_0)
        money_0 = some_price_0.times(var_0)
    except BaseException:
        pass

def test_case_93():
    try:
        money_0 = module_0.Money()
        money_1 = money_0.abs()
    except BaseException:
        pass

def test_case_94():
    try:
        none_money_0 = module_0.NoneMoney()
        monetary_operation_exception_0 = module_0.MonetaryOperationException()
        list_0 = [none_money_0, none_money_0, monetary_operation_exception_0]
        some_price_0 = module_0.SomePrice(*list_0)
        str_0 = None
        str_1 = '*49,Ks9'
        int_0 = None
        currency_type_0 = module_2.CurrencyType.METAL
        decimal_0 = module_1.Decimal()
        int_1 = 681
        currency_0 = module_2.Currency(str_0, str_1, int_0, currency_type_0, decimal_0, int_1)
        price_0 = some_price_0.with_ccy(currency_0)
        bool_0 = some_price_0.gt(price_0)
    except BaseException:
        pass

def test_case_95():
    try:
        price_0 = module_0.Price()
        price_1 = price_0.__sub__(price_0)
        price_2 = price_0.subtract(price_1)
    except BaseException:
        pass

def test_case_96():
    try:
        money_0 = module_0.Money()
        int_0 = money_0.__int__()
        money_1 = module_0.Money()
        money_2 = money_1.negative()
    except BaseException:
        pass

def test_case_97():
    try:
        price_0 = module_0.Price()
        int_0 = price_0.as_integer()
    except BaseException:
        pass

def test_case_98():
    try:
        money_0 = module_0.Money()
        money_1 = money_0.add(money_0)
    except BaseException:
        pass

def test_case_99():
    try:
        none_money_0 = module_0.NoneMoney()
        money_0 = module_0.Money()
        money_1 = none_money_0.subtract(money_0)
        money_2 = none_money_0.negative()
        int_0 = money_0.__int__()
        dict_0 = {}
        some_money_0 = module_0.SomeMoney(**dict_0)
    except BaseException:
        pass

def test_case_100():
    try:
        float_0 = 89.6
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        list_1 = []
        none_price_0 = module_0.NonePrice(*list_1)
        price_0 = none_price_0.abs()
        price_1 = none_price_0.subtract(price_0)
        decimal_0 = module_1.Decimal()
        decimal_1 = module_1.Decimal()
        price_2 = price_0.positive()
        int_0 = -2425
        var_0 = price_0.__round__(int_0)
        some_price_0 = module_0.SomePrice(*list_0)
        price_3 = some_price_0.subtract(price_0)
        bool_0 = some_price_0.gt(price_3)
        price_4 = some_price_0.subtract(price_3)
        price_5 = price_3.positive()
        str_0 = 'MVR'
        price_6 = price_4.divide(str_0)
        date_0 = module_3.date()
    except BaseException:
        pass

def test_case_101():
    try:
        monetary_operation_exception_0 = module_0.MonetaryOperationException()
        price_0 = module_0.Price()
        price_1 = price_0.multiply(monetary_operation_exception_0)
    except BaseException:
        pass

def test_case_102():
    try:
        money_0 = module_0.Money()
        float_0 = money_0.as_float()
    except BaseException:
        pass

def test_case_103():
    try:
        float_0 = 89.6
        list_0 = [float_0, float_0, float_0]
        some_money_0 = module_0.SomeMoney(*list_0)
        money_0 = some_money_0.positive()
        money_1 = money_0.subtract(money_0)
        list_1 = []
        bool_0 = some_money_0.gte(money_0)
        none_price_0 = module_0.NonePrice(*list_1)
        money_2 = money_1.add(money_0)
        price_0 = none_price_0.abs()
        bool_1 = money_0.lte(money_0)
        decimal_0 = module_1.Decimal()
        decimal_1 = module_1.Decimal()
        money_3 = money_1.add(money_1)
        str_0 = '*?zl1plfnGO'
        bool_2 = some_money_0.lt(money_0)
        int_0 = -2425
        var_0 = price_0.__round__(int_0)
        bool_3 = money_3.lt(money_0)
        some_price_0 = module_0.SomePrice(*list_0)
        price_1 = some_price_0.subtract(price_0)
        bool_4 = some_price_0.gt(price_1)
        int_1 = money_3.__int__()
        currency_type_0 = None
        currency_0 = module_2.Currency(str_0, str_0, int_0, currency_type_0, decimal_0, int_1)
        price_2 = price_0.with_ccy(currency_0)
        price_3 = some_price_0.subtract(price_0)
        price_4 = price_0.negative()
        bool_5 = price_1.gte(price_3)
        price_5 = some_price_0.add(price_4)
        bool_6 = some_price_0.lt(price_3)
        price_6 = price_3.__pos__()
        bool_7 = price_3.__eq__(int_1)
        money_4 = money_2.convert(currency_0, bool_0)
    except BaseException:
        pass

def test_case_104():
    try:
        price_0 = module_0.Price()
        price_1 = price_0.negative()
    except BaseException:
        pass