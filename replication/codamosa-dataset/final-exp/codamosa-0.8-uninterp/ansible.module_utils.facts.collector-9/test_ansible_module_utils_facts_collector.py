# Automatically generated by Pynguin.
import ansible.module_utils.facts.collector as module_0

def test_case_0():
    pass

def test_case_1():
    base_fact_collector_0 = module_0.BaseFactCollector()

def test_case_2():
    str_0 = 'C\r'
    base_fact_collector_0 = module_0.BaseFactCollector(str_0)
    var_0 = base_fact_collector_0.collect_with_namespace()

def test_case_3():
    var_0 = module_0.collector_classes_from_gather_subset()

def test_case_4():
    base_fact_collector_0 = module_0.BaseFactCollector()
    set_0 = {base_fact_collector_0}
    var_0 = module_0.collector_classes_from_gather_subset(set_0)

def test_case_5():
    base_fact_collector_0 = module_0.BaseFactCollector()
    list_0 = [base_fact_collector_0]
    str_0 = 'd`5\\@0MQUsPf\x0c5u2x&O'
    var_0 = module_0.collector_classes_from_gather_subset(list_0, str_0)

def test_case_6():
    str_0 = 'fios'
    str_1 = [str_0, str_0, str_0]
    list_0 = [str_1, str_1, str_1, str_1]
    base_fact_collector_0 = module_0.BaseFactCollector()
    var_0 = base_fact_collector_0.collect(list_0)
    base_fact_collector_1 = module_0.BaseFactCollector(str_1, list_0)
    var_1 = base_fact_collector_1.collect_with_namespace()

def test_case_7():
    float_0 = -123.0
    int_0 = 1196
    dict_0 = {}
    collector_not_found_error_0 = module_0.CollectorNotFoundError(**dict_0)
    base_fact_collector_0 = module_0.BaseFactCollector(int_0, collector_not_found_error_0)
    var_0 = base_fact_collector_0.collect_with_namespace(float_0)
    str_0 = ''
    var_1 = module_0.get_collector_names(str_0)
    unresolved_fact_dep_0 = module_0.UnresolvedFactDep()
    base_fact_collector_1 = module_0.BaseFactCollector()
    var_2 = base_fact_collector_1.collect_with_namespace()
    var_3 = base_fact_collector_1.collect()
    base_fact_collector_2 = module_0.BaseFactCollector()
    set_0 = {base_fact_collector_2}
    var_4 = module_0.collector_classes_from_gather_subset(set_0)
    cycle_found_in_fact_deps_0 = module_0.CycleFoundInFactDeps(**dict_0)
    var_5 = module_0.get_collector_names()
    dict_1 = {base_fact_collector_0: base_fact_collector_1, int_0: var_5}
    var_6 = module_0.resolve_requires(dict_1, dict_1)