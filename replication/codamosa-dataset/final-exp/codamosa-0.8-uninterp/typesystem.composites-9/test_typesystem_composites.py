# Automatically generated by Pynguin.
import typesystem.composites as module_0
import typesystem.fields as module_1

def test_case_0():
    pass

def test_case_1():
    never_match_0 = module_0.NeverMatch()

def test_case_2():
    str_0 = 'I.bK]'
    bool_0 = True
    field_0 = module_1.Field(description=str_0, allow_null=bool_0)
    list_0 = [field_0, field_0, field_0, field_0]
    all_of_0 = module_0.AllOf(list_0)
    if_then_else_0 = module_0.IfThenElse(field_0)

def test_case_3():
    str_0 = '$o'
    field_0 = module_1.Field(description=str_0, default=str_0)
    if_then_else_0 = module_0.IfThenElse(field_0)

def test_case_4():
    int_0 = 1
    var_0 = lambda x: x == int_0
    var_1 = [var_0]
    any_0 = module_1.Any()
    var_2 = lambda x: x == int_0
    if_then_else_0 = module_0.IfThenElse(any_0, any_0)
    bool_0 = False
    var_3 = lambda x: x == int_0
    any_1 = module_1.Any()
    var_4 = lambda x: x == int_0
    var_5 = [var_4]
    any_2 = module_1.Any()
    any_3 = if_then_else_0.validate(int_0, bool_0)