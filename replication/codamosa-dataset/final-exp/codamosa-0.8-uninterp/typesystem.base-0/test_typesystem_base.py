# Automatically generated by Pynguin.
import typesystem.base as module_0

def test_case_0():
    pass

def test_case_1():
    int_0 = -80
    position_0 = module_0.Position(int_0, int_0, int_0)
    str_0 = position_0.__repr__()
    validation_result_0 = module_0.ValidationResult()
    iterator_0 = validation_result_0.__iter__()

def test_case_2():
    str_0 = 'e3or bmessagv'
    base_error_0 = module_0.BaseError(text=str_0, key=str_0)

def test_case_3():
    str_0 = 'eror kmessage'
    str_1 = '%'
    int_0 = 4
    list_0 = [str_0, int_0, str_0]
    str_2 = 'zr`c!%>[IIY^PoD6]=kc'
    message_0 = module_0.Message(text=str_1, code=str_0, index=list_0, position=str_2)
    list_1 = [message_0, message_0]
    base_error_0 = module_0.BaseError(messages=list_1)

def test_case_4():
    str_0 = 'error message'
    base_error_0 = module_0.BaseError(text=str_0)

def test_case_5():
    int_0 = -602
    str_0 = '&-__T[=Q3w'
    message_0 = module_0.Message(text=str_0)
    int_1 = message_0.__hash__()
    int_2 = [int_0, int_0, int_0]
    validation_result_0 = module_0.ValidationResult(value=int_2)
    var_0 = list(int_2)
    bytes_0 = None
    bool_0 = message_0.__eq__(bytes_0)

def test_case_6():
    str_0 = 'sZwFC\\~%lfy'
    int_0 = 898
    tuple_0 = ()
    base_error_0 = module_0.BaseError(text=str_0, key=int_0, position=tuple_0)
    int_1 = base_error_0.__len__()
    str_1 = base_error_0.__repr__()
    dict_0 = {int_0: int_0, str_0: int_0}
    bool_0 = base_error_0.__eq__(dict_0)

def test_case_7():
    str_0 = 'f'
    str_1 = 'g'
    validation_error_0 = module_0.ValidationError(text=str_0, code=str_1, key=str_1)
    str_2 = 'i'
    str_3 = 'XN'
    str_4 = 'k'
    validation_error_1 = module_0.ValidationError(text=str_2, code=str_3, key=str_4)
    var_0 = validation_error_0 == validation_error_1
    var_1 = print(validation_error_1)
    var_2 = validation_error_0 == validation_error_1
    var_3 = print(var_2)

def test_case_8():
    str_0 = '2+VDb5**`m'
    base_error_0 = module_0.BaseError(text=str_0, code=str_0)
    str_1 = base_error_0.__str__()

def test_case_9():
    validation_result_0 = module_0.ValidationResult()

def test_case_10():
    str_0 = 'value'
    validation_result_0 = module_0.ValidationResult(value=str_0)
    var_0 = iter(validation_result_0)
    str_1 = validation_result_0.__repr__()
    str_2 = validation_result_0.__repr__()
    var_1 = next(var_0)
    var_2 = iter(validation_result_0)
    bool_0 = validation_result_0.__bool__()
    var_3 = next(var_2)
    var_4 = bool(var_1)
    bool_1 = True
    var_5 = var_4 is bool_1
    var_6 = bool(var_3)
    bool_2 = False
    var_7 = var_6 is bool_2
    var_8 = var_5 and var_7

def test_case_11():
    validation_result_0 = module_0.ValidationResult()
    str_0 = validation_result_0.__repr__()

def test_case_12():
    var_0 = None
    str_0 = 'minLength'
    iterator_0 = None
    float_0 = -3279.0
    message_0 = module_0.Message(text=str_0, index=iterator_0, start_position=float_0)
    list_0 = [message_0, message_0]
    base_error_0 = module_0.BaseError(messages=list_0)
    list_1 = base_error_0.messages(add_prefix=var_0)

def test_case_13():
    int_0 = 2
    int_1 = [int_0, int_0, int_0]
    validation_result_0 = module_0.ValidationResult(value=int_1)
    var_0 = list(validation_result_0)

def test_case_14():
    int_0 = 3673
    int_1 = 8
    position_0 = module_0.Position(int_0, int_0, int_0)
    validation_result_0 = module_0.ValidationResult()
    bool_0 = position_0.__eq__(int_1)
    position_1 = module_0.Position(int_0, int_1, int_1)
    base_error_0 = module_0.BaseError(text=position_1)
    str_0 = base_error_0.__str__()
    str_1 = 'yq '
    str_2 = position_1.__repr__()
    bool_1 = position_1.__eq__(position_0)
    message_0 = module_0.Message(text=str_1)
    str_3 = message_0.__repr__()
    int_2 = 898
    str_4 = '-jM1b+8SiviLmzm[8R\n'
    message_1 = module_0.Message(text=str_4, position=position_0)
    position_2 = None
    list_0 = [message_0, message_0, message_0]
    base_error_1 = module_0.BaseError(position=position_2, messages=list_0)
    bool_2 = message_1.__eq__(str_1)
    tuple_0 = ()
    base_error_2 = module_0.BaseError(text=str_0, key=int_2, position=tuple_0)
    int_3 = message_1.__hash__()
    int_4 = base_error_2.__len__()
    str_5 = base_error_2.__repr__()
    bool_3 = base_error_2.__eq__(position_0)

def test_case_15():
    validation_result_0 = module_0.ValidationResult()
    bool_0 = validation_result_0.__bool__()
    str_0 = validation_result_0.__repr__()
    str_1 = 'yq '
    message_0 = module_0.Message(text=str_1)
    str_2 = message_0.__repr__()
    bool_1 = message_0.__eq__(message_0)
    position_0 = None
    list_0 = [message_0, message_0, message_0]
    base_error_0 = module_0.BaseError(position=position_0, messages=list_0)
    bool_2 = message_0.__eq__(str_1)
    str_3 = base_error_0.__repr__()
    str_4 = position_0.__repr__()

def test_case_16():
    int_0 = 8
    position_0 = module_0.Position(int_0, int_0, int_0)
    validation_result_0 = module_0.ValidationResult()
    bool_0 = position_0.__eq__(int_0)
    position_1 = module_0.Position(int_0, int_0, int_0)
    base_error_0 = module_0.BaseError(text=position_1)
    str_0 = base_error_0.__str__()
    str_1 = validation_result_0.__repr__()
    str_2 = position_1.__repr__()
    bool_1 = position_0.__eq__(position_0)
    message_0 = module_0.Message(text=str_1)
    str_3 = message_0.__repr__()
    str_4 = '-jM1b+8SiviLmzm[8R\n'
    message_1 = module_0.Message(text=str_4, position=position_0)
    position_2 = None
    bool_2 = position_0.__eq__(bool_1)
    list_0 = [message_0, message_0, message_0]
    base_error_1 = module_0.BaseError(position=position_2, messages=list_0)
    bool_3 = message_1.__eq__(str_0)
    int_1 = message_1.__hash__()
    int_2 = base_error_0.__len__()
    str_5 = base_error_0.__repr__()
    str_6 = base_error_1.__str__()
    bool_4 = base_error_1.__eq__(position_0)

def test_case_17():
    str_0 = 'typing'
    validation_result_0 = module_0.ValidationResult(error=str_0)
    iterator_0 = validation_result_0.__iter__()
    int_0 = 1
    validation_result_1 = module_0.ValidationResult(value=int_0)
    str_1 = validation_result_0.__repr__()
    iterator_1 = validation_result_1.__iter__()

def test_case_18():
    str_0 = 'f'
    str_1 = 'g'
    validation_error_0 = module_0.ValidationError(text=str_0, code=str_1, key=str_1)
    validation_error_1 = module_0.ValidationError(text=str_0, code=str_1, key=str_0)
    str_2 = 'j'
    str_3 = 'k'
    validation_error_2 = module_0.ValidationError(text=str_0, code=str_2, key=str_3)
    var_0 = validation_error_0 == validation_error_1
    var_1 = print(var_0)
    var_2 = validation_error_0 == validation_error_2
    var_3 = print(var_2)