# Automatically generated by Pynguin.
import ansible.template.native_helpers as module_0
import ansible.utils.native_jinja as module_1
import ansible.parsing.yaml.objects as module_2
import jinja2.runtime as module_3

def test_case_0():
    try:
        float_0 = -625.1
        bool_0 = False
        tuple_0 = (float_0, bool_0)
        float_1 = 3326.99632
        dict_0 = {tuple_0: float_0, tuple_0: tuple_0, float_0: float_1}
        list_0 = [dict_0, dict_0, dict_0]
        var_0 = module_0.ansible_native_concat(list_0)
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = -3550
        var_0 = module_0.ansible_native_concat(int_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b'\xb2'
        var_0 = module_0.ansible_native_concat(bytes_0)
        dict_0 = None
        dict_1 = {dict_0: dict_0}
        str_0 = None
        list_0 = [dict_1]
        native_jinja_text_0 = module_1.NativeJinjaText(*list_0)
        var_1 = module_0.ansible_native_concat(native_jinja_text_0)
        dict_2 = {str_0: dict_1, str_0: dict_1, str_0: str_0, str_0: dict_1}
        var_2 = module_0.ansible_native_concat(dict_2)
        ansible_vault_encrypted_unicode_0 = module_2.AnsibleVaultEncryptedUnicode(dict_1)
        tuple_0 = None
        dict_3 = {ansible_vault_encrypted_unicode_0: tuple_0}
        var_3 = module_0.ansible_native_concat(dict_3)
        var_4 = module_0.ansible_native_concat(tuple_0)
    except BaseException:
        pass

def test_case_3():
    try:
        strict_undefined_0 = module_3.StrictUndefined()
        var_0 = []
        var_1 = module_0.ansible_native_concat(var_0)
        int_0 = 1
        var_2 = [strict_undefined_0, int_0]
        var_3 = module_0.ansible_native_concat(var_2)
    except BaseException:
        pass