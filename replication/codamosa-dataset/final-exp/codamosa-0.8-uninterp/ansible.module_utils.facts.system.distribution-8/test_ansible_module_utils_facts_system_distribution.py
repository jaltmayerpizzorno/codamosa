# Automatically generated by Pynguin.
import ansible.module_utils.facts.system.distribution as module_0

def test_case_0():
    pass

def test_case_1():
    str_0 = 'vSO'
    distribution_files_0 = module_0.DistributionFiles(str_0)
    var_0 = distribution_files_0.process_dist_files()

def test_case_2():
    str_0 = 'OpenWrt'
    str_1 = ''
    distribution_files_0 = module_0.DistributionFiles(str_0)
    var_0 = distribution_files_0.parse_distribution_file_OpenWrt(str_0, str_0, str_1, str_1)

def test_case_3():
    bytes_0 = b'A]\xdbu\xa8\xba_\xcd\xfe\xe9v\x06BE\x8c\x8e\x13'
    bool_0 = False
    tuple_0 = (bool_0,)
    distribution_0 = module_0.Distribution(bytes_0)
    str_0 = 'h'
    bool_1 = True
    distribution_files_0 = module_0.DistributionFiles(bool_1)
    var_0 = distribution_files_0.parse_distribution_file_Alpine(bytes_0, tuple_0, distribution_0, str_0)
    float_0 = None
    distribution_1 = module_0.Distribution(float_0)
    distribution_fact_collector_0 = module_0.DistributionFactCollector()

def test_case_4():
    int_0 = -1512
    str_0 = 'y>%9\n1'
    list_0 = None
    distribution_0 = module_0.Distribution(list_0)
    distribution_files_0 = module_0.DistributionFiles(int_0)
    distribution_files_1 = module_0.DistributionFiles(distribution_files_0)
    var_0 = distribution_files_1.parse_distribution_file_Debian(int_0, str_0, distribution_0, distribution_0)

def test_case_5():
    distribution_fact_collector_0 = module_0.DistributionFactCollector()
    distribution_0 = module_0.Distribution(distribution_fact_collector_0)
    set_0 = {distribution_0, distribution_0, distribution_0}
    distribution_files_0 = module_0.DistributionFiles(set_0)
    list_0 = [distribution_files_0, distribution_files_0, distribution_files_0, distribution_files_0]
    str_0 = 'Network Address'
    float_0 = 2104.6094
    var_0 = distribution_files_0.parse_distribution_file_NA(list_0, str_0, float_0, distribution_files_0)
    dict_0 = None
    distribution_1 = module_0.Distribution(dict_0)

def test_case_6():
    dict_0 = {}
    distribution_files_0 = module_0.DistributionFiles(dict_0)
    distribution_0 = module_0.Distribution(distribution_files_0)
    int_0 = 255
    set_0 = {distribution_0}
    float_0 = 1000.0
    float_1 = 2026.46841
    distribution_files_1 = module_0.DistributionFiles(float_1)
    var_0 = distribution_files_1.parse_distribution_file_Coreos(distribution_0, int_0, set_0, float_0)

def test_case_7():
    str_0 = None
    bytes_0 = b'\xa2\n\xa9\xd1R;\x16b`-\x103\xffU\xb9\xe1\xb5'
    tuple_0 = ()
    distribution_files_0 = module_0.DistributionFiles(tuple_0)
    var_0 = distribution_files_0.parse_distribution_file_Flatcar(str_0, bytes_0, str_0, bytes_0)

def test_case_8():
    bool_0 = False
    distribution_0 = module_0.Distribution(bool_0)

def test_case_9():
    str_0 = '\\V6(S8~/u" cFo'
    distribution_0 = module_0.Distribution(str_0)
    var_0 = distribution_0.get_distribution_facts()

def test_case_10():
    bytes_0 = b'O\xcb\xe9\xdaK\xc2'
    distribution_0 = module_0.Distribution(bytes_0)
    var_0 = distribution_0.get_distribution_FreeBSD()

def test_case_11():
    bytes_0 = b';\xd836\x0c0\xcf\xbb\xcb\xee.|#\x0bx\xdf\x1d'
    tuple_0 = (bytes_0,)
    distribution_fact_collector_0 = module_0.DistributionFactCollector()
    distribution_0 = module_0.Distribution(distribution_fact_collector_0)
    var_0 = distribution_0.get_distribution_SMGL()
    set_0 = {tuple_0, tuple_0}
    distribution_1 = module_0.Distribution(set_0)
    var_1 = distribution_1.get_distribution_FreeBSD()

def test_case_12():
    bytes_0 = b'\xe1t'
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    tuple_0 = (dict_0,)
    str_0 = 'XzUTr\t_0f\\U%ac|\x0bV\r'
    dict_1 = {str_0: dict_0}
    int_0 = 1739
    distribution_files_0 = module_0.DistributionFiles(str_0)
    var_0 = distribution_files_0.parse_distribution_file_CentOS(tuple_0, str_0, dict_1, int_0)

def test_case_13():
    set_0 = set()
    float_0 = -2382.831
    list_0 = [set_0, float_0, float_0, set_0]
    list_1 = None
    distribution_0 = module_0.Distribution(list_1)
    int_0 = 4294967260
    distribution_fact_collector_0 = module_0.DistributionFactCollector()
    var_0 = distribution_fact_collector_0.collect(float_0)
    dict_0 = {distribution_0: list_0}
    str_0 = 'BVdgSFRI4uaK'
    var_1 = distribution_0.get_distribution_facts()
    distribution_fact_collector_1 = module_0.DistributionFactCollector(set_0)
    tuple_0 = ()
    str_1 = '2{Gi(2'
    distribution_files_0 = module_0.DistributionFiles(set_0)
    var_2 = distribution_files_0.parse_distribution_file_OpenWrt(dict_0, tuple_0, distribution_0, str_1)
    distribution_files_1 = module_0.DistributionFiles(distribution_fact_collector_1)
    var_3 = distribution_files_1.parse_distribution_file_Coreos(int_0, distribution_fact_collector_0, dict_0, str_0)

def test_case_14():
    str_0 = 'uQ42a'
    set_0 = {str_0, str_0, str_0}
    str_1 = None
    bool_0 = True
    distribution_0 = module_0.Distribution(bool_0)
    distribution_files_0 = module_0.DistributionFiles(set_0)
    float_0 = -4191.2004
    distribution_files_1 = module_0.DistributionFiles(float_0)
    var_0 = distribution_files_0.parse_distribution_file_ClearLinux(str_0, set_0, str_1, distribution_0)

def test_case_15():
    var_0 = None
    distribution_files_0 = module_0.DistributionFiles(var_0)
    str_0 = 'name'
    str_1 = 'Amazon\n'
    str_2 = 'path'
    str_3 = 'collected_facts'
    var_1 = distribution_files_0.parse_distribution_file_Amazon(str_0, str_1, str_2, str_3)