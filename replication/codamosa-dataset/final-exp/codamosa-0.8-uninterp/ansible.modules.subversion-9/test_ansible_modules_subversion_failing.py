# Automatically generated by Pynguin.
import ansible.modules.subversion as module_0

def test_case_0():
    try:
        bytes_0 = b'\xdcXe\xa71S\x9f\x08:\xb8a\r'
        list_0 = [bytes_0, bytes_0]
        str_0 = '.U1PU]w(@63ndS:? 0m'
        set_0 = {bytes_0, str_0, bytes_0}
        dict_0 = {bytes_0: bytes_0, str_0: set_0}
        subversion_0 = module_0.Subversion(bytes_0, bytes_0, bytes_0, list_0, str_0, set_0, dict_0, dict_0)
        var_0 = subversion_0.checkout()
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = b'\xbc'
        list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
        str_0 = '.U1U]w(@63ndS:? 0m'
        set_0 = set()
        dict_0 = {}
        subversion_0 = module_0.Subversion(bytes_0, bytes_0, bytes_0, list_0, str_0, set_0, dict_0, dict_0)
        var_0 = subversion_0.export(subversion_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b'N\xcf\xad\xe1r\xaap\xce'
        list_0 = [bytes_0, bytes_0]
        str_0 = '.U1PU]w(@63ndS:? 0m'
        set_0 = {bytes_0, str_0, bytes_0}
        dict_0 = {}
        subversion_0 = module_0.Subversion(bytes_0, bytes_0, bytes_0, list_0, str_0, set_0, dict_0, dict_0)
        var_0 = subversion_0.checkout()
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'\xdcXe\xa71S\x9f\x08:\xb8a\r'
        list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
        str_0 = 'UtPU]w(@6ndS:? 0m'
        set_0 = {bytes_0, str_0, bytes_0}
        dict_0 = {bytes_0: bytes_0, str_0: set_0}
        subversion_0 = module_0.Subversion(bytes_0, bytes_0, bytes_0, list_0, str_0, set_0, dict_0, dict_0)
        var_0 = subversion_0.is_svn_repo()
    except BaseException:
        pass

def test_case_4():
    try:
        bytes_0 = b'N\xcf\xad\xe1r\xaap\xce'
        list_0 = [bytes_0, bytes_0]
        str_0 = '.U1PU]w(@63ndS:? 0m'
        set_0 = {bytes_0, str_0, bytes_0}
        dict_0 = {bytes_0: bytes_0, str_0: set_0}
        subversion_0 = module_0.Subversion(bytes_0, bytes_0, bytes_0, list_0, str_0, set_0, dict_0, dict_0)
        var_0 = subversion_0.checkout(str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        bytes_0 = b'\x9c\xc5\xd8\x16C'
        list_0 = [bytes_0, bytes_0]
        str_0 = '.U1PU]w(@63ndS:? 0m'
        set_0 = {bytes_0, str_0, bytes_0}
        dict_0 = {bytes_0: bytes_0, str_0: set_0}
        subversion_0 = module_0.Subversion(bytes_0, bytes_0, bytes_0, list_0, str_0, set_0, dict_0, dict_0)
        var_0 = subversion_0.export()
    except BaseException:
        pass

def test_case_6():
    try:
        bytes_0 = b'\x9c\xc5\xd8\x16C'
        list_0 = [bytes_0, bytes_0]
        str_0 = '.U1PU]w(@63ndS:? 0m'
        set_0 = {bytes_0, str_0, bytes_0}
        dict_0 = {bytes_0: bytes_0, str_0: set_0}
        subversion_0 = module_0.Subversion(bytes_0, bytes_0, bytes_0, list_0, str_0, set_0, dict_0, dict_0)
        var_0 = subversion_0.switch()
    except BaseException:
        pass

def test_case_7():
    try:
        list_0 = None
        int_0 = 420
        set_0 = {int_0}
        bool_0 = True
        str_0 = '88'
        bool_1 = True
        str_1 = ''
        str_2 = "\x0byr'v(=cy0]$Z'v&cA("
        subversion_0 = module_0.Subversion(str_0, set_0, list_0, bool_0, bool_1, bool_1, str_1, str_2)
        var_0 = subversion_0.update()
    except BaseException:
        pass

def test_case_8():
    try:
        float_0 = -718.12888
        str_0 = '#&|~ )`\t<Br0gxMd\r'
        set_0 = {float_0}
        str_1 = '`bw.tA\x0c'
        bytes_0 = b''
        str_2 = "ax'N|:`9Uu"
        tuple_0 = ()
        bytes_1 = b'\xcdj\x8bO(S\xaa\xde"\xf0\x9f+\xd5@D}\xe8\x93'
        dict_0 = {tuple_0: set_0}
        subversion_0 = module_0.Subversion(str_2, float_0, str_0, tuple_0, bytes_1, set_0, dict_0, set_0)
        bytes_2 = b'1\xd5\xa6\xd6H\x07\x99\x9f\xcc\xf3y2\\\xde'
        subversion_1 = module_0.Subversion(set_0, str_1, bytes_0, subversion_0, tuple_0, bytes_2, subversion_0, str_2)
        var_0 = subversion_1.revert()
    except BaseException:
        pass

def test_case_9():
    try:
        bytes_0 = b'\xd3H\x9a-\x90\x84}\xa3\r\xfb:\xc3\x84\x8e\xcb\xa0^\xd2'
        str_0 = 'i'
        str_1 = 'h{Xfi'
        tuple_0 = ()
        tuple_1 = (str_1, tuple_0, tuple_0, bytes_0)
        str_2 = '--quiet'
        dict_0 = {}
        bytes_1 = b'\x9dA3\x04\xe4N\xe2\xfb\xaa\x85\xe9\xe59S\xbd\n}\xdc'
        str_3 = 'IU81+ Y\rNcE.l,J'
        str_4 = 'ansible.modules.subversion'
        subversion_0 = module_0.Subversion(bytes_0, str_0, tuple_1, str_2, dict_0, bytes_1, str_3, str_4)
        var_0 = subversion_0.needs_update()
    except BaseException:
        pass

def test_case_10():
    try:
        bytes_0 = b'M\x89\x86a9,\x96\xf9TbN`\x82H!'
        dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
        str_0 = '#4GTF'
        bool_0 = True
        list_0 = []
        float_0 = 1427.4402
        str_1 = '?K3'
        subversion_0 = module_0.Subversion(str_0, dict_0, list_0, float_0, bool_0, str_0, str_1, float_0)
        str_2 = 'j6Hm'
        subversion_1 = module_0.Subversion(dict_0, str_0, bool_0, subversion_0, subversion_0, dict_0, float_0, str_2)
        var_0 = subversion_1.get_remote_revision()
    except BaseException:
        pass

def test_case_11():
    try:
        bytes_0 = b'\xd4\xed\x9b\x81+\x08\x15`aK\xcf'
        list_0 = [bytes_0, bytes_0]
        str_0 = ''
        set_0 = {bytes_0, str_0}
        dict_0 = {bytes_0: bytes_0, str_0: set_0}
        subversion_0 = module_0.Subversion(bytes_0, bytes_0, bytes_0, list_0, str_0, set_0, dict_0, dict_0)
        var_0 = subversion_0.checkout()
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = 'lx.~2p6u8fHC.A6{\t'
        bool_0 = True
        set_0 = {str_0, str_0, str_0, bool_0}
        str_1 = ',dF\\xr0wY28'
        str_2 = '7^#bScCTA">,+t^'
        float_0 = 3049.9256
        int_0 = 8192
        list_0 = [int_0, float_0, str_0, float_0]
        subversion_0 = module_0.Subversion(set_0, str_1, str_2, float_0, int_0, bool_0, set_0, list_0)
        var_0 = subversion_0.has_local_mods()
    except BaseException:
        pass

def test_case_13():
    try:
        bytes_0 = b'\xcf\xadr\xaa'
        list_0 = [bytes_0, bytes_0]
        str_0 = '.U1U]w(@63ndS:? 0m'
        set_0 = {bytes_0, str_0, bytes_0}
        dict_0 = {}
        subversion_0 = module_0.Subversion(bytes_0, bytes_0, bytes_0, list_0, str_0, set_0, dict_0, dict_0)
        var_0 = subversion_0.export(subversion_0)
    except BaseException:
        pass