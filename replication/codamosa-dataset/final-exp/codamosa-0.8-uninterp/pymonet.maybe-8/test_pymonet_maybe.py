# Automatically generated by Pynguin.
import pymonet.maybe as module_0
import builtins as module_1

def test_case_0():
    pass

def test_case_1():
    bytes_0 = b'\x9f\x02T\xab*i\xc5\xbe\xd3\x08\x01\x18\xc5'
    set_0 = {bytes_0, bytes_0, bytes_0}
    bool_0 = False
    maybe_0 = module_0.Maybe(set_0, bool_0)

def test_case_2():
    object_0 = module_1.object()
    bool_0 = False
    maybe_0 = module_0.Maybe(object_0, bool_0)
    bool_1 = maybe_0.__eq__(object_0)

def test_case_3():
    object_0 = module_1.object()
    dict_0 = {object_0: object_0, object_0: object_0, object_0: object_0}
    str_0 = '+q\\Z^c,QQI'
    str_1 = '3P)_(>>+\'B<q7"'
    str_2 = '/.F?R'
    dict_1 = {str_0: str_0, str_1: str_1, str_2: str_1}
    bool_0 = True
    maybe_0 = module_0.Maybe(dict_1, bool_0)
    var_0 = maybe_0.bind(dict_0)

def test_case_4():
    int_0 = False
    object_0 = module_1.object()
    bool_0 = True
    maybe_0 = module_0.Maybe(object_0, bool_0)
    var_0 = maybe_0.map(int_0)
    int_1 = 5127
    object_1 = module_1.object()
    bytes_0 = b''
    bool_1 = True
    maybe_1 = module_0.Maybe(bytes_0, bool_1)
    var_1 = maybe_1.to_validation()
    bool_2 = maybe_1.__eq__(object_1)
    float_0 = -2701.511
    callable_0 = None
    var_2 = maybe_1.filter(callable_0)
    var_3 = maybe_1.to_try()
    maybe_2 = module_0.Maybe(float_0, bool_1)
    var_4 = maybe_2.ap(int_1)
    var_5 = maybe_2.to_lazy()
    var_6 = maybe_2.to_lazy()

def test_case_5():
    var_0 = None
    str_0 = 'uWCs\r/M\\\\4'
    bool_0 = False
    object_0 = module_1.object()
    list_0 = [str_0]
    list_1 = [var_0, list_0, str_0]
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_1, bool_1)
    var_1 = maybe_0.ap(object_0)
    maybe_1 = module_0.Maybe(list_1, bool_1)
    bool_2 = maybe_1.__eq__(object_0)
    maybe_2 = module_0.Maybe(str_0, bool_0)
    float_0 = 2103.15
    maybe_3 = module_0.Maybe(float_0, bool_2)
    str_1 = 'F&:1 Dn<V8A%!cCc\x0cE?X'
    dict_0 = {str_1: str_1, str_1: str_1, str_1: str_1}
    tuple_0 = (dict_0,)
    bool_3 = False
    var_2 = maybe_1.filter(dict_0)
    maybe_4 = module_0.Maybe(tuple_0, bool_3)
    var_3 = maybe_4.get_or_else(var_0)

def test_case_6():
    object_0 = module_1.object()
    int_0 = 1570
    str_0 = '=mdxS4x\x0c$73i'
    bool_0 = True
    maybe_0 = module_0.Maybe(str_0, bool_0)
    var_0 = maybe_0.get_or_else(int_0)
    list_0 = [object_0, var_0, str_0, int_0]
    bool_1 = False
    maybe_1 = module_0.Maybe(list_0, bool_1)
    var_1 = maybe_1.to_box()

def test_case_7():
    object_0 = module_1.object()
    str_0 = 'at.?|UW\rQ#4o+G8K-h6'
    dict_0 = {str_0: str_0, str_0: object_0, str_0: str_0}
    bool_0 = False
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    bool_1 = maybe_0.__eq__(object_0)
    bool_2 = False
    maybe_1 = module_0.Maybe(maybe_0, bool_2)
    var_0 = maybe_1.to_either()

def test_case_8():
    str_0 = 'Er3085KeDi\r/7;@S\r'
    tuple_0 = (str_0,)
    bool_0 = False
    maybe_0 = module_0.Maybe(tuple_0, bool_0)
    var_0 = maybe_0.to_try()
    dict_0 = {}
    bool_1 = False
    maybe_1 = module_0.Maybe(dict_0, bool_1)
    var_1 = maybe_1.to_box()

def test_case_9():
    var_0 = None
    str_0 = '\n        Transform Either to Maybe.\n\n        :returns: Empty Maybe\n        :rtype: Maybe[None]\n        '
    bool_0 = True
    object_0 = module_1.object()
    list_0 = [str_0]
    list_1 = [var_0, list_0, str_0]
    bool_1 = True
    maybe_0 = module_0.Maybe(bool_1, bool_1)
    var_1 = maybe_0.ap(object_0)
    maybe_1 = module_0.Maybe(list_1, bool_1)
    maybe_2 = module_0.Maybe(str_0, bool_0)
    var_2 = maybe_2.to_box()
    float_0 = 2103.15
    maybe_3 = module_0.Maybe(float_0, bool_0)
    str_1 = 'F&:1 Dn<V8A%!cCc\x0cE?X'
    dict_0 = {str_1: str_1, str_1: str_1, str_1: str_1}
    tuple_0 = (dict_0,)
    bool_2 = False
    var_3 = maybe_1.filter(dict_0)
    maybe_4 = module_0.Maybe(tuple_0, bool_2)

def test_case_10():
    callable_0 = None
    str_0 = 'Bf\x0bZ8'
    dict_0 = {str_0: str_0}
    bool_0 = True
    maybe_0 = module_0.Maybe(dict_0, bool_0)
    var_0 = maybe_0.map(callable_0)
    list_0 = []
    bool_1 = True
    maybe_1 = module_0.Maybe(list_0, bool_1)
    var_1 = maybe_1.to_either()
    list_1 = [callable_0]
    bool_2 = False
    maybe_2 = module_0.Maybe(list_1, bool_2)
    var_2 = maybe_2.to_lazy()
    object_0 = module_1.object()
    list_2 = [object_0, object_0]
    maybe_3 = module_0.Maybe(list_2, bool_1)
    bool_3 = maybe_2.__eq__(object_0)
    var_3 = maybe_3.map(callable_0)
    var_4 = maybe_3.to_box()
    bool_4 = False
    maybe_4 = module_0.Maybe(list_2, bool_4)

def test_case_11():
    bytes_0 = b'\x9f\x02T\xab*i\xc5\xbe\xd3\x08\x01\x18\xc5'
    set_0 = {bytes_0, bytes_0, bytes_0}
    bool_0 = True
    maybe_0 = module_0.Maybe(set_0, bool_0)