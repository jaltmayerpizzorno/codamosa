# Automatically generated by Pynguin.
import pymonet.maybe as module_0
import builtins as module_1

def test_case_0():
    try:
        callable_0 = None
        dict_0 = {}
        bool_0 = False
        maybe_0 = module_0.Maybe(dict_0, bool_0)
        maybe_1 = module_0.Maybe(maybe_0, bool_0)
        var_0 = maybe_1.map(callable_0)
    except BaseException:
        pass

def test_case_1():
    try:
        list_0 = []
        object_0 = module_1.object(*list_0)
        bytes_0 = b'9T\xec\xb2\xe74\xdb\x05,>\x88\x11U\x05\xc3\xb3\xc3\x99\xf8'
        list_1 = [bytes_0, bytes_0, bytes_0, bytes_0]
        bool_0 = False
        maybe_0 = module_0.Maybe(list_1, bool_0)
        var_0 = maybe_0.bind(object_0)
    except BaseException:
        pass

def test_case_2():
    try:
        maybe_0 = None
        float_0 = -2526.786
        set_0 = {float_0}
        bool_0 = False
        maybe_1 = module_0.Maybe(set_0, bool_0)
        var_0 = maybe_1.ap(maybe_0)
    except BaseException:
        pass

def test_case_3():
    try:
        dict_0 = {}
        bool_0 = True
        maybe_0 = module_0.Maybe(dict_0, bool_0)
        callable_0 = None
        var_0 = maybe_0.filter(callable_0)
        var_1 = maybe_0.to_try()
        var_2 = None
        var_3 = maybe_0.ap(var_2)
        bool_1 = False
        str_0 = "'~0+;C9"
        maybe_1 = module_0.Maybe(str_0, bool_1)
        var_4 = maybe_1.filter(maybe_1)
    except BaseException:
        pass

def test_case_4():
    try:
        dict_0 = {}
        bool_0 = True
        maybe_0 = module_0.Maybe(dict_0, bool_0)
        var_0 = maybe_0.to_try()
        bool_1 = False
        str_0 = "'~0+;C9"
        maybe_1 = module_0.Maybe(str_0, bool_1)
        var_1 = maybe_1.filter(maybe_1)
    except BaseException:
        pass

def test_case_5():
    try:
        float_0 = 698.0
        bool_0 = False
        bytes_0 = b'\xfb\x86S\xb9\xa1\xa2\x87"\x18`.\x8f\xf1:9\xc7\xad,u'
        bool_1 = True
        int_0 = 173
        bool_2 = True
        maybe_0 = module_0.Maybe(int_0, bool_2)
        var_0 = maybe_0.to_box()
        maybe_1 = module_0.Maybe(bytes_0, bool_1)
        var_1 = maybe_1.to_either()
        maybe_2 = module_0.Maybe(float_0, bool_0)
        var_2 = maybe_2.to_validation()
        maybe_3 = module_0.Maybe(maybe_2, bool_0)
        int_1 = False
        var_3 = maybe_2.ap(int_1)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = '1*[+1OJ=x;eV0'
        list_0 = []
        bool_0 = True
        tuple_0 = (bool_0,)
        str_1 = '47OUY3'
        bool_1 = True
        maybe_0 = module_0.Maybe(str_1, bool_1)
        var_0 = maybe_0.filter(tuple_0)
        bool_2 = True
        maybe_1 = module_0.Maybe(list_0, bool_2)
        var_1 = maybe_1.get_or_else(str_0)
        bool_3 = False
        var_2 = maybe_1.to_lazy()
        list_1 = [bool_3]
        object_0 = module_1.object(*list_1)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'H{_3k{l3a{!2e.Y'
        bool_0 = True
        maybe_0 = module_0.Maybe(str_0, bool_0)
        var_0 = maybe_0.to_try()
    except BaseException:
        pass