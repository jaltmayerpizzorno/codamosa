# Automatically generated by Pynguin.
import typesystem.base as module_0

def test_case_0():
    str_0 = ' pk)\x0bS#'
    int_0 = 6
    int_1 = -1105
    position_0 = module_0.Position(int_0, int_0, int_1)
    bool_0 = position_0.__eq__(str_0)

def test_case_1():
    list_0 = []
    int_0 = 1492
    int_1 = -2052
    position_0 = module_0.Position(int_0, int_0, int_1)
    base_error_0 = module_0.BaseError(text=list_0, position=position_0)
    str_0 = base_error_0.__str__()
    str_1 = 'Must be a number.'
    message_0 = module_0.Message(text=str_1, index=position_0, position=position_0)
    str_2 = message_0.__repr__()
    position_1 = module_0.Position(int_0, int_0, int_0)

def test_case_2():
    int_0 = 2505
    position_0 = module_0.Position(int_0, int_0, int_0)
    validation_result_0 = module_0.ValidationResult(error=position_0)
    str_0 = validation_result_0.__repr__()
    str_1 = 'H<'
    message_0 = module_0.Message(text=str_1)
    bool_0 = message_0.__eq__(message_0)
    str_2 = position_0.__repr__()
    bool_1 = position_0.__eq__(bool_0)

def test_case_3():
    str_0 = '$gY!sV898|U?'
    base_error_0 = module_0.BaseError(text=str_0, key=str_0)
    str_1 = base_error_0.__repr__()

def test_case_4():
    str_0 = '$gY!sV898|U?'
    base_error_0 = module_0.BaseError(text=str_0, key=str_0)
    str_1 = base_error_0.__repr__()
    validation_error_0 = None
    dict_0 = {str_0: base_error_0, base_error_0: validation_error_0, base_error_0: base_error_0, str_1: str_0}
    validation_result_0 = module_0.ValidationResult(value=dict_0)
    bool_0 = validation_result_0.__bool__()
    message_0 = module_0.Message(text=str_0, code=str_0, position=validation_result_0)

def test_case_5():
    list_0 = []
    base_error_0 = module_0.BaseError(text=list_0)
    list_1 = base_error_0.messages()

def test_case_6():
    str_0 = 'H<'
    message_0 = module_0.Message(text=str_0)
    bool_0 = message_0.__eq__(message_0)

def test_case_7():
    str_0 = '$gY!sV898|U?'
    base_error_0 = module_0.BaseError(text=str_0, key=str_0)
    list_0 = base_error_0.messages()

def test_case_8():
    str_0 = None
    int_0 = None
    list_0 = [str_0, int_0, str_0]
    position_0 = None
    message_0 = module_0.Message(text=str_0, key=str_0, index=list_0, position=position_0, end_position=position_0)
    list_1 = [message_0, message_0, message_0]
    base_error_0 = module_0.BaseError(messages=list_1)

def test_case_9():
    float_0 = 703.8917
    set_0 = {float_0, float_0, float_0}
    bool_0 = False
    str_0 = "'O&qO"
    base_error_0 = module_0.BaseError(text=bool_0, code=str_0)
    bool_1 = base_error_0.__eq__(set_0)
    iterator_0 = base_error_0.__iter__()
    str_1 = base_error_0.__repr__()

def test_case_10():
    str_0 = '9'
    int_0 = 2618
    int_1 = 965
    int_2 = -304
    position_0 = module_0.Position(int_0, int_1, int_2)
    base_error_0 = module_0.BaseError(text=str_0, code=str_0, position=position_0)
    int_3 = None
    message_0 = module_0.Message(text=str_0, key=int_3, position=position_0)
    str_1 = '6_~JYB`'
    int_4 = 2565
    int_5 = -616
    position_1 = module_0.Position(int_4, int_5, int_5)
    message_1 = module_0.Message(text=str_1, end_position=position_1)
    str_2 = base_error_0.__str__()
    int_6 = base_error_0.__len__()
    list_0 = [message_1]
    parse_error_0 = module_0.ParseError(messages=list_0)

def test_case_11():
    str_0 = '$gY!sV898|U?'
    base_error_0 = module_0.BaseError(text=str_0, key=str_0)
    str_1 = base_error_0.__repr__()
    str_2 = base_error_0.__str__()
    validation_error_0 = None
    dict_0 = {str_0: base_error_0, base_error_0: validation_error_0, base_error_0: base_error_0, str_2: str_0}
    validation_result_0 = module_0.ValidationResult(value=dict_0)
    bool_0 = validation_result_0.__bool__()
    message_0 = module_0.Message(text=str_2, code=str_0, position=validation_result_0)

def test_case_12():
    str_0 = '\r=c'
    validation_result_0 = module_0.ValidationResult(error=str_0)

def test_case_13():
    str_0 = '\r=c'
    validation_result_0 = module_0.ValidationResult(error=str_0)
    bool_0 = validation_result_0.__bool__()

def test_case_14():
    bytes_0 = b'\xded\xdd'
    str_0 = 'empty'
    bytes_1 = b'\x90q\x9c\xe4\xb7+t\xa16'
    message_0 = module_0.Message(text=str_0, end_position=bytes_1)
    bool_0 = message_0.__eq__(bytes_0)
    int_0 = 4
    int_1 = -2010
    int_2 = 1
    position_0 = module_0.Position(int_0, int_1, int_2)
    str_1 = position_0.__repr__()

def test_case_15():
    int_0 = 1
    validation_result_0 = module_0.ValidationResult(value=int_0)
    iterator_0 = validation_result_0.__iter__()
    var_0 = next(iterator_0)

def test_case_16():
    str_0 = 'Test the method BaseError.__eq__ in the class BaseError.'
    bool_0 = True
    base_error_0 = module_0.BaseError(text=str_0)
    bool_1 = base_error_0.__eq__(bool_0)

def test_case_17():
    str_0 = '$gY!sV898|U?'
    base_error_0 = module_0.BaseError(text=str_0, key=str_0)
    str_1 = base_error_0.__repr__()
    str_2 = base_error_0.__str__()
    validation_error_0 = None
    list_0 = base_error_0.messages(add_prefix=str_1)
    dict_0 = {str_0: base_error_0, base_error_0: validation_error_0, base_error_0: base_error_0, str_2: str_0}
    validation_result_0 = module_0.ValidationResult(value=dict_0)
    bool_0 = validation_result_0.__bool__()
    message_0 = module_0.Message(text=str_2, code=str_0, position=validation_result_0)

def test_case_18():
    int_0 = 1
    validation_result_0 = module_0.ValidationResult(value=int_0)
    iterator_0 = validation_result_0.__iter__()
    var_0 = next(iterator_0)
    var_1 = next(iterator_0)

def test_case_19():
    str_0 = 'Test t(e m&thod Baselrror__e,__Iin the clas BaseError.'
    str_1 = 'unique_items'
    list_0 = [str_1, str_1, str_0, str_0]
    str_2 = 'ValidationResult(error=Position(line_no=2505, column_no=126, char_index=2505))'
    message_0 = module_0.Message(text=str_2, code=str_0, index=list_0)
    message_1 = module_0.Message(text=str_1, index=list_0, start_position=message_0)
    str_3 = '$3E% )MB\nmP~Y>'
    message_2 = module_0.Message(text=str_3, key=str_1)
    list_1 = [message_1, message_1, message_0, message_2]
    parse_error_0 = module_0.ParseError(messages=list_1)
    message_3 = module_0.Message(text=str_0, position=parse_error_0)
    bool_0 = message_1.__eq__(message_0)

def test_case_20():
    int_0 = 1230
    int_1 = 126
    int_2 = 2505
    position_0 = module_0.Position(int_0, int_1, int_2)
    bool_0 = position_0.__eq__(position_0)
    validation_result_0 = module_0.ValidationResult(error=position_0)
    str_0 = validation_result_0.__repr__()
    int_3 = 5
    str_1 = 'H<'
    message_0 = module_0.Message(text=str_1)
    list_0 = [message_0, message_0, message_0, message_0]
    bool_1 = message_0.__eq__(message_0)
    base_error_0 = module_0.BaseError(messages=list_0)
    str_2 = base_error_0.__str__()
    position_1 = module_0.Position(int_3, int_3, int_3)
    bool_2 = position_1.__eq__(int_2)
    position_2 = module_0.Position(int_3, int_0, int_2)
    bool_3 = position_2.__eq__(str_2)
    str_3 = base_error_0.__repr__()
    str_4 = base_error_0.__str__()
    str_5 = message_0.__repr__()
    bool_4 = base_error_0.__eq__(bool_2)
    int_4 = 3206
    int_5 = 1577
    position_3 = module_0.Position(int_4, int_1, int_2)
    str_6 = 'H<'
    int_6 = 105
    list_1 = [int_4, int_0, int_5, int_6]
    message_1 = module_0.Message(text=str_6, index=list_1, position=position_2)
    str_7 = message_0.__repr__()
    validation_error_0 = module_0.ValidationError(messages=list_0)
    bool_5 = base_error_0.__eq__(validation_error_0)

def test_case_21():
    str_0 = 'Test t(e m&thod Baselrror__e,__Iin the clas BaseError.'
    str_1 = 'unique_items'
    list_0 = [str_1, str_1, str_0, str_0]
    str_2 = None
    message_0 = module_0.Message(text=str_1, code=str_2, index=list_0)
    message_1 = module_0.Message(text=str_1, index=list_0, start_position=message_0)
    str_3 = '$3E% )MB\nmP~Y>'
    message_2 = module_0.Message(text=str_3, key=str_1)
    list_1 = [message_1, message_1, message_0, message_2]
    parse_error_0 = module_0.ParseError(messages=list_1)
    message_3 = module_0.Message(text=str_0, position=parse_error_0)
    bool_0 = message_1.__eq__(message_0)

def test_case_22():
    str_0 = 'Test t(e m&thod Baselrror__e,__Iin the clas BaseError.'
    str_1 = 'unique_items'
    list_0 = [str_1, str_1, str_0, str_0]
    message_0 = module_0.Message(text=str_1, code=str_0, index=list_0)
    message_1 = module_0.Message(text=str_1, index=list_0, start_position=message_0)
    str_2 = '$3E% )MB\nmP~Y>'
    message_2 = module_0.Message(text=str_2, key=str_1)
    list_1 = [message_1, message_1, message_0, message_2]
    parse_error_0 = module_0.ParseError(messages=list_1)
    message_3 = module_0.Message(text=str_0, position=parse_error_0)
    bool_0 = message_1.__eq__(message_0)