# Automatically generated by Pynguin.
import tornado.util as module_0
import builtins as module_1

def test_case_0():
    try:
        str_0 = '1$c}'
        object_dict_0 = module_0.ObjectDict()
        any_0 = object_dict_0.__getattr__(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = b'\n'
        int_0 = -2433
        gzip_decompressor_0 = module_0.GzipDecompressor()
        bytes_1 = gzip_decompressor_0.decompress(bytes_0, int_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '\nniBZf\\^/JbS\x0cizP3<'
        any_0 = module_0.import_object(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '1'
        str_1 = '4*:Fqk'
        str_2 = '6`Yf&(y'
        dict_0 = {str_0: str_0, str_1: str_0, str_2: str_1, str_2: str_0}
        module_0.exec_in(str_0, dict_0)
        str_3 = '\nniBZf\\^/JbS\x0cizP3<'
        any_0 = module_0.import_object(str_3)
    except BaseException:
        pass

def test_case_4():
    try:
        object_dict_0 = module_0.ObjectDict()
        var_0 = module_0.raise_exc_info(object_dict_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'tornado.escape.utf8'
        any_0 = module_0.import_object(str_0)
        list_0 = [str_0, str_0]
        base_exception_0 = module_1.BaseException(*list_0)
        optional_0 = module_0.errno_from_exception(base_exception_0)
        str_1 = 'tornado'
        any_1 = module_0.import_object(str_1)
        str_2 = '3DSVWH\tnV\x0b\tDy'
        list_1 = []
        object_dict_0 = module_0.ObjectDict(*list_1)
        any_2 = object_dict_0.__getattr__(str_2)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = '>=\\U}ObGIs\n'
        str_1 = module_0.re_unescape(str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        configurable_0 = module_0.Configurable()
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = None
        arg_replacer_0 = module_0.ArgReplacer(str_0, str_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'tornado.escape.utf8'
        any_0 = module_0.import_object(str_0)
        list_0 = [str_0, str_0]
        base_exception_0 = module_1.BaseException(*list_0)
        optional_0 = module_0.errno_from_exception(base_exception_0)
        any_1 = module_0.import_object(str_0)
        object_dict_0 = module_0.ObjectDict()
        var_0 = module_0.timedelta_to_seconds(object_dict_0)
    except BaseException:
        pass

def test_case_10():
    try:
        object_dict_0 = None
        str_0 = '0'
        dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
        module_0.exec_in(object_dict_0, dict_0)
    except BaseException:
        pass

def test_case_11():
    try:
        timeout_error_0 = None
        list_0 = [timeout_error_0]
        str_0 = ',{WRRfw[,KuU2<)c\x0bu\x0bN'
        str_1 = '>z'
        sequence_0 = None
        str_2 = 'O\n{\tdk#PB&o@"c'
        dict_0 = {str_1: list_0, str_0: str_1, str_0: str_0, str_2: str_2}
        tuple_0 = (timeout_error_0, sequence_0, dict_0)
        var_0 = module_0.raise_exc_info(tuple_0)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = 'a=kM'
        str_1 = module_0.re_unescape(str_0)
        list_0 = []
        object_dict_0 = module_0.ObjectDict(*list_0)
        str_2 = 'o0f"UMp3eh20R8'
        var_0 = module_0.raise_exc_info(str_2)
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = 'tornado.missing_module'
        any_0 = module_0.import_object(str_0)
    except BaseException:
        pass

def test_case_14():
    try:
        str_0 = 'tornado.escape'
        any_0 = module_0.import_object(str_0)
        str_1 = 'tornado.escape.utf8'
        any_1 = module_0.import_object(str_1)
        sequence_0 = None
        base_exception_0 = module_1.BaseException()
        object_dict_0 = module_0.ObjectDict()
        arg_replacer_0 = module_0.ArgReplacer(any_1, str_0)
        str_2 = 'B'
        dict_0 = {str_2: str_0}
        any_2 = arg_replacer_0.get_old_value(sequence_0, dict_0, any_1)
        tuple_0 = arg_replacer_0.replace(str_0, sequence_0, dict_0)
        arg_replacer_1 = module_0.ArgReplacer(base_exception_0, str_2)
    except BaseException:
        pass

def test_case_15():
    try:
        str_0 = 'tornado.escape'
        any_0 = module_0.import_object(str_0)
        str_1 = 'tornado.escape.utf8'
        any_1 = module_0.import_object(str_1)
        list_0 = [any_0, str_0, any_0, any_1, any_0]
        timeout_error_0 = module_0.TimeoutError(*list_0)
        any_2 = module_0.import_object(str_0)
        sequence_0 = None
        timeout_error_1 = module_0.TimeoutError(*list_0)
        str_2 = 'FjlSoOfi?np%}VZD.f30'
        dict_0 = {str_1: any_0, str_2: any_2}
        object_dict_0 = module_0.ObjectDict(**dict_0)
        base_exception_0 = module_1.BaseException()
        object_dict_1 = module_0.ObjectDict()
        gzip_decompressor_0 = module_0.GzipDecompressor()
        optional_0 = module_0.errno_from_exception(base_exception_0)
        str_3 = '\\|RGc3`B@wIcKRQ'
        str_4 = module_0.re_unescape(str_3)
        var_0 = module_0.doctests()
        arg_replacer_0 = module_0.ArgReplacer(any_1, str_0)
        dict_1 = {}
        any_3 = arg_replacer_0.get_old_value(sequence_0, dict_1, any_1)
        sequence_1 = None
        any_4 = arg_replacer_0.get_old_value(sequence_1, dict_1, any_3)
        tuple_0 = arg_replacer_0.replace(object_dict_1, sequence_0, dict_1)
        bytes_0 = gzip_decompressor_0.flush()
        str_5 = ''
        arg_replacer_1 = module_0.ArgReplacer(object_dict_0, str_5)
    except BaseException:
        pass