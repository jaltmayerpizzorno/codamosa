# Automatically generated by Pynguin.
import ansible.parsing.splitter as module_0

def test_case_0():
    try:
        set_0 = set()
        var_0 = module_0.parse_kv(set_0)
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = 689
        var_0 = module_0.split_args(int_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '=wkzlD!"WPJ'
        var_0 = module_0.parse_kv(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'F^"n\n$C-D*.)Bv['
        set_0 = None
        var_0 = module_0.parse_kv(str_0, set_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = '\n    A derivative of RoleDefinition, used by playbook code when a role\n    is included for execution in a play.\n    '
        var_0 = module_0.parse_kv(str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'fC8\x0c"q;U\r##\'}\'='
        var_0 = module_0.parse_kv(str_0, str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = '=)[13!\n'
        var_0 = module_0.parse_kv(str_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = '{{ shell_output }}'
        var_0 = module_0.split_args(str_0)
        complex_0 = None
        var_1 = module_0.split_args(complex_0)
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = '(2q\\25~\x0b[u|d\tOVB1{%'
        var_0 = module_0.parse_kv(str_0, str_0)
    except BaseException:
        pass