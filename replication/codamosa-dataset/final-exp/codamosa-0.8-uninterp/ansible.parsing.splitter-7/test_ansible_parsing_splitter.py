# Automatically generated by Pynguin.
import ansible.parsing.splitter as module_0

def test_case_0():
    pass

def test_case_1():
    str_0 = '\\R#U>a`r%tS'
    var_0 = module_0.parse_kv(str_0)

def test_case_2():
    str_0 = 'in#f?Jm'
    var_0 = module_0.split_args(str_0)

def test_case_3():
    str_0 = "a='\\n \\t \\007 \\n'"
    var_0 = module_0.parse_kv(str_0)

def test_case_4():
    str_0 = ';tOW\tmV_1*EO'
    var_0 = module_0.join_args(str_0)

def test_case_5():
    str_0 = 's?f2g\x0brp\n-I\x0cq5'
    var_0 = module_0.split_args(str_0)

def test_case_6():
    dict_0 = None
    var_0 = module_0.parse_kv(dict_0)

def test_case_7():
    str_0 = ''
    var_0 = module_0.split_args(str_0)

def test_case_8():
    str_0 = 'a=1 b=2 c="3 3 3" d=\'4 4 4\''
    var_0 = module_0.parse_kv(str_0)
    str_1 = 'a="\\u03a9"'
    var_1 = module_0.parse_kv(str_1)
    str_2 = '>\tXdtXYItZr\nH~t*ay,I'
    var_2 = module_0.parse_kv(str_2, str_1)

def test_case_9():
    str_0 = 'H%}k;m-_$/}*N% #'
    var_0 = module_0.parse_kv(str_0)
    var_1 = module_0.split_args(str_0)

def test_case_10():
    str_0 = 'p0hV85m=\x0bP1$X\n.{'
    var_0 = module_0.parse_kv(str_0)
    str_1 = 'Process aliases from an argument_spec including warnings and deprecations.\n\n    Modify ``parameters`` by adding a new key for each alias with the supplied\n    value from ``parameters``.\n\n    If a list is provided to the alias_warnings parameter, it will be filled with tuples\n    (option, alias) in every case where both an option and its alias are specified.\n\n    If a list is provided to alias_deprecations, it will be populated with dictionaries,\n    each containing deprecation information for each alias found in argument_spec.\n\n    :param argument_spec: Dictionary of parameters, their type, and valid values.\n    :type argument_spec: dict\n\n    :param parameters: Dictionary of parameters.\n    :type parameters: dict\n\n    :param alias_warnings:\n    :type alias_warnings: list\n\n    :param alias_deprecations:\n    :type alias_deprecations: list\n    '
    bytes_0 = b''
    var_1 = module_0.parse_kv(str_1, bytes_0)

def test_case_11():
    str_0 = 'a b c'
    var_0 = module_0.split_args(str_0)
    str_1 = 'a "b c"'
    var_1 = module_0.split_args(str_1)
    str_2 = 'a "b\\" c"'
    var_2 = module_0.split_args(str_2)
    var_3 = module_0.split_args(str_2)
    var_4 = module_0.split_args(str_2)
    var_5 = module_0.split_args(str_1)
    var_6 = module_0.split_args(str_2)
    var_7 = module_0.split_args(str_2)
    var_8 = module_0.split_args(str_0)

def test_case_12():
    str_0 = 'a="\\u03a9"'
    var_0 = module_0.parse_kv(str_0)
    var_1 = module_0.parse_kv(str_0, str_0)

def test_case_13():
    str_0 = 'foo'
    var_0 = module_0.split_args(str_0)
    str_1 = 'foo bar'
    var_1 = module_0.split_args(str_1)
    str_2 = 'foo\\ bar'
    var_2 = module_0.split_args(str_2)
    str_3 = 'foo \\\n bar'
    var_3 = module_0.split_args(str_3)
    str_4 = "'foo bar'"
    var_4 = module_0.split_args(str_4)
    str_5 = '"foo bar"'
    var_5 = module_0.split_args(str_5)
    var_6 = module_0.split_args(str_5)
    var_7 = module_0.split_args(str_3)

def test_case_14():
    str_0 = 'foo'
    var_0 = module_0.split_args(str_0)
    str_1 = 'foo bar'
    var_1 = module_0.split_args(str_1)
    str_2 = 'foo\\ bar'
    var_2 = module_0.split_args(str_2)
    str_3 = 'foo \\\n bar'
    var_3 = module_0.split_args(str_3)
    str_4 = "'foo bar'"
    var_4 = module_0.split_args(str_4)
    str_5 = '"foo bar"'
    var_5 = module_0.split_args(str_5)
    str_6 = '"foo \\\nbar"'
    var_6 = module_0.split_args(str_6)
    str_7 = "foo='bar baz'"
    var_7 = module_0.split_args(str_7)

def test_case_15():
    str_0 = "hello 'world'"
    var_0 = module_0.split_args(str_0)
    str_1 = 'hello \\"world\\"'
    var_1 = module_0.split_args(str_1)
    str_2 = "hello world\\\\'s"
    var_2 = module_0.split_args(str_2)
    str_3 = 'hello world\\\\"s'
    var_3 = module_0.split_args(str_3)
    str_4 = 'hello {% world %}'
    var_4 = module_0.split_args(str_4)
    str_5 = 'hello {{ world }}'
    var_5 = module_0.split_args(str_5)
    str_6 = 'hello {# world #}'
    var_6 = module_0.split_args(str_6)

def test_case_16():
    str_0 = "hello 'world'"
    var_0 = module_0.split_args(str_0)
    str_1 = 'hello \\"world\\"'
    var_1 = module_0.split_args(str_1)
    str_2 = "hello world\\\\'s"
    var_2 = module_0.split_args(str_2)
    str_3 = 'hello world\\\\"s'
    var_3 = module_0.split_args(str_3)
    str_4 = 'hello {% world %}'
    var_4 = module_0.split_args(str_4)
    str_5 = 'hello {{ world }}'
    var_5 = module_0.split_args(str_5)
    var_6 = module_0.split_args(str_1)