# Automatically generated by Pynguin.
import ansible.cli.console as module_0

def test_case_0():
    try:
        bool_0 = False
        console_c_l_i_0 = module_0.ConsoleCLI(bool_0)
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = -308
        console_c_l_i_0 = module_0.ConsoleCLI(int_0)
        var_0 = console_c_l_i_0.get_names()
        float_0 = 922.4
        console_c_l_i_1 = module_0.ConsoleCLI(float_0)
        int_1 = -767
        console_c_l_i_2 = module_0.ConsoleCLI(int_1)
        var_1 = console_c_l_i_2.module_args(console_c_l_i_1)
    except BaseException:
        pass

def test_case_2():
    try:
        float_0 = -3664.2
        console_c_l_i_0 = module_0.ConsoleCLI(float_0)
        var_0 = console_c_l_i_0.do_remote_user(float_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'y\rnQu'
        console_c_l_i_0 = module_0.ConsoleCLI(str_0)
        var_0 = console_c_l_i_0.default(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        list_0 = []
        str_0 = ''
        set_0 = {str_0, str_0, str_0}
        float_0 = 2.0
        bool_0 = True
        tuple_0 = (str_0, float_0, bool_0)
        console_c_l_i_0 = module_0.ConsoleCLI(tuple_0)
        console_c_l_i_1 = module_0.ConsoleCLI(console_c_l_i_0)
        tuple_1 = (str_0, set_0, console_c_l_i_1)
        console_c_l_i_2 = module_0.ConsoleCLI(tuple_1)
        dict_0 = {console_c_l_i_2: tuple_1, console_c_l_i_1: tuple_1, console_c_l_i_1: tuple_1, console_c_l_i_2: str_0}
        console_c_l_i_3 = module_0.ConsoleCLI(dict_0)
        var_0 = console_c_l_i_3.do_shell(list_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = '#*T1/-\r?,5'
        console_c_l_i_0 = module_0.ConsoleCLI(str_0)
        bytes_0 = b'\xc4\x93E\xff\xf7\x17#LlP-&\xa6P\x9c\x1eb'
        console_c_l_i_1 = module_0.ConsoleCLI(bytes_0)
        var_0 = console_c_l_i_1.do_forks(console_c_l_i_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'I@?>q=k\ndL|/%'
        console_c_l_i_0 = module_0.ConsoleCLI(str_0)
        float_0 = -2398.58
        dict_0 = None
        var_0 = console_c_l_i_0.do_forks(dict_0)
        var_1 = console_c_l_i_0.do_shell(float_0)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'Y'
        float_0 = -546.23825
        console_c_l_i_0 = module_0.ConsoleCLI(float_0)
        bytes_0 = b''
        var_0 = console_c_l_i_0.do_verbosity(bytes_0)
        var_1 = console_c_l_i_0.do_become_method(console_c_l_i_0)
        str_1 = 'r*(JO~\nuJz=\rh#('
        console_c_l_i_1 = module_0.ConsoleCLI(str_1)
        var_2 = console_c_l_i_1.default(str_0)
    except BaseException:
        pass

def test_case_8():
    try:
        float_0 = 940.0
        bytes_0 = b'\x124\xaaRU\x88E\x0ed!OC'
        console_c_l_i_0 = module_0.ConsoleCLI(bytes_0)
        var_0 = console_c_l_i_0.do_cd(float_0)
    except BaseException:
        pass

def test_case_9():
    try:
        bytes_0 = b'\xa4\x0b\xcf\x1b+\x80\xb6\xd1\xb6\x03\xa3$I\x8b'
        str_0 = '2'
        float_0 = -3006.0819
        console_c_l_i_0 = module_0.ConsoleCLI(float_0)
        set_0 = {bytes_0, str_0, console_c_l_i_0, bytes_0, console_c_l_i_0}
        console_c_l_i_1 = module_0.ConsoleCLI(str_0)
        var_0 = console_c_l_i_1.run()
        var_1 = console_c_l_i_1.default(str_0)
        console_c_l_i_2 = module_0.ConsoleCLI(set_0)
        var_2 = console_c_l_i_2.do_cd(str_0)
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = 'lDCy3o@KQ'
        float_0 = -546.23825
        console_c_l_i_0 = module_0.ConsoleCLI(float_0)
        var_0 = console_c_l_i_0.do_become_method(console_c_l_i_0)
        console_c_l_i_1 = module_0.ConsoleCLI(str_0)
        str_1 = 'MphZ*:Vpp<h]A+pN,6'
        var_1 = console_c_l_i_0.do_list(str_1)
    except BaseException:
        pass

def test_case_11():
    try:
        tuple_0 = ()
        dict_0 = {tuple_0: tuple_0}
        list_0 = [dict_0, dict_0]
        str_0 = 'M!+-Z2'
        list_1 = [str_0, str_0, str_0, str_0]
        console_c_l_i_0 = module_0.ConsoleCLI(list_1)
        var_0 = console_c_l_i_0.do_become(list_0)
    except BaseException:
        pass

def test_case_12():
    try:
        str_0 = '/'
        str_1 = '{s+) _vk2r^1K\tA*G'
        console_c_l_i_0 = module_0.ConsoleCLI(str_0)
        var_0 = console_c_l_i_0.run()
        var_1 = console_c_l_i_0.default(str_1)
        bool_0 = True
        var_2 = console_c_l_i_0.do_become(bool_0)
        tuple_0 = None
        var_3 = console_c_l_i_0.post_process_args(tuple_0)
    except BaseException:
        pass

def test_case_13():
    try:
        str_0 = '2J(3\x0bW\x0c>w@wsN'
        float_0 = 296.3775
        console_c_l_i_0 = module_0.ConsoleCLI(float_0)
        var_0 = console_c_l_i_0.do_become_method(str_0)
        str_1 = '\n|zX\nd`ji96JAmJ'
        console_c_l_i_1 = module_0.ConsoleCLI(str_1)
        dict_0 = None
        var_1 = console_c_l_i_0.do_become_user(dict_0)
    except BaseException:
        pass

def test_case_14():
    try:
        float_0 = -1660.14973
        set_0 = {float_0}
        str_0 = "mk}\r{yF'1Qg\t<d"
        set_1 = {str_0, str_0}
        console_c_l_i_0 = module_0.ConsoleCLI(set_1)
        var_0 = console_c_l_i_0.do_become_user(set_0)
    except BaseException:
        pass

def test_case_15():
    try:
        str_0 = 'Y'
        float_0 = -546.23825
        console_c_l_i_0 = module_0.ConsoleCLI(float_0)
        var_0 = console_c_l_i_0.do_become_method(console_c_l_i_0)
        var_1 = console_c_l_i_0.default(str_0)
    except BaseException:
        pass

def test_case_16():
    try:
        bytes_0 = b'\x1e\xae\xed\xc5\x1b\xae\xdd'
        float_0 = -3893.313793071552
        list_0 = [bytes_0, bytes_0]
        console_c_l_i_0 = module_0.ConsoleCLI(list_0)
        var_0 = console_c_l_i_0.cmdloop()
        bool_0 = None
        var_1 = console_c_l_i_0.do_check(bool_0)
        console_c_l_i_1 = module_0.ConsoleCLI(float_0)
        str_0 = ''
        var_2 = console_c_l_i_0.do_become(str_0)
        var_3 = console_c_l_i_1.list_modules()
        var_4 = console_c_l_i_0.do_forks(float_0)
        str_1 = '%sCLI'
        var_5 = console_c_l_i_1.default(str_1)
    except BaseException:
        pass

def test_case_17():
    try:
        str_0 = '5y3oKQ'
        console_c_l_i_0 = module_0.ConsoleCLI(str_0)
        str_1 = 'r*JO~uJzD\rh#('
        int_0 = 785
        var_0 = console_c_l_i_0.do_diff(int_0)
        int_1 = -473
        bytes_0 = b'\ts\x1b\xb7\x13\xb0Z'
        dict_0 = {}
        tuple_0 = (int_1, bytes_0, int_1, dict_0)
        var_1 = console_c_l_i_0.do_timeout(tuple_0)
        list_0 = [console_c_l_i_0, str_1, var_1]
        var_2 = console_c_l_i_0.do_cd(list_0)
    except BaseException:
        pass

def test_case_18():
    try:
        str_0 = 'Dy3oKQ'
        console_c_l_i_0 = module_0.ConsoleCLI(str_0)
        var_0 = console_c_l_i_0.do_timeout(str_0)
        bytes_0 = b'\x8d\xd9\n\xdf\xd4\x86Z\xb7"\xe4{\xe0"m\xc3\xdc\xa17\xf2\x19'
        var_1 = console_c_l_i_0.default(bytes_0)
    except BaseException:
        pass

def test_case_19():
    try:
        str_0 = 'lDCy3o@KQ'
        str_1 = 'F'
        console_c_l_i_0 = module_0.ConsoleCLI(str_1)
        var_0 = console_c_l_i_0.cmdloop()
        bool_0 = False
        var_1 = console_c_l_i_0.do_timeout(bool_0)
        var_2 = console_c_l_i_0.default(str_0)
    except BaseException:
        pass

def test_case_20():
    try:
        dict_0 = None
        str_0 = 'origin'
        console_c_l_i_0 = module_0.ConsoleCLI(str_0)
        var_0 = console_c_l_i_0.helpdefault(dict_0)
    except BaseException:
        pass

def test_case_21():
    try:
        float_0 = -546.23825
        console_c_l_i_0 = module_0.ConsoleCLI(float_0)
        bytes_0 = b''
        var_0 = console_c_l_i_0.do_verbosity(bytes_0)
        var_1 = console_c_l_i_0.do_become_method(console_c_l_i_0)
        list_0 = []
        var_2 = console_c_l_i_0.do_become_method(list_0)
        str_0 = '*C'
        console_c_l_i_1 = module_0.ConsoleCLI(str_0)
        var_3 = console_c_l_i_1.default(list_0)
    except BaseException:
        pass

def test_case_22():
    try:
        float_0 = -578.422994
        str_0 = '\\_eT;IUh\'"f(y@"\''
        console_c_l_i_0 = module_0.ConsoleCLI(str_0)
        var_0 = console_c_l_i_0.do_forks(float_0)
        float_1 = 295.3239302646325
        console_c_l_i_1 = module_0.ConsoleCLI(float_1)
        str_1 = '\n|zX\nd`ji96JAmJ'
        console_c_l_i_2 = module_0.ConsoleCLI(str_1)
        dict_0 = None
        var_1 = console_c_l_i_1.do_become_user(dict_0)
    except BaseException:
        pass

def test_case_23():
    try:
        str_0 = '2'
        str_1 = 'groups'
        float_0 = -3006.0819
        console_c_l_i_0 = module_0.ConsoleCLI(float_0)
        str_2 = '@%Xn'
        var_0 = console_c_l_i_0.do_diff(str_2)
        var_1 = console_c_l_i_0.do_timeout(str_1)
        console_c_l_i_1 = module_0.ConsoleCLI(str_0)
        var_2 = console_c_l_i_1.run()
        bool_0 = True
        bytes_0 = b'y\xc1\xbe\xd2~$\xff~\xc5X\xcbj'
        int_0 = 576
        var_3 = console_c_l_i_1.completedefault(bool_0, bytes_0, float_0, int_0)
        console_c_l_i_2 = module_0.ConsoleCLI(bytes_0)
    except BaseException:
        pass

def test_case_24():
    try:
        str_0 = '<n~Ica2AH'
        set_0 = set()
        str_1 = '`z\x0c1\t-C@gvSp>!r\\'
        list_0 = [str_0, str_1, str_0]
        console_c_l_i_0 = module_0.ConsoleCLI(list_0)
        var_0 = console_c_l_i_0.do_cd(set_0)
    except BaseException:
        pass

def test_case_25():
    try:
        tuple_0 = ()
        int_0 = 2617
        console_c_l_i_0 = module_0.ConsoleCLI(int_0)
        var_0 = console_c_l_i_0.do_diff(tuple_0)
        console_c_l_i_1 = module_0.ConsoleCLI(tuple_0)
    except BaseException:
        pass

def test_case_26():
    try:
        int_0 = -1621
        int_1 = 968
        console_c_l_i_0 = module_0.ConsoleCLI(int_1)
        var_0 = console_c_l_i_0.do_timeout(int_0)
        str_0 = 'poXlFU~i8<M}l6dJa'
        var_1 = console_c_l_i_0.default(str_0)
    except BaseException:
        pass

def test_case_27():
    try:
        str_0 = 'lDCy3o@KQ'
        console_c_l_i_0 = module_0.ConsoleCLI(str_0)
        var_0 = console_c_l_i_0.cmdloop()
        var_1 = console_c_l_i_0.do_check(str_0)
        float_0 = 957.1
        var_2 = console_c_l_i_0.do_timeout(float_0)
        var_3 = console_c_l_i_0.default(str_0)
    except BaseException:
        pass

def test_case_28():
    try:
        complex_0 = None
        str_0 = '>@+L'
        dict_0 = {complex_0: complex_0, complex_0: complex_0, complex_0: complex_0}
        list_0 = [complex_0, complex_0, dict_0, complex_0]
        console_c_l_i_0 = module_0.ConsoleCLI(list_0)
        var_0 = console_c_l_i_0.module_args(str_0)
    except BaseException:
        pass

def test_case_29():
    try:
        bytes_0 = b'\xa4\x0b\xcf\x1b+\x80\xb6\xd1\xb6\x03\xa3$I\x8b'
        str_0 = '2'
        float_0 = -3006.0819
        console_c_l_i_0 = module_0.ConsoleCLI(float_0)
        console_c_l_i_1 = module_0.ConsoleCLI(str_0)
        var_0 = console_c_l_i_1.cmdloop()
        var_1 = console_c_l_i_1.run()
        var_2 = console_c_l_i_1.default(str_0)
        var_3 = console_c_l_i_1.do_cd(str_0)
        console_c_l_i_2 = module_0.ConsoleCLI(bytes_0)
    except BaseException:
        pass

def test_case_30():
    try:
        bytes_0 = b'\xa4\x0b\xcf\x1b+\x80\xb6\xd1\xb6\x03\xa3$I\x8b'
        str_0 = '2'
        str_1 = 'groups'
        float_0 = -3006.0819
        console_c_l_i_0 = module_0.ConsoleCLI(float_0)
        set_0 = {bytes_0, str_0, bytes_0, console_c_l_i_0}
        str_2 = '@%Xn'
        var_0 = console_c_l_i_0.do_diff(str_2)
        dict_0 = None
        var_1 = console_c_l_i_0.do_forks(dict_0)
        var_2 = console_c_l_i_0.do_timeout(str_1)
        console_c_l_i_1 = module_0.ConsoleCLI(str_0)
        var_3 = console_c_l_i_1.run()
        var_4 = console_c_l_i_1.default(str_1)
        console_c_l_i_2 = module_0.ConsoleCLI(set_0)
        bool_0 = None
        var_5 = console_c_l_i_1.do_remote_user(bool_0)
        var_6 = console_c_l_i_0.do_cd(bytes_0)
    except BaseException:
        pass

def test_case_31():
    try:
        str_0 = 'f'
        str_1 = 'groups'
        console_c_l_i_0 = module_0.ConsoleCLI(str_0)
        bool_0 = True
        var_0 = console_c_l_i_0.do_check(bool_0)
        str_2 = 'runit-init'
        str_3 = '5lcf;fW&Wy_WK'
        var_1 = console_c_l_i_0.run()
        var_2 = console_c_l_i_0.default(str_1)
        dict_0 = None
        var_3 = console_c_l_i_0.do_list(str_0)
        str_4 = ",|J6Wf`g4oA'I<\rHLh"
        set_0 = {str_4}
        console_c_l_i_1 = module_0.ConsoleCLI(set_0)
        list_0 = [str_3, console_c_l_i_1, str_2, dict_0]
        str_5 = 'apt_rpm'
        var_4 = console_c_l_i_0.do_shell(str_5)
        var_5 = console_c_l_i_0.do_cd(list_0)
    except BaseException:
        pass