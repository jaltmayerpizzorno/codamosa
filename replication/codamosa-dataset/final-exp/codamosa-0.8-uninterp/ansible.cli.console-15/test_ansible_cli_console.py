# Automatically generated by Pynguin.
import ansible.cli.console as module_0

def test_case_0():
    pass

def test_case_1():
    str_0 = 'origin'
    console_c_l_i_0 = module_0.ConsoleCLI(str_0)

def test_case_2():
    str_0 = 'Y'
    console_c_l_i_0 = module_0.ConsoleCLI(str_0)
    var_0 = console_c_l_i_0.run()

def test_case_3():
    bool_0 = True
    console_c_l_i_0 = module_0.ConsoleCLI(bool_0)
    var_0 = console_c_l_i_0.cmdloop()

def test_case_4():
    str_0 = ',D\x0c5}(}N'
    console_c_l_i_0 = module_0.ConsoleCLI(str_0)
    var_0 = console_c_l_i_0.list_modules()

def test_case_5():
    bytes_0 = b'!\xe2x\xf3\xb4\x07\xaf\x1aka\xcav\x81'
    console_c_l_i_0 = module_0.ConsoleCLI(bytes_0)
    var_0 = console_c_l_i_0.emptyline()

def test_case_6():
    bytes_0 = b'!\xe2x\xf3\xb4\x07\xaf\x1aka\xcav\x81'
    console_c_l_i_0 = module_0.ConsoleCLI(bytes_0)
    var_0 = console_c_l_i_0.do_verbosity(console_c_l_i_0)
    var_1 = console_c_l_i_0.emptyline()

def test_case_7():
    bytes_0 = b'\xbf\xb7\xdb\xb5\x02c{\x7f\xcd\xe8'
    float_0 = 1640.17048
    dict_0 = {float_0: float_0}
    console_c_l_i_0 = module_0.ConsoleCLI(dict_0)
    var_0 = console_c_l_i_0.do_check(bytes_0)
    var_1 = console_c_l_i_0.emptyline()

def test_case_8():
    str_0 = 'inventory'
    console_c_l_i_0 = module_0.ConsoleCLI(str_0)
    str_1 = ''
    str_2 = 'cd '
    int_0 = 4
    var_0 = console_c_l_i_0.complete_cd(str_1, str_2, int_0, int_0)

def test_case_9():
    str_0 = '2J(3\x0bW\x0c>w@wsN'
    set_0 = {str_0, str_0, str_0, str_0}
    console_c_l_i_0 = module_0.ConsoleCLI(set_0)
    console_c_l_i_1 = module_0.ConsoleCLI(console_c_l_i_0)
    float_0 = -578.422994
    str_1 = '\\_eT;IUh\'"f(y@"\''
    console_c_l_i_2 = module_0.ConsoleCLI(str_1)
    var_0 = console_c_l_i_2.do_forks(float_0)
    bool_0 = True
    var_1 = console_c_l_i_1.do_verbosity(bool_0)
    float_1 = 296.3775
    console_c_l_i_3 = module_0.ConsoleCLI(float_1)
    var_2 = console_c_l_i_3.do_become_method(str_0)
    str_2 = '\n|zX\nd`ji96JAmJ'
    console_c_l_i_4 = module_0.ConsoleCLI(str_2)

def test_case_10():
    str_0 = 'Y'
    console_c_l_i_0 = module_0.ConsoleCLI(str_0)
    float_0 = -546.23825
    int_0 = -578
    var_0 = console_c_l_i_0.do_become_method(int_0)
    str_1 = 'ovF<UDR<v\x0cV&]Wv;eM'
    var_1 = console_c_l_i_0.run()
    console_c_l_i_1 = module_0.ConsoleCLI(str_1)
    var_2 = console_c_l_i_0.helpdefault(float_0)

def test_case_11():
    str_0 = '2'
    console_c_l_i_0 = module_0.ConsoleCLI(str_0)
    str_1 = 'r*(JO~\nIuJzD\rh#('
    var_0 = console_c_l_i_0.run()
    str_2 = 'QC'
    var_1 = console_c_l_i_0.default(str_2)
    str_3 = 'Y]Y\\Z^u6Z'
    var_2 = console_c_l_i_0.default(str_3, str_1)

def test_case_12():
    str_0 = 'Y'
    console_c_l_i_0 = module_0.ConsoleCLI(str_0)
    str_1 = '5lcf;fWy_WK'
    var_0 = console_c_l_i_0.run()
    str_2 = '.1\x0by\r\x0cOy=*"y>ti([n'
    var_1 = console_c_l_i_0.default(str_2, str_1)

def test_case_13():
    str_0 = '2'
    console_c_l_i_0 = module_0.ConsoleCLI(str_0)
    var_0 = console_c_l_i_0.run()
    str_1 = 'QC'
    var_1 = console_c_l_i_0.default(str_1)
    var_2 = console_c_l_i_0.do_forks(str_0)
    int_0 = -731
    int_1 = -444
    console_c_l_i_1 = module_0.ConsoleCLI(int_1)
    var_3 = console_c_l_i_1.do_timeout(int_0)
    var_4 = console_c_l_i_0.run()

def test_case_14():
    str_0 = '2'
    console_c_l_i_0 = module_0.ConsoleCLI(str_0)
    var_0 = console_c_l_i_0.run()
    str_1 = 'Z;h62d!S\x0c?6>C@'
    var_1 = console_c_l_i_0.do_list(str_1)

def test_case_15():
    str_0 = '2'
    str_1 = 'groups'
    float_0 = -3006.0819
    console_c_l_i_0 = module_0.ConsoleCLI(float_0)
    var_0 = console_c_l_i_0.do_diff(str_0)
    dict_0 = None
    bytes_0 = b'\xac\x9a\x81\x9f\x93tW\xa1'
    tuple_0 = (bytes_0,)
    int_0 = 3530
    var_1 = console_c_l_i_0.complete_cd(tuple_0, str_1, int_0, int_0)
    var_2 = console_c_l_i_0.do_forks(dict_0)
    var_3 = console_c_l_i_0.do_timeout(str_1)
    str_2 = '_raw'
    var_4 = console_c_l_i_0.do_verbosity(str_2)
    console_c_l_i_1 = module_0.ConsoleCLI(str_0)
    bytes_1 = b'\xa4\xbd/\x02 \xb1t\xa3\x9b-mbh'
    var_5 = console_c_l_i_0.do_verbosity(bytes_1)
    var_6 = console_c_l_i_1.run()
    var_7 = console_c_l_i_1.default(str_1)
    int_1 = 1067
    console_c_l_i_2 = module_0.ConsoleCLI(int_1)
    str_3 = '\nping:\n    description: Value provided with the data parameter.\n    returned: success\n    type: str\n    sample: pong\n'
    console_c_l_i_3 = module_0.ConsoleCLI(str_3)
    var_8 = console_c_l_i_0.do_list(str_1)

def test_case_16():
    str_0 = '2'
    str_1 = 'groups'
    float_0 = -3006.0819
    str_2 = 'nyW'
    console_c_l_i_0 = module_0.ConsoleCLI(str_2)
    var_0 = console_c_l_i_0.cmdloop()
    console_c_l_i_1 = module_0.ConsoleCLI(float_0)
    var_1 = console_c_l_i_1.do_diff(str_0)
    dict_0 = None
    bytes_0 = b'\xac\x9a\x81\x9f\x93tW\xa1'
    tuple_0 = (bytes_0,)
    int_0 = 3530
    var_2 = console_c_l_i_1.complete_cd(tuple_0, str_1, int_0, int_0)
    var_3 = console_c_l_i_1.do_forks(dict_0)
    var_4 = console_c_l_i_1.do_timeout(str_1)
    str_3 = '_raw'
    var_5 = console_c_l_i_1.do_verbosity(str_3)
    console_c_l_i_2 = module_0.ConsoleCLI(str_0)
    bytes_1 = b'\xa4\xbd/\x02 \xb1t\xa3\x9b-mbh'
    var_6 = console_c_l_i_1.do_verbosity(bytes_1)
    var_7 = console_c_l_i_2.run()
    var_8 = console_c_l_i_2.default(str_1)
    int_1 = 1067
    console_c_l_i_3 = module_0.ConsoleCLI(int_1)
    str_4 = '\nping:\n    description: Value provided with the data parameter.\n    returned: success\n    type: str\n    sample: pong\n'
    console_c_l_i_4 = module_0.ConsoleCLI(str_4)
    var_9 = console_c_l_i_2.do_list(str_1)

def test_case_17():
    str_0 = 'o'
    int_0 = 3551
    console_c_l_i_0 = module_0.ConsoleCLI(str_0)
    bool_0 = False
    var_0 = console_c_l_i_0.do_check(bool_0)
    str_1 = 'runit-bnit'
    var_1 = console_c_l_i_0.run()
    var_2 = console_c_l_i_0.default(str_0)
    str_2 = 'OFQ\\hTc`F5QIa'
    str_3 = 'yum4'
    var_3 = console_c_l_i_0.run()
    bytes_0 = b'-}\xd3H\xc4\xb0\xc0\x1dO\xd4O\xc1\xc1'
    var_4 = console_c_l_i_0.do_verbosity(int_0)
    var_5 = console_c_l_i_0.complete_cd(str_2, str_3, bytes_0, bytes_0)
    var_6 = console_c_l_i_0.do_cd(str_1)
    var_7 = console_c_l_i_0.do_list(str_2)

def test_case_18():
    str_0 = '/'
    float_0 = -2984.1764535377843
    console_c_l_i_0 = module_0.ConsoleCLI(float_0)
    var_0 = console_c_l_i_0.do_diff(str_0)
    dict_0 = None
    var_1 = console_c_l_i_0.do_forks(dict_0)
    bool_0 = True
    bytes_0 = b'\n\x0c\xe8~\x1d)lPJ\xe7'
    tuple_0 = (bool_0, bytes_0, float_0)
    var_2 = console_c_l_i_0.do_diff(tuple_0)
    var_3 = console_c_l_i_0.do_timeout(str_0)
    str_1 = '{s+) _vk2r^1K\tA*G'
    var_4 = console_c_l_i_0.do_verbosity(str_1)
    console_c_l_i_1 = module_0.ConsoleCLI(str_0)
    str_2 = 'runit-init'
    var_5 = console_c_l_i_1.run()
    var_6 = console_c_l_i_1.default(str_1)
    var_7 = console_c_l_i_1.do_list(float_0)
    var_8 = console_c_l_i_1.do_cd(str_0)
    bool_1 = True
    var_9 = console_c_l_i_1.do_become(bool_1)
    str_3 = 'AF`%|KF,mI|\n{'
    console_c_l_i_2 = module_0.ConsoleCLI(str_3)
    console_c_l_i_3 = module_0.ConsoleCLI(console_c_l_i_2)
    var_10 = console_c_l_i_1.helpdefault(str_2)