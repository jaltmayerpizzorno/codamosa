# Automatically generated by Pynguin.
import ansible.template.native_helpers as module_0
import ansible.parsing.yaml.objects as module_1
import jinja2.runtime as module_2
import ansible.utils.native_jinja as module_3

def test_case_0():
    try:
        var_0 = []
        var_1 = module_0.ansible_native_concat(var_0)
        str_0 = 'str'
        str_1 = [str_0]
        var_2 = module_0.ansible_native_concat(str_1)
        str_2 = [str_0, str_1]
        var_3 = module_0.ansible_native_concat(str_2)
        str_3 = 'string'
        str_4 = 'foo'
        ansible_vault_encrypted_unicode_0 = module_1.AnsibleVaultEncryptedUnicode(str_4)
        var_4 = module_0.ansible_native_concat(ansible_vault_encrypted_unicode_0)
        str_5 = 'undefined'
        strict_undefined_0 = module_2.StrictUndefined(str_5)
        var_5 = [strict_undefined_0, str_3]
        var_6 = module_0.ansible_native_concat(var_5)
    except BaseException:
        pass

def test_case_1():
    try:
        var_0 = []
        var_1 = module_0.ansible_native_concat(var_0)
        str_0 = 'str'
        str_1 = [str_0]
        var_2 = module_0.ansible_native_concat(str_1)
        str_2 = 'ing'
        str_3 = [str_0, str_2]
        var_3 = module_0.ansible_native_concat(str_3)
        str_4 = 'string'
        str_5 = 'foo'
        ansible_vault_encrypted_unicode_0 = module_1.AnsibleVaultEncryptedUnicode(str_5)
        ansible_vault_encrypted_unicode_1 = [ansible_vault_encrypted_unicode_0]
        var_4 = module_0.ansible_native_concat(ansible_vault_encrypted_unicode_1)
        str_6 = 'undefined'
        strict_undefined_0 = module_2.StrictUndefined(str_6)
        var_5 = [strict_undefined_0, str_4]
        var_6 = module_0.ansible_native_concat(var_5)
    except BaseException:
        pass

def test_case_2():
    try:
        bytes_0 = b'\xc8\xa2\xbd\x83\x94\xff^@\xe8\r\xc3\xa4j\xa4@\x90'
        var_0 = module_0.ansible_native_concat(bytes_0)
        native_jinja_text_0 = module_3.NativeJinjaText()
        var_1 = module_0.ansible_native_concat(native_jinja_text_0)
        str_0 = 'Conditional result was False'
        var_2 = module_0.ansible_native_concat(native_jinja_text_0)
        str_1 = '(?P<service>.*?)\\s+[0-9]:(?P<rl0>on|off)\\s+[0-9]:(?P<rl1>on|off)\\s+[0-9]:(?P<rl2>on|off)\\s+[0-9]:(?P<rl3>on|off)\\s+[0-9]:(?P<rl4>on|off)\\s+[0-9]:(?P<rl5>on|off)\\s+[0-9]:(?P<rl6>on|off)'
        dict_0 = {str_0: native_jinja_text_0, str_0: str_0, str_1: native_jinja_text_0, str_0: str_0}
        dict_1 = {native_jinja_text_0: native_jinja_text_0, native_jinja_text_0: dict_0, native_jinja_text_0: dict_0, native_jinja_text_0: str_0}
        var_3 = module_0.ansible_native_concat(dict_1)
        int_0 = 1560
        var_4 = module_0.ansible_native_concat(int_0)
    except BaseException:
        pass