# Automatically generated by Pynguin.
import sanic.blueprints as module_0
import sanic.blueprint_group as module_1

def test_case_0():
    try:
        int_0 = 3400
        str_0 = None
        blueprint_0 = module_0.Blueprint(str_0)
        blueprint_group_0 = module_1.BlueprintGroup()
        blueprint_group_0.insert(int_0, blueprint_0)
        blueprint_1 = None
        blueprint_group_1 = module_1.BlueprintGroup()
        blueprint_group_1.append(blueprint_1)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '`K_egg2-o>gHwR?]'
        blueprint_group_0 = module_1.BlueprintGroup(str_0)
        var_0 = blueprint_group_0.__iter__()
        blueprint_group_1 = module_1.BlueprintGroup()
        var_1 = blueprint_group_1.__iter__()
        str_1 = 'cMaQ!SC'
        blueprint_group_1.__delitem__(str_1)
    except BaseException:
        pass

def test_case_2():
    try:
        blueprint_0 = None
        int_0 = 6
        str_0 = 'EZ!oRmA~~2'
        list_0 = []
        blueprint_group_0 = module_1.BlueprintGroup(int_0, str_0, list_0)
        var_0 = blueprint_group_0.__getitem__(blueprint_0)
    except BaseException:
        pass

def test_case_3():
    try:
        set_0 = set()
        bool_0 = False
        bool_1 = False
        set_1 = {bool_1, bool_1, bool_1}
        list_0 = [set_1, bool_1, bool_1]
        blueprint_group_0 = module_1.BlueprintGroup(list_0)
        blueprint_group_0.__setitem__(set_0, bool_0)
    except BaseException:
        pass

def test_case_4():
    try:
        blueprint_group_0 = module_1.BlueprintGroup()
        blueprint_group_1 = module_1.BlueprintGroup()
        int_0 = blueprint_group_0.__len__()
        blueprint_0 = None
        blueprint_group_0.insert(int_0, blueprint_0)
    except BaseException:
        pass

def test_case_5():
    try:
        int_0 = -2450
        str_0 = 'HTTP/1.0'
        blueprint_0 = module_0.Blueprint(str_0, str_0)
        str_1 = 'websocket_read_limit'
        bool_0 = False
        blueprint_1 = module_0.Blueprint(str_1, bool_0)
        list_0 = [blueprint_1, blueprint_1, bool_0, blueprint_1]
        blueprint_group_0 = module_1.BlueprintGroup(list_0)
        blueprint_group_0.insert(int_0, blueprint_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'test'
        blueprint_0 = module_0.Blueprint(str_0)
        blueprint_group_0 = module_1.BlueprintGroup(blueprint_0)
        int_0 = 1
        var_0 = lambda r: int_0
        var_1 = lambda r: int_0
        int_1 = 0
        var_2 = blueprint_group_0.blueprints[int_1]
    except BaseException:
        pass

def test_case_7():
    try:
        blueprint_0 = None
        float_0 = None
        str_0 = '--@etK'
        blueprint_group_0 = module_1.BlueprintGroup(str_0)
        set_0 = {blueprint_0, blueprint_group_0, float_0, float_0}
        var_0 = blueprint_group_0.extend(set_0)
    except BaseException:
        pass