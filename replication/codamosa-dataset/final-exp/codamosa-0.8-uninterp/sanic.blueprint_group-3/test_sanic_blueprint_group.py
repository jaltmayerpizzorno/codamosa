# Automatically generated by Pynguin.
import sanic.blueprint_group as module_0
import sanic.blueprints as module_1

def test_case_0():
    pass

def test_case_1():
    blueprint_group_0 = module_0.BlueprintGroup()
    var_0 = blueprint_group_0.middleware()

def test_case_2():
    blueprint_group_0 = module_0.BlueprintGroup()
    int_0 = blueprint_group_0.__len__()

def test_case_3():
    int_0 = 3988
    str_0 = '\n        Helper method provided to enable the logging of responses in case if\n        the :attr:`HttpProtocol.access_log` is enabled.\n        '
    blueprint_0 = module_1.Blueprint(str_0)
    str_1 = 'sASMM/.SG__'
    blueprint_group_0 = module_0.BlueprintGroup(str_1)
    blueprint_group_1 = module_0.BlueprintGroup()
    int_1 = blueprint_group_1.__len__()
    blueprint_group_0.insert(int_0, blueprint_0)

def test_case_4():
    int_0 = 431
    blueprint_group_0 = module_0.BlueprintGroup()
    int_1 = blueprint_group_0.__len__()
    str_0 = 'Connection lost before response written @ '
    bool_0 = False
    blueprint_0 = module_1.Blueprint(str_0, str_0, str_0, int_0, bool_0)
    bool_1 = False
    blueprint_group_1 = module_0.BlueprintGroup(bool_1)
    blueprint_group_1.insert(int_0, blueprint_0)
    int_2 = 415
    blueprint_group_2 = module_0.BlueprintGroup(int_2)
    int_3 = blueprint_group_2.__len__()

def test_case_5():
    blueprint_group_0 = module_0.BlueprintGroup()
    list_0 = [blueprint_group_0]
    var_0 = blueprint_group_0.middleware(*list_0)

def test_case_6():
    bytes_0 = b'\x05\xb6K\xd7?\xfc\x06H\xcc\xd3*\xa4'
    int_0 = -1267
    str_0 = 'frames'
    blueprint_group_0 = module_0.BlueprintGroup()
    var_0 = blueprint_group_0.middleware()
    var_1 = blueprint_group_0.__iter__()
    blueprint_0 = module_1.Blueprint(str_0)
    int_1 = 517
    blueprint_group_0.insert(int_1, blueprint_0)
    var_2 = blueprint_group_0.__iter__()
    bool_0 = False
    tuple_0 = (bool_0,)
    list_0 = [var_0, tuple_0]
    var_3 = blueprint_group_0.middleware(*list_0)
    int_2 = -1699
    bool_1 = False
    blueprint_1 = module_1.Blueprint(str_0, str_0, bool_1)
    blueprint_group_0.insert(int_2, blueprint_1)
    str_1 = '\x0bkT]PB9=a'
    int_3 = blueprint_group_0.__len__()
    dict_0 = {int_0: str_0, blueprint_0: blueprint_0}
    blueprint_group_1 = module_0.BlueprintGroup(dict_0)
    var_4 = blueprint_group_1.middleware()
    int_4 = blueprint_group_1.__len__()
    blueprint_group_2 = module_0.BlueprintGroup(str_1)
    blueprint_group_2.insert(int_0, blueprint_0)
    blueprint_group_3 = module_0.BlueprintGroup(bytes_0)
    var_5 = blueprint_group_3.middleware()
    blueprint_group_2.append(blueprint_1)