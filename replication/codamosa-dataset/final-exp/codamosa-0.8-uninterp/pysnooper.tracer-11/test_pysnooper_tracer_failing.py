# Automatically generated by Pynguin.
import pysnooper.tracer as module_0
import pysnooper.variables as module_1

def test_case_0():
    try:
        str_0 = "<=&_/`|A(aM'^B}!9e"
        bool_0 = False
        set_0 = {bool_0}
        tracer_0 = module_0.Tracer(str_0, bool_0, set_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = b'\xf4\xf3\xf8:{7\x97X\x85\xd1\x1aln'
        str_0 = 'e%|l\rG\x0bI M4<\x0c+Sy\x0b,j.'
        file_writer_0 = module_0.FileWriter(bytes_0, str_0)
        tracer_0 = module_0.Tracer()
        str_1 = 'eval'
        str_2 = '_h,tR0hX#]d3'
        tracer_1 = module_0.Tracer(tracer_0, str_1, str_2)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = '%w]zQ:yCK'
        str_1 = None
        dict_0 = {str_1: str_0, str_1: str_0}
        list_0 = [str_0, str_0, dict_0]
        tracer_0 = module_0.Tracer(list_0)
    except BaseException:
        pass

def test_case_3():
    try:
        int_0 = -111
        float_0 = -2174.5551
        file_writer_0 = module_0.FileWriter(int_0, float_0)
        dict_0 = {int_0: int_0}
        list_0 = [int_0, int_0, dict_0]
        str_0 = 'k{ZGm,\n~v092T'
        tracer_0 = module_0.Tracer(file_writer_0, list_0, list_0, str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        complex_0 = None
        int_0 = 1017
        str_0 = '{indent}Exception:..... {exception}'
        file_writer_0 = module_0.FileWriter(int_0, str_0)
        var_0 = file_writer_0.write(complex_0)
    except BaseException:
        pass

def test_case_5():
    try:
        tracer_0 = module_0.Tracer()
        dict_0 = None
        int_0 = 1635
        tracer_1 = module_0.Tracer(dict_0, int_0, int_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'G'
        float_0 = 2158.8
        set_0 = {str_0}
        list_0 = [float_0]
        str_1 = '<variable>'
        float_1 = -2475.518981
        str_2 = 'fe\r"vaXDnzb2x1'
        str_3 = '_HY]!mN`q$$:8;Ww@g8'
        str_4 = '>+OM?su?;`o[EYKC<'
        dict_0 = {str_2: str_2, str_3: str_0, str_3: str_1, str_4: str_3}
        tracer_0 = module_0.Tracer(str_0, float_0, set_0, list_0, str_1, float_1, dict_0)
    except BaseException:
        pass

def test_case_7():
    try:
        file_writer_0 = None
        tracer_0 = module_0.Tracer(file_writer_0)
        bool_0 = False
        unavailable_source_0 = module_0.UnavailableSource()
        var_0 = module_0.get_write_function(bool_0, unavailable_source_0)
    except BaseException:
        pass

def test_case_8():
    try:
        tracer_0 = module_0.Tracer()
        list_0 = []
        file_writer_0 = module_0.FileWriter(list_0, list_0)
        var_0 = file_writer_0.write(tracer_0)
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'K+YNn{k.+.i qd_Qpwl\t'
        tuple_0 = ()
        dict_0 = None
        tracer_0 = module_0.Tracer(str_0, tuple_0, dict_0)
    except BaseException:
        pass

def test_case_10():
    try:
        tracer_0 = module_0.Tracer()
        list_0 = []
        var_0 = tracer_0.__exit__(tracer_0, tracer_0, list_0)
    except BaseException:
        pass

def test_case_11():
    try:
        file_writer_0 = None
        tracer_0 = module_0.Tracer(file_writer_0)
        unavailable_source_0 = None
        list_0 = [file_writer_0]
        file_writer_1 = module_0.FileWriter(unavailable_source_0, list_0)
        var_0 = tracer_0.__enter__()
        set_0 = set()
        var_1 = module_0.get_write_function(set_0, file_writer_1)
    except BaseException:
        pass

def test_case_12():
    try:
        tracer_0 = module_0.Tracer()
        var_0 = tracer_0.__call__(tracer_0)
    except BaseException:
        pass

def test_case_13():
    try:
        file_writer_0 = None
        tracer_0 = module_0.Tracer(file_writer_0)
        unavailable_source_0 = None
        list_0 = [file_writer_0]
        file_writer_1 = module_0.FileWriter(unavailable_source_0, list_0)
        str_0 = '\\c.2(g'
        var_0 = file_writer_1.write(str_0)
        var_1 = tracer_0.__enter__()
        bytes_0 = b'DI)B\xfaw\x0b\xc1sT8\xcb\x19\xd7\x06Z\xad\xbd\xab'
        var_2 = file_writer_1.write(bytes_0)
    except BaseException:
        pass

def test_case_14():
    try:
        tracer_0 = module_0.Tracer()
        var_0 = tracer_0.__enter__()
        list_0 = []
        var_1 = tracer_0.__enter__()
        var_2 = tracer_0.__call__(list_0)
    except BaseException:
        pass

def test_case_15():
    try:
        tracer_0 = module_0.Tracer()
        var_0 = tracer_0.__enter__()
        bytes_0 = b'\x05\xe2WS'
        dict_0 = None
        list_0 = []
        float_0 = 1742.57805
        bool_0 = True
        tuple_0 = (dict_0, list_0, float_0, bool_0)
        var_1 = tracer_0.__exit__(tracer_0, bytes_0, tuple_0)
    except BaseException:
        pass

def test_case_16():
    try:
        file_writer_0 = None
        tracer_0 = module_0.Tracer(file_writer_0)
        unavailable_source_0 = None
        list_0 = [file_writer_0]
        file_writer_1 = module_0.FileWriter(unavailable_source_0, list_0)
        bool_0 = False
        var_0 = tracer_0.__enter__()
        str_0 = 'rWturn'
        list_1 = None
        exploding_0 = module_1.Exploding(str_0)
        tracer_1 = module_0.Tracer(list_1, exploding_0, bool_0)
    except BaseException:
        pass