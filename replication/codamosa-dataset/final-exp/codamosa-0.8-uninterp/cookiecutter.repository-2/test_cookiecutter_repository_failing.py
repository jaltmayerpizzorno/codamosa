# Automatically generated by Pynguin.
import cookiecutter.repository as module_0

def test_case_0():
    try:
        tuple_0 = ()
        list_0 = [tuple_0]
        var_0 = module_0.is_repo_url(list_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = 'abbreviations'
        str_1 = 'audreyr/cookiecutter-pypackage.git'
        var_0 = module_0.determine_repo_dir(str_1, str_0, str_1, str_1, str_1, str_0, str_1)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = "Stopping generation because %s hook script didn't exit successfully"
        tuple_0 = (str_0, str_0)
        set_0 = {tuple_0, tuple_0, str_0, str_0}
        var_0 = module_0.expand_abbreviations(tuple_0, set_0)
    except BaseException:
        pass

def test_case_3():
    try:
        bytes_0 = b'o\x98\xe9'
        var_0 = module_0.repository_has_cookiecutter_json(bytes_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = '9s/E{jU&7d$t,E'
        set_0 = {str_0}
        bool_0 = None
        str_1 = 'cY\t>0sd[rW7Uln'
        tuple_0 = ()
        int_0 = 1581
        var_0 = module_0.determine_repo_dir(str_0, tuple_0, str_1, set_0, str_1, int_0, bool_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'QyA17)g'
        str_1 = 'W%\x0c<?W;B\x0bvd<RD$iz+'
        set_0 = {str_0}
        var_0 = module_0.expand_abbreviations(str_1, set_0)
        list_0 = [str_1, str_0, str_0, str_1]
        str_2 = 'cookiecutters_dir'
        str_3 = 'qya17)g.zip'
        str_4 = 'sphinx.ext.doctest'
        float_0 = 1212.0
        tuple_0 = (str_4, float_0)
        int_0 = 2117
        var_1 = module_0.determine_repo_dir(str_3, tuple_0, str_2, list_0, int_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'https://github.com/audreyr/cookiecutter-pypackage.git'
        str_1 = 'abbreviations'
        str_2 = 'clone_to_dir'
        str_3 = 'checkout'
        str_4 = 'no_input'
        str_5 = 'password'
        str_6 = 'directory'
        var_0 = module_0.determine_repo_dir(str_0, str_1, str_2, str_3, str_4, str_5, str_6)
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'u'
        str_1 = '/'
        var_0 = module_0.determine_repo_dir(str_1, str_0, str_1, str_0, str_1, str_0, str_1)
    except BaseException:
        pass