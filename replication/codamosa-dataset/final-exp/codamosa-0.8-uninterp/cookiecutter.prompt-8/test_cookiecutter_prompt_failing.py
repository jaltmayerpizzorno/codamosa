# Automatically generated by Pynguin.
import cookiecutter.prompt as module_0

def test_case_0():
    try:
        bool_0 = None
        int_0 = 1152
        var_0 = module_0.read_user_variable(bool_0, int_0)
    except BaseException:
        pass

def test_case_1():
    try:
        int_0 = -814
        list_0 = [int_0, int_0, int_0, int_0]
        var_0 = module_0.read_user_yes_no(list_0, list_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bool_0 = False
        var_0 = module_0.read_repo_password(bool_0)
    except BaseException:
        pass

def test_case_3():
    try:
        dict_0 = {}
        str_0 = 'Template name is required to be of type str'
        var_0 = module_0.read_user_choice(dict_0, str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        int_0 = None
        var_0 = module_0.process_json(int_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'var_name'
        var_0 = module_0.read_user_dict(str_0, str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        bool_0 = False
        str_0 = 'AKu?KU{tan]XU/hf'
        tuple_0 = ()
        var_0 = module_0.render_variable(bool_0, str_0, tuple_0)
    except BaseException:
        pass

def test_case_7():
    try:
        bool_0 = False
        float_0 = 131.56
        int_0 = None
        dict_0 = {int_0: float_0}
        var_0 = module_0.render_variable(bool_0, dict_0, dict_0)
    except BaseException:
        pass

def test_case_8():
    try:
        bool_0 = False
        float_0 = 131.56
        int_0 = None
        dict_0 = {float_0: bool_0, bool_0: int_0, bool_0: int_0}
        var_0 = module_0.render_variable(bool_0, dict_0, dict_0)
    except BaseException:
        pass

def test_case_9():
    try:
        bool_0 = True
        var_0 = module_0.prompt_for_config(bool_0)
    except BaseException:
        pass

def test_case_10():
    try:
        dict_0 = None
        set_0 = {dict_0, dict_0, dict_0, dict_0}
        bytes_0 = b'(\x98yO\xcf\xab\xd4\n'
        list_0 = [bytes_0, set_0]
        tuple_0 = ()
        var_0 = module_0.prompt_choice_for_config(list_0, set_0, tuple_0, tuple_0, tuple_0)
    except BaseException:
        pass

def test_case_11():
    try:
        float_0 = 1518.0
        bytes_0 = b'\xfd\xa4\xdf\xb99\xb31e\x92\xcb\xbd\xe9\xab'
        set_0 = {float_0}
        list_0 = [float_0, bytes_0, set_0, bytes_0]
        var_0 = module_0.read_user_choice(bytes_0, list_0)
    except BaseException:
        pass

def test_case_12():
    try:
        bool_0 = False
        int_0 = None
        dict_0 = {int_0: int_0, bool_0: int_0}
        int_1 = 1832
        list_0 = [dict_0]
        var_0 = module_0.render_variable(int_1, list_0, dict_0)
    except BaseException:
        pass

def test_case_13():
    try:
        dict_0 = {}
        var_0 = module_0.read_user_dict(dict_0, dict_0)
    except BaseException:
        pass

def test_case_14():
    try:
        str_0 = '7'
        var_0 = module_0.process_json(str_0)
    except BaseException:
        pass