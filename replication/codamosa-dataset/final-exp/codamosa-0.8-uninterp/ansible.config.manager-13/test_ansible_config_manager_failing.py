# Automatically generated by Pynguin.
import ansible.config.manager as module_0

def test_case_0():
    try:
        config_manager_0 = module_0.ConfigManager()
        config_manager_1 = module_0.ConfigManager()
        var_0 = module_0.find_ini_config_file()
        tuple_0 = ()
        var_1 = config_manager_1.get_configuration_definitions(tuple_0)
        bool_0 = True
        str_0 = 'tmppath'
        var_2 = config_manager_1.get_config_value(bool_0, str_0, bool_0)
    except BaseException:
        pass

def test_case_1():
    try:
        config_manager_0 = module_0.ConfigManager()
        str_0 = 'w<\\c!#bz{DLM{feOMg'
        bytes_0 = b'4O\x05\xe13'
        tuple_0 = (str_0, bytes_0)
        dict_0 = {str_0: str_0}
        var_0 = config_manager_0.get_config_value(tuple_0, dict_0, tuple_0)
    except BaseException:
        pass

def test_case_2():
    try:
        bool_0 = None
        config_manager_0 = module_0.ConfigManager()
        var_0 = config_manager_0.get_config_value_and_origin(bool_0)
    except BaseException:
        pass

def test_case_3():
    try:
        list_0 = None
        config_manager_0 = module_0.ConfigManager()
        set_0 = {config_manager_0, config_manager_0, list_0, config_manager_0}
        var_0 = module_0.get_config_type(set_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = ''
        config_manager_0 = module_0.ConfigManager(str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        config_manager_0 = module_0.ConfigManager()
        var_0 = config_manager_0.update_config_data()
        config_manager_1 = module_0.ConfigManager()
        var_1 = module_0.find_ini_config_file()
        tuple_0 = ()
        var_2 = config_manager_1.get_configuration_definitions(tuple_0)
    except BaseException:
        pass

def test_case_6():
    try:
        float_0 = -1578.0
        config_manager_0 = module_0.ConfigManager(float_0)
    except BaseException:
        pass

def test_case_7():
    try:
        set_0 = None
        dict_0 = {set_0: set_0, set_0: set_0, set_0: set_0, set_0: set_0}
        config_manager_0 = module_0.ConfigManager(dict_0, dict_0)
    except BaseException:
        pass

def test_case_8():
    try:
        config_manager_0 = module_0.ConfigManager()
        tuple_0 = ()
        var_0 = config_manager_0.get_configuration_definitions(tuple_0)
    except BaseException:
        pass

def test_case_9():
    try:
        config_manager_0 = module_0.ConfigManager()
        str_0 = "The collection path specified '%s' does not exist."
        dict_0 = None
        list_0 = [dict_0, str_0]
        float_0 = 1.5
        int_0 = 2924
        var_0 = config_manager_0.get_configuration_definitions(float_0, int_0)
        config_manager_1 = module_0.ConfigManager()
        setting_0 = module_0.Setting(*list_0)
    except BaseException:
        pass

def test_case_10():
    try:
        set_0 = set()
        config_manager_0 = module_0.ConfigManager(set_0)
    except BaseException:
        pass

def test_case_11():
    try:
        config_manager_0 = module_0.ConfigManager()
        bytes_0 = b'\xb5O\x89\x1b\x1b,\xdf|b\xa8,\x1f\xeb;'
        bool_0 = True
        var_0 = config_manager_0.update_config_data(bytes_0, bool_0)
    except BaseException:
        pass

def test_case_12():
    try:
        bytes_0 = b'4\xf8V\xfbav(\xdb\xa8'
        config_manager_0 = module_0.ConfigManager()
        complex_0 = None
        var_0 = config_manager_0.get_config_value(complex_0, bytes_0)
    except BaseException:
        pass

def test_case_13():
    try:
        var_0 = module_0.find_ini_config_file()
        var_1 = module_0.find_ini_config_file()
        str_0 = 'VC}+2qQy`5|-Z'
        str_1 = '9aCSw6[|4~\r`3'
        setting_0 = None
        var_2 = module_0.ensure_type(str_0, str_1, setting_0)
        config_manager_0 = module_0.ConfigManager()
        plugin_0 = module_0.Plugin()
    except BaseException:
        pass

def test_case_14():
    try:
        var_0 = module_0.find_ini_config_file()
        int_0 = None
        config_manager_0 = module_0.ConfigManager()
        float_0 = -383.24115
        var_1 = config_manager_0.get_plugin_options(int_0, float_0, config_manager_0)
    except BaseException:
        pass

def test_case_15():
    try:
        str_0 = 'vg'
        bool_0 = False
        int_0 = None
        str_1 = 'ZCG!A+0,$mzXBlC'
        dict_0 = {str_0: int_0, str_0: bool_0, str_0: str_0, str_1: str_1}
        config_manager_0 = module_0.ConfigManager()
        var_0 = config_manager_0.get_plugin_vars(int_0, dict_0)
        tuple_0 = (bool_0, str_0, bool_0)
        var_1 = config_manager_0.get_plugin_options(tuple_0, str_0)
        bytes_0 = b'.\x13\x162\x0e\x18\xabI\xe6'
        list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
        setting_0 = module_0.Setting(*list_0)
        var_2 = module_0.resolve_path(config_manager_0)
    except BaseException:
        pass

def test_case_16():
    try:
        config_manager_0 = module_0.ConfigManager()
        float_0 = None
        tuple_0 = None
        bool_0 = True
        str_0 = ')_5U5-iV~zuBx'
        str_1 = '6'
        dict_0 = {str_0: float_0, str_1: float_0, str_1: str_0, str_0: str_1}
        dict_1 = {bool_0: tuple_0}
        str_2 = 'str'
        var_0 = config_manager_0.get_plugin_options(tuple_0, dict_1, dict_0, str_2)
    except BaseException:
        pass

def test_case_17():
    try:
        config_manager_0 = module_0.ConfigManager()
        var_0 = config_manager_0.update_config_data()
        str_0 = 'LF@Ar,/k,#td1QUk}D'
        str_1 = None
        dict_0 = {str_0: config_manager_0, str_0: config_manager_0, str_1: config_manager_0}
        var_1 = config_manager_0.update_config_data(dict_0)
    except BaseException:
        pass

def test_case_18():
    try:
        config_manager_0 = module_0.ConfigManager()
        str_0 = '#VS_\tN'
        bool_0 = True
        var_0 = config_manager_0.get_config_value_and_origin(str_0, bool_0, str_0, config_manager_0)
    except BaseException:
        pass

def test_case_19():
    try:
        int_0 = 747
        bytes_0 = b'\tG\x05\xdf\xf4B'
        config_manager_0 = module_0.ConfigManager()
        dict_0 = None
        bytes_1 = b"\xa2'Ie\x99\x90\xa6~\x93\xa2:\x0eM\xb2\x160\x8a\xab"
        var_0 = module_0.get_ini_config_value(dict_0, bytes_1)
        config_manager_1 = module_0.ConfigManager()
        var_1 = config_manager_1.get_plugin_options(bytes_0, config_manager_0, int_0)
        bool_0 = None
        config_manager_2 = module_0.ConfigManager()
        var_2 = config_manager_2.get_config_value_and_origin(bool_0)
    except BaseException:
        pass

def test_case_20():
    try:
        str_0 = 'test1.ini'
        str_1 = 'test2.cfg'
        str_2 = 'test10.yml.tmp'
        var_0 = module_0.get_config_type(str_0)
        var_1 = module_0.get_config_type(str_1)
        var_2 = module_0.get_config_type(str_2)
    except BaseException:
        pass

def test_case_21():
    try:
        str_0 = 'test2.cfg'
        str_1 = 'test3.yaml'
        var_0 = module_0.get_config_type(str_1)
        var_1 = module_0.get_config_type(str_0)
        plugin_0 = module_0.Plugin()
    except BaseException:
        pass