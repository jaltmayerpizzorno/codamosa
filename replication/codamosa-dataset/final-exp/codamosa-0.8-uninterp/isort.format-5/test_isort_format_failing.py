# Automatically generated by Pynguin.
import isort.format as module_0
import pathlib as module_1
import typing as module_2

def test_case_0():
    try:
        str_0 = 'See the files isort will be ran against with the current config options.'
        str_1 = module_0.format_natural(str_0)
        str_2 = 'qm"ATsqIGk'
        basic_printer_0 = module_0.BasicPrinter()
        basic_printer_0.diff_line(str_2)
        basic_printer_0.diff_line(str_2)
        str_3 = module_0.format_natural(str_1)
        str_4 = 'E<$@_)~'
        str_5 = '8}=C'
        path_0 = module_1.Path()
        var_0 = module_0.show_unified_diff(file_input=str_4, file_output=str_5, file_path=path_0)
        str_6 = module_0.remove_whitespace(str_2, str_2)
        bool_0 = True
        var_1 = module_0.create_terminal_printer(bool_0)
        basic_printer_0.error(str_2)
        basic_printer_1 = module_0.BasicPrinter()
        basic_printer_1.diff_line(str_4)
        str_7 = module_0.format_natural(str_3)
        bool_1 = module_0.ask_whether_to_apply_changes_to_file(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '8Q265J'
        bool_0 = module_0.ask_whether_to_apply_changes_to_file(str_0)
    except BaseException:
        pass

def test_case_2():
    try:
        basic_printer_0 = module_0.BasicPrinter()
        str_0 = "IZ.~V8Z+&CN6x#o'vV"
        str_1 = '8Q265J'
        basic_printer_0.error(str_1)
        bool_0 = module_0.ask_whether_to_apply_changes_to_file(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'E'
        str_1 = '> '
        str_2 = module_0.remove_whitespace(str_0, str_1)
        basic_printer_0 = module_0.BasicPrinter()
        basic_printer_0.success(str_0)
        basic_printer_1 = module_0.BasicPrinter()
        basic_printer_2 = module_0.BasicPrinter()
        colorama_printer_0 = module_0.ColoramaPrinter(basic_printer_2)
        colorama_printer_0.diff_line(str_1)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = '#0U+0@ZCd1}xLmN|/'
        str_1 = module_0.format_natural(str_0)
        str_2 = 'Uu;`1R3%?&p;t~K,7'
        basic_printer_0 = module_0.BasicPrinter()
        basic_printer_0.diff_line(str_2)
        basic_printer_0.diff_line(str_2)
        str_3 = module_0.format_natural(str_1)
        str_4 = 'E<$@_)~'
        str_5 = '8}=C'
        path_0 = module_1.Path()
        var_0 = path_0.lstat()
        var_1 = module_0.show_unified_diff(file_input=str_4, file_output=str_5, file_path=path_0)
        str_6 = 'tab'
        basic_printer_0.error(str_6)
        str_7 = module_0.remove_whitespace(str_2, str_2)
        bool_0 = True
        basic_printer_0.success(str_7)
        var_2 = module_0.create_terminal_printer(bool_0)
        basic_printer_0.error(str_2)
        basic_printer_1 = module_0.BasicPrinter()
        basic_printer_1.diff_line(str_4)
        str_8 = module_0.format_natural(str_3)
        bool_1 = module_0.ask_whether_to_apply_changes_to_file(str_3)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = '#0U+0@ZCd1}xLmN|/'
        str_1 = module_0.format_natural(str_0)
        str_2 = 'Uu;`1R3%?&p;t~K,7'
        bool_0 = False
        var_0 = module_0.create_terminal_printer(bool_0)
        basic_printer_0 = module_0.BasicPrinter()
        basic_printer_0.diff_line(str_2)
        basic_printer_0.diff_line(str_2)
        str_3 = 'u95"YPF;.#Aw_\'j<U'
        str_4 = module_0.format_natural(str_3)
        str_5 = module_0.remove_whitespace(str_3, str_3)
        basic_printer_0.error(str_2)
        basic_printer_1 = module_0.BasicPrinter()
        basic_printer_1.diff_line(str_3)
        basic_printer_0.error(str_3)
        str_6 = module_0.format_natural(str_4)
        str_7 = '\\'
        basic_printer_1.error(str_7)
        str_8 = 'HR|mqKm0It'
        basic_printer_1.error(str_8)
        colorama_printer_0 = module_0.ColoramaPrinter()
        str_9 = 'ae:\x0c('
        colorama_printer_0.diff_line(str_9)
        str_10 = module_0.format_simplified(str_6)
        list_0 = None
        text_i_o_0 = module_2.TextIO(*list_0)
    except BaseException:
        pass