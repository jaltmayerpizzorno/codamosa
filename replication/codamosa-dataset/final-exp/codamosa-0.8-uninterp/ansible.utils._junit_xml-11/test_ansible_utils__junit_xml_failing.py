# Automatically generated by Pynguin.
import ansible.utils._junit_xml as module_0

def test_case_0():
    try:
        str_0 = 'p'
        str_1 = 'G@/ts* >bN\x0b7<'
        test_error_0 = module_0.TestError(str_1)
        test_case_0 = module_0.TestCase(str_1, test_error_0)
        list_0 = []
        var_0 = test_case_0.__eq__(list_0)
        list_1 = [test_case_0, test_case_0, test_case_0]
        test_suite_0 = module_0.TestSuite(str_0, str_0, str_0, str_0, list_1, str_0)
        dict_0 = test_suite_0.get_attributes()
    except BaseException:
        pass

def test_case_1():
    try:
        test_suites_0 = module_0.TestSuites()
        test_suites_1 = module_0.TestSuites(test_suites_0)
        dict_0 = test_suites_0.get_attributes()
        dict_1 = test_suites_0.get_attributes()
        var_0 = test_suites_1.__repr__()
        str_0 = 'host_key_checking'
        str_1 = '?a|: /\x0blJH'
        test_suite_0 = module_0.TestSuite(str_1, str_1)
        element_0 = test_suite_0.get_xml_element()
        test_error_0 = module_0.TestError(str_0)
        var_1 = test_error_0.__eq__(test_suite_0)
        str_2 = test_suites_1.to_pretty_xml()
        element_1 = test_suites_0.get_xml_element()
        optional_0 = None
        list_0 = []
        test_failure_0 = module_0.TestFailure(str_2)
        test_failure_1 = module_0.TestFailure(str_0, str_1)
        list_1 = [test_failure_0, test_failure_0, test_failure_1]
        test_case_0 = module_0.TestCase(str_0, optional_0, str_2, str_0, list_0, list_1, str_2)
        element_2 = test_case_0.get_xml_element()
    except BaseException:
        pass

def test_case_2():
    try:
        test_suites_0 = module_0.TestSuites()
        test_suites_1 = module_0.TestSuites(test_suites_0)
        dict_0 = test_suites_0.get_attributes()
        dict_1 = test_suites_0.get_attributes()
        str_0 = 'ho:t_key_c7ecki+ng'
        test_suite_0 = module_0.TestSuite(str_0, str_0, dict_1, str_0)
        element_0 = test_suite_0.get_xml_element()
        str_1 = test_suites_0.to_pretty_xml()
        test_error_0 = module_0.TestError(str_1)
        list_0 = [test_error_0, test_error_0]
        test_failure_0 = module_0.TestFailure()
        bool_0 = True
        list_1 = None
        str_2 = test_suites_0.to_pretty_xml()
        test_case_0 = module_0.TestCase(str_0, str_1, str_0, list_0, list_1, str_2, str_1, bool_0)
        element_1 = test_case_0.get_xml_element()
    except BaseException:
        pass

def test_case_3():
    try:
        test_suites_0 = module_0.TestSuites()
        test_suites_1 = module_0.TestSuites(test_suites_0)
        dict_0 = test_suites_0.get_attributes()
        dict_1 = test_suites_0.get_attributes()
        str_0 = 'host_key_checking'
        list_0 = []
        test_suite_0 = module_0.TestSuite(str_0, str_0, str_0, dict_0, list_0, str_0)
        element_0 = test_suite_0.get_xml_element()
    except BaseException:
        pass

def test_case_4():
    try:
        test_suites_0 = module_0.TestSuites()
        test_suites_1 = module_0.TestSuites(test_suites_0)
        dict_0 = test_suites_0.get_attributes()
        dict_1 = test_suites_0.get_attributes()
        var_0 = test_suites_1.__repr__()
        str_0 = 'host_key_checking'
        test_suite_0 = module_0.TestSuite(str_0, str_0, dict_1, str_0)
        element_0 = test_suite_0.get_xml_element()
        test_error_0 = module_0.TestError(str_0, str_0)
        var_1 = test_error_0.__eq__(element_0)
        str_1 = test_suites_1.to_pretty_xml()
        bool_0 = True
        var_2 = test_error_0.__eq__(bool_0)
        test_failure_0 = module_0.TestFailure(str_0)
        list_0 = [test_failure_0]
        bool_1 = False
        test_case_0 = module_0.TestCase(str_1, list_0, str_1, bool_1)
        element_1 = test_case_0.get_xml_element()
        element_2 = test_case_0.get_xml_element()
        str_2 = '=yThN f/W&-\x0cnu{'
        test_failure_1 = module_0.TestFailure()
        str_3 = ''
        test_suites_2 = module_0.TestSuites()
        str_4 = "8u'j&"
        test_suites_3 = module_0.TestSuites()
        var_3 = test_suites_1.__repr__()
        list_1 = []
        dict_2 = {str_1: str_3}
        list_2 = [test_case_0]
        test_suite_1 = module_0.TestSuite(str_0, str_3, str_4, list_1, dict_2, list_2, str_2)
        dict_3 = test_suite_1.get_attributes()
    except BaseException:
        pass