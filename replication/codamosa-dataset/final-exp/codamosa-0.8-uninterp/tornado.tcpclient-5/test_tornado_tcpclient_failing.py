# Automatically generated by Pynguin.
import tornado.tcpclient as module_0
import tornado.ioloop as module_1
import tornado.netutil as module_2
import tornado.util as module_3
import socket as module_4
import datetime as module_5
import _asyncio as module_6

def test_case_0():
    try:
        list_0 = []
        bool_0 = True
        connector_0 = module_0._Connector(list_0, bool_0)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = None
        int_0 = None
        t_c_p_client_0 = module_0.TCPClient()
        i_o_stream_0 = t_c_p_client_0.connect(str_0, int_0, str_0, int_0, str_0)
        address_family_0 = None
        str_1 = 'R_>{4!,/icl'
        t_c_p_client_1 = module_0.TCPClient(str_1)
        t_c_p_client_1.close()
        tuple_0 = (address_family_0,)
        list_0 = [tuple_0, tuple_0, tuple_0, tuple_0]
        connector_0 = module_0._Connector(list_0, address_family_0)
    except BaseException:
        pass

def test_case_2():
    try:
        i_o_loop_0 = module_1.IOLoop()
        i_o_loop_1 = i_o_loop_0.instance()
        resolver_0 = module_2.Resolver()
        var_0 = []
        var_1 = resolver_0.resolve
        connector_0 = module_0._Connector(var_0, var_1)
    except BaseException:
        pass

def test_case_3():
    try:
        i_o_loop_0 = module_1.IOLoop()
        timeout_error_0 = module_3.TimeoutError()
        tuple_0 = (i_o_loop_0, timeout_error_0)
        selectable_0 = module_1._Selectable()
        list_0 = [tuple_0]
        callable_0 = None
        address_family_0 = module_4.AddressFamily.AF_NETBEUI
        timedelta_0 = module_5.timedelta()
        future_0 = module_6.Future()
        future_1 = module_6.Future()
        iterator_0 = None
        connector_0 = module_0._Connector(list_0, callable_0)
        connector_0.on_connect_done(iterator_0, address_family_0, tuple_0, future_0)
    except BaseException:
        pass

def test_case_4():
    try:
        i_o_loop_0 = module_1.IOLoop()
        i_o_loop_1 = i_o_loop_0.instance()
        t_c_p_client_0 = module_0.TCPClient()
        dict_0 = {i_o_loop_0: i_o_loop_0, i_o_loop_0: i_o_loop_0, t_c_p_client_0: t_c_p_client_0, i_o_loop_0: t_c_p_client_0}
        tuple_0 = (t_c_p_client_0, dict_0)
        list_0 = [tuple_0, tuple_0, tuple_0, tuple_0]
        int_0 = 807
        connector_0 = module_0._Connector(list_0, int_0)
        future_0 = connector_0.start()
    except BaseException:
        pass

def test_case_5():
    try:
        i_o_loop_0 = module_1.IOLoop()
        i_o_loop_1 = i_o_loop_0.instance()
        str_0 = '7zymAXf0:J'
        timeout_error_0 = module_3.TimeoutError()
        tuple_0 = (i_o_loop_1, timeout_error_0)
        executor_0 = None
        list_0 = [tuple_0, tuple_0, tuple_0, tuple_0]
        selectable_0 = module_1._Selectable()
        connector_0 = module_0._Connector(list_0, selectable_0)
        connector_0.clear_timeout()
        i_o_loop_1.set_default_executor(executor_0)
        list_1 = [tuple_0]
        callable_0 = None
        connector_1 = module_0._Connector(list_0, callable_0)
        resolver_0 = module_2.Resolver()
        connector_2 = module_0._Connector(list_1, resolver_0)
        connector_2.on_timeout()
        dict_0 = {str_0: str_0, str_0: i_o_loop_0}
        connector_2.on_connect_timeout()
        float_0 = -618.0
        connector_0.on_connect_timeout()
        tuple_1 = connector_2.split(list_1)
        callable_1 = None
        address_family_0 = module_4.AddressFamily.AF_NETBEUI
        timedelta_0 = module_5.timedelta()
        connector_0.set_timeout(float_0)
        connector_0.clear_timeouts()
        connector_0.clear_timeout()
        future_0 = module_6.Future()
        connector_2.on_connect_done(dict_0, address_family_0, tuple_0, future_0)
        future_1 = module_6.Future()
        iterator_0 = None
        connector_3 = module_0._Connector(list_0, callable_1)
        connector_3.on_connect_done(iterator_0, address_family_0, tuple_0, future_0)
    except BaseException:
        pass