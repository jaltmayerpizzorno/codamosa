# Automatically generated by Pynguin.
import codetiming._timers as module_0

def test_case_0():
    try:
        str_0 = '*0q-  {j43xkDjR3/\x0b'
        float_0 = -2809.89
        timers_0 = module_0.Timers()
        timers_0.clear()
        timers_0.add(str_0, float_0)
        float_1 = timers_0.median(str_0)
        str_1 = 'name'
        float_2 = timers_0.stdev(str_1)
    except BaseException:
        pass

def test_case_1():
    try:
        str_0 = '[zO S^'
        dict_0 = {str_0: str_0, str_0: str_0}
        timers_0 = module_0.Timers(**dict_0)
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = " does not support item assignment. Use '.add()' to update values."
        timers_0 = module_0.Timers()
        float_0 = timers_0.count(str_0)
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '@'
        timers_0 = module_0.Timers()
        float_0 = timers_0.total(str_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'seconds'
        dict_0 = {}
        timers_0 = module_0.Timers(**dict_0)
        float_0 = timers_0.median(str_0)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'Q@Sb&AS_BE]*K'
        timers_0 = module_0.Timers()
        float_0 = timers_0.stdev(str_0)
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = '*0q-{j43xkDjR3/\x0b'
        float_0 = -2809.89
        timers_0 = module_0.Timers()
        timers_0.clear()
        float_1 = 632.42665
        timers_0.add(str_0, float_1)
        timers_0.add(str_0, float_0)
        str_1 = None
        float_2 = timers_0.stdev(str_0)
        float_3 = timers_0.median(str_0)
        float_4 = timers_0.stdev(str_1)
    except BaseException:
        pass