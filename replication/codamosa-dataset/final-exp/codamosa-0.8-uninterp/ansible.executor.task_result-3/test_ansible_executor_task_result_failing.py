# Automatically generated by Pynguin.
import ansible.executor.task_result as module_0

def test_case_0():
    try:
        bool_0 = True
        bytes_0 = b'"m\xa8\xb0\x80M"\x84\xa6\xec\xb8\xf6@'
        str_0 = 'usage: %prog [options] [host|group]'
        task_result_0 = module_0.TaskResult(bool_0, bytes_0, str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        bool_0 = True
        int_0 = 2669
        dict_0 = {bool_0: int_0, int_0: int_0, bool_0: bool_0, int_0: int_0}
        task_result_0 = module_0.TaskResult(bool_0, int_0, dict_0)
        var_0 = task_result_0.clean_copy()
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'sM5U'
        task_result_0 = module_0.TaskResult(str_0, str_0, str_0)
        var_0 = task_result_0.is_failed()
    except BaseException:
        pass

def test_case_3():
    try:
        int_0 = 0
        str_0 = 'failed_when_result'
        bool_0 = True
        bool_1 = {str_0: bool_0, str_0: bool_0}
        task_result_0 = module_0.TaskResult(int_0, int_0, bool_1)
        var_0 = task_result_0.clean_copy()
    except BaseException:
        pass

def test_case_4():
    try:
        var_0 = {}
        str_0 = 'results'
        str_1 = 'ic ppe'
        int_0 = 1
        bool_0 = True
        var_1 = {str_0: int_0, str_1: bool_0}
        var_2 = {str_0: var_1}
        var_3 = None
        task_result_0 = module_0.TaskResult(var_3, var_0, var_2, str_0)
        var_4 = task_result_0.is_changed()
        var_5 = task_result_0.is_skipped()
        var_6 = task_result_0.is_skipped()
        var_7 = task_result_0.needs_debugger()
    except BaseException:
        pass

def test_case_5():
    try:
        var_0 = {}
        str_0 = 'results'
        str_1 = 'ic ppe'
        int_0 = 2
        bool_0 = True
        var_1 = {str_1: int_0, str_1: bool_0}
        var_2 = {str_0: var_1}
        var_3 = None
        task_result_0 = module_0.TaskResult(var_3, var_0, var_2, str_0)
        var_4 = task_result_0.is_changed()
        var_5 = task_result_0.is_skipped()
        var_6 = task_result_0.is_failed()
        var_7 = task_result_0.is_skipped()
        var_8 = task_result_0.needs_debugger()
    except BaseException:
        pass