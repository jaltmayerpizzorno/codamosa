# Automatically generated by Pynguin.
import ansible.module_utils.facts.hardware.aix as module_0

def test_case_0():
    try:
        float_0 = 0.5
        set_0 = {float_0}
        a_i_x_hardware_0 = module_0.AIXHardware(set_0)
        var_0 = a_i_x_hardware_0.populate()
    except BaseException:
        pass

def test_case_1():
    try:
        bytes_0 = b'\xe8\x88\xacY\xc0\xd1\x9f6\xa3/'
        a_i_x_hardware_collector_0 = module_0.AIXHardwareCollector()
        a_i_x_hardware_0 = module_0.AIXHardware(a_i_x_hardware_collector_0)
        a_i_x_hardware_1 = module_0.AIXHardware(bytes_0, a_i_x_hardware_0)
        var_0 = a_i_x_hardware_1.get_cpu_facts()
    except BaseException:
        pass

def test_case_2():
    try:
        float_0 = 723.1
        a_i_x_hardware_collector_0 = module_0.AIXHardwareCollector(float_0)
        str_0 = 'NOTES:'
        bool_0 = False
        a_i_x_hardware_0 = module_0.AIXHardware(str_0, bool_0)
        var_0 = a_i_x_hardware_0.get_memory_facts()
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = 'xqq}.,wt5'
        dict_0 = {str_0: str_0, str_0: str_0}
        list_0 = [dict_0, dict_0]
        a_i_x_hardware_0 = module_0.AIXHardware(list_0)
        var_0 = a_i_x_hardware_0.get_dmi_facts()
    except BaseException:
        pass

def test_case_4():
    try:
        int_0 = 64
        list_0 = [int_0, int_0, int_0]
        a_i_x_hardware_0 = module_0.AIXHardware(int_0, list_0)
        var_0 = a_i_x_hardware_0.get_vgs_facts()
    except BaseException:
        pass

def test_case_5():
    try:
        bytes_0 = b'\xb9\x03+\xab\xa8\xe2\x18\xd1\x18\xa1N'
        a_i_x_hardware_0 = module_0.AIXHardware(bytes_0)
        var_0 = a_i_x_hardware_0.get_mount_facts()
    except BaseException:
        pass

def test_case_6():
    try:
        bool_0 = True
        bool_1 = True
        complex_0 = None
        list_0 = [complex_0]
        a_i_x_hardware_0 = module_0.AIXHardware(list_0)
        a_i_x_hardware_1 = module_0.AIXHardware(bool_0, bool_1)
        var_0 = a_i_x_hardware_1.get_device_facts()
    except BaseException:
        pass