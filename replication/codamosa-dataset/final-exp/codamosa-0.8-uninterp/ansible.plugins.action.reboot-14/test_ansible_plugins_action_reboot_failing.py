# Automatically generated by Pynguin.
import ansible.plugins.action.reboot as module_0

def test_case_0():
    try:
        action_module_0 = module_0.ActionModule()
    except BaseException:
        pass

def test_case_1():
    try:
        list_0 = []
        timed_out_exception_0 = module_0.TimedOutException(*list_0)
        complex_0 = None
        list_1 = [complex_0, complex_0, complex_0, complex_0, complex_0, complex_0]
        action_module_0 = module_0.ActionModule(*list_1)
        var_0 = action_module_0.run_test_command(timed_out_exception_0)
    except BaseException:
        pass

def test_case_2():
    try:
        list_0 = []
        timed_out_exception_0 = module_0.TimedOutException(*list_0)
        complex_0 = None
        list_1 = [complex_0, complex_0, complex_0, complex_0, complex_0, complex_0]
        action_module_0 = module_0.ActionModule(*list_1)
        timed_out_exception_1 = module_0.TimedOutException()
        var_0 = action_module_0.run(action_module_0)
    except BaseException:
        pass

def test_case_3():
    try:
        list_0 = []
        timed_out_exception_0 = module_0.TimedOutException(*list_0)
        complex_0 = None
        list_1 = [complex_0, complex_0, complex_0, complex_0, complex_0, complex_0]
        action_module_0 = module_0.ActionModule(*list_1)
        action_module_1 = module_0.ActionModule(*list_1)
        dict_0 = {}
        list_2 = []
        var_0 = action_module_1.get_shutdown_command(dict_0, list_2)
    except BaseException:
        pass

def test_case_4():
    try:
        list_0 = []
        timed_out_exception_0 = module_0.TimedOutException(*list_0)
        complex_0 = None
        list_1 = [complex_0, complex_0, complex_0, complex_0, complex_0, complex_0]
        action_module_0 = module_0.ActionModule(*list_1)
        dict_0 = {}
        int_0 = -2734
        set_0 = set()
        bytes_0 = b'\xb0\x96\xfd\x0c\x97\xab\xbd\x14O%\xe8\x98G\xd4\x9a'
        var_0 = action_module_0.do_until_success_or_timeout(dict_0, list_1, int_0, set_0, bytes_0)
    except BaseException:
        pass

def test_case_5():
    try:
        list_0 = []
        timed_out_exception_0 = module_0.TimedOutException(*list_0)
        complex_0 = None
        list_1 = [complex_0, complex_0, complex_0, complex_0, complex_0, complex_0]
        action_module_0 = module_0.ActionModule(*list_1)
        action_module_1 = module_0.ActionModule(*list_1)
        str_0 = '\r8Wv@YzW/%T_xo'
        bool_0 = False
        tuple_0 = (str_0, bool_0)
        var_0 = action_module_1.get_system_boot_time(tuple_0)
    except BaseException:
        pass

def test_case_6():
    try:
        list_0 = []
        timed_out_exception_0 = module_0.TimedOutException(*list_0)
        complex_0 = None
        list_1 = [complex_0, complex_0, complex_0, complex_0, complex_0, complex_0]
        action_module_0 = module_0.ActionModule(*list_1)
        float_0 = 331.7
        bool_0 = True
        var_0 = action_module_0.do_until_success_or_timeout(timed_out_exception_0, float_0, bool_0, list_0)
    except BaseException:
        pass

def test_case_7():
    try:
        complex_0 = None
        list_0 = [complex_0, complex_0, complex_0, complex_0, complex_0, complex_0]
        action_module_0 = module_0.ActionModule(*list_0)
        action_module_1 = module_0.ActionModule(*list_0)
        var_0 = action_module_0.get_distribution(list_0)
    except BaseException:
        pass

def test_case_8():
    try:
        complex_0 = None
        list_0 = [complex_0, complex_0, complex_0, complex_0, complex_0, complex_0]
        action_module_0 = module_0.ActionModule(*list_0)
        action_module_1 = module_0.ActionModule(*list_0)
        int_0 = 1445
        var_0 = action_module_1.validate_reboot(int_0)
    except BaseException:
        pass

def test_case_9():
    try:
        list_0 = []
        timed_out_exception_0 = module_0.TimedOutException(*list_0)
        complex_0 = None
        list_1 = [complex_0, complex_0, complex_0, complex_0, complex_0, complex_0]
        action_module_0 = module_0.ActionModule(*list_1)
        action_module_1 = module_0.ActionModule(*list_1)
        list_2 = [list_1, action_module_1]
        var_0 = action_module_0.get_shutdown_command_args(list_2)
    except BaseException:
        pass

def test_case_10():
    try:
        complex_0 = None
        list_0 = [complex_0, complex_0, complex_0, complex_0, complex_0, complex_0]
        action_module_0 = module_0.ActionModule(*list_0)
        action_module_1 = module_0.ActionModule(*list_0)
        float_0 = -1086.63741
        var_0 = action_module_0.check_boot_time(float_0, action_module_0)
    except BaseException:
        pass

def test_case_11():
    try:
        list_0 = []
        timed_out_exception_0 = module_0.TimedOutException(*list_0)
        complex_0 = None
        list_1 = [complex_0, complex_0, complex_0, complex_0, complex_0, complex_0]
        action_module_0 = module_0.ActionModule(*list_1)
        float_0 = 0.1
        list_2 = [float_0, list_0]
        var_0 = action_module_0.perform_reboot(float_0, list_2)
    except BaseException:
        pass

def test_case_12():
    try:
        list_0 = []
        timed_out_exception_0 = module_0.TimedOutException(*list_0)
        complex_0 = None
        list_1 = [complex_0, complex_0, complex_0, complex_0, complex_0, complex_0]
        action_module_0 = module_0.ActionModule(*list_1)
        float_0 = -5426.5604
        bool_0 = True
        var_0 = action_module_0.do_until_success_or_timeout(timed_out_exception_0, float_0, bool_0, list_0)
    except BaseException:
        pass

def test_case_13():
    try:
        list_0 = []
        timed_out_exception_0 = module_0.TimedOutException(*list_0)
        complex_0 = None
        list_1 = [complex_0, complex_0, complex_0, complex_0, complex_0, complex_0]
        action_module_0 = module_0.ActionModule(*list_1)
        float_0 = 8.682
        bool_0 = False
        var_0 = action_module_0.deprecated_args()
        var_1 = action_module_0.do_until_success_or_timeout(timed_out_exception_0, float_0, bool_0, list_0)
    except BaseException:
        pass