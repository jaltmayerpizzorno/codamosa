# Automatically generated by Pynguin.
import ansible.parsing.mod_args as module_0

def test_case_0():
    try:
        str_0 = '\n<cO>kS\x0cg.&*['
        module_args_parser_0 = module_0.ModuleArgsParser(str_0)
    except BaseException:
        pass

def test_case_1():
    try:
        module_args_parser_0 = module_0.ModuleArgsParser()
        var_0 = module_args_parser_0.parse()
    except BaseException:
        pass

def test_case_2():
    try:
        str_0 = 'copy'
        str_1 = {str_0: str_0}
        module_args_parser_0 = module_0.ModuleArgsParser(str_1)
        var_0 = module_args_parser_0.parse()
    except BaseException:
        pass

def test_case_3():
    try:
        str_0 = '\n    Unit test for method parse of class ModulergParser\n    '
        str_1 = 'action'
        str_2 = 'copy'
        str_3 = 'B'
        str_4 = {str_1: str_2}
        module_args_parser_0 = module_0.ModuleArgsParser(str_4)
        var_0 = module_args_parser_0.parse()
        str_5 = {str_2: var_0, str_3: str_0}
        module_args_parser_1 = module_0.ModuleArgsParser(str_5)
        list_0 = [str_1, var_0]
        var_1 = module_args_parser_1.parse(list_0)
    except BaseException:
        pass

def test_case_4():
    try:
        str_0 = 'test1'
        var_0 = dict(chdir=str_0)
        var_1 = dict(name=str_0, chdir=str_0, command=str_0, args=var_0)
        module_args_parser_0 = module_0.ModuleArgsParser(var_1)
        var_2 = module_args_parser_0.parse()
        str_1 = 'c6\x0cH|+FwN\\&~>#$a'
        var_3 = module_args_parser_0.parse(str_1)
    except BaseException:
        pass

def test_case_5():
    try:
        str_0 = 'cop\x0by'
        str_1 = {str_0: str_0}
        module_args_parser_0 = module_0.ModuleArgsParser(str_1)
        var_0 = module_args_parser_0.parse()
    except BaseException:
        pass

def test_case_6():
    try:
        str_0 = 'action'
        str_1 = 'moul'
        str_2 = 'XrD'
        str_3 = 'copy'
        str_4 = 'b'
        module_args_parser_0 = module_0.ModuleArgsParser()
        str_5 = {str_1: str_3, str_2: str_4, str_0: str_4}
        module_args_parser_1 = module_0.ModuleArgsParser(str_5)
        var_0 = module_args_parser_1.parse()
        str_6 = {str_0: str_5}
        module_args_parser_2 = module_0.ModuleArgsParser(str_6)
        var_1 = module_args_parser_2.parse()
    except BaseException:
        pass

def test_case_7():
    try:
        str_0 = 'shell echo hi'
        bool_0 = False
        str_1 = 'localhost'
        var_0 = dict(module=str_0, _ansible_no_log=bool_0, delegate_to=str_1)
        str_2 = 'shell'
        str_3 = '127.0.0.1'
        var_1 = dict(module=str_2, _ansible_no_log=bool_0, delegate_to=str_3)
        str_4 = 'echo hi'
        var_2 = dict(action=var_0, local_action=var_1, shell=str_4, delegate_to=str_1, _ansible_no_log=bool_0)
        module_args_parser_0 = module_0.ModuleArgsParser(var_2)
        var_3 = module_args_parser_0.parse()
    except BaseException:
        pass

def test_case_8():
    try:
        str_0 = 'test1'
        var_0 = dict(name=str_0, chdir=str_0, command=str_0, args=str_0)
        module_args_parser_0 = module_0.ModuleArgsParser(var_0)
        var_1 = module_args_parser_0.parse()
    except BaseException:
        pass

def test_case_9():
    try:
        str_0 = 'action'
        str_1 = 'shell eche hi'
        str_2 = {str_0: str_1}
        var_0 = None
        module_args_parser_0 = module_0.ModuleArgsParser(str_2, var_0)
        var_1 = module_args_parser_0.parse()
        str_3 = {str_0: module_args_parser_0, var_0: str_0}
        module_args_parser_1 = module_0.ModuleArgsParser(str_3, var_0)
        var_2 = module_args_parser_1.parse()
    except BaseException:
        pass

def test_case_10():
    try:
        str_0 = 'shelgkl echo hi'
        bool_0 = False
        str_1 = 'localhost'
        var_0 = dict(module=str_0, _ansible_no_log=bool_0, delegate_to=str_1)
        str_2 = 'shell'
        str_3 = '127.0.0.1'
        var_1 = dict(module=str_2, _ansible_no_log=bool_0, delegate_to=str_3)
        str_4 = 'echo hi'
        var_2 = dict(action=var_0, local_action=var_1, shell=str_4, delegate_to=str_1, _ansible_no_log=bool_0)
        module_args_parser_0 = module_0.ModuleArgsParser(var_2)
        var_3 = module_args_parser_0.parse()
    except BaseException:
        pass

def test_case_11():
    try:
        str_0 = 'include'
        str_1 = 'action'
        str_2 = 'tasks'
        str_3 = 'task2'
        str_4 = [str_3]
        str_5 = {str_2: str_4}
        str_6 = 'copy src=a dest=b'
        str_7 = {str_0: str_5, str_1: str_6}
        str_8 = 'ansible.posix.modules'
        str_9 = [str_8]
        module_args_parser_0 = module_0.ModuleArgsParser(str_7, str_9)
        var_0 = module_args_parser_0.parse()
    except BaseException:
        pass