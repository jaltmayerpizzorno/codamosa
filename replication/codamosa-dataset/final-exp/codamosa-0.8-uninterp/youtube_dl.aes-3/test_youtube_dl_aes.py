# Automatically generated by Pynguin.
import youtube_dl.aes as module_0
import youtube_dl.utils as module_1

def test_case_0():
    set_0 = set()
    bytes_0 = b'\x05, '
    var_0 = module_0.aes_encrypt(set_0, bytes_0)

def test_case_1():
    bytes_0 = b'\x00\x11"3DUfw\x88\x99\xaa\xbb\xcc\xdd\xee\xff'
    var_0 = module_1.bytes_to_intlist(bytes_0)
    int_0 = 0
    int_1 = [int_0]
    int_2 = 240
    var_1 = int_1 * int_2
    var_2 = module_0.aes_decrypt(var_0, var_1)

def test_case_2():
    str_0 = 'Ex5PE5c1n5n5Z9X79ZMP71VJFTNZeFf8Bw_/p+C/Pk0A/NxNk'
    str_1 = 'PASSWORD'
    int_0 = 24
    var_0 = module_0.aes_decrypt_text(str_0, str_1, int_0)

def test_case_3():
    int_0 = 0
    int_1 = [int_0, int_0, int_0, int_0]
    var_0 = print(int_1)
    var_1 = module_0.inc(int_1)
    var_2 = print(var_1)
    int_2 = 255
    int_3 = [int_2, int_2, int_2, int_2]
    var_3 = print(int_3)
    var_4 = module_0.inc(int_3)
    var_5 = print(var_4)

def test_case_4():
    tuple_0 = ()
    bytes_0 = b'\\&g\x9f\xfd*\xa1\xe1'
    var_0 = module_0.aes_decrypt(tuple_0, bytes_0)

def test_case_5():
    str_0 = '140b41b22a29beb4061bda66b6747e14'
    var_0 = module_1.bytes_to_intlist(str_0)
    str_1 = '4ca00ff4c898d61e1edbf1800618fb28'
    var_1 = module_1.bytes_to_intlist(str_1)
    str_2 = 'Basic CBC mode encryption needs padding.'
    var_2 = module_1.bytes_to_intlist(str_2)
    str_3 = '4ca00ff4c898d61e1edbf1800618fb2828a226d160dad07883d04e008a7897ee2e4b7465d5290d0c0e6c6822236e1daafb94ffe0c5da05d9476be028ad7c1d81'
    var_3 = module_1.bytes_to_intlist(str_3)
    var_4 = module_0.aes_cbc_encrypt(var_2, var_0, var_1)