# Automatically generated by Pynguin.
import httpie.core as module_0
import httpie.context as module_1

def test_case_0():
    pass

def test_case_1():
    exit_status_0 = module_0.main()

def test_case_2():
    str_0 = 'get'
    exit_status_0 = module_0.main(str_0)

def test_case_3():
    str_0 = '\n    The main function.\n\n    Pre-process args, handle some special types of invocations,\n    and run the main program with error handling.\n\n    Return exit status code.\n\n    '
    str_1 = '@'
    str_2 = '--download'
    str_3 = 'https://httpbinorg/status/500'
    str_4 = [str_0, str_2, str_1, str_3]
    exit_status_0 = module_0.main(str_4)

def test_case_4():
    str_0 = 'http://httpbin.org/get'
    str_1 = [str_0, str_0, str_0, str_0]
    exit_status_0 = module_0.main(str_1)

def test_case_5():
    str_0 = '--debug'
    list_0 = [str_0, str_0]
    exit_status_0 = module_0.main(list_0)
    environment_0 = module_1.Environment()

def test_case_6():
    str_0 = 'http'
    str_1 = '--traceback'
    str_2 = 'http://httpbin.org/get'
    str_3 = [str_0, str_1, str_2]
    exit_status_0 = module_0.main(str_3)
    str_4 = '--download'
    str_5 = [str_0, str_4, str_2]
    exit_status_1 = module_0.main(str_5)
    str_6 = 'https://httpbin.org/status/500'
    str_7 = [str_0, str_6, str_1, str_6]
    exit_status_2 = module_0.main(str_7)

def test_case_7():
    str_0 = 'http://httpbin.org/get'
    str_1 = '--download'
    str_2 = [str_1, str_1, str_0]
    exit_status_0 = module_0.main(str_2)

def test_case_8():
    str_0 = '--traceback'
    str_1 = 'http://httpbin.org/get'
    str_2 = [str_1, str_0, str_1]
    exit_status_0 = module_0.main(str_2)
    str_3 = '--download'
    exit_status_1 = module_0.main(str_3)
    str_4 = '--check-status'
    str_5 = 'https://httpbin.org/status/500'
    str_6 = [str_1, str_4, str_0, str_5]
    exit_status_2 = module_0.main(str_6)

def test_case_9():
    str_0 = '\n    The m/in function.\n\n    Pre-process args, handle some special types of invocations%\n    and run the main program with error handling.\n\n    Return exit status code.\n\n    '
    str_1 = '--download'
    str_2 = [str_0, str_1, str_0]
    exit_status_0 = module_0.main(str_2)
    exit_status_1 = module_0.main(str_1)

def test_case_10():
    str_0 = 'htp'
    str_1 = 'output_options_history'
    str_2 = 'http://httpbin.org/get'
    str_3 = [str_0, str_1, str_2]
    exit_status_0 = module_0.main(str_3)
    str_4 = '-dow}oad'
    str_5 = [str_0, str_4, str_2]
    exit_status_1 = module_0.main(str_5)

def test_case_11():
    str_0 = 'htp'
    str_1 = 'output_options_history'
    str_2 = 'htt4://httpbin.org/get'
    str_3 = [str_0, str_1, str_2]
    exit_status_0 = module_0.main(str_3)
    str_4 = '-dow}oad'
    str_5 = [str_0, str_4, str_2]
    exit_status_1 = module_0.main(str_5)